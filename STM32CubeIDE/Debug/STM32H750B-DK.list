
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000284ec  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000037b4  9002878c  9002878c  0004878c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002bf40  9002bf40  0004bf40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002c048  9002c048  00139c4c  2**0
                  CONTENTS
  6 .ARM          00000000  9002c048  9002c048  00139c4c  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002c048  9002c048  00139c4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  9002c048  9002c048  0004c048  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   0000000c  9002c064  9002c064  0004c064  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000160  24000000  9002c070  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000160  9002c1d0  00050160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          000347e0  24005b60  90031bd0  00055b60  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a340  90031bd0  0005a340  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00139c4c  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 000021e8  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 0000008c  902021e8  902021e8  000621e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 000d79d8  90202274  90202274  00062274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00140000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00140000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00139c7a  2**0
                  CONTENTS, READONLY
 21 .debug_line   00079113  00000000  00000000  00139d3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  001b2e4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   001107c3  00000000  00000000  001b2eab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001a123  00000000  00000000  002c366e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 000034f0  00000000  00000000  002dd798  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a133e  00000000  00000000  002e0c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 00008813  00000000  00000000  00481fc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  00049107  00000000  00000000  0048a7d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000a988  00000000  00000000  004d38e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00038bf0  00000000  00000000  004de268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b60 	.word	0x24005b60
900002bc:	00000000 	.word	0x00000000
900002c0:	90028774 	.word	0x90028774

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b64 	.word	0x24005b64
900002dc:	90028774 	.word	0x90028774

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f008 fb55 	bl	90008a58 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f027 fcef 	bl	90027d90 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb59 	bl	90002a68 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002c070 	.word	0x9002c070
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
900003c8:	24005b60 	.word	0x24005b60
  ldr  r3, = _ebss
900003cc:	2403a340 	.word	0x2403a340

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed7 	bl	90002190 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be57 	b.w	90002098 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bed2 	b.w	90002194 <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f027 f931 	bl	900276b0 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f008 f9e0 	bl	90008874 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f008 fa59 	bl	90008990 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f027 f8db 	bl	900276b0 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f008 ffa9 	bl	9000945c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f008 ffa1 	bl	9000945c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f008 ff99 	bl	9000945c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f008 ff91 	bl	9000945c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b7c 	.word	0x24005b7c
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f008 bf7b 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f008 bf72 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f008 bf69 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f008 bf60 	b.w	90009468 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b7c 	.word	0x24005b7c
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f008 bf47 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f008 bf3e 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f008 bf35 	b.w	90009468 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f008 bf2c 	b.w	90009468 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b7c 	.word	0x24005b7c
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f008 bf1c 	b.w	90009470 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f008 bf18 	b.w	90009470 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f008 bf14 	b.w	90009470 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f008 bf10 	b.w	90009470 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039703 	.word	0x24039703

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f027 f820 	bl	9002770c <__assert_func>
900006cc:	240396f8 	.word	0x240396f8
900006d0:	240396fa 	.word	0x240396fa
900006d4:	240396fe 	.word	0x240396fe
900006d8:	24039700 	.word	0x24039700
900006dc:	9002880c 	.word	0x9002880c
900006e0:	90028870 	.word	0x90028870
900006e4:	900288b4 	.word	0x900288b4

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f011 fb36 	bl	90011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be40 	b.w	90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be44 	b.w	90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff29 	bl	90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdee 	b.w	9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bffc 	b.w	9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe6 	b.w	90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdf2 	b.w	90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f010 fe70 	bl	90011454 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f010 bd3e 	b.w	90011200 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f026 ff91 	bl	900276b0 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	240396fc 	.word	0x240396fc
900007e4:	240396fa 	.word	0x240396fa
900007e8:	240396f8 	.word	0x240396f8

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f026 ff65 	bl	9002770c <__assert_func>
90000842:	bf00      	nop
90000844:	24039702 	.word	0x24039702
90000848:	90000675 	.word	0x90000675
9000084c:	24039703 	.word	0x24039703
90000850:	900288fc 	.word	0x900288fc
90000854:	90028934 	.word	0x90028934
90000858:	900288b4 	.word	0x900288b4

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f008 fdf0 	bl	90009468 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f008 fdeb 	bl	90009468 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f008 fde6 	bl	90009468 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f011 fa57 	bl	90011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff4c 	bl	90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f026 feea 	bl	9002770c <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039702 	.word	0x24039702
90000944:	d0000000 	.word	0xd0000000
90000948:	24039703 	.word	0x24039703
9000094c:	900288fc 	.word	0x900288fc
90000950:	90028934 	.word	0x90028934
90000954:	900288b4 	.word	0x900288b4

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f011 fa15 	bl	90011d90 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f011 fa0f 	bl	90011d90 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039704 	.word	0x24039704

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f026 fea4 	bl	9002770c <__assert_func>
900009c4:	90028a60 	.word	0x90028a60
900009c8:	90028a5c 	.word	0x90028a5c
900009cc:	90028abc 	.word	0x90028abc

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f026 fe6b 	bl	900276b0 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f009 fe27 	bl	9000a6c8 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00d fa5b 	bl	9000df94 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f009 ff2a 	bl	9000a958 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b98 	.word	0x24005b98
90000b14:	24005bc4 	.word	0x24005bc4
90000b18:	24005b90 	.word	0x24005b90
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b94 	.word	0x24005b94
90000b24:	24005bb4 	.word	0x24005bb4
90000b28:	24005bc0 	.word	0x24005bc0
90000b2c:	24005bbc 	.word	0x24005bbc
90000b30:	24005bc8 	.word	0x24005bc8
90000b34:	24005bcc 	.word	0x24005bcc
90000b38:	24005bb8 	.word	0x24005bb8
90000b3c:	240093c4 	.word	0x240093c4
90000b40:	24005bd4 	.word	0x24005bd4
90000b44:	24005bd0 	.word	0x24005bd0
90000b48:	24005bb0 	.word	0x24005bb0
90000b4c:	24005b8c 	.word	0x24005b8c

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f026 fd86 	bl	9002770c <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	90028b0c 	.word	0x90028b0c
90000c08:	90028b20 	.word	0x90028b20
90000c0c:	90028abc 	.word	0x90028abc

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f009 fce1 	bl	9000a6c8 <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f009 fdef 	bl	9000a958 <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f026 fcb7 	bl	9002770c <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bb4 	.word	0x24005bb4
90000db4:	24005bc4 	.word	0x24005bc4
90000db8:	24005b98 	.word	0x24005b98
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc0 	.word	0x24005bc0
90000dc4:	24005b94 	.word	0x24005b94
90000dc8:	24005bc8 	.word	0x24005bc8
90000dcc:	240093c4 	.word	0x240093c4
90000dd0:	24005bcc 	.word	0x24005bcc
90000dd4:	24005bbc 	.word	0x24005bbc
90000dd8:	24005bb8 	.word	0x24005bb8
90000ddc:	90028b0c 	.word	0x90028b0c
90000de0:	90028b20 	.word	0x90028b20
90000de4:	90028abc 	.word	0x90028abc
90000de8:	24005bd0 	.word	0x24005bd0
90000dec:	24005b90 	.word	0x24005b90
90000df0:	24005bb0 	.word	0x24005bb0
90000df4:	24005b8c 	.word	0x24005b8c

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f026 fbee 	bl	9002770c <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f026 fbe6 	bl	9002770c <__assert_func>
90000f40:	90028b0c 	.word	0x90028b0c
90000f44:	90028b20 	.word	0x90028b20
90000f48:	90028abc 	.word	0x90028abc
90000f4c:	90028b64 	.word	0x90028b64
90000f50:	90028bb0 	.word	0x90028bb0

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f026 fb35 	bl	9002770c <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f026 fb2c 	bl	9002770c <__assert_func>
900010b4:	90028b64 	.word	0x90028b64
900010b8:	90028be4 	.word	0x90028be4
900010bc:	90028abc 	.word	0x90028abc
900010c0:	90028b0c 	.word	0x90028b0c
900010c4:	90028b20 	.word	0x90028b20

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00c fefc 	bl	9000def4 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	90028d08 	.word	0x90028d08
9000110c:	24005bd4 	.word	0x24005bd4

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f026 fd60 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f026 fd55 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f026 fd48 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f026 fd2d 	bl	90027c2c <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f026 fd1e 	bl	90027c2c <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f026 fced 	bl	90027c2c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f026 fcae 	bl	90027c2c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f026 fbf3 	bl	90027c2c <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	90028c40 	.word	0x90028c40
90001460:	90028cf8 	.word	0x90028cf8
90001464:	90028cf0 	.word	0x90028cf0
90001468:	90028ce8 	.word	0x90028ce8
9000146c:	90028cd0 	.word	0x90028cd0
90001470:	90028cd8 	.word	0x90028cd8
90001474:	90028ce0 	.word	0x90028ce0
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f026 fbce 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f026 fbc4 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f026 fbb8 	bl	90027c2c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f026 fbab 	bl	90027c2c <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f026 f8e3 	bl	9002770c <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f026 f8d9 	bl	9002770c <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f026 f8d2 	bl	9002770c <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f026 f8c8 	bl	9002770c <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f026 f8be 	bl	9002770c <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	90028c40 	.word	0x90028c40
9000159c:	90028cf8 	.word	0x90028cf8
900015a0:	90028cf0 	.word	0x90028cf0
900015a4:	90028ce8 	.word	0x90028ce8
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	90028b0c 	.word	0x90028b0c
900015b0:	90028b20 	.word	0x90028b20
900015b4:	90028abc 	.word	0x90028abc
900015b8:	90028c48 	.word	0x90028c48
900015bc:	90028c64 	.word	0x90028c64
900015c0:	90028cc4 	.word	0x90028cc4
900015c4:	90028cac 	.word	0x90028cac
900015c8:	90028c94 	.word	0x90028c94

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bac 	.word	0x24005bac

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f009 b88e 	b.w	9000a7bc <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc0 	.word	0x24005bc0
900016a4:	24005bcc 	.word	0x24005bcc
900016a8:	24005bc8 	.word	0x24005bc8

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f009 f85d 	bl	9000a7c4 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f009 f816 	bl	9000a74c <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00c bc63 	b.w	9000dffc <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd0 	.word	0x24005bd0
9000173c:	24000008 	.word	0x24000008
90001740:	24005b94 	.word	0x24005b94
90001744:	24005b98 	.word	0x24005b98
90001748:	24005bb0 	.word	0x24005bb0
9000174c:	24005bc4 	.word	0x24005bc4
90001750:	24005bd4 	.word	0x24005bd4

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bbc 	.word	0x24005bbc

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005b98 	.word	0x24005b98
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bac 	.word	0x24005bac
900017e0:	24005bb4 	.word	0x24005bb4
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00c bbee 	b.w	9000dffc <osSemaphoreRelease>
90001820:	24005b90 	.word	0x24005b90
90001824:	24005bac 	.word	0x24005bac
90001828:	24005b98 	.word	0x24005b98
9000182c:	24005b8c 	.word	0x24005b8c
90001830:	24005bd4 	.word	0x24005bd4

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00c fb5a 	bl	9000def4 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00c fc02 	bl	9000e054 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f025 ff54 	bl	9002770c <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f025 ff4e 	bl	9002770c <__assert_func>
90001870:	24005bdc 	.word	0x24005bdc
90001874:	24005bd8 	.word	0x24005bd8
90001878:	90028d44 	.word	0x90028d44
9000187c:	90028d90 	.word	0x90028d90
90001880:	90028dc0 	.word	0x90028dc0
90001884:	90028e04 	.word	0x90028e04

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00c bb80 	b.w	9000df94 <osSemaphoreAcquire>
90001894:	24005bdc 	.word	0x24005bdc

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00c bbae 	b.w	9000dffc <osSemaphoreRelease>
900018a0:	24005bdc 	.word	0x24005bdc

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00c bb73 	b.w	9000df94 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005bdc 	.word	0x24005bdc

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00c bba0 	b.w	9000dffc <osSemaphoreRelease>
900018bc:	24005bdc 	.word	0x24005bdc

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00c bc01 	b.w	9000e0d0 <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005bd8 	.word	0x24005bd8
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00c fc35 	bl	9000e154 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00c fc2e 	bl	9000e154 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005bd8 	.word	0x24005bd8

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	90028fa4 	.word	0x90028fa4
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	2400935c 	.word	0x2400935c
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f025 fe85 	bl	900276b0 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	90028fa4 	.word	0x90028fa4
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00c fa52 	bl	9000de68 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00c ba62 	b.w	9000deb0 <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00c ba53 	b.w	9000deb0 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b90 	.word	0x24005b90
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b90 	.word	0x24005b90
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b8c 	.word	0x24005b8c

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f025 fddd 	bl	9002770c <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	90028e48 	.word	0x90028e48
90001b68:	90028e64 	.word	0x90028e64
90001b6c:	90028eb0 	.word	0x90028eb0

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f025 fd00 	bl	9002770c <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f025 fcfa 	bl	9002770c <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f025 fcf3 	bl	9002770c <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	90028e48 	.word	0x90028e48
90001d44:	90028ef4 	.word	0x90028ef4
90001d48:	90028eb0 	.word	0x90028eb0
90001d4c:	90028e64 	.word	0x90028e64
90001d50:	90028f40 	.word	0x90028f40
90001d54:	90028f5c 	.word	0x90028f5c

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039704 	.word	0x24039704
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b90 	.word	0x24005b90
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b8c 	.word	0x24005b8c

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f010 f8fb 	bl	90012018 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00b ffd5 	bl	9000dde8 <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	90028fa4 	.word	0x90028fa4

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2038      	movs	r0, #56	; 0x38
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ec4:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ec8:	3008      	adds	r0, #8
90001eca:	4770      	bx	lr

90001ecc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ecc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ed0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ed4:	3008      	adds	r0, #8
90001ed6:	4770      	bx	lr

90001ed8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed8:	2001      	movs	r0, #1
90001eda:	4770      	bx	lr

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001edc:	f242 6028 	movw	r0, #9768	; 0x2628
90001ee0:	4770      	bx	lr
90001ee2:	bf00      	nop

90001ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee4:	f242 6328 	movw	r3, #9768	; 0x2628
90001ee8:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001eec:	3008      	adds	r0, #8
90001eee:	4770      	bx	lr

90001ef0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ef0:	f242 6328 	movw	r3, #9768	; 0x2628
90001ef4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef8:	3008      	adds	r0, #8
90001efa:	4770      	bx	lr

90001efc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001efc:	2001      	movs	r0, #1
90001efe:	4770      	bx	lr

90001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001f00:	2010      	movs	r0, #16
90001f02:	4770      	bx	lr

90001f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f0c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f10:	3008      	adds	r0, #8
90001f12:	4770      	bx	lr

90001f14 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f14:	4608      	mov	r0, r1
90001f16:	f001 bf6f 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f1a:	bf00      	nop

90001f1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f1c:	4b03      	ldr	r3, [pc, #12]	; (90001f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f1e:	b510      	push	{r4, lr}
90001f20:	4604      	mov	r4, r0
90001f22:	6003      	str	r3, [r0, #0]
90001f24:	f00e fec5 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f28:	4620      	mov	r0, r4
90001f2a:	bd10      	pop	{r4, pc}
90001f2c:	9002905c 	.word	0x9002905c

90001f30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f30:	4b05      	ldr	r3, [pc, #20]	; (90001f48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f32:	b510      	push	{r4, lr}
90001f34:	4604      	mov	r4, r0
90001f36:	6003      	str	r3, [r0, #0]
90001f38:	f00e febb 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f3c:	2140      	movs	r1, #64	; 0x40
90001f3e:	4620      	mov	r0, r4
90001f40:	f025 fbb6 	bl	900276b0 <_ZdlPvj>
90001f44:	4620      	mov	r0, r4
90001f46:	bd10      	pop	{r4, pc}
90001f48:	9002905c 	.word	0x9002905c

90001f4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f4c:	4b03      	ldr	r3, [pc, #12]	; (90001f5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f4e:	b510      	push	{r4, lr}
90001f50:	4604      	mov	r4, r0
90001f52:	6003      	str	r3, [r0, #0]
90001f54:	f00e fead 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f58:	4620      	mov	r0, r4
90001f5a:	bd10      	pop	{r4, pc}
90001f5c:	90029028 	.word	0x90029028

90001f60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f60:	4b06      	ldr	r3, [pc, #24]	; (90001f7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f62:	b510      	push	{r4, lr}
90001f64:	4604      	mov	r4, r0
90001f66:	6003      	str	r3, [r0, #0]
90001f68:	f00e fea3 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f6c:	f242 6130 	movw	r1, #9776	; 0x2630
90001f70:	4620      	mov	r0, r4
90001f72:	f025 fb9d 	bl	900276b0 <_ZdlPvj>
90001f76:	4620      	mov	r0, r4
90001f78:	bd10      	pop	{r4, pc}
90001f7a:	bf00      	nop
90001f7c:	90029028 	.word	0x90029028

90001f80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f80:	4b03      	ldr	r3, [pc, #12]	; (90001f90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f82:	b510      	push	{r4, lr}
90001f84:	4604      	mov	r4, r0
90001f86:	6003      	str	r3, [r0, #0]
90001f88:	f00e fe93 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f8c:	4620      	mov	r0, r4
90001f8e:	bd10      	pop	{r4, pc}
90001f90:	90028ff4 	.word	0x90028ff4

90001f94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f94:	4b05      	ldr	r3, [pc, #20]	; (90001fac <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f96:	b510      	push	{r4, lr}
90001f98:	4604      	mov	r4, r0
90001f9a:	6003      	str	r3, [r0, #0]
90001f9c:	f00e fe89 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fa0:	2118      	movs	r1, #24
90001fa2:	4620      	mov	r0, r4
90001fa4:	f025 fb84 	bl	900276b0 <_ZdlPvj>
90001fa8:	4620      	mov	r0, r4
90001faa:	bd10      	pop	{r4, pc}
90001fac:	90028ff4 	.word	0x90028ff4

90001fb0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fb0:	b510      	push	{r4, lr}
90001fb2:	4604      	mov	r4, r0
90001fb4:	490c      	ldr	r1, [pc, #48]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x38>)
90001fb6:	4a0d      	ldr	r2, [pc, #52]	; (90001fec <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb8:	f242 605c 	movw	r0, #9820	; 0x265c
90001fbc:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fc0:	6021      	str	r1, [r4, #0]
90001fc2:	4420      	add	r0, r4
90001fc4:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
90001fc8:	f00e fe73 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fcc:	4620      	mov	r0, r4
90001fce:	4b08      	ldr	r3, [pc, #32]	; (90001ff0 <_ZN12FrontendHeapD1Ev+0x40>)
90001fd0:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fd4:	f00e fe6d 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd8:	4620      	mov	r0, r4
90001fda:	4b06      	ldr	r3, [pc, #24]	; (90001ff4 <_ZN12FrontendHeapD1Ev+0x44>)
90001fdc:	f840 3f14 	str.w	r3, [r0, #20]!
90001fe0:	f00e fe67 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fe4:	4620      	mov	r0, r4
90001fe6:	bd10      	pop	{r4, pc}
90001fe8:	90029090 	.word	0x90029090
90001fec:	9002905c 	.word	0x9002905c
90001ff0:	90029028 	.word	0x90029028
90001ff4:	90028ff4 	.word	0x90028ff4

90001ff8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff8:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ffa:	4c0c      	ldr	r4, [pc, #48]	; (9000202c <__tcf_0+0x34>)
90001ffc:	4a0c      	ldr	r2, [pc, #48]	; (90002030 <__tcf_0+0x38>)
90001ffe:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002002:	490c      	ldr	r1, [pc, #48]	; (90002034 <__tcf_0+0x3c>)
90002004:	480c      	ldr	r0, [pc, #48]	; (90002038 <__tcf_0+0x40>)
90002006:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
9000200a:	6021      	str	r1, [r4, #0]
9000200c:	f00e fe51 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002010:	4620      	mov	r0, r4
90002012:	4b0a      	ldr	r3, [pc, #40]	; (9000203c <__tcf_0+0x44>)
90002014:	f840 3f2c 	str.w	r3, [r0, #44]!
90002018:	f00e fe4b 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000201c:	4620      	mov	r0, r4
9000201e:	4b08      	ldr	r3, [pc, #32]	; (90002040 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002024:	f840 3f14 	str.w	r3, [r0, #20]!
90002028:	f00e be43 	b.w	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000202c:	24005be4 	.word	0x24005be4
90002030:	9002905c 	.word	0x9002905c
90002034:	90029090 	.word	0x90029090
90002038:	24008240 	.word	0x24008240
9000203c:	90029028 	.word	0x90029028
90002040:	90028ff4 	.word	0x90028ff4

90002044 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002044:	b510      	push	{r4, lr}
90002046:	4604      	mov	r4, r0
90002048:	4a0f      	ldr	r2, [pc, #60]	; (90002088 <_ZN12FrontendHeapD0Ev+0x44>)
9000204a:	4910      	ldr	r1, [pc, #64]	; (9000208c <_ZN12FrontendHeapD0Ev+0x48>)
9000204c:	f242 605c 	movw	r0, #9820	; 0x265c
90002050:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002054:	6021      	str	r1, [r4, #0]
90002056:	4420      	add	r0, r4
90002058:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
9000205c:	f00e fe29 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002060:	4620      	mov	r0, r4
90002062:	4b0b      	ldr	r3, [pc, #44]	; (90002090 <_ZN12FrontendHeapD0Ev+0x4c>)
90002064:	f840 3f2c 	str.w	r3, [r0, #44]!
90002068:	f00e fe23 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000206c:	4b09      	ldr	r3, [pc, #36]	; (90002094 <_ZN12FrontendHeapD0Ev+0x50>)
9000206e:	4620      	mov	r0, r4
90002070:	f840 3f14 	str.w	r3, [r0, #20]!
90002074:	f00e fe1d 	bl	90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002078:	4620      	mov	r0, r4
9000207a:	f242 71fc 	movw	r1, #10236	; 0x27fc
9000207e:	f025 fb17 	bl	900276b0 <_ZdlPvj>
90002082:	4620      	mov	r0, r4
90002084:	bd10      	pop	{r4, pc}
90002086:	bf00      	nop
90002088:	9002905c 	.word	0x9002905c
9000208c:	90029090 	.word	0x90029090
90002090:	90029028 	.word	0x90029028
90002094:	90028ff4 	.word	0x90028ff4

90002098 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000209c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
9000209e:	2400      	movs	r4, #0
900020a0:	f001 fa76 	bl	90003590 <_ZN14BitmapDatabase11getInstanceEv>
900020a4:	4605      	mov	r5, r0
900020a6:	f001 fa77 	bl	90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020aa:	4623      	mov	r3, r4
900020ac:	4601      	mov	r1, r0
900020ae:	4622      	mov	r2, r4
900020b0:	4628      	mov	r0, r5
900020b2:	9400      	str	r4, [sp, #0]
900020b4:	f017 fb54 	bl	90019760 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b8:	4b29      	ldr	r3, [pc, #164]	; (90002160 <touchgfx_init+0xc8>)
900020ba:	4a2a      	ldr	r2, [pc, #168]	; (90002164 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020bc:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020be:	4c2a      	ldr	r4, [pc, #168]	; (90002168 <touchgfx_init+0xd0>)
900020c0:	601a      	str	r2, [r3, #0]
900020c2:	f002 f875 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020c6:	4829      	ldr	r0, [pc, #164]	; (9000216c <touchgfx_init+0xd4>)
900020c8:	f017 fab2 	bl	90019630 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020cc:	6823      	ldr	r3, [r4, #0]
900020ce:	f3bf 8f5b 	dmb	ish
900020d2:	07db      	lsls	r3, r3, #31
900020d4:	d505      	bpl.n	900020e2 <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020d6:	4826      	ldr	r0, [pc, #152]	; (90002170 <touchgfx_init+0xd8>)
}
900020d8:	b002      	add	sp, #8
900020da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020de:	f7fe bbf7 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020e2:	4620      	mov	r0, r4
900020e4:	f025 fae6 	bl	900276b4 <__cxa_guard_acquire>
900020e8:	2800      	cmp	r0, #0
900020ea:	d0f4      	beq.n	900020d6 <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020ec:	4d21      	ldr	r5, [pc, #132]	; (90002174 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020ee:	4f22      	ldr	r7, [pc, #136]	; (90002178 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020f0:	4b22      	ldr	r3, [pc, #136]	; (9000217c <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020f2:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020f6:	f107 0644 	add.w	r6, r7, #68	; 0x44
          screenStorage(scr),
900020fa:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020fe:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002100:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002102:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002104:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002106:	f8c5 8008 	str.w	r8, [r5, #8]
9000210a:	f00e fdd3 	bl	90010cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000210e:	4b1c      	ldr	r3, [pc, #112]	; (90002180 <touchgfx_init+0xe8>)
90002110:	4640      	mov	r0, r8
90002112:	616b      	str	r3, [r5, #20]
90002114:	f00e fdce 	bl	90010cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002118:	4b1a      	ldr	r3, [pc, #104]	; (90002184 <touchgfx_init+0xec>)
9000211a:	4638      	mov	r0, r7
9000211c:	62eb      	str	r3, [r5, #44]	; 0x2c
9000211e:	f00e fdc9 	bl	90010cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002122:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
90002126:	4a18      	ldr	r2, [pc, #96]	; (90002188 <touchgfx_init+0xf0>)
90002128:	f203 609c 	addw	r0, r3, #1692	; 0x69c
9000212c:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
90002130:	f004 fa22 	bl	90006578 <_ZN5ModelC1Ev>
90002134:	462a      	mov	r2, r5
90002136:	f107 0140 	add.w	r1, r7, #64	; 0x40
9000213a:	4630      	mov	r0, r6
9000213c:	f004 fa12 	bl	90006564 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002140:	4630      	mov	r0, r6
90002142:	f001 fe59 	bl	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
90002146:	4811      	ldr	r0, [pc, #68]	; (9000218c <touchgfx_init+0xf4>)
90002148:	f025 fafe 	bl	90027748 <atexit>
9000214c:	4620      	mov	r0, r4
9000214e:	f025 fabd 	bl	900276cc <__cxa_guard_release>
90002152:	4807      	ldr	r0, [pc, #28]	; (90002170 <touchgfx_init+0xd8>)
}
90002154:	b002      	add	sp, #8
90002156:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
9000215a:	f7fe bbb9 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000215e:	bf00      	nop
90002160:	24039768 	.word	0x24039768
90002164:	24009214 	.word	0x24009214
90002168:	24005be0 	.word	0x24005be0
9000216c:	2400002c 	.word	0x2400002c
90002170:	2400918c 	.word	0x2400918c
90002174:	24005be4 	.word	0x24005be4
90002178:	24008240 	.word	0x24008240
9000217c:	90029090 	.word	0x90029090
90002180:	90028ff4 	.word	0x90028ff4
90002184:	90029028 	.word	0x90029028
90002188:	9002905c 	.word	0x9002905c
9000218c:	90001ff9 	.word	0x90001ff9

90002190 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002190:	4770      	bx	lr
90002192:	bf00      	nop

90002194 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002194:	4801      	ldr	r0, [pc, #4]	; (9000219c <touchgfx_taskEntry+0x8>)
90002196:	f7fe bb61 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
9000219a:	bf00      	nop
9000219c:	2400918c 	.word	0x2400918c

900021a0 <_GLOBAL__sub_I_touchgfx_init>:
}
900021a0:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
900021a2:	4b25      	ldr	r3, [pc, #148]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0x98>)
900021a4:	4c25      	ldr	r4, [pc, #148]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
900021a6:	4e26      	ldr	r6, [pc, #152]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a8:	4d26      	ldr	r5, [pc, #152]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021aa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021ac:	4630      	mov	r0, r6
900021ae:	f7ff fe29 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021b2:	4628      	mov	r0, r5
900021b4:	f01b fdac 	bl	9001dd10 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b8:	4b23      	ldr	r3, [pc, #140]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021ba:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021bc:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021c0:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021c4:	62da      	str	r2, [r3, #44]	; 0x2c
900021c6:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c8:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021ca:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021ce:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021d0:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021d2:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021d6:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021dc:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021e0:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021e4:	8020      	strh	r0, [r4, #0]
900021e6:	4c1c      	ldr	r4, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e8:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021ec:	481c      	ldr	r0, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021ee:	8021      	strh	r1, [r4, #0]
900021f0:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021f2:	4c1c      	ldr	r4, [pc, #112]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021f4:	491c      	ldr	r1, [pc, #112]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021f6:	481d      	ldr	r0, [pc, #116]	; (9000226c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f8:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002200:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002204:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
90002206:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
9000220a:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
9000220e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
90002212:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
90002216:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
9000221a:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
9000221e:	7022      	strb	r2, [r4, #0]
90002220:	6019      	str	r1, [r3, #0]
90002222:	4913      	ldr	r1, [pc, #76]	; (90002270 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
90002224:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002228:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
9000222c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002230:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002232:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
90002236:	bd70      	pop	{r4, r5, r6, pc}
90002238:	900287fc 	.word	0x900287fc
9000223c:	240083e0 	.word	0x240083e0
90002240:	240083e4 	.word	0x240083e4
90002244:	24009218 	.word	0x24009218
90002248:	2400918c 	.word	0x2400918c
9000224c:	01000001 	.word	0x01000001
90002250:	24039704 	.word	0x24039704
90002254:	240396f8 	.word	0x240396f8
90002258:	240396fe 	.word	0x240396fe
9000225c:	240396fa 	.word	0x240396fa
90002260:	24039700 	.word	0x24039700
90002264:	240396fc 	.word	0x240396fc
90002268:	9002898c 	.word	0x9002898c
9000226c:	01010000 	.word	0x01010000
90002270:	900287d4 	.word	0x900287d4

90002274 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002274:	4801      	ldr	r0, [pc, #4]	; (9000227c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002276:	f7ff bb49 	b.w	9000190c <_ZN8STM32DMAD1Ev>
9000227a:	bf00      	nop
9000227c:	240083e4 	.word	0x240083e4

90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002280:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002284:	b112      	cbz	r2, 9000228c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002286:	6803      	ldr	r3, [r0, #0]
90002288:	695b      	ldr	r3, [r3, #20]
9000228a:	4718      	bx	r3
        }
    }
9000228c:	4770      	bx	lr
9000228e:	bf00      	nop

90002290 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002290:	2000      	movs	r0, #0
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002294:	8081      	strh	r1, [r0, #4]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002298:	80c1      	strh	r1, [r0, #6]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
9000229c:	8101      	strh	r1, [r0, #8]
    }
9000229e:	4770      	bx	lr

900022a0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
900022a0:	8141      	strh	r1, [r0, #10]
    }
900022a2:	4770      	bx	lr

900022a4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022b0:	4770      	bx	lr
900022b2:	bf00      	nop

900022b4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022b4:	4770      	bx	lr
900022b6:	bf00      	nop

900022b8 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b8:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022bc:	6803      	ldr	r3, [r0, #0]
900022be:	eba2 020c 	sub.w	r2, r2, ip
900022c2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c8:	eba1 010c 	sub.w	r1, r1, ip
900022cc:	b212      	sxth	r2, r2
900022ce:	b209      	sxth	r1, r1
900022d0:	4718      	bx	r3
900022d2:	bf00      	nop

900022d4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022d4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022da:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022de:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022e2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022e6:	6010      	str	r0, [r2, #0]
    }
900022e8:	4770      	bx	lr
900022ea:	bf00      	nop

900022ec <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022ec:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022f0:	b11a      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022f2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022f6:	b102      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f8:	6018      	str	r0, [r3, #0]
        }
    }
900022fa:	4770      	bx	lr

900022fc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022fc:	2000      	movs	r0, #0
900022fe:	4770      	bx	lr

90002300 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002300:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002302:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002304:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002306:	809a      	strh	r2, [r3, #4]
    }
90002308:	4770      	bx	lr
9000230a:	bf00      	nop

9000230c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002310:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002318:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
9000231c:	4770      	bx	lr
9000231e:	bf00      	nop

90002320 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002320:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002324:	688a      	ldr	r2, [r1, #8]
90002326:	f8c0 c000 	str.w	ip, [r0]
9000232a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
9000232c:	4770      	bx	lr
9000232e:	bf00      	nop

90002330 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002330:	2200      	movs	r2, #0
90002332:	6002      	str	r2, [r0, #0]
90002334:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002336:	4770      	bx	lr

90002338 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002338:	2000      	movs	r0, #0
9000233a:	4770      	bx	lr

9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000233c:	4b03      	ldr	r3, [pc, #12]	; (9000234c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
9000233e:	2290      	movs	r2, #144	; 0x90
90002340:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
90002344:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002348:	4770      	bx	lr
9000234a:	bf00      	nop
9000234c:	e000e100 	.word	0xe000e100

90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	4a09      	ldr	r2, [pc, #36]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002352:	490a      	ldr	r1, [pc, #40]	; (9000237c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002354:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002356:	480a      	ldr	r0, [pc, #40]	; (90002380 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002358:	f3c3 030a 	ubfx	r3, r3, #0, #11
9000235c:	3b01      	subs	r3, #1
9000235e:	b29b      	uxth	r3, r3
90002360:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002362:	6911      	ldr	r1, [r2, #16]
90002364:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002368:	3901      	subs	r1, #1
9000236a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
9000236c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
9000236e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002370:	f043 0301 	orr.w	r3, r3, #1
90002374:	6353      	str	r3, [r2, #52]	; 0x34
}
90002376:	4770      	bx	lr
90002378:	50001000 	.word	0x50001000
9000237c:	2400929e 	.word	0x2400929e
90002380:	2400929c 	.word	0x2400929c

90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002384:	4b01      	ldr	r3, [pc, #4]	; (9000238c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002386:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
9000238a:	4770      	bx	lr
9000238c:	50001000 	.word	0x50001000

90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002390:	4b02      	ldr	r3, [pc, #8]	; (9000239c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002392:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002394:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002398:	625a      	str	r2, [r3, #36]	; 0x24
}
9000239a:	4770      	bx	lr
9000239c:	50001000 	.word	0x50001000

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
900023a0:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
900023a4:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
900023a6:	4770      	bx	lr

900023a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a8:	4770      	bx	lr
900023aa:	bf00      	nop

900023ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023ac:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023b0:	4611      	mov	r1, r2
900023b2:	6840      	ldr	r0, [r0, #4]
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	68db      	ldr	r3, [r3, #12]
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023bc:	b510      	push	{r4, lr}
900023be:	4604      	mov	r4, r0
900023c0:	2148      	movs	r1, #72	; 0x48
900023c2:	f025 f975 	bl	900276b0 <_ZdlPvj>
900023c6:	4620      	mov	r0, r4
900023c8:	bd10      	pop	{r4, pc}
900023ca:	bf00      	nop

900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023cc:	b911      	cbnz	r1, 900023d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023ce:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023d2:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023d4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023d6:	4a03      	ldr	r2, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d8:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023dc:	4b02      	ldr	r3, [pc, #8]	; (900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023de:	4803      	ldr	r0, [pc, #12]	; (900023ec <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023e0:	f025 f994 	bl	9002770c <__assert_func>
900023e4:	900290b0 	.word	0x900290b0
900023e8:	9002909c 	.word	0x9002909c
900023ec:	9002923c 	.word	0x9002923c

900023f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023f0:	b921      	cbnz	r1, 900023fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023f2:	6840      	ldr	r0, [r0, #4]
900023f4:	4611      	mov	r1, r2
900023f6:	6803      	ldr	r3, [r0, #0]
900023f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023fa:	4718      	bx	r3
        assert(handle < no_streams);
900023fc:	4b03      	ldr	r3, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023fe:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002402:	4a03      	ldr	r2, [pc, #12]	; (90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002404:	4803      	ldr	r0, [pc, #12]	; (90002414 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002406:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002408:	f025 f980 	bl	9002770c <__assert_func>
9000240c:	9002909c 	.word	0x9002909c
90002410:	90029280 	.word	0x90029280
90002414:	9002923c 	.word	0x9002923c

90002418 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002418:	b909      	cbnz	r1, 9000241e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000241a:	68c0      	ldr	r0, [r0, #12]
9000241c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000241e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002420:	4a02      	ldr	r2, [pc, #8]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002422:	2179      	movs	r1, #121	; 0x79
90002424:	4b02      	ldr	r3, [pc, #8]	; (90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002426:	4803      	ldr	r0, [pc, #12]	; (90002434 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002428:	f025 f970 	bl	9002770c <__assert_func>
9000242c:	90029430 	.word	0x90029430
90002430:	9002909c 	.word	0x9002909c
90002434:	9002923c 	.word	0x9002923c

90002438 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002438:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000243a:	460c      	mov	r4, r1
9000243c:	b949      	cbnz	r1, 90002452 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
9000243e:	4611      	mov	r1, r2
90002440:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
90002442:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
90002444:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
90002446:	681c      	ldr	r4, [r3, #0]
90002448:	4618      	mov	r0, r3
9000244a:	68a3      	ldr	r3, [r4, #8]
    }
9000244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002450:	4718      	bx	r3
        assert(handle < no_streams);
90002452:	4b03      	ldr	r3, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
90002454:	2190      	movs	r1, #144	; 0x90
90002456:	4a03      	ldr	r2, [pc, #12]	; (90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002458:	4803      	ldr	r0, [pc, #12]	; (90002468 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
9000245a:	f025 f957 	bl	9002770c <__assert_func>
9000245e:	bf00      	nop
90002460:	9002909c 	.word	0x9002909c
90002464:	900295e4 	.word	0x900295e4
90002468:	9002923c 	.word	0x9002923c

9000246c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000246c:	b921      	cbnz	r1, 90002478 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
9000246e:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002472:	e9c0 3206 	strd	r3, r2, [r0, #24]
90002476:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002478:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000247a:	4a03      	ldr	r2, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000247c:	2182      	movs	r1, #130	; 0x82
9000247e:	4b03      	ldr	r3, [pc, #12]	; (9000248c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002480:	4803      	ldr	r0, [pc, #12]	; (90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002482:	f025 f943 	bl	9002770c <__assert_func>
90002486:	bf00      	nop
90002488:	900297c0 	.word	0x900297c0
9000248c:	9002909c 	.word	0x9002909c
90002490:	9002923c 	.word	0x9002923c

90002494 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002494:	f00e bef0 	b.w	90011278 <_ZN8touchgfx3HAL10beginFrameEv>

90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002498:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000249c:	b903      	cbnz	r3, 900024a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000249e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900024a0:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
900024a2:	f04f 31ff 	mov.w	r1, #4294967295
900024a6:	4604      	mov	r4, r0
900024a8:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024aa:	f00b fcdd 	bl	9000de68 <osMutexAcquire>
            firstDrawThisFrame = false;
900024ae:	f44f 7380 	mov.w	r3, #256	; 0x100
900024b2:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024b6:	bd10      	pop	{r4, pc}

900024b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b8:	b538      	push	{r3, r4, r5, lr}
900024ba:	460c      	mov	r4, r1
900024bc:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024be:	f04f 31ff 	mov.w	r1, #4294967295
900024c2:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024c4:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c8:	f00b fcce 	bl	9000de68 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024cc:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024ce:	f00b fcef 	bl	9000deb0 <osMutexRelease>
        streams[handle].isActive = false;
900024d2:	2300      	movs	r3, #0
900024d4:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024dc:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024e0:	b90b      	cbnz	r3, 900024e6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024e4:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024e6:	bd38      	pop	{r3, r4, r5, pc}

900024e8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e8:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024ea:	4c1c      	ldr	r4, [pc, #112]	; (9000255c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024ec:	4605      	mov	r5, r0
    HAL::endFrame();
900024ee:	f00e fecf 	bl	90011290 <_ZN8touchgfx3HAL8endFrameEv>
900024f2:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024f6:	b98b      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f8:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024fc:	b973      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024fe:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002500:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002502:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002506:	f00b fd79 	bl	9000dffc <osSemaphoreRelease>
        if (uiHasMutex)
9000250a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000250e:	b9f3      	cbnz	r3, 9000254e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002510:	6868      	ldr	r0, [r5, #4]
90002512:	6803      	ldr	r3, [r0, #0]
}
90002514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002518:	691b      	ldr	r3, [r3, #16]
9000251a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000251c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002520:	69e1      	ldr	r1, [r4, #28]
90002522:	6922      	ldr	r2, [r4, #16]
90002524:	fb00 f303 	mul.w	r3, r0, r3
90002528:	fb01 f202 	mul.w	r2, r1, r2
9000252c:	4293      	cmp	r3, r2
9000252e:	d3e6      	bcc.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002530:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
90002534:	b138      	cbz	r0, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90002536:	1a9b      	subs	r3, r3, r2
90002538:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000253c:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
9000253e:	bf98      	it	ls
90002540:	f102 32ff 	addls.w	r2, r2, #4294967295
90002544:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
90002546:	2301      	movs	r3, #1
90002548:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
9000254c:	e7d7      	b.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
9000254e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002550:	f00b fcae 	bl	9000deb0 <osMutexRelease>
            uiHasMutex = false;
90002554:	2300      	movs	r3, #0
90002556:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000255a:	e7d9      	b.n	90002510 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
9000255c:	240092e8 	.word	0x240092e8

90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002560:	f00e be54 	b.w	9001120c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002564 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002564:	f00e bfb5 	b.w	900114d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002568 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002568:	4814      	ldr	r0, [pc, #80]	; (900025bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000256a:	6943      	ldr	r3, [r0, #20]
9000256c:	03d9      	lsls	r1, r3, #15
9000256e:	d523      	bpl.n	900025b8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002570:	2300      	movs	r3, #0
{
90002572:	b510      	push	{r4, lr}
90002574:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002578:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000257c:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002580:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002584:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002588:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000258c:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002590:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002594:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002596:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000259a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000259c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
900025a0:	1c5a      	adds	r2, r3, #1
900025a2:	d1f8      	bne.n	90002596 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900025a4:	f1ac 0c20 	sub.w	ip, ip, #32
900025a8:	f11c 0f20 	cmn.w	ip, #32
900025ac:	d1f0      	bne.n	90002590 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025b2:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025b6:	bd10      	pop	{r4, pc}
900025b8:	4770      	bx	lr
900025ba:	bf00      	nop
900025bc:	e000ed00 	.word	0xe000ed00

900025c0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025c0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025c2:	2900      	cmp	r1, #0
900025c4:	d133      	bne.n	9000262e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025c6:	4604      	mov	r4, r0
        switch (cmd)
900025c8:	2a05      	cmp	r2, #5
900025ca:	d809      	bhi.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025cc:	e8df f002 	tbb	[pc, r2]
900025d0:	27221e0f 	.word	0x27221e0f
900025d4:	0903      	.short	0x0903
            stream.isPlaying = false;
900025d6:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d8:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025da:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025de:	6203      	str	r3, [r0, #32]
    }
900025e0:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025e2:	3b00      	subs	r3, #0
900025e4:	bf18      	it	ne
900025e6:	2301      	movne	r3, #1
900025e8:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025ec:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025ee:	6840      	ldr	r0, [r0, #4]
900025f0:	6803      	ldr	r3, [r0, #0]
900025f2:	691b      	ldr	r3, [r3, #16]
900025f4:	4798      	blx	r3
900025f6:	2800      	cmp	r0, #0
900025f8:	d0f2      	beq.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025fa:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025fc:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025fe:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002602:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002606:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000260c:	2300      	movs	r3, #0
9000260e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002612:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002614:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002616:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002618:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000261c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000261e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002620:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002622:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002624:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002628:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000262c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000262e:	4b03      	ldr	r3, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002630:	21a2      	movs	r1, #162	; 0xa2
90002632:	4a03      	ldr	r2, [pc, #12]	; (90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
90002634:	4803      	ldr	r0, [pc, #12]	; (90002644 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
90002636:	f025 f869 	bl	9002770c <__assert_func>
9000263a:	bf00      	nop
9000263c:	9002909c 	.word	0x9002909c
90002640:	9002997c 	.word	0x9002997c
90002644:	9002923c 	.word	0x9002923c

90002648 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002648:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000264a:	bb39      	cbnz	r1, 9000269c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
9000264c:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002650:	4604      	mov	r4, r0
90002652:	b923      	cbnz	r3, 9000265e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
90002654:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002658:	b963      	cbnz	r3, 90002674 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
9000265a:	2001      	movs	r0, #1
    }
9000265c:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
9000265e:	4912      	ldr	r1, [pc, #72]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002660:	6943      	ldr	r3, [r0, #20]
90002662:	6809      	ldr	r1, [r1, #0]
90002664:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002668:	440b      	add	r3, r1
9000266a:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
9000266c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002670:	2b00      	cmp	r3, #0
90002672:	d0f2      	beq.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90002674:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90002676:	4610      	mov	r0, r2
90002678:	6813      	ldr	r3, [r2, #0]
9000267a:	695b      	ldr	r3, [r3, #20]
9000267c:	6311      	str	r1, [r2, #48]	; 0x30
9000267e:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002680:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
90002686:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
9000268a:	2800      	cmp	r0, #0
9000268c:	d1e5      	bne.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
9000268e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002692:	2b00      	cmp	r3, #0
90002694:	d1e2      	bne.n	9000265c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002696:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000269a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000269c:	4b03      	ldr	r3, [pc, #12]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000269e:	21d0      	movs	r1, #208	; 0xd0
900026a0:	4a03      	ldr	r2, [pc, #12]	; (900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
900026a2:	4804      	ldr	r0, [pc, #16]	; (900026b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
900026a4:	f025 f832 	bl	9002770c <__assert_func>
900026a8:	24039704 	.word	0x24039704
900026ac:	9002909c 	.word	0x9002909c
900026b0:	90029b50 	.word	0x90029b50
900026b4:	9002923c 	.word	0x9002923c

900026b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026bc:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026be:	b9fb      	cbnz	r3, 90002700 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026c0:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026c4:	60c3      	str	r3, [r0, #12]
900026c6:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ca:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026ce:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026d2:	6103      	str	r3, [r0, #16]
900026d4:	6143      	str	r3, [r0, #20]
900026d6:	6183      	str	r3, [r0, #24]
900026d8:	61c3      	str	r3, [r0, #28]
900026da:	6203      	str	r3, [r0, #32]
900026dc:	6243      	str	r3, [r0, #36]	; 0x24
900026de:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026e2:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026e6:	4432      	add	r2, r6
900026e8:	4294      	cmp	r4, r2
900026ea:	d810      	bhi.n	9000270e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026ec:	4a0b      	ldr	r2, [pc, #44]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026ee:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026f0:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026f2:	4618      	mov	r0, r3
        format = bufferFormat;
900026f4:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f8:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026fc:	630b      	str	r3, [r1, #48]	; 0x30
900026fe:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002700:	4b07      	ldr	r3, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002702:	f240 11c5 	movw	r1, #453	; 0x1c5
90002706:	4a07      	ldr	r2, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002708:	4807      	ldr	r0, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270a:	f024 ffff 	bl	9002770c <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000270e:	4b07      	ldr	r3, [pc, #28]	; (9000272c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002710:	2152      	movs	r1, #82	; 0x52
90002712:	4a07      	ldr	r2, [pc, #28]	; (90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002714:	4804      	ldr	r0, [pc, #16]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002716:	f024 fff9 	bl	9002770c <__assert_func>
9000271a:	bf00      	nop
9000271c:	012001e0 	.word	0x012001e0
90002720:	90029cf0 	.word	0x90029cf0
90002724:	90029d20 	.word	0x90029d20
90002728:	9002923c 	.word	0x9002923c
9000272c:	90029ea8 	.word	0x90029ea8
90002730:	90029ee4 	.word	0x90029ee4

90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002734:	4b08      	ldr	r3, [pc, #32]	; (90002758 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90002736:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000273a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000273e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002742:	f3bf 8f6f 	isb	sy
90002746:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000274a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000274e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002752:	f3bf 8f6f 	isb	sy
}
90002756:	4770      	bx	lr
90002758:	e000e100 	.word	0xe000e100

9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000275c:	4b03      	ldr	r3, [pc, #12]	; (9000276c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000275e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002762:	609a      	str	r2, [r3, #8]
90002764:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002768:	609a      	str	r2, [r3, #8]
}
9000276a:	4770      	bx	lr
9000276c:	e000e100 	.word	0xe000e100

90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002770:	b538      	push	{r3, r4, r5, lr}
90002772:	4604      	mov	r4, r0
    HAL::initialize();
90002774:	f00e fd99 	bl	900112aa <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002778:	6823      	ldr	r3, [r4, #0]
9000277a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
9000277c:	f013 fe5a 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90002780:	4601      	mov	r1, r0
90002782:	4620      	mov	r0, r4
90002784:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002786:	6823      	ldr	r3, [r4, #0]
90002788:	4a16      	ldr	r2, [pc, #88]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
9000278a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
9000278e:	4295      	cmp	r5, r2
90002790:	d11c      	bne.n	900027cc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002792:	4a15      	ldr	r2, [pc, #84]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002794:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002796:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000279a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	4813      	ldr	r0, [pc, #76]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900027a0:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
900027a4:	4a12      	ldr	r2, [pc, #72]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900027a6:	7005      	strb	r5, [r0, #0]
900027a8:	4293      	cmp	r3, r2
900027aa:	d116      	bne.n	900027da <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027ac:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027ae:	4a11      	ldr	r2, [pc, #68]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027b0:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027b2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027b4:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027b6:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027ba:	4b0f      	ldr	r3, [pc, #60]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027bc:	490f      	ldr	r1, [pc, #60]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027be:	4a10      	ldr	r2, [pc, #64]	; (90002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027c0:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027c2:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027c4:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027c6:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027ca:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027cc:	4a0d      	ldr	r2, [pc, #52]	; (90002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027ce:	2300      	movs	r3, #0
900027d0:	4620      	mov	r0, r4
900027d2:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027d6:	47a8      	blx	r5
900027d8:	e7ec      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027da:	2100      	movs	r1, #0
900027dc:	4620      	mov	r0, r4
900027de:	4798      	blx	r3
900027e0:	e7e8      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027e2:	bf00      	nop
900027e4:	90000805 	.word	0x90000805
900027e8:	d003fc00 	.word	0xd003fc00
900027ec:	24039702 	.word	0x24039702
900027f0:	90000675 	.word	0x90000675
900027f4:	24039703 	.word	0x24039703
900027f8:	240092e8 	.word	0x240092e8
900027fc:	240092a0 	.word	0x240092a0
90002800:	d00bf400 	.word	0xd00bf400
90002804:	d007f800 	.word	0xd007f800

90002808 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002808:	b510      	push	{r4, lr}
        return instance;
9000280a:	4c14      	ldr	r4, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000280c:	6823      	ldr	r3, [r4, #0]
9000280e:	b323      	cbz	r3, 9000285a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002810:	4b13      	ldr	r3, [pc, #76]	; (90002860 <HAL_LTDC_LineEventCallback+0x58>)
90002812:	4a14      	ldr	r2, [pc, #80]	; (90002864 <HAL_LTDC_LineEventCallback+0x5c>)
90002814:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002816:	8811      	ldrh	r1, [r2, #0]
90002818:	428b      	cmp	r3, r1
9000281a:	d00a      	beq.n	90002832 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000281c:	f008 fff0 	bl	9000b800 <HAL_LTDC_ProgramLineEvent>
90002820:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002822:	6803      	ldr	r3, [r0, #0]
90002824:	6a1b      	ldr	r3, [r3, #32]
90002826:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002828:	2000      	movs	r0, #0
        }
    }
9000282a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000282e:	f7fd bec5 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90002832:	4b0d      	ldr	r3, [pc, #52]	; (90002868 <HAL_LTDC_LineEventCallback+0x60>)
90002834:	8819      	ldrh	r1, [r3, #0]
90002836:	f008 ffe3 	bl	9000b800 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000283a:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
9000283c:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002840:	3301      	adds	r3, #1
90002842:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
90002846:	f7ff f83b 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
9000284a:	6820      	ldr	r0, [r4, #0]
9000284c:	f00f fa86 	bl	90011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002850:	2000      	movs	r0, #0
    }
90002852:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90002856:	f7fd be7d 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
9000285a:	bd10      	pop	{r4, pc}
9000285c:	24039704 	.word	0x24039704
90002860:	50001000 	.word	0x50001000
90002864:	2400929e 	.word	0x2400929e
90002868:	2400929c 	.word	0x2400929c

9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
9000286c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002870:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 9000292c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
90002874:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
90002876:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002878:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
9000287c:	4604      	mov	r4, r0
9000287e:	e024      	b.n	900028ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002880:	682b      	ldr	r3, [r5, #0]
90002882:	4628      	mov	r0, r5
90002884:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90002886:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002888:	2300      	movs	r3, #0
9000288a:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000288c:	6829      	ldr	r1, [r5, #0]
9000288e:	f44f 7390 	mov.w	r3, #288	; 0x120
90002892:	9700      	str	r7, [sp, #0]
90002894:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002898:	f8d1 9014 	ldr.w	r9, [r1, #20]
9000289c:	4628      	mov	r0, r5
9000289e:	68a1      	ldr	r1, [r4, #8]
900028a0:	47c8      	blx	r9
                    stream.frameCount++;
900028a2:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900028a4:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a8:	3301      	adds	r3, #1
900028aa:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028ac:	2800      	cmp	r0, #0
900028ae:	d033      	beq.n	90002918 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b0:	682b      	ldr	r3, [r5, #0]
900028b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028b4:	4543      	cmp	r3, r8
900028b6:	d131      	bne.n	9000291c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b8:	6968      	ldr	r0, [r5, #20]
900028ba:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028bc:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028be:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028c0:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028c4:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028c6:	f00b faf3 	bl	9000deb0 <osMutexRelease>
            SEM_WAIT(semDecode);
900028ca:	f04f 31ff 	mov.w	r1, #4294967295
900028ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028d0:	f00b fb60 	bl	9000df94 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028d4:	f04f 31ff 	mov.w	r1, #4294967295
900028d8:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028da:	f00b fac5 	bl	9000de68 <osMutexAcquire>
                if (stream.doDecode)
900028de:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028e2:	2b00      	cmp	r3, #0
900028e4:	d0ee      	beq.n	900028c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028e6:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e8:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028ea:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028ee:	2900      	cmp	r1, #0
900028f0:	d1c6      	bne.n	90002880 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028f4:	2b00      	cmp	r3, #0
900028f6:	d0c9      	beq.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f8:	682a      	ldr	r2, [r5, #0]
900028fa:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028fe:	4541      	cmp	r1, r8
90002900:	d10f      	bne.n	90002922 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002902:	6968      	ldr	r0, [r5, #20]
90002904:	18c1      	adds	r1, r0, r3
90002906:	4628      	mov	r0, r5
90002908:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
9000290a:	6923      	ldr	r3, [r4, #16]
9000290c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
9000290e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002910:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002912:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002914:	6123      	str	r3, [r4, #16]
90002916:	e7b9      	b.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002918:	2001      	movs	r0, #1
9000291a:	e7cf      	b.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
9000291c:	4628      	mov	r0, r5
9000291e:	4798      	blx	r3
90002920:	e7cb      	b.n	900028ba <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002922:	4628      	mov	r0, r5
90002924:	4788      	blx	r1
90002926:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002928:	e7ec      	b.n	90002904 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
9000292a:	bf00      	nop
9000292c:	9000097d 	.word	0x9000097d

90002930 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002930:	4801      	ldr	r0, [pc, #4]	; (90002938 <videoTaskFunc+0x8>)
{
90002932:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002934:	f7ff ff9a 	bl	9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002938:	240092e8 	.word	0x240092e8

9000293c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000293c:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000293e:	4815      	ldr	r0, [pc, #84]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002940:	2500      	movs	r5, #0
90002942:	f7fe fbc1 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002946:	4c14      	ldr	r4, [pc, #80]	; (90002998 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002948:	4914      	ldr	r1, [pc, #80]	; (9000299c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294a:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
9000294e:	462a      	mov	r2, r5
90002950:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002952:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002954:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002958:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
9000295a:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
9000295c:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000295e:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002962:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002964:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002968:	e9c4 5504 	strd	r5, r5, [r4, #16]
9000296c:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002970:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002974:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002978:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
9000297c:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	f00b fab8 	bl	9000def4 <osSemaphoreNew>
90002984:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002986:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002988:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
9000298a:	f00b fa2d 	bl	9000dde8 <osMutexNew>
9000298e:	6460      	str	r0, [r4, #68]	; 0x44
}
90002990:	bd38      	pop	{r3, r4, r5, pc}
90002992:	bf00      	nop
90002994:	240092a0 	.word	0x240092a0
90002998:	240092e8 	.word	0x240092e8
9000299c:	9002a0b0 	.word	0x9002a0b0

900029a0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900029a0:	4901      	ldr	r1, [pc, #4]	; (900029a8 <vApplicationIdleHook+0x8>)
900029a2:	2000      	movs	r0, #0
900029a4:	f00d bcc8 	b.w	90010338 <vTaskSetApplicationTaskTag>
900029a8:	90000959 	.word	0x90000959

900029ac <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029ac:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029ae:	2064      	movs	r0, #100	; 0x64
900029b0:	f00b fa0c 	bl	9000ddcc <osDelay>
  for(;;)
900029b4:	e7fb      	b.n	900029ae <StartDefaultTask+0x2>
900029b6:	bf00      	nop

900029b8 <SystemClock_Config>:
{
900029b8:	b570      	push	{r4, r5, r6, lr}
900029ba:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029bc:	224c      	movs	r2, #76	; 0x4c
900029be:	2100      	movs	r1, #0
900029c0:	a80a      	add	r0, sp, #40	; 0x28
900029c2:	f025 f92b 	bl	90027c1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029c6:	2220      	movs	r2, #32
900029c8:	2100      	movs	r1, #0
900029ca:	a802      	add	r0, sp, #8
900029cc:	f025 f926 	bl	90027c1c <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029d0:	2002      	movs	r0, #2
900029d2:	f009 f953 	bl	9000bc7c <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029d6:	4b22      	ldr	r3, [pc, #136]	; (90002a60 <SystemClock_Config+0xa8>)
900029d8:	2100      	movs	r1, #0
900029da:	4a22      	ldr	r2, [pc, #136]	; (90002a64 <SystemClock_Config+0xac>)
900029dc:	9101      	str	r1, [sp, #4]
900029de:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029e0:	f021 0101 	bic.w	r1, r1, #1
900029e4:	62d9      	str	r1, [r3, #44]	; 0x2c
900029e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e8:	f003 0301 	and.w	r3, r3, #1
900029ec:	9301      	str	r3, [sp, #4]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029f4:	6193      	str	r3, [r2, #24]
900029f6:	6993      	ldr	r3, [r2, #24]
900029f8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029fc:	9301      	str	r3, [sp, #4]
900029fe:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002a00:	6993      	ldr	r3, [r2, #24]
90002a02:	0499      	lsls	r1, r3, #18
90002a04:	d5fc      	bpl.n	90002a00 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a06:	2201      	movs	r2, #1
90002a08:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a0c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a0e:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a10:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a12:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a14:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a16:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a1a:	2205      	movs	r2, #5
90002a1c:	23a0      	movs	r3, #160	; 0xa0
90002a1e:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a22:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a24:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a28:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a2a:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a2e:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a32:	f009 f9cb 	bl	9000bdcc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a36:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a38:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3a:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a3c:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3e:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a42:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a44:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a46:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a48:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a4a:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a4c:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a50:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a54:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a56:	f009 fd4d 	bl	9000c4f4 <HAL_RCC_ClockConfig>
}
90002a5a:	b01e      	add	sp, #120	; 0x78
90002a5c:	bd70      	pop	{r4, r5, r6, pc}
90002a5e:	bf00      	nop
90002a60:	58000400 	.word	0x58000400
90002a64:	58024800 	.word	0x58024800

90002a68 <main>:
{
90002a68:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6a:	2400      	movs	r4, #0
{
90002a6c:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a6e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a70:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a72:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a74:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a78:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a7c:	f006 f8e6 	bl	90008c4c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a84:	49d3      	ldr	r1, [pc, #844]	; (90002dd4 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a86:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a88:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a8a:	4bd3      	ldr	r3, [pc, #844]	; (90002dd8 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a8c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a90:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	f006 f8f8 	bl	90008c88 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a98:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a9c:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a9e:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002aa2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002aa4:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa8:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aac:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab0:	f006 f8ea 	bl	90008c88 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab8:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002abc:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ac0:	231a      	movs	r3, #26
90002ac2:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002ac6:	f240 1301 	movw	r3, #257	; 0x101
90002aca:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	f006 f8db 	bl	90008c88 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad2:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ad6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad8:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002adc:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ade:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ae6:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002aea:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002aec:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af0:	f006 f8ca 	bl	90008c88 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002afc:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002b00:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002b04:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b08:	f006 f8be 	bl	90008c88 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b0c:	4620      	mov	r0, r4
90002b0e:	f006 f8ab 	bl	90008c68 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b12:	4ab2      	ldr	r2, [pc, #712]	; (90002ddc <main+0x374>)
90002b14:	6953      	ldr	r3, [r2, #20]
90002b16:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b1a:	d111      	bne.n	90002b40 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b1c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b20:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b24:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b28:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b2c:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b30:	6953      	ldr	r3, [r2, #20]
90002b32:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b36:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b3c:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b40:	48a6      	ldr	r0, [pc, #664]	; (90002ddc <main+0x374>)
90002b42:	6943      	ldr	r3, [r0, #20]
90002b44:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b48:	d124      	bne.n	90002b94 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b4a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b4e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b52:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b56:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b5a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b5e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b62:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b64:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b68:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b6a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b6e:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b70:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b74:	1c5a      	adds	r2, r3, #1
90002b76:	d1f8      	bne.n	90002b6a <main+0x102>
    } while(sets-- != 0U);
90002b78:	3c20      	subs	r4, #32
90002b7a:	f114 0f20 	cmn.w	r4, #32
90002b7e:	d1f1      	bne.n	90002b64 <main+0xfc>
90002b80:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b84:	6943      	ldr	r3, [r0, #20]
90002b86:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b8a:	6143      	str	r3, [r0, #20]
90002b8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b90:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b94:	f005 ffa2 	bl	90008adc <HAL_Init>
  SystemClock_Config();
90002b98:	f7ff ff0e 	bl	900029b8 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b9c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002ba0:	4d8f      	ldr	r5, [pc, #572]	; (90002de0 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba2:	21c0      	movs	r1, #192	; 0xc0
90002ba4:	488f      	ldr	r0, [pc, #572]	; (90002de4 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002ba6:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba8:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002baa:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002bac:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002bb0:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002bb2:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bb6:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bbe:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bc2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bc6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bca:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bd6:	9301      	str	r3, [sp, #4]
90002bd8:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bda:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002be2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002be6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bea:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002bee:	9302      	str	r3, [sp, #8]
90002bf0:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bf2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bfa:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bfe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c02:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002c06:	9303      	str	r3, [sp, #12]
90002c08:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c0e:	f043 0310 	orr.w	r3, r3, #16
90002c12:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1a:	f003 0310 	and.w	r3, r3, #16
90002c1e:	9304      	str	r3, [sp, #16]
90002c20:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c26:	f043 0302 	orr.w	r3, r3, #2
90002c2a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c32:	f003 0302 	and.w	r3, r3, #2
90002c36:	9305      	str	r3, [sp, #20]
90002c38:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c42:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4a:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c4e:	9306      	str	r3, [sp, #24]
90002c50:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c56:	f043 0308 	orr.w	r3, r3, #8
90002c5a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c62:	f003 0308 	and.w	r3, r3, #8
90002c66:	9307      	str	r3, [sp, #28]
90002c68:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c6e:	f043 0320 	orr.w	r3, r3, #32
90002c72:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7a:	f003 0320 	and.w	r3, r3, #32
90002c7e:	9308      	str	r3, [sp, #32]
90002c80:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c86:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c8a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c92:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c96:	9309      	str	r3, [sp, #36]	; 0x24
90002c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c9e:	f043 0301 	orr.w	r3, r3, #1
90002ca2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002ca6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002caa:	f003 0301 	and.w	r3, r3, #1
90002cae:	930a      	str	r3, [sp, #40]	; 0x28
90002cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002cb2:	f006 fbd9 	bl	90009468 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cb6:	4622      	mov	r2, r4
90002cb8:	2180      	movs	r1, #128	; 0x80
90002cba:	484b      	ldr	r0, [pc, #300]	; (90002de8 <main+0x380>)
90002cbc:	f006 fbd4 	bl	90009468 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cc0:	4622      	mov	r2, r4
90002cc2:	2108      	movs	r1, #8
90002cc4:	4849      	ldr	r0, [pc, #292]	; (90002dec <main+0x384>)
90002cc6:	f006 fbcf 	bl	90009468 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cca:	2201      	movs	r2, #1
90002ccc:	4848      	ldr	r0, [pc, #288]	; (90002df0 <main+0x388>)
90002cce:	4611      	mov	r1, r2
90002cd0:	f006 fbca 	bl	90009468 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002cd4:	4622      	mov	r2, r4
90002cd6:	2144      	movs	r1, #68	; 0x44
90002cd8:	4846      	ldr	r0, [pc, #280]	; (90002df4 <main+0x38c>)
90002cda:	f006 fbc5 	bl	90009468 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cde:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce0:	a90b      	add	r1, sp, #44	; 0x2c
90002ce2:	4840      	ldr	r0, [pc, #256]	; (90002de4 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ce4:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce8:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cec:	f006 f9bc 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf2:	a90b      	add	r1, sp, #44	; 0x2c
90002cf4:	483c      	ldr	r0, [pc, #240]	; (90002de8 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf6:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf8:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cfa:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cfe:	f006 f9b3 	bl	90009068 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d02:	a90b      	add	r1, sp, #44	; 0x2c
90002d04:	4839      	ldr	r0, [pc, #228]	; (90002dec <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d06:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d0a:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d0c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d10:	f006 f9aa 	bl	90009068 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d14:	a90b      	add	r1, sp, #44	; 0x2c
90002d16:	4836      	ldr	r0, [pc, #216]	; (90002df0 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d18:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d1c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d20:	f006 f9a2 	bl	90009068 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d24:	a90b      	add	r1, sp, #44	; 0x2c
90002d26:	4833      	ldr	r0, [pc, #204]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d28:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d2c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d30:	f006 f99a 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d34:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d3c:	a90b      	add	r1, sp, #44	; 0x2c
90002d3e:	482d      	ldr	r0, [pc, #180]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d40:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d44:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d48:	f006 f98e 	bl	90009068 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d50:	4622      	mov	r2, r4
90002d52:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d54:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d56:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d58:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d5c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d60:	4d25      	ldr	r5, [pc, #148]	; (90002df8 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d62:	4033      	ands	r3, r6
90002d64:	9300      	str	r3, [sp, #0]
90002d66:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d68:	f005 ff12 	bl	90008b90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d6c:	207a      	movs	r0, #122	; 0x7a
90002d6e:	f005 ff4d 	bl	90008c0c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d72:	2234      	movs	r2, #52	; 0x34
90002d74:	4621      	mov	r1, r4
90002d76:	a80b      	add	r0, sp, #44	; 0x2c
90002d78:	f024 ff50 	bl	90027c1c <memset>
  hltdc.Instance = LTDC;
90002d7c:	4b1f      	ldr	r3, [pc, #124]	; (90002dfc <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d7e:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d80:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d82:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d84:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d86:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d8a:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d8e:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d92:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d94:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d98:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d9c:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002da0:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002da2:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002da6:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002daa:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002dac:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002db0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002db4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db8:	f008 fb7c 	bl	9000b4b4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002dbc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc0:	4622      	mov	r2, r4
90002dc2:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dc4:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc6:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc8:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dca:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dce:	4d0c      	ldr	r5, [pc, #48]	; (90002e00 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dd0:	930e      	str	r3, [sp, #56]	; 0x38
90002dd2:	e017      	b.n	90002e04 <main+0x39c>
90002dd4:	03000012 	.word	0x03000012
90002dd8:	01010001 	.word	0x01010001
90002ddc:	e000ed00 	.word	0xe000ed00
90002de0:	58024400 	.word	0x58024400
90002de4:	58020400 	.word	0x58020400
90002de8:	58020c00 	.word	0x58020c00
90002dec:	58021800 	.word	0x58021800
90002df0:	58022800 	.word	0x58022800
90002df4:	58020000 	.word	0x58020000
90002df8:	2400941c 	.word	0x2400941c
90002dfc:	50001000 	.word	0x50001000
90002e00:	2400935c 	.word	0x2400935c
  pLayerCfg.ImageHeight = 272;
90002e04:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002e06:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e08:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e0a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e10:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e12:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e14:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e16:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e18:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e1c:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e20:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e22:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e26:	f008 fc19 	bl	9000b65c <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e2a:	4b35      	ldr	r3, [pc, #212]	; (90002f00 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e2c:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e2e:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e30:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e32:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e34:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e38:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e3c:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e40:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e44:	f005 ffc8 	bl	90008dd8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e48:	4631      	mov	r1, r6
90002e4a:	4628      	mov	r0, r5
90002e4c:	f006 f89c 	bl	90008f88 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e50:	482c      	ldr	r0, [pc, #176]	; (90002f04 <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e52:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e56:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e58:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e5c:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e5e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e62:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e66:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e6a:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e6c:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e70:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e74:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e7a:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e7c:	2307      	movs	r3, #7
90002e7e:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e80:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e82:	4b21      	ldr	r3, [pc, #132]	; (90002f08 <main+0x4a0>)
90002e84:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e86:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e88:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e8c:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e8e:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e92:	f00a fc07 	bl	9000d6a4 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e96:	4620      	mov	r0, r4
90002e98:	f005 fbb2 	bl	90008600 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e9c:	4620      	mov	r0, r4
90002e9e:	f005 fbf9 	bl	90008694 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002ea2:	f7fd fa97 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002ea6:	4b19      	ldr	r3, [pc, #100]	; (90002f0c <main+0x4a4>)
90002ea8:	4819      	ldr	r0, [pc, #100]	; (90002f10 <main+0x4a8>)
90002eaa:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002eac:	f007 fad6 	bl	9000a45c <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002eb0:	4818      	ldr	r0, [pc, #96]	; (90002f14 <main+0x4ac>)
90002eb2:	4b19      	ldr	r3, [pc, #100]	; (90002f18 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eb4:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eb6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb8:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eba:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002ebe:	f005 ff15 	bl	90008cec <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002ec2:	f7fd fa8b 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ec6:	f7fd fa87 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002eca:	f00a ff09 	bl	9000dce0 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ece:	4a13      	ldr	r2, [pc, #76]	; (90002f1c <main+0x4b4>)
90002ed0:	4621      	mov	r1, r4
90002ed2:	4813      	ldr	r0, [pc, #76]	; (90002f20 <main+0x4b8>)
90002ed4:	f00a ff30 	bl	9000dd38 <osThreadNew>
90002ed8:	4b12      	ldr	r3, [pc, #72]	; (90002f24 <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002eda:	4a13      	ldr	r2, [pc, #76]	; (90002f28 <main+0x4c0>)
90002edc:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ede:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee0:	4812      	ldr	r0, [pc, #72]	; (90002f2c <main+0x4c4>)
90002ee2:	f00a ff29 	bl	9000dd38 <osThreadNew>
90002ee6:	4b12      	ldr	r3, [pc, #72]	; (90002f30 <main+0x4c8>)
90002ee8:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	4a12      	ldr	r2, [pc, #72]	; (90002f34 <main+0x4cc>)
90002eec:	4621      	mov	r1, r4
90002eee:	4812      	ldr	r0, [pc, #72]	; (90002f38 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ef0:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ef2:	f00a ff21 	bl	9000dd38 <osThreadNew>
90002ef6:	4b11      	ldr	r3, [pc, #68]	; (90002f3c <main+0x4d4>)
90002ef8:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002efa:	f00a ff03 	bl	9000dd04 <osKernelStart>
  while (1)
90002efe:	e7fe      	b.n	90002efe <main+0x496>
90002f00:	52001000 	.word	0x52001000
90002f04:	2400959c 	.word	0x2400959c
90002f08:	52004140 	.word	0x52004140
90002f0c:	52003000 	.word	0x52003000
90002f10:	240093c4 	.word	0x240093c4
90002f14:	24009338 	.word	0x24009338
90002f18:	58024c00 	.word	0x58024c00
90002f1c:	9002a12c 	.word	0x9002a12c
90002f20:	900029ad 	.word	0x900029ad
90002f24:	24009334 	.word	0x24009334
90002f28:	9002a108 	.word	0x9002a108
90002f2c:	900003ed 	.word	0x900003ed
90002f30:	24009330 	.word	0x24009330
90002f34:	9002a150 	.word	0x9002a150
90002f38:	90002931 	.word	0x90002931
90002f3c:	240095d0 	.word	0x240095d0

90002f40 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f40:	4b03      	ldr	r3, [pc, #12]	; (90002f50 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f42:	6802      	ldr	r2, [r0, #0]
90002f44:	429a      	cmp	r2, r3
90002f46:	d000      	beq.n	90002f4a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f48:	4770      	bx	lr
    HAL_IncTick();
90002f4a:	f005 bdf7 	b.w	90008b3c <HAL_IncTick>
90002f4e:	bf00      	nop
90002f50:	40001000 	.word	0x40001000

90002f54 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f54:	4770      	bx	lr
90002f56:	bf00      	nop

90002f58 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f58:	4b0b      	ldr	r3, [pc, #44]	; (90002f88 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f5a:	2200      	movs	r2, #0
90002f5c:	210f      	movs	r1, #15
90002f5e:	f06f 0001 	mvn.w	r0, #1
{
90002f62:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f64:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f68:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f6a:	f044 0402 	orr.w	r4, r4, #2
90002f6e:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f72:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f76:	f003 0302 	and.w	r3, r3, #2
90002f7a:	9301      	str	r3, [sp, #4]
90002f7c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f7e:	b003      	add	sp, #12
90002f80:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f84:	f005 be04 	b.w	90008b90 <HAL_NVIC_SetPriority>
90002f88:	58024400 	.word	0x58024400

90002f8c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f8c:	4b0a      	ldr	r3, [pc, #40]	; (90002fb8 <HAL_CRC_MspInit+0x2c>)
90002f8e:	6802      	ldr	r2, [r0, #0]
90002f90:	429a      	cmp	r2, r3
90002f92:	d000      	beq.n	90002f96 <HAL_CRC_MspInit+0xa>
90002f94:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f96:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f9a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f9c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002fa0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002fa4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fb0:	9301      	str	r3, [sp, #4]
90002fb2:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fb4:	b002      	add	sp, #8
90002fb6:	4770      	bx	lr
90002fb8:	58024c00 	.word	0x58024c00

90002fbc <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fbc:	4b0f      	ldr	r3, [pc, #60]	; (90002ffc <HAL_DMA2D_MspInit+0x40>)
90002fbe:	6802      	ldr	r2, [r0, #0]
90002fc0:	429a      	cmp	r2, r3
90002fc2:	d000      	beq.n	90002fc6 <HAL_DMA2D_MspInit+0xa>
90002fc4:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc6:	4b0e      	ldr	r3, [pc, #56]	; (90003000 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc8:	205a      	movs	r0, #90	; 0x5a
90002fca:	2200      	movs	r2, #0
90002fcc:	2105      	movs	r1, #5
{
90002fce:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd0:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fd4:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd6:	f044 0410 	orr.w	r4, r4, #16
90002fda:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fde:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fe2:	f003 0310 	and.w	r3, r3, #16
90002fe6:	9301      	str	r3, [sp, #4]
90002fe8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fea:	f005 fdd1 	bl	90008b90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002ff0:	b002      	add	sp, #8
90002ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002ff6:	f005 be09 	b.w	90008c0c <HAL_NVIC_EnableIRQ>
90002ffa:	bf00      	nop
90002ffc:	52001000 	.word	0x52001000
90003000:	58024400 	.word	0x58024400

90003004 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003004:	4b3f      	ldr	r3, [pc, #252]	; (90003104 <HAL_JPEG_MspInit+0x100>)
90003006:	6802      	ldr	r2, [r0, #0]
90003008:	429a      	cmp	r2, r3
9000300a:	d000      	beq.n	9000300e <HAL_JPEG_MspInit+0xa>
9000300c:	4770      	bx	lr
{
9000300e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003010:	4b3d      	ldr	r3, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003012:	2211      	movs	r2, #17
90003014:	4e3d      	ldr	r6, [pc, #244]	; (9000310c <HAL_JPEG_MspInit+0x108>)
{
90003016:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003018:	4d3d      	ldr	r5, [pc, #244]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
9000301a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000301c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000301e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003020:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003024:	493b      	ldr	r1, [pc, #236]	; (90003114 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003026:	f042 0220 	orr.w	r2, r2, #32
9000302a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000302e:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003030:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003034:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003036:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000303a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000303c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000303e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003040:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003042:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003044:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003048:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
9000304c:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000304e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003050:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
90003054:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003058:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000305a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
9000305e:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
90003062:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003066:	2313      	movs	r3, #19
90003068:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000306a:	2302      	movs	r3, #2
9000306c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000306e:	f008 fbe9 	bl	9000b844 <HAL_MDMA_Init>
90003072:	2800      	cmp	r0, #0
90003074:	d13a      	bne.n	900030ec <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003076:	2200      	movs	r2, #0
90003078:	4824      	ldr	r0, [pc, #144]	; (9000310c <HAL_JPEG_MspInit+0x108>)
9000307a:	4611      	mov	r1, r2
9000307c:	f008 fc80 	bl	9000b980 <HAL_MDMA_ConfigPostRequestMask>
90003080:	2800      	cmp	r0, #0
90003082:	d13c      	bne.n	900030fe <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003086:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003088:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000308a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000308c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000308e:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003090:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003094:	4920      	ldr	r1, [pc, #128]	; (90003118 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003096:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003098:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
9000309a:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000309c:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000309e:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900030a2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a8:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030aa:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030ae:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b0:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	4815      	ldr	r0, [pc, #84]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030ba:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030bc:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030be:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030c0:	f008 fbc0 	bl	9000b844 <HAL_MDMA_Init>
900030c4:	b9c0      	cbnz	r0, 900030f8 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030c6:	2200      	movs	r2, #0
900030c8:	4811      	ldr	r0, [pc, #68]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
900030ca:	4611      	mov	r1, r2
900030cc:	f008 fc58 	bl	9000b980 <HAL_MDMA_ConfigPostRequestMask>
900030d0:	b978      	cbnz	r0, 900030f2 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	2079      	movs	r0, #121	; 0x79
900030d6:	2200      	movs	r2, #0
900030d8:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030da:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030dc:	f005 fd58 	bl	90008b90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030e2:	b002      	add	sp, #8
900030e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e8:	f005 bd90 	b.w	90008c0c <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030ec:	f7ff ff32 	bl	90002f54 <Error_Handler>
900030f0:	e7c1      	b.n	90003076 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030f2:	f7ff ff2f 	bl	90002f54 <Error_Handler>
900030f6:	e7ec      	b.n	900030d2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f8:	f7ff ff2c 	bl	90002f54 <Error_Handler>
900030fc:	e7e3      	b.n	900030c6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030fe:	f7ff ff29 	bl	90002f54 <Error_Handler>
90003102:	e7bf      	b.n	90003084 <HAL_JPEG_MspInit+0x80>
90003104:	52003000 	.word	0x52003000
90003108:	58024400 	.word	0x58024400
9000310c:	240094c4 	.word	0x240094c4
90003110:	24009530 	.word	0x24009530
90003114:	52000200 	.word	0x52000200
90003118:	520001c0 	.word	0x520001c0

9000311c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000311c:	b570      	push	{r4, r5, r6, lr}
9000311e:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	2100      	movs	r1, #0
{
90003122:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003124:	22c0      	movs	r2, #192	; 0xc0
90003126:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003128:	9109      	str	r1, [sp, #36]	; 0x24
9000312a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000312e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003132:	f024 fd73 	bl	90027c1c <memset>
  if(hltdc->Instance==LTDC)
90003136:	4b4a      	ldr	r3, [pc, #296]	; (90003260 <HAL_LTDC_MspInit+0x144>)
90003138:	6822      	ldr	r2, [r4, #0]
9000313a:	429a      	cmp	r2, r3
9000313c:	d001      	beq.n	90003142 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
9000313e:	b03a      	add	sp, #232	; 0xe8
90003140:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003142:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003144:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003146:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
9000314a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000314c:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000314e:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003150:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003152:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003154:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003156:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315a:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000315c:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000315e:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003162:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003166:	f009 fc9d 	bl	9000caa4 <HAL_RCCEx_PeriphCLKConfig>
9000316a:	2800      	cmp	r0, #0
9000316c:	d174      	bne.n	90003258 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	4b3d      	ldr	r3, [pc, #244]	; (90003264 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003170:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003172:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003174:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000317a:	a905      	add	r1, sp, #20
9000317c:	483a      	ldr	r0, [pc, #232]	; (90003268 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000317e:	f042 0208 	orr.w	r2, r2, #8
90003182:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
90003186:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
9000318a:	f002 0208 	and.w	r2, r2, #8
9000318e:	9200      	str	r2, [sp, #0]
90003190:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003192:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003196:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000319a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000319e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a2:	f402 6280 	and.w	r2, r2, #1024	; 0x400
900031a6:	9201      	str	r2, [sp, #4]
900031a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031b2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031be:	9202      	str	r2, [sp, #8]
900031c0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031ca:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d2:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031d6:	9203      	str	r2, [sp, #12]
900031d8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031e2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031ea:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031f0:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f2:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f4:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f6:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031fa:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031fe:	f005 ff33 	bl	90009068 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003206:	a905      	add	r1, sp, #20
90003208:	4818      	ldr	r0, [pc, #96]	; (9000326c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000320a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000320c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003210:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003214:	f005 ff28 	bl	90009068 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000321c:	a905      	add	r1, sp, #20
9000321e:	4814      	ldr	r0, [pc, #80]	; (90003270 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003220:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003222:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003226:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000322a:	f005 ff1d 	bl	90009068 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000322e:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003232:	a905      	add	r1, sp, #20
90003234:	480f      	ldr	r0, [pc, #60]	; (90003274 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003236:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003238:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000323c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003240:	f005 ff12 	bl	90009068 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003244:	462a      	mov	r2, r5
90003246:	2105      	movs	r1, #5
90003248:	2058      	movs	r0, #88	; 0x58
9000324a:	f005 fca1 	bl	90008b90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000324e:	2058      	movs	r0, #88	; 0x58
90003250:	f005 fcdc 	bl	90008c0c <HAL_NVIC_EnableIRQ>
}
90003254:	b03a      	add	sp, #232	; 0xe8
90003256:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003258:	f7ff fe7c 	bl	90002f54 <Error_Handler>
9000325c:	e787      	b.n	9000316e <HAL_LTDC_MspInit+0x52>
9000325e:	bf00      	nop
90003260:	50001000 	.word	0x50001000
90003264:	58024400 	.word	0x58024400
90003268:	58022800 	.word	0x58022800
9000326c:	58022000 	.word	0x58022000
90003270:	58022400 	.word	0x58022400
90003274:	58021c00 	.word	0x58021c00

90003278 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003278:	4836      	ldr	r0, [pc, #216]	; (90003354 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000327c:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000327e:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003280:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003282:	e9cd 3302 	strd	r3, r3, [sp, #8]
90003286:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000328a:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
9000328c:	b109      	cbz	r1, 90003292 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000328e:	b038      	add	sp, #224	; 0xe0
90003290:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003292:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003294:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90003296:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003298:	a80a      	add	r0, sp, #40	; 0x28
9000329a:	f024 fcbf 	bl	90027c1c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900032a2:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900032a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032aa:	f009 fbfb 	bl	9000caa4 <HAL_RCCEx_PeriphCLKConfig>
900032ae:	2800      	cmp	r0, #0
900032b0:	d14c      	bne.n	9000334c <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032b2:	4b29      	ldr	r3, [pc, #164]	; (90003358 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b4:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b8:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ba:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032c0:	2600      	movs	r6, #0
900032c2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032c4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032cc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032d0:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032da:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032dc:	a902      	add	r1, sp, #8
900032de:	481f      	ldr	r0, [pc, #124]	; (9000335c <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032e0:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032e2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032e6:	f005 febf 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ea:	f248 1233 	movw	r2, #33075	; 0x8133
900032ee:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f0:	a902      	add	r1, sp, #8
900032f2:	481b      	ldr	r0, [pc, #108]	; (90003360 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032f4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032f6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032fa:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032fe:	f005 feb3 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003302:	f24c 7203 	movw	r2, #50947	; 0xc703
90003306:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003308:	a902      	add	r1, sp, #8
9000330a:	4816      	ldr	r0, [pc, #88]	; (90003364 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000330c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000330e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003312:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003316:	f005 fea7 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331a:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000331e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003320:	a902      	add	r1, sp, #8
90003322:	4811      	ldr	r0, [pc, #68]	; (90003368 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003324:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003326:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000332a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000332e:	f005 fe9b 	bl	90009068 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003332:	22e0      	movs	r2, #224	; 0xe0
90003334:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003336:	a902      	add	r1, sp, #8
90003338:	480c      	ldr	r0, [pc, #48]	; (9000336c <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000333a:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000333c:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003340:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003344:	f005 fe90 	bl	90009068 <HAL_GPIO_Init>
}
90003348:	b038      	add	sp, #224	; 0xe0
9000334a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000334c:	f7ff fe02 	bl	90002f54 <Error_Handler>
90003350:	e7af      	b.n	900032b2 <HAL_SDRAM_MspInit+0x3a>
90003352:	bf00      	nop
90003354:	240095d8 	.word	0x240095d8
90003358:	58024400 	.word	0x58024400
9000335c:	58021000 	.word	0x58021000
90003360:	58021800 	.word	0x58021800
90003364:	58020c00 	.word	0x58020c00
90003368:	58021400 	.word	0x58021400
9000336c:	58021c00 	.word	0x58021c00

90003370 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003370:	4b13      	ldr	r3, [pc, #76]	; (900033c0 <HAL_SDRAM_MspDeInit+0x50>)
90003372:	681a      	ldr	r2, [r3, #0]
90003374:	b102      	cbz	r2, 90003378 <HAL_SDRAM_MspDeInit+0x8>
90003376:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003378:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000337a:	4a12      	ldr	r2, [pc, #72]	; (900033c4 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
9000337c:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000337e:	f64f 7183 	movw	r1, #65411	; 0xff83
90003382:	4811      	ldr	r0, [pc, #68]	; (900033c8 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003384:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90003386:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000338a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000338e:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003392:	f005 ff9b 	bl	900092cc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003396:	f248 1133 	movw	r1, #33075	; 0x8133
9000339a:	480c      	ldr	r0, [pc, #48]	; (900033cc <HAL_SDRAM_MspDeInit+0x5c>)
9000339c:	f005 ff96 	bl	900092cc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900033a0:	f24c 7103 	movw	r1, #50947	; 0xc703
900033a4:	480a      	ldr	r0, [pc, #40]	; (900033d0 <HAL_SDRAM_MspDeInit+0x60>)
900033a6:	f005 ff91 	bl	900092cc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033aa:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033ae:	4809      	ldr	r0, [pc, #36]	; (900033d4 <HAL_SDRAM_MspDeInit+0x64>)
900033b0:	f005 ff8c 	bl	900092cc <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	21e0      	movs	r1, #224	; 0xe0
900033b6:	4808      	ldr	r0, [pc, #32]	; (900033d8 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033bc:	f005 bf86 	b.w	900092cc <HAL_GPIO_DeInit>
900033c0:	240095d4 	.word	0x240095d4
900033c4:	58024400 	.word	0x58024400
900033c8:	58021000 	.word	0x58021000
900033cc:	58021800 	.word	0x58021800
900033d0:	58020c00 	.word	0x58020c00
900033d4:	58021400 	.word	0x58021400
900033d8:	58021c00 	.word	0x58021c00

900033dc <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033dc:	280f      	cmp	r0, #15
900033de:	d901      	bls.n	900033e4 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033e0:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033e2:	4770      	bx	lr
{
900033e4:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e6:	4601      	mov	r1, r0
{
900033e8:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033ea:	2200      	movs	r2, #0
900033ec:	4604      	mov	r4, r0
900033ee:	2036      	movs	r0, #54	; 0x36
900033f0:	f005 fbce 	bl	90008b90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033f4:	2036      	movs	r0, #54	; 0x36
900033f6:	f005 fc09 	bl	90008c0c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fa:	4b1a      	ldr	r3, [pc, #104]	; (90003464 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033fc:	4a1a      	ldr	r2, [pc, #104]	; (90003468 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033fe:	4669      	mov	r1, sp
90003400:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003402:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003404:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003408:	f042 0210 	orr.w	r2, r2, #16
9000340c:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003410:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003414:	f003 0310 	and.w	r3, r3, #16
90003418:	9301      	str	r3, [sp, #4]
9000341a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000341c:	f009 fa22 	bl	9000c864 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003420:	9b07      	ldr	r3, [sp, #28]
90003422:	b9bb      	cbnz	r3, 90003454 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90003424:	f009 f98e 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003428:	4b10      	ldr	r3, [pc, #64]	; (9000346c <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
9000342a:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000342c:	4c10      	ldr	r4, [pc, #64]	; (90003470 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000342e:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
90003432:	4d10      	ldr	r5, [pc, #64]	; (90003474 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003434:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003438:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000343a:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000343c:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000343e:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003440:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003442:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90003446:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003448:	f00a f99e 	bl	9000d788 <HAL_TIM_Base_Init>
9000344c:	b130      	cbz	r0, 9000345c <HAL_InitTick+0x80>
    return HAL_ERROR;
9000344e:	2001      	movs	r0, #1
}
90003450:	b00b      	add	sp, #44	; 0x2c
90003452:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90003454:	f009 f976 	bl	9000c744 <HAL_RCC_GetPCLK1Freq>
90003458:	0040      	lsls	r0, r0, #1
9000345a:	e7e5      	b.n	90003428 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
9000345c:	4620      	mov	r0, r4
9000345e:	f00a fa49 	bl	9000d8f4 <HAL_TIM_Base_Start_IT>
90003462:	e7f5      	b.n	90003450 <HAL_InitTick+0x74>
90003464:	58024400 	.word	0x58024400
90003468:	24000078 	.word	0x24000078
9000346c:	431bde83 	.word	0x431bde83
90003470:	240095dc 	.word	0x240095dc
90003474:	40001000 	.word	0x40001000

90003478 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003478:	4770      	bx	lr
9000347a:	bf00      	nop

9000347c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <HardFault_Handler>
9000347e:	bf00      	nop

90003480 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <MemManage_Handler>
90003482:	bf00      	nop

90003484 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90003484:	e7fe      	b.n	90003484 <BusFault_Handler>
90003486:	bf00      	nop

90003488 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003488:	e7fe      	b.n	90003488 <UsageFault_Handler>
9000348a:	bf00      	nop

9000348c <DebugMon_Handler>:
9000348c:	4770      	bx	lr
9000348e:	bf00      	nop

90003490 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003490:	4801      	ldr	r0, [pc, #4]	; (90003498 <TIM6_DAC_IRQHandler+0x8>)
90003492:	f00a ba93 	b.w	9000d9bc <HAL_TIM_IRQHandler>
90003496:	bf00      	nop
90003498:	240095dc 	.word	0x240095dc

9000349c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000349c:	4801      	ldr	r0, [pc, #4]	; (900034a4 <LTDC_IRQHandler+0x8>)
9000349e:	f008 b87b 	b.w	9000b598 <HAL_LTDC_IRQHandler>
900034a2:	bf00      	nop
900034a4:	2400941c 	.word	0x2400941c

900034a8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a8:	4801      	ldr	r0, [pc, #4]	; (900034b0 <DMA2D_IRQHandler+0x8>)
900034aa:	f005 bcd9 	b.w	90008e60 <HAL_DMA2D_IRQHandler>
900034ae:	bf00      	nop
900034b0:	2400935c 	.word	0x2400935c

900034b4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034b4:	4801      	ldr	r0, [pc, #4]	; (900034bc <JPEG_IRQHandler+0x8>)
900034b6:	f007 bf5b 	b.w	9000b370 <HAL_JPEG_IRQHandler>
900034ba:	bf00      	nop
900034bc:	240093c4 	.word	0x240093c4

900034c0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c0:	4804      	ldr	r0, [pc, #16]	; (900034d4 <MDMA_IRQHandler+0x14>)
{
900034c2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c4:	f008 fb1c 	bl	9000bb00 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c8:	4803      	ldr	r0, [pc, #12]	; (900034d8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034ce:	f008 bb17 	b.w	9000bb00 <HAL_MDMA_IRQHandler>
900034d2:	bf00      	nop
900034d4:	24009530 	.word	0x24009530
900034d8:	240094c4 	.word	0x240094c4

900034dc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034dc:	2001      	movs	r0, #1
900034de:	4770      	bx	lr

900034e0 <_kill>:

int _kill(int pid, int sig)
{
900034e0:	b508      	push	{r3, lr}
	errno = EINVAL;
900034e2:	f024 fc4f 	bl	90027d84 <__errno>
900034e6:	2216      	movs	r2, #22
900034e8:	4603      	mov	r3, r0
	return -1;
}
900034ea:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034ee:	601a      	str	r2, [r3, #0]
}
900034f0:	bd08      	pop	{r3, pc}
900034f2:	bf00      	nop

900034f4 <_exit>:

void _exit (int status)
{
900034f4:	b508      	push	{r3, lr}
	errno = EINVAL;
900034f6:	f024 fc45 	bl	90027d84 <__errno>
900034fa:	2316      	movs	r3, #22
900034fc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034fe:	e7fe      	b.n	900034fe <_exit+0xa>

90003500 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003500:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003502:	1e16      	subs	r6, r2, #0
90003504:	dd07      	ble.n	90003516 <_read+0x16>
90003506:	460c      	mov	r4, r1
90003508:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000350a:	f3af 8000 	nop.w
9000350e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003512:	42a5      	cmp	r5, r4
90003514:	d1f9      	bne.n	9000350a <_read+0xa>
	}

return len;
}
90003516:	4630      	mov	r0, r6
90003518:	bd70      	pop	{r4, r5, r6, pc}
9000351a:	bf00      	nop

9000351c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000351c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000351e:	1e16      	subs	r6, r2, #0
90003520:	dd07      	ble.n	90003532 <_write+0x16>
90003522:	460c      	mov	r4, r1
90003524:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90003526:	f814 0b01 	ldrb.w	r0, [r4], #1
9000352a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000352e:	42ac      	cmp	r4, r5
90003530:	d1f9      	bne.n	90003526 <_write+0xa>
	}
	return len;
}
90003532:	4630      	mov	r0, r6
90003534:	bd70      	pop	{r4, r5, r6, pc}
90003536:	bf00      	nop

90003538 <_close>:

int _close(int file)
{
	return -1;
}
90003538:	f04f 30ff 	mov.w	r0, #4294967295
9000353c:	4770      	bx	lr
9000353e:	bf00      	nop

90003540 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003540:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90003544:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90003546:	604b      	str	r3, [r1, #4]
}
90003548:	4770      	bx	lr
9000354a:	bf00      	nop

9000354c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000354c:	2001      	movs	r0, #1
9000354e:	4770      	bx	lr

90003550 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003550:	2000      	movs	r0, #0
90003552:	4770      	bx	lr

90003554 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90003554:	4770      	bx	lr
90003556:	bf00      	nop

90003558 <_ZN23ApplicationFontProviderD0Ev>:
90003558:	b510      	push	{r4, lr}
9000355a:	4604      	mov	r4, r0
9000355c:	2104      	movs	r1, #4
9000355e:	f024 f8a7 	bl	900276b0 <_ZdlPvj>
90003562:	4620      	mov	r0, r4
90003564:	bd10      	pop	{r4, pc}
90003566:	bf00      	nop

90003568 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003568:	2901      	cmp	r1, #1
{
9000356a:	b508      	push	{r3, lr}
    switch (typography)
9000356c:	d004      	beq.n	90003578 <_ZN23ApplicationFontProvider7getFontEt+0x10>
9000356e:	2902      	cmp	r1, #2
90003570:	d00a      	beq.n	90003588 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90003572:	b129      	cbz	r1, 90003580 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90003574:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003578:	f000 fe68 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6840      	ldr	r0, [r0, #4]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003580:	f000 fe64 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6800      	ldr	r0, [r0, #0]
}
90003586:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003588:	f000 fe60 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000358c:	6880      	ldr	r0, [r0, #8]
}
9000358e:	bd08      	pop	{r3, pc}

90003590 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003590:	4800      	ldr	r0, [pc, #0]	; (90003594 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90003592:	4770      	bx	lr
90003594:	9002a188 	.word	0x9002a188

90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003598:	200c      	movs	r0, #12
9000359a:	4770      	bx	lr

9000359c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000359c:	b169      	cbz	r1, 900035ba <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900035a0:	b530      	push	{r4, r5, lr}
900035a2:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900035a4:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035a6:	6895      	ldr	r5, [r2, #8]
900035a8:	f10d 0303 	add.w	r3, sp, #3
900035ac:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035ae:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035b0:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035b4:	47a8      	blx	r5
        return glyph;
    }
900035b6:	b003      	add	sp, #12
900035b8:	bd30      	pop	{r4, r5, pc}
            return 0;
900035ba:	4608      	mov	r0, r1
    }
900035bc:	4770      	bx	lr
900035be:	bf00      	nop

900035c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035c0:	89c0      	ldrh	r0, [r0, #14]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035c4:	8a00      	ldrh	r0, [r0, #16]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c8:	88c0      	ldrh	r0, [r0, #6]
900035ca:	4770      	bx	lr

900035cc <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035cc:	8880      	ldrh	r0, [r0, #4]
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035d6:	4770      	bx	lr

900035d8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d8:	7a80      	ldrb	r0, [r0, #10]
    }
900035da:	09c0      	lsrs	r0, r0, #7
900035dc:	4770      	bx	lr
900035de:	bf00      	nop

900035e0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035e0:	4770      	bx	lr
900035e2:	bf00      	nop

900035e4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035e4:	b510      	push	{r4, lr}
900035e6:	4604      	mov	r4, r0
    }
900035e8:	2108      	movs	r1, #8
900035ea:	f024 f861 	bl	900276b0 <_ZdlPvj>
900035ee:	4620      	mov	r0, r4
900035f0:	bd10      	pop	{r4, pc}
900035f2:	bf00      	nop

900035f4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035f4:	4770      	bx	lr
900035f6:	bf00      	nop

900035f8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f8:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035fc:	6808      	ldr	r0, [r1, #0]
900035fe:	6849      	ldr	r1, [r1, #4]
90003600:	c303      	stmia	r3!, {r0, r1}
    }
90003602:	4770      	bx	lr

90003604 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003608:	4770      	bx	lr
9000360a:	bf00      	nop

9000360c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
9000360c:	6041      	str	r1, [r0, #4]
    }
9000360e:	4770      	bx	lr

90003610 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90003610:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003614:	688a      	ldr	r2, [r1, #8]
90003616:	f8c0 c000 	str.w	ip, [r0]
9000361a:	6042      	str	r2, [r0, #4]
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003624:	4770      	bx	lr
90003626:	bf00      	nop

90003628 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003628:	4905      	ldr	r1, [pc, #20]	; (90003640 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
9000362a:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
9000362c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003630:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003634:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003638:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
9000363c:	4770      	bx	lr
9000363e:	bf00      	nop
90003640:	90003b45 	.word	0x90003b45

90003644 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003644:	2301      	movs	r3, #1
90003646:	7203      	strb	r3, [r0, #8]
    }
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f023 fffb 	bl	900276b0 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f023 fff3 	bl	900276b0 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f023 ffea 	bl	900276b0 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f023 ffe3 	bl	900276b0 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f023 ffdb 	bl	900276b0 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003700:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003702:	f012 fe97 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90003706:	6803      	ldr	r3, [r0, #0]
    }
90003708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000370c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000370e:	4718      	bx	r3

90003710 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003710:	b510      	push	{r4, lr}
90003712:	4604      	mov	r4, r0
        animationCounter++;
90003714:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003716:	b082      	sub	sp, #8
        animationCounter++;
90003718:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000371a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
9000371c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000371e:	4298      	cmp	r0, r3
        animationCounter++;
90003720:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
90003722:	d905      	bls.n	90003730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003724:	2201      	movs	r2, #1
            animationCounter = 0;
90003726:	2300      	movs	r3, #0
            done = true;
90003728:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
9000372a:	72a3      	strb	r3, [r4, #10]
    }
9000372c:	b002      	add	sp, #8
9000372e:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003730:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003734:	2100      	movs	r1, #0
90003736:	f014 fc67 	bl	90018008 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000373a:	f010 0201 	ands.w	r2, r0, #1
9000373e:	b283      	uxth	r3, r0
90003740:	d127      	bne.n	90003792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003742:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003744:	4a17      	ldr	r2, [pc, #92]	; (900037a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003746:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003748:	8810      	ldrh	r0, [r2, #0]
9000374a:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000374c:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000374e:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003750:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003752:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003754:	4669      	mov	r1, sp
        rect.width = width;
90003756:	8322      	strh	r2, [r4, #24]
90003758:	f8ad 2000 	strh.w	r2, [sp]
9000375c:	2200      	movs	r2, #0
9000375e:	f8ad 3004 	strh.w	r3, [sp, #4]
90003762:	6803      	ldr	r3, [r0, #0]
90003764:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003768:	4a0f      	ldr	r2, [pc, #60]	; (900037a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
9000376a:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
9000376c:	f9b2 2000 	ldrsh.w	r2, [r2]
90003770:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
90003774:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90003776:	7aa3      	ldrb	r3, [r4, #10]
90003778:	2b01      	cmp	r3, #1
9000377a:	d1d7      	bne.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
9000377c:	4b0b      	ldr	r3, [pc, #44]	; (900037ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
9000377e:	781b      	ldrb	r3, [r3, #0]
90003780:	2b00      	cmp	r3, #0
90003782:	d0d3      	beq.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90003784:	f012 fe56 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
    }
90003788:	b002      	add	sp, #8
9000378a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
9000378e:	f012 be57 	b.w	90016440 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003792:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003796:	2800      	cmp	r0, #0
90003798:	bfd8      	it	le
9000379a:	460a      	movle	r2, r1
9000379c:	4413      	add	r3, r2
9000379e:	b29b      	uxth	r3, r3
900037a0:	81e3      	strh	r3, [r4, #14]
900037a2:	e7cf      	b.n	90003744 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037a4:	240396f8 	.word	0x240396f8
900037a8:	240396fa 	.word	0x240396fa
900037ac:	24039702 	.word	0x24039702

900037b0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900037b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037b4:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900037b8:	b083      	sub	sp, #12
900037ba:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900037bc:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037be:	9301      	str	r3, [sp, #4]
900037c0:	6803      	ldr	r3, [r0, #0]
900037c2:	6a1b      	ldr	r3, [r3, #32]
900037c4:	4798      	blx	r3
900037c6:	f5b0 7f64 	cmp.w	r0, #912	; 0x390
900037ca:	f0c0 80ba 	bcc.w	90003942 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900037ce:	6868      	ldr	r0, [r5, #4]
900037d0:	6803      	ldr	r3, [r0, #0]
900037d2:	6a1b      	ldr	r3, [r3, #32]
900037d4:	4798      	blx	r3
900037d6:	280f      	cmp	r0, #15
900037d8:	f240 80bf 	bls.w	9000395a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900037dc:	68e8      	ldr	r0, [r5, #12]
900037de:	6803      	ldr	r3, [r0, #0]
900037e0:	6a1b      	ldr	r3, [r3, #32]
900037e2:	4798      	blx	r3
900037e4:	2837      	cmp	r0, #55	; 0x37
900037e6:	f240 80b2 	bls.w	9000394e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
900037ea:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003994 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
900037ee:	f012 fe21 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900037f2:	3004      	adds	r0, #4
900037f4:	f012 fe6b 	bl	900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900037f8:	f8d9 0000 	ldr.w	r0, [r9]
900037fc:	b140      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
900037fe:	6803      	ldr	r3, [r0, #0]
90003800:	68db      	ldr	r3, [r3, #12]
90003802:	4798      	blx	r3
    if (*currentTrans)
90003804:	f8d9 0000 	ldr.w	r0, [r9]
90003808:	b110      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
9000380a:	6803      	ldr	r3, [r0, #0]
9000380c:	681b      	ldr	r3, [r3, #0]
9000380e:	4798      	blx	r3
    if (*currentScreen)
90003810:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003998 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
90003814:	f8d8 0000 	ldr.w	r0, [r8]
90003818:	2800      	cmp	r0, #0
9000381a:	d07f      	beq.n	9000391c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
9000381c:	6803      	ldr	r3, [r0, #0]
9000381e:	695b      	ldr	r3, [r3, #20]
90003820:	4798      	blx	r3
    if (*currentPresenter)
90003822:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003826:	2800      	cmp	r0, #0
90003828:	d073      	beq.n	90003912 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
9000382a:	6803      	ldr	r3, [r0, #0]
9000382c:	685b      	ldr	r3, [r3, #4]
9000382e:	4798      	blx	r3
    if (*currentScreen)
90003830:	f8d8 0000 	ldr.w	r0, [r8]
90003834:	b110      	cbz	r0, 9000383c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
90003836:	6803      	ldr	r3, [r0, #0]
90003838:	681b      	ldr	r3, [r3, #0]
9000383a:	4798      	blx	r3
    if (*currentPresenter)
9000383c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003840:	b110      	cbz	r0, 90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003842:	6803      	ldr	r3, [r0, #0]
90003844:	689b      	ldr	r3, [r3, #8]
90003846:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003848:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000384a:	2100      	movs	r1, #0
9000384c:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
9000384e:	468a      	mov	sl, r1
90003850:	6a52      	ldr	r2, [r2, #36]	; 0x24
90003852:	4790      	blx	r2
          solid()
90003854:	4a44      	ldr	r2, [pc, #272]	; (90003968 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
90003856:	f100 0b10 	add.w	fp, r0, #16
9000385a:	4604      	mov	r4, r0
9000385c:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
9000385e:	2214      	movs	r2, #20
          solid()
90003860:	4651      	mov	r1, sl
90003862:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
90003866:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
9000386a:	2228      	movs	r2, #40	; 0x28
9000386c:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003870:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
90003874:	4658      	mov	r0, fp
90003876:	f024 f9d1 	bl	90027c1c <memset>
            targetValue = HAL::DISPLAY_WIDTH;
9000387a:	4a3c      	ldr	r2, [pc, #240]	; (9000396c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000387c:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
9000387e:	f44f 7180 	mov.w	r1, #256	; 0x100
90003882:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
90003886:	f8c4 a014 	str.w	sl, [r4, #20]
9000388a:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
9000388c:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000388e:	4a38      	ldr	r2, [pc, #224]	; (90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
90003890:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
90003894:	8362      	strh	r2, [r4, #26]
90003896:	6802      	ldr	r2, [r0, #0]
90003898:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
9000389a:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
9000389c:	4935      	ldr	r1, [pc, #212]	; (90003974 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
9000389e:	6121      	str	r1, [r4, #16]
900038a0:	4651      	mov	r1, sl
900038a2:	4790      	blx	r2
900038a4:	4606      	mov	r6, r0
900038a6:	f002 ff4f 	bl	90006748 <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	4651      	mov	r1, sl
900038ae:	6803      	ldr	r3, [r0, #0]
900038b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900038b2:	4798      	blx	r3
900038b4:	4605      	mov	r5, r0
900038b6:	4631      	mov	r1, r6
900038b8:	f002 fed0 	bl	9000665c <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900038bc:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900038c0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900038c4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900038c8:	2d00      	cmp	r5, #0
900038ca:	d02c      	beq.n	90003926 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900038cc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900038ce:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900038d0:	4630      	mov	r0, r6
900038d2:	6013      	str	r3, [r2, #0]
900038d4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900038d6:	60aa      	str	r2, [r5, #8]
900038d8:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
900038da:	63f5      	str	r5, [r6, #60]	; 0x3c
900038dc:	4798      	blx	r3
    newPresenter->activate();
900038de:	682b      	ldr	r3, [r5, #0]
900038e0:	4628      	mov	r0, r5
900038e2:	681b      	ldr	r3, [r3, #0]
900038e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900038e6:	4621      	mov	r1, r4
900038e8:	4630      	mov	r0, r6
900038ea:	f014 fb87 	bl	90017ffc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900038ee:	6823      	ldr	r3, [r4, #0]
900038f0:	4a21      	ldr	r2, [pc, #132]	; (90003978 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
900038f2:	691b      	ldr	r3, [r3, #16]
900038f4:	4293      	cmp	r3, r2
900038f6:	d118      	bne.n	9000392a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
900038f8:	6860      	ldr	r0, [r4, #4]
900038fa:	4659      	mov	r1, fp
900038fc:	6803      	ldr	r3, [r0, #0]
900038fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003900:	4798      	blx	r3
    newTransition->invalidate();
90003902:	6823      	ldr	r3, [r4, #0]
90003904:	4a1d      	ldr	r2, [pc, #116]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003906:	695b      	ldr	r3, [r3, #20]
90003908:	4293      	cmp	r3, r2
9000390a:	d115      	bne.n	90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
9000390c:	b003      	add	sp, #12
9000390e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003912:	f8d8 0000 	ldr.w	r0, [r8]
90003916:	2800      	cmp	r0, #0
90003918:	d18d      	bne.n	90003836 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
9000391a:	e795      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
9000391c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003920:	2800      	cmp	r0, #0
90003922:	d182      	bne.n	9000382a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003924:	e790      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003926:	462b      	mov	r3, r5
90003928:	e7d1      	b.n	900038ce <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
9000392a:	4620      	mov	r0, r4
9000392c:	4798      	blx	r3
    newTransition->invalidate();
9000392e:	6823      	ldr	r3, [r4, #0]
90003930:	4a12      	ldr	r2, [pc, #72]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003932:	695b      	ldr	r3, [r3, #20]
90003934:	4293      	cmp	r3, r2
90003936:	d0e9      	beq.n	9000390c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003938:	4620      	mov	r0, r4
9000393a:	b003      	add	sp, #12
9000393c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003940:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003942:	4b0f      	ldr	r3, [pc, #60]	; (90003980 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003944:	21a3      	movs	r1, #163	; 0xa3
90003946:	4a0f      	ldr	r2, [pc, #60]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003948:	480f      	ldr	r0, [pc, #60]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
9000394a:	f023 fedf 	bl	9002770c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000394e:	4b0f      	ldr	r3, [pc, #60]	; (9000398c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003950:	21a5      	movs	r1, #165	; 0xa5
90003952:	4a0c      	ldr	r2, [pc, #48]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003954:	480c      	ldr	r0, [pc, #48]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003956:	f023 fed9 	bl	9002770c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000395a:	4b0d      	ldr	r3, [pc, #52]	; (90003990 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
9000395c:	21a4      	movs	r1, #164	; 0xa4
9000395e:	4a09      	ldr	r2, [pc, #36]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003960:	4809      	ldr	r0, [pc, #36]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003962:	f023 fed3 	bl	9002770c <__assert_func>
90003966:	bf00      	nop
90003968:	9002a90c 	.word	0x9002a90c
9000396c:	240396f8 	.word	0x240396f8
90003970:	240396fa 	.word	0x240396fa
90003974:	9002a814 	.word	0x9002a814
90003978:	90003669 	.word	0x90003669
9000397c:	90003675 	.word	0x90003675
90003980:	9002a288 	.word	0x9002a288
90003984:	9002a318 	.word	0x9002a318
90003988:	9002a444 	.word	0x9002a444
9000398c:	9002a530 	.word	0x9002a530
90003990:	9002a48c 	.word	0x9002a48c
90003994:	2403974c 	.word	0x2403974c
90003998:	24039748 	.word	0x24039748

9000399c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl()
{
9000399c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900039a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
900039a4:	4607      	mov	r7, r0
900039a6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900039a8:	68a0      	ldr	r0, [r4, #8]
900039aa:	6803      	ldr	r3, [r0, #0]
900039ac:	6a1b      	ldr	r3, [r3, #32]
900039ae:	4798      	blx	r3
900039b0:	f242 6327 	movw	r3, #9767	; 0x2627
900039b4:	4298      	cmp	r0, r3
900039b6:	f240 809e 	bls.w	90003af6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x15a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900039ba:	6860      	ldr	r0, [r4, #4]
900039bc:	6803      	ldr	r3, [r0, #0]
900039be:	6a1b      	ldr	r3, [r3, #32]
900039c0:	4798      	blx	r3
900039c2:	280f      	cmp	r0, #15
900039c4:	f240 80a3 	bls.w	90003b0e <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x172>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900039c8:	68e0      	ldr	r0, [r4, #12]
900039ca:	6803      	ldr	r3, [r0, #0]
900039cc:	6a1b      	ldr	r3, [r3, #32]
900039ce:	4798      	blx	r3
900039d0:	280b      	cmp	r0, #11
900039d2:	f240 8096 	bls.w	90003b02 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x166>
    if (*currentTrans)
900039d6:	f8df 9164 	ldr.w	r9, [pc, #356]	; 90003b3c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
900039da:	f012 fd2b 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
900039de:	3004      	adds	r0, #4
900039e0:	f012 fd75 	bl	900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900039e4:	f8d9 0000 	ldr.w	r0, [r9]
900039e8:	b140      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->tearDown();
900039ea:	6803      	ldr	r3, [r0, #0]
900039ec:	68db      	ldr	r3, [r3, #12]
900039ee:	4798      	blx	r3
    if (*currentTrans)
900039f0:	f8d9 0000 	ldr.w	r0, [r9]
900039f4:	b110      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->~Transition();
900039f6:	6803      	ldr	r3, [r0, #0]
900039f8:	681b      	ldr	r3, [r3, #0]
900039fa:	4798      	blx	r3
    if (*currentScreen)
900039fc:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003b40 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a4>
90003a00:	f8d8 0000 	ldr.w	r0, [r8]
90003a04:	2800      	cmp	r0, #0
90003a06:	d063      	beq.n	90003ad0 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x134>
        (*currentScreen)->tearDownScreen();
90003a08:	6803      	ldr	r3, [r0, #0]
90003a0a:	695b      	ldr	r3, [r3, #20]
90003a0c:	4798      	blx	r3
    if (*currentPresenter)
90003a0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a12:	2800      	cmp	r0, #0
90003a14:	d057      	beq.n	90003ac6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x12a>
        (*currentPresenter)->deactivate();
90003a16:	6803      	ldr	r3, [r0, #0]
90003a18:	685b      	ldr	r3, [r3, #4]
90003a1a:	4798      	blx	r3
    if (*currentScreen)
90003a1c:	f8d8 0000 	ldr.w	r0, [r8]
90003a20:	b110      	cbz	r0, 90003a28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->~Screen();
90003a22:	6803      	ldr	r3, [r0, #0]
90003a24:	681b      	ldr	r3, [r3, #0]
90003a26:	4798      	blx	r3
    if (*currentPresenter)
90003a28:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a2c:	b110      	cbz	r0, 90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003a2e:	6803      	ldr	r3, [r0, #0]
90003a30:	689b      	ldr	r3, [r3, #8]
90003a32:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003a34:	68e0      	ldr	r0, [r4, #12]
90003a36:	2100      	movs	r1, #0
90003a38:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003a3a:	468b      	mov	fp, r1
90003a3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a3e:	4798      	blx	r3
90003a40:	4b36      	ldr	r3, [pc, #216]	; (90003b1c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x180>)
90003a42:	4605      	mov	r5, r0
90003a44:	f8c0 b004 	str.w	fp, [r0, #4]
90003a48:	f880 b008 	strb.w	fp, [r0, #8]
90003a4c:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003a4e:	68a0      	ldr	r0, [r4, #8]
90003a50:	602b      	str	r3, [r5, #0]
90003a52:	6803      	ldr	r3, [r0, #0]
90003a54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a56:	4798      	blx	r3
90003a58:	4606      	mov	r6, r0
90003a5a:	f003 fed1 	bl	90007800 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003a5e:	6860      	ldr	r0, [r4, #4]
90003a60:	4659      	mov	r1, fp
90003a62:	6803      	ldr	r3, [r0, #0]
90003a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a66:	4798      	blx	r3
90003a68:	4604      	mov	r4, r0
90003a6a:	4631      	mov	r1, r6
90003a6c:	f003 faca 	bl	90007004 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003a70:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003a74:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003a78:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003a7c:	2c00      	cmp	r4, #0
90003a7e:	d02c      	beq.n	90003ada <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x13e>
90003a80:	1d23      	adds	r3, r4, #4
90003a82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003a86:	4630      	mov	r0, r6
90003a88:	6833      	ldr	r3, [r6, #0]
90003a8a:	f8c4 a008 	str.w	sl, [r4, #8]
90003a8e:	68db      	ldr	r3, [r3, #12]
90003a90:	63f4      	str	r4, [r6, #60]	; 0x3c
90003a92:	4798      	blx	r3
    newPresenter->activate();
90003a94:	6823      	ldr	r3, [r4, #0]
90003a96:	4620      	mov	r0, r4
90003a98:	681b      	ldr	r3, [r3, #0]
90003a9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a9c:	4629      	mov	r1, r5
90003a9e:	4630      	mov	r0, r6
90003aa0:	f014 faac 	bl	90017ffc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003aa4:	682b      	ldr	r3, [r5, #0]
90003aa6:	491e      	ldr	r1, [pc, #120]	; (90003b20 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x184>)
90003aa8:	691a      	ldr	r2, [r3, #16]
90003aaa:	428a      	cmp	r2, r1
90003aac:	d117      	bne.n	90003ade <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90003aae:	695b      	ldr	r3, [r3, #20]
90003ab0:	4a1c      	ldr	r2, [pc, #112]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ab2:	4293      	cmp	r3, r2
90003ab4:	d11a      	bne.n	90003aec <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x150>
        Application::getInstance()->invalidate();
90003ab6:	f012 fcbd 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90003aba:	6803      	ldr	r3, [r0, #0]
90003abc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003abe:	b001      	add	sp, #4
90003ac0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003ac4:	4718      	bx	r3
    if (*currentScreen)
90003ac6:	f8d8 0000 	ldr.w	r0, [r8]
90003aca:	2800      	cmp	r0, #0
90003acc:	d1a9      	bne.n	90003a22 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x86>
90003ace:	e7b1      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    if (*currentPresenter)
90003ad0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003ad4:	2800      	cmp	r0, #0
90003ad6:	d19e      	bne.n	90003a16 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x7a>
90003ad8:	e7ac      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    model->bind(newPresenter);
90003ada:	4623      	mov	r3, r4
90003adc:	e7d1      	b.n	90003a82 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0xe6>
    newTransition->init();
90003ade:	4628      	mov	r0, r5
90003ae0:	4790      	blx	r2
    newTransition->invalidate();
90003ae2:	682b      	ldr	r3, [r5, #0]
90003ae4:	4a0f      	ldr	r2, [pc, #60]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ae6:	695b      	ldr	r3, [r3, #20]
90003ae8:	4293      	cmp	r3, r2
90003aea:	d0e4      	beq.n	90003ab6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x11a>
90003aec:	4628      	mov	r0, r5
90003aee:	b001      	add	sp, #4
90003af0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003af4:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003af6:	4b0c      	ldr	r3, [pc, #48]	; (90003b28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x18c>)
90003af8:	21a3      	movs	r1, #163	; 0xa3
90003afa:	4a0c      	ldr	r2, [pc, #48]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003afc:	480c      	ldr	r0, [pc, #48]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003afe:	f023 fe05 	bl	9002770c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b02:	4b0c      	ldr	r3, [pc, #48]	; (90003b34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x198>)
90003b04:	21a5      	movs	r1, #165	; 0xa5
90003b06:	4a09      	ldr	r2, [pc, #36]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b08:	4809      	ldr	r0, [pc, #36]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b0a:	f023 fdff 	bl	9002770c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b0e:	4b0a      	ldr	r3, [pc, #40]	; (90003b38 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x19c>)
90003b10:	21a4      	movs	r1, #164	; 0xa4
90003b12:	4a06      	ldr	r2, [pc, #24]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b14:	4806      	ldr	r0, [pc, #24]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b16:	f023 fdf9 	bl	9002770c <__assert_func>
90003b1a:	bf00      	nop
90003b1c:	9002a8e8 	.word	0x9002a8e8
90003b20:	90003609 	.word	0x90003609
90003b24:	90003701 	.word	0x90003701
90003b28:	9002a288 	.word	0x9002a288
90003b2c:	9002a5d4 	.word	0x9002a5d4
90003b30:	9002a444 	.word	0x9002a444
90003b34:	9002a530 	.word	0x9002a530
90003b38:	9002a48c 	.word	0x9002a48c
90003b3c:	2403974c 	.word	0x2403974c
90003b40:	24039748 	.word	0x24039748

90003b44 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b4c:	4607      	mov	r7, r0
90003b4e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b50:	68a0      	ldr	r0, [r4, #8]
90003b52:	6803      	ldr	r3, [r0, #0]
90003b54:	6a1b      	ldr	r3, [r3, #32]
90003b56:	4798      	blx	r3
90003b58:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
90003b5c:	f0c0 809e 	bcc.w	90003c9c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b60:	6860      	ldr	r0, [r4, #4]
90003b62:	6803      	ldr	r3, [r0, #0]
90003b64:	6a1b      	ldr	r3, [r3, #32]
90003b66:	4798      	blx	r3
90003b68:	280f      	cmp	r0, #15
90003b6a:	f240 80a3 	bls.w	90003cb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b6e:	68e0      	ldr	r0, [r4, #12]
90003b70:	6803      	ldr	r3, [r0, #0]
90003b72:	6a1b      	ldr	r3, [r3, #32]
90003b74:	4798      	blx	r3
90003b76:	280b      	cmp	r0, #11
90003b78:	f240 8096 	bls.w	90003ca8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b7c:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003ce0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b80:	f012 fc58 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90003b84:	3004      	adds	r0, #4
90003b86:	f012 fca2 	bl	900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b8a:	f8d9 0000 	ldr.w	r0, [r9]
90003b8e:	b140      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b90:	6803      	ldr	r3, [r0, #0]
90003b92:	68db      	ldr	r3, [r3, #12]
90003b94:	4798      	blx	r3
    if (*currentTrans)
90003b96:	f8d9 0000 	ldr.w	r0, [r9]
90003b9a:	b110      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b9c:	6803      	ldr	r3, [r0, #0]
90003b9e:	681b      	ldr	r3, [r3, #0]
90003ba0:	4798      	blx	r3
    if (*currentScreen)
90003ba2:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003ce4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003ba6:	f8d8 0000 	ldr.w	r0, [r8]
90003baa:	2800      	cmp	r0, #0
90003bac:	d063      	beq.n	90003c76 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003bae:	6803      	ldr	r3, [r0, #0]
90003bb0:	695b      	ldr	r3, [r3, #20]
90003bb2:	4798      	blx	r3
    if (*currentPresenter)
90003bb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb8:	2800      	cmp	r0, #0
90003bba:	d057      	beq.n	90003c6c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bbc:	6803      	ldr	r3, [r0, #0]
90003bbe:	685b      	ldr	r3, [r3, #4]
90003bc0:	4798      	blx	r3
    if (*currentScreen)
90003bc2:	f8d8 0000 	ldr.w	r0, [r8]
90003bc6:	b110      	cbz	r0, 90003bce <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc8:	6803      	ldr	r3, [r0, #0]
90003bca:	681b      	ldr	r3, [r3, #0]
90003bcc:	4798      	blx	r3
    if (*currentPresenter)
90003bce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bd2:	b110      	cbz	r0, 90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bd4:	6803      	ldr	r3, [r0, #0]
90003bd6:	689b      	ldr	r3, [r3, #8]
90003bd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bda:	68e0      	ldr	r0, [r4, #12]
90003bdc:	2100      	movs	r1, #0
90003bde:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003be0:	468b      	mov	fp, r1
90003be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003be4:	4798      	blx	r3
90003be6:	4b36      	ldr	r3, [pc, #216]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be8:	4605      	mov	r5, r0
90003bea:	f8c0 b004 	str.w	fp, [r0, #4]
90003bee:	f880 b008 	strb.w	fp, [r0, #8]
90003bf2:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bf4:	68a0      	ldr	r0, [r4, #8]
90003bf6:	602b      	str	r3, [r5, #0]
90003bf8:	6803      	ldr	r3, [r0, #0]
90003bfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bfc:	4798      	blx	r3
90003bfe:	4606      	mov	r6, r0
90003c00:	f002 fd06 	bl	90006610 <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003c04:	6860      	ldr	r0, [r4, #4]
90003c06:	4659      	mov	r1, fp
90003c08:	6803      	ldr	r3, [r0, #0]
90003c0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c0c:	4798      	blx	r3
90003c0e:	4604      	mov	r4, r0
90003c10:	4631      	mov	r1, r6
90003c12:	f002 fcd1 	bl	900065b8 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c22:	2c00      	cmp	r4, #0
90003c24:	d02c      	beq.n	90003c80 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c26:	1d23      	adds	r3, r4, #4
90003c28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c2c:	4630      	mov	r0, r6
90003c2e:	6833      	ldr	r3, [r6, #0]
90003c30:	f8c4 a008 	str.w	sl, [r4, #8]
90003c34:	68db      	ldr	r3, [r3, #12]
90003c36:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c38:	4798      	blx	r3
    newPresenter->activate();
90003c3a:	6823      	ldr	r3, [r4, #0]
90003c3c:	4620      	mov	r0, r4
90003c3e:	681b      	ldr	r3, [r3, #0]
90003c40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c42:	4629      	mov	r1, r5
90003c44:	4630      	mov	r0, r6
90003c46:	f014 f9d9 	bl	90017ffc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c4a:	682b      	ldr	r3, [r5, #0]
90003c4c:	491d      	ldr	r1, [pc, #116]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c4e:	691a      	ldr	r2, [r3, #16]
90003c50:	428a      	cmp	r2, r1
90003c52:	d117      	bne.n	90003c84 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c54:	695b      	ldr	r3, [r3, #20]
90003c56:	4a1c      	ldr	r2, [pc, #112]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c58:	4293      	cmp	r3, r2
90003c5a:	d11a      	bne.n	90003c92 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c5c:	f012 fbea 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90003c60:	6803      	ldr	r3, [r0, #0]
90003c62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c64:	b001      	add	sp, #4
90003c66:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c6a:	4718      	bx	r3
    if (*currentScreen)
90003c6c:	f8d8 0000 	ldr.w	r0, [r8]
90003c70:	2800      	cmp	r0, #0
90003c72:	d1a9      	bne.n	90003bc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c74:	e7b1      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c7a:	2800      	cmp	r0, #0
90003c7c:	d19e      	bne.n	90003bbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c7e:	e7ac      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c80:	4623      	mov	r3, r4
90003c82:	e7d1      	b.n	90003c28 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c84:	4628      	mov	r0, r5
90003c86:	4790      	blx	r2
    newTransition->invalidate();
90003c88:	682b      	ldr	r3, [r5, #0]
90003c8a:	4a0f      	ldr	r2, [pc, #60]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c8c:	695b      	ldr	r3, [r3, #20]
90003c8e:	4293      	cmp	r3, r2
90003c90:	d0e4      	beq.n	90003c5c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c92:	4628      	mov	r0, r5
90003c94:	b001      	add	sp, #4
90003c96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c9a:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c9c:	4b0b      	ldr	r3, [pc, #44]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c9e:	21a3      	movs	r1, #163	; 0xa3
90003ca0:	4a0b      	ldr	r2, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca2:	480c      	ldr	r0, [pc, #48]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca4:	f023 fd32 	bl	9002770c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca8:	4b0b      	ldr	r3, [pc, #44]	; (90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003caa:	21a5      	movs	r1, #165	; 0xa5
90003cac:	4a08      	ldr	r2, [pc, #32]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cae:	4809      	ldr	r0, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb0:	f023 fd2c 	bl	9002770c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cb4:	4b09      	ldr	r3, [pc, #36]	; (90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cb6:	21a4      	movs	r1, #164	; 0xa4
90003cb8:	4a05      	ldr	r2, [pc, #20]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cba:	4806      	ldr	r0, [pc, #24]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cbc:	f023 fd26 	bl	9002770c <__assert_func>
90003cc0:	9002a8e8 	.word	0x9002a8e8
90003cc4:	90003609 	.word	0x90003609
90003cc8:	90003701 	.word	0x90003701
90003ccc:	9002a288 	.word	0x9002a288
90003cd0:	9002a6f4 	.word	0x9002a6f4
90003cd4:	9002a444 	.word	0x9002a444
90003cd8:	9002a530 	.word	0x9002a530
90003cdc:	9002a48c 	.word	0x9002a48c
90003ce0:	2403974c 	.word	0x2403974c
90003ce4:	24039748 	.word	0x24039748

90003ce8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ce8:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003cec:	b1d3      	cbz	r3, 90003d24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003cee:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003cf0:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003cf2:	68d1      	ldr	r1, [r2, #12]
90003cf4:	4604      	mov	r4, r0
90003cf6:	4818      	ldr	r0, [pc, #96]	; (90003d58 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003cf8:	4281      	cmp	r1, r0
90003cfa:	d118      	bne.n	90003d2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003cfc:	6858      	ldr	r0, [r3, #4]
90003cfe:	b180      	cbz	r0, 90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d00:	6899      	ldr	r1, [r3, #8]
90003d02:	b1e1      	cbz	r1, 90003d3e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003d04:	6892      	ldr	r2, [r2, #8]
90003d06:	4915      	ldr	r1, [pc, #84]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d08:	428a      	cmp	r2, r1
90003d0a:	d122      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d0c:	68da      	ldr	r2, [r3, #12]
90003d0e:	6858      	ldr	r0, [r3, #4]
90003d10:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003d14:	07d2      	lsls	r2, r2, #31
90003d16:	d406      	bmi.n	90003d26 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003d18:	689b      	ldr	r3, [r3, #8]
90003d1a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003d1c:	2300      	movs	r3, #0
90003d1e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003d22:	bd70      	pop	{r4, r5, r6, pc}
90003d24:	4770      	bx	lr
90003d26:	6899      	ldr	r1, [r3, #8]
90003d28:	6803      	ldr	r3, [r0, #0]
90003d2a:	585b      	ldr	r3, [r3, r1]
90003d2c:	e7f5      	b.n	90003d1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003d2e:	4618      	mov	r0, r3
90003d30:	4788      	blx	r1
90003d32:	2800      	cmp	r0, #0
90003d34:	d0f5      	beq.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003d36:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003d3a:	681a      	ldr	r2, [r3, #0]
90003d3c:	e7e2      	b.n	90003d04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003d3e:	68dd      	ldr	r5, [r3, #12]
90003d40:	07ee      	lsls	r6, r5, #31
90003d42:	d5ee      	bpl.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d44:	6892      	ldr	r2, [r2, #8]
90003d46:	4e05      	ldr	r6, [pc, #20]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d48:	42b2      	cmp	r2, r6
90003d4a:	d102      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d4c:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003d50:	e7ea      	b.n	90003d28 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003d52:	4618      	mov	r0, r3
90003d54:	4790      	blx	r2
90003d56:	e7e1      	b.n	90003d1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003d58:	90003699 	.word	0x90003699
90003d5c:	90003679 	.word	0x90003679

90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90003d60:	b570      	push	{r4, r5, r6, lr}
90003d62:	4604      	mov	r4, r0
90003d64:	4615      	mov	r5, r2
90003d66:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90003d68:	f012 fc52 	bl	90016610 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90003d6c:	4a1d      	ldr	r2, [pc, #116]	; (90003de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90003d6e:	2300      	movs	r3, #0
      frontendHeap(heap),
90003d70:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90003d74:	6014      	str	r4, [r2, #0]
        return instance;
90003d76:	4d1c      	ldr	r5, [pc, #112]	; (90003de8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90003d78:	4a1c      	ldr	r2, [pc, #112]	; (90003dec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90003d7a:	6828      	ldr	r0, [r5, #0]
90003d7c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90003d7e:	4a1c      	ldr	r2, [pc, #112]	; (90003df0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90003d80:	491c      	ldr	r1, [pc, #112]	; (90003df4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90003d82:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90003d86:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90003d8a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90003d8e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003d92:	6802      	ldr	r2, [r0, #0]
90003d94:	6892      	ldr	r2, [r2, #8]
90003d96:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90003d98:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90003d9c:	d11f      	bne.n	90003dde <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90003d9e:	f44f 7380 	mov.w	r3, #256	; 0x100
90003da2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90003da6:	2000      	movs	r0, #0
90003da8:	f000 fa02 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003dac:	682b      	ldr	r3, [r5, #0]
90003dae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003db2:	b192      	cbz	r2, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90003db4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003db6:	b180      	cbz	r0, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90003db8:	f01b fdd9 	bl	9001f96e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90003dbc:	682b      	ldr	r3, [r5, #0]
90003dbe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003dc2:	b12a      	cbz	r2, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90003dc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003dc6:	b118      	cbz	r0, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dc8:	f01b fe4c 	bl	9001fa64 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dcc:	4620      	mov	r0, r4
90003dce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003dd0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dd2:	f01b fe47 	bl	9001fa64 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dd6:	4620      	mov	r0, r4
90003dd8:	bd70      	pop	{r4, r5, r6, pc}
90003dda:	6898      	ldr	r0, [r3, #8]
90003ddc:	e7ec      	b.n	90003db8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003dde:	4619      	mov	r1, r3
90003de0:	4790      	blx	r2
90003de2:	e7e0      	b.n	90003da6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90003de4:	24039758 	.word	0x24039758
90003de8:	24039704 	.word	0x24039704
90003dec:	9002a894 	.word	0x9002a894
90003df0:	9002a87c 	.word	0x9002a87c
90003df4:	90000665 	.word	0x90000665

90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003df8:	4905      	ldr	r1, [pc, #20]	; (90003e10 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
90003dfa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003dfc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e00:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e04:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e08:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e0c:	4770      	bx	lr
90003e0e:	bf00      	nop
90003e10:	90003b45 	.word	0x90003b45

90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
90003e14:	4905      	ldr	r1, [pc, #20]	; (90003e2c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
90003e16:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e1c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e24:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e28:	4770      	bx	lr
90003e2a:	bf00      	nop
90003e2c:	900037b1 	.word	0x900037b1

90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>:
90003e30:	4905      	ldr	r1, [pc, #20]	; (90003e48 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv+0x18>)
90003e32:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e38:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e40:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e44:	4770      	bx	lr
90003e46:	bf00      	nop
90003e48:	9000399d 	.word	0x9000399d

90003e4c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90003e4c:	6a40      	ldr	r0, [r0, #36]	; 0x24
90003e4e:	4770      	bx	lr

90003e50 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90003e50:	6a80      	ldr	r0, [r0, #40]	; 0x28
90003e52:	4770      	bx	lr

90003e54 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90003e54:	4770      	bx	lr
90003e56:	bf00      	nop

90003e58 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90003e58:	888b      	ldrh	r3, [r1, #4]
90003e5a:	69c0      	ldr	r0, [r0, #28]
90003e5c:	0adb      	lsrs	r3, r3, #11
90003e5e:	680a      	ldr	r2, [r1, #0]
90003e60:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90003e64:	4410      	add	r0, r2
90003e66:	4770      	bx	lr

90003e68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90003e68:	b1da      	cbz	r2, 90003ea2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90003e6a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90003e6c:	7b14      	ldrb	r4, [r2, #12]
90003e6e:	b1b4      	cbz	r4, 90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90003e70:	f892 c00d 	ldrb.w	ip, [r2, #13]
90003e74:	f892 e00b 	ldrb.w	lr, [r2, #11]
90003e78:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90003e7c:	6a03      	ldr	r3, [r0, #32]
90003e7e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90003e82:	ea4e 0202 	orr.w	r2, lr, r2
90003e86:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e8a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90003e8e:	881a      	ldrh	r2, [r3, #0]
90003e90:	428a      	cmp	r2, r1
90003e92:	d008      	beq.n	90003ea6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e94:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90003e98:	d801      	bhi.n	90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e9a:	4283      	cmp	r3, r0
90003e9c:	d1f7      	bne.n	90003e8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90003e9e:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90003ea0:	bd10      	pop	{r4, pc}
        return 0;
90003ea2:	4610      	mov	r0, r2
}
90003ea4:	4770      	bx	lr
            return kerndata->distance;
90003ea6:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90003eaa:	bd10      	pop	{r4, pc}

90003eac <_ZN8touchgfx13GeneratedFontD0Ev>:
90003eac:	b510      	push	{r4, lr}
90003eae:	4604      	mov	r4, r0
90003eb0:	212c      	movs	r1, #44	; 0x2c
90003eb2:	f023 fbfd 	bl	900276b0 <_ZdlPvj>
90003eb6:	4620      	mov	r0, r4
90003eb8:	bd10      	pop	{r4, pc}
90003eba:	bf00      	nop

90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ebc:	b530      	push	{r4, r5, lr}
90003ebe:	b08b      	sub	sp, #44	; 0x2c
90003ec0:	4604      	mov	r4, r0
90003ec2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90003ec6:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ec8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
90003ecc:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ece:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90003ed2:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ed4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90003ed8:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eda:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
90003ede:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90003ee4:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90003eea:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eec:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
90003ef0:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ef2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90003ef6:	9508      	str	r5, [sp, #32]
90003ef8:	f013 fbea 	bl	900176d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90003efc:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
90003efe:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90003f00:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90003f02:	9b16      	ldr	r3, [sp, #88]	; 0x58
90003f04:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90003f06:	9b19      	ldr	r3, [sp, #100]	; 0x64
90003f08:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90003f0a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90003f0c:	62a3      	str	r3, [r4, #40]	; 0x28
90003f0e:	4b02      	ldr	r3, [pc, #8]	; (90003f18 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90003f10:	6023      	str	r3, [r4, #0]
}
90003f12:	b00b      	add	sp, #44	; 0x2c
90003f14:	bd30      	pop	{r4, r5, pc}
90003f16:	bf00      	nop
90003f18:	9002a930 	.word	0x9002a930

90003f1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f1c:	4770      	bx	lr
90003f1e:	bf00      	nop

90003f20 <_Z23getFont_verdana_10_4bppv>:
{
90003f20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f22:	4d18      	ldr	r5, [pc, #96]	; (90003f84 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90003f24:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f26:	682c      	ldr	r4, [r5, #0]
90003f28:	f3bf 8f5b 	dmb	ish
90003f2c:	f014 0401 	ands.w	r4, r4, #1
90003f30:	d002      	beq.n	90003f38 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90003f32:	4815      	ldr	r0, [pc, #84]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f34:	b00f      	add	sp, #60	; 0x3c
90003f36:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f38:	4628      	mov	r0, r5
90003f3a:	f023 fbbb 	bl	900276b4 <__cxa_guard_acquire>
90003f3e:	2800      	cmp	r0, #0
90003f40:	d0f7      	beq.n	90003f32 <_Z23getFont_verdana_10_4bppv+0x12>
90003f42:	213f      	movs	r1, #63	; 0x3f
90003f44:	2201      	movs	r2, #1
90003f46:	230a      	movs	r3, #10
90003f48:	2004      	movs	r0, #4
90003f4a:	9204      	str	r2, [sp, #16]
90003f4c:	9300      	str	r3, [sp, #0]
90003f4e:	9003      	str	r0, [sp, #12]
90003f50:	480d      	ldr	r0, [pc, #52]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f52:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003f56:	490d      	ldr	r1, [pc, #52]	; (90003f8c <_Z23getFont_verdana_10_4bppv+0x6c>)
90003f58:	9108      	str	r1, [sp, #32]
90003f5a:	490d      	ldr	r1, [pc, #52]	; (90003f90 <_Z23getFont_verdana_10_4bppv+0x70>)
90003f5c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003f60:	9107      	str	r1, [sp, #28]
90003f62:	490c      	ldr	r1, [pc, #48]	; (90003f94 <_Z23getFont_verdana_10_4bppv+0x74>)
90003f64:	e9cd 4405 	strd	r4, r4, [sp, #20]
90003f68:	e9cd 4401 	strd	r4, r4, [sp, #4]
90003f6c:	f7ff ffa6 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003f70:	4809      	ldr	r0, [pc, #36]	; (90003f98 <_Z23getFont_verdana_10_4bppv+0x78>)
90003f72:	f023 fbe9 	bl	90027748 <atexit>
90003f76:	4628      	mov	r0, r5
90003f78:	f023 fba8 	bl	900276cc <__cxa_guard_release>
}
90003f7c:	4802      	ldr	r0, [pc, #8]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f7e:	b00f      	add	sp, #60	; 0x3c
90003f80:	bd30      	pop	{r4, r5, pc}
90003f82:	bf00      	nop
90003f84:	24009628 	.word	0x24009628
90003f88:	2400962c 	.word	0x2400962c
90003f8c:	9002bf40 	.word	0x9002bf40
90003f90:	9002c03c 	.word	0x9002c03c
90003f94:	90201dbc 	.word	0x90201dbc
90003f98:	90003f1d 	.word	0x90003f1d

90003f9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003f9c:	4770      	bx	lr
90003f9e:	bf00      	nop

90003fa0 <_Z23getFont_verdana_20_4bppv>:
{
90003fa0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa2:	4d19      	ldr	r5, [pc, #100]	; (90004008 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90003fa4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa6:	682c      	ldr	r4, [r5, #0]
90003fa8:	f3bf 8f5b 	dmb	ish
90003fac:	f014 0401 	ands.w	r4, r4, #1
90003fb0:	d002      	beq.n	90003fb8 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90003fb2:	4816      	ldr	r0, [pc, #88]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fb4:	b00f      	add	sp, #60	; 0x3c
90003fb6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fb8:	4628      	mov	r0, r5
90003fba:	f023 fb7b 	bl	900276b4 <__cxa_guard_acquire>
90003fbe:	2800      	cmp	r0, #0
90003fc0:	d0f7      	beq.n	90003fb2 <_Z23getFont_verdana_20_4bppv+0x12>
90003fc2:	213f      	movs	r1, #63	; 0x3f
90003fc4:	4a12      	ldr	r2, [pc, #72]	; (90004010 <_Z23getFont_verdana_20_4bppv+0x70>)
90003fc6:	2301      	movs	r3, #1
90003fc8:	2014      	movs	r0, #20
90003fca:	9208      	str	r2, [sp, #32]
90003fcc:	2204      	movs	r2, #4
90003fce:	9304      	str	r3, [sp, #16]
90003fd0:	9000      	str	r0, [sp, #0]
90003fd2:	9401      	str	r4, [sp, #4]
90003fd4:	480d      	ldr	r0, [pc, #52]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fd6:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003fda:	490e      	ldr	r1, [pc, #56]	; (90004014 <_Z23getFont_verdana_20_4bppv+0x74>)
90003fdc:	e9cd 3305 	strd	r3, r3, [sp, #20]
90003fe0:	9107      	str	r1, [sp, #28]
90003fe2:	2318      	movs	r3, #24
90003fe4:	490c      	ldr	r1, [pc, #48]	; (90004018 <_Z23getFont_verdana_20_4bppv+0x78>)
90003fe6:	e9cd 4202 	strd	r4, r2, [sp, #8]
90003fea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003fee:	2241      	movs	r2, #65	; 0x41
90003ff0:	f7ff ff64 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003ff4:	4809      	ldr	r0, [pc, #36]	; (9000401c <_Z23getFont_verdana_20_4bppv+0x7c>)
90003ff6:	f023 fba7 	bl	90027748 <atexit>
90003ffa:	4628      	mov	r0, r5
90003ffc:	f023 fb66 	bl	900276cc <__cxa_guard_release>
}
90004000:	4802      	ldr	r0, [pc, #8]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90004002:	b00f      	add	sp, #60	; 0x3c
90004004:	bd30      	pop	{r4, r5, pc}
90004006:	bf00      	nop
90004008:	24009658 	.word	0x24009658
9000400c:	2400965c 	.word	0x2400965c
90004010:	9002bf44 	.word	0x9002bf44
90004014:	9002c040 	.word	0x9002c040
90004018:	90201dcc 	.word	0x90201dcc
9000401c:	90003f9d 	.word	0x90003f9d

90004020 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004020:	4770      	bx	lr
90004022:	bf00      	nop

90004024 <_Z23getFont_verdana_40_4bppv>:
{
90004024:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004026:	4d19      	ldr	r5, [pc, #100]	; (9000408c <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004028:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000402a:	682c      	ldr	r4, [r5, #0]
9000402c:	f3bf 8f5b 	dmb	ish
90004030:	f014 0401 	ands.w	r4, r4, #1
90004034:	d002      	beq.n	9000403c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004036:	4816      	ldr	r0, [pc, #88]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004038:	b00f      	add	sp, #60	; 0x3c
9000403a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000403c:	4628      	mov	r0, r5
9000403e:	f023 fb39 	bl	900276b4 <__cxa_guard_acquire>
90004042:	2800      	cmp	r0, #0
90004044:	d0f7      	beq.n	90004036 <_Z23getFont_verdana_40_4bppv+0x12>
90004046:	213f      	movs	r1, #63	; 0x3f
90004048:	4a12      	ldr	r2, [pc, #72]	; (90004094 <_Z23getFont_verdana_40_4bppv+0x70>)
9000404a:	2301      	movs	r3, #1
9000404c:	2028      	movs	r0, #40	; 0x28
9000404e:	9208      	str	r2, [sp, #32]
90004050:	2204      	movs	r2, #4
90004052:	9304      	str	r3, [sp, #16]
90004054:	9000      	str	r0, [sp, #0]
90004056:	9401      	str	r4, [sp, #4]
90004058:	480d      	ldr	r0, [pc, #52]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000405a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000405e:	490e      	ldr	r1, [pc, #56]	; (90004098 <_Z23getFont_verdana_40_4bppv+0x74>)
90004060:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004064:	9107      	str	r1, [sp, #28]
90004066:	2329      	movs	r3, #41	; 0x29
90004068:	490c      	ldr	r1, [pc, #48]	; (9000409c <_Z23getFont_verdana_40_4bppv+0x78>)
9000406a:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000406e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004072:	220a      	movs	r2, #10
90004074:	f7ff ff22 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004078:	4809      	ldr	r0, [pc, #36]	; (900040a0 <_Z23getFont_verdana_40_4bppv+0x7c>)
9000407a:	f023 fb65 	bl	90027748 <atexit>
9000407e:	4628      	mov	r0, r5
90004080:	f023 fb24 	bl	900276cc <__cxa_guard_release>
}
90004084:	4802      	ldr	r0, [pc, #8]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004086:	b00f      	add	sp, #60	; 0x3c
90004088:	bd30      	pop	{r4, r5, pc}
9000408a:	bf00      	nop
9000408c:	24009688 	.word	0x24009688
90004090:	2400968c 	.word	0x2400968c
90004094:	9002c034 	.word	0x9002c034
90004098:	9002c044 	.word	0x9002c044
9000409c:	9020215c 	.word	0x9020215c
900040a0:	90004021 	.word	0x90004021

900040a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900040a4:	2000      	movs	r0, #0
900040a6:	4770      	bx	lr

900040a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900040a8:	2000      	movs	r0, #0
900040aa:	4770      	bx	lr

900040ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040ac:	b40e      	push	{r1, r2, r3}
900040ae:	b500      	push	{lr}
900040b0:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040b2:	2100      	movs	r1, #0
{
900040b4:	ab03      	add	r3, sp, #12
900040b6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900040ba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040bc:	f013 f930 	bl	90017320 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040c0:	b002      	add	sp, #8
900040c2:	f85d eb04 	ldr.w	lr, [sp], #4
900040c6:	b003      	add	sp, #12
900040c8:	4770      	bx	lr
900040ca:	bf00      	nop

900040cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040cc:	b40c      	push	{r2, r3}
900040ce:	b500      	push	{lr}
900040d0:	b083      	sub	sp, #12
900040d2:	ab04      	add	r3, sp, #16
900040d4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900040d8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900040da:	f013 f921 	bl	90017320 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040de:	b003      	add	sp, #12
900040e0:	f85d eb04 	ldr.w	lr, [sp], #4
900040e4:	b002      	add	sp, #8
900040e6:	4770      	bx	lr

900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900040e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900040ea:	b510      	push	{r4, lr}
900040ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900040ee:	b133      	cbz	r3, 900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900040f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900040f2:	b39b      	cbz	r3, 9000415c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900040f4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900040f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900040fa:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900040fc:	b923      	cbnz	r3, 90004108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900040fe:	4620      	mov	r0, r4
}
90004100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004104:	f014 bbe0 	b.w	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004108:	f014 fcdc 	bl	90018ac4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000410c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000410e:	2b01      	cmp	r3, #1
90004110:	d92a      	bls.n	90004168 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90004112:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004114:	1c53      	adds	r3, r2, #1
90004116:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004118:	2b09      	cmp	r3, #9
9000411a:	d812      	bhi.n	90004142 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
9000411c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004120:	f640 103f 	movw	r0, #2367	; 0x93f
90004124:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004126:	4281      	cmp	r1, r0
90004128:	d1e9      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000412a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000412e:	0052      	lsls	r2, r2, #1
90004130:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90004132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004136:	4422      	add	r2, r4
90004138:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
9000413c:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000413e:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004140:	e7dd      	b.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004142:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004146:	f640 113f 	movw	r1, #2367	; 0x93f
9000414a:	89db      	ldrh	r3, [r3, #14]
9000414c:	428b      	cmp	r3, r1
9000414e:	d1d6      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004150:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004154:	2300      	movs	r3, #0
90004156:	0052      	lsls	r2, r2, #1
90004158:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000415a:	e7ea      	b.n	90004132 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000415c:	4b05      	ldr	r3, [pc, #20]	; (90004174 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000415e:	21c5      	movs	r1, #197	; 0xc5
90004160:	4a05      	ldr	r2, [pc, #20]	; (90004178 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004162:	4806      	ldr	r0, [pc, #24]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004164:	f023 fad2 	bl	9002770c <__assert_func>
            assert(offset < used);
90004168:	4b05      	ldr	r3, [pc, #20]	; (90004180 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000416a:	21cb      	movs	r1, #203	; 0xcb
9000416c:	4a05      	ldr	r2, [pc, #20]	; (90004184 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000416e:	4803      	ldr	r0, [pc, #12]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004170:	f023 facc 	bl	9002770c <__assert_func>
90004174:	9002a988 	.word	0x9002a988
90004178:	9002a994 	.word	0x9002a994
9000417c:	9002aa40 	.word	0x9002aa40
90004180:	9002aa8c 	.word	0x9002aa8c
90004184:	9002aa9c 	.word	0x9002aa9c

90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004188:	f014 bb67 	b.w	9001885a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000418c:	b510      	push	{r4, lr}
9000418e:	b086      	sub	sp, #24
90004190:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004194:	ac0a      	add	r4, sp, #40	; 0x28
{
90004196:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000419a:	461a      	mov	r2, r3
9000419c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000419e:	4661      	mov	r1, ip
900041a0:	9401      	str	r4, [sp, #4]
900041a2:	9300      	str	r3, [sp, #0]
900041a4:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900041a6:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900041a8:	f011 fcc4 	bl	90015b34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900041ac:	b006      	add	sp, #24
900041ae:	bd10      	pop	{r4, pc}

900041b0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900041b0:	b9e0      	cbnz	r0, 900041ec <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900041b2:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900041b4:	4b13      	ldr	r3, [pc, #76]	; (90004204 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900041b6:	681b      	ldr	r3, [r3, #0]
900041b8:	b1cb      	cbz	r3, 900041ee <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041ba:	4c13      	ldr	r4, [pc, #76]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041bc:	4813      	ldr	r0, [pc, #76]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041be:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c2:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041c4:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c6:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041c8:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041ca:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041cc:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900041ce:	4b10      	ldr	r3, [pc, #64]	; (90004210 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900041d0:	2200      	movs	r2, #0
900041d2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900041d4:	f000 f83a 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
900041d8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900041da:	f000 f835 	bl	90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900041de:	4b0d      	ldr	r3, [pc, #52]	; (90004214 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900041e0:	4a0d      	ldr	r2, [pc, #52]	; (90004218 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900041e2:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900041e4:	4b0d      	ldr	r3, [pc, #52]	; (9000421c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900041e6:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900041e8:	8018      	strh	r0, [r3, #0]
    }
}
900041ea:	bd38      	pop	{r3, r4, r5, pc}
900041ec:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041ee:	4c0c      	ldr	r4, [pc, #48]	; (90004220 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900041f0:	4905      	ldr	r1, [pc, #20]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041f2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900041f4:	480b      	ldr	r0, [pc, #44]	; (90004224 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900041f6:	4b05      	ldr	r3, [pc, #20]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041f8:	4a0b      	ldr	r2, [pc, #44]	; (90004228 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900041fa:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900041fc:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900041fe:	2c00      	cmp	r4, #0
90004200:	d1e5      	bne.n	900041ce <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90004202:	bd38      	pop	{r3, r4, r5, pc}
90004204:	240096b8 	.word	0x240096b8
90004208:	240096bc 	.word	0x240096bc
9000420c:	240096c0 	.word	0x240096c0
90004210:	240096c4 	.word	0x240096c4
90004214:	2403975c 	.word	0x2403975c
90004218:	24039764 	.word	0x24039764
9000421c:	24039760 	.word	0x24039760
90004220:	90202270 	.word	0x90202270
90004224:	90202204 	.word	0x90202204
90004228:	902021e8 	.word	0x902021e8

9000422c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000422c:	4a04      	ldr	r2, [pc, #16]	; (90004240 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000422e:	4b05      	ldr	r3, [pc, #20]	; (90004244 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004230:	6812      	ldr	r2, [r2, #0]
90004232:	681b      	ldr	r3, [r3, #0]
90004234:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004238:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000423c:	4770      	bx	lr
9000423e:	bf00      	nop
90004240:	240096c0 	.word	0x240096c0
90004244:	240096bc 	.word	0x240096bc

90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004248:	2007      	movs	r0, #7
9000424a:	4770      	bx	lr

9000424c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000424c:	4800      	ldr	r0, [pc, #0]	; (90004250 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000424e:	4770      	bx	lr
90004250:	240096c8 	.word	0x240096c8

90004254 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004254:	b510      	push	{r4, lr}
};
90004256:	4c05      	ldr	r4, [pc, #20]	; (9000426c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004258:	f7ff fea2 	bl	90003fa0 <_Z23getFont_verdana_20_4bppv>
};
9000425c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000425e:	f7ff fee1 	bl	90004024 <_Z23getFont_verdana_40_4bppv>
};
90004262:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004264:	f7ff fe5c 	bl	90003f20 <_Z23getFont_verdana_10_4bppv>
};
90004268:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000426a:	bd10      	pop	{r4, pc}
9000426c:	240096c8 	.word	0x240096c8

90004270 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004274:	4770      	bx	lr
90004276:	bf00      	nop

90004278 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004278:	4770      	bx	lr
9000427a:	bf00      	nop

9000427c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000427c:	4770      	bx	lr
9000427e:	bf00      	nop

90004280 <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
90004280:	4770      	bx	lr
90004282:	bf00      	nop

90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
90004284:	4770      	bx	lr
90004286:	bf00      	nop

90004288 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004288:	4770      	bx	lr
9000428a:	bf00      	nop

9000428c <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000428c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000428e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004290:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004292:	6844      	ldr	r4, [r0, #4]
90004294:	f012 0f01 	tst.w	r2, #1
90004298:	eb04 0062 	add.w	r0, r4, r2, asr #1
9000429c:	d103      	bne.n	900042a6 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
9000429e:	689b      	ldr	r3, [r3, #8]
    }
900042a0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042a4:	4718      	bx	r3
900042a6:	ea4f 0c62 	mov.w	ip, r2, asr #1
900042aa:	689b      	ldr	r3, [r3, #8]
900042ac:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900042b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042b4:	58d3      	ldr	r3, [r2, r3]
900042b6:	4718      	bx	r3

900042b8 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900042b8:	6843      	ldr	r3, [r0, #4]
900042ba:	b13b      	cbz	r3, 900042cc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900042bc:	6883      	ldr	r3, [r0, #8]
900042be:	b10b      	cbz	r3, 900042c4 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900042c0:	2001      	movs	r0, #1
    }
900042c2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900042c4:	68c0      	ldr	r0, [r0, #12]
900042c6:	f000 0001 	and.w	r0, r0, #1
900042ca:	4770      	bx	lr
900042cc:	4618      	mov	r0, r3
900042ce:	4770      	bx	lr

900042d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900042d0:	b510      	push	{r4, lr}
900042d2:	4604      	mov	r4, r0
900042d4:	2110      	movs	r1, #16
900042d6:	f023 f9eb 	bl	900276b0 <_ZdlPvj>
900042da:	4620      	mov	r0, r4
900042dc:	bd10      	pop	{r4, pc}
900042de:	bf00      	nop

900042e0 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
900042e0:	b510      	push	{r4, lr}
900042e2:	4604      	mov	r4, r0
}
900042e4:	f44f 7186 	mov.w	r1, #268	; 0x10c
900042e8:	f023 f9e2 	bl	900276b0 <_ZdlPvj>
900042ec:	4620      	mov	r0, r4
900042ee:	bd10      	pop	{r4, pc}

900042f0 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_main_menuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900042f0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &snake_game)
900042f2:	f100 036c 	add.w	r3, r0, #108	; 0x6c
{
900042f6:	4604      	mov	r4, r0
900042f8:	460d      	mov	r5, r1
    if (&src == &snake_game)
900042fa:	4299      	cmp	r1, r3
900042fc:	d003      	beq.n	90004306 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        //intr_snake_game
        //When snake_game clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
900042fe:	34b4      	adds	r4, #180	; 0xb4
90004300:	42a5      	cmp	r5, r4
90004302:	d007      	beq.n	90004314 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with no screen transition
        application().gotoscreen_tictactoe_gameScreenNoTransition();
    }
}
90004304:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &btn_tictactoe)
90004306:	34b4      	adds	r4, #180	; 0xb4
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004308:	f012 f894 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
9000430c:	f7ff fd82 	bl	90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004310:	42a5      	cmp	r5, r4
90004312:	d1f7      	bne.n	90004304 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
90004314:	f012 f88e 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
}
90004318:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_tictactoe_gameScreenNoTransition();
9000431c:	f7ff bd88 	b.w	90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>

90004320 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
90004320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90004324:	b084      	sub	sp, #16
90004326:	4604      	mov	r4, r0
        : presenter(0)
90004328:	f013 fcbc 	bl	90017ca4 <_ZN8touchgfx6ScreenC1Ev>
9000432c:	f44f 7380 	mov.w	r3, #256	; 0x100
90004330:	2500      	movs	r5, #0
    buttonCallback(this, &screen_main_menuViewBase::buttonCallbackHandler)
90004332:	4a6e      	ldr	r2, [pc, #440]	; (900044ec <_ZN24screen_main_menuViewBaseC1Ev+0x1cc>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004334:	496e      	ldr	r1, [pc, #440]	; (900044f0 <_ZN24screen_main_menuViewBaseC1Ev+0x1d0>)
90004336:	f104 096c 	add.w	r9, r4, #108	; 0x6c
9000433a:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
9000433e:	23ff      	movs	r3, #255	; 0xff
90004340:	f104 07b4 	add.w	r7, r4, #180	; 0xb4
90004344:	6022      	str	r2, [r4, #0]
90004346:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
9000434a:	4648      	mov	r0, r9
        : color(col)
9000434c:	66a5      	str	r5, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000434e:	1d26      	adds	r6, r4, #4
        return typedTextId < numberOfTypedTexts;
90004350:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 90004524 <_ZN24screen_main_menuViewBaseC1Ev+0x204>
90004354:	e9c4 510f 	strd	r5, r1, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004358:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
9000435c:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004360:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004364:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004368:	f00f fcac 	bl	90013cc4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
9000436c:	4638      	mov	r0, r7
9000436e:	f00f fca9 	bl	90013cc4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90004372:	4b60      	ldr	r3, [pc, #384]	; (900044f4 <_ZN24screen_main_menuViewBaseC1Ev+0x1d4>)
90004374:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004378:	4630      	mov	r0, r6
9000437a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
9000437e:	4b5e      	ldr	r3, [pc, #376]	; (900044f8 <_ZN24screen_main_menuViewBaseC1Ev+0x1d8>)
90004380:	f8c4 4100 	str.w	r4, [r4, #256]	; 0x100
90004384:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        rect.x = x;
90004388:	4b5c      	ldr	r3, [pc, #368]	; (900044fc <_ZN24screen_main_menuViewBaseC1Ev+0x1dc>)
9000438a:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
9000438e:	64a3      	str	r3, [r4, #72]	; 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004390:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004394:	6465      	str	r5, [r4, #68]	; 0x44
90004396:	66a3      	str	r3, [r4, #104]	; 0x68
90004398:	f00c fc9e 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000439c:	4b58      	ldr	r3, [pc, #352]	; (90004500 <_ZN24screen_main_menuViewBaseC1Ev+0x1e0>)
    snake_game.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000439e:	a902      	add	r1, sp, #8
900043a0:	aa03      	add	r2, sp, #12
900043a2:	6723      	str	r3, [r4, #112]	; 0x70
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900043a4:	2302      	movs	r3, #2
900043a6:	4648      	mov	r0, r9
900043a8:	f8ad 3008 	strh.w	r3, [sp, #8]
900043ac:	2303      	movs	r3, #3
900043ae:	f8ad 300c 	strh.w	r3, [sp, #12]
900043b2:	f00f f8c4 	bl	9001353e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900043b6:	2106      	movs	r1, #6
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
900043b8:	f8b8 3000 	ldrh.w	r3, [r8]
900043bc:	428b      	cmp	r3, r1
900043be:	f8a4 10a4 	strh.w	r1, [r4, #164]	; 0xa4
900043c2:	d925      	bls.n	90004410 <_ZN24screen_main_menuViewBaseC1Ev+0xf0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900043c4:	4b4f      	ldr	r3, [pc, #316]	; (90004504 <_ZN24screen_main_menuViewBaseC1Ev+0x1e4>)
900043c6:	681b      	ldr	r3, [r3, #0]
900043c8:	2b00      	cmp	r3, #0
900043ca:	f000 8088 	beq.w	900044de <_ZN24screen_main_menuViewBaseC1Ev+0x1be>
        return fonts[typedTexts[typedTextId].fontIdx];
900043ce:	7b1a      	ldrb	r2, [r3, #12]
900043d0:	4b4d      	ldr	r3, [pc, #308]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
900043d2:	681b      	ldr	r3, [r3, #0]
900043d4:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900043d8:	4b4c      	ldr	r3, [pc, #304]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
900043da:	6818      	ldr	r0, [r3, #0]
900043dc:	f7ff ff26 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900043e0:	f8da 3000 	ldr.w	r3, [sl]
900043e4:	4601      	mov	r1, r0
900043e6:	484a      	ldr	r0, [pc, #296]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
900043e8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900043ea:	4282      	cmp	r2, r0
900043ec:	d167      	bne.n	900044be <_ZN24screen_main_menuViewBaseC1Ev+0x19e>
        return fontHeight;
900043ee:	f8ba 5004 	ldrh.w	r5, [sl, #4]
900043f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900043f4:	4650      	mov	r0, sl
900043f6:	9101      	str	r1, [sp, #4]
900043f8:	4798      	blx	r3
900043fa:	fb15 f500 	smulbb	r5, r5, r0
900043fe:	f8da 3000 	ldr.w	r3, [sl]
90004402:	4650      	mov	r0, sl
90004404:	b2ad      	uxth	r5, r5
90004406:	9901      	ldr	r1, [sp, #4]
90004408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000440a:	4798      	blx	r3
9000440c:	4405      	add	r5, r0
9000440e:	b22d      	sxth	r5, r5
90004410:	4649      	mov	r1, r9
        color = col;
90004412:	f04f 33ff 	mov.w	r3, #4294967295
    snake_game.setAction(buttonCallback);
90004416:	f104 09fc 	add.w	r9, r4, #252	; 0xfc
9000441a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000441c:	f8a4 50b2 	strh.w	r5, [r4, #178]	; 0xb2
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90004420:	f8c4 9094 	str.w	r9, [r4, #148]	; 0x94
        colorPressed = col;
90004424:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
90004428:	f00c fc56 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000442c:	4b39      	ldr	r3, [pc, #228]	; (90004514 <_ZN24screen_main_menuViewBaseC1Ev+0x1f4>)
    btn_tictactoe.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000442e:	a902      	add	r1, sp, #8
90004430:	aa03      	add	r2, sp, #12
90004432:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
90004436:	2302      	movs	r3, #2
90004438:	4638      	mov	r0, r7
9000443a:	f8ad 3008 	strh.w	r3, [sp, #8]
9000443e:	2303      	movs	r3, #3
90004440:	f8ad 300c 	strh.w	r3, [sp, #12]
90004444:	f00f f87b 	bl	9001353e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90004448:	2100      	movs	r1, #0
        if (typedText.hasValidId())
9000444a:	f8b8 3000 	ldrh.w	r3, [r8]
9000444e:	f8a4 10ec 	strh.w	r1, [r4, #236]	; 0xec
90004452:	b323      	cbz	r3, 9000449e <_ZN24screen_main_menuViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004454:	4b2b      	ldr	r3, [pc, #172]	; (90004504 <_ZN24screen_main_menuViewBaseC1Ev+0x1e4>)
90004456:	681b      	ldr	r3, [r3, #0]
90004458:	2b00      	cmp	r3, #0
9000445a:	d040      	beq.n	900044de <_ZN24screen_main_menuViewBaseC1Ev+0x1be>
        return fonts[typedTexts[typedTextId].fontIdx];
9000445c:	781a      	ldrb	r2, [r3, #0]
9000445e:	4b2a      	ldr	r3, [pc, #168]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
90004460:	681b      	ldr	r3, [r3, #0]
90004462:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004466:	4b29      	ldr	r3, [pc, #164]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
90004468:	6818      	ldr	r0, [r3, #0]
9000446a:	f7ff fedf 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000446e:	f8d8 3000 	ldr.w	r3, [r8]
90004472:	4601      	mov	r1, r0
90004474:	4826      	ldr	r0, [pc, #152]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
90004476:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90004478:	4282      	cmp	r2, r0
9000447a:	d128      	bne.n	900044ce <_ZN24screen_main_menuViewBaseC1Ev+0x1ae>
9000447c:	f8b8 5004 	ldrh.w	r5, [r8, #4]
90004480:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90004482:	4640      	mov	r0, r8
90004484:	9101      	str	r1, [sp, #4]
90004486:	4798      	blx	r3
90004488:	fb15 f500 	smulbb	r5, r5, r0
9000448c:	f8d8 3000 	ldr.w	r3, [r8]
90004490:	4640      	mov	r0, r8
90004492:	b2ad      	uxth	r5, r5
90004494:	9901      	ldr	r1, [sp, #4]
90004496:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004498:	4798      	blx	r3
9000449a:	4428      	add	r0, r5
9000449c:	b203      	sxth	r3, r0
9000449e:	f8a4 30fa 	strh.w	r3, [r4, #250]	; 0xfa
        color = col;
900044a2:	f04f 33ff 	mov.w	r3, #4294967295
900044a6:	4630      	mov	r0, r6
900044a8:	4639      	mov	r1, r7
900044aa:	f8c4 90dc 	str.w	r9, [r4, #220]	; 0xdc
        colorPressed = col;
900044ae:	e9c4 333c 	strd	r3, r3, [r4, #240]	; 0xf0
900044b2:	f00c fc11 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900044b6:	4620      	mov	r0, r4
900044b8:	b004      	add	sp, #16
900044ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900044be:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900044c0:	4650      	mov	r0, sl
900044c2:	4790      	blx	r2
900044c4:	f8da 3000 	ldr.w	r3, [sl]
900044c8:	4605      	mov	r5, r0
900044ca:	9901      	ldr	r1, [sp, #4]
900044cc:	e791      	b.n	900043f2 <_ZN24screen_main_menuViewBaseC1Ev+0xd2>
900044ce:	9101      	str	r1, [sp, #4]
900044d0:	4640      	mov	r0, r8
900044d2:	4790      	blx	r2
900044d4:	f8d8 3000 	ldr.w	r3, [r8]
900044d8:	4605      	mov	r5, r0
900044da:	9901      	ldr	r1, [sp, #4]
900044dc:	e7d0      	b.n	90004480 <_ZN24screen_main_menuViewBaseC1Ev+0x160>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900044de:	4b0e      	ldr	r3, [pc, #56]	; (90004518 <_ZN24screen_main_menuViewBaseC1Ev+0x1f8>)
900044e0:	216c      	movs	r1, #108	; 0x6c
900044e2:	4a0e      	ldr	r2, [pc, #56]	; (9000451c <_ZN24screen_main_menuViewBaseC1Ev+0x1fc>)
900044e4:	480e      	ldr	r0, [pc, #56]	; (90004520 <_ZN24screen_main_menuViewBaseC1Ev+0x200>)
900044e6:	f023 f911 	bl	9002770c <__assert_func>
900044ea:	bf00      	nop
900044ec:	9002ac58 	.word	0x9002ac58
900044f0:	9002b888 	.word	0x9002b888
900044f4:	9002ac40 	.word	0x9002ac40
900044f8:	900042f1 	.word	0x900042f1
900044fc:	011001e0 	.word	0x011001e0
90004500:	00330026 	.word	0x00330026
90004504:	2403975c 	.word	0x2403975c
90004508:	24039764 	.word	0x24039764
9000450c:	24039768 	.word	0x24039768
90004510:	900035cd 	.word	0x900035cd
90004514:	00a70026 	.word	0x00a70026
90004518:	9002ab70 	.word	0x9002ab70
9000451c:	9002abb4 	.word	0x9002abb4
90004520:	9002abf0 	.word	0x9002abf0
90004524:	24039760 	.word	0x24039760

90004528 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004528:	b530      	push	{r4, r5, lr}
9000452a:	b085      	sub	sp, #20
9000452c:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000452e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004530:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004532:	466d      	mov	r5, sp
90004534:	4601      	mov	r1, r0
        rect.width = width;
90004536:	8102      	strh	r2, [r0, #8]
90004538:	343c      	adds	r4, #60	; 0x3c
9000453a:	4628      	mov	r0, r5
9000453c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004540:	4798      	blx	r3
90004542:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004546:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000454a:	b005      	add	sp, #20
9000454c:	bd30      	pop	{r4, r5, pc}
9000454e:	bf00      	nop

90004550 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004550:	b530      	push	{r4, r5, lr}
90004552:	b085      	sub	sp, #20
90004554:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004556:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004558:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000455a:	466d      	mov	r5, sp
9000455c:	4601      	mov	r1, r0
        rect.height = height;
9000455e:	8142      	strh	r2, [r0, #10]
90004560:	343c      	adds	r4, #60	; 0x3c
90004562:	4628      	mov	r0, r5
90004564:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004568:	4798      	blx	r3
9000456a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000456e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004572:	b005      	add	sp, #20
90004574:	bd30      	pop	{r4, r5, pc}
90004576:	bf00      	nop

90004578 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004578:	2200      	movs	r2, #0
9000457a:	6002      	str	r2, [r0, #0]
9000457c:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000457e:	4770      	bx	lr

90004580 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004580:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004584:	4770      	bx	lr
90004586:	bf00      	nop

90004588 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004588:	2000      	movs	r0, #0
9000458a:	4770      	bx	lr

9000458c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
9000458c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004590:	b112      	cbz	r2, 90004598 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004592:	6803      	ldr	r3, [r0, #0]
90004594:	695b      	ldr	r3, [r3, #20]
90004596:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004598:	4770      	bx	lr
9000459a:	bf00      	nop

9000459c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000459c:	2200      	movs	r2, #0
9000459e:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900045a2:	6082      	str	r2, [r0, #8]
900045a4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900045a8:	4770      	bx	lr
900045aa:	bf00      	nop

900045ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900045ac:	6c80      	ldr	r0, [r0, #72]	; 0x48
900045ae:	4770      	bx	lr

900045b0 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
     * Virtual Action Handlers
     */
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
900045b0:	4770      	bx	lr
900045b2:	bf00      	nop

900045b4 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
900045b4:	4770      	bx	lr
900045b6:	bf00      	nop

900045b8 <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
900045b8:	4770      	bx	lr
900045ba:	bf00      	nop

900045bc <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
900045bc:	4770      	bx	lr
900045be:	bf00      	nop

900045c0 <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
900045c0:	4770      	bx	lr
900045c2:	bf00      	nop

900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
900045c4:	4770      	bx	lr
900045c6:	bf00      	nop

900045c8 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
900045c8:	4770      	bx	lr
900045ca:	bf00      	nop

900045cc <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900045cc:	4770      	bx	lr
900045ce:	bf00      	nop

900045d0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900045d0:	4770      	bx	lr
900045d2:	bf00      	nop

900045d4 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900045d4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900045d6:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900045d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900045da:	6844      	ldr	r4, [r0, #4]
900045dc:	f012 0f01 	tst.w	r2, #1
900045e0:	eb04 0062 	add.w	r0, r4, r2, asr #1
900045e4:	d103      	bne.n	900045ee <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900045e6:	689b      	ldr	r3, [r3, #8]
    }
900045e8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900045ec:	4718      	bx	r3
900045ee:	ea4f 0c62 	mov.w	ip, r2, asr #1
900045f2:	689b      	ldr	r3, [r3, #8]
900045f4:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900045f8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900045fc:	58d3      	ldr	r3, [r2, r3]
900045fe:	4718      	bx	r3

90004600 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004600:	6843      	ldr	r3, [r0, #4]
90004602:	b13b      	cbz	r3, 90004614 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004604:	6883      	ldr	r3, [r0, #8]
90004606:	b10b      	cbz	r3, 9000460c <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004608:	2001      	movs	r0, #1
    }
9000460a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000460c:	68c0      	ldr	r0, [r0, #12]
9000460e:	f000 0001 	and.w	r0, r0, #1
90004612:	4770      	bx	lr
90004614:	4618      	mov	r0, r3
90004616:	4770      	bx	lr

90004618 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004618:	b510      	push	{r4, lr}
9000461a:	4604      	mov	r4, r0
9000461c:	214c      	movs	r1, #76	; 0x4c
9000461e:	f023 f847 	bl	900276b0 <_ZdlPvj>
90004622:	4620      	mov	r0, r4
90004624:	bd10      	pop	{r4, pc}
90004626:	bf00      	nop

90004628 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004628:	b510      	push	{r4, lr}
9000462a:	4604      	mov	r4, r0
9000462c:	2110      	movs	r1, #16
9000462e:	f023 f83f 	bl	900276b0 <_ZdlPvj>
90004632:	4620      	mov	r0, r4
90004634:	bd10      	pop	{r4, pc}
90004636:	bf00      	nop

90004638 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004638:	b510      	push	{r4, lr}
9000463a:	4604      	mov	r4, r0
}
9000463c:	f44f 7164 	mov.w	r1, #912	; 0x390
90004640:	f023 f836 	bl	900276b0 <_ZdlPvj>
90004644:	4620      	mov	r0, r4
90004646:	bd10      	pop	{r4, pc}

90004648 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90004648:	4b1b      	ldr	r3, [pc, #108]	; (900046b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000464a:	6802      	ldr	r2, [r0, #0]
9000464c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
9000464e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004650:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004652:	b323      	cbz	r3, 9000469e <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004654:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004656:	4919      	ldr	r1, [pc, #100]	; (900046bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004658:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000465a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000465c:	8809      	ldrh	r1, [r1, #0]
9000465e:	4291      	cmp	r1, r2
90004660:	d923      	bls.n	900046aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004662:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004666:	4b16      	ldr	r3, [pc, #88]	; (900046c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004668:	681b      	ldr	r3, [r3, #0]
9000466a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9000466e:	4a15      	ldr	r2, [pc, #84]	; (900046c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004670:	6803      	ldr	r3, [r0, #0]
90004672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004674:	4293      	cmp	r3, r2
90004676:	d107      	bne.n	90004688 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004678:	88c0      	ldrh	r0, [r0, #6]
9000467a:	4b13      	ldr	r3, [pc, #76]	; (900046c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000467c:	1a31      	subs	r1, r6, r0
9000467e:	429d      	cmp	r5, r3
90004680:	b209      	sxth	r1, r1
90004682:	d107      	bne.n	90004694 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004684:	80e1      	strh	r1, [r4, #6]
    }
90004686:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004688:	4798      	blx	r3
9000468a:	4b0f      	ldr	r3, [pc, #60]	; (900046c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000468c:	1a31      	subs	r1, r6, r0
9000468e:	429d      	cmp	r5, r3
90004690:	b209      	sxth	r1, r1
90004692:	d0f7      	beq.n	90004684 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004694:	4620      	mov	r0, r4
90004696:	462b      	mov	r3, r5
    }
90004698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000469c:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000469e:	4b0b      	ldr	r3, [pc, #44]	; (900046cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900046a0:	216c      	movs	r1, #108	; 0x6c
900046a2:	4a0b      	ldr	r2, [pc, #44]	; (900046d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046a4:	480b      	ldr	r0, [pc, #44]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046a6:	f023 f831 	bl	9002770c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900046aa:	4b0b      	ldr	r3, [pc, #44]	; (900046d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900046ac:	216d      	movs	r1, #109	; 0x6d
900046ae:	4a08      	ldr	r2, [pc, #32]	; (900046d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046b0:	4808      	ldr	r0, [pc, #32]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046b2:	f023 f82b 	bl	9002770c <__assert_func>
900046b6:	bf00      	nop
900046b8:	2403975c 	.word	0x2403975c
900046bc:	24039760 	.word	0x24039760
900046c0:	24039764 	.word	0x24039764
900046c4:	900035c9 	.word	0x900035c9
900046c8:	90002299 	.word	0x90002299
900046cc:	9002ab70 	.word	0x9002ab70
900046d0:	9002abb4 	.word	0x9002abb4
900046d4:	9002abf0 	.word	0x9002abf0
900046d8:	9002ac84 	.word	0x9002ac84

900046dc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900046dc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_up)
900046de:	f500 739c 	add.w	r3, r0, #312	; 0x138
{
900046e2:	4604      	mov	r4, r0
900046e4:	460d      	mov	r5, r1
    if (&src == &btn_up)
900046e6:	4299      	cmp	r1, r3
900046e8:	d014      	beq.n	90004714 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_change_direction_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
900046ea:	f504 73f6 	add.w	r3, r4, #492	; 0x1ec
900046ee:	429d      	cmp	r5, r3
900046f0:	d02f      	beq.n	90004752 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
        //intr_change_direction_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_right)
900046f2:	f504 73ba 	add.w	r3, r4, #372	; 0x174
900046f6:	429d      	cmp	r5, r3
900046f8:	d023      	beq.n	90004742 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        //intr_change_direction_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
    if (&src == &btn_down)
900046fa:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
900046fe:	429d      	cmp	r5, r3
90004700:	d017      	beq.n	90004732 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        //intr_change_direction_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_snake_start)
90004702:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004706:	429d      	cmp	r5, r3
90004708:	d00b      	beq.n	90004722 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
9000470a:	f504 740a 	add.w	r4, r4, #552	; 0x228
9000470e:	42a5      	cmp	r5, r4
90004710:	d027      	beq.n	90004762 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
        //btn_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90004712:	bd38      	pop	{r3, r4, r5, pc}
        change_direction_up();
90004714:	6803      	ldr	r3, [r0, #0]
90004716:	4a16      	ldr	r2, [pc, #88]	; (90004770 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90004718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000471a:	4293      	cmp	r3, r2
9000471c:	d0e5      	beq.n	900046ea <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
9000471e:	4798      	blx	r3
90004720:	e7e3      	b.n	900046ea <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        game_snake_start();
90004722:	6823      	ldr	r3, [r4, #0]
90004724:	4a13      	ldr	r2, [pc, #76]	; (90004774 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
90004726:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004728:	4293      	cmp	r3, r2
9000472a:	d0ee      	beq.n	9000470a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
9000472c:	4620      	mov	r0, r4
9000472e:	4798      	blx	r3
90004730:	e7eb      	b.n	9000470a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_down();
90004732:	6823      	ldr	r3, [r4, #0]
90004734:	4a10      	ldr	r2, [pc, #64]	; (90004778 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
90004736:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004738:	4293      	cmp	r3, r2
9000473a:	d0e2      	beq.n	90004702 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
9000473c:	4620      	mov	r0, r4
9000473e:	4798      	blx	r3
90004740:	e7df      	b.n	90004702 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_right();
90004742:	6823      	ldr	r3, [r4, #0]
90004744:	4a0d      	ldr	r2, [pc, #52]	; (9000477c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
90004746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004748:	4293      	cmp	r3, r2
9000474a:	d0d6      	beq.n	900046fa <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
9000474c:	4620      	mov	r0, r4
9000474e:	4798      	blx	r3
90004750:	e7d3      	b.n	900046fa <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        change_direction_left();
90004752:	6823      	ldr	r3, [r4, #0]
90004754:	4a0a      	ldr	r2, [pc, #40]	; (90004780 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
90004756:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004758:	4293      	cmp	r3, r2
9000475a:	d0ca      	beq.n	900046f2 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000475c:	4620      	mov	r0, r4
9000475e:	4798      	blx	r3
90004760:	e7c7      	b.n	900046f2 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004762:	f011 fe67 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
}
90004766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_main_menuScreenNoTransition();
9000476a:	f7ff bb45 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
9000476e:	bf00      	nop
90004770:	900045b1 	.word	0x900045b1
90004774:	900045c1 	.word	0x900045c1
90004778:	900045bd 	.word	0x900045bd
9000477c:	900045b9 	.word	0x900045b9
90004780:	900045b5 	.word	0x900045b5

90004784 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004784:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000478a:	4f25      	ldr	r7, [pc, #148]	; (90004820 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
9000478c:	4605      	mov	r5, r0
        setX(x);
9000478e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004790:	4690      	mov	r8, r2
90004792:	42be      	cmp	r6, r7
90004794:	d125      	bne.n	900047e2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004796:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004798:	80a9      	strh	r1, [r5, #4]
9000479a:	4922      	ldr	r1, [pc, #136]	; (90004824 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000479c:	428c      	cmp	r4, r1
9000479e:	d126      	bne.n	900047ee <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900047a0:	4921      	ldr	r1, [pc, #132]	; (90004828 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047a2:	fa1f f888 	uxth.w	r8, r8
900047a6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
900047a8:	680b      	ldr	r3, [r1, #0]
900047aa:	2b00      	cmp	r3, #0
900047ac:	d032      	beq.n	90004814 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
900047ae:	491f      	ldr	r1, [pc, #124]	; (9000482c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900047b0:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900047b2:	8809      	ldrh	r1, [r1, #0]
900047b4:	4291      	cmp	r1, r2
900047b6:	d927      	bls.n	90004808 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
900047b8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900047bc:	4b1c      	ldr	r3, [pc, #112]	; (90004830 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900047be:	681b      	ldr	r3, [r3, #0]
900047c0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900047c4:	4a1b      	ldr	r2, [pc, #108]	; (90004834 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900047c6:	6803      	ldr	r3, [r0, #0]
900047c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900047ca:	4293      	cmp	r3, r2
900047cc:	d11a      	bne.n	90004804 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
900047ce:	88c0      	ldrh	r0, [r0, #6]
900047d0:	4b19      	ldr	r3, [pc, #100]	; (90004838 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900047d2:	eba8 0200 	sub.w	r2, r8, r0
900047d6:	429e      	cmp	r6, r3
900047d8:	b211      	sxth	r1, r2
900047da:	d10e      	bne.n	900047fa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
900047dc:	80e9      	strh	r1, [r5, #6]
    }
900047de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
900047e2:	47b0      	blx	r6
        setBaselineY(baselineY);
900047e4:	682b      	ldr	r3, [r5, #0]
900047e6:	490f      	ldr	r1, [pc, #60]	; (90004824 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900047e8:	6e5c      	ldr	r4, [r3, #100]	; 0x64
900047ea:	428c      	cmp	r4, r1
900047ec:	d0d8      	beq.n	900047a0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
900047ee:	4641      	mov	r1, r8
900047f0:	4628      	mov	r0, r5
900047f2:	4623      	mov	r3, r4
    }
900047f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
900047f8:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047fa:	4628      	mov	r0, r5
900047fc:	4633      	mov	r3, r6
    }
900047fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004802:	4718      	bx	r3
90004804:	4798      	blx	r3
90004806:	e7e3      	b.n	900047d0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004808:	4b0c      	ldr	r3, [pc, #48]	; (9000483c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000480a:	216d      	movs	r1, #109	; 0x6d
9000480c:	4a0c      	ldr	r2, [pc, #48]	; (90004840 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000480e:	480d      	ldr	r0, [pc, #52]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004810:	f022 ff7c 	bl	9002770c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004814:	4b0c      	ldr	r3, [pc, #48]	; (90004848 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004816:	216c      	movs	r1, #108	; 0x6c
90004818:	4a09      	ldr	r2, [pc, #36]	; (90004840 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000481a:	480a      	ldr	r0, [pc, #40]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
9000481c:	f022 ff76 	bl	9002770c <__assert_func>
90004820:	90002295 	.word	0x90002295
90004824:	90004649 	.word	0x90004649
90004828:	2403975c 	.word	0x2403975c
9000482c:	24039760 	.word	0x24039760
90004830:	24039764 	.word	0x24039764
90004834:	900035c9 	.word	0x900035c9
90004838:	90002299 	.word	0x90002299
9000483c:	9002ac84 	.word	0x9002ac84
90004840:	9002abb4 	.word	0x9002abb4
90004844:	9002abf0 	.word	0x9002abf0
90004848:	9002ab70 	.word	0x9002ab70

9000484c <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
9000484c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004850:	4604      	mov	r4, r0
90004852:	2500      	movs	r5, #0
        : Widget(), alpha(255), color(0)
90004854:	f04f 08ff 	mov.w	r8, #255	; 0xff
          touchable(false),
90004858:	f44f 7980 	mov.w	r9, #256	; 0x100
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
9000485c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
90004860:	4edb      	ldr	r6, [pc, #876]	; (90004bd0 <_ZN25screen_snake_gameViewBaseC1Ev+0x384>)
90004862:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90004866:	ed2d 8b04 	vpush	{d8-d9}
9000486a:	b093      	sub	sp, #76	; 0x4c
9000486c:	f013 fa1a 	bl	90017ca4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004870:	4bd8      	ldr	r3, [pc, #864]	; (90004bd4 <_ZN25screen_snake_gameViewBaseC1Ev+0x388>)
90004872:	af10      	add	r7, sp, #64	; 0x40
90004874:	4650      	mov	r0, sl
90004876:	6023      	str	r3, [r4, #0]
90004878:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000487c:	4639      	mov	r1, r7
9000487e:	6426      	str	r6, [r4, #64]	; 0x40
90004880:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
90004884:	63e5      	str	r5, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004886:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
90004888:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
9000488a:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
        : color(col)
9000488e:	66a5      	str	r5, [r4, #104]	; 0x68
90004890:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90004894:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004898:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
9000489c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900048a0:	f00e f89e 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900048a4:	f504 739c 	add.w	r3, r4, #312	; 0x138
900048a8:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
900048ac:	4658      	mov	r0, fp
900048ae:	f884 80be 	strb.w	r8, [r4, #190]	; 0xbe
          touchable(false),
900048b2:	f8a4 90bc 	strh.w	r9, [r4, #188]	; 0xbc
        : color(col)
900048b6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900048ba:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
900048bc:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
900048c0:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
900048c4:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
900048c8:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
900048cc:	f00f f9fa 	bl	90013cc4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900048d0:	f884 8132 	strb.w	r8, [r4, #306]	; 0x132
900048d4:	9804      	ldr	r0, [sp, #16]
900048d6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
          touchable(false),
900048da:	f8a4 9130 	strh.w	r9, [r4, #304]	; 0x130
        : color(col)
900048de:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        : x(0), y(0), width(0), height(0)
900048e2:	e9c4 6543 	strd	r6, r5, [r4, #268]	; 0x10c
900048e6:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
900048ea:	f504 76ba 	add.w	r6, r4, #372	; 0x174
          parent(0),
900048ee:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
          nextDrawChainElement(0),
900048f2:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
900048f6:	f00f f887 	bl	90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>
900048fa:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
900048fe:	4630      	mov	r0, r6
90004900:	ee08 6a90 	vmov	s17, r6
90004904:	9305      	str	r3, [sp, #20]
90004906:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
9000490a:	f00f f87d 	bl	90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>
9000490e:	9805      	ldr	r0, [sp, #20]
90004910:	f00f f87a 	bl	90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004914:	f504 730a 	add.w	r3, r4, #552	; 0x228
90004918:	4630      	mov	r0, r6
9000491a:	ee09 6a10 	vmov	s18, r6
9000491e:	9306      	str	r3, [sp, #24]
90004920:	f00f f872 	bl	90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004924:	9806      	ldr	r0, [sp, #24]
90004926:	1d26      	adds	r6, r4, #4
90004928:	f00f f86e 	bl	90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000492c:	f04f 32ff 	mov.w	r2, #4294967295
        : typedTextId(id)
90004930:	48a9      	ldr	r0, [pc, #676]	; (90004bd8 <_ZN25screen_snake_gameViewBaseC1Ev+0x38c>)
90004932:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004936:	49a9      	ldr	r1, [pc, #676]	; (90004bdc <_ZN25screen_snake_gameViewBaseC1Ev+0x390>)
90004938:	f8c4 22a4 	str.w	r2, [r4, #676]	; 0x2a4
9000493c:	f8a4 22d8 	strh.w	r2, [r4, #728]	; 0x2d8
90004940:	f8a4 3290 	strh.w	r3, [r4, #656]	; 0x290
90004944:	f8c4 829a 	str.w	r8, [r4, #666]	; 0x29a
90004948:	f8c4 82e2 	str.w	r8, [r4, #738]	; 0x2e2
9000494c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
90004950:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
90004954:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
          touchable(false),
90004958:	f8a4 9288 	strh.w	r9, [r4, #648]	; 0x288
        : color(col)
9000495c:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
90004960:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004964:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
              text(0)
90004968:	f8c4 52a8 	str.w	r5, [r4, #680]	; 0x2a8
9000496c:	f8a4 92d0 	strh.w	r9, [r4, #720]	; 0x2d0
        : color(col)
90004970:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004974:	f8a4 52e0 	strh.w	r5, [r4, #736]	; 0x2e0
        : x(0), y(0), width(0), height(0)
90004978:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
9000497c:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
          nextSibling(0),
90004980:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
          cachedAbsX(0),
90004984:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
90004988:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
9000498c:	e9c4 55ae 	strd	r5, r5, [r4, #696]	; 0x2b8
          nextSibling(0),
90004990:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90004994:	e9c4 55b2 	strd	r5, r5, [r4, #712]	; 0x2c8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004998:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
9000499c:	f8a4 3324 	strh.w	r3, [r4, #804]	; 0x324
        : TextAreaWithWildcardBase(), wc1(0)
900049a0:	4b8f      	ldr	r3, [pc, #572]	; (90004be0 <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
900049a2:	f8c4 832e 	str.w	r8, [r4, #814]	; 0x32e
900049a6:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
        : pobject(pObject), pmemfun(pmemfun_1)
900049aa:	4b8e      	ldr	r3, [pc, #568]	; (90004be4 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
        rect.x = x;
900049ac:	f8df 826c 	ldr.w	r8, [pc, #620]	; 90004c1c <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
900049b0:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
900049b4:	4b8c      	ldr	r3, [pc, #560]	; (90004be8 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
900049b6:	f8c4 22ec 	str.w	r2, [r4, #748]	; 0x2ec
900049ba:	f8c4 3388 	str.w	r3, [r4, #904]	; 0x388
        color = newColor;
900049be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900049c2:	f8c4 2338 	str.w	r2, [r4, #824]	; 0x338
900049c6:	f8c4 12f8 	str.w	r1, [r4, #760]	; 0x2f8
900049ca:	f104 0140 	add.w	r1, r4, #64	; 0x40
900049ce:	f8c4 0320 	str.w	r0, [r4, #800]	; 0x320
900049d2:	4630      	mov	r0, r6
900049d4:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
900049d8:	66a3      	str	r3, [r4, #104]	; 0x68
          touchable(false),
900049da:	f8a4 931c 	strh.w	r9, [r4, #796]	; 0x31c
        : color(col)
900049de:	f8c4 5328 	str.w	r5, [r4, #808]	; 0x328
900049e2:	f8a4 532c 	strh.w	r5, [r4, #812]	; 0x32c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900049e6:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
              text(0)
900049ea:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
900049ee:	f8c4 4384 	str.w	r4, [r4, #900]	; 0x384
900049f2:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        rect.x = x;
900049f6:	6465      	str	r5, [r4, #68]	; 0x44
900049f8:	e9c4 55bc 	strd	r5, r5, [r4, #752]	; 0x2f0
        : x(0), y(0), width(0), height(0)
900049fc:	e9c4 55bf 	strd	r5, r5, [r4, #764]	; 0x2fc
90004a00:	e9c4 55c1 	strd	r5, r5, [r4, #772]	; 0x304
          nextSibling(0),
90004a04:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
          cachedAbsX(0),
90004a08:	e9c4 55c5 	strd	r5, r5, [r4, #788]	; 0x314
90004a0c:	f00c f964 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a10:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90004a12:	4650      	mov	r0, sl
90004a14:	4639      	mov	r1, r7
90004a16:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a1a:	f00f f81c 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004a1e:	4650      	mov	r0, sl
90004a20:	4629      	mov	r1, r5
        rect.x = x;
90004a22:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004a26:	f00d ff96 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004a2a:	4651      	mov	r1, sl
90004a2c:	4630      	mov	r0, r6
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004a2e:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90004a32:	f00c f951 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a36:	f04f 1096 	mov.w	r0, #9830550	; 0x960096
90004a3a:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004a3e:	f104 0198 	add.w	r1, r4, #152	; 0x98
90004a42:	f504 783e 	add.w	r8, r4, #760	; 0x2f8
90004a46:	e9c4 0327 	strd	r0, r3, [r4, #156]	; 0x9c
90004a4a:	4b68      	ldr	r3, [pc, #416]	; (90004bec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
90004a4c:	4630      	mov	r0, r6
90004a4e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90004a52:	f00c f941 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a56:	4b66      	ldr	r3, [pc, #408]	; (90004bf0 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004a58:	a90f      	add	r1, sp, #60	; 0x3c
90004a5a:	463a      	mov	r2, r7
90004a5c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90004a60:	2302      	movs	r3, #2
90004a62:	4658      	mov	r0, fp
90004a64:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004a68:	2303      	movs	r3, #3
90004a6a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a6e:	f00e fd66 	bl	9001353e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
90004a72:	4b60      	ldr	r3, [pc, #384]	; (90004bf4 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
class TypedText
90004a74:	2105      	movs	r1, #5
90004a76:	881b      	ldrh	r3, [r3, #0]
90004a78:	f8a4 10fc 	strh.w	r1, [r4, #252]	; 0xfc
90004a7c:	428b      	cmp	r3, r1
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a7e:	4b5e      	ldr	r3, [pc, #376]	; (90004bf8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90004a80:	9307      	str	r3, [sp, #28]
90004a82:	d925      	bls.n	90004ad0 <_ZN25screen_snake_gameViewBaseC1Ev+0x284>
90004a84:	681b      	ldr	r3, [r3, #0]
90004a86:	2b00      	cmp	r3, #0
90004a88:	f000 81ee 	beq.w	90004e68 <_ZN25screen_snake_gameViewBaseC1Ev+0x61c>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a8c:	7a9a      	ldrb	r2, [r3, #10]
90004a8e:	4b5b      	ldr	r3, [pc, #364]	; (90004bfc <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
90004a90:	681b      	ldr	r3, [r3, #0]
90004a92:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004a96:	4b5a      	ldr	r3, [pc, #360]	; (90004c00 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
90004a98:	6818      	ldr	r0, [r3, #0]
90004a9a:	f7ff fbc7 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004a9e:	f8d9 2000 	ldr.w	r2, [r9]
90004aa2:	4601      	mov	r1, r0
90004aa4:	4857      	ldr	r0, [pc, #348]	; (90004c04 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90004aa6:	6b93      	ldr	r3, [r2, #56]	; 0x38
90004aa8:	4283      	cmp	r3, r0
90004aaa:	f040 81d5 	bne.w	90004e58 <_ZN25screen_snake_gameViewBaseC1Ev+0x60c>
        return fontHeight;
90004aae:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90004ab2:	6c93      	ldr	r3, [r2, #72]	; 0x48
90004ab4:	4648      	mov	r0, r9
90004ab6:	9103      	str	r1, [sp, #12]
90004ab8:	4798      	blx	r3
90004aba:	fb15 f500 	smulbb	r5, r5, r0
90004abe:	f8d9 3000 	ldr.w	r3, [r9]
90004ac2:	4648      	mov	r0, r9
90004ac4:	b2ad      	uxth	r5, r5
90004ac6:	9903      	ldr	r1, [sp, #12]
90004ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004aca:	4798      	blx	r3
90004acc:	4405      	add	r5, r0
90004ace:	b22d      	sxth	r5, r5
    btn_snake_start.setAction(buttonCallback);
90004ad0:	f504 7360 	add.w	r3, r4, #896	; 0x380
        color = col;
90004ad4:	f04f 32ff 	mov.w	r2, #4294967295
90004ad8:	4659      	mov	r1, fp
90004ada:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004adc:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
90004ae0:	f04f 0901 	mov.w	r9, #1
90004ae4:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004ae8:	2500      	movs	r5, #0
90004aea:	9303      	str	r3, [sp, #12]
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004aec:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
        colorPressed = col;
90004af0:	e9c4 2240 	strd	r2, r2, [r4, #256]	; 0x100
90004af4:	f00c f8f0 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004af8:	4943      	ldr	r1, [pc, #268]	; (90004c08 <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90004afa:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004afe:	4630      	mov	r0, r6
90004b00:	e9c4 1344 	strd	r1, r3, [r4, #272]	; 0x110
90004b04:	4b41      	ldr	r3, [pc, #260]	; (90004c0c <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
90004b06:	f504 7186 	add.w	r1, r4, #268	; 0x10c
90004b0a:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
90004b0e:	f00c f8e3 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b12:	4b3f      	ldr	r3, [pc, #252]	; (90004c10 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90004b14:	ed9d 8a04 	vldr	s16, [sp, #16]
90004b18:	aa0f      	add	r2, sp, #60	; 0x3c
90004b1a:	9700      	str	r7, [sp, #0]
90004b1c:	a90d      	add	r1, sp, #52	; 0x34
90004b1e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90004b22:	230a      	movs	r3, #10
90004b24:	ee18 0a10 	vmov	r0, s16
90004b28:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b2c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b30:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b34:	4613      	mov	r3, r2
90004b36:	aa0e      	add	r2, sp, #56	; 0x38
90004b38:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b3c:	f00e fece 	bl	900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90004b40:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b44:	9b03      	ldr	r3, [sp, #12]
90004b46:	ee18 1a10 	vmov	r1, s16
90004b4a:	4630      	mov	r0, r6
90004b4c:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
90004b50:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90004b54:	f884 b16a 	strb.w	fp, [r4, #362]	; 0x16a
90004b58:	f00c f8be 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b5c:	4b2d      	ldr	r3, [pc, #180]	; (90004c14 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90004b5e:	aa0f      	add	r2, sp, #60	; 0x3c
90004b60:	9700      	str	r7, [sp, #0]
90004b62:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
90004b66:	2309      	movs	r3, #9
90004b68:	a90d      	add	r1, sp, #52	; 0x34
90004b6a:	ee18 0a90 	vmov	r0, s17
90004b6e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b72:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b76:	4613      	mov	r3, r2
90004b78:	aa0e      	add	r2, sp, #56	; 0x38
90004b7a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b7e:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b82:	f00e feab 	bl	900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004b86:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b8a:	9b03      	ldr	r3, [sp, #12]
90004b8c:	ee18 1a90 	vmov	r1, s17
90004b90:	4630      	mov	r0, r6
90004b92:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
90004b96:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
90004b9a:	f884 b1a6 	strb.w	fp, [r4, #422]	; 0x1a6
90004b9e:	f00c f89b 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba2:	4b1d      	ldr	r3, [pc, #116]	; (90004c18 <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90004ba4:	ed9d 8a05 	vldr	s16, [sp, #20]
90004ba8:	aa0f      	add	r2, sp, #60	; 0x3c
90004baa:	9700      	str	r7, [sp, #0]
90004bac:	a90d      	add	r1, sp, #52	; 0x34
90004bae:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004bb2:	2307      	movs	r3, #7
90004bb4:	ee18 0a10 	vmov	r0, s16
90004bb8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004bbc:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004bc0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004bc4:	4613      	mov	r3, r2
90004bc6:	aa0e      	add	r2, sp, #56	; 0x38
90004bc8:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004bcc:	e028      	b.n	90004c20 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d4>
90004bce:	bf00      	nop
90004bd0:	9002b888 	.word	0x9002b888
90004bd4:	9002adb0 	.word	0x9002adb0
90004bd8:	9002a280 	.word	0x9002a280
90004bdc:	9002b7f8 	.word	0x9002b7f8
90004be0:	9002ad08 	.word	0x9002ad08
90004be4:	9002ad98 	.word	0x9002ad98
90004be8:	900046dd 	.word	0x900046dd
90004bec:	ff1eff00 	.word	0xff1eff00
90004bf0:	006f0078 	.word	0x006f0078
90004bf4:	24039760 	.word	0x24039760
90004bf8:	2403975c 	.word	0x2403975c
90004bfc:	24039764 	.word	0x24039764
90004c00:	24039768 	.word	0x24039768
90004c04:	900035cd 	.word	0x900035cd
90004c08:	001e0014 	.word	0x001e0014
90004c0c:	ffff0000 	.word	0xffff0000
90004c10:	0095018e 	.word	0x0095018e
90004c14:	00b901b2 	.word	0x00b901b2
90004c18:	00dd018e 	.word	0x00dd018e
90004c1c:	011001e0 	.word	0x011001e0
90004c20:	f00e fe5c 	bl	900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c24:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004c28:	9b03      	ldr	r3, [sp, #12]
90004c2a:	ee18 1a10 	vmov	r1, s16
90004c2e:	4630      	mov	r0, r6
90004c30:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90004c34:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
90004c38:	f884 b1e2 	strb.w	fp, [r4, #482]	; 0x1e2
90004c3c:	f00c f84c 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c40:	4b92      	ldr	r3, [pc, #584]	; (90004e8c <_ZN25screen_snake_gameViewBaseC1Ev+0x640>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90004c42:	aa0f      	add	r2, sp, #60	; 0x3c
90004c44:	9700      	str	r7, [sp, #0]
90004c46:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
90004c4a:	2308      	movs	r3, #8
90004c4c:	a90d      	add	r1, sp, #52	; 0x34
90004c4e:	ee19 0a10 	vmov	r0, s18
90004c52:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004c56:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004c5a:	4613      	mov	r3, r2
90004c5c:	aa0e      	add	r2, sp, #56	; 0x38
90004c5e:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004c62:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c66:	f00e fe39 	bl	900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c6a:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004c6e:	9b03      	ldr	r3, [sp, #12]
90004c70:	ee19 1a10 	vmov	r1, s18
90004c74:	4630      	mov	r0, r6
90004c76:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
90004c7a:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
90004c7e:	f884 b21e 	strb.w	fp, [r4, #542]	; 0x21e
90004c82:	f00c f829 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c86:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90004c8a:	aa0f      	add	r2, sp, #60	; 0x3c
90004c8c:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c90:	9700      	str	r7, [sp, #0]
90004c92:	a90d      	add	r1, sp, #52	; 0x34
90004c94:	f8dd 9018 	ldr.w	r9, [sp, #24]
90004c98:	4613      	mov	r3, r2
90004c9a:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
90004c9e:	200b      	movs	r0, #11
90004ca0:	aa0e      	add	r2, sp, #56	; 0x38
90004ca2:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004ca6:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
90004caa:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
90004cae:	4648      	mov	r0, r9
90004cb0:	f00e fe14 	bl	900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004cb4:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004cb8:	9b03      	ldr	r3, [sp, #12]
90004cba:	4649      	mov	r1, r9
90004cbc:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
90004cc0:	4630      	mov	r0, r6
90004cc2:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
    lbl_score_val.setPosition(434, 0, 46, 24);
90004cc6:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
90004cca:	f00c f805 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90004cce:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004cd2:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        boundingArea = calculateBoundingArea();
90004cd6:	ad08      	add	r5, sp, #32
        color = newColor;
90004cd8:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
90004cdc:	f44f 73b4 	mov.w	r3, #360	; 0x168
        boundingArea = calculateBoundingArea();
90004ce0:	4651      	mov	r1, sl
90004ce2:	4628      	mov	r0, r5
90004ce4:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
90004ce8:	f00e f924 	bl	90012f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
90004cec:	4b68      	ldr	r3, [pc, #416]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
90004cee:	2204      	movs	r2, #4
90004cf0:	9310      	str	r3, [sp, #64]	; 0x40
90004cf2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90004cf6:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004cfa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004cfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8W6));
90004d02:	4639      	mov	r1, r7
90004d04:	4650      	mov	r0, sl
90004d06:	f00e fbbd 	bl	90013484 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004d0a:	4651      	mov	r1, sl
90004d0c:	4630      	mov	r0, r6
        alpha = newAlpha;
90004d0e:	f884 b29a 	strb.w	fp, [r4, #666]	; 0x29a
90004d12:	f00b ffe1 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004d16:	f44f 72d9 	mov.w	r2, #434	; 0x1b2
        setX(x);
90004d1a:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        setY(y);
90004d1e:	495d      	ldr	r1, [pc, #372]	; (90004e94 <_ZN25screen_snake_gameViewBaseC1Ev+0x648>)
        rect.x = x;
90004d20:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
        setWidth(width);
90004d24:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90004d26:	428a      	cmp	r2, r1
90004d28:	f040 8092 	bne.w	90004e50 <_ZN25screen_snake_gameViewBaseC1Ev+0x604>
        rect.width = width;
90004d2c:	222e      	movs	r2, #46	; 0x2e
        boundingArea = calculateBoundingArea();
90004d2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d32:	4649      	mov	r1, r9
90004d34:	4628      	mov	r0, r5
90004d36:	f8a4 22b4 	strh.w	r2, [r4, #692]	; 0x2b4
90004d3a:	4798      	blx	r3
90004d3c:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
90004d40:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90004d48:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
90004d4c:	4952      	ldr	r1, [pc, #328]	; (90004e98 <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
90004d4e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90004d50:	428a      	cmp	r2, r1
90004d52:	d16f      	bne.n	90004e34 <_ZN25screen_snake_gameViewBaseC1Ev+0x5e8>
        rect.height = height;
90004d54:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90004d56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d5a:	4649      	mov	r1, r9
90004d5c:	4628      	mov	r0, r5
90004d5e:	f8a4 22b6 	strh.w	r2, [r4, #694]	; 0x2b6
90004d62:	4798      	blx	r3
90004d64:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004d68:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90004d70:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        color = newColor;
90004d74:	f04f 31ff 	mov.w	r1, #4294967295
90004d78:	4848      	ldr	r0, [pc, #288]	; (90004e9c <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
        boundingArea = calculateBoundingArea();
90004d7a:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90004d7e:	2300      	movs	r3, #0
        color = newColor;
90004d80:	f8c4 12dc 	str.w	r1, [r4, #732]	; 0x2dc
        linespace = space;
90004d84:	4282      	cmp	r2, r0
90004d86:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        boundingArea = calculateBoundingArea();
90004d8a:	d157      	bne.n	90004e3c <_ZN25screen_snake_gameViewBaseC1Ev+0x5f0>
90004d8c:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
90004d90:	e9c4 31ba 	strd	r3, r1, [r4, #744]	; 0x2e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004d94:	9b07      	ldr	r3, [sp, #28]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8AZ9).getText());
90004d96:	f504 7a50 	add.w	sl, r4, #832	; 0x340
90004d9a:	681b      	ldr	r3, [r3, #0]
90004d9c:	2b00      	cmp	r3, #0
90004d9e:	d069      	beq.n	90004e74 <_ZN25screen_snake_gameViewBaseC1Ev+0x628>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004da0:	4b3f      	ldr	r3, [pc, #252]	; (90004ea0 <_ZN25screen_snake_gameViewBaseC1Ev+0x654>)
90004da2:	881b      	ldrh	r3, [r3, #0]
90004da4:	2b02      	cmp	r3, #2
90004da6:	d96b      	bls.n	90004e80 <_ZN25screen_snake_gameViewBaseC1Ev+0x634>
        return texts->getText(typedTextId);
90004da8:	4b3e      	ldr	r3, [pc, #248]	; (90004ea4 <_ZN25screen_snake_gameViewBaseC1Ev+0x658>)
90004daa:	2102      	movs	r1, #2
90004dac:	6818      	ldr	r0, [r3, #0]
90004dae:	f7ff fa3d 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90004db2:	4a3d      	ldr	r2, [pc, #244]	; (90004ea8 <_ZN25screen_snake_gameViewBaseC1Ev+0x65c>)
90004db4:	4603      	mov	r3, r0
90004db6:	2120      	movs	r1, #32
90004db8:	4650      	mov	r0, sl
90004dba:	f014 fc2b 	bl	90019614 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90004dbe:	4b34      	ldr	r3, [pc, #208]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G1O3));
90004dc0:	4639      	mov	r1, r7
90004dc2:	4648      	mov	r0, r9
90004dc4:	9310      	str	r3, [sp, #64]	; 0x40
90004dc6:	2303      	movs	r3, #3
        wc1 = value;
90004dc8:	f8c4 a2f4 	str.w	sl, [r4, #756]	; 0x2f4
90004dcc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90004dd0:	f00e fb58 	bl	90013484 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90004dd4:	235a      	movs	r3, #90	; 0x5a
90004dd6:	4649      	mov	r1, r9
90004dd8:	4630      	mov	r0, r6
        linespace = space;
90004dda:	f04f 0900 	mov.w	r9, #0
        alpha = newAlpha;
90004dde:	f884 32e2 	strb.w	r3, [r4, #738]	; 0x2e2
90004de2:	f00b ff79 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004de6:	4b31      	ldr	r3, [pc, #196]	; (90004eac <_ZN25screen_snake_gameViewBaseC1Ev+0x660>)
        boundingArea = calculateBoundingArea();
90004de8:	4641      	mov	r1, r8
90004dea:	4628      	mov	r0, r5
90004dec:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
        color = newColor;
90004df0:	4b2f      	ldr	r3, [pc, #188]	; (90004eb0 <_ZN25screen_snake_gameViewBaseC1Ev+0x664>)
        linespace = space;
90004df2:	f8a4 932c 	strh.w	r9, [r4, #812]	; 0x32c
        color = newColor;
90004df6:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90004dfa:	f00e f89b 	bl	90012f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004dfe:	4b24      	ldr	r3, [pc, #144]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
90004e00:	2201      	movs	r2, #1
90004e02:	9310      	str	r3, [sp, #64]	; 0x40
90004e04:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90004e08:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
90004e14:	4639      	mov	r1, r7
90004e16:	4640      	mov	r0, r8
90004e18:	f00e fb34 	bl	90013484 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004e1c:	4630      	mov	r0, r6
90004e1e:	4641      	mov	r1, r8
        visible = vis;
90004e20:	f884 931d 	strb.w	r9, [r4, #797]	; 0x31d
90004e24:	f00b ff58 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004e28:	4620      	mov	r0, r4
90004e2a:	b013      	add	sp, #76	; 0x4c
90004e2c:	ecbd 8b04 	vpop	{d8-d9}
90004e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90004e34:	2118      	movs	r1, #24
90004e36:	4648      	mov	r0, r9
90004e38:	4790      	blx	r2
90004e3a:	e799      	b.n	90004d70 <_ZN25screen_snake_gameViewBaseC1Ev+0x524>
90004e3c:	4649      	mov	r1, r9
90004e3e:	4628      	mov	r0, r5
90004e40:	4790      	blx	r2
90004e42:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004e46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004e4e:	e7a1      	b.n	90004d94 <_ZN25screen_snake_gameViewBaseC1Ev+0x548>
        setWidth(width);
90004e50:	212e      	movs	r1, #46	; 0x2e
90004e52:	4648      	mov	r0, r9
90004e54:	4790      	blx	r2
90004e56:	e777      	b.n	90004d48 <_ZN25screen_snake_gameViewBaseC1Ev+0x4fc>
90004e58:	9103      	str	r1, [sp, #12]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004e5a:	4648      	mov	r0, r9
90004e5c:	4798      	blx	r3
90004e5e:	f8d9 2000 	ldr.w	r2, [r9]
90004e62:	4605      	mov	r5, r0
90004e64:	9903      	ldr	r1, [sp, #12]
90004e66:	e624      	b.n	90004ab2 <_ZN25screen_snake_gameViewBaseC1Ev+0x266>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e68:	4b12      	ldr	r3, [pc, #72]	; (90004eb4 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
90004e6a:	216c      	movs	r1, #108	; 0x6c
90004e6c:	4a12      	ldr	r2, [pc, #72]	; (90004eb8 <_ZN25screen_snake_gameViewBaseC1Ev+0x66c>)
90004e6e:	4813      	ldr	r0, [pc, #76]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e70:	f022 fc4c 	bl	9002770c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e74:	4b0f      	ldr	r3, [pc, #60]	; (90004eb4 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
90004e76:	2160      	movs	r1, #96	; 0x60
90004e78:	4a11      	ldr	r2, [pc, #68]	; (90004ec0 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e7a:	4810      	ldr	r0, [pc, #64]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e7c:	f022 fc46 	bl	9002770c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e80:	4b10      	ldr	r3, [pc, #64]	; (90004ec4 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
90004e82:	2161      	movs	r1, #97	; 0x61
90004e84:	4a0e      	ldr	r2, [pc, #56]	; (90004ec0 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e86:	480d      	ldr	r0, [pc, #52]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e88:	f022 fc40 	bl	9002770c <__assert_func>
90004e8c:	00b9016a 	.word	0x00b9016a
90004e90:	9002a280 	.word	0x9002a280
90004e94:	90004529 	.word	0x90004529
90004e98:	90004551 	.word	0x90004551
90004e9c:	9000459d 	.word	0x9000459d
90004ea0:	24039760 	.word	0x24039760
90004ea4:	24039768 	.word	0x24039768
90004ea8:	9002acfc 	.word	0x9002acfc
90004eac:	00700076 	.word	0x00700076
90004eb0:	ffff0000 	.word	0xffff0000
90004eb4:	9002ab70 	.word	0x9002ab70
90004eb8:	9002abb4 	.word	0x9002abb4
90004ebc:	9002abf0 	.word	0x9002abf0
90004ec0:	9002acc4 	.word	0x9002acc4
90004ec4:	9002ac84 	.word	0x9002ac84

90004ec8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90004ec8:	6a80      	ldr	r0, [r0, #40]	; 0x28
90004eca:	4770      	bx	lr

90004ecc <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ecc:	4770      	bx	lr
90004ece:	bf00      	nop

90004ed0 <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ed0:	4770      	bx	lr
90004ed2:	bf00      	nop

90004ed4 <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ed4:	4770      	bx	lr
90004ed6:	bf00      	nop

90004ed8 <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ed8:	4770      	bx	lr
90004eda:	bf00      	nop

90004edc <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004edc:	4770      	bx	lr
90004ede:	bf00      	nop

90004ee0 <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee0:	4770      	bx	lr
90004ee2:	bf00      	nop

90004ee4 <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee4:	4770      	bx	lr
90004ee6:	bf00      	nop

90004ee8 <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee8:	4770      	bx	lr
90004eea:	bf00      	nop

90004eec <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004eec:	4770      	bx	lr
90004eee:	bf00      	nop

90004ef0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90004ef0:	4770      	bx	lr
90004ef2:	bf00      	nop

90004ef4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90004ef4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90004ef8:	b133      	cbz	r3, 90004f08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90004efa:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004efc:	f100 0374 	add.w	r3, r0, #116	; 0x74
90004f00:	65c2      	str	r2, [r0, #92]	; 0x5c
90004f02:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004f04:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
90004f06:	4770      	bx	lr
90004f08:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004f0a:	f100 0370 	add.w	r3, r0, #112	; 0x70
90004f0e:	65c2      	str	r2, [r0, #92]	; 0x5c
90004f10:	681b      	ldr	r3, [r3, #0]
90004f12:	6603      	str	r3, [r0, #96]	; 0x60
    }
90004f14:	4770      	bx	lr
90004f16:	bf00      	nop

90004f18 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f18:	4770      	bx	lr
90004f1a:	bf00      	nop

90004f1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004f1c:	4770      	bx	lr
90004f1e:	bf00      	nop

90004f20 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f20:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f22:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004f24:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004f26:	6844      	ldr	r4, [r0, #4]
90004f28:	f012 0f01 	tst.w	r2, #1
90004f2c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004f30:	d103      	bne.n	90004f3a <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90004f32:	689b      	ldr	r3, [r3, #8]
    }
90004f34:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f38:	4718      	bx	r3
90004f3a:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004f3e:	689b      	ldr	r3, [r3, #8]
90004f40:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004f44:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f48:	58d3      	ldr	r3, [r2, r3]
90004f4a:	4718      	bx	r3

90004f4c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004f4c:	6843      	ldr	r3, [r0, #4]
90004f4e:	b13b      	cbz	r3, 90004f60 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004f50:	6883      	ldr	r3, [r0, #8]
90004f52:	b10b      	cbz	r3, 90004f58 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004f54:	2001      	movs	r0, #1
    }
90004f56:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004f58:	68c0      	ldr	r0, [r0, #12]
90004f5a:	f000 0001 	and.w	r0, r0, #1
90004f5e:	4770      	bx	lr
90004f60:	4618      	mov	r0, r3
90004f62:	4770      	bx	lr

90004f64 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004f64:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004f68:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90004f6c:	4770      	bx	lr
90004f6e:	bf00      	nop

90004f70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004f70:	b510      	push	{r4, lr}
90004f72:	4604      	mov	r4, r0
90004f74:	2178      	movs	r1, #120	; 0x78
90004f76:	f022 fb9b 	bl	900276b0 <_ZdlPvj>
90004f7a:	4620      	mov	r0, r4
90004f7c:	bd10      	pop	{r4, pc}
90004f7e:	bf00      	nop

90004f80 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f80:	b510      	push	{r4, lr}
90004f82:	4604      	mov	r4, r0
90004f84:	2110      	movs	r1, #16
90004f86:	f022 fb93 	bl	900276b0 <_ZdlPvj>
90004f8a:	4620      	mov	r0, r4
90004f8c:	bd10      	pop	{r4, pc}
90004f8e:	bf00      	nop

90004f90 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90004f90:	4b03      	ldr	r3, [pc, #12]	; (90004fa0 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90004f92:	b510      	push	{r4, lr}
90004f94:	4604      	mov	r4, r0
90004f96:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004f98:	f00f fd4a 	bl	90014a30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004f9c:	4620      	mov	r0, r4
90004f9e:	bd10      	pop	{r4, pc}
90004fa0:	9002afac 	.word	0x9002afac

90004fa4 <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90004fa4:	4b07      	ldr	r3, [pc, #28]	; (90004fc4 <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
90004fa6:	b500      	push	{lr}
90004fa8:	b083      	sub	sp, #12
90004faa:	6003      	str	r3, [r0, #0]
90004fac:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004fae:	f00f fd3f 	bl	90014a30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004fb2:	9801      	ldr	r0, [sp, #4]
90004fb4:	f242 6128 	movw	r1, #9768	; 0x2628
90004fb8:	f022 fb7a 	bl	900276b0 <_ZdlPvj>
90004fbc:	9801      	ldr	r0, [sp, #4]
90004fbe:	b003      	add	sp, #12
90004fc0:	f85d fb04 	ldr.w	pc, [sp], #4
90004fc4:	9002afac 	.word	0x9002afac

90004fc8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_tictactoe_gameViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_pos1)
90004fc8:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
90004fcc:	4299      	cmp	r1, r3
{
90004fce:	b570      	push	{r4, r5, r6, lr}
90004fd0:	4604      	mov	r4, r0
90004fd2:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
90004fd4:	d061      	beq.n	9000509a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
        //intr_pos1
        //When btn_pos1 clicked call virtual function
        //Call pos1_clicked
        pos1_clicked();
    }
    if (&src == &btn_pos2)
90004fd6:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90004fda:	429d      	cmp	r5, r3
90004fdc:	d055      	beq.n	9000508a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
        //intr_pos2
        //When btn_pos2 clicked call virtual function
        //Call pos2_clicked
        pos2_clicked();
    }
    if (&src == &btn_pos3)
90004fde:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
90004fe2:	429d      	cmp	r5, r3
90004fe4:	d049      	beq.n	9000507a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
        //intr_pos3
        //When btn_pos3 clicked call virtual function
        //Call pos3_clicked
        pos3_clicked();
    }
    if (&src == &btn_pos4)
90004fe6:	f504 7348 	add.w	r3, r4, #800	; 0x320
90004fea:	429d      	cmp	r5, r3
90004fec:	d03d      	beq.n	9000506a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
        //intr_pos4
        //When btn_pos4 clicked call virtual function
        //Call pos4_clicked
        pos4_clicked();
    }
    if (&src == &btn_pos5)
90004fee:	f504 6382 	add.w	r3, r4, #1040	; 0x410
90004ff2:	429d      	cmp	r5, r3
90004ff4:	d031      	beq.n	9000505a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
        //intr_pos5
        //When btn_pos5 clicked call virtual function
        //Call pos5_clicked
        pos5_clicked();
    }
    if (&src == &btn_pos6)
90004ff6:	f504 7366 	add.w	r3, r4, #920	; 0x398
90004ffa:	429d      	cmp	r5, r3
90004ffc:	d025      	beq.n	9000504a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
        //intr_pos6
        //When btn_pos6 clicked call virtual function
        //Call pos6_clicked
        pos6_clicked();
    }
    if (&src == &btn_pos7)
90004ffe:	f504 6391 	add.w	r3, r4, #1160	; 0x488
90005002:	429d      	cmp	r5, r3
90005004:	d019      	beq.n	9000503a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
        //intr_pos7
        //When btn_pos7 clicked call virtual function
        //Call pos7_clicked
        pos7_clicked();
    }
    if (&src == &btn_pos8)
90005006:	f504 63af 	add.w	r3, r4, #1400	; 0x578
9000500a:	429d      	cmp	r5, r3
9000500c:	d00d      	beq.n	9000502a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
        //intr_pos8
        //When btn_pos8 clicked call virtual function
        //Call pos8_clicked
        pos8_clicked();
    }
    if (&src == &btn_pos9)
9000500e:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90005012:	429d      	cmp	r5, r3
90005014:	d000      	beq.n	90005018 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
        //intr_pos9
        //When btn_pos9 clicked call virtual function
        //Call pos9_clicked
        pos9_clicked();
    }
}
90005016:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
90005018:	6823      	ldr	r3, [r4, #0]
9000501a:	4a23      	ldr	r2, [pc, #140]	; (900050a8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
9000501c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000501e:	4293      	cmp	r3, r2
90005020:	d0f9      	beq.n	90005016 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
90005022:	4620      	mov	r0, r4
}
90005024:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
90005028:	4718      	bx	r3
        pos8_clicked();
9000502a:	6823      	ldr	r3, [r4, #0]
9000502c:	4a1f      	ldr	r2, [pc, #124]	; (900050ac <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
9000502e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005030:	4293      	cmp	r3, r2
90005032:	d0ec      	beq.n	9000500e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
90005034:	4620      	mov	r0, r4
90005036:	4798      	blx	r3
90005038:	e7e9      	b.n	9000500e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
9000503a:	6823      	ldr	r3, [r4, #0]
9000503c:	4a1c      	ldr	r2, [pc, #112]	; (900050b0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
9000503e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90005040:	4293      	cmp	r3, r2
90005042:	d0e0      	beq.n	90005006 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
90005044:	4620      	mov	r0, r4
90005046:	4798      	blx	r3
90005048:	e7dd      	b.n	90005006 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
9000504a:	6823      	ldr	r3, [r4, #0]
9000504c:	4a19      	ldr	r2, [pc, #100]	; (900050b4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
9000504e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90005050:	4293      	cmp	r3, r2
90005052:	d0d4      	beq.n	90004ffe <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
90005054:	4620      	mov	r0, r4
90005056:	4798      	blx	r3
90005058:	e7d1      	b.n	90004ffe <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
9000505a:	6823      	ldr	r3, [r4, #0]
9000505c:	4a16      	ldr	r2, [pc, #88]	; (900050b8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
9000505e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005060:	4293      	cmp	r3, r2
90005062:	d0c8      	beq.n	90004ff6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
90005064:	4620      	mov	r0, r4
90005066:	4798      	blx	r3
90005068:	e7c5      	b.n	90004ff6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
9000506a:	6823      	ldr	r3, [r4, #0]
9000506c:	4a13      	ldr	r2, [pc, #76]	; (900050bc <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
9000506e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90005070:	4293      	cmp	r3, r2
90005072:	d0bc      	beq.n	90004fee <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
90005074:	4620      	mov	r0, r4
90005076:	4798      	blx	r3
90005078:	e7b9      	b.n	90004fee <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
9000507a:	6823      	ldr	r3, [r4, #0]
9000507c:	4a10      	ldr	r2, [pc, #64]	; (900050c0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
9000507e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005080:	4293      	cmp	r3, r2
90005082:	d0b0      	beq.n	90004fe6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90005084:	4620      	mov	r0, r4
90005086:	4798      	blx	r3
90005088:	e7ad      	b.n	90004fe6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
9000508a:	6823      	ldr	r3, [r4, #0]
9000508c:	4a0d      	ldr	r2, [pc, #52]	; (900050c4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
9000508e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005090:	4293      	cmp	r3, r2
90005092:	d0a4      	beq.n	90004fde <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
90005094:	4620      	mov	r0, r4
90005096:	4798      	blx	r3
90005098:	e7a1      	b.n	90004fde <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
9000509a:	6803      	ldr	r3, [r0, #0]
9000509c:	4a0a      	ldr	r2, [pc, #40]	; (900050c8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
9000509e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900050a0:	4293      	cmp	r3, r2
900050a2:	d098      	beq.n	90004fd6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
900050a4:	4798      	blx	r3
900050a6:	e796      	b.n	90004fd6 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
900050a8:	90004eed 	.word	0x90004eed
900050ac:	90004ee9 	.word	0x90004ee9
900050b0:	90004ee5 	.word	0x90004ee5
900050b4:	90004ee1 	.word	0x90004ee1
900050b8:	90004edd 	.word	0x90004edd
900050bc:	90004ed9 	.word	0x90004ed9
900050c0:	90004ed5 	.word	0x90004ed5
900050c4:	90004ed1 	.word	0x90004ed1
900050c8:	90004ecd 	.word	0x90004ecd

900050cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
900050cc:	6b03      	ldr	r3, [r0, #48]	; 0x30
900050ce:	b30b      	cbz	r3, 90005114 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900050d0:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900050d2:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900050d4:	68d1      	ldr	r1, [r2, #12]
900050d6:	4604      	mov	r4, r0
900050d8:	481a      	ldr	r0, [pc, #104]	; (90005144 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900050da:	4281      	cmp	r1, r0
900050dc:	d11b      	bne.n	90005116 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900050de:	6858      	ldr	r0, [r3, #4]
900050e0:	b180      	cbz	r0, 90005104 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900050e2:	6899      	ldr	r1, [r3, #8]
900050e4:	b1f1      	cbz	r1, 90005124 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900050e6:	6892      	ldr	r2, [r2, #8]
900050e8:	4917      	ldr	r1, [pc, #92]	; (90005148 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900050ea:	428a      	cmp	r2, r1
900050ec:	d124      	bne.n	90005138 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900050ee:	68da      	ldr	r2, [r3, #12]
900050f0:	6858      	ldr	r0, [r3, #4]
900050f2:	eb00 0062 	add.w	r0, r0, r2, asr #1
900050f6:	07d2      	lsls	r2, r2, #31
900050f8:	d405      	bmi.n	90005106 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900050fa:	4621      	mov	r1, r4
900050fc:	689b      	ldr	r3, [r3, #8]
        }
    }
900050fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005102:	4718      	bx	r3
90005104:	bd70      	pop	{r4, r5, r6, pc}
90005106:	6899      	ldr	r1, [r3, #8]
90005108:	6803      	ldr	r3, [r0, #0]
9000510a:	585b      	ldr	r3, [r3, r1]
9000510c:	4621      	mov	r1, r4
9000510e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005112:	4718      	bx	r3
90005114:	4770      	bx	lr
        if (action && action->isValid())
90005116:	4618      	mov	r0, r3
90005118:	4788      	blx	r1
9000511a:	2800      	cmp	r0, #0
9000511c:	d0f2      	beq.n	90005104 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
9000511e:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005120:	681a      	ldr	r2, [r3, #0]
90005122:	e7e0      	b.n	900050e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
90005124:	68dd      	ldr	r5, [r3, #12]
90005126:	07ee      	lsls	r6, r5, #31
90005128:	d5ec      	bpl.n	90005104 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000512a:	6892      	ldr	r2, [r2, #8]
9000512c:	4e06      	ldr	r6, [pc, #24]	; (90005148 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
9000512e:	42b2      	cmp	r2, r6
90005130:	d102      	bne.n	90005138 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90005132:	eb00 0065 	add.w	r0, r0, r5, asr #1
90005136:	e7e7      	b.n	90005108 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90005138:	4621      	mov	r1, r4
9000513a:	4618      	mov	r0, r3
    }
9000513c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90005140:	4710      	bx	r2
90005142:	bf00      	nop
90005144:	90004f4d 	.word	0x90004f4d
90005148:	90004f21 	.word	0x90004f21

9000514c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000514c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000514e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005150:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005152:	bf18      	it	ne
90005154:	2201      	movne	r2, #1
        return pressed;
90005156:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000515a:	460d      	mov	r5, r1
9000515c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000515e:	42b2      	cmp	r2, r6
90005160:	d004      	beq.n	9000516c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90005162:	b116      	cbz	r6, 9000516a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005164:	792b      	ldrb	r3, [r5, #4]
90005166:	2b01      	cmp	r3, #1
90005168:	d00e      	beq.n	90005188 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000516a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000516c:	fab3 f383 	clz	r3, r3
90005170:	095b      	lsrs	r3, r3, #5
90005172:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90005176:	6803      	ldr	r3, [r0, #0]
90005178:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000517c:	4798      	blx	r3
            invalidate();
9000517e:	6823      	ldr	r3, [r4, #0]
90005180:	4620      	mov	r0, r4
90005182:	695b      	ldr	r3, [r3, #20]
90005184:	4798      	blx	r3
90005186:	e7ec      	b.n	90005162 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005188:	6823      	ldr	r3, [r4, #0]
9000518a:	4a20      	ldr	r2, [pc, #128]	; (9000520c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000518c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005190:	4293      	cmp	r3, r2
90005192:	d127      	bne.n	900051e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90005194:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005196:	2b00      	cmp	r3, #0
90005198:	d0e7      	beq.n	9000516a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000519a:	6819      	ldr	r1, [r3, #0]
9000519c:	481c      	ldr	r0, [pc, #112]	; (90005210 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000519e:	68ca      	ldr	r2, [r1, #12]
900051a0:	4282      	cmp	r2, r0
900051a2:	d123      	bne.n	900051ec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
900051a4:	685a      	ldr	r2, [r3, #4]
900051a6:	2a00      	cmp	r2, #0
900051a8:	d0df      	beq.n	9000516a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900051aa:	689d      	ldr	r5, [r3, #8]
900051ac:	b175      	cbz	r5, 900051cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
900051ae:	688e      	ldr	r6, [r1, #8]
900051b0:	4a18      	ldr	r2, [pc, #96]	; (90005214 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900051b2:	4296      	cmp	r6, r2
900051b4:	d123      	bne.n	900051fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900051b6:	68d9      	ldr	r1, [r3, #12]
900051b8:	685a      	ldr	r2, [r3, #4]
900051ba:	eb02 0061 	add.w	r0, r2, r1, asr #1
900051be:	07ca      	lsls	r2, r1, #31
900051c0:	d41b      	bmi.n	900051fa <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
900051c2:	689b      	ldr	r3, [r3, #8]
900051c4:	4621      	mov	r1, r4
    }
900051c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900051ca:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
900051cc:	68d8      	ldr	r0, [r3, #12]
900051ce:	07c6      	lsls	r6, r0, #31
900051d0:	d5cb      	bpl.n	9000516a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900051d2:	688e      	ldr	r6, [r1, #8]
900051d4:	490f      	ldr	r1, [pc, #60]	; (90005214 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900051d6:	428e      	cmp	r6, r1
900051d8:	d111      	bne.n	900051fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900051da:	eb02 0060 	add.w	r0, r2, r0, asr #1
900051de:	6803      	ldr	r3, [r0, #0]
900051e0:	595b      	ldr	r3, [r3, r5]
900051e2:	e7ef      	b.n	900051c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900051e4:	4620      	mov	r0, r4
    }
900051e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900051ea:	4718      	bx	r3
        if (action && action->isValid())
900051ec:	4618      	mov	r0, r3
900051ee:	4790      	blx	r2
900051f0:	2800      	cmp	r0, #0
900051f2:	d0ba      	beq.n	9000516a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900051f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
900051f6:	6819      	ldr	r1, [r3, #0]
900051f8:	e7d9      	b.n	900051ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900051fa:	689d      	ldr	r5, [r3, #8]
900051fc:	e7ef      	b.n	900051de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900051fe:	4621      	mov	r1, r4
90005200:	4618      	mov	r0, r3
90005202:	4633      	mov	r3, r6
    }
90005204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005208:	4718      	bx	r3
9000520a:	bf00      	nop
9000520c:	900050cd 	.word	0x900050cd
90005210:	90004f4d 	.word	0x90004f4d
90005214:	90004f21 	.word	0x90004f21

90005218 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
90005218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000521c:	ed2d 8b06 	vpush	{d8-d10}
90005220:	b09f      	sub	sp, #124	; 0x7c
90005222:	4683      	mov	fp, r0
90005224:	f012 fd3e 	bl	90017ca4 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90005228:	f44f 7280 	mov.w	r2, #256	; 0x100
    flexButtonCallback(this, &screen_tictactoe_gameViewBase::flexButtonCallbackHandler)
9000522c:	482a      	ldr	r0, [pc, #168]	; (900052d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
9000522e:	2400      	movs	r4, #0
90005230:	f8ab 2064 	strh.w	r2, [fp, #100]	; 0x64
        : Widget(), alpha(255), color(0)
90005234:	22ff      	movs	r2, #255	; 0xff
90005236:	4929      	ldr	r1, [pc, #164]	; (900052dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
90005238:	f10b 0a98 	add.w	sl, fp, #152	; 0x98
9000523c:	f8cb 0000 	str.w	r0, [fp]
90005240:	f10b 006c 	add.w	r0, fp, #108	; 0x6c
90005244:	f88b 2066 	strb.w	r2, [fp, #102]	; 0x66
90005248:	f64f 72ff 	movw	r2, #65535	; 0xffff
9000524c:	f8cb 1040 	str.w	r1, [fp, #64]	; 0x40
90005250:	a91d      	add	r1, sp, #116	; 0x74
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005252:	4e23      	ldr	r6, [pc, #140]	; (900052e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
90005254:	ee0a 0a10 	vmov	s20, r0
90005258:	f8cb 403c 	str.w	r4, [fp, #60]	; 0x3c
        : color(col)
9000525c:	f8cb 4068 	str.w	r4, [fp, #104]	; 0x68
90005260:	f8ad 2074 	strh.w	r2, [sp, #116]	; 0x74
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90005264:	4f1f      	ldr	r7, [pc, #124]	; (900052e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
        : x(0), y(0), width(0), height(0)
90005266:	e9cb 4411 	strd	r4, r4, [fp, #68]	; 0x44
9000526a:	e9cb 4413 	strd	r4, r4, [fp, #76]	; 0x4c
          nextSibling(0),
9000526e:	e9cb 4415 	strd	r4, r4, [fp, #84]	; 0x54
          cachedAbsX(0),
90005272:	e9cb 4417 	strd	r4, r4, [fp, #92]	; 0x5c
90005276:	f00d fbb3 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000527a:	4650      	mov	r0, sl
9000527c:	f00d f984 	bl	90012588 <_ZN8touchgfx4LineC1Ev>
90005280:	6832      	ldr	r2, [r6, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90005282:	f50b 7384 	add.w	r3, fp, #264	; 0x108
        : widgetWidth(0)
90005286:	f8ab 410c 	strh.w	r4, [fp, #268]	; 0x10c
9000528a:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
9000528e:	f8cb 7108 	str.w	r7, [fp, #264]	; 0x108
90005292:	9318      	str	r3, [sp, #96]	; 0x60
90005294:	2900      	cmp	r1, #0
90005296:	d02f      	beq.n	900052f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
90005298:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
9000529a:	2800      	cmp	r0, #0
9000529c:	f001 809a 	beq.w	900063d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11bc>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900052a0:	6802      	ldr	r2, [r0, #0]
900052a2:	4c11      	ldr	r4, [pc, #68]	; (900052e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
900052a4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
900052a6:	42a1      	cmp	r1, r4
900052a8:	d033      	beq.n	90005312 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900052aa:	4788      	blx	r1
        return auxiliaryLCD;
900052ac:	6832      	ldr	r2, [r6, #0]
900052ae:	fab0 f580 	clz	r5, r0
900052b2:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900052b4:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900052b6:	b140      	cbz	r0, 900052ca <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900052b8:	6802      	ldr	r2, [r0, #0]
900052ba:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900052bc:	42a2      	cmp	r2, r4
900052be:	d028      	beq.n	90005312 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900052c0:	4790      	blx	r2
900052c2:	2800      	cmp	r0, #0
900052c4:	bf08      	it	eq
900052c6:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900052ca:	bb15      	cbnz	r5, 90005312 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900052cc:	4b07      	ldr	r3, [pc, #28]	; (900052ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
900052ce:	212c      	movs	r1, #44	; 0x2c
900052d0:	4a07      	ldr	r2, [pc, #28]	; (900052f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
900052d2:	4808      	ldr	r0, [pc, #32]	; (900052f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>)
900052d4:	f022 fa1a 	bl	9002770c <__assert_func>
900052d8:	9002afac 	.word	0x9002afac
900052dc:	9002b888 	.word	0x9002b888
900052e0:	24039704 	.word	0x24039704
900052e4:	9002a090 	.word	0x9002a090
900052e8:	90002339 	.word	0x90002339
900052ec:	9002adf0 	.word	0x9002adf0
900052f0:	9002ae50 	.word	0x9002ae50
900052f4:	9002ae8c 	.word	0x9002ae8c
        return instance->lcdRef;
900052f8:	6890      	ldr	r0, [r2, #8]
900052fa:	4ce1      	ldr	r4, [pc, #900]	; (90005680 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900052fc:	6801      	ldr	r1, [r0, #0]
900052fe:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90005300:	42a1      	cmp	r1, r4
90005302:	d1d2      	bne.n	900052aa <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
90005304:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90005306:	b120      	cbz	r0, 90005312 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005308:	6802      	ldr	r2, [r0, #0]
9000530a:	2501      	movs	r5, #1
9000530c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000530e:	42a2      	cmp	r2, r4
90005310:	d1d6      	bne.n	900052c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
90005312:	4ddc      	ldr	r5, [pc, #880]	; (90005684 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90005314:	f04f 0900 	mov.w	r9, #0
90005318:	f50b 708e 	add.w	r0, fp, #284	; 0x11c
9000531c:	f50b 73c6 	add.w	r3, fp, #396	; 0x18c
90005320:	f105 0824 	add.w	r8, r5, #36	; 0x24
90005324:	f8cb 5108 	str.w	r5, [fp, #264]	; 0x108
90005328:	f8cb 9114 	str.w	r9, [fp, #276]	; 0x114
9000532c:	ee08 0a10 	vmov	s16, r0
90005330:	f8cb 8110 	str.w	r8, [fp, #272]	; 0x110
90005334:	931a      	str	r3, [sp, #104]	; 0x68
90005336:	f00d f927 	bl	90012588 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000533a:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
9000533c:	f8ab 9190 	strh.w	r9, [fp, #400]	; 0x190
90005340:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
        : AbstractPainter()
90005344:	f8cb 718c 	str.w	r7, [fp, #396]	; 0x18c
90005348:	2900      	cmp	r1, #0
9000534a:	f001 804c 	beq.w	900063e6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11ce>
9000534e:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90005350:	b900      	cbnz	r0, 90005354 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
90005352:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90005354:	6802      	ldr	r2, [r0, #0]
90005356:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
90005358:	42a1      	cmp	r1, r4
9000535a:	f041 80b0 	bne.w	900064be <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12a6>
9000535e:	f04f 0900 	mov.w	r9, #0
90005362:	f50b 70d0 	add.w	r0, fp, #416	; 0x1a0
90005366:	f50b 7304 	add.w	r3, fp, #528	; 0x210
9000536a:	f8cb 518c 	str.w	r5, [fp, #396]	; 0x18c
9000536e:	f8cb 8194 	str.w	r8, [fp, #404]	; 0x194
90005372:	ee08 0a90 	vmov	s17, r0
90005376:	f8cb 9198 	str.w	r9, [fp, #408]	; 0x198
9000537a:	9319      	str	r3, [sp, #100]	; 0x64
9000537c:	f00d f904 	bl	90012588 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005380:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
90005382:	f8ab 9214 	strh.w	r9, [fp, #532]	; 0x214
90005386:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
9000538a:	f8cb 7210 	str.w	r7, [fp, #528]	; 0x210
9000538e:	2900      	cmp	r1, #0
90005390:	f001 8044 	beq.w	9000641c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1204>
90005394:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90005396:	b900      	cbnz	r0, 9000539a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
90005398:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000539a:	6802      	ldr	r2, [r0, #0]
9000539c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
9000539e:	42a1      	cmp	r1, r4
900053a0:	f041 80a4 	bne.w	900064ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12d4>
900053a4:	f04f 0900 	mov.w	r9, #0
900053a8:	f50b 7009 	add.w	r0, fp, #548	; 0x224
900053ac:	f50b 7325 	add.w	r3, fp, #660	; 0x294
900053b0:	f8cb 5210 	str.w	r5, [fp, #528]	; 0x210
900053b4:	f8cb 8218 	str.w	r8, [fp, #536]	; 0x218
900053b8:	ee09 0a10 	vmov	s18, r0
900053bc:	f8cb 921c 	str.w	r9, [fp, #540]	; 0x21c
900053c0:	931b      	str	r3, [sp, #108]	; 0x6c
900053c2:	f00d f8e1 	bl	90012588 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900053c6:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
900053c8:	f8ab 9298 	strh.w	r9, [fp, #664]	; 0x298
900053cc:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
900053d0:	f8cb 7294 	str.w	r7, [fp, #660]	; 0x294
900053d4:	2900      	cmp	r1, #0
900053d6:	f001 803c 	beq.w	90006452 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x123a>
900053da:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900053dc:	b900      	cbnz	r0, 900053e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
900053de:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900053e0:	6802      	ldr	r2, [r0, #0]
900053e2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
900053e4:	42a1      	cmp	r1, r4
900053e6:	f041 8076 	bne.w	900064d6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12be>
900053ea:	f50b 722a 	add.w	r2, fp, #680	; 0x2a8
          touchable(false),
900053ee:	f44f 7380 	mov.w	r3, #256	; 0x100
900053f2:	2600      	movs	r6, #0
        : T(), up(), down()
900053f4:	4fa4      	ldr	r7, [pc, #656]	; (90005688 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
        : Box(), borderColor(0), borderSize(0)
900053f6:	4ca5      	ldr	r4, [pc, #660]	; (9000568c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>)
        : pressed(false), alpha(255), action(0)
900053f8:	f44f 497f 	mov.w	r9, #65280	; 0xff00
900053fc:	f8cb 5294 	str.w	r5, [fp, #660]	; 0x294
90005400:	25ff      	movs	r5, #255	; 0xff
90005402:	f8cb 829c 	str.w	r8, [fp, #668]	; 0x29c
        touchable = touch;
90005406:	f240 1801 	movw	r8, #257	; 0x101
          touchable(false),
9000540a:	f8ab 3300 	strh.w	r3, [fp, #768]	; 0x300
9000540e:	4613      	mov	r3, r2
90005410:	ee09 2a90 	vmov	s19, r2
90005414:	f50b 7248 	add.w	r2, fp, #800	; 0x320
        T::add(borderBox);
90005418:	4618      	mov	r0, r3
9000541a:	f50b 7137 	add.w	r1, fp, #732	; 0x2dc
        touchable = touch;
9000541e:	f8ab 82cc 	strh.w	r8, [fp, #716]	; 0x2cc
        : T(), up(), down()
90005422:	f8cb 72a8 	str.w	r7, [fp, #680]	; 0x2a8
90005426:	f88b 5302 	strb.w	r5, [fp, #770]	; 0x302
9000542a:	f8cb 42dc 	str.w	r4, [fp, #732]	; 0x2dc
9000542e:	f8cb 62a0 	str.w	r6, [fp, #672]	; 0x2a0
          firstChild(0)
90005432:	f8cb 62d0 	str.w	r6, [fp, #720]	; 0x2d0
90005436:	f8cb 62d8 	str.w	r6, [fp, #728]	; 0x2d8
9000543a:	f8ab 630c 	strh.w	r6, [fp, #780]	; 0x30c
9000543e:	f8ab 92d4 	strh.w	r9, [fp, #724]	; 0x2d4
90005442:	e9cb 66ab 	strd	r6, r6, [fp, #684]	; 0x2ac
90005446:	e9cb 66ad 	strd	r6, r6, [fp, #692]	; 0x2b4
          nextSibling(0),
9000544a:	e9cb 66af 	strd	r6, r6, [fp, #700]	; 0x2bc
          cachedAbsX(0),
9000544e:	e9cb 66b1 	strd	r6, r6, [fp, #708]	; 0x2c4
          nextSibling(0),
90005452:	e9cb 66bc 	strd	r6, r6, [fp, #752]	; 0x2f0
          cachedAbsX(0),
90005456:	e9cb 66be 	strd	r6, r6, [fp, #760]	; 0x2f8
        : color(col)
9000545a:	e9cb 66c1 	strd	r6, r6, [fp, #772]	; 0x304
        : color(0)
9000545e:	e9cb 66c4 	strd	r6, r6, [fp, #784]	; 0x310
90005462:	e9cb 66c6 	strd	r6, r6, [fp, #792]	; 0x318
        rect.x = x;
90005466:	e9cb 66b8 	strd	r6, r6, [fp, #736]	; 0x2e0
9000546a:	e9cb 66ba 	strd	r6, r6, [fp, #744]	; 0x2e8
9000546e:	9200      	str	r2, [sp, #0]
        T::add(borderBox);
90005470:	f00b fc32 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005474:	f44f 7380 	mov.w	r3, #256	; 0x100
90005478:	f50b 7166 	add.w	r1, fp, #920	; 0x398
        touchable = touch;
9000547c:	f8ab 8344 	strh.w	r8, [fp, #836]	; 0x344
          touchable(false),
90005480:	f8ab 3378 	strh.w	r3, [fp, #888]	; 0x378
        : T(), up(), down()
90005484:	f8cb 7320 	str.w	r7, [fp, #800]	; 0x320
90005488:	f88b 537a 	strb.w	r5, [fp, #890]	; 0x37a
9000548c:	f8cb 4354 	str.w	r4, [fp, #852]	; 0x354
90005490:	9101      	str	r1, [sp, #4]
        T::add(borderBox);
90005492:	f50b 7155 	add.w	r1, fp, #852	; 0x354
90005496:	f8cb 6348 	str.w	r6, [fp, #840]	; 0x348
9000549a:	f8ab 934c 	strh.w	r9, [fp, #844]	; 0x34c
9000549e:	f8cb 6350 	str.w	r6, [fp, #848]	; 0x350
        : color(col)
900054a2:	f8cb 637c 	str.w	r6, [fp, #892]	; 0x37c
900054a6:	f8cb 6380 	str.w	r6, [fp, #896]	; 0x380
900054aa:	f8ab 6384 	strh.w	r6, [fp, #900]	; 0x384
        : x(0), y(0), width(0), height(0)
900054ae:	e9cb 66c9 	strd	r6, r6, [fp, #804]	; 0x324
900054b2:	e9cb 66cb 	strd	r6, r6, [fp, #812]	; 0x32c
          nextSibling(0),
900054b6:	e9cb 66cd 	strd	r6, r6, [fp, #820]	; 0x334
          cachedAbsX(0),
900054ba:	e9cb 66cf 	strd	r6, r6, [fp, #828]	; 0x33c
          nextSibling(0),
900054be:	e9cb 66da 	strd	r6, r6, [fp, #872]	; 0x368
          cachedAbsX(0),
900054c2:	e9cb 66dc 	strd	r6, r6, [fp, #880]	; 0x370
        : color(0)
900054c6:	e9cb 66e2 	strd	r6, r6, [fp, #904]	; 0x388
900054ca:	e9cb 66e4 	strd	r6, r6, [fp, #912]	; 0x390
        rect.x = x;
900054ce:	e9cb 66d6 	strd	r6, r6, [fp, #856]	; 0x358
900054d2:	e9cb 66d8 	strd	r6, r6, [fp, #864]	; 0x360
900054d6:	9800      	ldr	r0, [sp, #0]
900054d8:	f00b fbfe 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
900054dc:	f44f 7280 	mov.w	r2, #256	; 0x100
900054e0:	f50b 7173 	add.w	r1, fp, #972	; 0x3cc
        touchable = touch;
900054e4:	f8ab 83bc 	strh.w	r8, [fp, #956]	; 0x3bc
          touchable(false),
900054e8:	f8ab 23f0 	strh.w	r2, [fp, #1008]	; 0x3f0
900054ec:	f50b 6282 	add.w	r2, fp, #1040	; 0x410
        : T(), up(), down()
900054f0:	f8cb 7398 	str.w	r7, [fp, #920]	; 0x398
900054f4:	9202      	str	r2, [sp, #8]
900054f6:	f88b 53f2 	strb.w	r5, [fp, #1010]	; 0x3f2
900054fa:	f8cb 43cc 	str.w	r4, [fp, #972]	; 0x3cc
900054fe:	f8cb 63c0 	str.w	r6, [fp, #960]	; 0x3c0
90005502:	f8ab 93c4 	strh.w	r9, [fp, #964]	; 0x3c4
90005506:	f8cb 63c8 	str.w	r6, [fp, #968]	; 0x3c8
        : color(col)
9000550a:	f8cb 63f4 	str.w	r6, [fp, #1012]	; 0x3f4
9000550e:	f8cb 63f8 	str.w	r6, [fp, #1016]	; 0x3f8
90005512:	f8ab 63fc 	strh.w	r6, [fp, #1020]	; 0x3fc
        : color(0)
90005516:	f8cb 6400 	str.w	r6, [fp, #1024]	; 0x400
9000551a:	f8cb 6404 	str.w	r6, [fp, #1028]	; 0x404
9000551e:	f8cb 6408 	str.w	r6, [fp, #1032]	; 0x408
90005522:	f8cb 640c 	str.w	r6, [fp, #1036]	; 0x40c
        : x(0), y(0), width(0), height(0)
90005526:	e9cb 66e7 	strd	r6, r6, [fp, #924]	; 0x39c
9000552a:	e9cb 66e9 	strd	r6, r6, [fp, #932]	; 0x3a4
          nextSibling(0),
9000552e:	e9cb 66eb 	strd	r6, r6, [fp, #940]	; 0x3ac
          cachedAbsX(0),
90005532:	e9cb 66ed 	strd	r6, r6, [fp, #948]	; 0x3b4
          nextSibling(0),
90005536:	e9cb 66f8 	strd	r6, r6, [fp, #992]	; 0x3e0
          cachedAbsX(0),
9000553a:	e9cb 66fa 	strd	r6, r6, [fp, #1000]	; 0x3e8
        rect.x = x;
9000553e:	e9cb 66f4 	strd	r6, r6, [fp, #976]	; 0x3d0
90005542:	e9cb 66f6 	strd	r6, r6, [fp, #984]	; 0x3d8
        T::add(borderBox);
90005546:	9801      	ldr	r0, [sp, #4]
90005548:	f00b fbc6 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
9000554c:	f44f 7380 	mov.w	r3, #256	; 0x100
90005550:	f50b 6191 	add.w	r1, fp, #1160	; 0x488
        touchable = touch;
90005554:	f8ab 8434 	strh.w	r8, [fp, #1076]	; 0x434
          touchable(false),
90005558:	f8ab 3468 	strh.w	r3, [fp, #1128]	; 0x468
        : T(), up(), down()
9000555c:	f8cb 7410 	str.w	r7, [fp, #1040]	; 0x410
90005560:	f88b 546a 	strb.w	r5, [fp, #1130]	; 0x46a
90005564:	f8cb 4444 	str.w	r4, [fp, #1092]	; 0x444
90005568:	9103      	str	r1, [sp, #12]
        T::add(borderBox);
9000556a:	f20b 4144 	addw	r1, fp, #1092	; 0x444
9000556e:	f8cb 6414 	str.w	r6, [fp, #1044]	; 0x414
90005572:	f8cb 6418 	str.w	r6, [fp, #1048]	; 0x418
90005576:	f8cb 641c 	str.w	r6, [fp, #1052]	; 0x41c
9000557a:	f8cb 6420 	str.w	r6, [fp, #1056]	; 0x420
          parent(0),
9000557e:	f8cb 6424 	str.w	r6, [fp, #1060]	; 0x424
          nextSibling(0),
90005582:	f8cb 6428 	str.w	r6, [fp, #1064]	; 0x428
          nextDrawChainElement(0),
90005586:	f8cb 642c 	str.w	r6, [fp, #1068]	; 0x42c
          cachedAbsX(0),
9000558a:	f8cb 6430 	str.w	r6, [fp, #1072]	; 0x430
9000558e:	f8cb 6438 	str.w	r6, [fp, #1080]	; 0x438
90005592:	f8ab 943c 	strh.w	r9, [fp, #1084]	; 0x43c
90005596:	f8cb 6440 	str.w	r6, [fp, #1088]	; 0x440
          parent(0),
9000559a:	f8cb 6458 	str.w	r6, [fp, #1112]	; 0x458
          nextSibling(0),
9000559e:	f8cb 645c 	str.w	r6, [fp, #1116]	; 0x45c
          nextDrawChainElement(0),
900055a2:	f8cb 6460 	str.w	r6, [fp, #1120]	; 0x460
          cachedAbsX(0),
900055a6:	f8cb 6464 	str.w	r6, [fp, #1124]	; 0x464
        : color(col)
900055aa:	f8cb 646c 	str.w	r6, [fp, #1132]	; 0x46c
900055ae:	f8cb 6470 	str.w	r6, [fp, #1136]	; 0x470
900055b2:	f8ab 6474 	strh.w	r6, [fp, #1140]	; 0x474
        : color(0)
900055b6:	f8cb 6478 	str.w	r6, [fp, #1144]	; 0x478
900055ba:	f8cb 647c 	str.w	r6, [fp, #1148]	; 0x47c
900055be:	f8cb 6480 	str.w	r6, [fp, #1152]	; 0x480
900055c2:	f8cb 6484 	str.w	r6, [fp, #1156]	; 0x484
        rect.x = x;
900055c6:	f8cb 6448 	str.w	r6, [fp, #1096]	; 0x448
900055ca:	f8cb 644c 	str.w	r6, [fp, #1100]	; 0x44c
900055ce:	f8cb 6450 	str.w	r6, [fp, #1104]	; 0x450
900055d2:	f8cb 6454 	str.w	r6, [fp, #1108]	; 0x454
900055d6:	9802      	ldr	r0, [sp, #8]
900055d8:	f00b fb7e 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
900055dc:	f44f 7280 	mov.w	r2, #256	; 0x100
900055e0:	f50b 61a0 	add.w	r1, fp, #1280	; 0x500
        touchable = touch;
900055e4:	f8ab 84ac 	strh.w	r8, [fp, #1196]	; 0x4ac
          touchable(false),
900055e8:	f8ab 24e0 	strh.w	r2, [fp, #1248]	; 0x4e0
        : T(), up(), down()
900055ec:	f8cb 7488 	str.w	r7, [fp, #1160]	; 0x488
900055f0:	f88b 54e2 	strb.w	r5, [fp, #1250]	; 0x4e2
900055f4:	f8cb 44bc 	str.w	r4, [fp, #1212]	; 0x4bc
900055f8:	9104      	str	r1, [sp, #16]
        T::add(borderBox);
900055fa:	f20b 41bc 	addw	r1, fp, #1212	; 0x4bc
        : x(0), y(0), width(0), height(0)
900055fe:	f8cb 648c 	str.w	r6, [fp, #1164]	; 0x48c
90005602:	f8cb 6490 	str.w	r6, [fp, #1168]	; 0x490
90005606:	f8cb 6494 	str.w	r6, [fp, #1172]	; 0x494
9000560a:	f8cb 6498 	str.w	r6, [fp, #1176]	; 0x498
          parent(0),
9000560e:	f8cb 649c 	str.w	r6, [fp, #1180]	; 0x49c
          nextSibling(0),
90005612:	f8cb 64a0 	str.w	r6, [fp, #1184]	; 0x4a0
          nextDrawChainElement(0),
90005616:	f8cb 64a4 	str.w	r6, [fp, #1188]	; 0x4a4
          cachedAbsX(0),
9000561a:	f8cb 64a8 	str.w	r6, [fp, #1192]	; 0x4a8
9000561e:	f8cb 64b0 	str.w	r6, [fp, #1200]	; 0x4b0
90005622:	f8ab 94b4 	strh.w	r9, [fp, #1204]	; 0x4b4
90005626:	f8cb 64b8 	str.w	r6, [fp, #1208]	; 0x4b8
          parent(0),
9000562a:	f8cb 64d0 	str.w	r6, [fp, #1232]	; 0x4d0
          nextSibling(0),
9000562e:	f8cb 64d4 	str.w	r6, [fp, #1236]	; 0x4d4
          nextDrawChainElement(0),
90005632:	f8cb 64d8 	str.w	r6, [fp, #1240]	; 0x4d8
          cachedAbsX(0),
90005636:	f8cb 64dc 	str.w	r6, [fp, #1244]	; 0x4dc
        : color(col)
9000563a:	f8cb 64e4 	str.w	r6, [fp, #1252]	; 0x4e4
9000563e:	f8cb 64e8 	str.w	r6, [fp, #1256]	; 0x4e8
90005642:	f8ab 64ec 	strh.w	r6, [fp, #1260]	; 0x4ec
        : color(0)
90005646:	f8cb 64f0 	str.w	r6, [fp, #1264]	; 0x4f0
9000564a:	f8cb 64f4 	str.w	r6, [fp, #1268]	; 0x4f4
9000564e:	f8cb 64f8 	str.w	r6, [fp, #1272]	; 0x4f8
90005652:	f8cb 64fc 	str.w	r6, [fp, #1276]	; 0x4fc
        rect.x = x;
90005656:	f8cb 64c0 	str.w	r6, [fp, #1216]	; 0x4c0
9000565a:	f8cb 64c4 	str.w	r6, [fp, #1220]	; 0x4c4
9000565e:	f8cb 64c8 	str.w	r6, [fp, #1224]	; 0x4c8
90005662:	f8cb 64cc 	str.w	r6, [fp, #1228]	; 0x4cc
90005666:	9803      	ldr	r0, [sp, #12]
90005668:	f00b fb36 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
9000566c:	f44f 7380 	mov.w	r3, #256	; 0x100
90005670:	f50b 61af 	add.w	r1, fp, #1400	; 0x578
        touchable = touch;
90005674:	f8ab 8524 	strh.w	r8, [fp, #1316]	; 0x524
          touchable(false),
90005678:	f8ab 3558 	strh.w	r3, [fp, #1368]	; 0x558
9000567c:	e008      	b.n	90005690 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
9000567e:	bf00      	nop
90005680:	90002339 	.word	0x90002339
90005684:	9002b548 	.word	0x9002b548
90005688:	9002aef8 	.word	0x9002aef8
9000568c:	9002b8f0 	.word	0x9002b8f0
        : T(), up(), down()
90005690:	f8cb 7500 	str.w	r7, [fp, #1280]	; 0x500
90005694:	f88b 555a 	strb.w	r5, [fp, #1370]	; 0x55a
90005698:	f8cb 4534 	str.w	r4, [fp, #1332]	; 0x534
9000569c:	9105      	str	r1, [sp, #20]
        T::add(borderBox);
9000569e:	f20b 5134 	addw	r1, fp, #1332	; 0x534
        : x(0), y(0), width(0), height(0)
900056a2:	f8cb 6504 	str.w	r6, [fp, #1284]	; 0x504
900056a6:	f8cb 6508 	str.w	r6, [fp, #1288]	; 0x508
900056aa:	f8cb 650c 	str.w	r6, [fp, #1292]	; 0x50c
900056ae:	f8cb 6510 	str.w	r6, [fp, #1296]	; 0x510
          parent(0),
900056b2:	f8cb 6514 	str.w	r6, [fp, #1300]	; 0x514
          nextSibling(0),
900056b6:	f8cb 6518 	str.w	r6, [fp, #1304]	; 0x518
          nextDrawChainElement(0),
900056ba:	f8cb 651c 	str.w	r6, [fp, #1308]	; 0x51c
          cachedAbsX(0),
900056be:	f8cb 6520 	str.w	r6, [fp, #1312]	; 0x520
900056c2:	f8cb 6528 	str.w	r6, [fp, #1320]	; 0x528
900056c6:	f8ab 952c 	strh.w	r9, [fp, #1324]	; 0x52c
900056ca:	f8cb 6530 	str.w	r6, [fp, #1328]	; 0x530
          parent(0),
900056ce:	f8cb 6548 	str.w	r6, [fp, #1352]	; 0x548
          nextSibling(0),
900056d2:	f8cb 654c 	str.w	r6, [fp, #1356]	; 0x54c
          nextDrawChainElement(0),
900056d6:	f8cb 6550 	str.w	r6, [fp, #1360]	; 0x550
          cachedAbsX(0),
900056da:	f8cb 6554 	str.w	r6, [fp, #1364]	; 0x554
        : color(col)
900056de:	f8cb 655c 	str.w	r6, [fp, #1372]	; 0x55c
900056e2:	f8cb 6560 	str.w	r6, [fp, #1376]	; 0x560
900056e6:	f8ab 6564 	strh.w	r6, [fp, #1380]	; 0x564
        : color(0)
900056ea:	f8cb 6568 	str.w	r6, [fp, #1384]	; 0x568
900056ee:	f8cb 656c 	str.w	r6, [fp, #1388]	; 0x56c
900056f2:	f8cb 6570 	str.w	r6, [fp, #1392]	; 0x570
900056f6:	f8cb 6574 	str.w	r6, [fp, #1396]	; 0x574
        rect.x = x;
900056fa:	f8cb 6538 	str.w	r6, [fp, #1336]	; 0x538
900056fe:	f8cb 653c 	str.w	r6, [fp, #1340]	; 0x53c
90005702:	f8cb 6540 	str.w	r6, [fp, #1344]	; 0x540
90005706:	f8cb 6544 	str.w	r6, [fp, #1348]	; 0x544
9000570a:	9804      	ldr	r0, [sp, #16]
9000570c:	f00b fae4 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005710:	f44f 7280 	mov.w	r2, #256	; 0x100
90005714:	f50b 61be 	add.w	r1, fp, #1520	; 0x5f0
        touchable = touch;
90005718:	f8ab 859c 	strh.w	r8, [fp, #1436]	; 0x59c
          touchable(false),
9000571c:	f8ab 25d0 	strh.w	r2, [fp, #1488]	; 0x5d0
        : T(), up(), down()
90005720:	f8cb 7578 	str.w	r7, [fp, #1400]	; 0x578
90005724:	f88b 55d2 	strb.w	r5, [fp, #1490]	; 0x5d2
90005728:	f8cb 45ac 	str.w	r4, [fp, #1452]	; 0x5ac
9000572c:	9106      	str	r1, [sp, #24]
        T::add(borderBox);
9000572e:	f20b 51ac 	addw	r1, fp, #1452	; 0x5ac
        : x(0), y(0), width(0), height(0)
90005732:	f8cb 657c 	str.w	r6, [fp, #1404]	; 0x57c
90005736:	f8cb 6580 	str.w	r6, [fp, #1408]	; 0x580
9000573a:	f8cb 6584 	str.w	r6, [fp, #1412]	; 0x584
9000573e:	f8cb 6588 	str.w	r6, [fp, #1416]	; 0x588
          parent(0),
90005742:	f8cb 658c 	str.w	r6, [fp, #1420]	; 0x58c
          nextSibling(0),
90005746:	f8cb 6590 	str.w	r6, [fp, #1424]	; 0x590
          nextDrawChainElement(0),
9000574a:	f8cb 6594 	str.w	r6, [fp, #1428]	; 0x594
          cachedAbsX(0),
9000574e:	f8cb 6598 	str.w	r6, [fp, #1432]	; 0x598
90005752:	f8cb 65a0 	str.w	r6, [fp, #1440]	; 0x5a0
90005756:	f8ab 95a4 	strh.w	r9, [fp, #1444]	; 0x5a4
9000575a:	f8cb 65a8 	str.w	r6, [fp, #1448]	; 0x5a8
          parent(0),
9000575e:	f8cb 65c0 	str.w	r6, [fp, #1472]	; 0x5c0
          nextSibling(0),
90005762:	f8cb 65c4 	str.w	r6, [fp, #1476]	; 0x5c4
          nextDrawChainElement(0),
90005766:	f8cb 65c8 	str.w	r6, [fp, #1480]	; 0x5c8
          cachedAbsX(0),
9000576a:	f8cb 65cc 	str.w	r6, [fp, #1484]	; 0x5cc
        : color(col)
9000576e:	f8cb 65d4 	str.w	r6, [fp, #1492]	; 0x5d4
90005772:	f8cb 65d8 	str.w	r6, [fp, #1496]	; 0x5d8
90005776:	f8ab 65dc 	strh.w	r6, [fp, #1500]	; 0x5dc
        : color(0)
9000577a:	f8cb 65e0 	str.w	r6, [fp, #1504]	; 0x5e0
9000577e:	f8cb 65e4 	str.w	r6, [fp, #1508]	; 0x5e4
90005782:	f8cb 65e8 	str.w	r6, [fp, #1512]	; 0x5e8
90005786:	f8cb 65ec 	str.w	r6, [fp, #1516]	; 0x5ec
        rect.x = x;
9000578a:	f8cb 65b0 	str.w	r6, [fp, #1456]	; 0x5b0
9000578e:	f8cb 65b4 	str.w	r6, [fp, #1460]	; 0x5b4
90005792:	f8cb 65b8 	str.w	r6, [fp, #1464]	; 0x5b8
90005796:	f8cb 65bc 	str.w	r6, [fp, #1468]	; 0x5bc
9000579a:	9805      	ldr	r0, [sp, #20]
9000579c:	f00b fa9c 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
900057a0:	f44f 7380 	mov.w	r3, #256	; 0x100
900057a4:	f50b 61cd 	add.w	r1, fp, #1640	; 0x668
        touchable = touch;
900057a8:	f8ab 8614 	strh.w	r8, [fp, #1556]	; 0x614
          touchable(false),
900057ac:	f8ab 3648 	strh.w	r3, [fp, #1608]	; 0x648
        : T(), up(), down()
900057b0:	f8cb 75f0 	str.w	r7, [fp, #1520]	; 0x5f0
900057b4:	f88b 564a 	strb.w	r5, [fp, #1610]	; 0x64a
900057b8:	f8cb 4624 	str.w	r4, [fp, #1572]	; 0x624
900057bc:	9107      	str	r1, [sp, #28]
        T::add(borderBox);
900057be:	f20b 6124 	addw	r1, fp, #1572	; 0x624
        : x(0), y(0), width(0), height(0)
900057c2:	f8cb 65f4 	str.w	r6, [fp, #1524]	; 0x5f4
900057c6:	f8cb 65f8 	str.w	r6, [fp, #1528]	; 0x5f8
900057ca:	f8cb 65fc 	str.w	r6, [fp, #1532]	; 0x5fc
900057ce:	f8cb 6600 	str.w	r6, [fp, #1536]	; 0x600
          parent(0),
900057d2:	f8cb 6604 	str.w	r6, [fp, #1540]	; 0x604
          nextSibling(0),
900057d6:	f8cb 6608 	str.w	r6, [fp, #1544]	; 0x608
          nextDrawChainElement(0),
900057da:	f8cb 660c 	str.w	r6, [fp, #1548]	; 0x60c
          cachedAbsX(0),
900057de:	f8cb 6610 	str.w	r6, [fp, #1552]	; 0x610
900057e2:	f8cb 6618 	str.w	r6, [fp, #1560]	; 0x618
900057e6:	f8ab 961c 	strh.w	r9, [fp, #1564]	; 0x61c
900057ea:	f8cb 6620 	str.w	r6, [fp, #1568]	; 0x620
          parent(0),
900057ee:	f8cb 6638 	str.w	r6, [fp, #1592]	; 0x638
          nextSibling(0),
900057f2:	f8cb 663c 	str.w	r6, [fp, #1596]	; 0x63c
          nextDrawChainElement(0),
900057f6:	f8cb 6640 	str.w	r6, [fp, #1600]	; 0x640
          cachedAbsX(0),
900057fa:	f8cb 6644 	str.w	r6, [fp, #1604]	; 0x644
        : color(col)
900057fe:	f8cb 664c 	str.w	r6, [fp, #1612]	; 0x64c
90005802:	f8cb 6650 	str.w	r6, [fp, #1616]	; 0x650
90005806:	f8ab 6654 	strh.w	r6, [fp, #1620]	; 0x654
        : color(0)
9000580a:	f8cb 6658 	str.w	r6, [fp, #1624]	; 0x658
9000580e:	f8cb 665c 	str.w	r6, [fp, #1628]	; 0x65c
90005812:	f8cb 6660 	str.w	r6, [fp, #1632]	; 0x660
90005816:	f8cb 6664 	str.w	r6, [fp, #1636]	; 0x664
        rect.x = x;
9000581a:	f8cb 6628 	str.w	r6, [fp, #1576]	; 0x628
9000581e:	f8cb 662c 	str.w	r6, [fp, #1580]	; 0x62c
90005822:	f8cb 6630 	str.w	r6, [fp, #1584]	; 0x630
90005826:	f8cb 6634 	str.w	r6, [fp, #1588]	; 0x634
9000582a:	9806      	ldr	r0, [sp, #24]
9000582c:	f00b fa54 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005830:	f44f 7280 	mov.w	r2, #256	; 0x100
90005834:	f88b 56c2 	strb.w	r5, [fp, #1730]	; 0x6c2
90005838:	f50b 65dc 	add.w	r5, fp, #1760	; 0x6e0
9000583c:	f8ab 26c0 	strh.w	r2, [fp, #1728]	; 0x6c0
90005840:	f20b 619c 	addw	r1, fp, #1692	; 0x69c
90005844:	9807      	ldr	r0, [sp, #28]
        touchable = touch;
90005846:	f8ab 868c 	strh.w	r8, [fp, #1676]	; 0x68c
        : T(), up(), down()
9000584a:	f8cb 7668 	str.w	r7, [fp, #1640]	; 0x668
9000584e:	f20b 770c 	addw	r7, fp, #1804	; 0x70c
90005852:	f8cb 469c 	str.w	r4, [fp, #1692]	; 0x69c
90005856:	f64f 74ff 	movw	r4, #65535	; 0xffff
9000585a:	f8ab 9694 	strh.w	r9, [fp, #1684]	; 0x694
        : x(0), y(0), width(0), height(0)
9000585e:	f8cb 666c 	str.w	r6, [fp, #1644]	; 0x66c
90005862:	f8cb 6670 	str.w	r6, [fp, #1648]	; 0x670
90005866:	f8cb 6674 	str.w	r6, [fp, #1652]	; 0x674
9000586a:	f8cb 6678 	str.w	r6, [fp, #1656]	; 0x678
          parent(0),
9000586e:	f8cb 667c 	str.w	r6, [fp, #1660]	; 0x67c
          nextSibling(0),
90005872:	f8cb 6680 	str.w	r6, [fp, #1664]	; 0x680
          nextDrawChainElement(0),
90005876:	f8cb 6684 	str.w	r6, [fp, #1668]	; 0x684
          cachedAbsX(0),
9000587a:	f8cb 6688 	str.w	r6, [fp, #1672]	; 0x688
9000587e:	f8cb 6690 	str.w	r6, [fp, #1680]	; 0x690
90005882:	f8cb 6698 	str.w	r6, [fp, #1688]	; 0x698
          parent(0),
90005886:	f8cb 66b0 	str.w	r6, [fp, #1712]	; 0x6b0
          nextSibling(0),
9000588a:	f8cb 66b4 	str.w	r6, [fp, #1716]	; 0x6b4
          nextDrawChainElement(0),
9000588e:	f8cb 66b8 	str.w	r6, [fp, #1720]	; 0x6b8
          cachedAbsX(0),
90005892:	f8cb 66bc 	str.w	r6, [fp, #1724]	; 0x6bc
        : color(col)
90005896:	f8cb 66c4 	str.w	r6, [fp, #1732]	; 0x6c4
9000589a:	f8cb 66c8 	str.w	r6, [fp, #1736]	; 0x6c8
9000589e:	f8ab 66cc 	strh.w	r6, [fp, #1740]	; 0x6cc
        : color(0)
900058a2:	f8cb 66d0 	str.w	r6, [fp, #1744]	; 0x6d0
900058a6:	f8cb 66d4 	str.w	r6, [fp, #1748]	; 0x6d4
900058aa:	f8cb 66d8 	str.w	r6, [fp, #1752]	; 0x6d8
900058ae:	f8cb 66dc 	str.w	r6, [fp, #1756]	; 0x6dc
        rect.x = x;
900058b2:	f8cb 66a0 	str.w	r6, [fp, #1696]	; 0x6a0
900058b6:	f8cb 66a4 	str.w	r6, [fp, #1700]	; 0x6a4
900058ba:	f8cb 66a8 	str.w	r6, [fp, #1704]	; 0x6a8
900058be:	f8cb 66ac 	str.w	r6, [fp, #1708]	; 0x6ac
        T::add(borderBox);
900058c2:	f00b fa09 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900058c6:	a91d      	add	r1, sp, #116	; 0x74
900058c8:	4628      	mov	r0, r5
900058ca:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058ce:	f00d f887 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058d2:	f50b 63e7 	add.w	r3, fp, #1848	; 0x738
900058d6:	a91d      	add	r1, sp, #116	; 0x74
900058d8:	4638      	mov	r0, r7
900058da:	9308      	str	r3, [sp, #32]
900058dc:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058e0:	f00d f87e 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058e4:	f20b 7264 	addw	r2, fp, #1892	; 0x764
900058e8:	a91d      	add	r1, sp, #116	; 0x74
900058ea:	9808      	ldr	r0, [sp, #32]
900058ec:	9209      	str	r2, [sp, #36]	; 0x24
900058ee:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058f2:	f00d f875 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058f6:	f50b 63f2 	add.w	r3, fp, #1936	; 0x790
900058fa:	a91d      	add	r1, sp, #116	; 0x74
900058fc:	9809      	ldr	r0, [sp, #36]	; 0x24
900058fe:	930a      	str	r3, [sp, #40]	; 0x28
90005900:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005904:	f00d f86c 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005908:	f20b 72bc 	addw	r2, fp, #1980	; 0x7bc
9000590c:	a91d      	add	r1, sp, #116	; 0x74
9000590e:	980a      	ldr	r0, [sp, #40]	; 0x28
90005910:	920b      	str	r2, [sp, #44]	; 0x2c
90005912:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005916:	f00d f863 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000591a:	f50b 63fd 	add.w	r3, fp, #2024	; 0x7e8
9000591e:	a91d      	add	r1, sp, #116	; 0x74
90005920:	980b      	ldr	r0, [sp, #44]	; 0x2c
90005922:	930c      	str	r3, [sp, #48]	; 0x30
90005924:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005928:	f00d f85a 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000592c:	f60b 0214 	addw	r2, fp, #2068	; 0x814
90005930:	a91d      	add	r1, sp, #116	; 0x74
90005932:	980c      	ldr	r0, [sp, #48]	; 0x30
90005934:	920d      	str	r2, [sp, #52]	; 0x34
90005936:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000593a:	f00d f851 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000593e:	f50b 6304 	add.w	r3, fp, #2112	; 0x840
90005942:	a91d      	add	r1, sp, #116	; 0x74
90005944:	980d      	ldr	r0, [sp, #52]	; 0x34
90005946:	930e      	str	r3, [sp, #56]	; 0x38
90005948:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000594c:	f00d f848 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005950:	f60b 026c 	addw	r2, fp, #2156	; 0x86c
90005954:	a91d      	add	r1, sp, #116	; 0x74
90005956:	980e      	ldr	r0, [sp, #56]	; 0x38
90005958:	920f      	str	r2, [sp, #60]	; 0x3c
9000595a:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000595e:	f00d f83f 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005962:	f60b 0398 	addw	r3, fp, #2200	; 0x898
90005966:	a91d      	add	r1, sp, #116	; 0x74
90005968:	980f      	ldr	r0, [sp, #60]	; 0x3c
9000596a:	9310      	str	r3, [sp, #64]	; 0x40
9000596c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005970:	f00d f836 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005974:	f60b 02c4 	addw	r2, fp, #2244	; 0x8c4
90005978:	a91d      	add	r1, sp, #116	; 0x74
9000597a:	9810      	ldr	r0, [sp, #64]	; 0x40
9000597c:	9211      	str	r2, [sp, #68]	; 0x44
9000597e:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005982:	f00d f82d 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005986:	f50b 630f 	add.w	r3, fp, #2288	; 0x8f0
9000598a:	a91d      	add	r1, sp, #116	; 0x74
9000598c:	9811      	ldr	r0, [sp, #68]	; 0x44
9000598e:	9312      	str	r3, [sp, #72]	; 0x48
90005990:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005994:	f00d f824 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005998:	f60b 121c 	addw	r2, fp, #2332	; 0x91c
9000599c:	a91d      	add	r1, sp, #116	; 0x74
9000599e:	9812      	ldr	r0, [sp, #72]	; 0x48
900059a0:	9213      	str	r2, [sp, #76]	; 0x4c
900059a2:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059a6:	f00d f81b 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059aa:	f60b 1348 	addw	r3, fp, #2376	; 0x948
900059ae:	a91d      	add	r1, sp, #116	; 0x74
900059b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
900059b2:	9314      	str	r3, [sp, #80]	; 0x50
900059b4:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059b8:	f00d f812 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059bc:	f60b 1274 	addw	r2, fp, #2420	; 0x974
900059c0:	a91d      	add	r1, sp, #116	; 0x74
900059c2:	9814      	ldr	r0, [sp, #80]	; 0x50
900059c4:	9215      	str	r2, [sp, #84]	; 0x54
900059c6:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059ca:	f00d f809 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059ce:	f50b 631a 	add.w	r3, fp, #2464	; 0x9a0
900059d2:	a91d      	add	r1, sp, #116	; 0x74
900059d4:	9815      	ldr	r0, [sp, #84]	; 0x54
900059d6:	9316      	str	r3, [sp, #88]	; 0x58
900059d8:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059dc:	f00d f800 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059e0:	f60b 12cc 	addw	r2, fp, #2508	; 0x9cc
900059e4:	a91d      	add	r1, sp, #116	; 0x74
900059e6:	9816      	ldr	r0, [sp, #88]	; 0x58
900059e8:	9217      	str	r2, [sp, #92]	; 0x5c
900059ea:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059ee:	f00c fff7 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059f2:	a91d      	add	r1, sp, #116	; 0x74
900059f4:	9817      	ldr	r0, [sp, #92]	; 0x5c
900059f6:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900059fa:	f00c fff1 	bl	900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
900059fe:	f50b 5100 	add.w	r1, fp, #8192	; 0x2000
90005a02:	48e3      	ldr	r0, [pc, #908]	; (90005d90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
90005a04:	f8df 83cc 	ldr.w	r8, [pc, #972]	; 90005dd4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>
90005a08:	f10b 0404 	add.w	r4, fp, #4
90005a0c:	f8c1 0618 	str.w	r0, [r1, #1560]	; 0x618
90005a10:	48e0      	ldr	r0, [pc, #896]	; (90005d94 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
90005a12:	f8c1 b61c 	str.w	fp, [r1, #1564]	; 0x61c
90005a16:	f8c1 0620 	str.w	r0, [r1, #1568]	; 0x620
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005a1a:	f60b 10f8 	addw	r0, fp, #2552	; 0x9f8
90005a1e:	f8c1 6624 	str.w	r6, [r1, #1572]	; 0x624
90005a22:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005a26:	f00e fff9 	bl	90014a1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        color = newColor;
90005a2a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
90005a2e:	4620      	mov	r0, r4
90005a30:	f8cb 6044 	str.w	r6, [fp, #68]	; 0x44
90005a34:	f8cb 1068 	str.w	r1, [fp, #104]	; 0x68
90005a38:	f10b 0140 	add.w	r1, fp, #64	; 0x40
90005a3c:	f8cb 8048 	str.w	r8, [fp, #72]	; 0x48
90005a40:	f00b f94a 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a44:	2104      	movs	r1, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005a46:	ee1a 0a10 	vmov	r0, s20
90005a4a:	f8ad 1074 	strh.w	r1, [sp, #116]	; 0x74
90005a4e:	a91d      	add	r1, sp, #116	; 0x74
90005a50:	f00e f801 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005a54:	4631      	mov	r1, r6
90005a56:	ee1a 0a10 	vmov	r0, s20
90005a5a:	e9cb 681c 	strd	r6, r8, [fp, #112]	; 0x70
90005a5e:	f00c ff7a 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005a62:	ee1a 1a10 	vmov	r1, s20
90005a66:	4620      	mov	r0, r4
90005a68:	f00b f936 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a6c:	f04f 31ff 	mov.w	r1, #4294967295
        canvasPainter = &painter;
90005a70:	9b18      	ldr	r3, [sp, #96]	; 0x60
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005a72:	22a0      	movs	r2, #160	; 0xa0
90005a74:	f8df c360 	ldr.w	ip, [pc, #864]	; 90005dd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>
90005a78:	4650      	mov	r0, sl
90005a7a:	f8cb 1114 	str.w	r1, [fp, #276]	; 0x114
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005a7e:	f8ab 1118 	strh.w	r1, [fp, #280]	; 0x118
90005a82:	49c5      	ldr	r1, [pc, #788]	; (90005d98 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
90005a84:	f8cb 30c0 	str.w	r3, [fp, #192]	; 0xc0
90005a88:	e9cb c127 	strd	ip, r1, [fp, #156]	; 0x9c
90005a8c:	4611      	mov	r1, r2
90005a8e:	f00c fe91 	bl	900127b4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005a92:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005a96:	21a0      	movs	r1, #160	; 0xa0
90005a98:	4650      	mov	r0, sl
90005a9a:	f00c fe96 	bl	900127ca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005a9e:	f8db 20d4 	ldr.w	r2, [fp, #212]	; 0xd4
90005aa2:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005aa6:	d006      	beq.n	90005ab6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x89e>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005aa8:	f44f 72a0 	mov.w	r2, #320	; 0x140

        updateCachedShape();
90005aac:	4650      	mov	r0, sl
        lineWidthQ5 = widthQ5;
90005aae:	f8cb 20d4 	str.w	r2, [fp, #212]	; 0xd4
        updateCachedShape();
90005ab2:	f00c fd89 	bl	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005ab6:	2101      	movs	r1, #1
90005ab8:	4650      	mov	r0, sl
90005aba:	f00c fe91 	bl	900127e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005abe:	4651      	mov	r1, sl
90005ac0:	4620      	mov	r0, r4
90005ac2:	4eb6      	ldr	r6, [pc, #728]	; (90005d9c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
90005ac4:	f00b f908 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ac8:	f04f 31ff 	mov.w	r1, #4294967295
90005acc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005ace:	22a0      	movs	r2, #160	; 0xa0
90005ad0:	f8cb 1198 	str.w	r1, [fp, #408]	; 0x198
90005ad4:	ee18 0a10 	vmov	r0, s16
90005ad8:	f8ab 119c 	strh.w	r1, [fp, #412]	; 0x19c
90005adc:	49ae      	ldr	r1, [pc, #696]	; (90005d98 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
90005ade:	f8cb 3144 	str.w	r3, [fp, #324]	; 0x144
90005ae2:	e9cb 6148 	strd	r6, r1, [fp, #288]	; 0x120
90005ae6:	4611      	mov	r1, r2
90005ae8:	f00c fe64 	bl	900127b4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005aec:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005af0:	21a0      	movs	r1, #160	; 0xa0
90005af2:	ee18 0a10 	vmov	r0, s16
90005af6:	f00c fe68 	bl	900127ca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005afa:	f8db 2158 	ldr.w	r2, [fp, #344]	; 0x158
90005afe:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005b02:	d007      	beq.n	90005b14 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x8fc>
        lineWidthQ5 = widthQ5;
90005b04:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
90005b08:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90005b0c:	f8cb 2158 	str.w	r2, [fp, #344]	; 0x158
        updateCachedShape();
90005b10:	f00c fd5a 	bl	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005b14:	2101      	movs	r1, #1
90005b16:	ee18 0a10 	vmov	r0, s16
90005b1a:	f00c fe61 	bl	900127e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005b1e:	ee18 1a10 	vmov	r1, s16
90005b22:	4620      	mov	r0, r4
90005b24:	f00b f8d8 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b28:	f04f 31ff 	mov.w	r1, #4294967295
90005b2c:	9b19      	ldr	r3, [sp, #100]	; 0x64
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005b2e:	22a0      	movs	r2, #160	; 0xa0
90005b30:	489b      	ldr	r0, [pc, #620]	; (90005da0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
90005b32:	f8cb 121c 	str.w	r1, [fp, #540]	; 0x21c
90005b36:	f8ab 1220 	strh.w	r1, [fp, #544]	; 0x220
90005b3a:	499a      	ldr	r1, [pc, #616]	; (90005da4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90005b3c:	f8cb 31c8 	str.w	r3, [fp, #456]	; 0x1c8
90005b40:	e9cb 0169 	strd	r0, r1, [fp, #420]	; 0x1a4
90005b44:	4611      	mov	r1, r2
90005b46:	ee18 0a90 	vmov	r0, s17
90005b4a:	f00c fe33 	bl	900127b4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005b4e:	22a0      	movs	r2, #160	; 0xa0
90005b50:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005b54:	ee18 0a90 	vmov	r0, s17
90005b58:	f00c fe37 	bl	900127ca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005b5c:	f8db 21dc 	ldr.w	r2, [fp, #476]	; 0x1dc
90005b60:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005b64:	d007      	beq.n	90005b76 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x95e>
        lineWidthQ5 = widthQ5;
90005b66:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
90005b6a:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90005b6e:	f8cb 21dc 	str.w	r2, [fp, #476]	; 0x1dc
        updateCachedShape();
90005b72:	f00c fd29 	bl	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005b76:	2101      	movs	r1, #1
90005b78:	ee18 0a90 	vmov	r0, s17
90005b7c:	f00c fe30 	bl	900127e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005b80:	ee18 1a90 	vmov	r1, s17
90005b84:	4620      	mov	r0, r4
90005b86:	f00b f8a7 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90005b8c:	f04f 31ff 	mov.w	r1, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005b90:	22a0      	movs	r2, #160	; 0xa0
90005b92:	f8cb 324c 	str.w	r3, [fp, #588]	; 0x24c
90005b96:	ee19 0a10 	vmov	r0, s18
90005b9a:	4b83      	ldr	r3, [pc, #524]	; (90005da8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
90005b9c:	f8cb 12a0 	str.w	r1, [fp, #672]	; 0x2a0
90005ba0:	f8ab 12a4 	strh.w	r1, [fp, #676]	; 0x2a4
90005ba4:	4981      	ldr	r1, [pc, #516]	; (90005dac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
90005ba6:	e9cb 318a 	strd	r3, r1, [fp, #552]	; 0x228
90005baa:	4611      	mov	r1, r2
90005bac:	f00c fe02 	bl	900127b4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005bb0:	22a0      	movs	r2, #160	; 0xa0
90005bb2:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005bb6:	ee19 0a10 	vmov	r0, s18
90005bba:	f00c fe06 	bl	900127ca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005bbe:	f8db 2260 	ldr.w	r2, [fp, #608]	; 0x260
90005bc2:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005bc6:	d007      	beq.n	90005bd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c0>
        lineWidthQ5 = widthQ5;
90005bc8:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
90005bcc:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90005bd0:	f8cb 2260 	str.w	r2, [fp, #608]	; 0x260
        updateCachedShape();
90005bd4:	f00c fcf8 	bl	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005bd8:	2101      	movs	r1, #1
90005bda:	ee19 0a10 	vmov	r0, s18
90005bde:	f00c fdff 	bl	900127e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005be2:	ee19 1a10 	vmov	r1, s18
90005be6:	4620      	mov	r0, r4
90005be8:	f04f 0a00 	mov.w	sl, #0
90005bec:	f00b f874 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bf0:	4a6f      	ldr	r2, [pc, #444]	; (90005db0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
        borderUp = borderColorReleased;
90005bf2:	4870      	ldr	r0, [pc, #448]	; (90005db4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
        down = colorPressed;
90005bf4:	4970      	ldr	r1, [pc, #448]	; (90005db8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
        borderUp = borderColorReleased;
90005bf6:	f8cb 0318 	str.w	r0, [fp, #792]	; 0x318
        borderDown = borderColorPressed;
90005bfa:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005bfe:	f89b 62d4 	ldrb.w	r6, [fp, #724]	; 0x2d4
        borderDown = borderColorPressed;
90005c02:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005c06:	e9cb a2b8 	strd	sl, r2, [fp, #736]	; 0x2e0
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005c0a:	2205      	movs	r2, #5
90005c0c:	f8cb 031c 	str.w	r0, [fp, #796]	; 0x31c
        handlePressedUpdated();
90005c10:	f8db 02a8 	ldr.w	r0, [fp, #680]	; 0x2a8
90005c14:	f8ab 230c 	strh.w	r2, [fp, #780]	; 0x30c
        down = colorPressed;
90005c18:	4a68      	ldr	r2, [pc, #416]	; (90005dbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005c1a:	e9cb 21c4 	strd	r2, r1, [fp, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90005c1e:	2e00      	cmp	r6, #0
90005c20:	f000 8449 	beq.w	900064b6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x129e>
90005c24:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c26:	f50b 7147 	add.w	r1, fp, #796	; 0x31c
90005c2a:	f8cb 2304 	str.w	r2, [fp, #772]	; 0x304
90005c2e:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005c30:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 90005ddc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>
90005c34:	f8cb 2308 	str.w	r2, [fp, #776]	; 0x308
        alpha = newAlpha;
90005c38:	2200      	movs	r2, #0
90005c3a:	f88b 22d5 	strb.w	r2, [fp, #725]	; 0x2d5
        handleAlphaUpdated();
90005c3e:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005c42:	4541      	cmp	r1, r8
90005c44:	f040 846e 	bne.w	90006524 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x130c>
        alpha = newAlpha;
90005c48:	f88b 2302 	strb.w	r2, [fp, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90005c4c:	f242 6618 	movw	r6, #9752	; 0x2618
90005c50:	4a57      	ldr	r2, [pc, #348]	; (90005db0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005c52:	f8df e18c 	ldr.w	lr, [pc, #396]	; 90005de0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90005c56:	ee19 1a90 	vmov	r1, s19
90005c5a:	445e      	add	r6, fp
90005c5c:	4620      	mov	r0, r4
90005c5e:	f04f 0900 	mov.w	r9, #0
        action = &callback;
90005c62:	f8cb 62d8 	str.w	r6, [fp, #728]	; 0x2d8
90005c66:	e9cb e2ab 	strd	lr, r2, [fp, #684]	; 0x2ac
90005c6a:	f00b f835 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c6e:	4a54      	ldr	r2, [pc, #336]	; (90005dc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
        borderUp = borderColorReleased;
90005c70:	4850      	ldr	r0, [pc, #320]	; (90005db4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
        down = colorPressed;
90005c72:	4951      	ldr	r1, [pc, #324]	; (90005db8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
        borderUp = borderColorReleased;
90005c74:	f8cb 0390 	str.w	r0, [fp, #912]	; 0x390
        borderDown = borderColorPressed;
90005c78:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005c7c:	f89b 334c 	ldrb.w	r3, [fp, #844]	; 0x34c
        borderDown = borderColorPressed;
90005c80:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005c84:	e9cb 92d6 	strd	r9, r2, [fp, #856]	; 0x358
        borderSize = size;
90005c88:	2205      	movs	r2, #5
90005c8a:	f8cb 0394 	str.w	r0, [fp, #916]	; 0x394
        handlePressedUpdated();
90005c8e:	f8db 0320 	ldr.w	r0, [fp, #800]	; 0x320
90005c92:	f8ab 2384 	strh.w	r2, [fp, #900]	; 0x384
        down = colorPressed;
90005c96:	4a49      	ldr	r2, [pc, #292]	; (90005dbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005c98:	e9cb 21e2 	strd	r2, r1, [fp, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90005c9c:	2b00      	cmp	r3, #0
90005c9e:	f000 8406 	beq.w	900064ae <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1296>
        color = newColor;
90005ca2:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005ca4:	f50b 7165 	add.w	r1, fp, #916	; 0x394
90005ca8:	f8cb 237c 	str.w	r2, [fp, #892]	; 0x37c
90005cac:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005cae:	f8cb 2380 	str.w	r2, [fp, #896]	; 0x380
        alpha = newAlpha;
90005cb2:	2200      	movs	r2, #0
90005cb4:	f88b 234d 	strb.w	r2, [fp, #845]	; 0x34d
        handleAlphaUpdated();
90005cb8:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005cbc:	4541      	cmp	r1, r8
90005cbe:	f040 842d 	bne.w	9000651c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1304>
        alpha = newAlpha;
90005cc2:	f88b 237a 	strb.w	r2, [fp, #890]	; 0x37a
90005cc6:	4a3e      	ldr	r2, [pc, #248]	; (90005dc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90005cc8:	483e      	ldr	r0, [pc, #248]	; (90005dc4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90005cca:	9900      	ldr	r1, [sp, #0]
        action = &callback;
90005ccc:	f8cb 6350 	str.w	r6, [fp, #848]	; 0x350
90005cd0:	e9cb 02c9 	strd	r0, r2, [fp, #804]	; 0x324
90005cd4:	4620      	mov	r0, r4
90005cd6:	f00a ffff 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cda:	4a3b      	ldr	r2, [pc, #236]	; (90005dc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
        borderUp = borderColorReleased;
90005cdc:	4835      	ldr	r0, [pc, #212]	; (90005db4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005cde:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90005ce2:	4935      	ldr	r1, [pc, #212]	; (90005db8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
        borderUp = borderColorReleased;
90005ce4:	f8cb 0408 	str.w	r0, [fp, #1032]	; 0x408
        borderDown = borderColorPressed;
90005ce8:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005cec:	f89b 33c4 	ldrb.w	r3, [fp, #964]	; 0x3c4
        borderDown = borderColorPressed;
90005cf0:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005cf4:	f8cb 1404 	str.w	r1, [fp, #1028]	; 0x404
90005cf8:	e9cb c2f4 	strd	ip, r2, [fp, #976]	; 0x3d0
        borderSize = size;
90005cfc:	2205      	movs	r2, #5
        borderDown = borderColorPressed;
90005cfe:	f8cb 040c 	str.w	r0, [fp, #1036]	; 0x40c
        handlePressedUpdated();
90005d02:	f8db 0398 	ldr.w	r0, [fp, #920]	; 0x398
90005d06:	f8ab 23fc 	strh.w	r2, [fp, #1020]	; 0x3fc
        up = colorReleased;
90005d0a:	4a2c      	ldr	r2, [pc, #176]	; (90005dbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005d0c:	f8cb 2400 	str.w	r2, [fp, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90005d10:	2b00      	cmp	r3, #0
90005d12:	f000 83c9 	beq.w	900064a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1290>
        color = newColor;
90005d16:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005d18:	f20b 410c 	addw	r1, fp, #1036	; 0x40c
90005d1c:	f8cb 23f4 	str.w	r2, [fp, #1012]	; 0x3f4
90005d20:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005d22:	f8cb 23f8 	str.w	r2, [fp, #1016]	; 0x3f8
        alpha = newAlpha;
90005d26:	2200      	movs	r2, #0
90005d28:	f88b 23c5 	strb.w	r2, [fp, #965]	; 0x3c5
        handleAlphaUpdated();
90005d2c:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005d30:	4541      	cmp	r1, r8
90005d32:	f040 83f0 	bne.w	90006516 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12fe>
        alpha = newAlpha;
90005d36:	f88b 23f2 	strb.w	r2, [fp, #1010]	; 0x3f2
90005d3a:	4b24      	ldr	r3, [pc, #144]	; (90005dcc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90005d3c:	4620      	mov	r0, r4
90005d3e:	4a22      	ldr	r2, [pc, #136]	; (90005dc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90005d40:	9901      	ldr	r1, [sp, #4]
        action = &callback;
90005d42:	f8cb 63c8 	str.w	r6, [fp, #968]	; 0x3c8
90005d46:	e9cb 32e7 	strd	r3, r2, [fp, #924]	; 0x39c
90005d4a:	f00a ffc5 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d4e:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005d50:	4818      	ldr	r0, [pc, #96]	; (90005db4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005d52:	f8cb 2448 	str.w	r2, [fp, #1096]	; 0x448
90005d56:	4a1e      	ldr	r2, [pc, #120]	; (90005dd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
90005d58:	f8cb 0480 	str.w	r0, [fp, #1152]	; 0x480
        borderDown = borderColorPressed;
90005d5c:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005d60:	f8cb 244c 	str.w	r2, [fp, #1100]	; 0x44c
        borderSize = size;
90005d64:	2205      	movs	r2, #5
90005d66:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005d6a:	4913      	ldr	r1, [pc, #76]	; (90005db8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005d6c:	f8ab 2474 	strh.w	r2, [fp, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90005d70:	f89b 343c 	ldrb.w	r3, [fp, #1084]	; 0x43c
        up = colorReleased;
90005d74:	4a11      	ldr	r2, [pc, #68]	; (90005dbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
        borderDown = borderColorPressed;
90005d76:	f8cb 0484 	str.w	r0, [fp, #1156]	; 0x484
        up = colorReleased;
90005d7a:	f8cb 2478 	str.w	r2, [fp, #1144]	; 0x478
        handlePressedUpdated();
90005d7e:	f8db 0410 	ldr.w	r0, [fp, #1040]	; 0x410
        down = colorPressed;
90005d82:	f8cb 147c 	str.w	r1, [fp, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90005d86:	2b00      	cmp	r3, #0
90005d88:	f000 838b 	beq.w	900064a2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x128a>
90005d8c:	e02a      	b.n	90005de4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
90005d8e:	bf00      	nop
90005d90:	9002af94 	.word	0x9002af94
90005d94:	90004fc9 	.word	0x90004fc9
90005d98:	0102000f 	.word	0x0102000f
90005d9c:	00070123 	.word	0x00070123
90005da0:	004e0038 	.word	0x004e0038
90005da4:	000f0167 	.word	0x000f0167
90005da8:	00b90038 	.word	0x00b90038
90005dac:	000f0166 	.word	0x000f0166
90005db0:	00470064 	.word	0x00470064
90005db4:	ff003366 	.word	0xff003366
90005db8:	ff0099cc 	.word	0xff0099cc
90005dbc:	ff006699 	.word	0xff006699
90005dc0:	00610064 	.word	0x00610064
90005dc4:	00580038 	.word	0x00580038
90005dc8:	00610070 	.word	0x00610070
90005dcc:	0058012e 	.word	0x0058012e
90005dd0:	0061007c 	.word	0x0061007c
90005dd4:	011001e0 	.word	0x011001e0
90005dd8:	0007009c 	.word	0x0007009c
90005ddc:	90004f65 	.word	0x90004f65
90005de0:	00070038 	.word	0x00070038
        color = newColor;
90005de4:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005de6:	f20b 4184 	addw	r1, fp, #1156	; 0x484
90005dea:	f8cb 246c 	str.w	r2, [fp, #1132]	; 0x46c
90005dee:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005df0:	f8cb 2470 	str.w	r2, [fp, #1136]	; 0x470
        alpha = newAlpha;
90005df4:	2200      	movs	r2, #0
90005df6:	f88b 243d 	strb.w	r2, [fp, #1085]	; 0x43d
        handleAlphaUpdated();
90005dfa:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005dfe:	4541      	cmp	r1, r8
90005e00:	f040 8386 	bne.w	90006510 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12f8>
        alpha = newAlpha;
90005e04:	f88b 246a 	strb.w	r2, [fp, #1130]	; 0x46a
90005e08:	4ae2      	ldr	r2, [pc, #904]	; (90006194 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf7c>)
90005e0a:	4620      	mov	r0, r4
90005e0c:	9902      	ldr	r1, [sp, #8]
90005e0e:	f8cb 2414 	str.w	r2, [fp, #1044]	; 0x414
90005e12:	4ae1      	ldr	r2, [pc, #900]	; (90006198 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
        action = &callback;
90005e14:	f8cb 6440 	str.w	r6, [fp, #1088]	; 0x440
90005e18:	f8cb 2418 	str.w	r2, [fp, #1048]	; 0x418
90005e1c:	f00a ff5c 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e20:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005e22:	48de      	ldr	r0, [pc, #888]	; (9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
90005e24:	f8cb 24c0 	str.w	r2, [fp, #1216]	; 0x4c0
90005e28:	4add      	ldr	r2, [pc, #884]	; (900061a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf88>)
90005e2a:	f8cb 04f8 	str.w	r0, [fp, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90005e2e:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005e32:	f8cb 24c4 	str.w	r2, [fp, #1220]	; 0x4c4
        borderSize = size;
90005e36:	2205      	movs	r2, #5
90005e38:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005e3c:	49d9      	ldr	r1, [pc, #868]	; (900061a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
90005e3e:	f8ab 24ec 	strh.w	r2, [fp, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90005e42:	f89b 34b4 	ldrb.w	r3, [fp, #1204]	; 0x4b4
        up = colorReleased;
90005e46:	4ad8      	ldr	r2, [pc, #864]	; (900061a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
        borderDown = borderColorPressed;
90005e48:	f8cb 04fc 	str.w	r0, [fp, #1276]	; 0x4fc
        up = colorReleased;
90005e4c:	f8cb 24f0 	str.w	r2, [fp, #1264]	; 0x4f0
        handlePressedUpdated();
90005e50:	f8db 0488 	ldr.w	r0, [fp, #1160]	; 0x488
        down = colorPressed;
90005e54:	f8cb 14f4 	str.w	r1, [fp, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90005e58:	2b00      	cmp	r3, #0
90005e5a:	f000 831f 	beq.w	9000649c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1284>
        color = newColor;
90005e5e:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e60:	f20b 41fc 	addw	r1, fp, #1276	; 0x4fc
90005e64:	f8cb 24e4 	str.w	r2, [fp, #1252]	; 0x4e4
90005e68:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005e6a:	f8cb 24e8 	str.w	r2, [fp, #1256]	; 0x4e8
        alpha = newAlpha;
90005e6e:	2200      	movs	r2, #0
90005e70:	f88b 24b5 	strb.w	r2, [fp, #1205]	; 0x4b5
        handleAlphaUpdated();
90005e74:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005e78:	4541      	cmp	r1, r8
90005e7a:	f040 8346 	bne.w	9000650a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12f2>
        alpha = newAlpha;
90005e7e:	f88b 24e2 	strb.w	r2, [fp, #1250]	; 0x4e2
90005e82:	4aca      	ldr	r2, [pc, #808]	; (900061ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf94>)
90005e84:	4620      	mov	r0, r4
90005e86:	9903      	ldr	r1, [sp, #12]
90005e88:	f8cb 248c 	str.w	r2, [fp, #1164]	; 0x48c
90005e8c:	4ac4      	ldr	r2, [pc, #784]	; (900061a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf88>)
        action = &callback;
90005e8e:	f8cb 64b8 	str.w	r6, [fp, #1208]	; 0x4b8
90005e92:	f8cb 2490 	str.w	r2, [fp, #1168]	; 0x490
90005e96:	f00a ff1f 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e9a:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005e9c:	48bf      	ldr	r0, [pc, #764]	; (9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
90005e9e:	f8cb 2538 	str.w	r2, [fp, #1336]	; 0x538
90005ea2:	4ac3      	ldr	r2, [pc, #780]	; (900061b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>)
90005ea4:	f8cb 0570 	str.w	r0, [fp, #1392]	; 0x570
        borderDown = borderColorPressed;
90005ea8:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005eac:	f8cb 253c 	str.w	r2, [fp, #1340]	; 0x53c
        borderSize = size;
90005eb0:	2205      	movs	r2, #5
90005eb2:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005eb6:	49bb      	ldr	r1, [pc, #748]	; (900061a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
90005eb8:	f8ab 2564 	strh.w	r2, [fp, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90005ebc:	f89b 352c 	ldrb.w	r3, [fp, #1324]	; 0x52c
        up = colorReleased;
90005ec0:	4ab9      	ldr	r2, [pc, #740]	; (900061a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
        borderDown = borderColorPressed;
90005ec2:	f8cb 0574 	str.w	r0, [fp, #1396]	; 0x574
        up = colorReleased;
90005ec6:	f8cb 2568 	str.w	r2, [fp, #1384]	; 0x568
        handlePressedUpdated();
90005eca:	f8db 0500 	ldr.w	r0, [fp, #1280]	; 0x500
        down = colorPressed;
90005ece:	f8cb 156c 	str.w	r1, [fp, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90005ed2:	2b00      	cmp	r3, #0
90005ed4:	f000 82df 	beq.w	90006496 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x127e>
        color = newColor;
90005ed8:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005eda:	f20b 5174 	addw	r1, fp, #1396	; 0x574
90005ede:	f8cb 255c 	str.w	r2, [fp, #1372]	; 0x55c
90005ee2:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005ee4:	f8cb 2560 	str.w	r2, [fp, #1376]	; 0x560
        alpha = newAlpha;
90005ee8:	2200      	movs	r2, #0
90005eea:	f88b 252d 	strb.w	r2, [fp, #1325]	; 0x52d
        handleAlphaUpdated();
90005eee:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005ef2:	4541      	cmp	r1, r8
90005ef4:	f040 8306 	bne.w	90006504 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12ec>
        alpha = newAlpha;
90005ef8:	f88b 255a 	strb.w	r2, [fp, #1370]	; 0x55a
90005efc:	4aad      	ldr	r2, [pc, #692]	; (900061b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf9c>)
90005efe:	4620      	mov	r0, r4
90005f00:	f8df 82ac 	ldr.w	r8, [pc, #684]	; 900061b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>
90005f04:	9904      	ldr	r1, [sp, #16]
90005f06:	f8cb 2504 	str.w	r2, [fp, #1284]	; 0x504
        action = &callback;
90005f0a:	f8cb 6530 	str.w	r6, [fp, #1328]	; 0x530
90005f0e:	f8cb 8508 	str.w	r8, [fp, #1288]	; 0x508
90005f12:	f00a fee1 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005f16:	48a1      	ldr	r0, [pc, #644]	; (9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
90005f18:	2200      	movs	r2, #0
        down = colorPressed;
90005f1a:	49a2      	ldr	r1, [pc, #648]	; (900061a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
        borderUp = borderColorReleased;
90005f1c:	f8cb 05e8 	str.w	r0, [fp, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90005f20:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005f24:	f8cb 25b0 	str.w	r2, [fp, #1456]	; 0x5b0
        borderSize = size;
90005f28:	2205      	movs	r2, #5
90005f2a:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005f2e:	f8cb 85b4 	str.w	r8, [fp, #1460]	; 0x5b4
90005f32:	f8ab 25dc 	strh.w	r2, [fp, #1500]	; 0x5dc
90005f36:	f8cb 05ec 	str.w	r0, [fp, #1516]	; 0x5ec
        up = colorReleased;
90005f3a:	4a9b      	ldr	r2, [pc, #620]	; (900061a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
        borderBox.setColor(T::getPressed() ? down : up);
90005f3c:	f89b 05a4 	ldrb.w	r0, [fp, #1444]	; 0x5a4
        up = colorReleased;
90005f40:	f8cb 25e0 	str.w	r2, [fp, #1504]	; 0x5e0
        down = colorPressed;
90005f44:	f8cb 15e4 	str.w	r1, [fp, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
90005f48:	2800      	cmp	r0, #0
90005f4a:	f000 82a1 	beq.w	90006490 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1278>
        color = newColor;
90005f4e:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005f50:	f20b 51ec 	addw	r1, fp, #1516	; 0x5ec
90005f54:	f8cb 25d4 	str.w	r2, [fp, #1492]	; 0x5d4
        alpha = newAlpha;
90005f58:	f04f 0800 	mov.w	r8, #0
90005f5c:	680a      	ldr	r2, [r1, #0]
90005f5e:	4620      	mov	r0, r4
90005f60:	9905      	ldr	r1, [sp, #20]
        borderColor = colorBorder;
90005f62:	f8cb 25d8 	str.w	r2, [fp, #1496]	; 0x5d8
90005f66:	4a94      	ldr	r2, [pc, #592]	; (900061b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa0>)
        action = &callback;
90005f68:	f8cb 65a8 	str.w	r6, [fp, #1448]	; 0x5a8
90005f6c:	f8cb 257c 	str.w	r2, [fp, #1404]	; 0x57c
90005f70:	4a8f      	ldr	r2, [pc, #572]	; (900061b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>)
        alpha = newAlpha;
90005f72:	f88b 85a5 	strb.w	r8, [fp, #1445]	; 0x5a5
90005f76:	f8cb 2580 	str.w	r2, [fp, #1408]	; 0x580
        alpha = newAlpha;
90005f7a:	f88b 85d2 	strb.w	r8, [fp, #1490]	; 0x5d2
90005f7e:	f00a feab 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005f82:	4886      	ldr	r0, [pc, #536]	; (9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
90005f84:	4a8d      	ldr	r2, [pc, #564]	; (900061bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa4>)
90005f86:	f8cb 0660 	str.w	r0, [fp, #1632]	; 0x660
        borderDown = borderColorPressed;
90005f8a:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005f8e:	f8cb 262c 	str.w	r2, [fp, #1580]	; 0x62c
        borderSize = size;
90005f92:	2205      	movs	r2, #5
90005f94:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005f98:	4982      	ldr	r1, [pc, #520]	; (900061a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
90005f9a:	f8ab 2654 	strh.w	r2, [fp, #1620]	; 0x654
        borderDown = borderColorPressed;
90005f9e:	f8cb 0664 	str.w	r0, [fp, #1636]	; 0x664
        up = colorReleased;
90005fa2:	4a81      	ldr	r2, [pc, #516]	; (900061a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
        borderBox.setColor(T::getPressed() ? down : up);
90005fa4:	f89b 061c 	ldrb.w	r0, [fp, #1564]	; 0x61c
90005fa8:	f8cb 8628 	str.w	r8, [fp, #1576]	; 0x628
        up = colorReleased;
90005fac:	f8cb 2658 	str.w	r2, [fp, #1624]	; 0x658
        down = colorPressed;
90005fb0:	f8cb 165c 	str.w	r1, [fp, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
90005fb4:	2800      	cmp	r0, #0
90005fb6:	f000 8268 	beq.w	9000648a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1272>
        color = newColor;
90005fba:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005fbc:	f20b 6164 	addw	r1, fp, #1636	; 0x664
90005fc0:	f8cb 264c 	str.w	r2, [fp, #1612]	; 0x64c
90005fc4:	f04f 0800 	mov.w	r8, #0
90005fc8:	680a      	ldr	r2, [r1, #0]
90005fca:	4620      	mov	r0, r4
90005fcc:	f8df 91ec 	ldr.w	r9, [pc, #492]	; 900061bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa4>
        borderColor = colorBorder;
90005fd0:	f8cb 2650 	str.w	r2, [fp, #1616]	; 0x650
90005fd4:	4a7a      	ldr	r2, [pc, #488]	; (900061c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa8>)
90005fd6:	9906      	ldr	r1, [sp, #24]
90005fd8:	f8cb 25f4 	str.w	r2, [fp, #1524]	; 0x5f4
        action = &callback;
90005fdc:	f8cb 6620 	str.w	r6, [fp, #1568]	; 0x620
        alpha = newAlpha;
90005fe0:	f88b 861d 	strb.w	r8, [fp, #1565]	; 0x61d
        alpha = newAlpha;
90005fe4:	f88b 864a 	strb.w	r8, [fp, #1610]	; 0x64a
90005fe8:	f8cb 95f8 	str.w	r9, [fp, #1528]	; 0x5f8
90005fec:	f00a fe74 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005ff0:	486a      	ldr	r0, [pc, #424]	; (9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
        borderSize = size;
90005ff2:	2205      	movs	r2, #5
        down = colorPressed;
90005ff4:	496b      	ldr	r1, [pc, #428]	; (900061a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
        borderUp = borderColorReleased;
90005ff6:	f8cb 06d8 	str.w	r0, [fp, #1752]	; 0x6d8
        borderDown = borderColorPressed;
90005ffa:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005ffe:	f8ab 26cc 	strh.w	r2, [fp, #1740]	; 0x6cc
90006002:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        up = colorReleased;
90006006:	4a68      	ldr	r2, [pc, #416]	; (900061a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
90006008:	f8cb 86a0 	str.w	r8, [fp, #1696]	; 0x6a0
        borderDown = borderColorPressed;
9000600c:	f8cb 06dc 	str.w	r0, [fp, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90006010:	f89b 0694 	ldrb.w	r0, [fp, #1684]	; 0x694
90006014:	f8cb 96a4 	str.w	r9, [fp, #1700]	; 0x6a4
        up = colorReleased;
90006018:	f8cb 26d0 	str.w	r2, [fp, #1744]	; 0x6d0
        down = colorPressed;
9000601c:	f8cb 16d4 	str.w	r1, [fp, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90006020:	2800      	cmp	r0, #0
90006022:	f000 822f 	beq.w	90006484 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x126c>
        color = newColor;
90006026:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006028:	f20b 61dc 	addw	r1, fp, #1756	; 0x6dc
9000602c:	f8cb 26c4 	str.w	r2, [fp, #1732]	; 0x6c4
90006030:	f04f 1850 	mov.w	r8, #5242960	; 0x500050
90006034:	680a      	ldr	r2, [r1, #0]
90006036:	f04f 0905 	mov.w	r9, #5
        action = &callback;
9000603a:	f8cb 6698 	str.w	r6, [fp, #1688]	; 0x698
        alpha = newAlpha;
9000603e:	2600      	movs	r6, #0
        borderColor = colorBorder;
90006040:	f8cb 26c8 	str.w	r2, [fp, #1736]	; 0x6c8
90006044:	4620      	mov	r0, r4
90006046:	4a5f      	ldr	r2, [pc, #380]	; (900061c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfac>)
90006048:	9907      	ldr	r1, [sp, #28]
9000604a:	f8cb 266c 	str.w	r2, [fp, #1644]	; 0x66c
9000604e:	4a5b      	ldr	r2, [pc, #364]	; (900061bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa4>)
90006050:	f8df a17c 	ldr.w	sl, [pc, #380]	; 900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfb8>
90006054:	f8cb 2670 	str.w	r2, [fp, #1648]	; 0x670
90006058:	f88b 6695 	strb.w	r6, [fp, #1685]	; 0x695
        alpha = newAlpha;
9000605c:	f88b 66c2 	strb.w	r6, [fp, #1730]	; 0x6c2
90006060:	f00a fe3a 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006064:	a91d      	add	r1, sp, #116	; 0x74
90006066:	4628      	mov	r0, r5
90006068:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
9000606c:	f00d fcf3 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006070:	4631      	mov	r1, r6
90006072:	4628      	mov	r0, r5
90006074:	f8cb a6e4 	str.w	sl, [fp, #1764]	; 0x6e4
90006078:	f8cb 86e8 	str.w	r8, [fp, #1768]	; 0x6e8
9000607c:	f00c fc6b 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006080:	4629      	mov	r1, r5
90006082:	4620      	mov	r0, r4
90006084:	2506      	movs	r5, #6
        visible = vis;
90006086:	f88b 6705 	strb.w	r6, [fp, #1797]	; 0x705
9000608a:	f00a fe25 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000608e:	a91d      	add	r1, sp, #116	; 0x74
90006090:	4638      	mov	r0, r7
90006092:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90006096:	f00d fcde 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000609a:	4631      	mov	r1, r6
9000609c:	4638      	mov	r0, r7
        rect.x = x;
9000609e:	f8cb a710 	str.w	sl, [fp, #1808]	; 0x710
900060a2:	f8cb 8714 	str.w	r8, [fp, #1812]	; 0x714
900060a6:	f00c fc56 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900060aa:	4639      	mov	r1, r7
900060ac:	4620      	mov	r0, r4
        visible = vis;
900060ae:	f88b 6731 	strb.w	r6, [fp, #1841]	; 0x731
900060b2:	f00a fe11 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900060b6:	f8dd a020 	ldr.w	sl, [sp, #32]
        rect.x = x;
900060ba:	4f43      	ldr	r7, [pc, #268]	; (900061c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfb0>)
900060bc:	a91d      	add	r1, sp, #116	; 0x74
900060be:	4650      	mov	r0, sl
900060c0:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
900060c4:	f00d fcc7 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900060c8:	4631      	mov	r1, r6
900060ca:	4650      	mov	r0, sl
900060cc:	f8cb 773c 	str.w	r7, [fp, #1852]	; 0x73c
900060d0:	f8cb 8740 	str.w	r8, [fp, #1856]	; 0x740
900060d4:	f00c fc3f 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900060d8:	4651      	mov	r1, sl
900060da:	4620      	mov	r0, r4
        visible = vis;
900060dc:	f88b 675d 	strb.w	r6, [fp, #1885]	; 0x75d
900060e0:	f00a fdfa 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900060e4:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
900060e8:	a91d      	add	r1, sp, #116	; 0x74
900060ea:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
900060ee:	4650      	mov	r0, sl
900060f0:	f00d fcb1 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900060f4:	4631      	mov	r1, r6
900060f6:	4650      	mov	r0, sl
        rect.x = x;
900060f8:	f8cb 7768 	str.w	r7, [fp, #1896]	; 0x768
900060fc:	f8cb 876c 	str.w	r8, [fp, #1900]	; 0x76c
90006100:	3776      	adds	r7, #118	; 0x76
90006102:	f00c fc28 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006106:	4651      	mov	r1, sl
90006108:	4620      	mov	r0, r4
        visible = vis;
9000610a:	f88b 6789 	strb.w	r6, [fp, #1929]	; 0x789
9000610e:	f00a fde3 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006112:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
90006116:	a91d      	add	r1, sp, #116	; 0x74
90006118:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
9000611c:	4650      	mov	r0, sl
9000611e:	f00d fc9a 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006122:	4631      	mov	r1, r6
90006124:	4650      	mov	r0, sl
        rect.x = x;
90006126:	f8cb 7794 	str.w	r7, [fp, #1940]	; 0x794
9000612a:	f8cb 8798 	str.w	r8, [fp, #1944]	; 0x798
9000612e:	f00c fc12 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006132:	4651      	mov	r1, sl
90006134:	4620      	mov	r0, r4
        visible = vis;
90006136:	f88b 67b5 	strb.w	r6, [fp, #1973]	; 0x7b5
9000613a:	f00a fdcd 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000613e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
90006142:	a91d      	add	r1, sp, #116	; 0x74
90006144:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006148:	4650      	mov	r0, sl
9000614a:	f00d fc84 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000614e:	4631      	mov	r1, r6
90006150:	4650      	mov	r0, sl
        rect.x = x;
90006152:	f8cb 77c0 	str.w	r7, [fp, #1984]	; 0x7c0
90006156:	f8cb 87c4 	str.w	r8, [fp, #1988]	; 0x7c4
9000615a:	f00c fbfc 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000615e:	4651      	mov	r1, sl
90006160:	4620      	mov	r0, r4
        visible = vis;
90006162:	f88b 67e1 	strb.w	r6, [fp, #2017]	; 0x7e1
90006166:	f00a fdb7 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000616a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
        rect.x = x;
9000616e:	4f17      	ldr	r7, [pc, #92]	; (900061cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfb4>)
90006170:	a91d      	add	r1, sp, #116	; 0x74
90006172:	4650      	mov	r0, sl
90006174:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90006178:	f00d fc6d 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000617c:	4631      	mov	r1, r6
9000617e:	4650      	mov	r0, sl
90006180:	f8cb 77ec 	str.w	r7, [fp, #2028]	; 0x7ec
90006184:	f8cb 87f0 	str.w	r8, [fp, #2032]	; 0x7f0
90006188:	f00c fbe5 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000618c:	4651      	mov	r1, sl
9000618e:	4620      	mov	r0, r4
90006190:	e020      	b.n	900061d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfbc>
90006192:	bf00      	nop
90006194:	005800a7 	.word	0x005800a7
90006198:	0061007c 	.word	0x0061007c
9000619c:	ff003366 	.word	0xff003366
900061a0:	00470064 	.word	0x00470064
900061a4:	ff0099cc 	.word	0xff0099cc
900061a8:	ff006699 	.word	0xff006699
900061ac:	00c20038 	.word	0x00c20038
900061b0:	0047007c 	.word	0x0047007c
900061b4:	000700a7 	.word	0x000700a7
900061b8:	00c200a7 	.word	0x00c200a7
900061bc:	00470071 	.word	0x00470071
900061c0:	0007012e 	.word	0x0007012e
900061c4:	00c2012e 	.word	0x00c2012e
900061c8:	fffe00bc 	.word	0xfffe00bc
900061cc:	00600042 	.word	0x00600042
900061d0:	fffe0042 	.word	0xfffe0042
        visible = vis;
900061d4:	f88b 680d 	strb.w	r6, [fp, #2061]	; 0x80d
900061d8:	f00a fd7e 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900061dc:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
900061e0:	a91d      	add	r1, sp, #116	; 0x74
900061e2:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
900061e6:	4650      	mov	r0, sl
900061e8:	f00d fc35 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900061ec:	4631      	mov	r1, r6
900061ee:	4650      	mov	r0, sl
        rect.x = x;
900061f0:	f8cb 7818 	str.w	r7, [fp, #2072]	; 0x818
900061f4:	f8cb 881c 	str.w	r8, [fp, #2076]	; 0x81c
900061f8:	377a      	adds	r7, #122	; 0x7a
900061fa:	f00c fbac 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900061fe:	4651      	mov	r1, sl
90006200:	4620      	mov	r0, r4
        visible = vis;
90006202:	f88b 6839 	strb.w	r6, [fp, #2105]	; 0x839
90006206:	f00a fd67 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000620a:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
9000620e:	a91d      	add	r1, sp, #116	; 0x74
90006210:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90006214:	4650      	mov	r0, sl
90006216:	f00d fc1e 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000621a:	4631      	mov	r1, r6
9000621c:	4650      	mov	r0, sl
        rect.x = x;
9000621e:	f8cb 7844 	str.w	r7, [fp, #2116]	; 0x844
90006222:	f8cb 8848 	str.w	r8, [fp, #2120]	; 0x848
90006226:	f00c fb96 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000622a:	4651      	mov	r1, sl
9000622c:	4620      	mov	r0, r4
        visible = vis;
9000622e:	f88b 6865 	strb.w	r6, [fp, #2149]	; 0x865
90006232:	f00a fd51 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006236:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
9000623a:	a91d      	add	r1, sp, #116	; 0x74
9000623c:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006240:	4650      	mov	r0, sl
90006242:	f00d fc08 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006246:	4631      	mov	r1, r6
90006248:	4650      	mov	r0, sl
        rect.x = x;
9000624a:	f8cb 7870 	str.w	r7, [fp, #2160]	; 0x870
9000624e:	f8cb 8874 	str.w	r8, [fp, #2164]	; 0x874
90006252:	3776      	adds	r7, #118	; 0x76
90006254:	f00c fb7f 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006258:	4651      	mov	r1, sl
9000625a:	4620      	mov	r0, r4
        visible = vis;
9000625c:	f88b 6891 	strb.w	r6, [fp, #2193]	; 0x891
90006260:	f00a fd3a 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006264:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
90006268:	a91d      	add	r1, sp, #116	; 0x74
9000626a:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
9000626e:	4650      	mov	r0, sl
90006270:	f00d fbf1 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006274:	4631      	mov	r1, r6
90006276:	4650      	mov	r0, sl
        rect.x = x;
90006278:	f8cb 789c 	str.w	r7, [fp, #2204]	; 0x89c
9000627c:	f8cb 88a0 	str.w	r8, [fp, #2208]	; 0x8a0
90006280:	f00c fb69 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006284:	4651      	mov	r1, sl
90006286:	4620      	mov	r0, r4
        visible = vis;
90006288:	f88b 68bd 	strb.w	r6, [fp, #2237]	; 0x8bd
9000628c:	f00a fd24 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006290:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
90006294:	a91d      	add	r1, sp, #116	; 0x74
90006296:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
9000629a:	4650      	mov	r0, sl
9000629c:	f00d fbdb 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900062a0:	4631      	mov	r1, r6
900062a2:	4650      	mov	r0, sl
        rect.x = x;
900062a4:	f8cb 78c8 	str.w	r7, [fp, #2248]	; 0x8c8
900062a8:	f8cb 88cc 	str.w	r8, [fp, #2252]	; 0x8cc
900062ac:	f00c fb53 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900062b0:	4651      	mov	r1, sl
900062b2:	4620      	mov	r0, r4
        visible = vis;
900062b4:	f88b 68e9 	strb.w	r6, [fp, #2281]	; 0x8e9
900062b8:	f00a fd0e 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900062bc:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
        rect.x = x;
900062c0:	4f9b      	ldr	r7, [pc, #620]	; (90006530 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1318>)
900062c2:	a91d      	add	r1, sp, #116	; 0x74
900062c4:	4650      	mov	r0, sl
900062c6:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
900062ca:	f00d fbc4 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900062ce:	4631      	mov	r1, r6
900062d0:	4650      	mov	r0, sl
900062d2:	f8cb 78f4 	str.w	r7, [fp, #2292]	; 0x8f4
900062d6:	f8cb 88f8 	str.w	r8, [fp, #2296]	; 0x8f8
900062da:	f00c fb3c 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900062de:	4651      	mov	r1, sl
900062e0:	4620      	mov	r0, r4
        visible = vis;
900062e2:	f88b 6915 	strb.w	r6, [fp, #2325]	; 0x915
900062e6:	f00a fcf7 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900062ea:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
900062ee:	a91d      	add	r1, sp, #116	; 0x74
900062f0:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
900062f4:	4650      	mov	r0, sl
900062f6:	f00d fbae 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900062fa:	4631      	mov	r1, r6
900062fc:	4650      	mov	r0, sl
        rect.x = x;
900062fe:	f8cb 7920 	str.w	r7, [fp, #2336]	; 0x920
90006302:	f8cb 8924 	str.w	r8, [fp, #2340]	; 0x924
90006306:	377e      	adds	r7, #126	; 0x7e
90006308:	f00c fb25 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000630c:	4651      	mov	r1, sl
9000630e:	4620      	mov	r0, r4
        visible = vis;
90006310:	f88b 6941 	strb.w	r6, [fp, #2369]	; 0x941
90006314:	f00a fce0 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006318:	f8dd a050 	ldr.w	sl, [sp, #80]	; 0x50
9000631c:	a91d      	add	r1, sp, #116	; 0x74
9000631e:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006322:	4650      	mov	r0, sl
90006324:	f00d fb97 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006328:	4631      	mov	r1, r6
9000632a:	4650      	mov	r0, sl
        rect.x = x;
9000632c:	f8cb 794c 	str.w	r7, [fp, #2380]	; 0x94c
90006330:	f8cb 8950 	str.w	r8, [fp, #2384]	; 0x950
90006334:	f00c fb0f 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006338:	4651      	mov	r1, sl
9000633a:	4620      	mov	r0, r4
        visible = vis;
9000633c:	f88b 696d 	strb.w	r6, [fp, #2413]	; 0x96d
90006340:	f00a fcca 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006344:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90006348:	a91d      	add	r1, sp, #116	; 0x74
9000634a:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
9000634e:	4650      	mov	r0, sl
90006350:	f00d fb81 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006354:	4631      	mov	r1, r6
90006356:	4650      	mov	r0, sl
        rect.x = x;
90006358:	f8cb 7978 	str.w	r7, [fp, #2424]	; 0x978
9000635c:	f8cb 897c 	str.w	r8, [fp, #2428]	; 0x97c
90006360:	3772      	adds	r7, #114	; 0x72
90006362:	f00c faf8 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006366:	4651      	mov	r1, sl
90006368:	4620      	mov	r0, r4
        visible = vis;
9000636a:	f88b 6999 	strb.w	r6, [fp, #2457]	; 0x999
9000636e:	f00a fcb3 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006372:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006376:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
9000637a:	a91d      	add	r1, sp, #116	; 0x74
9000637c:	4648      	mov	r0, r9
9000637e:	f00d fb6a 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006382:	4631      	mov	r1, r6
90006384:	4648      	mov	r0, r9
        rect.x = x;
90006386:	f8cb 79a4 	str.w	r7, [fp, #2468]	; 0x9a4
9000638a:	f8cb 89a8 	str.w	r8, [fp, #2472]	; 0x9a8
9000638e:	f00c fae2 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006392:	4649      	mov	r1, r9
90006394:	4620      	mov	r0, r4
        visible = vis;
90006396:	f88b 69c5 	strb.w	r6, [fp, #2501]	; 0x9c5
9000639a:	f00a fc9d 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000639e:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900063a2:	9d17      	ldr	r5, [sp, #92]	; 0x5c
900063a4:	a91d      	add	r1, sp, #116	; 0x74
900063a6:	4628      	mov	r0, r5
900063a8:	f00d fb55 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900063ac:	4631      	mov	r1, r6
900063ae:	4628      	mov	r0, r5
        rect.x = x;
900063b0:	f8cb 79d0 	str.w	r7, [fp, #2512]	; 0x9d0
900063b4:	f8cb 89d4 	str.w	r8, [fp, #2516]	; 0x9d4
900063b8:	f00c facd 	bl	90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900063bc:	4620      	mov	r0, r4
900063be:	4629      	mov	r1, r5
        visible = vis;
900063c0:	f88b 69f1 	strb.w	r6, [fp, #2545]	; 0x9f1
900063c4:	f00a fc88 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900063c8:	4658      	mov	r0, fp
900063ca:	b01f      	add	sp, #124	; 0x7c
900063cc:	ecbd 8b06 	vpop	{d8-d10}
900063d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900063d4:	6890      	ldr	r0, [r2, #8]
900063d6:	4c57      	ldr	r4, [pc, #348]	; (90006534 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x131c>)
900063d8:	6802      	ldr	r2, [r0, #0]
900063da:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
900063dc:	42a1      	cmp	r1, r4
900063de:	f43e af98 	beq.w	90005312 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900063e2:	f7fe bf62 	b.w	900052aa <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900063e6:	6890      	ldr	r0, [r2, #8]
900063e8:	6801      	ldr	r1, [r0, #0]
900063ea:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900063ec:	42a1      	cmp	r1, r4
900063ee:	d166      	bne.n	900064be <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12a6>
        return auxiliaryLCD;
900063f0:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900063f2:	2800      	cmp	r0, #0
900063f4:	f43e afb3 	beq.w	9000535e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
900063f8:	6802      	ldr	r2, [r0, #0]
900063fa:	f04f 0901 	mov.w	r9, #1
900063fe:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006400:	42a2      	cmp	r2, r4
90006402:	f43e afac 	beq.w	9000535e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90006406:	4790      	blx	r2
90006408:	2800      	cmp	r0, #0
9000640a:	bf08      	it	eq
9000640c:	f049 0901 	orreq.w	r9, r9, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006410:	f1b9 0f00 	cmp.w	r9, #0
90006414:	f47e afa3 	bne.w	9000535e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
90006418:	f7fe bf58 	b.w	900052cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
9000641c:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000641e:	6801      	ldr	r1, [r0, #0]
90006420:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90006422:	42a1      	cmp	r1, r4
90006424:	d162      	bne.n	900064ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12d4>
        return auxiliaryLCD;
90006426:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006428:	2800      	cmp	r0, #0
9000642a:	f43e afbb 	beq.w	900053a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000642e:	6802      	ldr	r2, [r0, #0]
90006430:	f04f 0901 	mov.w	r9, #1
90006434:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006436:	42a2      	cmp	r2, r4
90006438:	f43e afb4 	beq.w	900053a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000643c:	4790      	blx	r2
9000643e:	2800      	cmp	r0, #0
90006440:	bf08      	it	eq
90006442:	f049 0901 	orreq.w	r9, r9, #1
90006446:	f1b9 0f00 	cmp.w	r9, #0
9000644a:	f47e afab 	bne.w	900053a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000644e:	f7fe bf3d 	b.w	900052cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006452:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006454:	6801      	ldr	r1, [r0, #0]
90006456:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90006458:	42a1      	cmp	r1, r4
9000645a:	d13c      	bne.n	900064d6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12be>
        return auxiliaryLCD;
9000645c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000645e:	2800      	cmp	r0, #0
90006460:	f43e afc3 	beq.w	900053ea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006464:	6802      	ldr	r2, [r0, #0]
90006466:	2601      	movs	r6, #1
90006468:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000646a:	42a2      	cmp	r2, r4
9000646c:	f43e afbd 	beq.w	900053ea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006470:	4790      	blx	r2
90006472:	2800      	cmp	r0, #0
90006474:	bf08      	it	eq
90006476:	f046 0601 	orreq.w	r6, r6, #1
9000647a:	2e00      	cmp	r6, #0
9000647c:	f47e afb5 	bne.w	900053ea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006480:	f7fe bf24 	b.w	900052cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90006484:	f50b 61db 	add.w	r1, fp, #1752	; 0x6d8
90006488:	e5d0      	b.n	9000602c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe14>
9000648a:	f50b 61cc 	add.w	r1, fp, #1632	; 0x660
9000648e:	e597      	b.n	90005fc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xda8>
90006490:	f50b 61bd 	add.w	r1, fp, #1512	; 0x5e8
90006494:	e55e      	b.n	90005f54 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd3c>
90006496:	f50b 61ae 	add.w	r1, fp, #1392	; 0x570
9000649a:	e520      	b.n	90005ede <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc6>
9000649c:	f50b 619f 	add.w	r1, fp, #1272	; 0x4f8
900064a0:	e4e0      	b.n	90005e64 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4c>
900064a2:	f50b 6190 	add.w	r1, fp, #1152	; 0x480
900064a6:	e4a0      	b.n	90005dea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbd2>
900064a8:	f50b 6181 	add.w	r1, fp, #1032	; 0x408
900064ac:	e436      	b.n	90005d1c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb04>
900064ae:	f50b 7164 	add.w	r1, fp, #912	; 0x390
900064b2:	f7ff bbf9 	b.w	90005ca8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa90>
900064b6:	f50b 7146 	add.w	r1, fp, #792	; 0x318
900064ba:	f7ff bbb6 	b.w	90005c2a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa12>
        bool compat = HAL::lcd().framebufferFormat() == format;
900064be:	4788      	blx	r1
900064c0:	6832      	ldr	r2, [r6, #0]
900064c2:	fab0 f980 	clz	r9, r0
900064c6:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900064c8:	ea4f 1959 	mov.w	r9, r9, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900064cc:	2800      	cmp	r0, #0
900064ce:	d09f      	beq.n	90006410 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11f8>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900064d0:	6802      	ldr	r2, [r0, #0]
900064d2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900064d4:	e794      	b.n	90006400 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11e8>
        bool compat = HAL::lcd().framebufferFormat() == format;
900064d6:	4788      	blx	r1
900064d8:	6832      	ldr	r2, [r6, #0]
900064da:	fab0 f680 	clz	r6, r0
900064de:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900064e0:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900064e2:	2800      	cmp	r0, #0
900064e4:	d0c9      	beq.n	9000647a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1262>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900064e6:	6802      	ldr	r2, [r0, #0]
900064e8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900064ea:	e7be      	b.n	9000646a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1252>
        bool compat = HAL::lcd().framebufferFormat() == format;
900064ec:	4788      	blx	r1
900064ee:	6832      	ldr	r2, [r6, #0]
900064f0:	fab0 f980 	clz	r9, r0
900064f4:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900064f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900064fa:	2800      	cmp	r0, #0
900064fc:	d0a3      	beq.n	90006446 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x122e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900064fe:	6802      	ldr	r2, [r0, #0]
90006500:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90006502:	e798      	b.n	90006436 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x121e>
        handleAlphaUpdated();
90006504:	9804      	ldr	r0, [sp, #16]
90006506:	4788      	blx	r1
90006508:	e4f8      	b.n	90005efc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xce4>
9000650a:	9803      	ldr	r0, [sp, #12]
9000650c:	4788      	blx	r1
9000650e:	e4b8      	b.n	90005e82 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc6a>
90006510:	9802      	ldr	r0, [sp, #8]
90006512:	4788      	blx	r1
90006514:	e478      	b.n	90005e08 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbf0>
90006516:	9801      	ldr	r0, [sp, #4]
90006518:	4788      	blx	r1
9000651a:	e40e      	b.n	90005d3a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb22>
9000651c:	9800      	ldr	r0, [sp, #0]
9000651e:	4788      	blx	r1
90006520:	f7ff bbd1 	b.w	90005cc6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xaae>
90006524:	ee19 0a90 	vmov	r0, s19
90006528:	4788      	blx	r1
9000652a:	f7ff bb8f 	b.w	90005c4c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa34>
9000652e:	bf00      	nop
90006530:	00c30042 	.word	0x00c30042
90006534:	90002339 	.word	0x90002339

90006538 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006538:	4770      	bx	lr
9000653a:	bf00      	nop

9000653c <_ZN19FrontendApplicationD0Ev>:
9000653c:	b510      	push	{r4, lr}
9000653e:	4604      	mov	r4, r0
90006540:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90006544:	f021 f8b4 	bl	900276b0 <_ZdlPvj>
90006548:	4620      	mov	r0, r4
9000654a:	bd10      	pop	{r4, pc}

9000654c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
9000654c:	b510      	push	{r4, lr}
9000654e:	4604      	mov	r4, r0
    {
        model.tick();
90006550:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90006554:	f000 f814 	bl	90006580 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006558:	4620      	mov	r0, r4
    }
9000655a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
9000655e:	f010 b813 	b.w	90016588 <_ZN8touchgfx11Application15handleTickEventEv>
90006562:	bf00      	nop

90006564 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006564:	b510      	push	{r4, lr}
90006566:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006568:	f7fd fbfa 	bl	90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
9000656c:	4b01      	ldr	r3, [pc, #4]	; (90006574 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
9000656e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90006570:	6023      	str	r3, [r4, #0]
}
90006572:	bd10      	pop	{r4, pc}
90006574:	9002b004 	.word	0x9002b004

90006578 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90006578:	2200      	movs	r2, #0
9000657a:	6002      	str	r2, [r0, #0]
{

}
9000657c:	4770      	bx	lr
9000657e:	bf00      	nop

90006580 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90006580:	4770      	bx	lr
90006582:	bf00      	nop

90006584 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
90006584:	4770      	bx	lr
90006586:	bf00      	nop

90006588 <_ZThn4_N25screen_main_menuPresenterD1Ev>:
90006588:	3804      	subs	r0, #4
9000658a:	4770      	bx	lr

9000658c <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
9000658c:	4770      	bx	lr
9000658e:	bf00      	nop

90006590 <_ZN25screen_main_menuPresenterD0Ev>:
90006590:	b510      	push	{r4, lr}
90006592:	4604      	mov	r4, r0
90006594:	2110      	movs	r1, #16
90006596:	f021 f88b 	bl	900276b0 <_ZdlPvj>
9000659a:	4620      	mov	r0, r4
9000659c:	bd10      	pop	{r4, pc}
9000659e:	bf00      	nop

900065a0 <_ZThn4_N25screen_main_menuPresenterD0Ev>:
900065a0:	b500      	push	{lr}
900065a2:	3804      	subs	r0, #4
900065a4:	b083      	sub	sp, #12
900065a6:	2110      	movs	r1, #16
900065a8:	9001      	str	r0, [sp, #4]
900065aa:	f021 f881 	bl	900276b0 <_ZdlPvj>
900065ae:	9801      	ldr	r0, [sp, #4]
900065b0:	b003      	add	sp, #12
900065b2:	f85d fb04 	ldr.w	pc, [sp], #4
900065b6:	bf00      	nop

900065b8 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
900065b8:	4a06      	ldr	r2, [pc, #24]	; (900065d4 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
900065ba:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
900065bc:	b410      	push	{r4}
    ModelListener() : model(0) {}
900065be:	2400      	movs	r4, #0
900065c0:	6084      	str	r4, [r0, #8]
    : view(v)
900065c2:	f102 0408 	add.w	r4, r2, #8
900065c6:	3220      	adds	r2, #32
900065c8:	e9c0 4200 	strd	r4, r2, [r0]
}
900065cc:	f85d 4b04 	ldr.w	r4, [sp], #4
900065d0:	4770      	bx	lr
900065d2:	bf00      	nop
900065d4:	9002b050 	.word	0x9002b050

900065d8 <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
900065d8:	4770      	bx	lr
900065da:	bf00      	nop

900065dc <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
900065dc:	4b03      	ldr	r3, [pc, #12]	; (900065ec <_ZN20screen_main_menuViewD1Ev+0x10>)
900065de:	b510      	push	{r4, lr}
900065e0:	4604      	mov	r4, r0
900065e2:	6003      	str	r3, [r0, #0]
900065e4:	f7fd fe4c 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
900065e8:	4620      	mov	r0, r4
900065ea:	bd10      	pop	{r4, pc}
900065ec:	9002b080 	.word	0x9002b080

900065f0 <_ZN20screen_main_menuViewD0Ev>:
900065f0:	4b06      	ldr	r3, [pc, #24]	; (9000660c <_ZN20screen_main_menuViewD0Ev+0x1c>)
900065f2:	b510      	push	{r4, lr}
900065f4:	4604      	mov	r4, r0
900065f6:	6003      	str	r3, [r0, #0]
900065f8:	f7fd fe42 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
900065fc:	f44f 7186 	mov.w	r1, #268	; 0x10c
90006600:	4620      	mov	r0, r4
90006602:	f021 f855 	bl	900276b0 <_ZdlPvj>
90006606:	4620      	mov	r0, r4
90006608:	bd10      	pop	{r4, pc}
9000660a:	bf00      	nop
9000660c:	9002b080 	.word	0x9002b080

90006610 <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
90006610:	b510      	push	{r4, lr}
90006612:	4604      	mov	r4, r0
90006614:	f7fd fe84 	bl	90004320 <_ZN24screen_main_menuViewBaseC1Ev>
90006618:	4b01      	ldr	r3, [pc, #4]	; (90006620 <_ZN20screen_main_menuViewC1Ev+0x10>)
}
9000661a:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
9000661c:	6023      	str	r3, [r4, #0]
}
9000661e:	bd10      	pop	{r4, pc}
90006620:	9002b080 	.word	0x9002b080

90006624 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90006624:	f7fd be2e 	b.w	90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>

90006628 <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
90006628:	4770      	bx	lr
9000662a:	bf00      	nop

9000662c <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
9000662c:	3804      	subs	r0, #4
9000662e:	4770      	bx	lr

90006630 <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
90006630:	4770      	bx	lr
90006632:	bf00      	nop

90006634 <_ZN26screen_snake_gamePresenterD0Ev>:
90006634:	b510      	push	{r4, lr}
90006636:	4604      	mov	r4, r0
90006638:	2110      	movs	r1, #16
9000663a:	f021 f839 	bl	900276b0 <_ZdlPvj>
9000663e:	4620      	mov	r0, r4
90006640:	bd10      	pop	{r4, pc}
90006642:	bf00      	nop

90006644 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90006644:	b500      	push	{lr}
90006646:	3804      	subs	r0, #4
90006648:	b083      	sub	sp, #12
9000664a:	2110      	movs	r1, #16
9000664c:	9001      	str	r0, [sp, #4]
9000664e:	f021 f82f 	bl	900276b0 <_ZdlPvj>
90006652:	9801      	ldr	r0, [sp, #4]
90006654:	b003      	add	sp, #12
90006656:	f85d fb04 	ldr.w	pc, [sp], #4
9000665a:	bf00      	nop

9000665c <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
9000665c:	4a06      	ldr	r2, [pc, #24]	; (90006678 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
9000665e:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
90006660:	b410      	push	{r4}
90006662:	2400      	movs	r4, #0
90006664:	6084      	str	r4, [r0, #8]
    : view(v)
90006666:	f102 0408 	add.w	r4, r2, #8
9000666a:	3220      	adds	r2, #32
9000666c:	e9c0 4200 	strd	r4, r2, [r0]
}
90006670:	f85d 4b04 	ldr.w	r4, [sp], #4
90006674:	4770      	bx	lr
90006676:	bf00      	nop
90006678:	9002b0ac 	.word	0x9002b0ac

9000667c <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
9000667c:	4770      	bx	lr
9000667e:	bf00      	nop

90006680 <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
90006680:	4b01      	ldr	r3, [pc, #4]	; (90006688 <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
90006682:	2201      	movs	r2, #1
90006684:	801a      	strh	r2, [r3, #0]
}
90006686:	4770      	bx	lr
90006688:	24000030 	.word	0x24000030

9000668c <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
9000668c:	4b01      	ldr	r3, [pc, #4]	; (90006694 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
9000668e:	2203      	movs	r2, #3
90006690:	801a      	strh	r2, [r3, #0]
}
90006692:	4770      	bx	lr
90006694:	24000030 	.word	0x24000030

90006698 <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
90006698:	4b01      	ldr	r3, [pc, #4]	; (900066a0 <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
9000669a:	2202      	movs	r2, #2
9000669c:	801a      	strh	r2, [r3, #0]
}
9000669e:	4770      	bx	lr
900066a0:	24000030 	.word	0x24000030

900066a4 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
900066a4:	4b01      	ldr	r3, [pc, #4]	; (900066ac <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
900066a6:	2200      	movs	r2, #0
900066a8:	801a      	strh	r2, [r3, #0]
}
900066aa:	4770      	bx	lr
900066ac:	24000030 	.word	0x24000030

900066b0 <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
900066b0:	4b09      	ldr	r3, [pc, #36]	; (900066d8 <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
900066b2:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
900066b6:	4a09      	ldr	r2, [pc, #36]	; (900066dc <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
900066b8:	681b      	ldr	r3, [r3, #0]
900066ba:	6810      	ldr	r0, [r2, #0]
900066bc:	689a      	ldr	r2, [r3, #8]
900066be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900066c2:	8893      	ldrh	r3, [r2, #4]
900066c4:	88d2      	ldrh	r2, [r2, #6]
900066c6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900066ca:	fb13 f302 	smulbb	r3, r3, r2
900066ce:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
900066d2:	4418      	add	r0, r3
900066d4:	4770      	bx	lr
900066d6:	bf00      	nop
900066d8:	2401f6e0 	.word	0x2401f6e0
900066dc:	24000034 	.word	0x24000034

900066e0 <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
900066e0:	4b0a      	ldr	r3, [pc, #40]	; (9000670c <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
900066e2:	f04f 0c46 	mov.w	ip, #70	; 0x46
900066e6:	4a0a      	ldr	r2, [pc, #40]	; (90006710 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
900066e8:	681b      	ldr	r3, [r3, #0]
900066ea:	6810      	ldr	r0, [r2, #0]
900066ec:	689a      	ldr	r2, [r3, #8]
900066ee:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900066f2:	8893      	ldrh	r3, [r2, #4]
900066f4:	88d2      	ldrh	r2, [r2, #6]
900066f6:	fb0c 0001 	mla	r0, ip, r1, r0
900066fa:	fb13 f302 	smulbb	r3, r3, r2
900066fe:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90006702:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90006706:	4418      	add	r0, r3
90006708:	4770      	bx	lr
9000670a:	bf00      	nop
9000670c:	2401f6e0 	.word	0x2401f6e0
90006710:	24000034 	.word	0x24000034

90006714 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90006714:	4b03      	ldr	r3, [pc, #12]	; (90006724 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90006716:	b510      	push	{r4, lr}
90006718:	4604      	mov	r4, r0
9000671a:	6003      	str	r3, [r0, #0]
9000671c:	f7fd ff52 	bl	900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>
90006720:	4620      	mov	r0, r4
90006722:	bd10      	pop	{r4, pc}
90006724:	9002b0e0 	.word	0x9002b0e0

90006728 <_ZN21screen_snake_gameViewD0Ev>:
90006728:	4b06      	ldr	r3, [pc, #24]	; (90006744 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
9000672a:	b510      	push	{r4, lr}
9000672c:	4604      	mov	r4, r0
9000672e:	6003      	str	r3, [r0, #0]
90006730:	f7fd ff48 	bl	900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>
90006734:	f44f 7164 	mov.w	r1, #912	; 0x390
90006738:	4620      	mov	r0, r4
9000673a:	f020 ffb9 	bl	900276b0 <_ZdlPvj>
9000673e:	4620      	mov	r0, r4
90006740:	bd10      	pop	{r4, pc}
90006742:	bf00      	nop
90006744:	9002b0e0 	.word	0x9002b0e0

90006748 <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90006748:	b510      	push	{r4, lr}
9000674a:	4604      	mov	r4, r0
9000674c:	f7fe f87e 	bl	9000484c <_ZN25screen_snake_gameViewBaseC1Ev>
90006750:	4b01      	ldr	r3, [pc, #4]	; (90006758 <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
90006752:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90006754:	6023      	str	r3, [r4, #0]
}
90006756:	bd10      	pop	{r4, pc}
90006758:	9002b0e0 	.word	0x9002b0e0

9000675c <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
9000675c:	4b0e      	ldr	r3, [pc, #56]	; (90006798 <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
9000675e:	2200      	movs	r2, #0
          touchable(false),
90006760:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006764:	21ff      	movs	r1, #255	; 0xff
90006766:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
9000676a:	b410      	push	{r4}
9000676c:	4c0b      	ldr	r4, [pc, #44]	; (9000679c <_GLOBAL__sub_I_game_started+0x40>)
9000676e:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
90006772:	601c      	str	r4, [r3, #0]
90006774:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90006778:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
9000677a:	e9c3 2201 	strd	r2, r2, [r3, #4]
9000677e:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
90006782:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90006786:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
9000678a:	332c      	adds	r3, #44	; 0x2c
9000678c:	4283      	cmp	r3, r0
9000678e:	d1ee      	bne.n	9000676e <_GLOBAL__sub_I_game_started+0x12>
}
90006790:	f85d 4b04 	ldr.w	r4, [sp], #4
90006794:	4770      	bx	lr
90006796:	bf00      	nop
90006798:	240096e0 	.word	0x240096e0
9000679c:	9002b888 	.word	0x9002b888

900067a0 <_GLOBAL__sub_D_game_started>:
900067a0:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
900067a2:	4c05      	ldr	r4, [pc, #20]	; (900067b8 <_GLOBAL__sub_D_game_started+0x18>)
900067a4:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
900067a8:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
900067ac:	681b      	ldr	r3, [r3, #0]
900067ae:	4620      	mov	r0, r4
900067b0:	4798      	blx	r3
900067b2:	42ac      	cmp	r4, r5
900067b4:	d1f8      	bne.n	900067a8 <_GLOBAL__sub_D_game_started+0x8>
}
900067b6:	bd38      	pop	{r3, r4, r5, pc}
900067b8:	2401f6e0 	.word	0x2401f6e0

900067bc <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
900067bc:	f7fd bf04 	b.w	900045c8 <_ZN25screen_snake_gameViewBase11setupScreenEv>

900067c0 <_ZN21screen_snake_gameView16game_snake_startEv>:
{
900067c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
900067c4:	2500      	movs	r5, #0
900067c6:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
900067c8:	30c4      	adds	r0, #196	; 0xc4
class Drawable
900067ca:	4c2c      	ldr	r4, [pc, #176]	; (9000687c <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
        visible = vis;
900067cc:	f886 50e9 	strb.w	r5, [r6, #233]	; 0xe9
900067d0:	f010 fed1 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
900067d4:	f506 700a 	add.w	r0, r6, #552	; 0x228
900067d8:	f886 524d 	strb.w	r5, [r6, #589]	; 0x24d
900067dc:	f010 fecb 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
	snake_head.invalidate();
900067e0:	f106 0098 	add.w	r0, r6, #152	; 0x98
900067e4:	f886 50bd 	strb.w	r5, [r6, #189]	; 0xbd
900067e8:	f010 fec5 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
900067ec:	f506 703e 	add.w	r0, r6, #760	; 0x2f8
900067f0:	f886 531d 	strb.w	r5, [r6, #797]	; 0x31d
900067f4:	f010 febf 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
900067f8:	4f21      	ldr	r7, [pc, #132]	; (90006880 <_ZN21screen_snake_gameView16game_snake_startEv+0xc0>)
class Drawable
900067fa:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
900067fe:	62a5      	str	r5, [r4, #40]	; 0x28
90006800:	6838      	ldr	r0, [r7, #0]
90006802:	84a3      	strh	r3, [r4, #36]	; 0x24
90006804:	23ff      	movs	r3, #255	; 0xff
90006806:	e9c4 5501 	strd	r5, r5, [r4, #4]
9000680a:	e9c4 5503 	strd	r5, r5, [r4, #12]
9000680e:	e9c4 5505 	strd	r5, r5, [r4, #20]
90006812:	e9c4 5507 	strd	r5, r5, [r4, #28]
90006816:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
9000681a:	b318      	cbz	r0, 90006864 <_ZN21screen_snake_gameView16game_snake_startEv+0xa4>
        rect.x = x;
9000681c:	4b19      	ldr	r3, [pc, #100]	; (90006884 <_ZN21screen_snake_gameView16game_snake_startEv+0xc4>)
9000681e:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90006822:	6084      	str	r4, [r0, #8]
90006824:	1d30      	adds	r0, r6, #4
90006826:	6063      	str	r3, [r4, #4]
        color = newColor;
90006828:	4b17      	ldr	r3, [pc, #92]	; (90006888 <_ZN21screen_snake_gameView16game_snake_startEv+0xc8>)
9000682a:	60a2      	str	r2, [r4, #8]
9000682c:	4913      	ldr	r1, [pc, #76]	; (9000687c <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
9000682e:	62a3      	str	r3, [r4, #40]	; 0x28
90006830:	f00a fa52 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90006834:	683b      	ldr	r3, [r7, #0]
	tail = head;
90006836:	4c15      	ldr	r4, [pc, #84]	; (9000688c <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
        return parent;
90006838:	689b      	ldr	r3, [r3, #8]
9000683a:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
9000683c:	6803      	ldr	r3, [r0, #0]
9000683e:	695b      	ldr	r3, [r3, #20]
90006840:	4798      	blx	r3
	head->next = NULL;
90006842:	683b      	ldr	r3, [r7, #0]
90006844:	2200      	movs	r2, #0
	snake_length = 1;
90006846:	2101      	movs	r1, #1
	snake_direction = SNAKE_DOWN;
90006848:	4811      	ldr	r0, [pc, #68]	; (90006890 <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
	head->prev = NULL;
9000684a:	e9c3 2200 	strd	r2, r2, [r3]
	head->old_y = 0;
9000684e:	e9c3 2203 	strd	r2, r2, [r3, #12]
	tail = head;
90006852:	6023      	str	r3, [r4, #0]
	snake_direction = SNAKE_DOWN;
90006854:	2403      	movs	r4, #3
	snake_length = 1;
90006856:	4a0f      	ldr	r2, [pc, #60]	; (90006894 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
	game_started = true;
90006858:	4b0f      	ldr	r3, [pc, #60]	; (90006898 <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
	snake_direction = SNAKE_DOWN;
9000685a:	8004      	strh	r4, [r0, #0]
	snake_length = 1;
9000685c:	6011      	str	r1, [r2, #0]
	game_started = true;
9000685e:	7019      	strb	r1, [r3, #0]
}
90006860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90006864:	2014      	movs	r0, #20
90006866:	f020 ff75 	bl	90027754 <malloc>
9000686a:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
9000686c:	2800      	cmp	r0, #0
9000686e:	d1d5      	bne.n	9000681c <_ZN21screen_snake_gameView16game_snake_startEv+0x5c>
		error();
90006870:	6833      	ldr	r3, [r6, #0]
90006872:	4630      	mov	r0, r6
90006874:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90006876:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
9000687a:	4718      	bx	r3
9000687c:	240096e0 	.word	0x240096e0
90006880:	240096dc 	.word	0x240096dc
90006884:	0014000a 	.word	0x0014000a
90006888:	ff00ff32 	.word	0xff00ff32
9000688c:	2401f6e0 	.word	0x2401f6e0
90006890:	24000030 	.word	0x24000030
90006894:	24000034 	.word	0x24000034
90006898:	240096d8 	.word	0x240096d8

9000689c <_ZN21screen_snake_gameView15handleTickEventEv>:
void screen_snake_gameView::handleTickEvent() {
9000689c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
900068a0:	4fbb      	ldr	r7, [pc, #748]	; (90006b90 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f4>)
void screen_snake_gameView::handleTickEvent() {
900068a2:	b083      	sub	sp, #12
900068a4:	4681      	mov	r9, r0
	if( game_started )
900068a6:	783e      	ldrb	r6, [r7, #0]
900068a8:	2e00      	cmp	r6, #0
900068aa:	f000 81cb 	beq.w	90006c44 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
		if( ++tick % SNAKE_SPEED == 0 )
900068ae:	4eb9      	ldr	r6, [pc, #740]	; (90006b94 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f8>)
900068b0:	49b9      	ldr	r1, [pc, #740]	; (90006b98 <_ZN21screen_snake_gameView15handleTickEventEv+0x2fc>)
900068b2:	6833      	ldr	r3, [r6, #0]
900068b4:	4ab9      	ldr	r2, [pc, #740]	; (90006b9c <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
900068b6:	3301      	adds	r3, #1
900068b8:	fb01 2203 	mla	r2, r1, r3, r2
900068bc:	6033      	str	r3, [r6, #0]
900068be:	4bb8      	ldr	r3, [pc, #736]	; (90006ba0 <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
900068c0:	ebb3 0f72 	cmp.w	r3, r2, ror #1
900068c4:	f240 81bb 	bls.w	90006c3e <_ZN21screen_snake_gameView15handleTickEventEv+0x3a2>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
900068c8:	f8df a308 	ldr.w	sl, [pc, #776]	; 90006bd4 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>
900068cc:	f8da c000 	ldr.w	ip, [sl]
900068d0:	f8dc 5008 	ldr.w	r5, [ip, #8]
        return rect.x;
900068d4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900068d8:	b293      	uxth	r3, r2
900068da:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900068de:	f240 8209 	bls.w	90006cf4 <_ZN21screen_snake_gameView15handleTickEventEv+0x458>
				game_started = false;
900068e2:	2300      	movs	r3, #0
900068e4:	703b      	strb	r3, [r7, #0]
			snake_piece *snake_part = head->next;
900068e6:	f8dc 3000 	ldr.w	r3, [ip]
			while( snake_part != NULL )
900068ea:	b913      	cbnz	r3, 900068f2 <_ZN21screen_snake_gameView15handleTickEventEv+0x56>
900068ec:	e00f      	b.n	9000690e <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				snake_part = snake_part->next;
900068ee:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
900068f0:	b16b      	cbz	r3, 9000690e <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
900068f2:	6899      	ldr	r1, [r3, #8]
900068f4:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
900068f8:	4294      	cmp	r4, r2
900068fa:	d1f8      	bne.n	900068ee <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
900068fc:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90006900:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90006904:	4288      	cmp	r0, r1
90006906:	d1f2      	bne.n	900068ee <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
					game_started = false;
90006908:	2300      	movs	r3, #0
9000690a:	703b      	strb	r3, [r7, #0]
					tick = 0;
9000690c:	6033      	str	r3, [r6, #0]
9000690e:	f9b9 0110 	ldrsh.w	r0, [r9, #272]	; 0x110
90006912:	4629      	mov	r1, r5
90006914:	4663      	mov	r3, ip
90006916:	e006      	b.n	90006926 <_ZN21screen_snake_gameView15handleTickEventEv+0x8a>
				snake_part = snake_part->next;
90006918:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
9000691a:	2b00      	cmp	r3, #0
9000691c:	f000 80e4 	beq.w	90006ae8 <_ZN21screen_snake_gameView15handleTickEventEv+0x24c>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90006920:	6899      	ldr	r1, [r3, #8]
90006922:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90006926:	4290      	cmp	r0, r2
90006928:	d1f6      	bne.n	90006918 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
9000692a:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
9000692e:	f9b9 2112 	ldrsh.w	r2, [r9, #274]	; 0x112
90006932:	4291      	cmp	r1, r2
90006934:	d1f0      	bne.n	90006918 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
					snake_length++;
90006936:	4d9b      	ldr	r5, [pc, #620]	; (90006ba4 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006938:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
9000693c:	682c      	ldr	r4, [r5, #0]
9000693e:	1c63      	adds	r3, r4, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006940:	4293      	cmp	r3, r2
					snake_length++;
90006942:	602b      	str	r3, [r5, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006944:	f000 81e9 	beq.w	90006d1a <_ZN21screen_snake_gameView15handleTickEventEv+0x47e>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90006948:	2014      	movs	r0, #20
9000694a:	f020 ff03 	bl	90027754 <malloc>
					if( new_piece == NULL ) {
9000694e:	4680      	mov	r8, r0
90006950:	2800      	cmp	r0, #0
90006952:	f000 8308 	beq.w	90006f66 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
					snake_pixels[snake_length-1] = Box();
90006956:	222c      	movs	r2, #44	; 0x2c
90006958:	f8df b27c 	ldr.w	fp, [pc, #636]	; 90006bd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
class Drawable
9000695c:	2100      	movs	r1, #0
9000695e:	f44f 7380 	mov.w	r3, #256	; 0x100
90006962:	fb04 f202 	mul.w	r2, r4, r2
90006966:	eb0b 0702 	add.w	r7, fp, r2
9000696a:	84bb      	strh	r3, [r7, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
9000696c:	6087      	str	r7, [r0, #8]
class Box : public Widget
9000696e:	20ff      	movs	r0, #255	; 0xff
90006970:	e9c7 1101 	strd	r1, r1, [r7, #4]
90006974:	e9c7 1103 	strd	r1, r1, [r7, #12]
90006978:	e9c7 1105 	strd	r1, r1, [r7, #20]
9000697c:	e9c7 1107 	strd	r1, r1, [r7, #28]
        setX(x);
90006980:	f85b 3002 	ldr.w	r3, [fp, r2]
90006984:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006986:	f887 0026 	strb.w	r0, [r7, #38]	; 0x26
9000698a:	f10b 0028 	add.w	r0, fp, #40	; 0x28
9000698e:	5081      	str	r1, [r0, r2]
90006990:	4a85      	ldr	r2, [pc, #532]	; (90006ba8 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90006992:	4293      	cmp	r3, r2
90006994:	f040 820a 	bne.w	90006dac <_ZN21screen_snake_gameView15handleTickEventEv+0x510>
        rect.x = x;
90006998:	80b9      	strh	r1, [r7, #4]
        setY(y);
9000699a:	232c      	movs	r3, #44	; 0x2c
9000699c:	4983      	ldr	r1, [pc, #524]	; (90006bac <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
9000699e:	fb04 f303 	mul.w	r3, r4, r3
900069a2:	f85b 2003 	ldr.w	r2, [fp, r3]
900069a6:	445b      	add	r3, fp
900069a8:	6b52      	ldr	r2, [r2, #52]	; 0x34
900069aa:	428a      	cmp	r2, r1
900069ac:	f040 82bd 	bne.w	90006f2a <_ZN21screen_snake_gameView15handleTickEventEv+0x68e>
        rect.y = y;
900069b0:	2200      	movs	r2, #0
900069b2:	80da      	strh	r2, [r3, #6]
        setWidth(width);
900069b4:	222c      	movs	r2, #44	; 0x2c
900069b6:	210a      	movs	r1, #10
900069b8:	4638      	mov	r0, r7
900069ba:	fb04 f202 	mul.w	r2, r4, r2
					tail->next = new_piece;
900069be:	4c7c      	ldr	r4, [pc, #496]	; (90006bb0 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
900069c0:	f85b 3002 	ldr.w	r3, [fp, r2]
900069c4:	9201      	str	r2, [sp, #4]
900069c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900069c8:	4798      	blx	r3
        setHeight(height);
900069ca:	9a01      	ldr	r2, [sp, #4]
900069cc:	4638      	mov	r0, r7
900069ce:	210a      	movs	r1, #10
900069d0:	f85b 3002 	ldr.w	r3, [fp, r2]
900069d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900069d6:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
900069d8:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
900069dc:	4b75      	ldr	r3, [pc, #468]	; (90006bb4 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
900069de:	f109 0004 	add.w	r0, r9, #4
900069e2:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
900069e4:	2301      	movs	r3, #1
900069e6:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
900069ea:	f00a f975 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
900069ee:	f8d8 3008 	ldr.w	r3, [r8, #8]
900069f2:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
900069f4:	6803      	ldr	r3, [r0, #0]
900069f6:	695b      	ldr	r3, [r3, #20]
900069f8:	4798      	blx	r3
					tail->next = new_piece;
900069fa:	6823      	ldr	r3, [r4, #0]
					int food_new_x = pseudo_random(tick) % 480;
900069fc:	f8d9 2000 	ldr.w	r2, [r9]
					tail->next = new_piece;
90006a00:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
90006a04:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
90006a08:	2300      	movs	r3, #0
90006a0a:	486b      	ldr	r0, [pc, #428]	; (90006bb8 <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
90006a0c:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % 480;
90006a10:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90006a12:	f8c4 8000 	str.w	r8, [r4]
					new_piece->old_y = 0;
90006a16:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % 480;
90006a1a:	6c13      	ldr	r3, [r2, #64]	; 0x40
90006a1c:	4283      	cmp	r3, r0
90006a1e:	f040 827e 	bne.w	90006f1e <_ZN21screen_snake_gameView15handleTickEventEv+0x682>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90006a22:	f8d8 6008 	ldr.w	r6, [r8, #8]
90006a26:	6828      	ldr	r0, [r5, #0]
90006a28:	88b3      	ldrh	r3, [r6, #4]
90006a2a:	88f6      	ldrh	r6, [r6, #6]
90006a2c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90006a30:	fb13 f306 	smulbb	r3, r3, r6
90006a34:	ebc1 1601 	rsb	r6, r1, r1, lsl #4
90006a38:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90006a3c:	eb00 0046 	add.w	r0, r0, r6, lsl #1
90006a40:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % 480;
90006a42:	4b5e      	ldr	r3, [pc, #376]	; (90006bbc <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
					int food_new_y = pseudo_random2(tick) % 272;
90006a44:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % 480;
90006a46:	fb83 6300 	smull	r6, r3, r3, r0
90006a4a:	17c6      	asrs	r6, r0, #31
90006a4c:	4403      	add	r3, r0
90006a4e:	ebc6 2623 	rsb	r6, r6, r3, asr #8
90006a52:	4b5b      	ldr	r3, [pc, #364]	; (90006bc0 <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
90006a54:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
90006a58:	429a      	cmp	r2, r3
90006a5a:	eba0 1646 	sub.w	r6, r0, r6, lsl #5
					int food_new_y = pseudo_random2(tick) % 272;
90006a5e:	f040 825b 	bne.w	90006f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x67c>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90006a62:	6823      	ldr	r3, [r4, #0]
90006a64:	6898      	ldr	r0, [r3, #8]
90006a66:	682b      	ldr	r3, [r5, #0]
90006a68:	8882      	ldrh	r2, [r0, #4]
90006a6a:	88c0      	ldrh	r0, [r0, #6]
90006a6c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90006a70:	fb12 f200 	smulbb	r2, r2, r0
90006a74:	2046      	movs	r0, #70	; 0x46
90006a76:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90006a7a:	fb00 3301 	mla	r3, r0, r1, r3
90006a7e:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90006a82:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % 272;
90006a84:	4a4f      	ldr	r2, [pc, #316]	; (90006bc4 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
					food_new_x = food_new_x - (food_new_x % 10);
90006a86:	4950      	ldr	r1, [pc, #320]	; (90006bc8 <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					int food_new_y = pseudo_random2(tick) % 272;
90006a88:	fb82 3200 	smull	r3, r2, r2, r0
90006a8c:	17c3      	asrs	r3, r0, #31
90006a8e:	ebc3 13e2 	rsb	r3, r3, r2, asr #7
					food_new_x = food_new_x - (food_new_x % 10);
90006a92:	17f2      	asrs	r2, r6, #31
					int food_new_y = pseudo_random2(tick) % 272;
90006a94:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90006a98:	eba0 1303 	sub.w	r3, r0, r3, lsl #4
					food_new_x = food_new_x - (food_new_x % 10);
90006a9c:	fb81 0606 	smull	r0, r6, r1, r6
					food_new_y = food_new_y - (food_new_y % 10);
90006aa0:	fb81 0103 	smull	r0, r1, r1, r3
90006aa4:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90006aa6:	ebc2 02a6 	rsb	r2, r2, r6, asr #2
					food.invalidate();
90006aaa:	f509 7086 	add.w	r0, r9, #268	; 0x10c
					food_new_y = food_new_y - (food_new_y % 10);
90006aae:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
90006ab2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90006ab6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90006aba:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90006abc:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
90006abe:	f8a9 2110 	strh.w	r2, [r9, #272]	; 0x110
90006ac2:	f8a9 3112 	strh.w	r3, [r9, #274]	; 0x112
					food.invalidate();
90006ac6:	f010 fd56 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90006aca:	682b      	ldr	r3, [r5, #0]
90006acc:	4a3f      	ldr	r2, [pc, #252]	; (90006bcc <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
90006ace:	2120      	movs	r1, #32
90006ad0:	f509 7050 	add.w	r0, r9, #832	; 0x340
90006ad4:	f012 fd9e 	bl	90019614 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
90006ad8:	f509 702b 	add.w	r0, r9, #684	; 0x2ac
90006adc:	f010 fd4b 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
90006ae0:	f8da c000 	ldr.w	ip, [sl]
90006ae4:	f8dc 5008 	ldr.w	r5, [ip, #8]
			if( snake_direction == SNAKE_RIGHT )
90006ae8:	4b39      	ldr	r3, [pc, #228]	; (90006bd0 <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
90006aea:	f9b3 3000 	ldrsh.w	r3, [r3]
90006aee:	2b00      	cmp	r3, #0
90006af0:	f040 80f2 	bne.w	90006cd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x43c>
        return rect.x;
90006af4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
90006af8:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
90006afc:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
90006afe:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
90006b02:	330a      	adds	r3, #10
90006b04:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 90006ba8 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>
90006b08:	b219      	sxth	r1, r3
90006b0a:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
90006b0c:	f8cc 4010 	str.w	r4, [ip, #16]
90006b10:	4543      	cmp	r3, r8
90006b12:	f040 81fb 	bne.w	90006f0c <_ZN21screen_snake_gameView15handleTickEventEv+0x670>
        rect.x = x;
90006b16:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006b18:	6b53      	ldr	r3, [r2, #52]	; 0x34
90006b1a:	4f24      	ldr	r7, [pc, #144]	; (90006bac <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
90006b1c:	42bb      	cmp	r3, r7
90006b1e:	f040 81f1 	bne.w	90006f04 <_ZN21screen_snake_gameView15handleTickEventEv+0x668>
        rect.y = y;
90006b22:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006b24:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006b28:	689b      	ldr	r3, [r3, #8]
90006b2a:	6958      	ldr	r0, [r3, #20]
90006b2c:	6803      	ldr	r3, [r0, #0]
90006b2e:	695b      	ldr	r3, [r3, #20]
90006b30:	4798      	blx	r3
				snake_piece *piece = head->next;
90006b32:	f8da 3000 	ldr.w	r3, [sl]
90006b36:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006b38:	b97c      	cbnz	r4, 90006b5a <_ZN21screen_snake_gameView15handleTickEventEv+0x2be>
90006b3a:	e1eb      	b.n	90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        setY(y);
90006b3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006b3e:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90006b40:	42bb      	cmp	r3, r7
90006b42:	d120      	bne.n	90006b86 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ea>
        return parent;
90006b44:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006b46:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006b4a:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006b4c:	6803      	ldr	r3, [r0, #0]
90006b4e:	695b      	ldr	r3, [r3, #20]
90006b50:	4798      	blx	r3
					piece = piece->next;
90006b52:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006b54:	2c00      	cmp	r4, #0
90006b56:	f000 80d3 	beq.w	90006d00 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006b5a:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006b5e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006b62:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006b66:	60e3      	str	r3, [r4, #12]
        setX(x);
90006b68:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006b6a:	6121      	str	r1, [r4, #16]
90006b6c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006b6e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006b72:	4546      	cmp	r6, r8
90006b74:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006b78:	d0e0      	beq.n	90006b3c <_ZN21screen_snake_gameView15handleTickEventEv+0x2a0>
        setX(x);
90006b7a:	4628      	mov	r0, r5
90006b7c:	47b0      	blx	r6
        setY(y);
90006b7e:	682b      	ldr	r3, [r5, #0]
90006b80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006b82:	42bb      	cmp	r3, r7
90006b84:	d0de      	beq.n	90006b44 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a8>
90006b86:	4649      	mov	r1, r9
90006b88:	4628      	mov	r0, r5
90006b8a:	4798      	blx	r3
        return parent;
90006b8c:	68a3      	ldr	r3, [r4, #8]
90006b8e:	e7dc      	b.n	90006b4a <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
90006b90:	240096d8 	.word	0x240096d8
90006b94:	240096d4 	.word	0x240096d4
90006b98:	cccccccd 	.word	0xcccccccd
90006b9c:	19999998 	.word	0x19999998
90006ba0:	19999999 	.word	0x19999999
90006ba4:	24000034 	.word	0x24000034
90006ba8:	90002295 	.word	0x90002295
90006bac:	90002299 	.word	0x90002299
90006bb0:	2401f6e0 	.word	0x2401f6e0
90006bb4:	ffff8200 	.word	0xffff8200
90006bb8:	900066b1 	.word	0x900066b1
90006bbc:	88888889 	.word	0x88888889
90006bc0:	900066e1 	.word	0x900066e1
90006bc4:	78787879 	.word	0x78787879
90006bc8:	66666667 	.word	0x66666667
90006bcc:	9002b0d4 	.word	0x9002b0d4
90006bd0:	24000030 	.word	0x24000030
90006bd4:	240096dc 	.word	0x240096dc
90006bd8:	240096e0 	.word	0x240096e0
			else if (head != tail ) {
90006bdc:	4c9e      	ldr	r4, [pc, #632]	; (90006e58 <_ZN21screen_snake_gameView15handleTickEventEv+0x5bc>)
90006bde:	f8da 3000 	ldr.w	r3, [sl]
90006be2:	6820      	ldr	r0, [r4, #0]
90006be4:	4283      	cmp	r3, r0
90006be6:	d003      	beq.n	90006bf0 <_ZN21screen_snake_gameView15handleTickEventEv+0x354>
				free(tail);
90006be8:	f020 fdbc 	bl	90027764 <free>
		if( head != NULL ) {
90006bec:	f8da 0000 	ldr.w	r0, [sl]
90006bf0:	b1d0      	cbz	r0, 90006c28 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			tail = head;
90006bf2:	6020      	str	r0, [r4, #0]
			head->next = NULL;
90006bf4:	2300      	movs	r3, #0
			head->pixel->setXY(20, 50);
90006bf6:	6884      	ldr	r4, [r0, #8]
			head->next = NULL;
90006bf8:	6003      	str	r3, [r0, #0]
        setX(x);
90006bfa:	6823      	ldr	r3, [r4, #0]
90006bfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006bfe:	4542      	cmp	r2, r8
90006c00:	f040 8082 	bne.w	90006d08 <_ZN21screen_snake_gameView15handleTickEventEv+0x46c>
        rect.x = x;
90006c04:	2214      	movs	r2, #20
90006c06:	80a2      	strh	r2, [r4, #4]
        setY(y);
90006c08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006c0a:	42bb      	cmp	r3, r7
90006c0c:	f040 8081 	bne.w	90006d12 <_ZN21screen_snake_gameView15handleTickEventEv+0x476>
        rect.y = y;
90006c10:	2332      	movs	r3, #50	; 0x32
90006c12:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90006c14:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006c18:	689b      	ldr	r3, [r3, #8]
90006c1a:	6958      	ldr	r0, [r3, #20]
90006c1c:	6803      	ldr	r3, [r0, #0]
90006c1e:	695b      	ldr	r3, [r3, #20]
90006c20:	4798      	blx	r3
			snake_length = 1;
90006c22:	4b8e      	ldr	r3, [pc, #568]	; (90006e5c <_ZN21screen_snake_gameView15handleTickEventEv+0x5c0>)
90006c24:	2201      	movs	r2, #1
90006c26:	601a      	str	r2, [r3, #0]
        visible = vis;
90006c28:	2401      	movs	r4, #1
		btn_back.invalidate();
90006c2a:	f509 700a 	add.w	r0, r9, #552	; 0x228
90006c2e:	f889 424d 	strb.w	r4, [r9, #589]	; 0x24d
90006c32:	f010 fca0 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
90006c36:	4b8a      	ldr	r3, [pc, #552]	; (90006e60 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>)
90006c38:	681a      	ldr	r2, [r3, #0]
90006c3a:	2a00      	cmp	r2, #0
90006c3c:	dc41      	bgt.n	90006cc2 <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
}
90006c3e:	b003      	add	sp, #12
90006c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if( head != NULL ) {
90006c44:	f8df a220 	ldr.w	sl, [pc, #544]	; 90006e68 <_ZN21screen_snake_gameView15handleTickEventEv+0x5cc>
90006c48:	f8da 0000 	ldr.w	r0, [sl]
90006c4c:	2800      	cmp	r0, #0
90006c4e:	d0eb      	beq.n	90006c28 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			old = head->next;
90006c50:	6804      	ldr	r4, [r0, #0]
		while( old != NULL ) {
90006c52:	f8df 8218 	ldr.w	r8, [pc, #536]	; 90006e6c <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90006c56:	4f83      	ldr	r7, [pc, #524]	; (90006e64 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006c58:	2c00      	cmp	r4, #0
90006c5a:	f000 8182 	beq.w	90006f62 <_ZN21screen_snake_gameView15handleTickEventEv+0x6c6>
			old->pixel->setXY(-1, -1);
90006c5e:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90006c60:	f64f 7bff 	movw	fp, #65535	; 0xffff
        setX(x);
90006c64:	682b      	ldr	r3, [r5, #0]
90006c66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006c68:	4542      	cmp	r2, r8
90006c6a:	d119      	bne.n	90006ca0 <_ZN21screen_snake_gameView15handleTickEventEv+0x404>
        setY(y);
90006c6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006c6e:	f8a5 b004 	strh.w	fp, [r5, #4]
        rect.y = y;
90006c72:	42bb      	cmp	r3, r7
90006c74:	d11c      	bne.n	90006cb0 <_ZN21screen_snake_gameView15handleTickEventEv+0x414>
			old->pixel->setVisible(false);
90006c76:	68a3      	ldr	r3, [r4, #8]
90006c78:	f8a5 b006 	strh.w	fp, [r5, #6]
        return parent;
90006c7c:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90006c7e:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90006c82:	6803      	ldr	r3, [r0, #0]
90006c84:	695b      	ldr	r3, [r3, #20]
90006c86:	4798      	blx	r3
			old = old->next;
90006c88:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90006c8a:	2c00      	cmp	r4, #0
90006c8c:	d0a6      	beq.n	90006bdc <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
				free(old->prev);
90006c8e:	6860      	ldr	r0, [r4, #4]
90006c90:	f020 fd68 	bl	90027764 <free>
			old->pixel->setXY(-1, -1);
90006c94:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90006c96:	6066      	str	r6, [r4, #4]
        setX(x);
90006c98:	682b      	ldr	r3, [r5, #0]
90006c9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006c9c:	4542      	cmp	r2, r8
90006c9e:	d0e5      	beq.n	90006c6c <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
90006ca0:	f04f 31ff 	mov.w	r1, #4294967295
90006ca4:	4628      	mov	r0, r5
90006ca6:	4790      	blx	r2
        setY(y);
90006ca8:	682b      	ldr	r3, [r5, #0]
90006caa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006cac:	42bb      	cmp	r3, r7
90006cae:	d0e2      	beq.n	90006c76 <_ZN21screen_snake_gameView15handleTickEventEv+0x3da>
90006cb0:	4628      	mov	r0, r5
90006cb2:	f04f 31ff 	mov.w	r1, #4294967295
90006cb6:	4798      	blx	r3
			old->pixel->setVisible(false);
90006cb8:	68a3      	ldr	r3, [r4, #8]
        return parent;
90006cba:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90006cbc:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
90006cc0:	e7df      	b.n	90006c82 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e6>
			tick = 0;
90006cc2:	2200      	movs	r2, #0
			lbl_game_over.invalidate();
90006cc4:	f509 703e 	add.w	r0, r9, #760	; 0x2f8
        visible = vis;
90006cc8:	f889 431d 	strb.w	r4, [r9, #797]	; 0x31d
			tick = 0;
90006ccc:	601a      	str	r2, [r3, #0]
}
90006cce:	b003      	add	sp, #12
90006cd0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_game_over.invalidate();
90006cd4:	f010 bc4f 	b.w	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
			else if( snake_direction == SNAKE_LEFT )
90006cd8:	2b02      	cmp	r3, #2
90006cda:	d06a      	beq.n	90006db2 <_ZN21screen_snake_gameView15handleTickEventEv+0x516>
			else if( snake_direction == SNAKE_UP )
90006cdc:	2b01      	cmp	r3, #1
90006cde:	f000 80c7 	beq.w	90006e70 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d4>
			else if( snake_direction == SNAKE_DOWN )
90006ce2:	2b03      	cmp	r3, #3
90006ce4:	d01c      	beq.n	90006d20 <_ZN21screen_snake_gameView15handleTickEventEv+0x484>
        return parent;
90006ce6:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90006ce8:	6803      	ldr	r3, [r0, #0]
90006cea:	695b      	ldr	r3, [r3, #20]
}
90006cec:	b003      	add	sp, #12
90006cee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
90006cf2:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
90006cf4:	88eb      	ldrh	r3, [r5, #6]
90006cf6:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90006cfa:	f63f adf2 	bhi.w	900068e2 <_ZN21screen_snake_gameView15handleTickEventEv+0x46>
90006cfe:	e5f2      	b.n	900068e6 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
			head->pixel->getParent()->invalidate();
90006d00:	f8da 3000 	ldr.w	r3, [sl]
90006d04:	689d      	ldr	r5, [r3, #8]
90006d06:	e7ee      	b.n	90006ce6 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
        setX(x);
90006d08:	2114      	movs	r1, #20
90006d0a:	4620      	mov	r0, r4
90006d0c:	4790      	blx	r2
        setY(y);
90006d0e:	6823      	ldr	r3, [r4, #0]
90006d10:	e77a      	b.n	90006c08 <_ZN21screen_snake_gameView15handleTickEventEv+0x36c>
90006d12:	2132      	movs	r1, #50	; 0x32
90006d14:	4620      	mov	r0, r4
90006d16:	4798      	blx	r3
90006d18:	e77c      	b.n	90006c14 <_ZN21screen_snake_gameView15handleTickEventEv+0x378>
						game_started = false;
90006d1a:	2300      	movs	r3, #0
90006d1c:	703b      	strb	r3, [r7, #0]
90006d1e:	e613      	b.n	90006948 <_ZN21screen_snake_gameView15handleTickEventEv+0xac>
        return rect.y;
90006d20:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90006d24:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90006d28:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
90006d2c:	330a      	adds	r3, #10
90006d2e:	f8df 813c 	ldr.w	r8, [pc, #316]	; 90006e6c <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90006d32:	b21c      	sxth	r4, r3
        setX(x);
90006d34:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90006d36:	f8cc 100c 	str.w	r1, [ip, #12]
90006d3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006d3c:	4542      	cmp	r2, r8
90006d3e:	f040 810c 	bne.w	90006f5a <_ZN21screen_snake_gameView15handleTickEventEv+0x6be>
        rect.x = x;
90006d42:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006d44:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006d46:	4f47      	ldr	r7, [pc, #284]	; (90006e64 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006d48:	42bb      	cmp	r3, r7
90006d4a:	f040 8102 	bne.w	90006f52 <_ZN21screen_snake_gameView15handleTickEventEv+0x6b6>
        rect.y = y;
90006d4e:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006d50:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006d54:	689b      	ldr	r3, [r3, #8]
90006d56:	6958      	ldr	r0, [r3, #20]
90006d58:	6803      	ldr	r3, [r0, #0]
90006d5a:	695b      	ldr	r3, [r3, #20]
90006d5c:	4798      	blx	r3
				snake_piece *piece = head->next;
90006d5e:	f8da 3000 	ldr.w	r3, [sl]
90006d62:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006d64:	b974      	cbnz	r4, 90006d84 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e8>
90006d66:	e0d5      	b.n	90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006d68:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006d6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006d6c:	42bb      	cmp	r3, r7
90006d6e:	d16d      	bne.n	90006e4c <_ZN21screen_snake_gameView15handleTickEventEv+0x5b0>
        return parent;
90006d70:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006d72:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006d76:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006d78:	6803      	ldr	r3, [r0, #0]
90006d7a:	695b      	ldr	r3, [r3, #20]
90006d7c:	4798      	blx	r3
					piece = piece->next;
90006d7e:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006d80:	2c00      	cmp	r4, #0
90006d82:	d0bd      	beq.n	90006d00 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006d84:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006d88:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006d8c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006d90:	60e3      	str	r3, [r4, #12]
        setX(x);
90006d92:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006d94:	6121      	str	r1, [r4, #16]
90006d96:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006d98:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006d9c:	4546      	cmp	r6, r8
90006d9e:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006da2:	d0e1      	beq.n	90006d68 <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        setX(x);
90006da4:	4628      	mov	r0, r5
90006da6:	47b0      	blx	r6
        setY(y);
90006da8:	682b      	ldr	r3, [r5, #0]
90006daa:	e7de      	b.n	90006d6a <_ZN21screen_snake_gameView15handleTickEventEv+0x4ce>
        setX(x);
90006dac:	4638      	mov	r0, r7
90006dae:	4798      	blx	r3
90006db0:	e5f3      	b.n	9000699a <_ZN21screen_snake_gameView15handleTickEventEv+0xfe>
90006db2:	682a      	ldr	r2, [r5, #0]
        return rect.x;
90006db4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90006db8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90006e6c <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setX(x);
90006dbc:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
90006dbe:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
90006dc2:	4546      	cmp	r6, r8
				head->old_x = head->pixel->getX();
90006dc4:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90006dc8:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
90006dcc:	f8cc 4010 	str.w	r4, [ip, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90006dd0:	b219      	sxth	r1, r3
        setX(x);
90006dd2:	f040 80b2 	bne.w	90006f3a <_ZN21screen_snake_gameView15handleTickEventEv+0x69e>
        rect.x = x;
90006dd6:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006dd8:	6b53      	ldr	r3, [r2, #52]	; 0x34
90006dda:	4f22      	ldr	r7, [pc, #136]	; (90006e64 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006ddc:	42bb      	cmp	r3, r7
90006dde:	f040 80a8 	bne.w	90006f32 <_ZN21screen_snake_gameView15handleTickEventEv+0x696>
        rect.y = y;
90006de2:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006de4:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006de8:	689b      	ldr	r3, [r3, #8]
90006dea:	6958      	ldr	r0, [r3, #20]
90006dec:	6803      	ldr	r3, [r0, #0]
90006dee:	695b      	ldr	r3, [r3, #20]
90006df0:	4798      	blx	r3
				snake_piece *piece = head->next;
90006df2:	f8da 3000 	ldr.w	r3, [sl]
90006df6:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006df8:	b97c      	cbnz	r4, 90006e1a <_ZN21screen_snake_gameView15handleTickEventEv+0x57e>
90006dfa:	e08b      	b.n	90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006dfc:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006dfe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006e00:	42bb      	cmp	r3, r7
90006e02:	d11e      	bne.n	90006e42 <_ZN21screen_snake_gameView15handleTickEventEv+0x5a6>
        return parent;
90006e04:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006e06:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006e0a:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006e0c:	6803      	ldr	r3, [r0, #0]
90006e0e:	695b      	ldr	r3, [r3, #20]
90006e10:	4798      	blx	r3
					piece = piece->next;
90006e12:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006e14:	2c00      	cmp	r4, #0
90006e16:	f43f af73 	beq.w	90006d00 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006e1a:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006e1e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006e22:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006e26:	60e3      	str	r3, [r4, #12]
        setX(x);
90006e28:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006e2a:	6121      	str	r1, [r4, #16]
90006e2c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006e2e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006e32:	4546      	cmp	r6, r8
90006e34:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006e38:	d0e0      	beq.n	90006dfc <_ZN21screen_snake_gameView15handleTickEventEv+0x560>
        setX(x);
90006e3a:	4628      	mov	r0, r5
90006e3c:	47b0      	blx	r6
        setY(y);
90006e3e:	682b      	ldr	r3, [r5, #0]
90006e40:	e7dd      	b.n	90006dfe <_ZN21screen_snake_gameView15handleTickEventEv+0x562>
90006e42:	4649      	mov	r1, r9
90006e44:	4628      	mov	r0, r5
90006e46:	4798      	blx	r3
        return parent;
90006e48:	68a3      	ldr	r3, [r4, #8]
90006e4a:	e7de      	b.n	90006e0a <_ZN21screen_snake_gameView15handleTickEventEv+0x56e>
        setY(y);
90006e4c:	4649      	mov	r1, r9
90006e4e:	4628      	mov	r0, r5
90006e50:	4798      	blx	r3
        return parent;
90006e52:	68a3      	ldr	r3, [r4, #8]
90006e54:	e78f      	b.n	90006d76 <_ZN21screen_snake_gameView15handleTickEventEv+0x4da>
90006e56:	bf00      	nop
90006e58:	2401f6e0 	.word	0x2401f6e0
90006e5c:	24000034 	.word	0x24000034
90006e60:	240096d4 	.word	0x240096d4
90006e64:	90002299 	.word	0x90002299
90006e68:	240096dc 	.word	0x240096dc
90006e6c:	90002295 	.word	0x90002295
        return rect.y;
90006e70:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90006e74:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90006e78:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
90006e7c:	3b0a      	subs	r3, #10
90006e7e:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 90006f78 <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
90006e82:	b21c      	sxth	r4, r3
        setX(x);
90006e84:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90006e86:	f8cc 100c 	str.w	r1, [ip, #12]
90006e8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006e8c:	4542      	cmp	r2, r8
90006e8e:	d15c      	bne.n	90006f4a <_ZN21screen_snake_gameView15handleTickEventEv+0x6ae>
        rect.x = x;
90006e90:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006e92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006e94:	4f36      	ldr	r7, [pc, #216]	; (90006f70 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>)
90006e96:	42bb      	cmp	r3, r7
90006e98:	d153      	bne.n	90006f42 <_ZN21screen_snake_gameView15handleTickEventEv+0x6a6>
        rect.y = y;
90006e9a:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006e9c:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006ea0:	689b      	ldr	r3, [r3, #8]
90006ea2:	6958      	ldr	r0, [r3, #20]
90006ea4:	6803      	ldr	r3, [r0, #0]
90006ea6:	695b      	ldr	r3, [r3, #20]
90006ea8:	4798      	blx	r3
				snake_piece *piece = head->next;
90006eaa:	f8da 3000 	ldr.w	r3, [sl]
90006eae:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006eb0:	b97c      	cbnz	r4, 90006ed2 <_ZN21screen_snake_gameView15handleTickEventEv+0x636>
90006eb2:	e02f      	b.n	90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006eb4:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006eb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006eb8:	42bb      	cmp	r3, r7
90006eba:	d11e      	bne.n	90006efa <_ZN21screen_snake_gameView15handleTickEventEv+0x65e>
        return parent;
90006ebc:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006ebe:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006ec2:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006ec4:	6803      	ldr	r3, [r0, #0]
90006ec6:	695b      	ldr	r3, [r3, #20]
90006ec8:	4798      	blx	r3
					piece = piece->next;
90006eca:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006ecc:	2c00      	cmp	r4, #0
90006ece:	f43f af17 	beq.w	90006d00 <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006ed2:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006ed6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006eda:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006ede:	60e3      	str	r3, [r4, #12]
        setX(x);
90006ee0:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006ee2:	6121      	str	r1, [r4, #16]
90006ee4:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006ee6:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006eea:	4546      	cmp	r6, r8
90006eec:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006ef0:	d0e0      	beq.n	90006eb4 <_ZN21screen_snake_gameView15handleTickEventEv+0x618>
        setX(x);
90006ef2:	4628      	mov	r0, r5
90006ef4:	47b0      	blx	r6
        setY(y);
90006ef6:	682b      	ldr	r3, [r5, #0]
90006ef8:	e7dd      	b.n	90006eb6 <_ZN21screen_snake_gameView15handleTickEventEv+0x61a>
90006efa:	4649      	mov	r1, r9
90006efc:	4628      	mov	r0, r5
90006efe:	4798      	blx	r3
        return parent;
90006f00:	68a3      	ldr	r3, [r4, #8]
90006f02:	e7de      	b.n	90006ec2 <_ZN21screen_snake_gameView15handleTickEventEv+0x626>
        setY(y);
90006f04:	4621      	mov	r1, r4
90006f06:	4628      	mov	r0, r5
90006f08:	4798      	blx	r3
90006f0a:	e60b      	b.n	90006b24 <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
        setX(x);
90006f0c:	4628      	mov	r0, r5
90006f0e:	4798      	blx	r3
        setY(y);
90006f10:	682a      	ldr	r2, [r5, #0]
90006f12:	e601      	b.n	90006b18 <_ZN21screen_snake_gameView15handleTickEventEv+0x27c>
			head->pixel->getParent()->invalidate();
90006f14:	689d      	ldr	r5, [r3, #8]
90006f16:	e6e6      	b.n	90006ce6 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
					int food_new_y = pseudo_random2(tick) % 272;
90006f18:	4648      	mov	r0, r9
90006f1a:	4790      	blx	r2
90006f1c:	e5b2      	b.n	90006a84 <_ZN21screen_snake_gameView15handleTickEventEv+0x1e8>
					int food_new_x = pseudo_random(tick) % 480;
90006f1e:	4648      	mov	r0, r9
90006f20:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % 272;
90006f22:	6831      	ldr	r1, [r6, #0]
90006f24:	f8d9 2000 	ldr.w	r2, [r9]
90006f28:	e58b      	b.n	90006a42 <_ZN21screen_snake_gameView15handleTickEventEv+0x1a6>
90006f2a:	2100      	movs	r1, #0
90006f2c:	4638      	mov	r0, r7
90006f2e:	4790      	blx	r2
90006f30:	e540      	b.n	900069b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x118>
90006f32:	4621      	mov	r1, r4
90006f34:	4628      	mov	r0, r5
90006f36:	4798      	blx	r3
90006f38:	e754      	b.n	90006de4 <_ZN21screen_snake_gameView15handleTickEventEv+0x548>
        setX(x);
90006f3a:	4628      	mov	r0, r5
90006f3c:	47b0      	blx	r6
        setY(y);
90006f3e:	682a      	ldr	r2, [r5, #0]
90006f40:	e74a      	b.n	90006dd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
90006f42:	4621      	mov	r1, r4
90006f44:	4628      	mov	r0, r5
90006f46:	4798      	blx	r3
90006f48:	e7a8      	b.n	90006e9c <_ZN21screen_snake_gameView15handleTickEventEv+0x600>
        setX(x);
90006f4a:	4628      	mov	r0, r5
90006f4c:	4790      	blx	r2
        setY(y);
90006f4e:	682b      	ldr	r3, [r5, #0]
90006f50:	e79f      	b.n	90006e92 <_ZN21screen_snake_gameView15handleTickEventEv+0x5f6>
90006f52:	4621      	mov	r1, r4
90006f54:	4628      	mov	r0, r5
90006f56:	4798      	blx	r3
90006f58:	e6fa      	b.n	90006d50 <_ZN21screen_snake_gameView15handleTickEventEv+0x4b4>
        setX(x);
90006f5a:	4628      	mov	r0, r5
90006f5c:	4790      	blx	r2
        setY(y);
90006f5e:	682b      	ldr	r3, [r5, #0]
90006f60:	e6f0      	b.n	90006d44 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a8>
90006f62:	4c04      	ldr	r4, [pc, #16]	; (90006f74 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d8>)
90006f64:	e645      	b.n	90006bf2 <_ZN21screen_snake_gameView15handleTickEventEv+0x356>
						error();
90006f66:	f8d9 3000 	ldr.w	r3, [r9]
90006f6a:	4648      	mov	r0, r9
90006f6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90006f6e:	e6bd      	b.n	90006cec <_ZN21screen_snake_gameView15handleTickEventEv+0x450>
90006f70:	90002299 	.word	0x90002299
90006f74:	2401f6e0 	.word	0x2401f6e0
90006f78:	90002295 	.word	0x90002295

90006f7c <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90006f7c:	b500      	push	{lr}
          touchable(false),
90006f7e:	f44f 7180 	mov.w	r1, #256	; 0x100
90006f82:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90006f84:	4a0f      	ldr	r2, [pc, #60]	; (90006fc4 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
90006f86:	2300      	movs	r3, #0
          touchable(false),
90006f88:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90006f8c:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
90006f90:	490d      	ldr	r1, [pc, #52]	; (90006fc8 <_ZN21screen_snake_gameView5errorEv+0x4c>)
90006f92:	3004      	adds	r0, #4
90006f94:	9201      	str	r2, [sp, #4]
        color = newColor;
90006f96:	4a0d      	ldr	r2, [pc, #52]	; (90006fcc <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
90006f98:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90006f9c:	920b      	str	r2, [sp, #44]	; 0x2c
90006f9e:	e9cd 3102 	strd	r3, r1, [sp, #8]
90006fa2:	a901      	add	r1, sp, #4
          nextSibling(0),
90006fa4:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
90006fa8:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90006fac:	e9cd 3304 	strd	r3, r3, [sp, #16]
90006fb0:	f009 fe92 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90006fb4:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
90006fb6:	6803      	ldr	r3, [r0, #0]
90006fb8:	695b      	ldr	r3, [r3, #20]
90006fba:	4798      	blx	r3
}
90006fbc:	b00d      	add	sp, #52	; 0x34
90006fbe:	f85d fb04 	ldr.w	pc, [sp], #4
90006fc2:	bf00      	nop
90006fc4:	9002b888 	.word	0x9002b888
90006fc8:	011001e0 	.word	0x011001e0
90006fcc:	ffff0000 	.word	0xffff0000

90006fd0 <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
90006fd0:	4770      	bx	lr
90006fd2:	bf00      	nop

90006fd4 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
90006fd4:	3804      	subs	r0, #4
90006fd6:	4770      	bx	lr

90006fd8 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
90006fd8:	4770      	bx	lr
90006fda:	bf00      	nop

90006fdc <_ZN30screen_tictactoe_gamePresenterD0Ev>:
90006fdc:	b510      	push	{r4, lr}
90006fde:	4604      	mov	r4, r0
90006fe0:	2110      	movs	r1, #16
90006fe2:	f020 fb65 	bl	900276b0 <_ZdlPvj>
90006fe6:	4620      	mov	r0, r4
90006fe8:	bd10      	pop	{r4, pc}
90006fea:	bf00      	nop

90006fec <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
90006fec:	b500      	push	{lr}
90006fee:	3804      	subs	r0, #4
90006ff0:	b083      	sub	sp, #12
90006ff2:	2110      	movs	r1, #16
90006ff4:	9001      	str	r0, [sp, #4]
90006ff6:	f020 fb5b 	bl	900276b0 <_ZdlPvj>
90006ffa:	9801      	ldr	r0, [sp, #4]
90006ffc:	b003      	add	sp, #12
90006ffe:	f85d fb04 	ldr.w	pc, [sp], #4
90007002:	bf00      	nop

90007004 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
90007004:	4a06      	ldr	r2, [pc, #24]	; (90007020 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
90007006:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
90007008:	b410      	push	{r4}
9000700a:	2400      	movs	r4, #0
9000700c:	6084      	str	r4, [r0, #8]
    : view(v)
9000700e:	f102 0408 	add.w	r4, r2, #8
90007012:	3220      	adds	r2, #32
90007014:	e9c0 4200 	strd	r4, r2, [r0]
}
90007018:	f85d 4b04 	ldr.w	r4, [sp], #4
9000701c:	4770      	bx	lr
9000701e:	bf00      	nop
90007020:	9002b12c 	.word	0x9002b12c

90007024 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90007024:	4770      	bx	lr
90007026:	bf00      	nop

90007028 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90007028:	4b22      	ldr	r3, [pc, #136]	; (900070b4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
9000702a:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
9000702c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
		symbol = 'O';
90007030:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int y, int x) {
90007032:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90007034:	4d20      	ldr	r5, [pc, #128]	; (900070b8 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
90007036:	bf14      	ite	ne
90007038:	2458      	movne	r4, #88	; 0x58
9000703a:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000703c:	f815 c003 	ldrb.w	ip, [r5, r3]
90007040:	442b      	add	r3, r5
90007042:	45a4      	cmp	ip, r4
90007044:	d109      	bne.n	9000705a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90007046:	f893 e001 	ldrb.w	lr, [r3, #1]
9000704a:	45e6      	cmp	lr, ip
9000704c:	d105      	bne.n	9000705a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
9000704e:	789b      	ldrb	r3, [r3, #2]
90007050:	4573      	cmp	r3, lr
90007052:	d102      	bne.n	9000705a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90007054:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
90007058:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
9000705a:	5c6b      	ldrb	r3, [r5, r1]
9000705c:	42a3      	cmp	r3, r4
9000705e:	d107      	bne.n	90007070 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90007060:	186b      	adds	r3, r5, r1
90007062:	f893 c003 	ldrb.w	ip, [r3, #3]
90007066:	45a4      	cmp	ip, r4
90007068:	d102      	bne.n	90007070 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
9000706a:	799b      	ldrb	r3, [r3, #6]
9000706c:	42a3      	cmp	r3, r4
9000706e:	d0f1      	beq.n	90007054 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90007070:	428a      	cmp	r2, r1
90007072:	d00a      	beq.n	9000708a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90007074:	4411      	add	r1, r2
90007076:	2902      	cmp	r1, #2
90007078:	d011      	beq.n	9000709e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
9000707a:	4b10      	ldr	r3, [pc, #64]	; (900070bc <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
9000707c:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90007080:	2b09      	cmp	r3, #9
90007082:	bf14      	ite	ne
90007084:	2000      	movne	r0, #0
90007086:	2003      	moveq	r0, #3
}
90007088:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
9000708a:	782b      	ldrb	r3, [r5, #0]
9000708c:	42a3      	cmp	r3, r4
9000708e:	d1f1      	bne.n	90007074 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90007090:	792b      	ldrb	r3, [r5, #4]
90007092:	42a3      	cmp	r3, r4
90007094:	d1ee      	bne.n	90007074 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90007096:	7a2b      	ldrb	r3, [r5, #8]
90007098:	42a3      	cmp	r3, r4
9000709a:	d0db      	beq.n	90007054 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
9000709c:	e7ea      	b.n	90007074 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
9000709e:	78ab      	ldrb	r3, [r5, #2]
900070a0:	42a3      	cmp	r3, r4
900070a2:	d1ea      	bne.n	9000707a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
900070a4:	792b      	ldrb	r3, [r5, #4]
900070a6:	42a3      	cmp	r3, r4
900070a8:	d1e7      	bne.n	9000707a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
900070aa:	79ab      	ldrb	r3, [r5, #6]
900070ac:	42a3      	cmp	r3, r4
900070ae:	d0d1      	beq.n	90007054 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
900070b0:	e7e3      	b.n	9000707a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
900070b2:	bf00      	nop
900070b4:	24000038 	.word	0x24000038
900070b8:	2401f6e4 	.word	0x2401f6e4
900070bc:	2401f6f0 	.word	0x2401f6f0

900070c0 <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
900070c0:	4b03      	ldr	r3, [pc, #12]	; (900070d0 <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
900070c2:	b510      	push	{r4, lr}
900070c4:	4604      	mov	r4, r0
900070c6:	6003      	str	r3, [r0, #0]
900070c8:	f7fd ff62 	bl	90004f90 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
900070cc:	4620      	mov	r0, r4
900070ce:	bd10      	pop	{r4, pc}
900070d0:	9002b15c 	.word	0x9002b15c

900070d4 <_ZN25screen_tictactoe_gameViewD0Ev>:
900070d4:	4b06      	ldr	r3, [pc, #24]	; (900070f0 <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
900070d6:	b510      	push	{r4, lr}
900070d8:	4604      	mov	r4, r0
900070da:	6003      	str	r3, [r0, #0]
900070dc:	f7fd ff58 	bl	90004f90 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
900070e0:	f242 6128 	movw	r1, #9768	; 0x2628
900070e4:	4620      	mov	r0, r4
900070e6:	f020 fae3 	bl	900276b0 <_ZdlPvj>
900070ea:	4620      	mov	r0, r4
900070ec:	bd10      	pop	{r4, pc}
900070ee:	bf00      	nop
900070f0:	9002b15c 	.word	0x9002b15c

900070f4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
900070f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][1] == 0 ) {
900070f6:	4e27      	ldr	r6, [pc, #156]	; (90007194 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>)
900070f8:	7873      	ldrb	r3, [r6, #1]
900070fa:	bb5b      	cbnz	r3, 90007154 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x60>
		if( turn ) {
900070fc:	4d26      	ldr	r5, [pc, #152]	; (90007198 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa4>)
900070fe:	4604      	mov	r4, r0
        visible = vis;
90007100:	2201      	movs	r2, #1
90007102:	782b      	ldrb	r3, [r5, #0]
90007104:	bb3b      	cbnz	r3, 90007156 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
			board[0][1] = 'O';
90007106:	234f      	movs	r3, #79	; 0x4f
90007108:	f880 2789 	strb.w	r2, [r0, #1929]	; 0x789
			pos2_circle.invalidate();
9000710c:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
90007110:	7073      	strb	r3, [r6, #1]
			pos2_circle.invalidate();
90007112:	f010 fa30 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007116:	4a21      	ldr	r2, [pc, #132]	; (9000719c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa8>)
90007118:	8813      	ldrh	r3, [r2, #0]
9000711a:	3301      	adds	r3, #1
9000711c:	b21b      	sxth	r3, r3
9000711e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
90007120:	6822      	ldr	r2, [r4, #0]
90007122:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007124:	4a1e      	ldr	r2, [pc, #120]	; (900071a0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>)
90007126:	4297      	cmp	r7, r2
90007128:	d11e      	bne.n	90007168 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x74>
	if(turn)
9000712a:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
9000712c:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
9000712e:	2800      	cmp	r0, #0
90007130:	bf14      	ite	ne
90007132:	2458      	movne	r4, #88	; 0x58
90007134:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007136:	42a2      	cmp	r2, r4
90007138:	d127      	bne.n	9000718a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x96>
9000713a:	7931      	ldrb	r1, [r6, #4]
9000713c:	4291      	cmp	r1, r2
9000713e:	d11e      	bne.n	9000717e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x8a>
90007140:	7972      	ldrb	r2, [r6, #5]
90007142:	428a      	cmp	r2, r1
90007144:	d11b      	bne.n	9000717e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x8a>
            if( turn )
90007146:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000714a:	4a16      	ldr	r2, [pc, #88]	; (900071a4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb0>)
9000714c:	2101      	movs	r1, #1
			result = temp_result;
9000714e:	4b16      	ldr	r3, [pc, #88]	; (900071a8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
			game_over = true;
90007150:	7011      	strb	r1, [r2, #0]
			result = temp_result;
90007152:	8018      	strh	r0, [r3, #0]
}
90007154:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][1] = 'X';
90007156:	2358      	movs	r3, #88	; 0x58
90007158:	f880 275d 	strb.w	r2, [r0, #1885]	; 0x75d
			pos2_cross.invalidate();
9000715c:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90007160:	7073      	strb	r3, [r6, #1]
			pos2_cross.invalidate();
90007162:	f010 fa08 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
90007166:	e7d6      	b.n	90007116 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x22>
		short temp_result = is_game_over(0, 1);
90007168:	2201      	movs	r2, #1
9000716a:	2100      	movs	r1, #0
9000716c:	4620      	mov	r0, r4
9000716e:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007170:	2800      	cmp	r0, #0
90007172:	d1ea      	bne.n	9000714a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x56>
		turn = !turn;
90007174:	7828      	ldrb	r0, [r5, #0]
90007176:	f080 0001 	eor.w	r0, r0, #1
9000717a:	7028      	strb	r0, [r5, #0]
}
9000717c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
9000717e:	7832      	ldrb	r2, [r6, #0]
90007180:	42a2      	cmp	r2, r4
90007182:	d102      	bne.n	9000718a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x96>
90007184:	79b2      	ldrb	r2, [r6, #6]
90007186:	42a2      	cmp	r2, r4
90007188:	d0dd      	beq.n	90007146 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x52>
	if( turn_number == 9 )
9000718a:	2b09      	cmp	r3, #9
9000718c:	d1f3      	bne.n	90007176 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
		return 3;
9000718e:	2003      	movs	r0, #3
90007190:	e7db      	b.n	9000714a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x56>
90007192:	bf00      	nop
90007194:	2401f6e4 	.word	0x2401f6e4
90007198:	24000038 	.word	0x24000038
9000719c:	2401f6f0 	.word	0x2401f6f0
900071a0:	90007029 	.word	0x90007029
900071a4:	2401f6ed 	.word	0x2401f6ed
900071a8:	2401f6ee 	.word	0x2401f6ee

900071ac <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
900071ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][0] == 0 ) {
900071ae:	4e2b      	ldr	r6, [pc, #172]	; (9000725c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb0>)
900071b0:	79b3      	ldrb	r3, [r6, #6]
900071b2:	bb5b      	cbnz	r3, 9000720c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
		if( turn ) {
900071b4:	4d2a      	ldr	r5, [pc, #168]	; (90007260 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>)
900071b6:	4604      	mov	r4, r0
900071b8:	2201      	movs	r2, #1
900071ba:	782b      	ldrb	r3, [r5, #0]
900071bc:	bb3b      	cbnz	r3, 9000720e <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x62>
			board[2][0] = 'O';
900071be:	234f      	movs	r3, #79	; 0x4f
900071c0:	f880 2915 	strb.w	r2, [r0, #2325]	; 0x915
			pos7_circle.invalidate();
900071c4:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
900071c8:	71b3      	strb	r3, [r6, #6]
			pos7_circle.invalidate();
900071ca:	f010 f9d4 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900071ce:	4a25      	ldr	r2, [pc, #148]	; (90007264 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb8>)
900071d0:	8813      	ldrh	r3, [r2, #0]
900071d2:	3301      	adds	r3, #1
900071d4:	b21b      	sxth	r3, r3
900071d6:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
900071d8:	6822      	ldr	r2, [r4, #0]
900071da:	6d17      	ldr	r7, [r2, #80]	; 0x50
900071dc:	4a22      	ldr	r2, [pc, #136]	; (90007268 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
900071de:	4297      	cmp	r7, r2
900071e0:	d11e      	bne.n	90007220 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x74>
	if(turn)
900071e2:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900071e4:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
900071e6:	2800      	cmp	r0, #0
900071e8:	bf14      	ite	ne
900071ea:	2458      	movne	r4, #88	; 0x58
900071ec:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900071ee:	42a2      	cmp	r2, r4
900071f0:	d121      	bne.n	90007236 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x8a>
900071f2:	7871      	ldrb	r1, [r6, #1]
900071f4:	4291      	cmp	r1, r2
900071f6:	d11e      	bne.n	90007236 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x8a>
900071f8:	78b2      	ldrb	r2, [r6, #2]
900071fa:	428a      	cmp	r2, r1
900071fc:	d12a      	bne.n	90007254 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
                if( turn )
900071fe:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007202:	4a1a      	ldr	r2, [pc, #104]	; (9000726c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
90007204:	2101      	movs	r1, #1
			result = temp_result;
90007206:	4b1a      	ldr	r3, [pc, #104]	; (90007270 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
			game_over = true;
90007208:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000720a:	8018      	strh	r0, [r3, #0]
}
9000720c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][0] = 'X';
9000720e:	2358      	movs	r3, #88	; 0x58
90007210:	f880 2941 	strb.w	r2, [r0, #2369]	; 0x941
			pos7_cross.invalidate();
90007214:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
90007218:	71b3      	strb	r3, [r6, #6]
			pos7_cross.invalidate();
9000721a:	f010 f9ac 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
9000721e:	e7d6      	b.n	900071ce <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x22>
		short temp_result = is_game_over(2, 0);
90007220:	2200      	movs	r2, #0
90007222:	2102      	movs	r1, #2
90007224:	4620      	mov	r0, r4
90007226:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007228:	2800      	cmp	r0, #0
9000722a:	d1ea      	bne.n	90007202 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x56>
		turn = !turn;
9000722c:	7828      	ldrb	r0, [r5, #0]
9000722e:	f080 0001 	eor.w	r0, r0, #1
90007232:	7028      	strb	r0, [r5, #0]
}
90007234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
90007236:	78b2      	ldrb	r2, [r6, #2]
90007238:	42a2      	cmp	r2, r4
9000723a:	d10b      	bne.n	90007254 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
9000723c:	7972      	ldrb	r2, [r6, #5]
9000723e:	42a2      	cmp	r2, r4
90007240:	d102      	bne.n	90007248 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
90007242:	7a32      	ldrb	r2, [r6, #8]
90007244:	42a2      	cmp	r2, r4
90007246:	d0da      	beq.n	900071fe <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
90007248:	7932      	ldrb	r2, [r6, #4]
9000724a:	42a2      	cmp	r2, r4
9000724c:	d102      	bne.n	90007254 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
9000724e:	79b2      	ldrb	r2, [r6, #6]
90007250:	42a2      	cmp	r2, r4
90007252:	d0d4      	beq.n	900071fe <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x52>
	if( turn_number == 9 )
90007254:	2b09      	cmp	r3, #9
90007256:	d1ea      	bne.n	9000722e <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x82>
		return 3;
90007258:	2003      	movs	r0, #3
9000725a:	e7d2      	b.n	90007202 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x56>
9000725c:	2401f6e4 	.word	0x2401f6e4
90007260:	24000038 	.word	0x24000038
90007264:	2401f6f0 	.word	0x2401f6f0
90007268:	90007029 	.word	0x90007029
9000726c:	2401f6ed 	.word	0x2401f6ed
90007270:	2401f6ee 	.word	0x2401f6ee

90007274 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90007274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][1] == 0 ) {
90007276:	4e28      	ldr	r6, [pc, #160]	; (90007318 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xa4>)
90007278:	79f3      	ldrb	r3, [r6, #7]
9000727a:	bb5b      	cbnz	r3, 900072d4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x60>
		if( turn ) {
9000727c:	4d27      	ldr	r5, [pc, #156]	; (9000731c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xa8>)
9000727e:	4604      	mov	r4, r0
90007280:	2201      	movs	r2, #1
90007282:	782b      	ldrb	r3, [r5, #0]
90007284:	bb3b      	cbnz	r3, 900072d6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
			board[2][1] = 'O';
90007286:	234f      	movs	r3, #79	; 0x4f
90007288:	f880 296d 	strb.w	r2, [r0, #2413]	; 0x96d
			pos8_circle.invalidate();
9000728c:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
90007290:	71f3      	strb	r3, [r6, #7]
			pos8_circle.invalidate();
90007292:	f010 f970 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007296:	4a22      	ldr	r2, [pc, #136]	; (90007320 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>)
90007298:	8813      	ldrh	r3, [r2, #0]
9000729a:	3301      	adds	r3, #1
9000729c:	b21b      	sxth	r3, r3
9000729e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
900072a0:	6822      	ldr	r2, [r4, #0]
900072a2:	6d17      	ldr	r7, [r2, #80]	; 0x50
900072a4:	4a1f      	ldr	r2, [pc, #124]	; (90007324 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb0>)
900072a6:	4297      	cmp	r7, r2
900072a8:	d11e      	bne.n	900072e8 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x74>
	if(turn)
900072aa:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900072ac:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
900072ae:	2800      	cmp	r0, #0
900072b0:	bf14      	ite	ne
900072b2:	2458      	movne	r4, #88	; 0x58
900072b4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900072b6:	42a2      	cmp	r2, r4
900072b8:	d121      	bne.n	900072fe <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x8a>
900072ba:	7931      	ldrb	r1, [r6, #4]
900072bc:	4291      	cmp	r1, r2
900072be:	d11e      	bne.n	900072fe <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x8a>
900072c0:	7972      	ldrb	r2, [r6, #5]
900072c2:	428a      	cmp	r2, r1
900072c4:	d124      	bne.n	90007310 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
            if( turn )
900072c6:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900072ca:	4a17      	ldr	r2, [pc, #92]	; (90007328 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
900072cc:	2101      	movs	r1, #1
			result = temp_result;
900072ce:	4b17      	ldr	r3, [pc, #92]	; (9000732c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
			game_over = true;
900072d0:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900072d2:	8018      	strh	r0, [r3, #0]
}
900072d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][1] = 'X';
900072d6:	2358      	movs	r3, #88	; 0x58
900072d8:	f880 2999 	strb.w	r2, [r0, #2457]	; 0x999
			pos8_cross.invalidate();
900072dc:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
900072e0:	71f3      	strb	r3, [r6, #7]
			pos8_cross.invalidate();
900072e2:	f010 f948 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
900072e6:	e7d6      	b.n	90007296 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x22>
		short temp_result = is_game_over(2, 1);
900072e8:	2201      	movs	r2, #1
900072ea:	2102      	movs	r1, #2
900072ec:	4620      	mov	r0, r4
900072ee:	47b8      	blx	r7
		if( temp_result != 0 ) {
900072f0:	2800      	cmp	r0, #0
900072f2:	d1ea      	bne.n	900072ca <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x56>
		turn = !turn;
900072f4:	7828      	ldrb	r0, [r5, #0]
900072f6:	f080 0001 	eor.w	r0, r0, #1
900072fa:	7028      	strb	r0, [r5, #0]
}
900072fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900072fe:	78b2      	ldrb	r2, [r6, #2]
90007300:	42a2      	cmp	r2, r4
90007302:	d105      	bne.n	90007310 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
90007304:	7972      	ldrb	r2, [r6, #5]
90007306:	42a2      	cmp	r2, r4
90007308:	d102      	bne.n	90007310 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
9000730a:	7a32      	ldrb	r2, [r6, #8]
9000730c:	42a2      	cmp	r2, r4
9000730e:	d0da      	beq.n	900072c6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x52>
	if( turn_number == 9 )
90007310:	2b09      	cmp	r3, #9
90007312:	d1f0      	bne.n	900072f6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
		return 3;
90007314:	2003      	movs	r0, #3
90007316:	e7d8      	b.n	900072ca <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x56>
90007318:	2401f6e4 	.word	0x2401f6e4
9000731c:	24000038 	.word	0x24000038
90007320:	2401f6f0 	.word	0x2401f6f0
90007324:	90007029 	.word	0x90007029
90007328:	2401f6ed 	.word	0x2401f6ed
9000732c:	2401f6ee 	.word	0x2401f6ee

90007330 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90007330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][0] == 0 ) {
90007332:	4d2a      	ldr	r5, [pc, #168]	; (900073dc <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xac>)
90007334:	782b      	ldrb	r3, [r5, #0]
90007336:	bb5b      	cbnz	r3, 90007390 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x60>
		if( turn ) {
90007338:	4e29      	ldr	r6, [pc, #164]	; (900073e0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb0>)
9000733a:	4604      	mov	r4, r0
9000733c:	2201      	movs	r2, #1
9000733e:	7833      	ldrb	r3, [r6, #0]
90007340:	bb3b      	cbnz	r3, 90007392 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
			board[0][0] = 'O';
90007342:	234f      	movs	r3, #79	; 0x4f
90007344:	f880 2705 	strb.w	r2, [r0, #1797]	; 0x705
			pos1_circle.invalidate();
90007348:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
9000734c:	702b      	strb	r3, [r5, #0]
			pos1_circle.invalidate();
9000734e:	f010 f912 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007352:	4a24      	ldr	r2, [pc, #144]	; (900073e4 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb4>)
90007354:	8813      	ldrh	r3, [r2, #0]
90007356:	3301      	adds	r3, #1
90007358:	b21b      	sxth	r3, r3
9000735a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
9000735c:	6822      	ldr	r2, [r4, #0]
9000735e:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007360:	4a21      	ldr	r2, [pc, #132]	; (900073e8 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb8>)
90007362:	4297      	cmp	r7, r2
90007364:	d11e      	bne.n	900073a4 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x74>
	if(turn)
90007366:	7830      	ldrb	r0, [r6, #0]
        if(board[x][i] != symbol)
90007368:	782a      	ldrb	r2, [r5, #0]
		symbol = 'O';
9000736a:	2800      	cmp	r0, #0
9000736c:	bf14      	ite	ne
9000736e:	2458      	movne	r4, #88	; 0x58
90007370:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007372:	42a2      	cmp	r2, r4
90007374:	d12d      	bne.n	900073d2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa2>
90007376:	7869      	ldrb	r1, [r5, #1]
90007378:	4291      	cmp	r1, r2
9000737a:	d11e      	bne.n	900073ba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8a>
9000737c:	78aa      	ldrb	r2, [r5, #2]
9000737e:	428a      	cmp	r2, r1
90007380:	d11b      	bne.n	900073ba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8a>
                if( turn )
90007382:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007386:	4a19      	ldr	r2, [pc, #100]	; (900073ec <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
90007388:	2101      	movs	r1, #1
			result = temp_result;
9000738a:	4b19      	ldr	r3, [pc, #100]	; (900073f0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
			game_over = true;
9000738c:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000738e:	8018      	strh	r0, [r3, #0]
}
90007390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][0] = 'X';
90007392:	2358      	movs	r3, #88	; 0x58
90007394:	f880 2731 	strb.w	r2, [r0, #1841]	; 0x731
			pos1_cross.invalidate();
90007398:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
9000739c:	702b      	strb	r3, [r5, #0]
			pos1_cross.invalidate();
9000739e:	f010 f8ea 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
900073a2:	e7d6      	b.n	90007352 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x22>
		short temp_result = is_game_over(0, 0);
900073a4:	2200      	movs	r2, #0
900073a6:	4620      	mov	r0, r4
900073a8:	4611      	mov	r1, r2
900073aa:	47b8      	blx	r7
		if( temp_result != 0 ) {
900073ac:	2800      	cmp	r0, #0
900073ae:	d1ea      	bne.n	90007386 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x56>
		turn = !turn;
900073b0:	7833      	ldrb	r3, [r6, #0]
900073b2:	f083 0301 	eor.w	r3, r3, #1
900073b6:	7033      	strb	r3, [r6, #0]
}
900073b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900073ba:	78ea      	ldrb	r2, [r5, #3]
900073bc:	42a2      	cmp	r2, r4
900073be:	d102      	bne.n	900073c6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x96>
900073c0:	79aa      	ldrb	r2, [r5, #6]
900073c2:	42a2      	cmp	r2, r4
900073c4:	d0dd      	beq.n	90007382 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x52>
            if(board[i][i] != symbol)
900073c6:	792a      	ldrb	r2, [r5, #4]
900073c8:	42a2      	cmp	r2, r4
900073ca:	d102      	bne.n	900073d2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa2>
900073cc:	7a2a      	ldrb	r2, [r5, #8]
900073ce:	42a2      	cmp	r2, r4
900073d0:	d0d7      	beq.n	90007382 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x52>
	if( turn_number == 9 )
900073d2:	2b09      	cmp	r3, #9
900073d4:	d1ec      	bne.n	900073b0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x80>
		return 3;
900073d6:	2003      	movs	r0, #3
900073d8:	e7d5      	b.n	90007386 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x56>
900073da:	bf00      	nop
900073dc:	2401f6e4 	.word	0x2401f6e4
900073e0:	24000038 	.word	0x24000038
900073e4:	2401f6f0 	.word	0x2401f6f0
900073e8:	90007029 	.word	0x90007029
900073ec:	2401f6ed 	.word	0x2401f6ed
900073f0:	2401f6ee 	.word	0x2401f6ee

900073f4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
900073f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][2] == 0 ) {
900073f6:	4d2d      	ldr	r5, [pc, #180]	; (900074ac <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xb8>)
900073f8:	7a2b      	ldrb	r3, [r5, #8]
900073fa:	bb5b      	cbnz	r3, 90007454 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x60>
		if( turn ) {
900073fc:	4e2c      	ldr	r6, [pc, #176]	; (900074b0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbc>)
900073fe:	4604      	mov	r4, r0
90007400:	2201      	movs	r2, #1
90007402:	7833      	ldrb	r3, [r6, #0]
90007404:	bb3b      	cbnz	r3, 90007456 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
			board[2][2] = 'O';
90007406:	234f      	movs	r3, #79	; 0x4f
90007408:	f880 29c5 	strb.w	r2, [r0, #2501]	; 0x9c5
			pos9_circle.invalidate();
9000740c:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
90007410:	722b      	strb	r3, [r5, #8]
			pos9_circle.invalidate();
90007412:	f010 f8b0 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007416:	4a27      	ldr	r2, [pc, #156]	; (900074b4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc0>)
90007418:	8813      	ldrh	r3, [r2, #0]
9000741a:	3301      	adds	r3, #1
9000741c:	b21b      	sxth	r3, r3
9000741e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90007420:	6822      	ldr	r2, [r4, #0]
90007422:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007424:	4a24      	ldr	r2, [pc, #144]	; (900074b8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc4>)
90007426:	4297      	cmp	r7, r2
90007428:	d11e      	bne.n	90007468 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x74>
	if(turn)
9000742a:	7830      	ldrb	r0, [r6, #0]
        if(board[x][i] != symbol)
9000742c:	79aa      	ldrb	r2, [r5, #6]
		symbol = 'O';
9000742e:	2800      	cmp	r0, #0
90007430:	bf14      	ite	ne
90007432:	2458      	movne	r4, #88	; 0x58
90007434:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007436:	42a2      	cmp	r2, r4
90007438:	d121      	bne.n	9000747e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
9000743a:	79e9      	ldrb	r1, [r5, #7]
9000743c:	4291      	cmp	r1, r2
9000743e:	d11e      	bne.n	9000747e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
90007440:	7a2a      	ldrb	r2, [r5, #8]
90007442:	428a      	cmp	r2, r1
90007444:	d11b      	bne.n	9000747e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
                if( turn )
90007446:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000744a:	4a1c      	ldr	r2, [pc, #112]	; (900074bc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
9000744c:	2101      	movs	r1, #1
			result = temp_result;
9000744e:	4b1c      	ldr	r3, [pc, #112]	; (900074c0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
			game_over = true;
90007450:	7011      	strb	r1, [r2, #0]
			result = temp_result;
90007452:	8018      	strh	r0, [r3, #0]
}
90007454:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][2] = 'X';
90007456:	2358      	movs	r3, #88	; 0x58
90007458:	f880 29f1 	strb.w	r2, [r0, #2545]	; 0x9f1
			pos9_cross.invalidate();
9000745c:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90007460:	722b      	strb	r3, [r5, #8]
			pos9_cross.invalidate();
90007462:	f010 f888 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
90007466:	e7d6      	b.n	90007416 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x22>
		short temp_result = is_game_over(2, 2);
90007468:	2202      	movs	r2, #2
9000746a:	4620      	mov	r0, r4
9000746c:	4611      	mov	r1, r2
9000746e:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007470:	2800      	cmp	r0, #0
90007472:	d1ea      	bne.n	9000744a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x56>
		turn = !turn;
90007474:	7833      	ldrb	r3, [r6, #0]
90007476:	f083 0301 	eor.w	r3, r3, #1
9000747a:	7033      	strb	r3, [r6, #0]
}
9000747c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
9000747e:	78aa      	ldrb	r2, [r5, #2]
90007480:	42a2      	cmp	r2, r4
90007482:	d105      	bne.n	90007490 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9c>
90007484:	796a      	ldrb	r2, [r5, #5]
90007486:	42a2      	cmp	r2, r4
90007488:	d102      	bne.n	90007490 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9c>
9000748a:	7a2a      	ldrb	r2, [r5, #8]
9000748c:	42a2      	cmp	r2, r4
9000748e:	d0da      	beq.n	90007446 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x52>
            if(board[i][i] != symbol)
90007490:	782a      	ldrb	r2, [r5, #0]
90007492:	42a2      	cmp	r2, r4
90007494:	d105      	bne.n	900074a2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xae>
90007496:	792a      	ldrb	r2, [r5, #4]
90007498:	42a2      	cmp	r2, r4
9000749a:	d102      	bne.n	900074a2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xae>
9000749c:	7a2a      	ldrb	r2, [r5, #8]
9000749e:	42a2      	cmp	r2, r4
900074a0:	d0d1      	beq.n	90007446 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x52>
	if( turn_number == 9 )
900074a2:	2b09      	cmp	r3, #9
900074a4:	d1e6      	bne.n	90007474 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x80>
		return 3;
900074a6:	2003      	movs	r0, #3
900074a8:	e7cf      	b.n	9000744a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x56>
900074aa:	bf00      	nop
900074ac:	2401f6e4 	.word	0x2401f6e4
900074b0:	24000038 	.word	0x24000038
900074b4:	2401f6f0 	.word	0x2401f6f0
900074b8:	90007029 	.word	0x90007029
900074bc:	2401f6ed 	.word	0x2401f6ed
900074c0:	2401f6ee 	.word	0x2401f6ee

900074c4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
900074c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][2] == 0 ) {
900074c6:	4e2a      	ldr	r6, [pc, #168]	; (90007570 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>)
900074c8:	78b3      	ldrb	r3, [r6, #2]
900074ca:	bb5b      	cbnz	r3, 90007524 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x60>
		if( turn ) {
900074cc:	4d29      	ldr	r5, [pc, #164]	; (90007574 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb0>)
900074ce:	4604      	mov	r4, r0
900074d0:	2201      	movs	r2, #1
900074d2:	782b      	ldrb	r3, [r5, #0]
900074d4:	bb3b      	cbnz	r3, 90007526 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
			board[0][2] = 'O';
900074d6:	234f      	movs	r3, #79	; 0x4f
900074d8:	f880 27e1 	strb.w	r2, [r0, #2017]	; 0x7e1
			pos3_circle.invalidate();
900074dc:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
900074e0:	70b3      	strb	r3, [r6, #2]
			pos3_circle.invalidate();
900074e2:	f010 f848 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900074e6:	4a24      	ldr	r2, [pc, #144]	; (90007578 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb4>)
900074e8:	8813      	ldrh	r3, [r2, #0]
900074ea:	3301      	adds	r3, #1
900074ec:	b21b      	sxth	r3, r3
900074ee:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
900074f0:	6822      	ldr	r2, [r4, #0]
900074f2:	6d17      	ldr	r7, [r2, #80]	; 0x50
900074f4:	4a21      	ldr	r2, [pc, #132]	; (9000757c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>)
900074f6:	4297      	cmp	r7, r2
900074f8:	d11e      	bne.n	90007538 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x74>
	if(turn)
900074fa:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900074fc:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
900074fe:	2800      	cmp	r0, #0
90007500:	bf14      	ite	ne
90007502:	2258      	movne	r2, #88	; 0x58
90007504:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
90007506:	42a2      	cmp	r2, r4
90007508:	d12d      	bne.n	90007566 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xa2>
9000750a:	79f1      	ldrb	r1, [r6, #7]
9000750c:	4291      	cmp	r1, r2
9000750e:	d11e      	bne.n	9000754e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x8a>
90007510:	7a37      	ldrb	r7, [r6, #8]
90007512:	428f      	cmp	r7, r1
90007514:	d11b      	bne.n	9000754e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x8a>
                if( turn )
90007516:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000751a:	4a19      	ldr	r2, [pc, #100]	; (90007580 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xbc>)
9000751c:	2101      	movs	r1, #1
			result = temp_result;
9000751e:	4b19      	ldr	r3, [pc, #100]	; (90007584 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
			game_over = true;
90007520:	7011      	strb	r1, [r2, #0]
			result = temp_result;
90007522:	8018      	strh	r0, [r3, #0]
}
90007524:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][2] = 'X';
90007526:	2358      	movs	r3, #88	; 0x58
90007528:	f880 27b5 	strb.w	r2, [r0, #1973]	; 0x7b5
			pos3_cross.invalidate();
9000752c:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
90007530:	70b3      	strb	r3, [r6, #2]
			pos3_cross.invalidate();
90007532:	f010 f820 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
90007536:	e7d6      	b.n	900074e6 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x22>
		short temp_result = is_game_over(0, 2);
90007538:	2202      	movs	r2, #2
9000753a:	2100      	movs	r1, #0
9000753c:	4620      	mov	r0, r4
9000753e:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007540:	2800      	cmp	r0, #0
90007542:	d1ea      	bne.n	9000751a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x56>
		turn = !turn;
90007544:	7828      	ldrb	r0, [r5, #0]
90007546:	f080 0001 	eor.w	r0, r0, #1
9000754a:	7028      	strb	r0, [r5, #0]
}
9000754c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
9000754e:	7831      	ldrb	r1, [r6, #0]
90007550:	42a1      	cmp	r1, r4
90007552:	d102      	bne.n	9000755a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x96>
90007554:	78f1      	ldrb	r1, [r6, #3]
90007556:	42a1      	cmp	r1, r4
90007558:	d0dd      	beq.n	90007516 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
9000755a:	78b1      	ldrb	r1, [r6, #2]
9000755c:	4291      	cmp	r1, r2
9000755e:	d102      	bne.n	90007566 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xa2>
90007560:	7931      	ldrb	r1, [r6, #4]
90007562:	4291      	cmp	r1, r2
90007564:	d0d7      	beq.n	90007516 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x52>
	if( turn_number == 9 )
90007566:	2b09      	cmp	r3, #9
90007568:	d1ed      	bne.n	90007546 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
		return 3;
9000756a:	2003      	movs	r0, #3
9000756c:	e7d5      	b.n	9000751a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x56>
9000756e:	bf00      	nop
90007570:	2401f6e4 	.word	0x2401f6e4
90007574:	24000038 	.word	0x24000038
90007578:	2401f6f0 	.word	0x2401f6f0
9000757c:	90007029 	.word	0x90007029
90007580:	2401f6ed 	.word	0x2401f6ed
90007584:	2401f6ee 	.word	0x2401f6ee

90007588 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90007588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][0] == 0 ) {
9000758a:	4e28      	ldr	r6, [pc, #160]	; (9000762c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa4>)
9000758c:	78f3      	ldrb	r3, [r6, #3]
9000758e:	bb5b      	cbnz	r3, 900075e8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x60>
		if( turn ) {
90007590:	4d27      	ldr	r5, [pc, #156]	; (90007630 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa8>)
90007592:	4604      	mov	r4, r0
90007594:	2201      	movs	r2, #1
90007596:	782b      	ldrb	r3, [r5, #0]
90007598:	bb3b      	cbnz	r3, 900075ea <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
			board[1][0] = 'O';
9000759a:	234f      	movs	r3, #79	; 0x4f
9000759c:	f880 2839 	strb.w	r2, [r0, #2105]	; 0x839
			pos4_circle.invalidate();
900075a0:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
900075a4:	70f3      	strb	r3, [r6, #3]
			pos4_circle.invalidate();
900075a6:	f00f ffe6 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900075aa:	4a22      	ldr	r2, [pc, #136]	; (90007634 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xac>)
900075ac:	8813      	ldrh	r3, [r2, #0]
900075ae:	3301      	adds	r3, #1
900075b0:	b21b      	sxth	r3, r3
900075b2:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
900075b4:	6822      	ldr	r2, [r4, #0]
900075b6:	6d17      	ldr	r7, [r2, #80]	; 0x50
900075b8:	4a1f      	ldr	r2, [pc, #124]	; (90007638 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
900075ba:	4297      	cmp	r7, r2
900075bc:	d11e      	bne.n	900075fc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x74>
	if(turn)
900075be:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900075c0:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
900075c2:	2800      	cmp	r0, #0
900075c4:	bf14      	ite	ne
900075c6:	2458      	movne	r4, #88	; 0x58
900075c8:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900075ca:	42a2      	cmp	r2, r4
900075cc:	d121      	bne.n	90007612 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x8a>
900075ce:	7871      	ldrb	r1, [r6, #1]
900075d0:	4291      	cmp	r1, r2
900075d2:	d127      	bne.n	90007624 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
900075d4:	78b2      	ldrb	r2, [r6, #2]
900075d6:	428a      	cmp	r2, r1
900075d8:	d11e      	bne.n	90007618 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
            if( turn )
900075da:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900075de:	4a17      	ldr	r2, [pc, #92]	; (9000763c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
900075e0:	2101      	movs	r1, #1
			result = temp_result;
900075e2:	4b17      	ldr	r3, [pc, #92]	; (90007640 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
			game_over = true;
900075e4:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900075e6:	8018      	strh	r0, [r3, #0]
}
900075e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][0] = 'X';
900075ea:	2358      	movs	r3, #88	; 0x58
900075ec:	f880 280d 	strb.w	r2, [r0, #2061]	; 0x80d
			pos4_cross.invalidate();
900075f0:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
900075f4:	70f3      	strb	r3, [r6, #3]
			pos4_cross.invalidate();
900075f6:	f00f ffbe 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
900075fa:	e7d6      	b.n	900075aa <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x22>
		short temp_result = is_game_over(1, 0);
900075fc:	2200      	movs	r2, #0
900075fe:	2101      	movs	r1, #1
90007600:	4620      	mov	r0, r4
90007602:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007604:	2800      	cmp	r0, #0
90007606:	d1ea      	bne.n	900075de <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x56>
		turn = !turn;
90007608:	7828      	ldrb	r0, [r5, #0]
9000760a:	f080 0001 	eor.w	r0, r0, #1
9000760e:	7028      	strb	r0, [r5, #0]
}
90007610:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
90007612:	7872      	ldrb	r2, [r6, #1]
90007614:	42a2      	cmp	r2, r4
90007616:	d105      	bne.n	90007624 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
90007618:	7932      	ldrb	r2, [r6, #4]
9000761a:	42a2      	cmp	r2, r4
9000761c:	d102      	bne.n	90007624 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
9000761e:	79f2      	ldrb	r2, [r6, #7]
90007620:	42a2      	cmp	r2, r4
90007622:	d0da      	beq.n	900075da <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x52>
	if( turn_number == 9 )
90007624:	2b09      	cmp	r3, #9
90007626:	d1f0      	bne.n	9000760a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
		return 3;
90007628:	2003      	movs	r0, #3
9000762a:	e7d8      	b.n	900075de <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x56>
9000762c:	2401f6e4 	.word	0x2401f6e4
90007630:	24000038 	.word	0x24000038
90007634:	2401f6f0 	.word	0x2401f6f0
90007638:	90007029 	.word	0x90007029
9000763c:	2401f6ed 	.word	0x2401f6ed
90007640:	2401f6ee 	.word	0x2401f6ee

90007644 <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
90007644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][1] == 0 ) {
90007646:	4d39      	ldr	r5, [pc, #228]	; (9000772c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>)
90007648:	792b      	ldrb	r3, [r5, #4]
9000764a:	bb5b      	cbnz	r3, 900076a4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x60>
		if( turn ) {
9000764c:	4e38      	ldr	r6, [pc, #224]	; (90007730 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xec>)
9000764e:	4604      	mov	r4, r0
90007650:	2201      	movs	r2, #1
90007652:	7833      	ldrb	r3, [r6, #0]
90007654:	bb3b      	cbnz	r3, 900076a6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
			board[1][1] = 'O';
90007656:	234f      	movs	r3, #79	; 0x4f
90007658:	f880 2891 	strb.w	r2, [r0, #2193]	; 0x891
			pos5_circle.invalidate();
9000765c:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90007660:	712b      	strb	r3, [r5, #4]
			pos5_circle.invalidate();
90007662:	f00f ff88 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007666:	4a33      	ldr	r2, [pc, #204]	; (90007734 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf0>)
90007668:	8813      	ldrh	r3, [r2, #0]
9000766a:	3301      	adds	r3, #1
9000766c:	b21b      	sxth	r3, r3
9000766e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90007670:	6822      	ldr	r2, [r4, #0]
90007672:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007674:	4a30      	ldr	r2, [pc, #192]	; (90007738 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf4>)
90007676:	4297      	cmp	r7, r2
90007678:	d11e      	bne.n	900076b8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x74>
	if(turn)
9000767a:	7832      	ldrb	r2, [r6, #0]
        if(board[x][i] != symbol)
9000767c:	78e9      	ldrb	r1, [r5, #3]
		symbol = 'O';
9000767e:	2a00      	cmp	r2, #0
90007680:	bf14      	ite	ne
90007682:	2458      	movne	r4, #88	; 0x58
90007684:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007686:	42a1      	cmp	r1, r4
90007688:	d121      	bne.n	900076ce <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8a>
9000768a:	7928      	ldrb	r0, [r5, #4]
9000768c:	4288      	cmp	r0, r1
9000768e:	d11e      	bne.n	900076ce <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8a>
90007690:	7969      	ldrb	r1, [r5, #5]
90007692:	4281      	cmp	r1, r0
90007694:	d134      	bne.n	90007700 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbc>
                if( turn )
90007696:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
9000769a:	4a28      	ldr	r2, [pc, #160]	; (9000773c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
9000769c:	2101      	movs	r1, #1
			result = temp_result;
9000769e:	4b28      	ldr	r3, [pc, #160]	; (90007740 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
			game_over = true;
900076a0:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900076a2:	8018      	strh	r0, [r3, #0]
}
900076a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][1] = 'X';
900076a6:	2358      	movs	r3, #88	; 0x58
900076a8:	f880 2865 	strb.w	r2, [r0, #2149]	; 0x865
			pos5_cross.invalidate();
900076ac:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
900076b0:	712b      	strb	r3, [r5, #4]
			pos5_cross.invalidate();
900076b2:	f00f ff60 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
900076b6:	e7d6      	b.n	90007666 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x22>
		short temp_result = is_game_over(1, 1);
900076b8:	2201      	movs	r2, #1
900076ba:	4620      	mov	r0, r4
900076bc:	4611      	mov	r1, r2
900076be:	47b8      	blx	r7
		if( temp_result != 0 ) {
900076c0:	2800      	cmp	r0, #0
900076c2:	d1ea      	bne.n	9000769a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x56>
		turn = !turn;
900076c4:	7833      	ldrb	r3, [r6, #0]
900076c6:	f083 0301 	eor.w	r3, r3, #1
900076ca:	7033      	strb	r3, [r6, #0]
}
900076cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900076ce:	7869      	ldrb	r1, [r5, #1]
900076d0:	42a1      	cmp	r1, r4
900076d2:	d123      	bne.n	9000771c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd8>
900076d4:	7929      	ldrb	r1, [r5, #4]
900076d6:	42a1      	cmp	r1, r4
900076d8:	d116      	bne.n	90007708 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
900076da:	79e9      	ldrb	r1, [r5, #7]
900076dc:	42a1      	cmp	r1, r4
900076de:	d0da      	beq.n	90007696 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
            if(board[i][i] != symbol)
900076e0:	7829      	ldrb	r1, [r5, #0]
900076e2:	42a1      	cmp	r1, r4
900076e4:	d113      	bne.n	9000770e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xca>
900076e6:	7a29      	ldrb	r1, [r5, #8]
900076e8:	42a1      	cmp	r1, r4
900076ea:	d0d4      	beq.n	90007696 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
900076ec:	78a9      	ldrb	r1, [r5, #2]
900076ee:	42a1      	cmp	r1, r4
900076f0:	d102      	bne.n	900076f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
900076f2:	79a9      	ldrb	r1, [r5, #6]
900076f4:	42a1      	cmp	r1, r4
900076f6:	d0ce      	beq.n	90007696 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
	if( turn_number == 9 )
900076f8:	2b09      	cmp	r3, #9
900076fa:	d1e3      	bne.n	900076c4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x80>
		return 3;
900076fc:	2003      	movs	r0, #3
900076fe:	e7cc      	b.n	9000769a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x56>
        if(board[i][y] != symbol)
90007700:	7869      	ldrb	r1, [r5, #1]
90007702:	42a1      	cmp	r1, r4
90007704:	d0e9      	beq.n	900076da <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x96>
90007706:	e7eb      	b.n	900076e0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9c>
            if(board[i][i] != symbol)
90007708:	7829      	ldrb	r1, [r5, #0]
9000770a:	42a1      	cmp	r1, r4
9000770c:	d0f4      	beq.n	900076f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
            if(board[i][(3-1)-i] != symbol)
9000770e:	78a9      	ldrb	r1, [r5, #2]
90007710:	42a1      	cmp	r1, r4
90007712:	d1f1      	bne.n	900076f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
90007714:	7929      	ldrb	r1, [r5, #4]
90007716:	42a1      	cmp	r1, r4
90007718:	d0eb      	beq.n	900076f2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xae>
9000771a:	e7ed      	b.n	900076f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
            if(board[i][i] != symbol)
9000771c:	7829      	ldrb	r1, [r5, #0]
9000771e:	42a1      	cmp	r1, r4
90007720:	d1f5      	bne.n	9000770e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xca>
90007722:	7929      	ldrb	r1, [r5, #4]
90007724:	42a1      	cmp	r1, r4
90007726:	d0de      	beq.n	900076e6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa2>
90007728:	e7e6      	b.n	900076f8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
9000772a:	bf00      	nop
9000772c:	2401f6e4 	.word	0x2401f6e4
90007730:	24000038 	.word	0x24000038
90007734:	2401f6f0 	.word	0x2401f6f0
90007738:	90007029 	.word	0x90007029
9000773c:	2401f6ed 	.word	0x2401f6ed
90007740:	2401f6ee 	.word	0x2401f6ee

90007744 <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
90007744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][2] == 0 ) {
90007746:	4e28      	ldr	r6, [pc, #160]	; (900077e8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xa4>)
90007748:	7973      	ldrb	r3, [r6, #5]
9000774a:	bb5b      	cbnz	r3, 900077a4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x60>
		if( turn ) {
9000774c:	4d27      	ldr	r5, [pc, #156]	; (900077ec <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xa8>)
9000774e:	4604      	mov	r4, r0
90007750:	2201      	movs	r2, #1
90007752:	782b      	ldrb	r3, [r5, #0]
90007754:	bb3b      	cbnz	r3, 900077a6 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
			board[1][2] = 'O';
90007756:	234f      	movs	r3, #79	; 0x4f
90007758:	f880 28e9 	strb.w	r2, [r0, #2281]	; 0x8e9
			pos6_circle.invalidate();
9000775c:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
90007760:	7173      	strb	r3, [r6, #5]
			pos6_circle.invalidate();
90007762:	f00f ff08 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007766:	4a22      	ldr	r2, [pc, #136]	; (900077f0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>)
90007768:	8813      	ldrh	r3, [r2, #0]
9000776a:	3301      	adds	r3, #1
9000776c:	b21b      	sxth	r3, r3
9000776e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
90007770:	6822      	ldr	r2, [r4, #0]
90007772:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007774:	4a1f      	ldr	r2, [pc, #124]	; (900077f4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb0>)
90007776:	4297      	cmp	r7, r2
90007778:	d11e      	bne.n	900077b8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x74>
	if(turn)
9000777a:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
9000777c:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
9000777e:	2800      	cmp	r0, #0
90007780:	bf14      	ite	ne
90007782:	2458      	movne	r4, #88	; 0x58
90007784:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007786:	42a2      	cmp	r2, r4
90007788:	d121      	bne.n	900077ce <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
9000778a:	79f1      	ldrb	r1, [r6, #7]
9000778c:	4291      	cmp	r1, r2
9000778e:	d11e      	bne.n	900077ce <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
90007790:	7a32      	ldrb	r2, [r6, #8]
90007792:	428a      	cmp	r2, r1
90007794:	d11b      	bne.n	900077ce <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
            if( turn )
90007796:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000779a:	4a17      	ldr	r2, [pc, #92]	; (900077f8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
9000779c:	2101      	movs	r1, #1
			result = temp_result;
9000779e:	4b17      	ldr	r3, [pc, #92]	; (900077fc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
			game_over = true;
900077a0:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900077a2:	8018      	strh	r0, [r3, #0]
}
900077a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][2] = 'X';
900077a6:	2358      	movs	r3, #88	; 0x58
900077a8:	f880 28bd 	strb.w	r2, [r0, #2237]	; 0x8bd
			pos6_cross.invalidate();
900077ac:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
900077b0:	7173      	strb	r3, [r6, #5]
			pos6_cross.invalidate();
900077b2:	f00f fee0 	bl	90017576 <_ZNK8touchgfx8Drawable10invalidateEv>
900077b6:	e7d6      	b.n	90007766 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x22>
		short temp_result = is_game_over(1, 2);
900077b8:	2202      	movs	r2, #2
900077ba:	2101      	movs	r1, #1
900077bc:	4620      	mov	r0, r4
900077be:	47b8      	blx	r7
		if( temp_result != 0 ) {
900077c0:	2800      	cmp	r0, #0
900077c2:	d1ea      	bne.n	9000779a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x56>
		turn = !turn;
900077c4:	7828      	ldrb	r0, [r5, #0]
900077c6:	f080 0001 	eor.w	r0, r0, #1
900077ca:	7028      	strb	r0, [r5, #0]
}
900077cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900077ce:	7872      	ldrb	r2, [r6, #1]
900077d0:	42a2      	cmp	r2, r4
900077d2:	d105      	bne.n	900077e0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9c>
900077d4:	7932      	ldrb	r2, [r6, #4]
900077d6:	42a2      	cmp	r2, r4
900077d8:	d102      	bne.n	900077e0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9c>
900077da:	79f2      	ldrb	r2, [r6, #7]
900077dc:	42a2      	cmp	r2, r4
900077de:	d0da      	beq.n	90007796 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x52>
	if( turn_number == 9 )
900077e0:	2b09      	cmp	r3, #9
900077e2:	d1f0      	bne.n	900077c6 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
		return 3;
900077e4:	2003      	movs	r0, #3
900077e6:	e7d8      	b.n	9000779a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x56>
900077e8:	2401f6e4 	.word	0x2401f6e4
900077ec:	24000038 	.word	0x24000038
900077f0:	2401f6f0 	.word	0x2401f6f0
900077f4:	90007029 	.word	0x90007029
900077f8:	2401f6ed 	.word	0x2401f6ed
900077fc:	2401f6ee 	.word	0x2401f6ee

90007800 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90007800:	b510      	push	{r4, lr}
90007802:	4604      	mov	r4, r0
90007804:	f7fd fd08 	bl	90005218 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
90007808:	4b05      	ldr	r3, [pc, #20]	; (90007820 <_ZN25screen_tictactoe_gameViewC1Ev+0x20>)
9000780a:	2200      	movs	r2, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
9000780c:	4805      	ldr	r0, [pc, #20]	; (90007824 <_ZN25screen_tictactoe_gameViewC1Ev+0x24>)
	turn = 1;
9000780e:	4906      	ldr	r1, [pc, #24]	; (90007828 <_ZN25screen_tictactoe_gameViewC1Ev+0x28>)
			board[i][j] = 0;
90007810:	721a      	strb	r2, [r3, #8]
screen_tictactoe_gameView::screen_tictactoe_gameView()
90007812:	6020      	str	r0, [r4, #0]
}
90007814:	4620      	mov	r0, r4
			board[i][j] = 0;
90007816:	e9c3 2200 	strd	r2, r2, [r3]
	turn = 1;
9000781a:	2301      	movs	r3, #1
9000781c:	700b      	strb	r3, [r1, #0]
}
9000781e:	bd10      	pop	{r4, pc}
90007820:	2401f6e4 	.word	0x2401f6e4
90007824:	9002b15c 	.word	0x9002b15c
90007828:	24000038 	.word	0x24000038

9000782c <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
9000782c:	f7fd bb60 	b.w	90004ef0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

90007830 <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
	if( game_over ) {
90007830:	4b13      	ldr	r3, [pc, #76]	; (90007880 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x50>)
90007832:	781b      	ldrb	r3, [r3, #0]
90007834:	b903      	cbnz	r3, 90007838 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x8>
90007836:	4770      	bx	lr
void screen_tictactoe_gameView::handleTickEvent() {
90007838:	b500      	push	{lr}
          touchable(false),
9000783a:	f44f 7180 	mov.w	r1, #256	; 0x100
9000783e:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90007840:	4a10      	ldr	r2, [pc, #64]	; (90007884 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x54>)
          parent(0),
90007842:	2300      	movs	r3, #0
          touchable(false),
90007844:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90007848:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
9000784c:	490e      	ldr	r1, [pc, #56]	; (90007888 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x58>)
9000784e:	3004      	adds	r0, #4
90007850:	9201      	str	r2, [sp, #4]
        color = newColor;
90007852:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
        : Widget(), alpha(255), color(0)
90007856:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
9000785a:	920b      	str	r2, [sp, #44]	; 0x2c
9000785c:	e9cd 3102 	strd	r3, r1, [sp, #8]
90007860:	a901      	add	r1, sp, #4
          nextSibling(0),
90007862:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
90007866:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
9000786a:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000786e:	f009 fa33 	bl	90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90007872:	9806      	ldr	r0, [sp, #24]
		error_square.getParent()->invalidate();
90007874:	6803      	ldr	r3, [r0, #0]
90007876:	695b      	ldr	r3, [r3, #20]
90007878:	4798      	blx	r3
}
9000787a:	b00d      	add	sp, #52	; 0x34
9000787c:	f85d fb04 	ldr.w	pc, [sp], #4
90007880:	2401f6ed 	.word	0x2401f6ed
90007884:	9002b888 	.word	0x9002b888
90007888:	011001e0 	.word	0x011001e0

9000788c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
9000788c:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007890:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90007892:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90007896:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000789a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000789c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000789e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900078a2:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900078a6:	4770      	bx	lr

900078a8 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900078a8:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900078ac:	2b01      	cmp	r3, #1
900078ae:	d102      	bne.n	900078b6 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900078b0:	2300      	movs	r3, #0
900078b2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
900078b6:	2000      	movs	r0, #0
900078b8:	4770      	bx	lr
900078ba:	bf00      	nop

900078bc <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900078bc:	2000      	movs	r0, #0
900078be:	4770      	bx	lr

900078c0 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900078c0:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900078c2:	6904      	ldr	r4, [r0, #16]
900078c4:	8900      	ldrh	r0, [r0, #8]
900078c6:	46a4      	mov	ip, r4
}
900078c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900078cc:	4760      	bx	ip
900078ce:	bf00      	nop

900078d0 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900078d0:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900078d2:	68c4      	ldr	r4, [r0, #12]
900078d4:	8900      	ldrh	r0, [r0, #8]
900078d6:	46a4      	mov	ip, r4
}
900078d8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
900078dc:	4760      	bx	ip
900078de:	bf00      	nop

900078e0 <FT5336_GestureConfig>:
{
900078e0:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900078e2:	f100 0518 	add.w	r5, r0, #24
{
900078e6:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
900078e8:	7809      	ldrb	r1, [r1, #0]
900078ea:	4628      	mov	r0, r5
900078ec:	f000 f96c 	bl	90007bc8 <ft5336_radian_value>
900078f0:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
900078f2:	7931      	ldrb	r1, [r6, #4]
900078f4:	4628      	mov	r0, r5
900078f6:	f000 f975 	bl	90007be4 <ft5336_offset_left_right>
900078fa:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
900078fc:	7a31      	ldrb	r1, [r6, #8]
900078fe:	4628      	mov	r0, r5
90007900:	f000 f97e 	bl	90007c00 <ft5336_offset_up_down>
90007904:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007906:	7b31      	ldrb	r1, [r6, #12]
90007908:	4628      	mov	r0, r5
9000790a:	f000 f987 	bl	90007c1c <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000790e:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007910:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90007912:	4628      	mov	r0, r5
90007914:	f000 f990 	bl	90007c38 <ft5336_distance_up_down>
90007918:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000791a:	7d31      	ldrb	r1, [r6, #20]
9000791c:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000791e:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90007920:	f000 f998 	bl	90007c54 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90007924:	42c4      	cmn	r4, r0
}
90007926:	bf14      	ite	ne
90007928:	f04f 30ff 	movne.w	r0, #4294967295
9000792c:	2000      	moveq	r0, #0
9000792e:	bd70      	pop	{r4, r5, r6, pc}

90007930 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90007930:	3018      	adds	r0, #24
90007932:	f000 b9ab 	b.w	90007c8c <ft5336_chip_id>
90007936:	bf00      	nop

90007938 <FT5336_GetState>:
{
90007938:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000793a:	f100 0518 	add.w	r5, r0, #24
{
9000793e:	b083      	sub	sp, #12
90007940:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007942:	4628      	mov	r0, r5
90007944:	a901      	add	r1, sp, #4
90007946:	f000 f931 	bl	90007bac <ft5336_td_status>
9000794a:	bb10      	cbnz	r0, 90007992 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
9000794c:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90007950:	2b05      	cmp	r3, #5
90007952:	bf94      	ite	ls
90007954:	4619      	movls	r1, r3
90007956:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90007958:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000795a:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000795c:	4628      	mov	r0, r5
9000795e:	2103      	movs	r1, #3
90007960:	eb0d 0203 	add.w	r2, sp, r3
90007964:	f000 f910 	bl	90007b88 <ft5336_read_reg>
90007968:	b9b0      	cbnz	r0, 90007998 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000796a:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000796e:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007972:	0212      	lsls	r2, r2, #8
90007974:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007978:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
9000797a:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
9000797e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007982:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007984:	f89d 1007 	ldrb.w	r1, [sp, #7]
90007988:	430b      	orrs	r3, r1
9000798a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000798e:	b003      	add	sp, #12
90007990:	bd30      	pop	{r4, r5, pc}
90007992:	f04f 31ff 	mov.w	r1, #4294967295
90007996:	e7df      	b.n	90007958 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90007998:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000799c:	e7f7      	b.n	9000798e <FT5336_GetState+0x56>
9000799e:	bf00      	nop

900079a0 <FT5336_GetMultiTouchState>:
{
900079a0:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900079a2:	f100 0518 	add.w	r5, r0, #24
{
900079a6:	b088      	sub	sp, #32
900079a8:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900079aa:	4628      	mov	r0, r5
900079ac:	4669      	mov	r1, sp
900079ae:	f000 f8fd 	bl	90007bac <ft5336_td_status>
900079b2:	2800      	cmp	r0, #0
900079b4:	f040 809a 	bne.w	90007aec <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900079b8:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900079bc:	2b05      	cmp	r3, #5
900079be:	bf94      	ite	ls
900079c0:	4619      	movls	r1, r3
900079c2:	2100      	movhi	r1, #0
900079c4:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900079c6:	231e      	movs	r3, #30
900079c8:	466a      	mov	r2, sp
900079ca:	4628      	mov	r0, r5
900079cc:	2103      	movs	r1, #3
900079ce:	f000 f8db 	bl	90007b88 <ft5336_read_reg>
900079d2:	2800      	cmp	r0, #0
900079d4:	f040 808d 	bne.w	90007af2 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900079d8:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900079dc:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900079e0:	020a      	lsls	r2, r1, #8
900079e2:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900079e6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900079e8:	f89d c007 	ldrb.w	ip, [sp, #7]
900079ec:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900079f0:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900079f2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900079f6:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900079fa:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900079fc:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a00:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a02:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a04:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a06:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a08:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a0c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a0e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a12:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a16:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a18:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a1a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a1e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a20:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a22:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a24:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a28:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a2a:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a2c:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a30:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a34:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a36:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a38:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a3a:	ea45 050c 	orr.w	r5, r5, ip
90007a3e:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a42:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a46:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a48:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a4a:	0212      	lsls	r2, r2, #8
90007a4c:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a50:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a52:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a56:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a5a:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007a5c:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a5e:	f89d 300e 	ldrb.w	r3, [sp, #14]
90007a62:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a64:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a68:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a6a:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a6c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a70:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a72:	f89d 200f 	ldrb.w	r2, [sp, #15]
90007a76:	4313      	orrs	r3, r2
90007a78:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007a7a:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a7c:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a80:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a84:	020a      	lsls	r2, r1, #8
90007a86:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a8a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a8c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a90:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a92:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007a96:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a98:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007a9c:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007a9e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007aa0:	f89d 1018 	ldrb.w	r1, [sp, #24]
90007aa4:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007aa6:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007aa8:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007aaa:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007aae:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007ab0:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007ab4:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ab6:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007aba:	f89d 301d 	ldrb.w	r3, [sp, #29]
90007abe:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007ac0:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007ac2:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007ac4:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007ac8:	6625      	str	r5, [r4, #96]	; 0x60
90007aca:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007acc:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007ad0:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ad2:	021b      	lsls	r3, r3, #8
90007ad4:	f89d 101b 	ldrb.w	r1, [sp, #27]
90007ad8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90007adc:	430b      	orrs	r3, r1
90007ade:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ae0:	f89d 3019 	ldrb.w	r3, [sp, #25]
90007ae4:	4313      	orrs	r3, r2
90007ae6:	6163      	str	r3, [r4, #20]
}
90007ae8:	b008      	add	sp, #32
90007aea:	bd70      	pop	{r4, r5, r6, pc}
90007aec:	f04f 31ff 	mov.w	r1, #4294967295
90007af0:	e768      	b.n	900079c4 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90007af2:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007af6:	e7f7      	b.n	90007ae8 <FT5336_GetMultiTouchState+0x148>

90007af8 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007af8:	3018      	adds	r0, #24
90007afa:	f000 b84d 	b.w	90007b98 <ft5336_gest_id>
90007afe:	bf00      	nop

90007b00 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90007b00:	2101      	movs	r1, #1
90007b02:	3018      	adds	r0, #24
90007b04:	f000 b8b4 	b.w	90007c70 <ft5336_g_mode>

90007b08 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007b08:	2100      	movs	r1, #0
90007b0a:	3018      	adds	r0, #24
90007b0c:	f000 b8b0 	b.w	90007c70 <ft5336_g_mode>

90007b10 <FT5336_Init>:
{
90007b10:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90007b12:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90007b16:	b98d      	cbnz	r5, 90007b3c <FT5336_Init+0x2c>
    pObj->IO.Init();
90007b18:	4606      	mov	r6, r0
90007b1a:	4604      	mov	r4, r0
90007b1c:	f856 3b18 	ldr.w	r3, [r6], #24
90007b20:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007b22:	4629      	mov	r1, r5
90007b24:	4630      	mov	r0, r6
90007b26:	f000 f8a3 	bl	90007c70 <ft5336_g_mode>
  if(ret != FT5336_OK)
90007b2a:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90007b2c:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90007b30:	bf18      	it	ne
90007b32:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90007b34:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90007b38:	4240      	negs	r0, r0
}
90007b3a:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90007b3c:	2000      	movs	r0, #0
}
90007b3e:	bd70      	pop	{r4, r5, r6, pc}

90007b40 <FT5336_ClearIT>:
90007b40:	2000      	movs	r0, #0
90007b42:	4770      	bx	lr

90007b44 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90007b44:	b1c0      	cbz	r0, 90007b78 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90007b46:	890a      	ldrh	r2, [r1, #8]
{
90007b48:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90007b4a:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90007b4e:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90007b50:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90007b54:	694a      	ldr	r2, [r1, #20]
90007b56:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90007b5a:	4909      	ldr	r1, [pc, #36]	; (90007b80 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90007b5c:	60c5      	str	r5, [r0, #12]
90007b5e:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007b62:	4a08      	ldr	r2, [pc, #32]	; (90007b84 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90007b64:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007b68:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90007b6a:	b10b      	cbz	r3, 90007b70 <FT5336_RegisterBusIO+0x2c>
}
90007b6c:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90007b6e:	4718      	bx	r3
}
90007b70:	f04f 30ff 	mov.w	r0, #4294967295
90007b74:	bc30      	pop	{r4, r5}
90007b76:	4770      	bx	lr
90007b78:	f04f 30ff 	mov.w	r0, #4294967295
90007b7c:	4770      	bx	lr
90007b7e:	bf00      	nop
90007b80:	900078c1 	.word	0x900078c1
90007b84:	900078d1 	.word	0x900078d1

90007b88 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90007b88:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b8a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90007b8e:	46a4      	mov	ip, r4
}
90007b90:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b94:	4760      	bx	ip
90007b96:	bf00      	nop

90007b98 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007b98:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b9a:	2301      	movs	r3, #1
{
90007b9c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b9e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90007ba2:	4619      	mov	r1, r3
90007ba4:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90007ba6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007baa:	4760      	bx	ip

90007bac <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90007bac:	b538      	push	{r3, r4, r5, lr}
90007bae:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007bb0:	2301      	movs	r3, #1
90007bb2:	2102      	movs	r1, #2
90007bb4:	4622      	mov	r2, r4
90007bb6:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90007bba:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90007bbc:	b918      	cbnz	r0, 90007bc6 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90007bbe:	7823      	ldrb	r3, [r4, #0]
90007bc0:	f003 030f 	and.w	r3, r3, #15
90007bc4:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90007bc6:	bd38      	pop	{r3, r4, r5, pc}

90007bc8 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90007bc8:	b510      	push	{r4, lr}
90007bca:	460c      	mov	r4, r1
90007bcc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007bce:	2301      	movs	r3, #1
90007bd0:	2191      	movs	r1, #145	; 0x91
{
90007bd2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007bd6:	f10d 0207 	add.w	r2, sp, #7
90007bda:	6804      	ldr	r4, [r0, #0]
90007bdc:	6880      	ldr	r0, [r0, #8]
90007bde:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90007be0:	b002      	add	sp, #8
90007be2:	bd10      	pop	{r4, pc}

90007be4 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007be4:	b510      	push	{r4, lr}
90007be6:	460c      	mov	r4, r1
90007be8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007bea:	2301      	movs	r3, #1
90007bec:	2192      	movs	r1, #146	; 0x92
{
90007bee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007bf2:	f10d 0207 	add.w	r2, sp, #7
90007bf6:	6804      	ldr	r4, [r0, #0]
90007bf8:	6880      	ldr	r0, [r0, #8]
90007bfa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90007bfc:	b002      	add	sp, #8
90007bfe:	bd10      	pop	{r4, pc}

90007c00 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007c00:	b510      	push	{r4, lr}
90007c02:	460c      	mov	r4, r1
90007c04:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c06:	2301      	movs	r3, #1
90007c08:	2193      	movs	r1, #147	; 0x93
{
90007c0a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c0e:	f10d 0207 	add.w	r2, sp, #7
90007c12:	6804      	ldr	r4, [r0, #0]
90007c14:	6880      	ldr	r0, [r0, #8]
90007c16:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90007c18:	b002      	add	sp, #8
90007c1a:	bd10      	pop	{r4, pc}

90007c1c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007c1c:	b510      	push	{r4, lr}
90007c1e:	460c      	mov	r4, r1
90007c20:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c22:	2301      	movs	r3, #1
90007c24:	2194      	movs	r1, #148	; 0x94
{
90007c26:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c2a:	f10d 0207 	add.w	r2, sp, #7
90007c2e:	6804      	ldr	r4, [r0, #0]
90007c30:	6880      	ldr	r0, [r0, #8]
90007c32:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90007c34:	b002      	add	sp, #8
90007c36:	bd10      	pop	{r4, pc}

90007c38 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007c38:	b510      	push	{r4, lr}
90007c3a:	460c      	mov	r4, r1
90007c3c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c3e:	2301      	movs	r3, #1
90007c40:	2195      	movs	r1, #149	; 0x95
{
90007c42:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c46:	f10d 0207 	add.w	r2, sp, #7
90007c4a:	6804      	ldr	r4, [r0, #0]
90007c4c:	6880      	ldr	r0, [r0, #8]
90007c4e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90007c50:	b002      	add	sp, #8
90007c52:	bd10      	pop	{r4, pc}

90007c54 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90007c54:	b510      	push	{r4, lr}
90007c56:	460c      	mov	r4, r1
90007c58:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c5a:	2301      	movs	r3, #1
90007c5c:	2196      	movs	r1, #150	; 0x96
{
90007c5e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c62:	f10d 0207 	add.w	r2, sp, #7
90007c66:	6804      	ldr	r4, [r0, #0]
90007c68:	6880      	ldr	r0, [r0, #8]
90007c6a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007c6c:	b002      	add	sp, #8
90007c6e:	bd10      	pop	{r4, pc}

90007c70 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007c70:	b510      	push	{r4, lr}
90007c72:	460c      	mov	r4, r1
90007c74:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c76:	2301      	movs	r3, #1
90007c78:	21a4      	movs	r1, #164	; 0xa4
{
90007c7a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007c7e:	f10d 0207 	add.w	r2, sp, #7
90007c82:	6804      	ldr	r4, [r0, #0]
90007c84:	6880      	ldr	r0, [r0, #8]
90007c86:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90007c88:	b002      	add	sp, #8
90007c8a:	bd10      	pop	{r4, pc}

90007c8c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007c8c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007c8e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90007c92:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007c94:	2301      	movs	r3, #1
90007c96:	46a4      	mov	ip, r4
90007c98:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90007c9a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007c9e:	4760      	bx	ip

90007ca0 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90007ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007ca2:	680b      	ldr	r3, [r1, #0]
{
90007ca4:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90007ca6:	4c2a      	ldr	r4, [pc, #168]	; (90007d50 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007ca8:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90007cac:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90007cae:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90007cb0:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cb2:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90007cb4:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90007cb6:	2301      	movs	r3, #1
90007cb8:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90007cba:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cbc:	f005 fd2a 	bl	9000d714 <HAL_SDRAM_SendCommand>
90007cc0:	2800      	cmp	r0, #0
90007cc2:	d142      	bne.n	90007d4a <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90007cc4:	f000 ff46 	bl	90008b54 <HAL_GetTick>
90007cc8:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90007cca:	f000 ff43 	bl	90008b54 <HAL_GetTick>
90007cce:	4286      	cmp	r6, r0
90007cd0:	d0fb      	beq.n	90007cca <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007cd2:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007cd4:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90007cd6:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cd8:	491d      	ldr	r1, [pc, #116]	; (90007d50 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007cda:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90007cdc:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90007cde:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007ce0:	4638      	mov	r0, r7
90007ce2:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90007ce6:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90007ce8:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cea:	f005 fd13 	bl	9000d714 <HAL_SDRAM_SendCommand>
90007cee:	bb60      	cbnz	r0, 90007d4a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cf0:	4917      	ldr	r1, [pc, #92]	; (90007d50 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90007cf2:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90007cf6:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007cf8:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90007cfa:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90007cfe:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007d00:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90007d04:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007d06:	f005 fd05 	bl	9000d714 <HAL_SDRAM_SendCommand>
90007d0a:	b9f0      	cbnz	r0, 90007d4a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007d0c:	4910      	ldr	r1, [pc, #64]	; (90007d50 <MT48LC4M32B2_Init+0xb0>)
90007d0e:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007d10:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90007d14:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90007d16:	696a      	ldr	r2, [r5, #20]
90007d18:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90007d1a:	69aa      	ldr	r2, [r5, #24]
90007d1c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007d1e:	69ea      	ldr	r2, [r5, #28]
90007d20:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90007d22:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90007d24:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007d26:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90007d28:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007d2c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007d30:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007d32:	f005 fcef 	bl	9000d714 <HAL_SDRAM_SendCommand>
90007d36:	b940      	cbnz	r0, 90007d4a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007d38:	68a9      	ldr	r1, [r5, #8]
90007d3a:	4638      	mov	r0, r7
90007d3c:	f005 fd0a 	bl	9000d754 <HAL_SDRAM_ProgramRefreshRate>
90007d40:	3800      	subs	r0, #0
90007d42:	bf18      	it	ne
90007d44:	2001      	movne	r0, #1
90007d46:	4240      	negs	r0, r0
}
90007d48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007d4a:	f04f 30ff 	mov.w	r0, #4294967295
}
90007d4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90007d50:	2401f6f4 	.word	0x2401f6f4

90007d54 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90007d54:	4a10      	ldr	r2, [pc, #64]	; (90007d98 <BSP_I2C4_DeInit+0x44>)
{
90007d56:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007d58:	6813      	ldr	r3, [r2, #0]
90007d5a:	3b01      	subs	r3, #1
90007d5c:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90007d5e:	b10b      	cbz	r3, 90007d64 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90007d60:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90007d62:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90007d64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90007d68:	480c      	ldr	r0, [pc, #48]	; (90007d9c <BSP_I2C4_DeInit+0x48>)
90007d6a:	f001 faaf 	bl	900092cc <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007d6e:	480b      	ldr	r0, [pc, #44]	; (90007d9c <BSP_I2C4_DeInit+0x48>)
90007d70:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90007d74:	f001 faaa 	bl	900092cc <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007d78:	4a09      	ldr	r2, [pc, #36]	; (90007da0 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007d7a:	480a      	ldr	r0, [pc, #40]	; (90007da4 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007d7c:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90007d80:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90007d84:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007d88:	f001 fd48 	bl	9000981c <HAL_I2C_DeInit>
90007d8c:	2800      	cmp	r0, #0
90007d8e:	d0e7      	beq.n	90007d60 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90007d90:	f06f 0007 	mvn.w	r0, #7
}
90007d94:	bd08      	pop	{r3, pc}
90007d96:	bf00      	nop
90007d98:	2401f704 	.word	0x2401f704
90007d9c:	58020c00 	.word	0x58020c00
90007da0:	58024400 	.word	0x58024400
90007da4:	2402010c 	.word	0x2402010c

90007da8 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90007da8:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90007daa:	2201      	movs	r2, #1
{
90007dac:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90007dae:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90007db2:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90007db6:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90007dba:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90007dbe:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90007dc0:	f001 fcd4 	bl	9000976c <HAL_I2C_Init>
90007dc4:	b108      	cbz	r0, 90007dca <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90007dc6:	2001      	movs	r0, #1
}
90007dc8:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90007dca:	4601      	mov	r1, r0
90007dcc:	4620      	mov	r0, r4
90007dce:	f001 ffe3 	bl	90009d98 <HAL_I2CEx_ConfigAnalogFilter>
90007dd2:	2800      	cmp	r0, #0
90007dd4:	d1f7      	bne.n	90007dc6 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90007dd6:	4601      	mov	r1, r0
90007dd8:	4620      	mov	r0, r4
90007dda:	f002 f807 	bl	90009dec <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90007dde:	3800      	subs	r0, #0
90007de0:	bf18      	it	ne
90007de2:	2001      	movne	r0, #1
}
90007de4:	bd10      	pop	{r4, pc}
90007de6:	bf00      	nop

90007de8 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90007de8:	4b99      	ldr	r3, [pc, #612]	; (90008050 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90007dea:	489a      	ldr	r0, [pc, #616]	; (90008054 <BSP_I2C4_Init+0x26c>)
90007dec:	4a9a      	ldr	r2, [pc, #616]	; (90008058 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90007dee:	6819      	ldr	r1, [r3, #0]
{
90007df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007df4:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90007df6:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90007df8:	9103      	str	r1, [sp, #12]
90007dfa:	b119      	cbz	r1, 90007e04 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90007dfc:	2000      	movs	r0, #0
}
90007dfe:	b01f      	add	sp, #124	; 0x7c
90007e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90007e04:	2201      	movs	r2, #1
90007e06:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90007e08:	f001 ffc0 	bl	90009d8c <HAL_I2C_GetState>
90007e0c:	2800      	cmp	r0, #0
90007e0e:	d1f5      	bne.n	90007dfc <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007e10:	4c92      	ldr	r4, [pc, #584]	; (9000805c <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007e12:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90007e16:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007e18:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007e1a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007e1e:	2600      	movs	r6, #0
90007e20:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007e22:	f043 0308 	orr.w	r3, r3, #8
90007e26:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90007e2a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90007e2e:	f003 0308 	and.w	r3, r3, #8
90007e32:	9315      	str	r3, [sp, #84]	; 0x54
90007e34:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007e36:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90007e3a:	f043 0308 	orr.w	r3, r3, #8
90007e3e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90007e42:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007e46:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007e48:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007e4c:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007e50:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007e52:	a918      	add	r1, sp, #96	; 0x60
90007e54:	4882      	ldr	r0, [pc, #520]	; (90008060 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007e56:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007e58:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007e5c:	f001 f904 	bl	90009068 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007e60:	2312      	movs	r3, #18
90007e62:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007e66:	a918      	add	r1, sp, #96	; 0x60
90007e68:	487d      	ldr	r0, [pc, #500]	; (90008060 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007e6a:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007e6c:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90007e70:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007e74:	f001 f8f8 	bl	90009068 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007e78:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90007e7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90007e80:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90007e84:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90007e88:	f003 0380 	and.w	r3, r3, #128	; 0x80
90007e8c:	9317      	str	r3, [sp, #92]	; 0x5c
90007e8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90007e90:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90007e94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90007e98:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90007e9c:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90007ea0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90007ea4:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007ea8:	f004 fc94 	bl	9000c7d4 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007eac:	2800      	cmp	r0, #0
90007eae:	f000 81f6 	beq.w	9000829e <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007eb2:	4b6c      	ldr	r3, [pc, #432]	; (90008064 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90007eb4:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007eb8:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007eba:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ebe:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 9000806c <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007ec2:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007ec4:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90007ec8:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007eca:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007ecc:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007ed0:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90007ed4:	4b64      	ldr	r3, [pc, #400]	; (90008068 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90007ed6:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007eda:	0079      	lsls	r1, r7, #1
90007edc:	681b      	ldr	r3, [r3, #0]
90007ede:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90007ee2:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90007ee6:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007ee8:	4699      	mov	r9, r3
90007eea:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007eec:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90007ef0:	46b8      	mov	r8, r7
90007ef2:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90007ef6:	bf94      	ite	ls
90007ef8:	2101      	movls	r1, #1
90007efa:	2100      	movhi	r1, #0
90007efc:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90007f00:	f001 0101 	and.w	r1, r1, #1
90007f04:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90007f08:	bf38      	it	cc
90007f0a:	2100      	movcc	r1, #0
90007f0c:	429c      	cmp	r4, r3
90007f0e:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90007f12:	9105      	str	r1, [sp, #20]
90007f14:	bf8c      	ite	hi
90007f16:	2100      	movhi	r1, #0
90007f18:	2101      	movls	r1, #1
90007f1a:	459c      	cmp	ip, r3
90007f1c:	bf38      	it	cc
90007f1e:	2100      	movcc	r1, #0
90007f20:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90007f24:	9106      	str	r1, [sp, #24]
90007f26:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90007f2a:	9104      	str	r1, [sp, #16]
90007f2c:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90007f30:	9111      	str	r1, [sp, #68]	; 0x44
90007f32:	bf94      	ite	ls
90007f34:	2101      	movls	r1, #1
90007f36:	2100      	movhi	r1, #0
90007f38:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90007f3c:	f001 0e01 	and.w	lr, r1, #1
90007f40:	bf38      	it	cc
90007f42:	f04f 0e00 	movcc.w	lr, #0
90007f46:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007f48:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007f4c:	f8cd e01c 	str.w	lr, [sp, #28]
90007f50:	bf8c      	ite	hi
90007f52:	f04f 0e00 	movhi.w	lr, #0
90007f56:	f04f 0e01 	movls.w	lr, #1
90007f5a:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007f5c:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007f5e:	bf38      	it	cc
90007f60:	f04f 0e00 	movcc.w	lr, #0
90007f64:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90007f68:	bf98      	it	ls
90007f6a:	2101      	movls	r1, #1
90007f6c:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007f70:	f8cd e020 	str.w	lr, [sp, #32]
90007f74:	f001 0101 	and.w	r1, r1, #1
90007f78:	bf38      	it	cc
90007f7a:	2100      	movcc	r1, #0
90007f7c:	4284      	cmp	r4, r0
90007f7e:	9109      	str	r1, [sp, #36]	; 0x24
90007f80:	4601      	mov	r1, r0
90007f82:	bf8c      	ite	hi
90007f84:	2000      	movhi	r0, #0
90007f86:	2001      	movls	r0, #1
90007f88:	458c      	cmp	ip, r1
90007f8a:	bf38      	it	cc
90007f8c:	2000      	movcc	r0, #0
90007f8e:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90007f92:	900b      	str	r0, [sp, #44]	; 0x2c
90007f94:	bf94      	ite	ls
90007f96:	2001      	movls	r0, #1
90007f98:	2000      	movhi	r0, #0
90007f9a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90007f9e:	f000 0001 	and.w	r0, r0, #1
90007fa2:	bf38      	it	cc
90007fa4:	2000      	movcc	r0, #0
90007fa6:	900c      	str	r0, [sp, #48]	; 0x30
90007fa8:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90007fac:	4284      	cmp	r4, r0
90007fae:	bf8c      	ite	hi
90007fb0:	f04f 0e00 	movhi.w	lr, #0
90007fb4:	f04f 0e01 	movls.w	lr, #1
90007fb8:	4584      	cmp	ip, r0
90007fba:	bf38      	it	cc
90007fbc:	f04f 0e00 	movcc.w	lr, #0
90007fc0:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90007fc4:	4670      	mov	r0, lr
90007fc6:	bf94      	ite	ls
90007fc8:	2001      	movls	r0, #1
90007fca:	2000      	movhi	r0, #0
90007fcc:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90007fd0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90007fd4:	f04f 0e00 	mov.w	lr, #0
90007fd8:	f000 0001 	and.w	r0, r0, #1
90007fdc:	bf38      	it	cc
90007fde:	2000      	movcc	r0, #0
90007fe0:	900e      	str	r0, [sp, #56]	; 0x38
90007fe2:	9804      	ldr	r0, [sp, #16]
90007fe4:	4284      	cmp	r4, r0
90007fe6:	4602      	mov	r2, r0
90007fe8:	bf8c      	ite	hi
90007fea:	2200      	movhi	r2, #0
90007fec:	2201      	movls	r2, #1
90007fee:	4584      	cmp	ip, r0
90007ff0:	bf38      	it	cc
90007ff2:	2200      	movcc	r2, #0
90007ff4:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90007ff8:	920f      	str	r2, [sp, #60]	; 0x3c
90007ffa:	bf94      	ite	ls
90007ffc:	2201      	movls	r2, #1
90007ffe:	2200      	movhi	r2, #0
90008000:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90008004:	f002 0201 	and.w	r2, r2, #1
90008008:	bf38      	it	cc
9000800a:	2200      	movcc	r2, #0
9000800c:	9210      	str	r2, [sp, #64]	; 0x40
9000800e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90008010:	4294      	cmp	r4, r2
90008012:	4613      	mov	r3, r2
90008014:	bf8c      	ite	hi
90008016:	2300      	movhi	r3, #0
90008018:	2301      	movls	r3, #1
9000801a:	4594      	cmp	ip, r2
9000801c:	bf38      	it	cc
9000801e:	2300      	movcc	r3, #0
90008020:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90008024:	9311      	str	r3, [sp, #68]	; 0x44
90008026:	bf94      	ite	ls
90008028:	2301      	movls	r3, #1
9000802a:	2300      	movhi	r3, #0
9000802c:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90008030:	f003 0301 	and.w	r3, r3, #1
90008034:	bf38      	it	cc
90008036:	2300      	movcc	r3, #0
90008038:	9312      	str	r3, [sp, #72]	; 0x48
9000803a:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
9000803e:	429c      	cmp	r4, r3
90008040:	bf8c      	ite	hi
90008042:	2200      	movhi	r2, #0
90008044:	2201      	movls	r2, #1
90008046:	459c      	cmp	ip, r3
90008048:	bf38      	it	cc
9000804a:	2200      	movcc	r2, #0
9000804c:	9204      	str	r2, [sp, #16]
9000804e:	e014      	b.n	9000807a <BSP_I2C4_Init+0x292>
90008050:	2401f704 	.word	0x2401f704
90008054:	2402010c 	.word	0x2402010c
90008058:	58001c00 	.word	0x58001c00
9000805c:	58024400 	.word	0x58024400
90008060:	58020c00 	.word	0x58020c00
90008064:	3b9aca00 	.word	0x3b9aca00
90008068:	24020108 	.word	0x24020108
9000806c:	2401f708 	.word	0x2401f708
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90008070:	f1be 0f10 	cmp.w	lr, #16
90008074:	44b8      	add	r8, r7
90008076:	f000 826c 	beq.w	90008552 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
9000807a:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
9000807e:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90008080:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90008084:	d3f4      	bcc.n	90008070 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90008086:	ebbb 0205 	subs.w	r2, fp, r5
9000808a:	bf18      	it	ne
9000808c:	2201      	movne	r2, #1
9000808e:	2c00      	cmp	r4, #0
90008090:	bf18      	it	ne
90008092:	2200      	movne	r2, #0
90008094:	2a00      	cmp	r2, #0
90008096:	f040 824a 	bne.w	9000852e <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000809a:	45bc      	cmp	ip, r7
9000809c:	bf34      	ite	cc
9000809e:	2200      	movcc	r2, #0
900080a0:	2201      	movcs	r2, #1
900080a2:	42bc      	cmp	r4, r7
900080a4:	bf88      	it	hi
900080a6:	2200      	movhi	r2, #0
            if(presc != prev_presc)
900080a8:	45ab      	cmp	fp, r5
900080aa:	bf0c      	ite	eq
900080ac:	2200      	moveq	r2, #0
900080ae:	f002 0201 	andne.w	r2, r2, #1
900080b2:	2a00      	cmp	r2, #0
900080b4:	f000 80fd 	beq.w	900082b2 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080b8:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900080bc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900080c0:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080c2:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900080c6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080ca:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900080ce:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080d0:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900080d2:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900080d4:	f200 81a5 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
900080d8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900080da:	9906      	ldr	r1, [sp, #24]
900080dc:	45ab      	cmp	fp, r5
900080de:	bf0c      	ite	eq
900080e0:	2100      	moveq	r1, #0
900080e2:	f001 0101 	andne.w	r1, r1, #1
900080e6:	2900      	cmp	r1, #0
900080e8:	f000 80ff 	beq.w	900082ea <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080ec:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900080f0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900080f4:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080f6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900080fa:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080fe:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008102:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008104:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008106:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008108:	f200 818b 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
9000810c:	460a      	mov	r2, r1
9000810e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008110:	9908      	ldr	r1, [sp, #32]
90008112:	45ab      	cmp	fp, r5
90008114:	bf0c      	ite	eq
90008116:	2100      	moveq	r1, #0
90008118:	f001 0101 	andne.w	r1, r1, #1
9000811c:	2900      	cmp	r1, #0
9000811e:	f000 80ff 	beq.w	90008320 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008122:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008126:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000812a:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000812c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008130:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008134:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008138:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000813a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000813c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000813e:	f200 8170 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
90008142:	460a      	mov	r2, r1
90008144:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008146:	990b      	ldr	r1, [sp, #44]	; 0x2c
90008148:	45ab      	cmp	fp, r5
9000814a:	bf0c      	ite	eq
9000814c:	2100      	moveq	r1, #0
9000814e:	f001 0101 	andne.w	r1, r1, #1
90008152:	2900      	cmp	r1, #0
90008154:	f000 80fe 	beq.w	90008354 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008158:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000815c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008160:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008162:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008166:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000816a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000816e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008170:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008172:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008174:	f200 8155 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
90008178:	460a      	mov	r2, r1
9000817a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000817c:	990d      	ldr	r1, [sp, #52]	; 0x34
9000817e:	45ab      	cmp	fp, r5
90008180:	bf0c      	ite	eq
90008182:	2100      	moveq	r1, #0
90008184:	f001 0101 	andne.w	r1, r1, #1
90008188:	2900      	cmp	r1, #0
9000818a:	f000 80fd 	beq.w	90008388 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000818e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008192:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008196:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008198:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000819c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081a0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081a4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081a6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900081a8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081aa:	f200 813a 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
900081ae:	460a      	mov	r2, r1
900081b0:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900081b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
900081b4:	45ab      	cmp	fp, r5
900081b6:	bf0c      	ite	eq
900081b8:	2100      	moveq	r1, #0
900081ba:	f001 0101 	andne.w	r1, r1, #1
900081be:	2900      	cmp	r1, #0
900081c0:	f000 80fc 	beq.w	900083bc <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081c4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900081c8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081cc:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081ce:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081d2:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081d6:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081da:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081dc:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900081de:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081e0:	f200 811f 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
900081e4:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900081e6:	9e11      	ldr	r6, [sp, #68]	; 0x44
900081e8:	455d      	cmp	r5, fp
900081ea:	bf0c      	ite	eq
900081ec:	2600      	moveq	r6, #0
900081ee:	f006 0601 	andne.w	r6, r6, #1
900081f2:	2e00      	cmp	r6, #0
900081f4:	f000 80fb 	beq.w	900083ee <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081f8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900081fc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008200:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008202:	4650      	mov	r0, sl
90008204:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008208:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000820c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008210:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008212:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008214:	f200 8105 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
90008218:	4631      	mov	r1, r6
9000821a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000821c:	9e04      	ldr	r6, [sp, #16]
9000821e:	455d      	cmp	r5, fp
90008220:	bf0c      	ite	eq
90008222:	2600      	moveq	r6, #0
90008224:	f006 0601 	andne.w	r6, r6, #1
90008228:	2e00      	cmp	r6, #0
9000822a:	f000 817c 	beq.w	90008526 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000822e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008232:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008236:	4650      	mov	r0, sl
90008238:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000823c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008240:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008244:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008246:	f04f 030f 	mov.w	r3, #15
9000824a:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000824c:	f200 80e9 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
90008250:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90008252:	e70d      	b.n	90008070 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90008254:	9a07      	ldr	r2, [sp, #28]
90008256:	9b08      	ldr	r3, [sp, #32]
90008258:	3214      	adds	r2, #20
9000825a:	3301      	adds	r3, #1
9000825c:	9207      	str	r2, [sp, #28]
9000825e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90008260:	9308      	str	r3, [sp, #32]
90008262:	4293      	cmp	r3, r2
90008264:	f040 80ff 	bne.w	90008466 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90008268:	297f      	cmp	r1, #127	; 0x7f
9000826a:	d818      	bhi.n	9000829e <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000826c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90008270:	990b      	ldr	r1, [sp, #44]	; 0x2c
90008272:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90008276:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000827a:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000827c:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000827e:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008280:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90008284:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008288:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000828c:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000828e:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008290:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008292:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008296:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008298:	430b      	orrs	r3, r1
9000829a:	4313      	orrs	r3, r2
9000829c:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000829e:	9903      	ldr	r1, [sp, #12]
900082a0:	48b5      	ldr	r0, [pc, #724]	; (90008578 <BSP_I2C4_Init+0x790>)
900082a2:	f7ff fd81 	bl	90007da8 <MX_I2C4_Init>
900082a6:	2800      	cmp	r0, #0
900082a8:	f43f ada8 	beq.w	90007dfc <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
900082ac:	f06f 0007 	mvn.w	r0, #7
  return ret;
900082b0:	e5a5      	b.n	90007dfe <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
900082b2:	4632      	mov	r2, r6
900082b4:	9905      	ldr	r1, [sp, #20]
900082b6:	45ab      	cmp	fp, r5
900082b8:	bf0c      	ite	eq
900082ba:	2100      	moveq	r1, #0
900082bc:	f001 0101 	andne.w	r1, r1, #1
900082c0:	2900      	cmp	r1, #0
900082c2:	f43f af0a 	beq.w	900080da <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900082c6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900082ca:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900082ce:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900082d0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900082d4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900082d8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900082dc:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900082de:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900082e0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900082e2:	f200 809e 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
900082e6:	460a      	mov	r2, r1
900082e8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900082ea:	9907      	ldr	r1, [sp, #28]
900082ec:	45ab      	cmp	fp, r5
900082ee:	bf0c      	ite	eq
900082f0:	2100      	moveq	r1, #0
900082f2:	f001 0101 	andne.w	r1, r1, #1
900082f6:	2900      	cmp	r1, #0
900082f8:	f43f af0a 	beq.w	90008110 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900082fc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008300:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008304:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008306:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000830a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000830e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008312:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008314:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008316:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008318:	f200 8083 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
9000831c:	460a      	mov	r2, r1
9000831e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008320:	9909      	ldr	r1, [sp, #36]	; 0x24
90008322:	45ab      	cmp	fp, r5
90008324:	bf0c      	ite	eq
90008326:	2100      	moveq	r1, #0
90008328:	f001 0101 	andne.w	r1, r1, #1
9000832c:	2900      	cmp	r1, #0
9000832e:	f43f af0a 	beq.w	90008146 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008332:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008336:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000833a:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000833c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008340:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008344:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008348:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000834a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000834c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000834e:	d868      	bhi.n	90008422 <BSP_I2C4_Init+0x63a>
90008350:	460a      	mov	r2, r1
90008352:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008354:	990c      	ldr	r1, [sp, #48]	; 0x30
90008356:	45ab      	cmp	fp, r5
90008358:	bf0c      	ite	eq
9000835a:	2100      	moveq	r1, #0
9000835c:	f001 0101 	andne.w	r1, r1, #1
90008360:	2900      	cmp	r1, #0
90008362:	f43f af0b 	beq.w	9000817c <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008366:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000836a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000836e:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008370:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008374:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008378:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000837c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000837e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008380:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008382:	d84e      	bhi.n	90008422 <BSP_I2C4_Init+0x63a>
90008384:	460a      	mov	r2, r1
90008386:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008388:	990e      	ldr	r1, [sp, #56]	; 0x38
9000838a:	45ab      	cmp	fp, r5
9000838c:	bf0c      	ite	eq
9000838e:	2100      	moveq	r1, #0
90008390:	f001 0101 	andne.w	r1, r1, #1
90008394:	2900      	cmp	r1, #0
90008396:	f43f af0c 	beq.w	900081b2 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000839a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000839e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083a2:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083a4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083a8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083ac:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083b0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083b2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900083b4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083b6:	d834      	bhi.n	90008422 <BSP_I2C4_Init+0x63a>
900083b8:	460a      	mov	r2, r1
900083ba:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900083bc:	9910      	ldr	r1, [sp, #64]	; 0x40
900083be:	45ab      	cmp	fp, r5
900083c0:	bf0c      	ite	eq
900083c2:	2100      	moveq	r1, #0
900083c4:	f001 0101 	andne.w	r1, r1, #1
900083c8:	2900      	cmp	r1, #0
900083ca:	f000 80ae 	beq.w	9000852a <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083ce:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900083d2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083d6:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083d8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083dc:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083e0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083e4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083e6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900083e8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083ea:	d81a      	bhi.n	90008422 <BSP_I2C4_Init+0x63a>
900083ec:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900083ee:	9e12      	ldr	r6, [sp, #72]	; 0x48
900083f0:	455d      	cmp	r5, fp
900083f2:	bf0c      	ite	eq
900083f4:	2600      	moveq	r6, #0
900083f6:	f006 0601 	andne.w	r6, r6, #1
900083fa:	2e00      	cmp	r6, #0
900083fc:	f43f af0e 	beq.w	9000821c <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008400:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008404:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008408:	4650      	mov	r0, sl
9000840a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000840e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008412:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008416:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008418:	f04f 030e 	mov.w	r3, #14
9000841c:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000841e:	f67f af17 	bls.w	90008250 <BSP_I2C4_Init+0x468>
90008422:	4b56      	ldr	r3, [pc, #344]	; (9000857c <BSP_I2C4_Init+0x794>)
90008424:	900b      	str	r0, [sp, #44]	; 0x2c
90008426:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000842a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000842e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90008430:	f240 4201 	movw	r2, #1025	; 0x401
90008434:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008438:	f640 1ac4 	movw	sl, #2500	; 0x9c4
9000843c:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000843e:	f240 4b12 	movw	fp, #1042	; 0x412
90008442:	920d      	str	r2, [sp, #52]	; 0x34
90008444:	9a02      	ldr	r2, [sp, #8]
90008446:	4296      	cmp	r6, r2
90008448:	bf38      	it	cc
9000844a:	4616      	movcc	r6, r2
9000844c:	4a4c      	ldr	r2, [pc, #304]	; (90008580 <BSP_I2C4_Init+0x798>)
9000844e:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008450:	2200      	movs	r2, #0
90008452:	9208      	str	r2, [sp, #32]
90008454:	f04f 32ff 	mov.w	r2, #4294967295
90008458:	4611      	mov	r1, r2
9000845a:	f103 0232 	add.w	r2, r3, #50	; 0x32
9000845e:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
90008462:	920c      	str	r2, [sp, #48]	; 0x30
90008464:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90008466:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90008468:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000846c:	6818      	ldr	r0, [r3, #0]
9000846e:	9b02      	ldr	r3, [sp, #8]
90008470:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90008474:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90008476:	1a1b      	subs	r3, r3, r0
90008478:	ea4f 0943 	mov.w	r9, r3, lsl #1
9000847c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000847e:	eb03 0e00 	add.w	lr, r3, r0
90008482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90008484:	4403      	add	r3, r0
90008486:	9309      	str	r3, [sp, #36]	; 0x24
90008488:	e006      	b.n	90008498 <BSP_I2C4_Init+0x6b0>
9000848a:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
9000848e:	4486      	add	lr, r0
90008490:	eba9 0900 	sub.w	r9, r9, r0
90008494:	f43f aede 	beq.w	90008254 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90008498:	f240 5214 	movw	r2, #1300	; 0x514
9000849c:	f8cd 8004 	str.w	r8, [sp, #4]
900084a0:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900084a4:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900084a8:	4596      	cmp	lr, r2
900084aa:	d9ee      	bls.n	9000848a <BSP_I2C4_Init+0x6a2>
900084ac:	9a02      	ldr	r2, [sp, #8]
900084ae:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
900084b2:	d2ea      	bcs.n	9000848a <BSP_I2C4_Init+0x6a2>
900084b4:	f640 0c34 	movw	ip, #2100	; 0x834
900084b8:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900084ba:	f8cd 9018 	str.w	r9, [sp, #24]
900084be:	2200      	movs	r2, #0
900084c0:	ebac 0c03 	sub.w	ip, ip, r3
900084c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900084c6:	4689      	mov	r9, r1
900084c8:	4473      	add	r3, lr
900084ca:	e9cd e804 	strd	lr, r8, [sp, #16]
900084ce:	f8dd 8020 	ldr.w	r8, [sp, #32]
900084d2:	f8dd e01c 	ldr.w	lr, [sp, #28]
900084d6:	e005      	b.n	900084e4 <BSP_I2C4_Init+0x6fc>
900084d8:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
900084dc:	4403      	add	r3, r0
900084de:	eba4 0400 	sub.w	r4, r4, r0
900084e2:	d01a      	beq.n	9000851a <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900084e4:	eb0c 0103 	add.w	r1, ip, r3
900084e8:	4617      	mov	r7, r2
900084ea:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
900084ee:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900084f0:	42b1      	cmp	r1, r6
900084f2:	d9f1      	bls.n	900084d8 <BSP_I2C4_Init+0x6f0>
900084f4:	455d      	cmp	r5, fp
900084f6:	d8ef      	bhi.n	900084d8 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
900084f8:	ea33 0123 	bics.w	r1, r3, r3, asr #32
900084fc:	bf28      	it	cs
900084fe:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90008500:	458a      	cmp	sl, r1
90008502:	d9e9      	bls.n	900084d8 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90008504:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008506:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000850a:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000850c:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000850e:	4403      	add	r3, r0
90008510:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90008514:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008518:	d1e4      	bne.n	900084e4 <BSP_I2C4_Init+0x6fc>
9000851a:	4649      	mov	r1, r9
9000851c:	f8dd 9018 	ldr.w	r9, [sp, #24]
90008520:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90008524:	e7b1      	b.n	9000848a <BSP_I2C4_Init+0x6a2>
90008526:	460e      	mov	r6, r1
90008528:	e5a2      	b.n	90008070 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000852a:	4611      	mov	r1, r2
9000852c:	e65b      	b.n	900081e6 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000852e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008532:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008536:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008538:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000853c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008540:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008544:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008546:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008548:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000854a:	f63f af6a 	bhi.w	90008422 <BSP_I2C4_Init+0x63a>
9000854e:	46ab      	mov	fp, r5
90008550:	e6b0      	b.n	900082b4 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90008552:	3501      	adds	r5, #1
90008554:	9b02      	ldr	r3, [sp, #8]
90008556:	2d10      	cmp	r5, #16
90008558:	441f      	add	r7, r3
9000855a:	f47f acc7 	bne.w	90007eec <BSP_I2C4_Init+0x104>
9000855e:	b126      	cbz	r6, 9000856a <BSP_I2C4_Init+0x782>
90008560:	4b06      	ldr	r3, [pc, #24]	; (9000857c <BSP_I2C4_Init+0x794>)
90008562:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90008566:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000856a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000856c:	2b00      	cmp	r3, #0
9000856e:	f43f ae96 	beq.w	9000829e <BSP_I2C4_Init+0x4b6>
90008572:	4b03      	ldr	r3, [pc, #12]	; (90008580 <BSP_I2C4_Init+0x798>)
90008574:	930b      	str	r3, [sp, #44]	; 0x2c
90008576:	e75a      	b.n	9000842e <BSP_I2C4_Init+0x646>
90008578:	2402010c 	.word	0x2402010c
9000857c:	24020108 	.word	0x24020108
90008580:	2401f708 	.word	0x2401f708

90008584 <BSP_I2C4_WriteReg>:
{
90008584:	b530      	push	{r4, r5, lr}
90008586:	4614      	mov	r4, r2
90008588:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000858a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000858e:	460a      	mov	r2, r1
90008590:	9301      	str	r3, [sp, #4]
90008592:	4601      	mov	r1, r0
90008594:	2301      	movs	r3, #1
90008596:	4809      	ldr	r0, [pc, #36]	; (900085bc <BSP_I2C4_WriteReg+0x38>)
90008598:	9502      	str	r5, [sp, #8]
9000859a:	9400      	str	r4, [sp, #0]
9000859c:	f001 f958 	bl	90009850 <HAL_I2C_Mem_Write>
900085a0:	b908      	cbnz	r0, 900085a6 <BSP_I2C4_WriteReg+0x22>
}
900085a2:	b005      	add	sp, #20
900085a4:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900085a6:	4805      	ldr	r0, [pc, #20]	; (900085bc <BSP_I2C4_WriteReg+0x38>)
900085a8:	f001 fbf4 	bl	90009d94 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
900085ac:	2804      	cmp	r0, #4
900085ae:	bf0c      	ite	eq
900085b0:	f06f 0065 	mvneq.w	r0, #101	; 0x65
900085b4:	f06f 0003 	mvnne.w	r0, #3
900085b8:	e7f3      	b.n	900085a2 <BSP_I2C4_WriteReg+0x1e>
900085ba:	bf00      	nop
900085bc:	2402010c 	.word	0x2402010c

900085c0 <BSP_I2C4_ReadReg>:
{
900085c0:	b530      	push	{r4, r5, lr}
900085c2:	4614      	mov	r4, r2
900085c4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900085c6:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900085ca:	460a      	mov	r2, r1
900085cc:	9301      	str	r3, [sp, #4]
900085ce:	4601      	mov	r1, r0
900085d0:	2301      	movs	r3, #1
900085d2:	4809      	ldr	r0, [pc, #36]	; (900085f8 <BSP_I2C4_ReadReg+0x38>)
900085d4:	9502      	str	r5, [sp, #8]
900085d6:	9400      	str	r4, [sp, #0]
900085d8:	f001 fa6e 	bl	90009ab8 <HAL_I2C_Mem_Read>
900085dc:	b908      	cbnz	r0, 900085e2 <BSP_I2C4_ReadReg+0x22>
}
900085de:	b005      	add	sp, #20
900085e0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900085e2:	4805      	ldr	r0, [pc, #20]	; (900085f8 <BSP_I2C4_ReadReg+0x38>)
900085e4:	f001 fbd6 	bl	90009d94 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
900085e8:	2804      	cmp	r0, #4
900085ea:	bf0c      	ite	eq
900085ec:	f06f 0065 	mvneq.w	r0, #101	; 0x65
900085f0:	f06f 0003 	mvnne.w	r0, #3
900085f4:	e7f3      	b.n	900085de <BSP_I2C4_ReadReg+0x1e>
900085f6:	bf00      	nop
900085f8:	2402010c 	.word	0x2402010c

900085fc <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900085fc:	f000 baaa 	b.w	90008b54 <HAL_GetTick>

90008600 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90008600:	b970      	cbnz	r0, 90008620 <BSP_SDRAM_DeInit+0x20>
{
90008602:	b510      	push	{r4, lr}
90008604:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90008606:	4808      	ldr	r0, [pc, #32]	; (90008628 <BSP_SDRAM_DeInit+0x28>)
90008608:	f005 f876 	bl	9000d6f8 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000860c:	207a      	movs	r0, #122	; 0x7a
9000860e:	f000 fb0b 	bl	90008c28 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008612:	4b06      	ldr	r3, [pc, #24]	; (9000862c <BSP_SDRAM_DeInit+0x2c>)
90008614:	4806      	ldr	r0, [pc, #24]	; (90008630 <BSP_SDRAM_DeInit+0x30>)
90008616:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90008618:	f003 f98e 	bl	9000b938 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000861c:	4620      	mov	r0, r4
}
9000861e:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90008620:	f06f 0001 	mvn.w	r0, #1
}
90008624:	4770      	bx	lr
90008626:	bf00      	nop
90008628:	24020160 	.word	0x24020160
9000862c:	52000040 	.word	0x52000040
90008630:	24020194 	.word	0x24020194

90008634 <MX_SDRAM_BANK2_Init>:
{
90008634:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90008636:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90008638:	2200      	movs	r2, #0
{
9000863a:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000863c:	4c13      	ldr	r4, [pc, #76]	; (9000868c <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000863e:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90008640:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90008642:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90008644:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90008646:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90008648:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000864a:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000864c:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90008650:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90008652:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008654:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90008656:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008658:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000865a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000865e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008660:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008664:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008666:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008668:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000866c:	2204      	movs	r2, #4
9000866e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90008672:	2202      	movs	r2, #2
90008674:	2302      	movs	r3, #2
90008676:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000867a:	4b05      	ldr	r3, [pc, #20]	; (90008690 <MX_SDRAM_BANK2_Init+0x5c>)
9000867c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000867e:	f005 f811 	bl	9000d6a4 <HAL_SDRAM_Init>
}
90008682:	3800      	subs	r0, #0
90008684:	bf18      	it	ne
90008686:	2001      	movne	r0, #1
90008688:	b009      	add	sp, #36	; 0x24
9000868a:	bd30      	pop	{r4, r5, pc}
9000868c:	24020160 	.word	0x24020160
90008690:	52004140 	.word	0x52004140

90008694 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90008694:	2800      	cmp	r0, #0
90008696:	f040 80d2 	bne.w	9000883e <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000869a:	4b6c      	ldr	r3, [pc, #432]	; (9000884c <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000869c:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000869e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900086a2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
900086a6:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
900086a8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
900086ac:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
900086ae:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900086b2:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900086b4:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900086b8:	4c65      	ldr	r4, [pc, #404]	; (90008850 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
900086ba:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900086be:	4e65      	ldr	r6, [pc, #404]	; (90008854 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
900086c0:	9201      	str	r2, [sp, #4]
900086c2:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
900086c4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900086c8:	f042 0201 	orr.w	r2, r2, #1
900086cc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900086d0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900086d4:	f002 0201 	and.w	r2, r2, #1
900086d8:	9202      	str	r2, [sp, #8]
900086da:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900086dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900086e0:	f042 0208 	orr.w	r2, r2, #8
900086e4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900086e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900086ec:	f002 0208 	and.w	r2, r2, #8
900086f0:	9203      	str	r2, [sp, #12]
900086f2:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900086f4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900086f8:	f042 0210 	orr.w	r2, r2, #16
900086fc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008700:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008704:	f002 0210 	and.w	r2, r2, #16
90008708:	9204      	str	r2, [sp, #16]
9000870a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000870c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008710:	f042 0220 	orr.w	r2, r2, #32
90008714:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008718:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000871c:	f002 0220 	and.w	r2, r2, #32
90008720:	9205      	str	r2, [sp, #20]
90008722:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90008724:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008728:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000872c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008730:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008734:	f002 0240 	and.w	r2, r2, #64	; 0x40
90008738:	9206      	str	r2, [sp, #24]
9000873a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000873c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008740:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90008744:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008748:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000874c:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000874e:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008750:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008754:	e9cd 0108 	strd	r0, r1, [sp, #32]
90008758:	2001      	movs	r0, #1
9000875a:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000875c:	9307      	str	r3, [sp, #28]
9000875e:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008760:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90008764:	a908      	add	r1, sp, #32
90008766:	483c      	ldr	r0, [pc, #240]	; (90008858 <BSP_SDRAM_Init+0x1c4>)
90008768:	f000 fc7e 	bl	90009068 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000876c:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008770:	a908      	add	r1, sp, #32
90008772:	483a      	ldr	r0, [pc, #232]	; (9000885c <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008774:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008776:	f000 fc77 	bl	90009068 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000877a:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000877e:	a908      	add	r1, sp, #32
90008780:	4837      	ldr	r0, [pc, #220]	; (90008860 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008782:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008784:	f000 fc70 	bl	90009068 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008788:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000878c:	a908      	add	r1, sp, #32
9000878e:	4835      	ldr	r0, [pc, #212]	; (90008864 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008790:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008792:	f000 fc69 	bl	90009068 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008796:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008798:	a908      	add	r1, sp, #32
9000879a:	4833      	ldr	r0, [pc, #204]	; (90008868 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000879c:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000879e:	f000 fc63 	bl	90009068 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900087a2:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900087a4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900087a8:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
900087ac:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900087ae:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
900087b0:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900087b2:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900087b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900087b8:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900087ba:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900087bc:	4a2b      	ldr	r2, [pc, #172]	; (9000886c <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900087be:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900087c0:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900087c2:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900087c4:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
900087c8:	f640 0308 	movw	r3, #2056	; 0x808
900087cc:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900087ce:	2320      	movs	r3, #32
900087d0:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900087d2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
900087d6:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900087da:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
900087dc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
900087e0:	f003 f8aa 	bl	9000b938 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
900087e4:	4620      	mov	r0, r4
900087e6:	f003 f82d 	bl	9000b844 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
900087ea:	462a      	mov	r2, r5
900087ec:	210f      	movs	r1, #15
900087ee:	207a      	movs	r0, #122	; 0x7a
900087f0:	f000 f9ce 	bl	90008b90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
900087f4:	207a      	movs	r0, #122	; 0x7a
900087f6:	f000 fa09 	bl	90008c0c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
900087fa:	2210      	movs	r2, #16
900087fc:	2104      	movs	r1, #4
900087fe:	4630      	mov	r0, r6
90008800:	f7ff ff18 	bl	90008634 <MX_SDRAM_BANK2_Init>
90008804:	b9f0      	cbnz	r0, 90008844 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90008806:	491a      	ldr	r1, [pc, #104]	; (90008870 <BSP_SDRAM_Init+0x1dc>)
90008808:	2208      	movs	r2, #8
9000880a:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000880c:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000880e:	e9c1 2300 	strd	r2, r3, [r1]
90008812:	f240 6203 	movw	r2, #1539	; 0x603
90008816:	2300      	movs	r3, #0
90008818:	e9c1 2302 	strd	r2, r3, [r1, #8]
9000881c:	2200      	movs	r2, #0
9000881e:	2330      	movs	r3, #48	; 0x30
90008820:	e9c1 2304 	strd	r2, r3, [r1, #16]
90008824:	2200      	movs	r2, #0
90008826:	f44f 7300 	mov.w	r3, #512	; 0x200
9000882a:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000882e:	f7ff fa37 	bl	90007ca0 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90008832:	2800      	cmp	r0, #0
90008834:	bf18      	it	ne
90008836:	f06f 0004 	mvnne.w	r0, #4
}
9000883a:	b00e      	add	sp, #56	; 0x38
9000883c:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000883e:	f06f 0001 	mvn.w	r0, #1
}
90008842:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90008844:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008848:	e7f7      	b.n	9000883a <BSP_SDRAM_Init+0x1a6>
9000884a:	bf00      	nop
9000884c:	58024400 	.word	0x58024400
90008850:	24020200 	.word	0x24020200
90008854:	24020160 	.word	0x24020160
90008858:	58020c00 	.word	0x58020c00
9000885c:	58021000 	.word	0x58021000
90008860:	58021400 	.word	0x58021400
90008864:	58021800 	.word	0x58021800
90008868:	58021c00 	.word	0x58021c00
9000886c:	52000040 	.word	0x52000040
90008870:	24020270 	.word	0x24020270

90008874 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90008874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008878:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000887a:	2800      	cmp	r0, #0
9000887c:	d16b      	bne.n	90008956 <BSP_TS_Init+0xe2>
9000887e:	680b      	ldr	r3, [r1, #0]
90008880:	460c      	mov	r4, r1
90008882:	1e5a      	subs	r2, r3, #1
90008884:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
90008888:	d265      	bcs.n	90008956 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000888a:	684a      	ldr	r2, [r1, #4]
9000888c:	1e51      	subs	r1, r2, #1
9000888e:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90008892:	d260      	bcs.n	90008956 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90008894:	4293      	cmp	r3, r2
90008896:	bf28      	it	cs
90008898:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000889a:	68e2      	ldr	r2, [r4, #12]
9000889c:	429a      	cmp	r2, r3
9000889e:	d85a      	bhi.n	90008956 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900088a0:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900088a2:	4b31      	ldr	r3, [pc, #196]	; (90008968 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900088a4:	4d31      	ldr	r5, [pc, #196]	; (9000896c <BSP_TS_Init+0xf8>)
900088a6:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900088a8:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
900088ac:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900088ae:	4a30      	ldr	r2, [pc, #192]	; (90008970 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900088b0:	4b30      	ldr	r3, [pc, #192]	; (90008974 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900088b2:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900088b4:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900088b6:	4a30      	ldr	r2, [pc, #192]	; (90008978 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
900088b8:	4b30      	ldr	r3, [pc, #192]	; (9000897c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
900088ba:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900088bc:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900088be:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
900088c0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900088c2:	f7ff f93f 	bl	90007b44 <FT5336_RegisterBusIO>
900088c6:	2800      	cmp	r0, #0
900088c8:	d14b      	bne.n	90008962 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
900088ca:	a901      	add	r1, sp, #4
900088cc:	4628      	mov	r0, r5
900088ce:	f7ff f82f 	bl	90007930 <FT5336_ReadID>
900088d2:	2800      	cmp	r0, #0
900088d4:	d145      	bne.n	90008962 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
900088d6:	9b01      	ldr	r3, [sp, #4]
900088d8:	2b51      	cmp	r3, #81	; 0x51
900088da:	d142      	bne.n	90008962 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900088dc:	4b28      	ldr	r3, [pc, #160]	; (90008980 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
900088de:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
900088e0:	4f28      	ldr	r7, [pc, #160]	; (90008984 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900088e2:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 9000898c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
900088e6:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
900088e8:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
900088ec:	681b      	ldr	r3, [r3, #0]
900088ee:	4798      	blx	r3
900088f0:	4606      	mov	r6, r0
900088f2:	2800      	cmp	r0, #0
900088f4:	d135      	bne.n	90008962 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900088f6:	4d24      	ldr	r5, [pc, #144]	; (90008988 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900088f8:	a902      	add	r1, sp, #8
900088fa:	6838      	ldr	r0, [r7, #0]
900088fc:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008900:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008904:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008906:	e9c5 7200 	strd	r7, r2, [r5]
9000890a:	68a2      	ldr	r2, [r4, #8]
9000890c:	60aa      	str	r2, [r5, #8]
9000890e:	68e2      	ldr	r2, [r4, #12]
90008910:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008912:	4798      	blx	r3
90008914:	2800      	cmp	r0, #0
90008916:	db18      	blt.n	9000894a <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90008918:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000891c:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008920:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008922:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008926:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008928:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000892a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000892c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000892e:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008932:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008936:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008938:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000893a:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000893c:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000893e:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008940:	63eb      	str	r3, [r5, #60]	; 0x3c
}
90008942:	4630      	mov	r0, r6
90008944:	b008      	add	sp, #32
90008946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000894a:	f06f 0604 	mvn.w	r6, #4
}
9000894e:	4630      	mov	r0, r6
90008950:	b008      	add	sp, #32
90008952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90008956:	f06f 0601 	mvn.w	r6, #1
}
9000895a:	4630      	mov	r0, r6
9000895c:	b008      	add	sp, #32
9000895e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90008962:	f04f 36ff 	mov.w	r6, #4294967295
90008966:	e7ec      	b.n	90008942 <BSP_TS_Init+0xce>
90008968:	90007de9 	.word	0x90007de9
9000896c:	24020290 	.word	0x24020290
90008970:	90007d55 	.word	0x90007d55
90008974:	900085c1 	.word	0x900085c1
90008978:	90008585 	.word	0x90008585
9000897c:	900085fd 	.word	0x900085fd
90008980:	2400003c 	.word	0x2400003c
90008984:	240202b8 	.word	0x240202b8
90008988:	240202bc 	.word	0x240202bc
9000898c:	240202fc 	.word	0x240202fc

90008990 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90008990:	2800      	cmp	r0, #0
90008992:	d157      	bne.n	90008a44 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008994:	4b2d      	ldr	r3, [pc, #180]	; (90008a4c <BSP_TS_GetState+0xbc>)
90008996:	4a2e      	ldr	r2, [pc, #184]	; (90008a50 <BSP_TS_GetState+0xc0>)
90008998:	681b      	ldr	r3, [r3, #0]
9000899a:	6810      	ldr	r0, [r2, #0]
9000899c:	691b      	ldr	r3, [r3, #16]
{
9000899e:	b5f0      	push	{r4, r5, r6, r7, lr}
900089a0:	b085      	sub	sp, #20
900089a2:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900089a4:	a901      	add	r1, sp, #4
900089a6:	4798      	blx	r3
900089a8:	2800      	cmp	r0, #0
900089aa:	db41      	blt.n	90008a30 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
900089ac:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900089ae:	4b29      	ldr	r3, [pc, #164]	; (90008a54 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
900089b0:	b93d      	cbnz	r5, 900089c2 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
900089b2:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
900089b4:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900089b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
900089b8:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900089ba:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900089be:	b005      	add	sp, #20
900089c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900089c2:	6898      	ldr	r0, [r3, #8]
900089c4:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
900089c6:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900089ca:	d435      	bmi.n	90008a38 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
900089cc:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
900089ce:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900089d0:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
900089d2:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
900089d6:	bf1c      	itt	ne
900089d8:	f106 32ff 	addne.w	r2, r6, #4294967295
900089dc:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
900089e0:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
900089e4:	6958      	ldr	r0, [r3, #20]
900089e6:	bf18      	it	ne
900089e8:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
900089ea:	681f      	ldr	r7, [r3, #0]
900089ec:	fb07 f202 	mul.w	r2, r7, r2
900089f0:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900089f4:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
900089f6:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
900089f8:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
900089fc:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
900089fe:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008a00:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008a02:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008a04:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008a08:	bf8c      	ite	hi
90008a0a:	1b90      	subhi	r0, r2, r6
90008a0c:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008a0e:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008a10:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008a12:	bf8c      	ite	hi
90008a14:	1b4f      	subhi	r7, r1, r5
90008a16:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008a18:	42b8      	cmp	r0, r7
90008a1a:	bf38      	it	cc
90008a1c:	4638      	movcc	r0, r7
90008a1e:	68df      	ldr	r7, [r3, #12]
90008a20:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90008a22:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008a26:	d20a      	bcs.n	90008a3e <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90008a28:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90008a2a:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90008a2c:	b005      	add	sp, #20
90008a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90008a30:	f06f 0004 	mvn.w	r0, #4
}
90008a34:	b005      	add	sp, #20
90008a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90008a38:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90008a3a:	463a      	mov	r2, r7
90008a3c:	e7c8      	b.n	900089d0 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90008a3e:	e9c4 6501 	strd	r6, r5, [r4, #4]
90008a42:	e7bc      	b.n	900089be <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90008a44:	f06f 0001 	mvn.w	r0, #1
}
90008a48:	4770      	bx	lr
90008a4a:	bf00      	nop
90008a4c:	240202fc 	.word	0x240202fc
90008a50:	240202b8 	.word	0x240202b8
90008a54:	240202bc 	.word	0x240202bc

90008a58 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90008a58:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008a5a:	4c19      	ldr	r4, [pc, #100]	; (90008ac0 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90008a5c:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90008a5e:	4b19      	ldr	r3, [pc, #100]	; (90008ac4 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008a60:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90008a64:	4818      	ldr	r0, [pc, #96]	; (90008ac8 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008a66:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90008a6a:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90008a6e:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008a70:	4c16      	ldr	r4, [pc, #88]	; (90008acc <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90008a72:	f041 0101 	orr.w	r1, r1, #1
90008a76:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90008a78:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90008a7a:	6819      	ldr	r1, [r3, #0]
90008a7c:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008a7e:	4914      	ldr	r1, [pc, #80]	; (90008ad0 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90008a80:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90008a82:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90008a84:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90008a86:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90008a88:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90008a8a:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90008a8c:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90008a8e:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90008a90:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90008a92:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90008a94:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90008a96:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90008a98:	6818      	ldr	r0, [r3, #0]
90008a9a:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90008a9e:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90008aa0:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008aa2:	6823      	ldr	r3, [r4, #0]
90008aa4:	4019      	ands	r1, r3
90008aa6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90008aaa:	d203      	bcs.n	90008ab4 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90008aac:	4b09      	ldr	r3, [pc, #36]	; (90008ad4 <SystemInit+0x7c>)
90008aae:	2201      	movs	r2, #1
90008ab0:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008ab4:	4a08      	ldr	r2, [pc, #32]	; (90008ad8 <SystemInit+0x80>)
90008ab6:	4b02      	ldr	r3, [pc, #8]	; (90008ac0 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90008ab8:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008abc:	609a      	str	r2, [r3, #8]
}
90008abe:	4770      	bx	lr
90008ac0:	e000ed00 	.word	0xe000ed00
90008ac4:	58024400 	.word	0x58024400
90008ac8:	eaf6ed7f 	.word	0xeaf6ed7f
90008acc:	5c001000 	.word	0x5c001000
90008ad0:	ffff0000 	.word	0xffff0000
90008ad4:	51008000 	.word	0x51008000
90008ad8:	90000000 	.word	0x90000000

90008adc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90008adc:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008ade:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008ae0:	4c12      	ldr	r4, [pc, #72]	; (90008b2c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008ae2:	f000 f843 	bl	90008b6c <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008ae6:	f003 fc65 	bl	9000c3b4 <HAL_RCC_GetSysClockFreq>
90008aea:	4b11      	ldr	r3, [pc, #68]	; (90008b30 <HAL_Init+0x54>)
90008aec:	4911      	ldr	r1, [pc, #68]	; (90008b34 <HAL_Init+0x58>)
90008aee:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008af0:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008af2:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008af6:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008afa:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008afc:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008afe:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008b02:	490d      	ldr	r1, [pc, #52]	; (90008b38 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008b04:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008b08:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008b0a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90008b0e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008b10:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008b12:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008b14:	f7fa fc62 	bl	900033dc <HAL_InitTick>
90008b18:	b110      	cbz	r0, 90008b20 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90008b1a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90008b1c:	4620      	mov	r0, r4
90008b1e:	bd10      	pop	{r4, pc}
90008b20:	4604      	mov	r4, r0
  HAL_MspInit();
90008b22:	f7fa fa19 	bl	90002f58 <HAL_MspInit>
}
90008b26:	4620      	mov	r0, r4
90008b28:	bd10      	pop	{r4, pc}
90008b2a:	bf00      	nop
90008b2c:	24000070 	.word	0x24000070
90008b30:	58024400 	.word	0x58024400
90008b34:	9002b1b0 	.word	0x9002b1b0
90008b38:	2400006c 	.word	0x2400006c

90008b3c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90008b3c:	4a03      	ldr	r2, [pc, #12]	; (90008b4c <HAL_IncTick+0x10>)
90008b3e:	4b04      	ldr	r3, [pc, #16]	; (90008b50 <HAL_IncTick+0x14>)
90008b40:	6811      	ldr	r1, [r2, #0]
90008b42:	781b      	ldrb	r3, [r3, #0]
90008b44:	440b      	add	r3, r1
90008b46:	6013      	str	r3, [r2, #0]
}
90008b48:	4770      	bx	lr
90008b4a:	bf00      	nop
90008b4c:	24020300 	.word	0x24020300
90008b50:	24000074 	.word	0x24000074

90008b54 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90008b54:	4b01      	ldr	r3, [pc, #4]	; (90008b5c <HAL_GetTick+0x8>)
90008b56:	6818      	ldr	r0, [r3, #0]
}
90008b58:	4770      	bx	lr
90008b5a:	bf00      	nop
90008b5c:	24020300 	.word	0x24020300

90008b60 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90008b60:	4b01      	ldr	r3, [pc, #4]	; (90008b68 <HAL_GetREVID+0x8>)
90008b62:	6818      	ldr	r0, [r3, #0]
}
90008b64:	0c00      	lsrs	r0, r0, #16
90008b66:	4770      	bx	lr
90008b68:	5c001000 	.word	0x5c001000

90008b6c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008b6c:	4906      	ldr	r1, [pc, #24]	; (90008b88 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008b6e:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008b72:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90008b74:	4b05      	ldr	r3, [pc, #20]	; (90008b8c <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008b76:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008b78:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008b7c:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90008b80:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90008b82:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90008b84:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90008b86:	4770      	bx	lr
90008b88:	e000ed00 	.word	0xe000ed00
90008b8c:	05fa0000 	.word	0x05fa0000

90008b90 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90008b90:	4b1b      	ldr	r3, [pc, #108]	; (90008c00 <HAL_NVIC_SetPriority+0x70>)
90008b92:	68db      	ldr	r3, [r3, #12]
90008b94:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90008b98:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008b9a:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008b9e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008ba2:	f1be 0f04 	cmp.w	lr, #4
90008ba6:	bf28      	it	cs
90008ba8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008bac:	f1bc 0f06 	cmp.w	ip, #6
90008bb0:	d91a      	bls.n	90008be8 <HAL_NVIC_SetPriority+0x58>
90008bb2:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90008bb4:	f04f 3cff 	mov.w	ip, #4294967295
90008bb8:	fa0c fc03 	lsl.w	ip, ip, r3
90008bbc:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008bc0:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90008bc4:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008bc6:	fa0c fc0e 	lsl.w	ip, ip, lr
90008bca:	ea21 010c 	bic.w	r1, r1, ip
90008bce:	fa01 f103 	lsl.w	r1, r1, r3
90008bd2:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90008bd6:	db0a      	blt.n	90008bee <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008bd8:	0109      	lsls	r1, r1, #4
90008bda:	4b0a      	ldr	r3, [pc, #40]	; (90008c04 <HAL_NVIC_SetPriority+0x74>)
90008bdc:	b2c9      	uxtb	r1, r1
90008bde:	4403      	add	r3, r0
90008be0:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008be4:	f85d fb04 	ldr.w	pc, [sp], #4
90008be8:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008bea:	4613      	mov	r3, r2
90008bec:	e7e8      	b.n	90008bc0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008bee:	f000 000f 	and.w	r0, r0, #15
90008bf2:	0109      	lsls	r1, r1, #4
90008bf4:	4b04      	ldr	r3, [pc, #16]	; (90008c08 <HAL_NVIC_SetPriority+0x78>)
90008bf6:	b2c9      	uxtb	r1, r1
90008bf8:	4403      	add	r3, r0
90008bfa:	7619      	strb	r1, [r3, #24]
90008bfc:	f85d fb04 	ldr.w	pc, [sp], #4
90008c00:	e000ed00 	.word	0xe000ed00
90008c04:	e000e100 	.word	0xe000e100
90008c08:	e000ecfc 	.word	0xe000ecfc

90008c0c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008c0c:	2800      	cmp	r0, #0
90008c0e:	db07      	blt.n	90008c20 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008c10:	2301      	movs	r3, #1
90008c12:	f000 011f 	and.w	r1, r0, #31
90008c16:	4a03      	ldr	r2, [pc, #12]	; (90008c24 <HAL_NVIC_EnableIRQ+0x18>)
90008c18:	0940      	lsrs	r0, r0, #5
90008c1a:	408b      	lsls	r3, r1
90008c1c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90008c20:	4770      	bx	lr
90008c22:	bf00      	nop
90008c24:	e000e100 	.word	0xe000e100

90008c28 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008c28:	2800      	cmp	r0, #0
90008c2a:	db0c      	blt.n	90008c46 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008c2c:	0943      	lsrs	r3, r0, #5
90008c2e:	2201      	movs	r2, #1
90008c30:	f000 001f 	and.w	r0, r0, #31
90008c34:	4904      	ldr	r1, [pc, #16]	; (90008c48 <HAL_NVIC_DisableIRQ+0x20>)
90008c36:	3320      	adds	r3, #32
90008c38:	4082      	lsls	r2, r0
90008c3a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90008c3e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008c42:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008c46:	4770      	bx	lr
90008c48:	e000e100 	.word	0xe000e100

90008c4c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90008c4c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008c50:	4b04      	ldr	r3, [pc, #16]	; (90008c64 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90008c52:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008c54:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90008c56:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90008c5a:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90008c5c:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
90008c60:	4770      	bx	lr
90008c62:	bf00      	nop
90008c64:	e000ed00 	.word	0xe000ed00

90008c68 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008c68:	4b06      	ldr	r3, [pc, #24]	; (90008c84 <HAL_MPU_Enable+0x1c>)
90008c6a:	f040 0001 	orr.w	r0, r0, #1
90008c6e:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90008c72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90008c74:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90008c78:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008c7a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008c7e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90008c82:	4770      	bx	lr
90008c84:	e000ed00 	.word	0xe000ed00

90008c88 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008c88:	4a17      	ldr	r2, [pc, #92]	; (90008ce8 <HAL_MPU_ConfigRegion+0x60>)
90008c8a:	7843      	ldrb	r3, [r0, #1]
90008c8c:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90008c90:	7801      	ldrb	r1, [r0, #0]
90008c92:	b321      	cbz	r1, 90008cde <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90008c94:	6843      	ldr	r3, [r0, #4]
{
90008c96:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90008c98:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008c9c:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008c9e:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008ca2:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90008ca4:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008ca8:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008cac:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008cb0:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90008cb2:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008cb4:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90008cb8:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008cbc:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90008cc0:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008cc4:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90008cc8:	7a01      	ldrb	r1, [r0, #8]
90008cca:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90008cce:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008cd2:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008cd6:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90008cda:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90008cde:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90008ce2:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90008ce6:	4770      	bx	lr
90008ce8:	e000ed00 	.word	0xe000ed00

90008cec <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008cec:	2800      	cmp	r0, #0
90008cee:	d036      	beq.n	90008d5e <HAL_CRC_Init+0x72>
{
90008cf0:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90008cf2:	7f43      	ldrb	r3, [r0, #29]
90008cf4:	4604      	mov	r4, r0
90008cf6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90008cfa:	b363      	cbz	r3, 90008d56 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008cfc:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008cfe:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008d00:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008d02:	b9f3      	cbnz	r3, 90008d42 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008d04:	6823      	ldr	r3, [r4, #0]
90008d06:	4a17      	ldr	r2, [pc, #92]	; (90008d64 <HAL_CRC_Init+0x78>)
90008d08:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008d0a:	689a      	ldr	r2, [r3, #8]
90008d0c:	f022 0218 	bic.w	r2, r2, #24
90008d10:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90008d12:	7962      	ldrb	r2, [r4, #5]
90008d14:	b18a      	cbz	r2, 90008d3a <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90008d16:	6922      	ldr	r2, [r4, #16]
90008d18:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008d1a:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008d1c:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008d20:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90008d24:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90008d26:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008d28:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008d2a:	689a      	ldr	r2, [r3, #8]
90008d2c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90008d30:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90008d32:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008d34:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90008d36:	7761      	strb	r1, [r4, #29]
}
90008d38:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008d3a:	f04f 32ff 	mov.w	r2, #4294967295
90008d3e:	611a      	str	r2, [r3, #16]
90008d40:	e7eb      	b.n	90008d1a <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90008d42:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90008d46:	4620      	mov	r0, r4
90008d48:	f000 f80e 	bl	90008d68 <HAL_CRCEx_Polynomial_Set>
90008d4c:	b908      	cbnz	r0, 90008d52 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008d4e:	6823      	ldr	r3, [r4, #0]
90008d50:	e7df      	b.n	90008d12 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90008d52:	2001      	movs	r0, #1
}
90008d54:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90008d56:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008d58:	f7fa f918 	bl	90002f8c <HAL_CRC_MspInit>
90008d5c:	e7ce      	b.n	90008cfc <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008d5e:	2001      	movs	r0, #1
}
90008d60:	4770      	bx	lr
90008d62:	bf00      	nop
90008d64:	04c11db7 	.word	0x04c11db7

90008d68 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008d68:	07cb      	lsls	r3, r1, #31
90008d6a:	d51a      	bpl.n	90008da2 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008d6c:	231e      	movs	r3, #30
{
90008d6e:	b410      	push	{r4}
90008d70:	e001      	b.n	90008d76 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008d72:	3b01      	subs	r3, #1
90008d74:	d317      	bcc.n	90008da6 <HAL_CRCEx_Polynomial_Set+0x3e>
90008d76:	fa21 fc03 	lsr.w	ip, r1, r3
90008d7a:	f01c 0f01 	tst.w	ip, #1
90008d7e:	d0f8      	beq.n	90008d72 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
90008d80:	2a18      	cmp	r2, #24
90008d82:	d811      	bhi.n	90008da8 <HAL_CRCEx_Polynomial_Set+0x40>
90008d84:	e8df f002 	tbb	[pc, r2]
90008d88:	10101016 	.word	0x10101016
90008d8c:	10101010 	.word	0x10101010
90008d90:	10101024 	.word	0x10101024
90008d94:	10101010 	.word	0x10101010
90008d98:	10101021 	.word	0x10101021
90008d9c:	10101010 	.word	0x10101010
90008da0:	14          	.byte	0x14
90008da1:	00          	.byte	0x00
    status =  HAL_ERROR;
90008da2:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90008da4:	4770      	bx	lr
    switch (PolyLength)
90008da6:	b12a      	cbz	r2, 90008db4 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
90008da8:	2001      	movs	r0, #1
}
90008daa:	f85d 4b04 	ldr.w	r4, [sp], #4
90008dae:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90008db0:	2b06      	cmp	r3, #6
90008db2:	d8f9      	bhi.n	90008da8 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008db4:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008db6:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90008db8:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008dba:	68a3      	ldr	r3, [r4, #8]
90008dbc:	f023 0318 	bic.w	r3, r3, #24
90008dc0:	4313      	orrs	r3, r2
90008dc2:	60a3      	str	r3, [r4, #8]
}
90008dc4:	f85d 4b04 	ldr.w	r4, [sp], #4
90008dc8:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90008dca:	2b07      	cmp	r3, #7
90008dcc:	d9f2      	bls.n	90008db4 <HAL_CRCEx_Polynomial_Set+0x4c>
90008dce:	e7eb      	b.n	90008da8 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90008dd0:	2b0f      	cmp	r3, #15
90008dd2:	d9ef      	bls.n	90008db4 <HAL_CRCEx_Polynomial_Set+0x4c>
90008dd4:	e7e8      	b.n	90008da8 <HAL_CRCEx_Polynomial_Set+0x40>
90008dd6:	bf00      	nop

90008dd8 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90008dd8:	2800      	cmp	r0, #0
90008dda:	d035      	beq.n	90008e48 <HAL_DMA2D_Init+0x70>
{
90008ddc:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90008dde:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90008de2:	4604      	mov	r4, r0
90008de4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90008de8:	b34b      	cbz	r3, 90008e3e <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008dea:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008dec:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008dee:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008df0:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008df4:	69e1      	ldr	r1, [r4, #28]
90008df6:	681d      	ldr	r5, [r3, #0]
90008df8:	4814      	ldr	r0, [pc, #80]	; (90008e4c <HAL_DMA2D_Init+0x74>)
90008dfa:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008dfc:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008dfe:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008e00:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008e02:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008e04:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008e06:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008e08:	4302      	orrs	r2, r0
90008e0a:	6b59      	ldr	r1, [r3, #52]	; 0x34
90008e0c:	4810      	ldr	r0, [pc, #64]	; (90008e50 <HAL_DMA2D_Init+0x78>)
90008e0e:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008e10:	4910      	ldr	r1, [pc, #64]	; (90008e54 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008e12:	4302      	orrs	r2, r0
90008e14:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008e16:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90008e18:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008e1a:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008e1e:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008e20:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008e22:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008e24:	6b59      	ldr	r1, [r3, #52]	; 0x34
90008e26:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008e2a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008e2c:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90008e30:	430a      	orrs	r2, r1
90008e32:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008e34:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008e36:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008e38:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90008e3c:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008e3e:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90008e42:	f7fa f8bb 	bl	90002fbc <HAL_DMA2D_MspInit>
90008e46:	e7d0      	b.n	90008dea <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008e48:	2001      	movs	r0, #1
}
90008e4a:	4770      	bx	lr
90008e4c:	fff8ffbf 	.word	0xfff8ffbf
90008e50:	fffffef8 	.word	0xfffffef8
90008e54:	ffff0000 	.word	0xffff0000

90008e58 <HAL_DMA2D_LineEventCallback>:
90008e58:	4770      	bx	lr
90008e5a:	bf00      	nop

90008e5c <HAL_DMA2D_CLUTLoadingCpltCallback>:
90008e5c:	4770      	bx	lr
90008e5e:	bf00      	nop

90008e60 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008e60:	6803      	ldr	r3, [r0, #0]
{
90008e62:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008e64:	685d      	ldr	r5, [r3, #4]
{
90008e66:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008e68:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008e6a:	07ea      	lsls	r2, r5, #31
90008e6c:	d501      	bpl.n	90008e72 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90008e6e:	05f1      	lsls	r1, r6, #23
90008e70:	d456      	bmi.n	90008f20 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90008e72:	06aa      	lsls	r2, r5, #26
90008e74:	d501      	bpl.n	90008e7a <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90008e76:	04b3      	lsls	r3, r6, #18
90008e78:	d43b      	bmi.n	90008ef2 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90008e7a:	0728      	lsls	r0, r5, #28
90008e7c:	d501      	bpl.n	90008e82 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008e7e:	0531      	lsls	r1, r6, #20
90008e80:	d421      	bmi.n	90008ec6 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90008e82:	076a      	lsls	r2, r5, #29
90008e84:	d501      	bpl.n	90008e8a <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90008e86:	0573      	lsls	r3, r6, #21
90008e88:	d472      	bmi.n	90008f70 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90008e8a:	07a8      	lsls	r0, r5, #30
90008e8c:	d501      	bpl.n	90008e92 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90008e8e:	05b1      	lsls	r1, r6, #22
90008e90:	d404      	bmi.n	90008e9c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90008e92:	06ea      	lsls	r2, r5, #27
90008e94:	d501      	bpl.n	90008e9a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90008e96:	04f3      	lsls	r3, r6, #19
90008e98:	d457      	bmi.n	90008f4a <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90008e9a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008e9c:	6823      	ldr	r3, [r4, #0]
90008e9e:	681a      	ldr	r2, [r3, #0]
90008ea0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90008ea4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90008ea6:	2202      	movs	r2, #2
90008ea8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008eaa:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008eac:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008eae:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008eb0:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008eb2:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008eb6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90008eba:	6a23      	ldr	r3, [r4, #32]
90008ebc:	2b00      	cmp	r3, #0
90008ebe:	d0e8      	beq.n	90008e92 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008ec0:	4620      	mov	r0, r4
90008ec2:	4798      	blx	r3
90008ec4:	e7e5      	b.n	90008e92 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90008ec6:	6823      	ldr	r3, [r4, #0]
90008ec8:	681a      	ldr	r2, [r3, #0]
90008eca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90008ece:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008ed0:	2208      	movs	r2, #8
90008ed2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008ed4:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90008ed6:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008ed8:	4313      	orrs	r3, r2
90008eda:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008edc:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008ee0:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008ee2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90008ee4:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008ee8:	2b00      	cmp	r3, #0
90008eea:	d0ca      	beq.n	90008e82 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008eec:	4620      	mov	r0, r4
90008eee:	4798      	blx	r3
90008ef0:	e7c7      	b.n	90008e82 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90008ef2:	6823      	ldr	r3, [r4, #0]
90008ef4:	681a      	ldr	r2, [r3, #0]
90008ef6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90008efa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008efc:	2220      	movs	r2, #32
90008efe:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008f00:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90008f02:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008f04:	f043 0302 	orr.w	r3, r3, #2
90008f08:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008f0a:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008f0e:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008f10:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90008f12:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008f16:	2b00      	cmp	r3, #0
90008f18:	d0af      	beq.n	90008e7a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008f1a:	4620      	mov	r0, r4
90008f1c:	4798      	blx	r3
90008f1e:	e7ac      	b.n	90008e7a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008f20:	681a      	ldr	r2, [r3, #0]
90008f22:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90008f26:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008f28:	6e42      	ldr	r2, [r0, #100]	; 0x64
90008f2a:	f042 0201 	orr.w	r2, r2, #1
90008f2e:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008f30:	2201      	movs	r2, #1
90008f32:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008f34:	2304      	movs	r3, #4
90008f36:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008f3a:	2300      	movs	r3, #0
90008f3c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008f40:	6a43      	ldr	r3, [r0, #36]	; 0x24
90008f42:	2b00      	cmp	r3, #0
90008f44:	d095      	beq.n	90008e72 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90008f46:	4798      	blx	r3
90008f48:	e793      	b.n	90008e72 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008f4a:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008f4c:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008f4e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008f50:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008f52:	681a      	ldr	r2, [r3, #0]
90008f54:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90008f58:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008f5a:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008f5c:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008f5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008f60:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008f64:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008f66:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008f6a:	f7ff ff77 	bl	90008e5c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008f6e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008f70:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008f72:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008f74:	681a      	ldr	r2, [r3, #0]
90008f76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
90008f7a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008f7c:	2204      	movs	r2, #4
90008f7e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008f80:	f7ff ff6a 	bl	90008e58 <HAL_DMA2D_LineEventCallback>
90008f84:	e781      	b.n	90008e8a <HAL_DMA2D_IRQHandler+0x2a>
90008f86:	bf00      	nop

90008f88 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008f88:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90008f8c:	2a01      	cmp	r2, #1
90008f8e:	d065      	beq.n	9000905c <HAL_DMA2D_ConfigLayer+0xd4>
90008f90:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008f92:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008f96:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008f98:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008f9c:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90008f9e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008fa0:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90008fa4:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008fa8:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008faa:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90008fac:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008fae:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008fb0:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008fb4:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90008fb8:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008fba:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008fbe:	ea42 0204 	orr.w	r2, r2, r4
90008fc2:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008fc6:	d922      	bls.n	9000900e <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008fc8:	6b45      	ldr	r5, [r0, #52]	; 0x34
90008fca:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008fce:	b981      	cbnz	r1, 90008ff2 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008fd0:	6818      	ldr	r0, [r3, #0]
90008fd2:	4923      	ldr	r1, [pc, #140]	; (90009060 <HAL_DMA2D_ConfigLayer+0xd8>)
90008fd4:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008fd6:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008fd8:	4029      	ands	r1, r5
90008fda:	4311      	orrs	r1, r2
90008fdc:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008fde:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008fe0:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008fe2:	2101      	movs	r1, #1

  return HAL_OK;
90008fe4:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008fe6:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90008fea:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90008fee:	bc70      	pop	{r4, r5, r6}
90008ff0:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008ff2:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ff4:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008ff6:	d129      	bne.n	9000904c <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ff8:	69e5      	ldr	r5, [r4, #28]
90008ffa:	491a      	ldr	r1, [pc, #104]	; (90009064 <HAL_DMA2D_ConfigLayer+0xdc>)
90008ffc:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008ffe:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009000:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009002:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90009006:	4311      	orrs	r1, r2
90009008:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000900a:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000900c:	e7e8      	b.n	90008fe0 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000900e:	6b44      	ldr	r4, [r0, #52]	; 0x34
90009010:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90009014:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90009016:	b961      	cbnz	r1, 90009032 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009018:	6819      	ldr	r1, [r3, #0]
9000901a:	4a11      	ldr	r2, [pc, #68]	; (90009060 <HAL_DMA2D_ConfigLayer+0xd8>)
9000901c:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000901e:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009020:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90009022:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90009024:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009028:	4322      	orrs	r2, r4
9000902a:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000902c:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000902e:	6288      	str	r0, [r1, #40]	; 0x28
90009030:	e7d6      	b.n	90008fe0 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009032:	6819      	ldr	r1, [r3, #0]
90009034:	4a0a      	ldr	r2, [pc, #40]	; (90009060 <HAL_DMA2D_ConfigLayer+0xd8>)
90009036:	69cd      	ldr	r5, [r1, #28]
90009038:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000903a:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000903c:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000903e:	6b44      	ldr	r4, [r0, #52]	; 0x34
90009040:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009044:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009046:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90009048:	620c      	str	r4, [r1, #32]
9000904a:	e7c9      	b.n	90008fe0 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000904c:	69e5      	ldr	r5, [r4, #28]
9000904e:	4904      	ldr	r1, [pc, #16]	; (90009060 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009050:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009052:	4029      	ands	r1, r5
90009054:	4311      	orrs	r1, r2
90009056:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009058:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000905a:	e7c1      	b.n	90008fe0 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000905c:	2002      	movs	r0, #2
}
9000905e:	4770      	bx	lr
90009060:	00ccfff0 	.word	0x00ccfff0
90009064:	00c0fff0 	.word	0x00c0fff0

90009068 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90009068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000906c:	680c      	ldr	r4, [r1, #0]
{
9000906e:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90009070:	2c00      	cmp	r4, #0
90009072:	f000 80a7 	beq.w	900091c4 <HAL_GPIO_Init+0x15c>
90009076:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000907a:	4f8a      	ldr	r7, [pc, #552]	; (900092a4 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000907c:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000907e:	2201      	movs	r2, #1
90009080:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90009082:	ea12 0e04 	ands.w	lr, r2, r4
90009086:	f000 8096 	beq.w	900091b6 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000908a:	684d      	ldr	r5, [r1, #4]
9000908c:	f005 0903 	and.w	r9, r5, #3
90009090:	f109 36ff 	add.w	r6, r9, #4294967295
90009094:	2e01      	cmp	r6, #1
90009096:	f240 8098 	bls.w	900091ca <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000909a:	f1b9 0f03 	cmp.w	r9, #3
9000909e:	f040 80d2 	bne.w	90009246 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900090a2:	fa09 f20c 	lsl.w	r2, r9, ip
900090a6:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
900090aa:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900090ac:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900090b0:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900090b4:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
900090b8:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900090ba:	d07c      	beq.n	900091b6 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900090bc:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
900090c0:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900090c4:	f003 0903 	and.w	r9, r3, #3
900090c8:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900090ca:	f042 0202 	orr.w	r2, r2, #2
900090ce:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900090d2:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900090d6:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
900090da:	f508 6880 	add.w	r8, r8, #1024	; 0x400
900090de:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900090e2:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900090e6:	f002 0202 	and.w	r2, r2, #2
900090ea:	9201      	str	r2, [sp, #4]
900090ec:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
900090ee:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900090f2:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900090f6:	4e6c      	ldr	r6, [pc, #432]	; (900092a8 <HAL_GPIO_Init+0x240>)
900090f8:	42b0      	cmp	r0, r6
900090fa:	d028      	beq.n	9000914e <HAL_GPIO_Init+0xe6>
900090fc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90009100:	42b0      	cmp	r0, r6
90009102:	f000 80ac 	beq.w	9000925e <HAL_GPIO_Init+0x1f6>
90009106:	4e69      	ldr	r6, [pc, #420]	; (900092ac <HAL_GPIO_Init+0x244>)
90009108:	42b0      	cmp	r0, r6
9000910a:	f000 80ad 	beq.w	90009268 <HAL_GPIO_Init+0x200>
9000910e:	4e68      	ldr	r6, [pc, #416]	; (900092b0 <HAL_GPIO_Init+0x248>)
90009110:	42b0      	cmp	r0, r6
90009112:	f000 809f 	beq.w	90009254 <HAL_GPIO_Init+0x1ec>
90009116:	4e67      	ldr	r6, [pc, #412]	; (900092b4 <HAL_GPIO_Init+0x24c>)
90009118:	42b0      	cmp	r0, r6
9000911a:	f000 80af 	beq.w	9000927c <HAL_GPIO_Init+0x214>
9000911e:	4e66      	ldr	r6, [pc, #408]	; (900092b8 <HAL_GPIO_Init+0x250>)
90009120:	42b0      	cmp	r0, r6
90009122:	f000 80b0 	beq.w	90009286 <HAL_GPIO_Init+0x21e>
90009126:	4e65      	ldr	r6, [pc, #404]	; (900092bc <HAL_GPIO_Init+0x254>)
90009128:	42b0      	cmp	r0, r6
9000912a:	f000 80a2 	beq.w	90009272 <HAL_GPIO_Init+0x20a>
9000912e:	4e64      	ldr	r6, [pc, #400]	; (900092c0 <HAL_GPIO_Init+0x258>)
90009130:	42b0      	cmp	r0, r6
90009132:	f000 80ad 	beq.w	90009290 <HAL_GPIO_Init+0x228>
90009136:	4e63      	ldr	r6, [pc, #396]	; (900092c4 <HAL_GPIO_Init+0x25c>)
90009138:	42b0      	cmp	r0, r6
9000913a:	f000 80ae 	beq.w	9000929a <HAL_GPIO_Init+0x232>
9000913e:	4e62      	ldr	r6, [pc, #392]	; (900092c8 <HAL_GPIO_Init+0x260>)
90009140:	42b0      	cmp	r0, r6
90009142:	bf0c      	ite	eq
90009144:	2609      	moveq	r6, #9
90009146:	260a      	movne	r6, #10
90009148:	fa06 f609 	lsl.w	r6, r6, r9
9000914c:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000914e:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90009152:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90009156:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
9000915a:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000915e:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90009160:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90009164:	bf0c      	ite	eq
90009166:	4032      	andeq	r2, r6
          temp |= iocurrent;
90009168:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000916c:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
90009170:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
90009174:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90009178:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000917c:	bf0c      	ite	eq
9000917e:	4032      	andeq	r2, r6
          temp |= iocurrent;
90009180:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90009184:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
90009188:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000918c:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90009190:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90009194:	bf0c      	ite	eq
90009196:	4032      	andeq	r2, r6
          temp |= iocurrent;
90009198:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000919c:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000919e:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
900091a2:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
900091a6:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
900091aa:	bf54      	ite	pl
900091ac:	4032      	andpl	r2, r6
          temp |= iocurrent;
900091ae:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
900091b2:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
900091b6:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900091b8:	f10c 0c02 	add.w	ip, ip, #2
900091bc:	fa34 f203 	lsrs.w	r2, r4, r3
900091c0:	f47f af5d 	bne.w	9000907e <HAL_GPIO_Init+0x16>
  }
}
900091c4:	b003      	add	sp, #12
900091c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900091ca:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
900091ce:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900091d0:	fa08 f80c 	lsl.w	r8, r8, ip
900091d4:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
900091d8:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900091da:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
900091de:	fa06 f60c 	lsl.w	r6, r6, ip
900091e2:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
900091e6:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900091e8:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
900091ec:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900091f0:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900091f2:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900091f6:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
900091f8:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
900091fa:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900091fc:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009200:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009202:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009206:	fa06 f60c 	lsl.w	r6, r6, ip
9000920a:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000920e:	fa09 f20c 	lsl.w	r2, r9, ip
90009212:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009214:	f47f af49 	bne.w	900090aa <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90009218:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000921c:	f003 0b07 	and.w	fp, r3, #7
90009220:	260f      	movs	r6, #15
90009222:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90009226:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000922a:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000922e:	fa06 f60b 	lsl.w	r6, r6, fp
90009232:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90009236:	690e      	ldr	r6, [r1, #16]
90009238:	fa06 f60b 	lsl.w	r6, r6, fp
9000923c:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
90009240:	f8c9 6020 	str.w	r6, [r9, #32]
90009244:	e731      	b.n	900090aa <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009246:	f04f 0803 	mov.w	r8, #3
9000924a:	fa08 f80c 	lsl.w	r8, r8, ip
9000924e:	ea6f 0808 	mvn.w	r8, r8
90009252:	e7d2      	b.n	900091fa <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90009254:	2603      	movs	r6, #3
90009256:	fa06 f609 	lsl.w	r6, r6, r9
9000925a:	4332      	orrs	r2, r6
9000925c:	e777      	b.n	9000914e <HAL_GPIO_Init+0xe6>
9000925e:	2601      	movs	r6, #1
90009260:	fa06 f609 	lsl.w	r6, r6, r9
90009264:	4332      	orrs	r2, r6
90009266:	e772      	b.n	9000914e <HAL_GPIO_Init+0xe6>
90009268:	2602      	movs	r6, #2
9000926a:	fa06 f609 	lsl.w	r6, r6, r9
9000926e:	4332      	orrs	r2, r6
90009270:	e76d      	b.n	9000914e <HAL_GPIO_Init+0xe6>
90009272:	2606      	movs	r6, #6
90009274:	fa06 f609 	lsl.w	r6, r6, r9
90009278:	4332      	orrs	r2, r6
9000927a:	e768      	b.n	9000914e <HAL_GPIO_Init+0xe6>
9000927c:	2604      	movs	r6, #4
9000927e:	fa06 f609 	lsl.w	r6, r6, r9
90009282:	4332      	orrs	r2, r6
90009284:	e763      	b.n	9000914e <HAL_GPIO_Init+0xe6>
90009286:	2605      	movs	r6, #5
90009288:	fa06 f609 	lsl.w	r6, r6, r9
9000928c:	4332      	orrs	r2, r6
9000928e:	e75e      	b.n	9000914e <HAL_GPIO_Init+0xe6>
90009290:	2607      	movs	r6, #7
90009292:	fa06 f609 	lsl.w	r6, r6, r9
90009296:	4332      	orrs	r2, r6
90009298:	e759      	b.n	9000914e <HAL_GPIO_Init+0xe6>
9000929a:	2608      	movs	r6, #8
9000929c:	fa06 f609 	lsl.w	r6, r6, r9
900092a0:	4332      	orrs	r2, r6
900092a2:	e754      	b.n	9000914e <HAL_GPIO_Init+0xe6>
900092a4:	58024400 	.word	0x58024400
900092a8:	58020000 	.word	0x58020000
900092ac:	58020800 	.word	0x58020800
900092b0:	58020c00 	.word	0x58020c00
900092b4:	58021000 	.word	0x58021000
900092b8:	58021400 	.word	0x58021400
900092bc:	58021800 	.word	0x58021800
900092c0:	58021c00 	.word	0x58021c00
900092c4:	58022000 	.word	0x58022000
900092c8:	58022400 	.word	0x58022400

900092cc <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900092cc:	2900      	cmp	r1, #0
900092ce:	f000 80a4 	beq.w	9000941a <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
900092d2:	2300      	movs	r3, #0
{
900092d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900092d8:	f8df 9168 	ldr.w	r9, [pc, #360]	; 90009444 <HAL_GPIO_DeInit+0x178>
900092dc:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900092de:	f8df 8168 	ldr.w	r8, [pc, #360]	; 90009448 <HAL_GPIO_DeInit+0x17c>
900092e2:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000944c <HAL_GPIO_DeInit+0x180>
900092e6:	f8df b168 	ldr.w	fp, [pc, #360]	; 90009450 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
900092ea:	f04f 0e01 	mov.w	lr, #1
900092ee:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
900092f2:	ea12 0c01 	ands.w	ip, r2, r1
900092f6:	d06b      	beq.n	900093d0 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
900092f8:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900092fc:	f003 0403 	and.w	r4, r3, #3
90009300:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009302:	4540      	cmp	r0, r8
90009304:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009306:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000930a:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000930c:	fa06 f604 	lsl.w	r6, r6, r4
90009310:	ea07 0706 	and.w	r7, r7, r6
90009314:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009316:	d01f      	beq.n	90009358 <HAL_GPIO_DeInit+0x8c>
90009318:	4550      	cmp	r0, sl
9000931a:	d01a      	beq.n	90009352 <HAL_GPIO_DeInit+0x86>
9000931c:	4558      	cmp	r0, fp
9000931e:	d05e      	beq.n	900093de <HAL_GPIO_DeInit+0x112>
90009320:	4f43      	ldr	r7, [pc, #268]	; (90009430 <HAL_GPIO_DeInit+0x164>)
90009322:	42b8      	cmp	r0, r7
90009324:	d065      	beq.n	900093f2 <HAL_GPIO_DeInit+0x126>
90009326:	4f43      	ldr	r7, [pc, #268]	; (90009434 <HAL_GPIO_DeInit+0x168>)
90009328:	42b8      	cmp	r0, r7
9000932a:	d067      	beq.n	900093fc <HAL_GPIO_DeInit+0x130>
9000932c:	4f42      	ldr	r7, [pc, #264]	; (90009438 <HAL_GPIO_DeInit+0x16c>)
9000932e:	42b8      	cmp	r0, r7
90009330:	d05a      	beq.n	900093e8 <HAL_GPIO_DeInit+0x11c>
90009332:	4f42      	ldr	r7, [pc, #264]	; (9000943c <HAL_GPIO_DeInit+0x170>)
90009334:	42b8      	cmp	r0, r7
90009336:	d06b      	beq.n	90009410 <HAL_GPIO_DeInit+0x144>
90009338:	4f41      	ldr	r7, [pc, #260]	; (90009440 <HAL_GPIO_DeInit+0x174>)
9000933a:	42b8      	cmp	r0, r7
9000933c:	d06e      	beq.n	9000941c <HAL_GPIO_DeInit+0x150>
9000933e:	f8df e114 	ldr.w	lr, [pc, #276]	; 90009454 <HAL_GPIO_DeInit+0x188>
90009342:	4570      	cmp	r0, lr
90009344:	d05f      	beq.n	90009406 <HAL_GPIO_DeInit+0x13a>
90009346:	f8df e110 	ldr.w	lr, [pc, #272]	; 90009458 <HAL_GPIO_DeInit+0x18c>
9000934a:	4570      	cmp	r0, lr
9000934c:	d06b      	beq.n	90009426 <HAL_GPIO_DeInit+0x15a>
9000934e:	f04f 0e0a 	mov.w	lr, #10
90009352:	fa0e f404 	lsl.w	r4, lr, r4
90009356:	e000      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
90009358:	2400      	movs	r4, #0
9000935a:	9f01      	ldr	r7, [sp, #4]
9000935c:	42a7      	cmp	r7, r4
9000935e:	d119      	bne.n	90009394 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90009360:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
90009364:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
90009368:	ea27 070c 	bic.w	r7, r7, ip
9000936c:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90009370:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
90009374:	ea27 070c 	bic.w	r7, r7, ip
90009378:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000937c:	6867      	ldr	r7, [r4, #4]
9000937e:	ea27 070c 	bic.w	r7, r7, ip
90009382:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90009384:	6827      	ldr	r7, [r4, #0]
90009386:	ea27 070c 	bic.w	r7, r7, ip
9000938a:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000938c:	68ac      	ldr	r4, [r5, #8]
9000938e:	ea24 0406 	bic.w	r4, r4, r6
90009392:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009394:	005d      	lsls	r5, r3, #1
90009396:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009398:	f003 0607 	and.w	r6, r3, #7
9000939c:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000939e:	40ac      	lsls	r4, r5
900093a0:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900093a2:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900093a4:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900093a6:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900093a8:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900093aa:	08dd      	lsrs	r5, r3, #3
900093ac:	eb00 0585 	add.w	r5, r0, r5, lsl #2
900093b0:	6a2e      	ldr	r6, [r5, #32]
900093b2:	ea26 0607 	bic.w	r6, r6, r7
900093b6:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900093b8:	68c5      	ldr	r5, [r0, #12]
900093ba:	ea25 0504 	bic.w	r5, r5, r4
900093be:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900093c0:	6845      	ldr	r5, [r0, #4]
900093c2:	ea25 0202 	bic.w	r2, r5, r2
900093c6:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900093c8:	6882      	ldr	r2, [r0, #8]
900093ca:	ea22 0204 	bic.w	r2, r2, r4
900093ce:	6082      	str	r2, [r0, #8]
    }

    position++;
900093d0:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900093d2:	fa31 f203 	lsrs.w	r2, r1, r3
900093d6:	d188      	bne.n	900092ea <HAL_GPIO_DeInit+0x1e>
  }
}
900093d8:	b003      	add	sp, #12
900093da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900093de:	f04f 0e02 	mov.w	lr, #2
900093e2:	fa0e f404 	lsl.w	r4, lr, r4
900093e6:	e7b8      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
900093e8:	f04f 0e05 	mov.w	lr, #5
900093ec:	fa0e f404 	lsl.w	r4, lr, r4
900093f0:	e7b3      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
900093f2:	f04f 0e03 	mov.w	lr, #3
900093f6:	fa0e f404 	lsl.w	r4, lr, r4
900093fa:	e7ae      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
900093fc:	f04f 0e04 	mov.w	lr, #4
90009400:	fa0e f404 	lsl.w	r4, lr, r4
90009404:	e7a9      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
90009406:	f04f 0e08 	mov.w	lr, #8
9000940a:	fa0e f404 	lsl.w	r4, lr, r4
9000940e:	e7a4      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
90009410:	f04f 0e06 	mov.w	lr, #6
90009414:	fa0e f404 	lsl.w	r4, lr, r4
90009418:	e79f      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
9000941a:	4770      	bx	lr
9000941c:	f04f 0e07 	mov.w	lr, #7
90009420:	fa0e f404 	lsl.w	r4, lr, r4
90009424:	e799      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
90009426:	f04f 0e09 	mov.w	lr, #9
9000942a:	fa0e f404 	lsl.w	r4, lr, r4
9000942e:	e794      	b.n	9000935a <HAL_GPIO_DeInit+0x8e>
90009430:	58020c00 	.word	0x58020c00
90009434:	58021000 	.word	0x58021000
90009438:	58021400 	.word	0x58021400
9000943c:	58021800 	.word	0x58021800
90009440:	58021c00 	.word	0x58021c00
90009444:	58000400 	.word	0x58000400
90009448:	58020000 	.word	0x58020000
9000944c:	58020400 	.word	0x58020400
90009450:	58020800 	.word	0x58020800
90009454:	58022000 	.word	0x58022000
90009458:	58022400 	.word	0x58022400

9000945c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000945c:	6903      	ldr	r3, [r0, #16]
9000945e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90009460:	bf14      	ite	ne
90009462:	2001      	movne	r0, #1
90009464:	2000      	moveq	r0, #0
90009466:	4770      	bx	lr

90009468 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90009468:	b902      	cbnz	r2, 9000946c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000946a:	0409      	lsls	r1, r1, #16
9000946c:	6181      	str	r1, [r0, #24]
  }
}
9000946e:	4770      	bx	lr

90009470 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90009470:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90009472:	ea01 0203 	and.w	r2, r1, r3
90009476:	ea21 0103 	bic.w	r1, r1, r3
9000947a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000947e:	6181      	str	r1, [r0, #24]
}
90009480:	4770      	bx	lr
90009482:	bf00      	nop

90009484 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
90009484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009488:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000948a:	f04f 0820 	mov.w	r8, #32
{
9000948e:	4605      	mov	r5, r0
90009490:	460e      	mov	r6, r1
90009492:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009494:	6998      	ldr	r0, [r3, #24]
90009496:	f010 0902 	ands.w	r9, r0, #2
9000949a:	f040 809e 	bne.w	900095da <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000949e:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900094a0:	f014 0410 	ands.w	r4, r4, #16
900094a4:	d068      	beq.n	90009578 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900094a6:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
900094a8:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
900094aa:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900094ac:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900094ae:	1c71      	adds	r1, r6, #1
900094b0:	699a      	ldr	r2, [r3, #24]
900094b2:	d163      	bne.n	9000957c <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900094b4:	0690      	lsls	r0, r2, #26
900094b6:	f100 8093 	bmi.w	900095e0 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900094ba:	f1ba 0f00 	cmp.w	sl, #0
900094be:	d104      	bne.n	900094ca <I2C_WaitOnTXISFlagUntilTimeout+0x46>
900094c0:	699c      	ldr	r4, [r3, #24]
900094c2:	06a1      	lsls	r1, r4, #26
900094c4:	d5fc      	bpl.n	900094c0 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900094c6:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
900094ca:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
900094ce:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
900094d0:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900094d2:	05d0      	lsls	r0, r2, #23
900094d4:	d530      	bpl.n	90009538 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900094d6:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900094da:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900094dc:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900094e0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900094e2:	d504      	bpl.n	900094ee <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900094e4:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900094e8:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900094ec:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900094ee:	0591      	lsls	r1, r2, #22
900094f0:	d504      	bpl.n	900094fc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900094f2:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900094f6:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900094fa:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900094fc:	699a      	ldr	r2, [r3, #24]
900094fe:	0790      	lsls	r0, r2, #30
90009500:	d501      	bpl.n	90009506 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
90009502:	2200      	movs	r2, #0
90009504:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009506:	699a      	ldr	r2, [r3, #24]
90009508:	07d1      	lsls	r1, r2, #31
9000950a:	d403      	bmi.n	90009514 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000950c:	699a      	ldr	r2, [r3, #24]
9000950e:	f042 0201 	orr.w	r2, r2, #1
90009512:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009514:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009516:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009518:	4834      	ldr	r0, [pc, #208]	; (900095ec <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000951a:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000951c:	4002      	ands	r2, r0
      return HAL_ERROR;
9000951e:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009520:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009522:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009524:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009528:	4323      	orrs	r3, r4
9000952a:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000952c:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009530:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
90009534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009538:	0550      	lsls	r0, r2, #21
9000953a:	d4d3      	bmi.n	900094e4 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000953c:	0592      	lsls	r2, r2, #22
9000953e:	d4d8      	bmi.n	900094f2 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
90009540:	2900      	cmp	r1, #0
90009542:	d1db      	bne.n	900094fc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
90009544:	1c72      	adds	r2, r6, #1
90009546:	d0a5      	beq.n	90009494 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009548:	f7ff fb04 	bl	90008b54 <HAL_GetTick>
9000954c:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000954e:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009550:	42b0      	cmp	r0, r6
90009552:	d801      	bhi.n	90009558 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
90009554:	2e00      	cmp	r6, #0
90009556:	d19d      	bne.n	90009494 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90009558:	699a      	ldr	r2, [r3, #24]
9000955a:	f012 0202 	ands.w	r2, r2, #2
9000955e:	d199      	bne.n	90009494 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009560:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009562:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90009564:	2001      	movs	r0, #1
90009566:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000956a:	430b      	orrs	r3, r1
9000956c:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000956e:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009572:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
90009576:	e7dd      	b.n	90009534 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
90009578:	4621      	mov	r1, r4
9000957a:	e7a9      	b.n	900094d0 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000957c:	0692      	lsls	r2, r2, #26
9000957e:	d42f      	bmi.n	900095e0 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
90009580:	f1ba 0f00 	cmp.w	sl, #0
90009584:	d1a1      	bne.n	900094ca <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009586:	f7ff fae5 	bl	90008b54 <HAL_GetTick>
9000958a:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000958c:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000958e:	4286      	cmp	r6, r0
90009590:	d301      	bcc.n	90009596 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
90009592:	2e00      	cmp	r6, #0
90009594:	d18b      	bne.n	900094ae <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009596:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009598:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000959c:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000959e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900095a0:	0409      	lsls	r1, r1, #16
900095a2:	d50b      	bpl.n	900095bc <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
900095a4:	0441      	lsls	r1, r0, #17
900095a6:	d409      	bmi.n	900095bc <I2C_WaitOnTXISFlagUntilTimeout+0x138>
900095a8:	2a20      	cmp	r2, #32
900095aa:	d007      	beq.n	900095bc <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900095ac:	685a      	ldr	r2, [r3, #4]
900095ae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900095b2:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900095b4:	f7ff face 	bl	90008b54 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095b8:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900095ba:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095bc:	699a      	ldr	r2, [r3, #24]
900095be:	0690      	lsls	r0, r2, #26
900095c0:	f53f af75 	bmi.w	900094ae <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900095c4:	f7ff fac6 	bl	90008b54 <HAL_GetTick>
900095c8:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900095ca:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900095cc:	2819      	cmp	r0, #25
900095ce:	d9f5      	bls.n	900095bc <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900095d0:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
900095d4:	f04f 0a01 	mov.w	sl, #1
900095d8:	e769      	b.n	900094ae <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
900095da:	2000      	movs	r0, #0
}
900095dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
900095e0:	f1ba 0f00 	cmp.w	sl, #0
900095e4:	f43f af6f 	beq.w	900094c6 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
900095e8:	e76f      	b.n	900094ca <I2C_WaitOnTXISFlagUntilTimeout+0x46>
900095ea:	bf00      	nop
900095ec:	fe00e800 	.word	0xfe00e800

900095f0 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
900095f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900095f4:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095f6:	6802      	ldr	r2, [r0, #0]
{
900095f8:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095fa:	6991      	ldr	r1, [r2, #24]
900095fc:	068c      	lsls	r4, r1, #26
900095fe:	d469      	bmi.n	900096d4 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90009600:	4606      	mov	r6, r0
90009602:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009604:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009608:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000960a:	f014 0410 	ands.w	r4, r4, #16
9000960e:	d064      	beq.n	900096da <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90009610:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009612:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
90009614:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009616:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000961a:	46aa      	mov	sl, r5
9000961c:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000961e:	699a      	ldr	r2, [r3, #24]
90009620:	d15d      	bne.n	900096de <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90009622:	0690      	lsls	r0, r2, #26
90009624:	f100 8083 	bmi.w	9000972e <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009628:	f1ba 0f00 	cmp.w	sl, #0
9000962c:	d104      	bne.n	90009638 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000962e:	699c      	ldr	r4, [r3, #24]
90009630:	06a1      	lsls	r1, r4, #26
90009632:	d5fc      	bpl.n	9000962e <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009634:	2220      	movs	r2, #32
90009636:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90009638:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000963c:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000963e:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009640:	05d0      	lsls	r0, r2, #23
90009642:	d530      	bpl.n	900096a6 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009644:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009648:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000964a:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000964e:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009650:	d504      	bpl.n	9000965c <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009652:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009656:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000965a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000965c:	0591      	lsls	r1, r2, #22
9000965e:	d504      	bpl.n	9000966a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009660:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009664:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009668:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000966a:	699a      	ldr	r2, [r3, #24]
9000966c:	0795      	lsls	r5, r2, #30
9000966e:	d501      	bpl.n	90009674 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90009670:	2200      	movs	r2, #0
90009672:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009674:	699a      	ldr	r2, [r3, #24]
90009676:	07d0      	lsls	r0, r2, #31
90009678:	d403      	bmi.n	90009682 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000967a:	699a      	ldr	r2, [r3, #24]
9000967c:	f042 0201 	orr.w	r2, r2, #1
90009680:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90009682:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009684:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009686:	4837      	ldr	r0, [pc, #220]	; (90009764 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
90009688:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000968a:	4002      	ands	r2, r0
      return HAL_ERROR;
9000968c:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000968e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009690:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
90009692:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009696:	4323      	orrs	r3, r4
90009698:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000969a:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000969e:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900096a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900096a6:	0550      	lsls	r0, r2, #21
900096a8:	d4d3      	bmi.n	90009652 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900096aa:	0592      	lsls	r2, r2, #22
900096ac:	d4d8      	bmi.n	90009660 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
900096ae:	2900      	cmp	r1, #0
900096b0:	d1db      	bne.n	9000966a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900096b2:	f7ff fa4f 	bl	90008b54 <HAL_GetTick>
900096b6:	eba0 0008 	sub.w	r0, r0, r8
900096ba:	42b8      	cmp	r0, r7
900096bc:	d801      	bhi.n	900096c2 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
900096be:	2f00      	cmp	r7, #0
900096c0:	d132      	bne.n	90009728 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900096c2:	6832      	ldr	r2, [r6, #0]
900096c4:	6991      	ldr	r1, [r2, #24]
900096c6:	4613      	mov	r3, r2
900096c8:	f011 0120 	ands.w	r1, r1, #32
900096cc:	d034      	beq.n	90009738 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900096ce:	6991      	ldr	r1, [r2, #24]
900096d0:	0689      	lsls	r1, r1, #26
900096d2:	d599      	bpl.n	90009608 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
900096d4:	2000      	movs	r0, #0
}
900096d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
900096da:	4621      	mov	r1, r4
900096dc:	e7af      	b.n	9000963e <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900096de:	0692      	lsls	r2, r2, #26
900096e0:	d425      	bmi.n	9000972e <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
900096e2:	f1ba 0f00 	cmp.w	sl, #0
900096e6:	d1a7      	bne.n	90009638 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900096e8:	f7ff fa34 	bl	90008b54 <HAL_GetTick>
900096ec:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900096ee:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900096f0:	4287      	cmp	r7, r0
900096f2:	d301      	bcc.n	900096f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
900096f4:	2f00      	cmp	r7, #0
900096f6:	d191      	bne.n	9000961c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900096f8:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900096fa:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900096fe:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009700:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009702:	0409      	lsls	r1, r1, #16
90009704:	d503      	bpl.n	9000970e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
90009706:	0441      	lsls	r1, r0, #17
90009708:	d401      	bmi.n	9000970e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000970a:	2a20      	cmp	r2, #32
9000970c:	d121      	bne.n	90009752 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000970e:	699a      	ldr	r2, [r3, #24]
90009710:	0690      	lsls	r0, r2, #26
90009712:	d483      	bmi.n	9000961c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009714:	f7ff fa1e 	bl	90008b54 <HAL_GetTick>
90009718:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000971a:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000971c:	2819      	cmp	r0, #25
9000971e:	d9f6      	bls.n	9000970e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009720:	2520      	movs	r5, #32
              status = HAL_ERROR;
90009722:	f04f 0a01 	mov.w	sl, #1
90009726:	e779      	b.n	9000961c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009728:	6833      	ldr	r3, [r6, #0]
9000972a:	461a      	mov	r2, r3
9000972c:	e7cf      	b.n	900096ce <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000972e:	f1ba 0f00 	cmp.w	sl, #0
90009732:	f43f af7f 	beq.w	90009634 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
90009736:	e77f      	b.n	90009638 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009738:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000973a:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
9000973c:	2001      	movs	r0, #1
9000973e:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009742:	4313      	orrs	r3, r2
90009744:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009746:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000974a:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000974e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009752:	685a      	ldr	r2, [r3, #4]
90009754:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009758:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000975a:	f7ff f9fb 	bl	90008b54 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000975e:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
90009760:	4604      	mov	r4, r0
90009762:	e7d4      	b.n	9000970e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90009764:	fe00e800 	.word	0xfe00e800

90009768 <HAL_I2C_MspInit>:
}
90009768:	4770      	bx	lr
9000976a:	bf00      	nop

9000976c <HAL_I2C_Init>:
  if (hi2c == NULL)
9000976c:	2800      	cmp	r0, #0
9000976e:	d04e      	beq.n	9000980e <HAL_I2C_Init+0xa2>
{
90009770:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90009772:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90009776:	4604      	mov	r4, r0
90009778:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000977c:	2b00      	cmp	r3, #0
9000977e:	d041      	beq.n	90009804 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
90009780:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009782:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009784:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009786:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000978a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000978c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009790:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90009792:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009796:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009798:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000979a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000979c:	689a      	ldr	r2, [r3, #8]
9000979e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900097a2:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900097a4:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900097a6:	d029      	beq.n	900097fc <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900097a8:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900097ac:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900097ae:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900097b0:	d102      	bne.n	900097b8 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
900097b2:	f44f 6200 	mov.w	r2, #2048	; 0x800
900097b6:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900097b8:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
900097ba:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900097be:	4915      	ldr	r1, [pc, #84]	; (90009814 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900097c0:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900097c2:	4301      	orrs	r1, r0
900097c4:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
900097c6:	68d9      	ldr	r1, [r3, #12]
900097c8:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
900097cc:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
900097ce:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900097d2:	4302      	orrs	r2, r0
900097d4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900097d8:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900097dc:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900097de:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900097e0:	4301      	orrs	r1, r0
  return HAL_OK;
900097e2:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
900097e4:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
900097e6:	6819      	ldr	r1, [r3, #0]
900097e8:	f041 0101 	orr.w	r1, r1, #1
900097ec:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900097ee:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
900097f0:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
900097f4:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900097f6:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
900097fa:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900097fc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90009800:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009802:	e7d9      	b.n	900097b8 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
90009804:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90009808:	f7ff ffae 	bl	90009768 <HAL_I2C_MspInit>
9000980c:	e7b8      	b.n	90009780 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000980e:	2001      	movs	r0, #1
}
90009810:	4770      	bx	lr
90009812:	bf00      	nop
90009814:	02008000 	.word	0x02008000

90009818 <HAL_I2C_MspDeInit>:
90009818:	4770      	bx	lr
9000981a:	bf00      	nop

9000981c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000981c:	b1b0      	cbz	r0, 9000984c <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000981e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009820:	2324      	movs	r3, #36	; 0x24
{
90009822:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009824:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90009828:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000982a:	6813      	ldr	r3, [r2, #0]
9000982c:	f023 0301 	bic.w	r3, r3, #1
90009830:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90009832:	f7ff fff1 	bl	90009818 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009836:	2300      	movs	r3, #0
90009838:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000983a:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000983c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
90009840:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90009844:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009846:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000984a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000984c:	2001      	movs	r0, #1
}
9000984e:	4770      	bx	lr

90009850 <HAL_I2C_Mem_Write>:
{
90009850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009854:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90009856:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000985a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000985e:	2b20      	cmp	r3, #32
{
90009860:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
90009862:	d132      	bne.n	900098ca <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
90009864:	9b08      	ldr	r3, [sp, #32]
90009866:	4604      	mov	r4, r0
90009868:	b34b      	cbz	r3, 900098be <HAL_I2C_Mem_Write+0x6e>
9000986a:	f1ba 0f00 	cmp.w	sl, #0
9000986e:	d026      	beq.n	900098be <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
90009870:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90009874:	2b01      	cmp	r3, #1
90009876:	d028      	beq.n	900098ca <HAL_I2C_Mem_Write+0x7a>
90009878:	2301      	movs	r3, #1
9000987a:	460e      	mov	r6, r1
9000987c:	4691      	mov	r9, r2
9000987e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90009882:	f7ff f967 	bl	90008b54 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009886:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90009888:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000988a:	699a      	ldr	r2, [r3, #24]
9000988c:	0411      	lsls	r1, r2, #16
9000988e:	d51f      	bpl.n	900098d0 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009890:	f7ff f960 	bl	90008b54 <HAL_GetTick>
90009894:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009896:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009898:	2819      	cmp	r0, #25
9000989a:	d9f6      	bls.n	9000988a <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000989c:	699a      	ldr	r2, [r3, #24]
9000989e:	0412      	lsls	r2, r2, #16
900098a0:	d5f3      	bpl.n	9000988a <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098a4:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900098a6:	2200      	movs	r2, #0
      return HAL_ERROR;
900098a8:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098aa:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
900098ac:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098b0:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098b2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900098b6:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
900098ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900098be:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900098c2:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900098c4:	6463      	str	r3, [r4, #68]	; 0x44
}
900098c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
900098ca:	2002      	movs	r0, #2
}
900098cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900098d0:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900098d2:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900098d4:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900098d8:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900098da:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900098de:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
900098e0:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900098e2:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900098e4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
900098e8:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900098ea:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900098ec:	496d      	ldr	r1, [pc, #436]	; (90009aa4 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
900098ee:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900098f2:	685a      	ldr	r2, [r3, #4]
900098f4:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900098f6:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900098fa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
900098fe:	496a      	ldr	r1, [pc, #424]	; (90009aa8 <HAL_I2C_Mem_Write+0x258>)
90009900:	4332      	orrs	r2, r6
90009902:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009904:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90009906:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009908:	4639      	mov	r1, r7
9000990a:	f7ff fdbb 	bl	90009484 <I2C_WaitOnTXISFlagUntilTimeout>
9000990e:	2800      	cmp	r0, #0
90009910:	d175      	bne.n	900099fe <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009912:	f1b8 0f01 	cmp.w	r8, #1
90009916:	d00a      	beq.n	9000992e <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009918:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000991c:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000991e:	4639      	mov	r1, r7
90009920:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009922:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009924:	462a      	mov	r2, r5
90009926:	f7ff fdad 	bl	90009484 <I2C_WaitOnTXISFlagUntilTimeout>
9000992a:	2800      	cmp	r0, #0
9000992c:	d167      	bne.n	900099fe <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000992e:	fa5f f389 	uxtb.w	r3, r9
90009932:	6822      	ldr	r2, [r4, #0]
90009934:	6293      	str	r3, [r2, #40]	; 0x28
90009936:	1c78      	adds	r0, r7, #1
90009938:	d14a      	bne.n	900099d0 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000993a:	6993      	ldr	r3, [r2, #24]
9000993c:	0619      	lsls	r1, r3, #24
9000993e:	d5fc      	bpl.n	9000993a <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009940:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009942:	b29b      	uxth	r3, r3
90009944:	2bff      	cmp	r3, #255	; 0xff
90009946:	f240 808a 	bls.w	90009a5e <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000994a:	6853      	ldr	r3, [r2, #4]
9000994c:	4957      	ldr	r1, [pc, #348]	; (90009aac <HAL_I2C_Mem_Write+0x25c>)
9000994e:	400b      	ands	r3, r1
90009950:	4957      	ldr	r1, [pc, #348]	; (90009ab0 <HAL_I2C_Mem_Write+0x260>)
90009952:	4333      	orrs	r3, r6
90009954:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009956:	23ff      	movs	r3, #255	; 0xff
90009958:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000995a:	6051      	str	r1, [r2, #4]
9000995c:	f8df 814c 	ldr.w	r8, [pc, #332]	; 90009aac <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009960:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90009964:	f8df 9148 	ldr.w	r9, [pc, #328]	; 90009ab0 <HAL_I2C_Mem_Write+0x260>
90009968:	e004      	b.n	90009974 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000996a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000996c:	b29b      	uxth	r3, r3
9000996e:	2b00      	cmp	r3, #0
90009970:	f000 8083 	beq.w	90009a7a <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009974:	462a      	mov	r2, r5
90009976:	4639      	mov	r1, r7
90009978:	4620      	mov	r0, r4
9000997a:	f7ff fd83 	bl	90009484 <I2C_WaitOnTXISFlagUntilTimeout>
9000997e:	2800      	cmp	r0, #0
90009980:	d16b      	bne.n	90009a5a <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009982:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009984:	6821      	ldr	r1, [r4, #0]
90009986:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000998a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000998c:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000998e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90009990:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90009992:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90009994:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009996:	3a01      	subs	r2, #1
      hi2c->XferSize--;
90009998:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000999a:	b292      	uxth	r2, r2
9000999c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000999e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
900099a0:	b292      	uxth	r2, r2
900099a2:	2a00      	cmp	r2, #0
900099a4:	d0e1      	beq.n	9000996a <HAL_I2C_Mem_Write+0x11a>
900099a6:	2b00      	cmp	r3, #0
900099a8:	d1df      	bne.n	9000996a <HAL_I2C_Mem_Write+0x11a>
900099aa:	1c78      	adds	r0, r7, #1
900099ac:	d12c      	bne.n	90009a08 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900099ae:	698b      	ldr	r3, [r1, #24]
900099b0:	061a      	lsls	r2, r3, #24
900099b2:	d5fc      	bpl.n	900099ae <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900099b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900099b6:	b29b      	uxth	r3, r3
900099b8:	2bff      	cmp	r3, #255	; 0xff
900099ba:	d940      	bls.n	90009a3e <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
900099bc:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900099be:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900099c2:	ea03 0308 	and.w	r3, r3, r8
900099c6:	4333      	orrs	r3, r6
900099c8:	ea43 0309 	orr.w	r3, r3, r9
900099cc:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
900099ce:	e7cc      	b.n	9000996a <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900099d0:	6993      	ldr	r3, [r2, #24]
900099d2:	061b      	lsls	r3, r3, #24
900099d4:	d4b4      	bmi.n	90009940 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099d6:	f7ff f8bd 	bl	90008b54 <HAL_GetTick>
900099da:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900099dc:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099de:	4287      	cmp	r7, r0
900099e0:	d301      	bcc.n	900099e6 <HAL_I2C_Mem_Write+0x196>
900099e2:	2f00      	cmp	r7, #0
900099e4:	d1a7      	bne.n	90009936 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900099e6:	6993      	ldr	r3, [r2, #24]
900099e8:	f013 0380 	ands.w	r3, r3, #128	; 0x80
900099ec:	d1a3      	bne.n	90009936 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099ee:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099f0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099f2:	430a      	orrs	r2, r1
900099f4:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099f6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900099fa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
900099fe:	2300      	movs	r3, #0
      return HAL_ERROR;
90009a00:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90009a02:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90009a06:	e75e      	b.n	900098c6 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009a08:	698b      	ldr	r3, [r1, #24]
90009a0a:	061b      	lsls	r3, r3, #24
90009a0c:	d4d2      	bmi.n	900099b4 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009a0e:	f7ff f8a1 	bl	90008b54 <HAL_GetTick>
90009a12:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009a14:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009a16:	4287      	cmp	r7, r0
90009a18:	d301      	bcc.n	90009a1e <HAL_I2C_Mem_Write+0x1ce>
90009a1a:	2f00      	cmp	r7, #0
90009a1c:	d1c5      	bne.n	900099aa <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009a1e:	698b      	ldr	r3, [r1, #24]
90009a20:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009a24:	d1c1      	bne.n	900099aa <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009a26:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009a28:	2120      	movs	r1, #32
          return HAL_ERROR;
90009a2a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009a2c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009a30:	430a      	orrs	r2, r1
90009a32:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009a34:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009a38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90009a3c:	e743      	b.n	900098c6 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
90009a3e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009a40:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009a42:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90009a44:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009a46:	684b      	ldr	r3, [r1, #4]
90009a48:	ea03 0308 	and.w	r3, r3, r8
90009a4c:	4333      	orrs	r3, r6
90009a4e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009a52:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009a56:	604b      	str	r3, [r1, #4]
}
90009a58:	e787      	b.n	9000996a <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90009a5a:	2001      	movs	r0, #1
90009a5c:	e733      	b.n	900098c6 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
90009a5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009a60:	4812      	ldr	r0, [pc, #72]	; (90009aac <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
90009a62:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009a64:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90009a66:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009a68:	6853      	ldr	r3, [r2, #4]
90009a6a:	4003      	ands	r3, r0
90009a6c:	4333      	orrs	r3, r6
90009a6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009a72:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009a76:	6053      	str	r3, [r2, #4]
}
90009a78:	e770      	b.n	9000995c <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009a7a:	462a      	mov	r2, r5
90009a7c:	4639      	mov	r1, r7
90009a7e:	4620      	mov	r0, r4
90009a80:	f7ff fdb6 	bl	900095f0 <I2C_WaitOnSTOPFlagUntilTimeout>
90009a84:	2800      	cmp	r0, #0
90009a86:	d1e8      	bne.n	90009a5a <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009a88:	6823      	ldr	r3, [r4, #0]
90009a8a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009a8c:	4d09      	ldr	r5, [pc, #36]	; (90009ab4 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009a8e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009a90:	685a      	ldr	r2, [r3, #4]
90009a92:	402a      	ands	r2, r5
90009a94:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009a96:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009a9a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009a9e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90009aa2:	e710      	b.n	900098c6 <HAL_I2C_Mem_Write+0x76>
90009aa4:	fc009800 	.word	0xfc009800
90009aa8:	01002000 	.word	0x01002000
90009aac:	fc009c00 	.word	0xfc009c00
90009ab0:	01ff0000 	.word	0x01ff0000
90009ab4:	fe00e800 	.word	0xfe00e800

90009ab8 <HAL_I2C_Mem_Read>:
{
90009ab8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009abc:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90009abe:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90009ac2:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
90009ac6:	2b20      	cmp	r3, #32
{
90009ac8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009aca:	d137      	bne.n	90009b3c <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
90009acc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90009ace:	4683      	mov	fp, r0
90009ad0:	b36b      	cbz	r3, 90009b2e <HAL_I2C_Mem_Read+0x76>
90009ad2:	f1b9 0f00 	cmp.w	r9, #0
90009ad6:	d02a      	beq.n	90009b2e <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90009ad8:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90009adc:	2b01      	cmp	r3, #1
90009ade:	d02d      	beq.n	90009b3c <HAL_I2C_Mem_Read+0x84>
90009ae0:	2301      	movs	r3, #1
90009ae2:	460f      	mov	r7, r1
90009ae4:	4690      	mov	r8, r2
90009ae6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90009aea:	f7ff f833 	bl	90008b54 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009aee:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90009af2:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009af4:	699a      	ldr	r2, [r3, #24]
90009af6:	0410      	lsls	r0, r2, #16
90009af8:	d523      	bpl.n	90009b42 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009afa:	f7ff f82b 	bl	90008b54 <HAL_GetTick>
90009afe:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b00:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b04:	2819      	cmp	r0, #25
90009b06:	d9f5      	bls.n	90009af4 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b08:	699a      	ldr	r2, [r3, #24]
90009b0a:	0411      	lsls	r1, r2, #16
90009b0c:	d5f2      	bpl.n	90009af4 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b0e:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b12:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009b14:	2200      	movs	r2, #0
      return HAL_ERROR;
90009b16:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b18:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90009b1a:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b1e:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b22:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009b26:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90009b2a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009b2e:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90009b32:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009b34:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90009b38:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90009b3c:	2002      	movs	r0, #2
}
90009b3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90009b42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009b44:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009b46:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b4a:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009b4c:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009b50:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90009b52:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009b56:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009b58:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90009b5c:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009b60:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90009b64:	4983      	ldr	r1, [pc, #524]	; (90009d74 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90009b66:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b6a:	685a      	ldr	r2, [r3, #4]
90009b6c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b6e:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
90009b70:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b74:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90009b76:	433a      	orrs	r2, r7
90009b78:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90009b7c:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b7e:	4632      	mov	r2, r6
90009b80:	f7ff fc80 	bl	90009484 <I2C_WaitOnTXISFlagUntilTimeout>
90009b84:	2800      	cmp	r0, #0
90009b86:	f040 8091 	bne.w	90009cac <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009b8a:	2c01      	cmp	r4, #1
90009b8c:	d00c      	beq.n	90009ba8 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009b8e:	ea4f 2218 	mov.w	r2, r8, lsr #8
90009b92:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b96:	4629      	mov	r1, r5
90009b98:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009b9a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009b9c:	4632      	mov	r2, r6
90009b9e:	f7ff fc71 	bl	90009484 <I2C_WaitOnTXISFlagUntilTimeout>
90009ba2:	2800      	cmp	r0, #0
90009ba4:	f040 8082 	bne.w	90009cac <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009ba8:	fa5f f388 	uxtb.w	r3, r8
90009bac:	f8db 4000 	ldr.w	r4, [fp]
90009bb0:	62a3      	str	r3, [r4, #40]	; 0x28
90009bb2:	1c6a      	adds	r2, r5, #1
90009bb4:	d160      	bne.n	90009c78 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009bb6:	69a3      	ldr	r3, [r4, #24]
90009bb8:	065b      	lsls	r3, r3, #25
90009bba:	d5fc      	bpl.n	90009bb6 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009bbc:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009bc0:	b29b      	uxth	r3, r3
90009bc2:	2bff      	cmp	r3, #255	; 0xff
90009bc4:	f240 80ae 	bls.w	90009d24 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
90009bc8:	6863      	ldr	r3, [r4, #4]
90009bca:	4a6a      	ldr	r2, [pc, #424]	; (90009d74 <HAL_I2C_Mem_Read+0x2bc>)
90009bcc:	4013      	ands	r3, r2
90009bce:	4a6a      	ldr	r2, [pc, #424]	; (90009d78 <HAL_I2C_Mem_Read+0x2c0>)
90009bd0:	433b      	orrs	r3, r7
90009bd2:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009bd4:	23ff      	movs	r3, #255	; 0xff
90009bd6:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009bda:	6062      	str	r2, [r4, #4]
90009bdc:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 90009d84 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009be0:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90009be4:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 90009d88 <HAL_I2C_Mem_Read+0x2d0>
90009be8:	1c69      	adds	r1, r5, #1
90009bea:	d127      	bne.n	90009c3c <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009bec:	69a3      	ldr	r3, [r4, #24]
90009bee:	075a      	lsls	r2, r3, #29
90009bf0:	d5fc      	bpl.n	90009bec <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009bf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009bf4:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90009bf8:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90009bfa:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
90009bfe:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
90009c02:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90009c04:	3301      	adds	r3, #1
      hi2c->XferCount--;
90009c06:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90009c08:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90009c0c:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
90009c10:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90009c14:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009c16:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90009c1a:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009c1c:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90009c1e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009c22:	b10a      	cbz	r2, 90009c28 <HAL_I2C_Mem_Read+0x170>
90009c24:	2b00      	cmp	r3, #0
90009c26:	d046      	beq.n	90009cb6 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90009c28:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009c2c:	b29b      	uxth	r3, r3
90009c2e:	2b00      	cmp	r3, #0
90009c30:	f000 8088 	beq.w	90009d44 <HAL_I2C_Mem_Read+0x28c>
90009c34:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009c36:	f8db 4000 	ldr.w	r4, [fp]
90009c3a:	d0d7      	beq.n	90009bec <HAL_I2C_Mem_Read+0x134>
90009c3c:	69a3      	ldr	r3, [r4, #24]
90009c3e:	075b      	lsls	r3, r3, #29
90009c40:	d4d7      	bmi.n	90009bf2 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009c42:	f7fe ff87 	bl	90008b54 <HAL_GetTick>
90009c46:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009c48:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009c4c:	4285      	cmp	r5, r0
90009c4e:	d301      	bcc.n	90009c54 <HAL_I2C_Mem_Read+0x19c>
90009c50:	2d00      	cmp	r5, #0
90009c52:	d1c9      	bne.n	90009be8 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009c54:	69a3      	ldr	r3, [r4, #24]
90009c56:	f013 0304 	ands.w	r3, r3, #4
90009c5a:	d1c5      	bne.n	90009be8 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009c5c:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009c60:	2120      	movs	r1, #32
          return HAL_ERROR;
90009c62:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009c64:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009c68:	430a      	orrs	r2, r1
90009c6a:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009c6e:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009c72:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90009c76:	e75f      	b.n	90009b38 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009c78:	69a3      	ldr	r3, [r4, #24]
90009c7a:	0658      	lsls	r0, r3, #25
90009c7c:	d49e      	bmi.n	90009bbc <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009c7e:	f7fe ff69 	bl	90008b54 <HAL_GetTick>
90009c82:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009c84:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009c88:	4285      	cmp	r5, r0
90009c8a:	d301      	bcc.n	90009c90 <HAL_I2C_Mem_Read+0x1d8>
90009c8c:	2d00      	cmp	r5, #0
90009c8e:	d190      	bne.n	90009bb2 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009c90:	69a3      	ldr	r3, [r4, #24]
90009c92:	f013 0340 	ands.w	r3, r3, #64	; 0x40
90009c96:	d18c      	bne.n	90009bb2 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009c98:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009c9c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009c9e:	430a      	orrs	r2, r1
90009ca0:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009ca4:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009ca8:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90009cac:	2300      	movs	r3, #0
      return HAL_ERROR;
90009cae:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90009cb0:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
90009cb4:	e740      	b.n	90009b38 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009cb6:	f8db 2000 	ldr.w	r2, [fp]
90009cba:	1c68      	adds	r0, r5, #1
90009cbc:	d111      	bne.n	90009ce2 <HAL_I2C_Mem_Read+0x22a>
90009cbe:	6993      	ldr	r3, [r2, #24]
90009cc0:	0619      	lsls	r1, r3, #24
90009cc2:	d5fc      	bpl.n	90009cbe <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009cc4:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009cc8:	b29b      	uxth	r3, r3
90009cca:	2bff      	cmp	r3, #255	; 0xff
90009ccc:	d91a      	bls.n	90009d04 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
90009cce:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009cd0:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009cd4:	ea03 0308 	and.w	r3, r3, r8
90009cd8:	433b      	orrs	r3, r7
90009cda:	ea43 0309 	orr.w	r3, r3, r9
90009cde:	6053      	str	r3, [r2, #4]
}
90009ce0:	e7a2      	b.n	90009c28 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009ce2:	6993      	ldr	r3, [r2, #24]
90009ce4:	061b      	lsls	r3, r3, #24
90009ce6:	d4ed      	bmi.n	90009cc4 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009ce8:	f7fe ff34 	bl	90008b54 <HAL_GetTick>
90009cec:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009cee:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009cf2:	4285      	cmp	r5, r0
90009cf4:	d301      	bcc.n	90009cfa <HAL_I2C_Mem_Read+0x242>
90009cf6:	2d00      	cmp	r5, #0
90009cf8:	d1df      	bne.n	90009cba <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009cfa:	6993      	ldr	r3, [r2, #24]
90009cfc:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009d00:	d1db      	bne.n	90009cba <HAL_I2C_Mem_Read+0x202>
90009d02:	e7ab      	b.n	90009c5c <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90009d04:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009d08:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009d0a:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90009d0c:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009d10:	6853      	ldr	r3, [r2, #4]
90009d12:	ea03 0308 	and.w	r3, r3, r8
90009d16:	433b      	orrs	r3, r7
90009d18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009d1c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009d20:	6053      	str	r3, [r2, #4]
}
90009d22:	e781      	b.n	90009c28 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90009d24:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009d28:	4912      	ldr	r1, [pc, #72]	; (90009d74 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90009d2a:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009d2c:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90009d2e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009d32:	6863      	ldr	r3, [r4, #4]
90009d34:	400b      	ands	r3, r1
90009d36:	433b      	orrs	r3, r7
90009d38:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009d3c:	4a0f      	ldr	r2, [pc, #60]	; (90009d7c <HAL_I2C_Mem_Read+0x2c4>)
90009d3e:	431a      	orrs	r2, r3
90009d40:	6062      	str	r2, [r4, #4]
}
90009d42:	e74b      	b.n	90009bdc <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009d44:	4632      	mov	r2, r6
90009d46:	4629      	mov	r1, r5
90009d48:	4658      	mov	r0, fp
90009d4a:	f7ff fc51 	bl	900095f0 <I2C_WaitOnSTOPFlagUntilTimeout>
90009d4e:	b970      	cbnz	r0, 90009d6e <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009d50:	f8db 3000 	ldr.w	r3, [fp]
90009d54:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009d56:	4c0a      	ldr	r4, [pc, #40]	; (90009d80 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009d58:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009d5a:	685a      	ldr	r2, [r3, #4]
90009d5c:	4022      	ands	r2, r4
90009d5e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009d60:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009d64:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009d68:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90009d6c:	e6e4      	b.n	90009b38 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
90009d6e:	2001      	movs	r0, #1
90009d70:	e6e2      	b.n	90009b38 <HAL_I2C_Mem_Read+0x80>
90009d72:	bf00      	nop
90009d74:	fc009800 	.word	0xfc009800
90009d78:	01ff2400 	.word	0x01ff2400
90009d7c:	02002400 	.word	0x02002400
90009d80:	fe00e800 	.word	0xfe00e800
90009d84:	fc009c00 	.word	0xfc009c00
90009d88:	01ff0000 	.word	0x01ff0000

90009d8c <HAL_I2C_GetState>:
  return hi2c->State;
90009d8c:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90009d90:	4770      	bx	lr
90009d92:	bf00      	nop

90009d94 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009d94:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90009d96:	4770      	bx	lr

90009d98 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009d98:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90009d9c:	2a20      	cmp	r2, #32
90009d9e:	d123      	bne.n	90009de8 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009da0:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009da4:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90009da8:	4603      	mov	r3, r0
90009daa:	2a01      	cmp	r2, #1
90009dac:	d01c      	beq.n	90009de8 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009dae:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009db0:	2024      	movs	r0, #36	; 0x24
{
90009db2:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009db4:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009db8:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009dbc:	6810      	ldr	r0, [r2, #0]
90009dbe:	f020 0001 	bic.w	r0, r0, #1
90009dc2:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009dc4:	6810      	ldr	r0, [r2, #0]
90009dc6:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
90009dca:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009dcc:	6810      	ldr	r0, [r2, #0]
90009dce:	4301      	orrs	r1, r0

    return HAL_OK;
90009dd0:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009dd2:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009dd4:	6811      	ldr	r1, [r2, #0]
90009dd6:	f041 0101 	orr.w	r1, r1, #1
90009dda:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009ddc:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009de0:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009de4:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90009de8:	2002      	movs	r0, #2
}
90009dea:	4770      	bx	lr

90009dec <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009dec:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90009df0:	2a20      	cmp	r2, #32
90009df2:	d122      	bne.n	90009e3a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009df4:	4603      	mov	r3, r0
{
90009df6:	b500      	push	{lr}
90009df8:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009dfc:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90009e00:	2a01      	cmp	r2, #1
90009e02:	d01c      	beq.n	90009e3e <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009e04:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009e06:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009e08:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009e0c:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90009e10:	6810      	ldr	r0, [r2, #0]
90009e12:	f020 0001 	bic.w	r0, r0, #1
90009e16:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009e18:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90009e1a:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90009e1e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009e22:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009e24:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009e26:	6811      	ldr	r1, [r2, #0]
90009e28:	f041 0101 	orr.w	r1, r1, #1
90009e2c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009e2e:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009e32:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009e36:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90009e3a:	2002      	movs	r0, #2
}
90009e3c:	4770      	bx	lr
    return HAL_BUSY;
90009e3e:	2002      	movs	r0, #2
}
90009e40:	f85d fb04 	ldr.w	pc, [sp], #4

90009e44 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009e44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009e48:	460d      	mov	r5, r1
90009e4a:	4614      	mov	r4, r2
90009e4c:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009e4e:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90009e50:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90009e52:	2701      	movs	r7, #1
  p = 0;
90009e54:	f04f 0800 	mov.w	r8, #0
90009e58:	e006      	b.n	90009e68 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90009e5a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90009e5e:	eb06 0308 	add.w	r3, r6, r8
90009e62:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90009e66:	d837      	bhi.n	90009ed8 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009e68:	eb05 0008 	add.w	r0, r5, r8
90009e6c:	4632      	mov	r2, r6
90009e6e:	4639      	mov	r1, r7
    while (i != 0UL)
90009e70:	b116      	cbz	r6, 90009e78 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90009e72:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90009e74:	f01d fed2 	bl	90027c1c <memset>
  for (l = 0; l < 16UL; l++)
90009e78:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90009e7a:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90009e7e:	d1ec      	bne.n	90009e5a <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90009e80:	2300      	movs	r3, #0
90009e82:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90009e86:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009e8a:	7828      	ldrb	r0, [r5, #0]
90009e8c:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90009e8e:	b300      	cbz	r0, 90009ed2 <JPEG_Bits_To_SizeCodes+0x8e>
90009e90:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009e94:	2701      	movs	r7, #1
  p = 0;
90009e96:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90009e98:	4288      	cmp	r0, r1
90009e9a:	d10f      	bne.n	90009ebc <JPEG_Bits_To_SizeCodes+0x78>
90009e9c:	eb02 0008 	add.w	r0, r2, r8
90009ea0:	1c56      	adds	r6, r2, #1
90009ea2:	eb05 0c02 	add.w	ip, r5, r2
90009ea6:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90009eaa:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90009eac:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90009eb0:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009eb2:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009eb6:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009eb8:	458e      	cmp	lr, r1
90009eba:	d0f7      	beq.n	90009eac <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90009ebc:	291f      	cmp	r1, #31
90009ebe:	d80b      	bhi.n	90009ed8 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009ec0:	fa07 f001 	lsl.w	r0, r7, r1
90009ec4:	4298      	cmp	r0, r3
90009ec6:	d907      	bls.n	90009ed8 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90009ec8:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009eca:	005b      	lsls	r3, r3, #1
    si++;
90009ecc:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90009ece:	2800      	cmp	r0, #0
90009ed0:	d1e2      	bne.n	90009e98 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
90009ed2:	2000      	movs	r0, #0
}
90009ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90009ed8:	2001      	movs	r0, #1
}
90009eda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90009ede:	bf00      	nop

90009ee0 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
90009ee2:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
90009ee6:	460d      	mov	r5, r1
90009ee8:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009eea:	ab01      	add	r3, sp, #4
90009eec:	aa43      	add	r2, sp, #268	; 0x10c
90009eee:	a902      	add	r1, sp, #8
90009ef0:	f7ff ffa8 	bl	90009e44 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009ef4:	b9d0      	cbnz	r0, 90009f2c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009ef6:	9f01      	ldr	r7, [sp, #4]
90009ef8:	b1c7      	cbz	r7, 90009f2c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009efa:	370f      	adds	r7, #15
90009efc:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90009f00:	a902      	add	r1, sp, #8
90009f02:	f104 0c0f 	add.w	ip, r4, #15
90009f06:	4427      	add	r7, r4
90009f08:	e009      	b.n	90009f1e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f0a:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009f0e:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f10:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f14:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f18:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f1a:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009f1c:	d006      	beq.n	90009f2c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009f1e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009f22:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f24:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009f28:	d9ef      	bls.n	90009f0a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009f2a:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009f2c:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90009f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009f32:	bf00      	nop

90009f34 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009f38:	6804      	ldr	r4, [r0, #0]
{
90009f3a:	b093      	sub	sp, #76	; 0x4c
90009f3c:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009f3e:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
90009f42:	429a      	cmp	r2, r3
90009f44:	f000 809d 	beq.w	9000a082 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009f48:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
90009f4c:	429a      	cmp	r2, r3
90009f4e:	d003      	beq.n	90009f58 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009f50:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009f52:	b013      	add	sp, #76	; 0x4c
90009f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009f58:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009f5c:	a903      	add	r1, sp, #12
90009f5e:	f7ff ffbf 	bl	90009ee0 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009f62:	2800      	cmp	r0, #0
90009f64:	d1f5      	bne.n	90009f52 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009f66:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f6a:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f6e:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009f72:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f74:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009f78:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f7a:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009f7e:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f82:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
90009f86:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f8a:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
90009f8e:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f90:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009f94:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009f98:	f89d c014 	ldrb.w	ip, [sp, #20]
90009f9c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fa0:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fa4:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fa8:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fac:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fae:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fb2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90009fb6:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
90009fba:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fbe:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fc2:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fc6:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009fca:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fce:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009fd0:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fd4:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009fd8:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fdc:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009fde:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fe2:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fe4:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90009fe8:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009fec:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ff0:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009ff4:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ff8:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ffc:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ffe:	9b01      	ldr	r3, [sp, #4]
9000a000:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a004:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000a008:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a00c:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000a010:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a014:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000a016:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a01a:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a01e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000a022:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a026:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a02a:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a02e:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000a032:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000a036:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000a03a:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a03e:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000a042:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a044:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000a048:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000a04a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000a04e:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a052:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000a056:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a058:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000a05c:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000a05e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000a062:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a066:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000a06a:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a06c:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000a070:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000a074:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000a078:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000a07c:	b013      	add	sp, #76	; 0x4c
9000a07e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000a082:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000a086:	e769      	b.n	90009f5c <JPEG_Set_HuffDC_Mem+0x28>

9000a088 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000a088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a08c:	6804      	ldr	r4, [r0, #0]
{
9000a08e:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000a092:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a094:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000a098:	429a      	cmp	r2, r3
9000a09a:	d042      	beq.n	9000a122 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000a09c:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000a0a0:	429a      	cmp	r2, r3
9000a0a2:	d004      	beq.n	9000a0ae <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000a0a4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a0a6:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a0aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a0ae:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a0b2:	4628      	mov	r0, r5
9000a0b4:	466b      	mov	r3, sp
9000a0b6:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000a0ba:	a901      	add	r1, sp, #4
9000a0bc:	f7ff fec2 	bl	90009e44 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a0c0:	2800      	cmp	r0, #0
9000a0c2:	d1f0      	bne.n	9000a0a6 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000a0c4:	9b00      	ldr	r3, [sp, #0]
9000a0c6:	b37b      	cbz	r3, 9000a128 <JPEG_Set_HuffAC_Mem+0xa0>
9000a0c8:	330f      	adds	r3, #15
9000a0ca:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000a0ce:	f10d 0c04 	add.w	ip, sp, #4
9000a0d2:	f105 020f 	add.w	r2, r5, #15
9000a0d6:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a0da:	ae42      	add	r6, sp, #264	; 0x108
9000a0dc:	e011      	b.n	9000a102 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000a0de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000a0e2:	2ba1      	cmp	r3, #161	; 0xa1
9000a0e4:	d8de      	bhi.n	9000a0a4 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a0e6:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a0ea:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000a0ee:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000a0f2:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a0f4:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a0f8:	4631      	mov	r1, r6
9000a0fa:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a0fe:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000a100:	d013      	beq.n	9000a12a <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000a102:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000a106:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000a108:	2900      	cmp	r1, #0
9000a10a:	d0ec      	beq.n	9000a0e6 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000a10c:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000a10e:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a112:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000a114:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000a118:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a11c:	d1df      	bne.n	9000a0de <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000a11e:	23a1      	movs	r3, #161	; 0xa1
9000a120:	e7e1      	b.n	9000a0e6 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a122:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000a126:	e7c4      	b.n	9000a0b2 <JPEG_Set_HuffAC_Mem+0x2a>
9000a128:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000a12a:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000a12e:	4a1a      	ldr	r2, [pc, #104]	; (9000a198 <JPEG_Set_HuffAC_Mem+0x110>)
9000a130:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000a134:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000a138:	6023      	str	r3, [r4, #0]
9000a13a:	6063      	str	r3, [r4, #4]
9000a13c:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000a140:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000a142:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000a146:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000a148:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000a14c:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000a150:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000a152:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a156:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000a158:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a15c:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a15e:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a162:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a166:	0212      	lsls	r2, r2, #8
9000a168:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a16c:	021b      	lsls	r3, r3, #8
9000a16e:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a172:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000a176:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a178:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a17c:	433a      	orrs	r2, r7
    while (i > 1UL)
9000a17e:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a180:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000a184:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a188:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000a18c:	d1e7      	bne.n	9000a15e <JPEG_Set_HuffAC_Mem+0xd6>
}
9000a18e:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a192:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a196:	bf00      	nop
9000a198:	0fd10fd0 	.word	0x0fd10fd0

9000a19c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a19c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a19e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000a1a2:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a1a4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a1a6:	f003 0303 	and.w	r3, r3, #3
9000a1aa:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a1ac:	6803      	ldr	r3, [r0, #0]
9000a1ae:	685a      	ldr	r2, [r3, #4]
9000a1b0:	bf0c      	ite	eq
9000a1b2:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a1b6:	f022 0208 	bicne.w	r2, r2, #8
9000a1ba:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a1bc:	681a      	ldr	r2, [r3, #0]
9000a1be:	f022 0201 	bic.w	r2, r2, #1
9000a1c2:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a1c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a1c6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a1ca:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a1cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a1ce:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000a1d2:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a1d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a1d6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000a1da:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a1dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a1de:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a1e2:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000a1e4:	681a      	ldr	r2, [r3, #0]
9000a1e6:	f042 0201 	orr.w	r2, r2, #1
9000a1ea:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a1ec:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a1ee:	f002 020c 	and.w	r2, r2, #12
9000a1f2:	2a08      	cmp	r2, #8
9000a1f4:	d00a      	beq.n	9000a20c <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a1f6:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a1f8:	f002 020c 	and.w	r2, r2, #12
9000a1fc:	2a0c      	cmp	r2, #12
9000a1fe:	d000      	beq.n	9000a202 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000a200:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a202:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a204:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a208:	631a      	str	r2, [r3, #48]	; 0x30
}
9000a20a:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000a20c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a20e:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000a212:	631a      	str	r2, [r3, #48]	; 0x30
9000a214:	4770      	bx	lr
9000a216:	bf00      	nop

9000a218 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a218:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a21a:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000a21c:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a21e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000a220:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a222:	42aa      	cmp	r2, r5
9000a224:	d32d      	bcc.n	9000a282 <JPEG_DMA_StartProcess+0x6a>
9000a226:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a228:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a22a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a22c:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a22e:	42b3      	cmp	r3, r6
9000a230:	d327      	bcc.n	9000a282 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a232:	4f1b      	ldr	r7, [pc, #108]	; (9000a2a0 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a234:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000a2ac <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a238:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a23a:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a23e:	4919      	ldr	r1, [pc, #100]	; (9000a2a4 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a240:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a242:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000a244:	4918      	ldr	r1, [pc, #96]	; (9000a2a8 <JPEG_DMA_StartProcess+0x90>)
9000a246:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000a248:	b1a5      	cbz	r5, 9000a274 <JPEG_DMA_StartProcess+0x5c>
9000a24a:	b19e      	cbz	r6, 9000a274 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a24c:	fbb2 f1f5 	udiv	r1, r2, r5
9000a250:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a254:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a256:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a258:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a25a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a25c:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000a25e:	fbb3 f2f6 	udiv	r2, r3, r6
9000a262:	fb06 3212 	mls	r2, r6, r2, r3
9000a266:	1a9b      	subs	r3, r3, r2
9000a268:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a26a:	9500      	str	r5, [sp, #0]
9000a26c:	69e2      	ldr	r2, [r4, #28]
9000a26e:	f001 fbb5 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000a272:	b148      	cbz	r0, 9000a288 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a274:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000a276:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a278:	f043 0304 	orr.w	r3, r3, #4
9000a27c:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000a27e:	b003      	add	sp, #12
9000a280:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000a282:	2001      	movs	r0, #1
}
9000a284:	b003      	add	sp, #12
9000a286:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a288:	6822      	ldr	r2, [r4, #0]
9000a28a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a28c:	69a1      	ldr	r1, [r4, #24]
9000a28e:	3240      	adds	r2, #64	; 0x40
9000a290:	9500      	str	r5, [sp, #0]
9000a292:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a294:	f001 fba2 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000a298:	2800      	cmp	r0, #0
9000a29a:	d0f3      	beq.n	9000a284 <JPEG_DMA_StartProcess+0x6c>
9000a29c:	e7ea      	b.n	9000a274 <JPEG_DMA_StartProcess+0x5c>
9000a29e:	bf00      	nop
9000a2a0:	9000a7d1 	.word	0x9000a7d1
9000a2a4:	9000aa49 	.word	0x9000aa49
9000a2a8:	9000aac9 	.word	0x9000aac9
9000a2ac:	9000a7fd 	.word	0x9000a7fd

9000a2b0 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a2b0:	6803      	ldr	r3, [r0, #0]
9000a2b2:	685a      	ldr	r2, [r3, #4]
9000a2b4:	f002 0203 	and.w	r2, r2, #3
9000a2b8:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000a2ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000a2be:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a2c0:	f000 8094 	beq.w	9000a3ec <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a2c4:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a2c6:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a2c8:	f014 0403 	ands.w	r4, r4, #3
9000a2cc:	d172      	bne.n	9000a3b4 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a2ce:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a2d0:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a2d2:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a2d4:	68da      	ldr	r2, [r3, #12]
9000a2d6:	0c12      	lsrs	r2, r2, #16
9000a2d8:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a2da:	4a5f      	ldr	r2, [pc, #380]	; (9000a458 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000a2dc:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000a2e0:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000a2e4:	2600      	movs	r6, #0
9000a2e6:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a2ea:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000a2ee:	f241 3488 	movw	r4, #5000	; 0x1388
9000a2f2:	e033      	b.n	9000a35c <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a2f4:	f892 8001 	ldrb.w	r8, [r2, #1]
9000a2f8:	fb0e f707 	mul.w	r7, lr, r7
9000a2fc:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a2fe:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a302:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a306:	2f64      	cmp	r7, #100	; 0x64
9000a308:	d961      	bls.n	9000a3ce <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000a30a:	fbb4 f7f7 	udiv	r7, r4, r7
9000a30e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a310:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000a314:	2f01      	cmp	r7, #1
9000a316:	d03d      	beq.n	9000a394 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a318:	f892 8002 	ldrb.w	r8, [r2, #2]
9000a31c:	fb0e f707 	mul.w	r7, lr, r7
9000a320:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a322:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a326:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a32a:	2f64      	cmp	r7, #100	; 0x64
9000a32c:	d94a      	bls.n	9000a3c4 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000a32e:	fbb4 f7f7 	udiv	r7, r4, r7
9000a332:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a334:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000a336:	2b01      	cmp	r3, #1
9000a338:	d030      	beq.n	9000a39c <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a33a:	78d7      	ldrb	r7, [r2, #3]
9000a33c:	fb0e f303 	mul.w	r3, lr, r3
9000a340:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a342:	5dcf      	ldrb	r7, [r1, r7]
9000a344:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000a348:	2b64      	cmp	r3, #100	; 0x64
9000a34a:	d94a      	bls.n	9000a3e2 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000a34c:	fbb4 f3f3 	udiv	r3, r4, r3
9000a350:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a352:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000a354:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a358:	4295      	cmp	r5, r2
9000a35a:	d025      	beq.n	9000a3a8 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000a35c:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a360:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000a362:	2f01      	cmp	r7, #1
9000a364:	d02c      	beq.n	9000a3c0 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a366:	f892 8000 	ldrb.w	r8, [r2]
9000a36a:	fb0e f707 	mul.w	r7, lr, r7
9000a36e:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a370:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a374:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a378:	2f64      	cmp	r7, #100	; 0x64
9000a37a:	d92d      	bls.n	9000a3d8 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000a37c:	fbb4 f7f7 	udiv	r7, r4, r7
9000a380:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a382:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a386:	2f01      	cmp	r7, #1
9000a388:	d1b4      	bne.n	9000a2f4 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a38a:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a38e:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a390:	2f01      	cmp	r7, #1
9000a392:	d1c1      	bne.n	9000a318 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a394:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a396:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a398:	2b01      	cmp	r3, #1
9000a39a:	d1ce      	bne.n	9000a33a <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a39c:	3204      	adds	r2, #4
        quality += 100UL;
9000a39e:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000a3a0:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a3a4:	4295      	cmp	r5, r2
9000a3a6:	d1d9      	bne.n	9000a35c <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000a3a8:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a3aa:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a3ac:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a3b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000a3b4:	f002 0203 	and.w	r2, r2, #3
9000a3b8:	2a03      	cmp	r2, #3
9000a3ba:	d14a      	bne.n	9000a452 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000a3bc:	2430      	movs	r4, #48	; 0x30
9000a3be:	e016      	b.n	9000a3ee <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000a3c0:	3664      	adds	r6, #100	; 0x64
9000a3c2:	e7de      	b.n	9000a382 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000a3c4:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a3c8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a3cc:	e7b2      	b.n	9000a334 <HAL_JPEG_GetInfo.part.0+0x84>
9000a3ce:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a3d2:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a3d6:	e79b      	b.n	9000a310 <HAL_JPEG_GetInfo.part.0+0x60>
9000a3d8:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a3dc:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a3e0:	e7cf      	b.n	9000a382 <HAL_JPEG_GetInfo.part.0+0xd2>
9000a3e2:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000a3e6:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a3ea:	e7b2      	b.n	9000a352 <HAL_JPEG_GetInfo.part.0+0xa2>
9000a3ec:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a3ee:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a3f0:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a3f4:	0c12      	lsrs	r2, r2, #16
9000a3f6:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a3fa:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a3fc:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a3fe:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a400:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a402:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a404:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a408:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a40c:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a410:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000a414:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a418:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a41c:	d108      	bne.n	9000a430 <HAL_JPEG_GetInfo.part.0+0x180>
9000a41e:	2d01      	cmp	r5, #1
9000a420:	d106      	bne.n	9000a430 <HAL_JPEG_GetInfo.part.0+0x180>
9000a422:	f016 0f0f 	tst.w	r6, #15
9000a426:	bf0c      	ite	eq
9000a428:	2401      	moveq	r4, #1
9000a42a:	2400      	movne	r4, #0
9000a42c:	0064      	lsls	r4, r4, #1
9000a42e:	e754      	b.n	9000a2da <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a430:	ea42 020c 	orr.w	r2, r2, ip
9000a434:	f012 040f 	ands.w	r4, r2, #15
9000a438:	f43f af4f 	beq.w	9000a2da <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a43c:	ea4c 0206 	orr.w	r2, ip, r6
9000a440:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000a444:	2d03      	cmp	r5, #3
9000a446:	bf08      	it	eq
9000a448:	2a00      	cmpeq	r2, #0
9000a44a:	bf0c      	ite	eq
9000a44c:	2401      	moveq	r4, #1
9000a44e:	2400      	movne	r4, #0
9000a450:	e743      	b.n	9000a2da <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000a452:	2001      	movs	r0, #1
}
9000a454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a458:	9002b3e0 	.word	0x9002b3e0

9000a45c <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a45c:	2800      	cmp	r0, #0
9000a45e:	f000 810b 	beq.w	9000a678 <HAL_JPEG_Init+0x21c>
{
9000a462:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a464:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a468:	4604      	mov	r4, r0
9000a46a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a46e:	2b00      	cmp	r3, #0
9000a470:	f000 80fd 	beq.w	9000a66e <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000a474:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a476:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000a478:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a47a:	4880      	ldr	r0, [pc, #512]	; (9000a67c <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a47c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a480:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a482:	f041 0101 	orr.w	r1, r1, #1
9000a486:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a488:	6811      	ldr	r1, [r2, #0]
9000a48a:	f021 0101 	bic.w	r1, r1, #1
9000a48e:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a490:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a492:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000a496:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a498:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a49a:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000a49e:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a4a0:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a4a2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000a4a6:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a4a8:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000a4aa:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000a4ae:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a4b0:	4973      	ldr	r1, [pc, #460]	; (9000a680 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a4b2:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a4b4:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000a4b6:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a4b8:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a4bc:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000a4c0:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000a4c4:	4b6f      	ldr	r3, [pc, #444]	; (9000a684 <HAL_JPEG_Init+0x228>)
9000a4c6:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000a4ca:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a4ce:	486e      	ldr	r0, [pc, #440]	; (9000a688 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a4d0:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a4d4:	4b6d      	ldr	r3, [pc, #436]	; (9000a68c <HAL_JPEG_Init+0x230>)
9000a4d6:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000a4da:	496d      	ldr	r1, [pc, #436]	; (9000a690 <HAL_JPEG_Init+0x234>)
9000a4dc:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a4e0:	4b6c      	ldr	r3, [pc, #432]	; (9000a694 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a4e2:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a4e6:	486c      	ldr	r0, [pc, #432]	; (9000a698 <HAL_JPEG_Init+0x23c>)
9000a4e8:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000a4ec:	496b      	ldr	r1, [pc, #428]	; (9000a69c <HAL_JPEG_Init+0x240>)
9000a4ee:	4b6c      	ldr	r3, [pc, #432]	; (9000a6a0 <HAL_JPEG_Init+0x244>)
9000a4f0:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000a4f4:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000a4f8:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a4fc:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000a500:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000a504:	4967      	ldr	r1, [pc, #412]	; (9000a6a4 <HAL_JPEG_Init+0x248>)
9000a506:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a508:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a50c:	430b      	orrs	r3, r1
  *address = value;
9000a50e:	4966      	ldr	r1, [pc, #408]	; (9000a6a8 <HAL_JPEG_Init+0x24c>)
9000a510:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000a514:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a518:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000a51c:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a51e:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a522:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a524:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a528:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000a52c:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a52e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a532:	ea43 030c 	orr.w	r3, r3, ip
9000a536:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a53a:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000a53e:	d1eb      	bne.n	9000a518 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000a540:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a544:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000a548:	4856      	ldr	r0, [pc, #344]	; (9000a6a4 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a54a:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000a54c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a54e:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000a552:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000a556:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a55a:	4003      	ands	r3, r0
  *address = value;
9000a55c:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a560:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000a564:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000a568:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a56c:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000a570:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a574:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a576:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000a57a:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000a57e:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000a582:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a584:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a586:	4b49      	ldr	r3, [pc, #292]	; (9000a6ac <HAL_JPEG_Init+0x250>)
  *address = value;
9000a588:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a58c:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a590:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000a594:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000a598:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000a59c:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000a5a0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000a5a2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000a5a6:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000a5aa:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000a5ae:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a5b0:	483f      	ldr	r0, [pc, #252]	; (9000a6b0 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a5b2:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a5b4:	4b3f      	ldr	r3, [pc, #252]	; (9000a6b4 <HAL_JPEG_Init+0x258>)
  *address = value;
9000a5b6:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a5ba:	493f      	ldr	r1, [pc, #252]	; (9000a6b8 <HAL_JPEG_Init+0x25c>)
9000a5bc:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000a5c0:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a5c4:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000a5c8:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000a5cc:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a5d0:	493a      	ldr	r1, [pc, #232]	; (9000a6bc <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000a5d2:	b29b      	uxth	r3, r3
9000a5d4:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a5d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000a5dc:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a5e0:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000a5e4:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a5e6:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a5ea:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000a5ec:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a5f0:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000a5f4:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a5f6:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000a5fa:	ea43 030e 	orr.w	r3, r3, lr
9000a5fe:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a602:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000a606:	d1eb      	bne.n	9000a5e0 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000a608:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000a60c:	4926      	ldr	r1, [pc, #152]	; (9000a6a8 <HAL_JPEG_Init+0x24c>)
9000a60e:	4620      	mov	r0, r4
9000a610:	f7ff fd3a 	bl	9000a088 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a614:	b118      	cbz	r0, 9000a61e <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a616:	2301      	movs	r3, #1
    return HAL_ERROR;
9000a618:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a61a:	6523      	str	r3, [r4, #80]	; 0x50
}
9000a61c:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000a61e:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000a620:	4620      	mov	r0, r4
9000a622:	4926      	ldr	r1, [pc, #152]	; (9000a6bc <HAL_JPEG_Init+0x260>)
9000a624:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000a628:	f7ff fd2e 	bl	9000a088 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a62c:	2800      	cmp	r0, #0
9000a62e:	d1f2      	bne.n	9000a616 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000a630:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000a632:	4620      	mov	r0, r4
9000a634:	4922      	ldr	r1, [pc, #136]	; (9000a6c0 <HAL_JPEG_Init+0x264>)
9000a636:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000a63a:	f7ff fc7b 	bl	90009f34 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000a63e:	2800      	cmp	r0, #0
9000a640:	d1e9      	bne.n	9000a616 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000a642:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000a644:	4620      	mov	r0, r4
9000a646:	491f      	ldr	r1, [pc, #124]	; (9000a6c4 <HAL_JPEG_Init+0x268>)
9000a648:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000a64c:	f7ff fc72 	bl	90009f34 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000a650:	2800      	cmp	r0, #0
9000a652:	d1e0      	bne.n	9000a616 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a654:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a656:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a658:	6853      	ldr	r3, [r2, #4]
9000a65a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000a65e:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000a660:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a662:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a664:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000a668:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000a66a:	6560      	str	r0, [r4, #84]	; 0x54
}
9000a66c:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000a66e:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000a672:	f7f8 fcc7 	bl	90003004 <HAL_JPEG_MspInit>
9000a676:	e6fd      	b.n	9000a474 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000a678:	2001      	movs	r0, #1
}
9000a67a:	4770      	bx	lr
9000a67c:	9002b3a0 	.word	0x9002b3a0
9000a680:	9002b328 	.word	0x9002b328
9000a684:	01050100 	.word	0x01050100
9000a688:	0b0a0908 	.word	0x0b0a0908
9000a68c:	07060504 	.word	0x07060504
9000a690:	03020100 	.word	0x03020100
9000a694:	7d010000 	.word	0x7d010000
9000a698:	04040505 	.word	0x04040505
9000a69c:	03040203 	.word	0x03040203
9000a6a0:	03010200 	.word	0x03010200
9000a6a4:	ffff0000 	.word	0xffff0000
9000a6a8:	9002b274 	.word	0x9002b274
9000a6ac:	09080706 	.word	0x09080706
9000a6b0:	01000404 	.word	0x01000404
9000a6b4:	04040201 	.word	0x04040201
9000a6b8:	05070403 	.word	0x05070403
9000a6bc:	9002b1c0 	.word	0x9002b1c0
9000a6c0:	9002b384 	.word	0x9002b384
9000a6c4:	9002b368 	.word	0x9002b368

9000a6c8 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a6c8:	2b00      	cmp	r3, #0
9000a6ca:	bf18      	it	ne
9000a6cc:	2900      	cmpne	r1, #0
9000a6ce:	d03b      	beq.n	9000a748 <HAL_JPEG_Decode_DMA+0x80>
{
9000a6d0:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a6d2:	fab0 f580 	clz	r5, r0
9000a6d6:	4604      	mov	r4, r0
9000a6d8:	096d      	lsrs	r5, r5, #5
9000a6da:	b330      	cbz	r0, 9000a72a <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000a6dc:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000a6e0:	f1bc 0f01 	cmp.w	ip, #1
9000a6e4:	d02e      	beq.n	9000a744 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a6e6:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000a6ea:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a6ee:	45f4      	cmp	ip, lr
9000a6f0:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000a6f4:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a6f8:	d119      	bne.n	9000a72e <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000a6fa:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000a6fc:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000a700:	9b04      	ldr	r3, [sp, #16]
9000a702:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000a704:	2304      	movs	r3, #4
9000a706:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000a70a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a70c:	f023 030f 	bic.w	r3, r3, #15
9000a710:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000a712:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a714:	f043 030e 	orr.w	r3, r3, #14
9000a718:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000a71a:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000a71c:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000a71e:	f7ff fd3d 	bl	9000a19c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000a722:	f7ff fd79 	bl	9000a218 <JPEG_DMA_StartProcess>
9000a726:	b930      	cbnz	r0, 9000a736 <HAL_JPEG_Decode_DMA+0x6e>
}
9000a728:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000a72a:	2001      	movs	r0, #1
}
9000a72c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000a72e:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000a730:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000a734:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a736:	2306      	movs	r3, #6
      return HAL_ERROR;
9000a738:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000a73a:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a73e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000a742:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000a744:	2002      	movs	r0, #2
}
9000a746:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000a748:	2001      	movs	r0, #1
}
9000a74a:	4770      	bx	lr

9000a74c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a74c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a74e:	f003 030c 	and.w	r3, r3, #12
9000a752:	2b0c      	cmp	r3, #12
9000a754:	d01a      	beq.n	9000a78c <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a756:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a758:	f003 030c 	and.w	r3, r3, #12
9000a75c:	2b08      	cmp	r3, #8
9000a75e:	d001      	beq.n	9000a764 <HAL_JPEG_Pause+0x18>
}
9000a760:	2000      	movs	r0, #0
9000a762:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a764:	07ca      	lsls	r2, r1, #31
9000a766:	d41f      	bmi.n	9000a7a8 <HAL_JPEG_Pause+0x5c>
9000a768:	f04f 3cff 	mov.w	ip, #4294967295
9000a76c:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a770:	078b      	lsls	r3, r1, #30
9000a772:	d504      	bpl.n	9000a77e <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a774:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a776:	4694      	mov	ip, r2
9000a778:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000a77c:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a77e:	6802      	ldr	r2, [r0, #0]
}
9000a780:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a782:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a784:	ea03 030c 	and.w	r3, r3, ip
9000a788:	6313      	str	r3, [r2, #48]	; 0x30
}
9000a78a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a78c:	07cb      	lsls	r3, r1, #31
9000a78e:	d503      	bpl.n	9000a798 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a790:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a792:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000a796:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a798:	0789      	lsls	r1, r1, #30
9000a79a:	d5e1      	bpl.n	9000a760 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a79c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a79e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000a7a2:	6543      	str	r3, [r0, #84]	; 0x54
}
9000a7a4:	2000      	movs	r0, #0
9000a7a6:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a7a8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a7aa:	f06f 0c06 	mvn.w	ip, #6
9000a7ae:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000a7b2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000a7b6:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a7b8:	e7da      	b.n	9000a770 <HAL_JPEG_Pause+0x24>
9000a7ba:	bf00      	nop

9000a7bc <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a7bc:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a7be:	6282      	str	r2, [r0, #40]	; 0x28
}
9000a7c0:	4770      	bx	lr
9000a7c2:	bf00      	nop

9000a7c4 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a7c4:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a7c6:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000a7c8:	4770      	bx	lr
9000a7ca:	bf00      	nop

9000a7cc <HAL_JPEG_EncodeCpltCallback>:
9000a7cc:	4770      	bx	lr
9000a7ce:	bf00      	nop

9000a7d0 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a7d0:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a7d2:	2101      	movs	r1, #1
{
9000a7d4:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a7d6:	6803      	ldr	r3, [r0, #0]
9000a7d8:	681a      	ldr	r2, [r3, #0]
9000a7da:	f022 0201 	bic.w	r2, r2, #1
9000a7de:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a7e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a7e2:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a7e6:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a7e8:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a7ec:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000a7ee:	f043 0304 	orr.w	r3, r3, #4
9000a7f2:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a7f4:	f7f6 ffae 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000a7f8:	bd08      	pop	{r3, pc}
9000a7fa:	bf00      	nop

9000a7fc <JPEG_MDMAInCpltCallback>:
{
9000a7fc:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a7fe:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a800:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000a804:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a806:	6822      	ldr	r2, [r4, #0]
9000a808:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a80a:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000a80e:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a810:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a812:	400b      	ands	r3, r1
9000a814:	2b0c      	cmp	r3, #12
9000a816:	d001      	beq.n	9000a81c <JPEG_MDMAInCpltCallback+0x20>
}
9000a818:	b003      	add	sp, #12
9000a81a:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a81c:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a81e:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a820:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a822:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a824:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a826:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a82a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a82c:	1a9b      	subs	r3, r3, r2
9000a82e:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a830:	6a21      	ldr	r1, [r4, #32]
9000a832:	f7f6 ff1b 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a836:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a838:	42ab      	cmp	r3, r5
9000a83a:	d311      	bcc.n	9000a860 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a83c:	b305      	cbz	r5, 9000a880 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a83e:	fbb3 f2f5 	udiv	r2, r3, r5
9000a842:	fb05 3212 	mls	r2, r5, r2, r3
9000a846:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a848:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a84a:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a84c:	04d1      	lsls	r1, r2, #19
9000a84e:	d400      	bmi.n	9000a852 <JPEG_MDMAInCpltCallback+0x56>
9000a850:	b963      	cbnz	r3, 9000a86c <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a852:	6822      	ldr	r2, [r4, #0]
9000a854:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a856:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000a85a:	6313      	str	r3, [r2, #48]	; 0x30
}
9000a85c:	b003      	add	sp, #12
9000a85e:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a860:	b1cb      	cbz	r3, 9000a896 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a862:	0798      	lsls	r0, r3, #30
9000a864:	d119      	bne.n	9000a89a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a866:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a868:	04d2      	lsls	r2, r2, #19
9000a86a:	d4f2      	bmi.n	9000a852 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a86c:	6822      	ldr	r2, [r4, #0]
9000a86e:	2501      	movs	r5, #1
9000a870:	69a1      	ldr	r1, [r4, #24]
9000a872:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a874:	3240      	adds	r2, #64	; 0x40
9000a876:	9500      	str	r5, [sp, #0]
9000a878:	f001 f8b0 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000a87c:	2800      	cmp	r0, #0
9000a87e:	d0e8      	beq.n	9000a852 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a880:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a882:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a884:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a886:	f043 0304 	orr.w	r3, r3, #4
9000a88a:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a88c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a890:	f7f6 ff60 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000a894:	e7c0      	b.n	9000a818 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a896:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a898:	e7db      	b.n	9000a852 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a89a:	f023 0303 	bic.w	r3, r3, #3
9000a89e:	3304      	adds	r3, #4
9000a8a0:	e7d2      	b.n	9000a848 <JPEG_MDMAInCpltCallback+0x4c>
9000a8a2:	bf00      	nop

9000a8a4 <JPEG_DMA_PollResidualData>:
{
9000a8a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a8a6:	6802      	ldr	r2, [r0, #0]
9000a8a8:	2610      	movs	r6, #16
{
9000a8aa:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a8ac:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000a8ae:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000a8b2:	d11d      	bne.n	9000a8f0 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a8b4:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000a8b6:	06df      	lsls	r7, r3, #27
9000a8b8:	d51a      	bpl.n	9000a8f0 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a8ba:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a8bc:	69e7      	ldr	r7, [r4, #28]
9000a8be:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a8c0:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a8c2:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a8c4:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a8c6:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a8c8:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000a8ca:	69e2      	ldr	r2, [r4, #28]
9000a8cc:	443a      	add	r2, r7
9000a8ce:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a8d0:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a8d2:	69e2      	ldr	r2, [r4, #28]
9000a8d4:	4402      	add	r2, r0
9000a8d6:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a8d8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a8da:	69e2      	ldr	r2, [r4, #28]
9000a8dc:	440a      	add	r2, r1
9000a8de:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a8e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a8e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a8e4:	3304      	adds	r3, #4
9000a8e6:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a8e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a8ea:	4293      	cmp	r3, r2
9000a8ec:	d021      	beq.n	9000a932 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a8ee:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a8f0:	3e01      	subs	r6, #1
9000a8f2:	d1db      	bne.n	9000a8ac <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a8f4:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a8f6:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000a8f8:	06d8      	lsls	r0, r3, #27
9000a8fa:	d501      	bpl.n	9000a900 <JPEG_DMA_PollResidualData+0x5c>
9000a8fc:	048b      	lsls	r3, r1, #18
9000a8fe:	d417      	bmi.n	9000a930 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a900:	6813      	ldr	r3, [r2, #0]
9000a902:	f023 0301 	bic.w	r3, r3, #1
9000a906:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a908:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a90a:	b9eb      	cbnz	r3, 9000a948 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a90c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000a90e:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a910:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a912:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a914:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a918:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a91c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a920:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a922:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a924:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a926:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a92a:	d00a      	beq.n	9000a942 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a92c:	f7ff ff4e 	bl	9000a7cc <HAL_JPEG_EncodeCpltCallback>
}
9000a930:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a932:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a934:	4620      	mov	r0, r4
9000a936:	69e1      	ldr	r1, [r4, #28]
9000a938:	f7f6 feb8 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a93c:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a93e:	6265      	str	r5, [r4, #36]	; 0x24
9000a940:	e7d6      	b.n	9000a8f0 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a942:	f7f6 ff09 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000a946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a948:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a94a:	4620      	mov	r0, r4
9000a94c:	69e1      	ldr	r1, [r4, #28]
9000a94e:	f7f6 fead 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a952:	2300      	movs	r3, #0
9000a954:	6263      	str	r3, [r4, #36]	; 0x24
9000a956:	e7d9      	b.n	9000a90c <JPEG_DMA_PollResidualData+0x68>

9000a958 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a958:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a95a:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000a95e:	d028      	beq.n	9000a9b2 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a960:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a962:	f003 030c 	and.w	r3, r3, #12
9000a966:	2b0c      	cmp	r3, #12
{
9000a968:	b570      	push	{r4, r5, r6, lr}
9000a96a:	4604      	mov	r4, r0
9000a96c:	b082      	sub	sp, #8
9000a96e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a970:	d007      	beq.n	9000a982 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a972:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a974:	f003 030c 	and.w	r3, r3, #12
9000a978:	2b08      	cmp	r3, #8
9000a97a:	d037      	beq.n	9000a9ec <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000a97c:	2000      	movs	r0, #0
}
9000a97e:	b002      	add	sp, #8
9000a980:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a982:	07c8      	lsls	r0, r1, #31
9000a984:	d417      	bmi.n	9000a9b6 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a986:	07a9      	lsls	r1, r5, #30
9000a988:	d5f8      	bpl.n	9000a97c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a98a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a98c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000a990:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a992:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a994:	041a      	lsls	r2, r3, #16
9000a996:	d453      	bmi.n	9000aa40 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a998:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a99a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000a99c:	2a00      	cmp	r2, #0
9000a99e:	d13e      	bne.n	9000aa1e <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9a0:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9a2:	2206      	movs	r2, #6
          return HAL_ERROR;
9000a9a4:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a9a6:	f043 0304 	orr.w	r3, r3, #4
9000a9aa:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a9ac:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000a9b0:	e7e5      	b.n	9000a97e <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000a9b2:	2001      	movs	r0, #1
}
9000a9b4:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9b6:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a9b8:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a9be:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9c0:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000a9c2:	2a00      	cmp	r2, #0
9000a9c4:	d0ec      	beq.n	9000a9a0 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a9c6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a9c8:	fbb3 f1f2 	udiv	r1, r3, r2
9000a9cc:	fb02 3211 	mls	r2, r2, r1, r3
9000a9d0:	1a9b      	subs	r3, r3, r2
9000a9d2:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000a9d4:	2b00      	cmp	r3, #0
9000a9d6:	d0d6      	beq.n	9000a986 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a9d8:	6822      	ldr	r2, [r4, #0]
9000a9da:	2601      	movs	r6, #1
9000a9dc:	3240      	adds	r2, #64	; 0x40
9000a9de:	9600      	str	r6, [sp, #0]
9000a9e0:	69a1      	ldr	r1, [r4, #24]
9000a9e2:	f000 fffb 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000a9e6:	2800      	cmp	r0, #0
9000a9e8:	d0cd      	beq.n	9000a986 <HAL_JPEG_Resume+0x2e>
9000a9ea:	e7d9      	b.n	9000a9a0 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a9ec:	f011 0101 	ands.w	r1, r1, #1
9000a9f0:	d013      	beq.n	9000aa1a <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9f2:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a9f4:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a9f6:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a9f8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000a9fc:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a9fe:	07ab      	lsls	r3, r5, #30
9000aa00:	d504      	bpl.n	9000aa0c <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000aa02:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000aa04:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000aa06:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000aa0a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000aa0c:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000aa0e:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000aa10:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000aa12:	430b      	orrs	r3, r1
9000aa14:	6313      	str	r3, [r2, #48]	; 0x30
}
9000aa16:	b002      	add	sp, #8
9000aa18:	bd70      	pop	{r4, r5, r6, pc}
9000aa1a:	2228      	movs	r2, #40	; 0x28
9000aa1c:	e7ef      	b.n	9000a9fe <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa20:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa22:	fbb3 f1f2 	udiv	r1, r3, r2
9000aa26:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa2a:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa2c:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa2e:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aa30:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa32:	9500      	str	r5, [sp, #0]
9000aa34:	69e2      	ldr	r2, [r4, #28]
9000aa36:	f000 ffd1 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000aa3a:	2800      	cmp	r0, #0
9000aa3c:	d09e      	beq.n	9000a97c <HAL_JPEG_Resume+0x24>
9000aa3e:	e7af      	b.n	9000a9a0 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000aa40:	4620      	mov	r0, r4
9000aa42:	f7ff ff2f 	bl	9000a8a4 <JPEG_DMA_PollResidualData>
9000aa46:	e799      	b.n	9000a97c <HAL_JPEG_Resume+0x24>

9000aa48 <JPEG_MDMAOutCpltCallback>:
{
9000aa48:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aa4a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aa4c:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000aa50:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000aa52:	6823      	ldr	r3, [r4, #0]
9000aa54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa56:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000aa5a:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aa5c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000aa5e:	400a      	ands	r2, r1
9000aa60:	2a0c      	cmp	r2, #12
9000aa62:	d001      	beq.n	9000aa68 <JPEG_MDMAOutCpltCallback+0x20>
}
9000aa64:	b003      	add	sp, #12
9000aa66:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000aa68:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aa6a:	0692      	lsls	r2, r2, #26
9000aa6c:	d505      	bpl.n	9000aa7a <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aa6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa70:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000aa74:	631a      	str	r2, [r3, #48]	; 0x30
}
9000aa76:	b003      	add	sp, #12
9000aa78:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa7a:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa7c:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa7e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000aa80:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa82:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa84:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000aa88:	1a9b      	subs	r3, r3, r2
9000aa8a:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aa8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aa8e:	f7f6 fe0d 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aa92:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000aa94:	049b      	lsls	r3, r3, #18
9000aa96:	d501      	bpl.n	9000aa9c <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aa98:	6823      	ldr	r3, [r4, #0]
9000aa9a:	e7e8      	b.n	9000aa6e <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aa9c:	6821      	ldr	r1, [r4, #0]
9000aa9e:	2501      	movs	r5, #1
9000aaa0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000aaa2:	69e2      	ldr	r2, [r4, #28]
9000aaa4:	3144      	adds	r1, #68	; 0x44
9000aaa6:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000aaa8:	9500      	str	r5, [sp, #0]
9000aaaa:	f000 ff97 	bl	9000b9dc <HAL_MDMA_Start_IT>
9000aaae:	2800      	cmp	r0, #0
9000aab0:	d0f2      	beq.n	9000aa98 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aab2:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000aab4:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000aab6:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000aab8:	f043 0304 	orr.w	r3, r3, #4
9000aabc:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000aabe:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000aac2:	f7f6 fe47 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000aac6:	e7cd      	b.n	9000aa64 <JPEG_MDMAOutCpltCallback+0x1c>

9000aac8 <JPEG_MDMAOutAbortCallback>:
{
9000aac8:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aaca:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000aacc:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000aace:	041a      	lsls	r2, r3, #16
9000aad0:	d400      	bmi.n	9000aad4 <JPEG_MDMAOutAbortCallback+0xc>
}
9000aad2:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aad4:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000aad6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000aad8:	681b      	ldr	r3, [r3, #0]
9000aada:	695b      	ldr	r3, [r3, #20]
9000aadc:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000aae0:	1ad3      	subs	r3, r2, r3
9000aae2:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000aae4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aae6:	429a      	cmp	r2, r3
9000aae8:	d025      	beq.n	9000ab36 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000aaea:	6822      	ldr	r2, [r4, #0]
9000aaec:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000aaee:	f015 0510 	ands.w	r5, r5, #16
9000aaf2:	d118      	bne.n	9000ab26 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000aaf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aaf6:	bb4b      	cbnz	r3, 9000ab4c <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aaf8:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000aafa:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aafc:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aafe:	f023 0301 	bic.w	r3, r3, #1
9000ab02:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000ab04:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab06:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab08:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000ab0c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab10:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab14:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab16:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ab18:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ab1a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab1e:	d012      	beq.n	9000ab46 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ab20:	f7ff fe54 	bl	9000a7cc <HAL_JPEG_EncodeCpltCallback>
}
9000ab24:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ab26:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ab28:	049b      	lsls	r3, r3, #18
9000ab2a:	d4d2      	bmi.n	9000aad2 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000ab2c:	4620      	mov	r0, r4
}
9000ab2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000ab32:	f7ff beb7 	b.w	9000a8a4 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab36:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab38:	4620      	mov	r0, r4
9000ab3a:	69e1      	ldr	r1, [r4, #28]
9000ab3c:	f7f6 fdb6 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000ab40:	2300      	movs	r3, #0
9000ab42:	6263      	str	r3, [r4, #36]	; 0x24
9000ab44:	e7d1      	b.n	9000aaea <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab46:	f7f6 fe07 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000ab4a:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab4e:	4620      	mov	r0, r4
9000ab50:	69e1      	ldr	r1, [r4, #28]
9000ab52:	f7f6 fdab 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab56:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ab58:	6265      	str	r5, [r4, #36]	; 0x24
9000ab5a:	e7cd      	b.n	9000aaf8 <JPEG_MDMAOutAbortCallback+0x30>

9000ab5c <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab5c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ab5e:	f003 0303 	and.w	r3, r3, #3
9000ab62:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000ab64:	6803      	ldr	r3, [r0, #0]
{
9000ab66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ab6a:	4604      	mov	r4, r0
9000ab6c:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab6e:	d01f      	beq.n	9000abb0 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000ab70:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ab72:	04d7      	lsls	r7, r2, #19
9000ab74:	d407      	bmi.n	9000ab86 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000ab76:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ab78:	0796      	lsls	r6, r2, #30
9000ab7a:	f100 811d 	bmi.w	9000adb8 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000ab7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ab80:	0750      	lsls	r0, r2, #29
9000ab82:	f100 81b1 	bmi.w	9000aee8 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ab86:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000ab88:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000ab8c:	d107      	bne.n	9000ab9e <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000ab8e:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000ab90:	f016 0608 	ands.w	r6, r6, #8
9000ab94:	d14c      	bne.n	9000ac30 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000ab96:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ab98:	06d2      	lsls	r2, r2, #27
9000ab9a:	f100 81e3 	bmi.w	9000af64 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aba0:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000aba4:	2a20      	cmp	r2, #32
9000aba6:	d01a      	beq.n	9000abde <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000aba8:	2000      	movs	r0, #0
}
9000abaa:	b002      	add	sp, #8
9000abac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000abb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000abb2:	0652      	lsls	r2, r2, #25
9000abb4:	d5dc      	bpl.n	9000ab70 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000abb6:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000abb8:	9101      	str	r1, [sp, #4]
9000abba:	f7ff fb79 	bl	9000a2b0 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000abbe:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abc0:	9901      	ldr	r1, [sp, #4]
9000abc2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000abc4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abc6:	f7f6 fd1b 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000abca:	6823      	ldr	r3, [r4, #0]
9000abcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000abce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000abd2:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000abd4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000abd6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000abda:	639a      	str	r2, [r3, #56]	; 0x38
9000abdc:	e7c8      	b.n	9000ab70 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000abde:	681a      	ldr	r2, [r3, #0]
9000abe0:	f022 0201 	bic.w	r2, r2, #1
9000abe4:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000abe6:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000abe8:	f002 020c 	and.w	r2, r2, #12
9000abec:	2a08      	cmp	r2, #8
9000abee:	f000 81e6 	beq.w	9000afbe <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000abf2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000abf4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000abf8:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000abfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000abfc:	2b00      	cmp	r3, #0
9000abfe:	f040 81e3 	bne.w	9000afc8 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000ac02:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000ac04:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac06:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ac08:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac0a:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ac0e:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac10:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000ac14:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac18:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ac1a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ac1c:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ac20:	f000 81c9 	beq.w	9000afb6 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ac24:	f7ff fdd2 	bl	9000a7cc <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000ac28:	4628      	mov	r0, r5
}
9000ac2a:	b002      	add	sp, #8
9000ac2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000ac30:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ac32:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000ac34:	3220      	adds	r2, #32
9000ac36:	4296      	cmp	r6, r2
9000ac38:	f0c0 81e4 	bcc.w	9000b004 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000ac3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac3e:	69e1      	ldr	r1, [r4, #28]
9000ac40:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ac42:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac44:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac46:	69e2      	ldr	r2, [r4, #28]
9000ac48:	440a      	add	r2, r1
9000ac4a:	0a19      	lsrs	r1, r3, #8
9000ac4c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac4e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac50:	69e2      	ldr	r2, [r4, #28]
9000ac52:	440a      	add	r2, r1
9000ac54:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac56:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac58:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac5c:	69e2      	ldr	r2, [r4, #28]
9000ac5e:	440a      	add	r2, r1
9000ac60:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac62:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac64:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac66:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac68:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ac6a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ac6c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ac70:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ac72:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac74:	69e2      	ldr	r2, [r4, #28]
9000ac76:	440a      	add	r2, r1
9000ac78:	0a19      	lsrs	r1, r3, #8
9000ac7a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac7e:	69e2      	ldr	r2, [r4, #28]
9000ac80:	440a      	add	r2, r1
9000ac82:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac84:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac86:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac88:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac8a:	69e2      	ldr	r2, [r4, #28]
9000ac8c:	440a      	add	r2, r1
9000ac8e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac90:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac92:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ac94:	3304      	adds	r3, #4
9000ac96:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ac98:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ac9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ac9c:	69e1      	ldr	r1, [r4, #28]
9000ac9e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aca0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aca2:	69e2      	ldr	r2, [r4, #28]
9000aca4:	440a      	add	r2, r1
9000aca6:	0a19      	lsrs	r1, r3, #8
9000aca8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acaa:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000acac:	69e2      	ldr	r2, [r4, #28]
9000acae:	440a      	add	r2, r1
9000acb0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acb2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acb4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000acb6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000acb8:	69e2      	ldr	r2, [r4, #28]
9000acba:	440a      	add	r2, r1
9000acbc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acc0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000acc2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acc4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000acc6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000acc8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acca:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000accc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000acce:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000acd0:	69e2      	ldr	r2, [r4, #28]
9000acd2:	440a      	add	r2, r1
9000acd4:	0a19      	lsrs	r1, r3, #8
9000acd6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000acd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000acda:	69e2      	ldr	r2, [r4, #28]
9000acdc:	440a      	add	r2, r1
9000acde:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ace0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ace2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ace4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ace6:	69e2      	ldr	r2, [r4, #28]
9000ace8:	440a      	add	r2, r1
9000acea:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000acec:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000acee:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000acf0:	3304      	adds	r3, #4
9000acf2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000acf4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000acf6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000acf8:	69e1      	ldr	r1, [r4, #28]
9000acfa:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000acfc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000acfe:	69e2      	ldr	r2, [r4, #28]
9000ad00:	440a      	add	r2, r1
9000ad02:	0a19      	lsrs	r1, r3, #8
9000ad04:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad06:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad08:	69e2      	ldr	r2, [r4, #28]
9000ad0a:	440a      	add	r2, r1
9000ad0c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad0e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad10:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad12:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad14:	69e2      	ldr	r2, [r4, #28]
9000ad16:	440a      	add	r2, r1
9000ad18:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad1c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad1e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad20:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ad22:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ad24:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad26:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ad28:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad2a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad2c:	69e2      	ldr	r2, [r4, #28]
9000ad2e:	440a      	add	r2, r1
9000ad30:	0a19      	lsrs	r1, r3, #8
9000ad32:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad34:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad36:	69e2      	ldr	r2, [r4, #28]
9000ad38:	440a      	add	r2, r1
9000ad3a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad3c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad3e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad40:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad42:	69e2      	ldr	r2, [r4, #28]
9000ad44:	440a      	add	r2, r1
9000ad46:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad48:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad4a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad4c:	3304      	adds	r3, #4
9000ad4e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ad50:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad52:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ad54:	69e1      	ldr	r1, [r4, #28]
9000ad56:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad58:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad5a:	69e2      	ldr	r2, [r4, #28]
9000ad5c:	440a      	add	r2, r1
9000ad5e:	0a19      	lsrs	r1, r3, #8
9000ad60:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad62:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad64:	69e2      	ldr	r2, [r4, #28]
9000ad66:	440a      	add	r2, r1
9000ad68:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad6a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad6c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad6e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad70:	69e2      	ldr	r2, [r4, #28]
9000ad72:	440a      	add	r2, r1
9000ad74:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ad76:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ad78:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ad7a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad7c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ad7e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ad80:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ad82:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ad84:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ad86:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad88:	69e2      	ldr	r2, [r4, #28]
9000ad8a:	440a      	add	r2, r1
9000ad8c:	0a19      	lsrs	r1, r3, #8
9000ad8e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad90:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad92:	69e2      	ldr	r2, [r4, #28]
9000ad94:	440a      	add	r2, r1
9000ad96:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad98:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ad9a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ad9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad9e:	69e2      	ldr	r2, [r4, #28]
9000ada0:	440a      	add	r2, r1
9000ada2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ada4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ada6:	3304      	adds	r3, #4
9000ada8:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000adaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000adac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000adae:	429a      	cmp	r2, r3
9000adb0:	f000 82ae 	beq.w	9000b310 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000adb4:	6823      	ldr	r3, [r4, #0]
9000adb6:	e6f2      	b.n	9000ab9e <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000adb8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000adba:	2a00      	cmp	r2, #0
9000adbc:	f000 810c 	beq.w	9000afd8 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000adc0:	6a21      	ldr	r1, [r4, #32]
9000adc2:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000adc4:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000adc6:	f240 81a4 	bls.w	9000b112 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000adca:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000adcc:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000adce:	04cd      	lsls	r5, r1, #19
9000add0:	f53f aed9 	bmi.w	9000ab86 <JPEG_Process+0x2a>
9000add4:	2a00      	cmp	r2, #0
9000add6:	f43f aed6 	beq.w	9000ab86 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000adda:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000addc:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000ade0:	f240 8203 	bls.w	9000b1ea <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ade4:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000ade6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ade8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000adea:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adec:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adee:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adf0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000adf2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000adf4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000adf8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000adfa:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000adfe:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ae00:	6a21      	ldr	r1, [r4, #32]
9000ae02:	3104      	adds	r1, #4
9000ae04:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ae06:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae08:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae0a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae0c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae0e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae10:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae12:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae14:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ae18:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae1a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae1e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ae20:	6a21      	ldr	r1, [r4, #32]
9000ae22:	3104      	adds	r1, #4
9000ae24:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ae26:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae28:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae2a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae2c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae2e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae30:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae32:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae34:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ae38:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae3a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae3e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ae40:	6a21      	ldr	r1, [r4, #32]
9000ae42:	3104      	adds	r1, #4
9000ae44:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ae46:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae48:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae4a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae4c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae4e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae50:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae52:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae54:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ae58:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae5a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae5e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ae60:	6a21      	ldr	r1, [r4, #32]
9000ae62:	3104      	adds	r1, #4
9000ae64:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ae66:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae68:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae6a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae6c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae6e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae70:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae72:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae74:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ae78:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae7a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae7e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ae80:	6a21      	ldr	r1, [r4, #32]
9000ae82:	3104      	adds	r1, #4
9000ae84:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ae86:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae88:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae8a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae8c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae8e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae90:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ae92:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ae94:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ae98:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ae9a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ae9e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000aea0:	6a21      	ldr	r1, [r4, #32]
9000aea2:	3104      	adds	r1, #4
9000aea4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aea6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aea8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aeaa:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeac:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aeae:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeb0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aeb2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aeb4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aeb8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeba:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aebe:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000aec0:	6a21      	ldr	r1, [r4, #32]
9000aec2:	3104      	adds	r1, #4
9000aec4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aec6:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aec8:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aeca:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aecc:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aece:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aed0:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aed2:	7849      	ldrb	r1, [r1, #1]
9000aed4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000aed8:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aeda:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aede:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000aee0:	6a22      	ldr	r2, [r4, #32]
9000aee2:	3204      	adds	r2, #4
9000aee4:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000aee6:	e64e      	b.n	9000ab86 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000aee8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000aeea:	2a00      	cmp	r2, #0
9000aeec:	d074      	beq.n	9000afd8 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000aeee:	6a21      	ldr	r1, [r4, #32]
9000aef0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000aef2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000aef4:	f200 8164 	bhi.w	9000b1c0 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000aef8:	428a      	cmp	r2, r1
9000aefa:	f040 810c 	bne.w	9000b116 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000aefe:	6a21      	ldr	r1, [r4, #32]
9000af00:	4620      	mov	r0, r4
9000af02:	f7f6 fbb3 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000af06:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000af08:	2a04      	cmp	r2, #4
9000af0a:	d902      	bls.n	9000af12 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000af0c:	f022 0203 	bic.w	r2, r2, #3
9000af10:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000af12:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000af14:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000af16:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000af18:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000af1a:	04c9      	lsls	r1, r1, #19
9000af1c:	f53f ae33 	bmi.w	9000ab86 <JPEG_Process+0x2a>
9000af20:	2a00      	cmp	r2, #0
9000af22:	f43f ae30 	beq.w	9000ab86 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000af26:	0891      	lsrs	r1, r2, #2
9000af28:	f040 8203 	bne.w	9000b332 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af2c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af2e:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000af30:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af32:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000af34:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af38:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000af3a:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af3c:	d010      	beq.n	9000af60 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af3e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af40:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af42:	5c69      	ldrb	r1, [r5, r1]
9000af44:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000af48:	6a21      	ldr	r1, [r4, #32]
9000af4a:	f101 0101 	add.w	r1, r1, #1
9000af4e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000af50:	d106      	bne.n	9000af60 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af52:	6a22      	ldr	r2, [r4, #32]
9000af54:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000af56:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000af58:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000af5c:	3201      	adds	r2, #1
9000af5e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000af60:	6418      	str	r0, [r3, #64]	; 0x40
9000af62:	e610      	b.n	9000ab86 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000af64:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af66:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000af68:	3204      	adds	r2, #4
9000af6a:	4295      	cmp	r5, r2
9000af6c:	f0c0 80d5 	bcc.w	9000b11a <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000af70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000af72:	69e1      	ldr	r1, [r4, #28]
9000af74:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af76:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000af78:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000af7a:	69e2      	ldr	r2, [r4, #28]
9000af7c:	440a      	add	r2, r1
9000af7e:	0a19      	lsrs	r1, r3, #8
9000af80:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000af82:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000af84:	69e2      	ldr	r2, [r4, #28]
9000af86:	440a      	add	r2, r1
9000af88:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000af8a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000af8c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000af8e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000af90:	69e2      	ldr	r2, [r4, #28]
9000af92:	440a      	add	r2, r1
9000af94:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000af96:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000af98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000af9a:	3304      	adds	r3, #4
9000af9c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000af9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000afa0:	429a      	cmp	r2, r3
9000afa2:	f47f af07 	bne.w	9000adb4 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afa6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000afa8:	4620      	mov	r0, r4
9000afaa:	69e1      	ldr	r1, [r4, #28]
9000afac:	f7f6 fb7e 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000afb0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000afb2:	6266      	str	r6, [r4, #36]	; 0x24
9000afb4:	e5f3      	b.n	9000ab9e <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000afb6:	f7f6 fbcf 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000afba:	4628      	mov	r0, r5
9000afbc:	e5f5      	b.n	9000abaa <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000afbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000afc0:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000afc4:	631a      	str	r2, [r3, #48]	; 0x30
9000afc6:	e614      	b.n	9000abf2 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000afca:	4620      	mov	r0, r4
9000afcc:	69e1      	ldr	r1, [r4, #28]
9000afce:	f7f6 fb6d 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000afd2:	2300      	movs	r3, #0
9000afd4:	6263      	str	r3, [r4, #36]	; 0x24
9000afd6:	e614      	b.n	9000ac02 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000afd8:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000afda:	f002 020c 	and.w	r2, r2, #12
9000afde:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000afe0:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000afe2:	f000 80fd 	beq.w	9000b1e0 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000afe6:	f002 020c 	and.w	r2, r2, #12
9000afea:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000afec:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000afee:	f47f adca 	bne.w	9000ab86 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000aff2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000aff6:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000aff8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000affa:	f022 0206 	bic.w	r2, r2, #6
9000affe:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b000:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b002:	e5c0      	b.n	9000ab86 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b004:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b006:	4296      	cmp	r6, r2
9000b008:	f67f adc9 	bls.w	9000ab9e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b00c:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b00e:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000b010:	0880      	lsrs	r0, r0, #2
9000b012:	d020      	beq.n	9000b056 <JPEG_Process+0x4fa>
9000b014:	4629      	mov	r1, r5
9000b016:	e000      	b.n	9000b01a <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000b018:	6823      	ldr	r3, [r4, #0]
9000b01a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b01c:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b01e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b020:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b022:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b024:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b026:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b028:	69e2      	ldr	r2, [r4, #28]
9000b02a:	4432      	add	r2, r6
9000b02c:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000b030:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b032:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b034:	69e2      	ldr	r2, [r4, #28]
9000b036:	4432      	add	r2, r6
9000b038:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b03c:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b040:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b042:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b044:	69e2      	ldr	r2, [r4, #28]
9000b046:	4432      	add	r2, r6
9000b048:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b04a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b04c:	f103 0304 	add.w	r3, r3, #4
9000b050:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b052:	d1e1      	bne.n	9000b018 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b054:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000b056:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b058:	42b3      	cmp	r3, r6
9000b05a:	f000 8161 	beq.w	9000b320 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b05e:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b062:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b064:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000b068:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b06a:	d00e      	beq.n	9000b08a <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b06c:	f005 0303 	and.w	r3, r5, #3
9000b070:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b072:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b074:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b076:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b078:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b07a:	fa27 f303 	lsr.w	r3, r7, r3
9000b07e:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b080:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b082:	f103 0301 	add.w	r3, r3, #1
9000b086:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b088:	d1f0      	bne.n	9000b06c <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000b08a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b08e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b090:	69e1      	ldr	r1, [r4, #28]
9000b092:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b094:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b098:	f7f6 fb08 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b09c:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b09e:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b0a2:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b0a4:	f63f ae86 	bhi.w	9000adb4 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0a8:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000b0ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0ae:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b0b0:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0b4:	fa27 f003 	lsr.w	r0, r7, r3
9000b0b8:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000b0ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0bc:	f102 0201 	add.w	r2, r2, #1
9000b0c0:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b0c2:	f43f ae77 	beq.w	9000adb4 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0c6:	f103 0208 	add.w	r2, r3, #8
9000b0ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0cc:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b0ce:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0d2:	fa27 f202 	lsr.w	r2, r7, r2
9000b0d6:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b0d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0da:	f102 0201 	add.w	r2, r2, #1
9000b0de:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b0e0:	f108 0202 	add.w	r2, r8, #2
9000b0e4:	f43f ae66 	beq.w	9000adb4 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0e8:	3310      	adds	r3, #16
9000b0ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0ec:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b0ee:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b0f0:	fa27 f303 	lsr.w	r3, r7, r3
9000b0f4:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000b0f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b0f8:	f103 0301 	add.w	r3, r3, #1
9000b0fc:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b0fe:	f47f ae59 	bne.w	9000adb4 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b102:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b104:	0e3f      	lsrs	r7, r7, #24
9000b106:	69e2      	ldr	r2, [r4, #28]
9000b108:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000b10a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b10c:	3301      	adds	r3, #1
9000b10e:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b110:	e650      	b.n	9000adb4 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b112:	428a      	cmp	r2, r1
9000b114:	d056      	beq.n	9000b1c4 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b116:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b118:	e535      	b.n	9000ab86 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b11a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b11c:	4295      	cmp	r5, r2
9000b11e:	f67f ad3e 	bls.w	9000ab9e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b122:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b124:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000b126:	0880      	lsrs	r0, r0, #2
9000b128:	d020      	beq.n	9000b16c <JPEG_Process+0x610>
9000b12a:	4631      	mov	r1, r6
9000b12c:	e000      	b.n	9000b130 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000b12e:	6823      	ldr	r3, [r4, #0]
9000b130:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b132:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b134:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b136:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b138:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b13a:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b13c:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b13e:	69e2      	ldr	r2, [r4, #28]
9000b140:	442a      	add	r2, r5
9000b142:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000b146:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b148:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b14a:	69e2      	ldr	r2, [r4, #28]
9000b14c:	442a      	add	r2, r5
9000b14e:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b152:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b156:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b158:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b15a:	69e2      	ldr	r2, [r4, #28]
9000b15c:	442a      	add	r2, r5
9000b15e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b160:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b162:	f103 0304 	add.w	r3, r3, #4
9000b166:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b168:	d1e1      	bne.n	9000b12e <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b16a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000b16c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b16e:	429d      	cmp	r5, r3
9000b170:	f000 80d6 	beq.w	9000b320 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b174:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b178:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b17a:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000b17e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b180:	d00e      	beq.n	9000b1a0 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b182:	f006 0303 	and.w	r3, r6, #3
9000b186:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b188:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b18a:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b18c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b18e:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b190:	fa27 f303 	lsr.w	r3, r7, r3
9000b194:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b196:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b198:	f103 0301 	add.w	r3, r3, #1
9000b19c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b19e:	d1f0      	bne.n	9000b182 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000b1a0:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b1a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b1a6:	69e1      	ldr	r1, [r4, #28]
9000b1a8:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b1aa:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b1ae:	f7f6 fa7d 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b1b2:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b1b4:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b1b8:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b1ba:	f67f af75 	bls.w	9000b0a8 <JPEG_Process+0x54c>
9000b1be:	e5f9      	b.n	9000adb4 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b1c0:	1a52      	subs	r2, r2, r1
9000b1c2:	e6a9      	b.n	9000af18 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b1c4:	6a21      	ldr	r1, [r4, #32]
9000b1c6:	4620      	mov	r0, r4
9000b1c8:	f7f6 fa50 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b1cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b1ce:	2a04      	cmp	r2, #4
9000b1d0:	d902      	bls.n	9000b1d8 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b1d2:	f022 0203 	bic.w	r2, r2, #3
9000b1d6:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000b1d8:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1da:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b1dc:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000b1de:	e5f5      	b.n	9000adcc <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b1e0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000b1e4:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b1e6:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b1e8:	e4cd      	b.n	9000ab86 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000b1ea:	2a03      	cmp	r2, #3
9000b1ec:	f240 80a4 	bls.w	9000b338 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000b1f0:	2900      	cmp	r1, #0
9000b1f2:	f43f acc8 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b1f6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b1f8:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1fa:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b1fc:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b200:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b202:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b204:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b206:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b20a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b20c:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b210:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b214:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b218:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b21a:	6a20      	ldr	r0, [r4, #32]
9000b21c:	f100 0004 	add.w	r0, r0, #4
9000b220:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b222:	f43f acb0 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b226:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b228:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b22a:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b22e:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b230:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b232:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b234:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b238:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b23a:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b23e:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b242:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b246:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b248:	6a20      	ldr	r0, [r4, #32]
9000b24a:	f100 0004 	add.w	r0, r0, #4
9000b24e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b250:	f43f ac99 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b254:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b256:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b258:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b25c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b25e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b260:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b262:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b266:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b268:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b26c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b270:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b274:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b276:	6a20      	ldr	r0, [r4, #32]
9000b278:	f100 0004 	add.w	r0, r0, #4
9000b27c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b27e:	f43f ac82 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b282:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b284:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b286:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b28a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b28c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b28e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b290:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b294:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b296:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b29a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b29e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2a2:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b2a4:	6a20      	ldr	r0, [r4, #32]
9000b2a6:	f100 0004 	add.w	r0, r0, #4
9000b2aa:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b2ac:	f43f ac6b 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b2b0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b2b2:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2b4:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2b8:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ba:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2bc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2be:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2c2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2c4:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b2c8:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2cc:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2d0:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b2d2:	6a20      	ldr	r0, [r4, #32]
9000b2d4:	f100 0004 	add.w	r0, r0, #4
9000b2d8:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b2da:	f43f ac54 	beq.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b2de:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b2e0:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2e2:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2e6:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2e8:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2ea:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ec:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2f0:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2f2:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b2f6:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2fa:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2fe:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b300:	6a20      	ldr	r0, [r4, #32]
9000b302:	f100 0004 	add.w	r0, r0, #4
9000b306:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b308:	f47f ac3d 	bne.w	9000ab86 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b30c:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b30e:	e5db      	b.n	9000aec8 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b310:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b312:	4620      	mov	r0, r4
9000b314:	69e1      	ldr	r1, [r4, #28]
9000b316:	f7f6 f9c9 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b31a:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b31c:	6265      	str	r5, [r4, #36]	; 0x24
9000b31e:	e43e      	b.n	9000ab9e <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b320:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b322:	4620      	mov	r0, r4
9000b324:	69e1      	ldr	r1, [r4, #28]
9000b326:	f7f6 f9c1 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b32a:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b32c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b32e:	6262      	str	r2, [r4, #36]	; 0x24
9000b330:	e435      	b.n	9000ab9e <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000b332:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b334:	69a0      	ldr	r0, [r4, #24]
9000b336:	e5c7      	b.n	9000aec8 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b338:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b33a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b33c:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b33e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b340:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b344:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000b346:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b348:	d010      	beq.n	9000b36c <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b34a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b34c:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b34e:	5c28      	ldrb	r0, [r5, r0]
9000b350:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000b354:	6a20      	ldr	r0, [r4, #32]
9000b356:	f100 0001 	add.w	r0, r0, #1
9000b35a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b35c:	d106      	bne.n	9000b36c <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b35e:	6a22      	ldr	r2, [r4, #32]
9000b360:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000b362:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b364:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000b368:	3201      	adds	r2, #1
9000b36a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b36c:	6419      	str	r1, [r3, #64]	; 0x40
9000b36e:	e40a      	b.n	9000ab86 <JPEG_Process+0x2a>

9000b370 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000b370:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000b374:	3b03      	subs	r3, #3
9000b376:	2b01      	cmp	r3, #1
9000b378:	d900      	bls.n	9000b37c <HAL_JPEG_IRQHandler+0xc>
9000b37a:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b37c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b37e:	f003 030c 	and.w	r3, r3, #12
9000b382:	2b08      	cmp	r3, #8
{
9000b384:	b530      	push	{r4, r5, lr}
9000b386:	4604      	mov	r4, r0
9000b388:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b38a:	d006      	beq.n	9000b39a <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b38c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b38e:	f003 030c 	and.w	r3, r3, #12
9000b392:	2b0c      	cmp	r3, #12
9000b394:	d006      	beq.n	9000b3a4 <HAL_JPEG_IRQHandler+0x34>
}
9000b396:	b003      	add	sp, #12
9000b398:	bd30      	pop	{r4, r5, pc}
9000b39a:	b003      	add	sp, #12
9000b39c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b3a0:	f7ff bbdc 	b.w	9000ab5c <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b3a4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b3a6:	f003 0303 	and.w	r3, r3, #3
9000b3aa:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b3ac:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b3ae:	d045      	beq.n	9000b43c <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b3b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3b2:	0692      	lsls	r2, r2, #26
9000b3b4:	d5ef      	bpl.n	9000b396 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b3b6:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b3b8:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b3ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b3be:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b3c0:	681a      	ldr	r2, [r3, #0]
9000b3c2:	f022 0201 	bic.w	r2, r2, #1
9000b3c6:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b3c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b3ca:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b3ce:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b3d0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b3d2:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b3d6:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b3d8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b3dc:	2b02      	cmp	r3, #2
9000b3de:	d052      	beq.n	9000b486 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b3e0:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000b3e2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b3e6:	2b02      	cmp	r3, #2
9000b3e8:	d03f      	beq.n	9000b46a <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b3ea:	6803      	ldr	r3, [r0, #0]
9000b3ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b3ee:	695b      	ldr	r3, [r3, #20]
9000b3f0:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b3f4:	1ad3      	subs	r3, r2, r3
9000b3f6:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b3f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b3fa:	429a      	cmp	r2, r3
9000b3fc:	d046      	beq.n	9000b48c <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b3fe:	6822      	ldr	r2, [r4, #0]
9000b400:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000b402:	f015 0510 	ands.w	r5, r5, #16
9000b406:	d135      	bne.n	9000b474 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000b408:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b40a:	2b00      	cmp	r3, #0
9000b40c:	d149      	bne.n	9000b4a2 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b40e:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b410:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b412:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b414:	f023 0301 	bic.w	r3, r3, #1
9000b418:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b41a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b41c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b41e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b422:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b426:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b42a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b42c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b42e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b430:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b434:	d032      	beq.n	9000b49c <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b436:	f7ff f9c9 	bl	9000a7cc <HAL_JPEG_EncodeCpltCallback>
9000b43a:	e7ac      	b.n	9000b396 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b43c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b43e:	0651      	lsls	r1, r2, #25
9000b440:	d5b6      	bpl.n	9000b3b0 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b442:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b444:	9101      	str	r1, [sp, #4]
9000b446:	f7fe ff33 	bl	9000a2b0 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b44a:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b44c:	9901      	ldr	r1, [sp, #4]
9000b44e:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b450:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b452:	f7f6 f8d5 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b456:	6823      	ldr	r3, [r4, #0]
9000b458:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b45a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000b45e:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b460:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b462:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000b466:	639a      	str	r2, [r3, #56]	; 0x38
9000b468:	e7a2      	b.n	9000b3b0 <HAL_JPEG_IRQHandler+0x40>
}
9000b46a:	b003      	add	sp, #12
9000b46c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b470:	f000 bb30 	b.w	9000bad4 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b474:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b476:	049b      	lsls	r3, r3, #18
9000b478:	d48d      	bmi.n	9000b396 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000b47a:	4620      	mov	r0, r4
}
9000b47c:	b003      	add	sp, #12
9000b47e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b482:	f7ff ba0f 	b.w	9000a8a4 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b486:	f000 fb25 	bl	9000bad4 <HAL_MDMA_Abort_IT>
9000b48a:	e7a9      	b.n	9000b3e0 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b48c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b48e:	4620      	mov	r0, r4
9000b490:	69e1      	ldr	r1, [r4, #28]
9000b492:	f7f6 f90b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b496:	2300      	movs	r3, #0
9000b498:	6263      	str	r3, [r4, #36]	; 0x24
9000b49a:	e7b0      	b.n	9000b3fe <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b49c:	f7f6 f95c 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000b4a0:	e779      	b.n	9000b396 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b4a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b4a4:	4620      	mov	r0, r4
9000b4a6:	69e1      	ldr	r1, [r4, #28]
9000b4a8:	f7f6 f900 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b4ac:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b4ae:	6265      	str	r5, [r4, #36]	; 0x24
9000b4b0:	e7ad      	b.n	9000b40e <HAL_JPEG_IRQHandler+0x9e>
9000b4b2:	bf00      	nop

9000b4b4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b4b4:	2800      	cmp	r0, #0
9000b4b6:	d067      	beq.n	9000b588 <HAL_LTDC_Init+0xd4>
{
9000b4b8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b4ba:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000b4be:	4604      	mov	r4, r0
9000b4c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b4c4:	2b00      	cmp	r3, #0
9000b4c6:	d05a      	beq.n	9000b57e <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4c8:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4ca:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4cc:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4d0:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4d4:	4302      	orrs	r2, r0
9000b4d6:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b4d8:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4da:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b4dc:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b4de:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b4e2:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b4e4:	4929      	ldr	r1, [pc, #164]	; (9000b58c <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b4e6:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4e8:	6998      	ldr	r0, [r3, #24]
9000b4ea:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b4ec:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b4ee:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b4f0:	689a      	ldr	r2, [r3, #8]
9000b4f2:	400a      	ands	r2, r1
9000b4f4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b4f6:	689a      	ldr	r2, [r3, #8]
9000b4f8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b4fc:	69a0      	ldr	r0, [r4, #24]
9000b4fe:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b500:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b502:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000b504:	68da      	ldr	r2, [r3, #12]
9000b506:	400a      	ands	r2, r1
9000b508:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b50a:	68da      	ldr	r2, [r3, #12]
9000b50c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b510:	6a20      	ldr	r0, [r4, #32]
9000b512:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b514:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b516:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000b518:	691a      	ldr	r2, [r3, #16]
9000b51a:	400a      	ands	r2, r1
9000b51c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b51e:	691a      	ldr	r2, [r3, #16]
9000b520:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b524:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000b526:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b528:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b52a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000b52c:	695a      	ldr	r2, [r3, #20]
9000b52e:	400a      	ands	r2, r1
9000b530:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000b532:	695a      	ldr	r2, [r3, #20]
9000b534:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000b536:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b53a:	430a      	orrs	r2, r1
9000b53c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b53e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b540:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b544:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b548:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b54c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b54e:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000b550:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000b554:	432a      	orrs	r2, r5
9000b556:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b55a:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b55c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b560:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b562:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b564:	f042 0206 	orr.w	r2, r2, #6
9000b568:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b56a:	699a      	ldr	r2, [r3, #24]
9000b56c:	f042 0201 	orr.w	r2, r2, #1
9000b570:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b572:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b574:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b578:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000b57c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b57e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b582:	f7f7 fdcb 	bl	9000311c <HAL_LTDC_MspInit>
9000b586:	e79f      	b.n	9000b4c8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b588:	2001      	movs	r0, #1
}
9000b58a:	4770      	bx	lr
9000b58c:	f000f800 	.word	0xf000f800

9000b590 <HAL_LTDC_ErrorCallback>:
9000b590:	4770      	bx	lr
9000b592:	bf00      	nop

9000b594 <HAL_LTDC_ReloadEventCallback>:
9000b594:	4770      	bx	lr
9000b596:	bf00      	nop

9000b598 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b598:	6803      	ldr	r3, [r0, #0]
{
9000b59a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b59c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000b59e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000b5a0:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000b5a2:	076a      	lsls	r2, r5, #29
9000b5a4:	d501      	bpl.n	9000b5aa <HAL_LTDC_IRQHandler+0x12>
9000b5a6:	0771      	lsls	r1, r6, #29
9000b5a8:	d41d      	bmi.n	9000b5e6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000b5aa:	07aa      	lsls	r2, r5, #30
9000b5ac:	d501      	bpl.n	9000b5b2 <HAL_LTDC_IRQHandler+0x1a>
9000b5ae:	07b3      	lsls	r3, r6, #30
9000b5b0:	d42d      	bmi.n	9000b60e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000b5b2:	07e8      	lsls	r0, r5, #31
9000b5b4:	d501      	bpl.n	9000b5ba <HAL_LTDC_IRQHandler+0x22>
9000b5b6:	07f1      	lsls	r1, r6, #31
9000b5b8:	d440      	bmi.n	9000b63c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000b5ba:	072a      	lsls	r2, r5, #28
9000b5bc:	d501      	bpl.n	9000b5c2 <HAL_LTDC_IRQHandler+0x2a>
9000b5be:	0733      	lsls	r3, r6, #28
9000b5c0:	d400      	bmi.n	9000b5c4 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000b5c2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b5c4:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b5c6:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000b5c8:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000b5ca:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b5cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b5ce:	f022 0208 	bic.w	r2, r2, #8
9000b5d2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b5d4:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b5d6:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000b5d8:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b5dc:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b5e0:	f7ff ffd8 	bl	9000b594 <HAL_LTDC_ReloadEventCallback>
}
9000b5e4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000b5e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b5e8:	f022 0204 	bic.w	r2, r2, #4
9000b5ec:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000b5ee:	2204      	movs	r2, #4
9000b5f0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000b5f2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000b5f6:	f043 0301 	orr.w	r3, r3, #1
9000b5fa:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000b5fe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b600:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b604:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b608:	f7ff ffc2 	bl	9000b590 <HAL_LTDC_ErrorCallback>
9000b60c:	e7cd      	b.n	9000b5aa <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b60e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000b610:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b612:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b614:	f022 0202 	bic.w	r2, r2, #2
9000b618:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000b61a:	2202      	movs	r2, #2
9000b61c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b61e:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000b620:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000b624:	f043 0302 	orr.w	r3, r3, #2
9000b628:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000b62c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b62e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b632:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b636:	f7ff ffab 	bl	9000b590 <HAL_LTDC_ErrorCallback>
9000b63a:	e7ba      	b.n	9000b5b2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b63c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000b63e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b640:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b642:	f022 0201 	bic.w	r2, r2, #1
9000b646:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000b648:	2201      	movs	r2, #1
9000b64a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000b64c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000b64e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b652:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000b656:	f7f7 f8d7 	bl	90002808 <HAL_LTDC_LineEventCallback>
9000b65a:	e7ae      	b.n	9000b5ba <HAL_LTDC_IRQHandler+0x22>

9000b65c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b65c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000b660:	2b01      	cmp	r3, #1
9000b662:	f000 80c0 	beq.w	9000b7e6 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b666:	2302      	movs	r3, #2
{
9000b668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b66c:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b670:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b674:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000b678:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b67a:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b67e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b680:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b684:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b686:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000b68a:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b68c:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b690:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b692:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b696:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b69a:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000b7fc <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b69e:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b6a2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000b6a6:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b6aa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6b0:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6b2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6b6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b6b8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b6bc:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b6be:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b6c0:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6c4:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b6c6:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b6c8:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b6cc:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b6d0:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b6d2:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b6d4:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b6d8:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b6dc:	440b      	add	r3, r1
9000b6de:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b6e2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b6e6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b6ea:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b6ee:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b6f2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b6f6:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b6f8:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b6fc:	68ab      	ldr	r3, [r5, #8]
9000b6fe:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b702:	3301      	adds	r3, #1
9000b704:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b708:	4403      	add	r3, r0
9000b70a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b70e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b710:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b714:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b718:	f023 0307 	bic.w	r3, r3, #7
9000b71c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b720:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b724:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000b728:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b72a:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b72e:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b732:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000b736:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000b73a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000b73e:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000b742:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b746:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b74a:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b74e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000b752:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b756:	696b      	ldr	r3, [r5, #20]
9000b758:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b75c:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b760:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b762:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b766:	6a28      	ldr	r0, [r5, #32]
9000b768:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b76a:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b76e:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000b772:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000b776:	2300      	movs	r3, #0
9000b778:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000b77c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000b77e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b782:	bb59      	cbnz	r1, 9000b7dc <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000b784:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b786:	1abf      	subs	r7, r7, r2
9000b788:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000b78a:	fb03 f707 	mul.w	r7, r3, r7
9000b78e:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b792:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b794:	3707      	adds	r7, #7
9000b796:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b79a:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000b79e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000b7a2:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b7a6:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b7aa:	4b12      	ldr	r3, [pc, #72]	; (9000b7f4 <HAL_LTDC_ConfigLayer+0x198>)
9000b7ac:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000b7b0:	400b      	ands	r3, r1
9000b7b2:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b7b6:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b7ba:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b7bc:	f859 3006 	ldr.w	r3, [r9, r6]
9000b7c0:	4313      	orrs	r3, r2
9000b7c2:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b7c6:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b7c8:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000b7cc:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b7ce:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000b7d2:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000b7d6:	b003      	add	sp, #12
9000b7d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000b7dc:	3901      	subs	r1, #1
9000b7de:	2906      	cmp	r1, #6
9000b7e0:	d903      	bls.n	9000b7ea <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b7e2:	2301      	movs	r3, #1
9000b7e4:	e7cf      	b.n	9000b786 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000b7e6:	2002      	movs	r0, #2
}
9000b7e8:	4770      	bx	lr
9000b7ea:	4b03      	ldr	r3, [pc, #12]	; (9000b7f8 <HAL_LTDC_ConfigLayer+0x19c>)
9000b7ec:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000b7f0:	e7c9      	b.n	9000b786 <HAL_LTDC_ConfigLayer+0x12a>
9000b7f2:	bf00      	nop
9000b7f4:	fffff800 	.word	0xfffff800
9000b7f8:	9002b420 	.word	0x9002b420
9000b7fc:	fffff8f8 	.word	0xfffff8f8

9000b800 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b800:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000b804:	2a01      	cmp	r2, #1
9000b806:	d019      	beq.n	9000b83c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b808:	6802      	ldr	r2, [r0, #0]
9000b80a:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b80c:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b80e:	f04f 0c00 	mov.w	ip, #0
{
9000b812:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b814:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b818:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b81a:	4c09      	ldr	r4, [pc, #36]	; (9000b840 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b81c:	f020 0001 	bic.w	r0, r0, #1
9000b820:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b822:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b824:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b826:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000b828:	4301      	orrs	r1, r0
9000b82a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b82c:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000b830:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b832:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000b836:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b83a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b83c:	2002      	movs	r0, #2
}
9000b83e:	4770      	bx	lr
9000b840:	50001000 	.word	0x50001000

9000b844 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b844:	b538      	push	{r3, r4, r5, lr}
9000b846:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b848:	f7fd f984 	bl	90008b54 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b84c:	2c00      	cmp	r4, #0
9000b84e:	d05a      	beq.n	9000b906 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b850:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b852:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b854:	2100      	movs	r1, #0
9000b856:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b858:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000b85c:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b860:	68da      	ldr	r2, [r3, #12]
9000b862:	f022 0201 	bic.w	r2, r2, #1
9000b866:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b868:	e005      	b.n	9000b876 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b86a:	f7fd f973 	bl	90008b54 <HAL_GetTick>
9000b86e:	1b43      	subs	r3, r0, r5
9000b870:	2b05      	cmp	r3, #5
9000b872:	d841      	bhi.n	9000b8f8 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b874:	6823      	ldr	r3, [r4, #0]
9000b876:	68da      	ldr	r2, [r3, #12]
9000b878:	07d2      	lsls	r2, r2, #31
9000b87a:	d4f6      	bmi.n	9000b86a <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b87c:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b880:	69e0      	ldr	r0, [r4, #28]
9000b882:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b884:	68e1      	ldr	r1, [r4, #12]
9000b886:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b888:	4302      	orrs	r2, r0
9000b88a:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b88c:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b88e:	4302      	orrs	r2, r0
9000b890:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b892:	4302      	orrs	r2, r0
9000b894:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000b896:	4302      	orrs	r2, r0
9000b898:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000b89a:	4302      	orrs	r2, r0
9000b89c:	68a0      	ldr	r0, [r4, #8]
9000b89e:	4302      	orrs	r2, r0
9000b8a0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000b8a2:	3801      	subs	r0, #1
9000b8a4:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8a8:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b8aa:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8ac:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b8b0:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b8b2:	d103      	bne.n	9000b8bc <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b8b4:	691a      	ldr	r2, [r3, #16]
9000b8b6:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000b8ba:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b8bc:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b8be:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000b8c0:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b8c2:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b8c4:	db30      	blt.n	9000b928 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b8c6:	b292      	uxth	r2, r2
9000b8c8:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b8ca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000b8cc:	2a00      	cmp	r2, #0
9000b8ce:	db1c      	blt.n	9000b90a <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b8d0:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b8d2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b8d6:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b8da:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b8dc:	d021      	beq.n	9000b922 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b8de:	b2c0      	uxtb	r0, r0
9000b8e0:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b8e2:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b8e4:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b8e6:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000b8e8:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b8ea:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b8ec:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b8ee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000b8f2:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000b8f6:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b8f8:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b8fa:	2303      	movs	r3, #3
      return HAL_ERROR;
9000b8fc:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b8fe:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b900:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000b904:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000b906:	2001      	movs	r0, #1
}
9000b908:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b90a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b90c:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b90e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b912:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000b916:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b918:	6a19      	ldr	r1, [r3, #32]
9000b91a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b91e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b920:	d1dd      	bne.n	9000b8de <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b922:	2200      	movs	r2, #0
9000b924:	629a      	str	r2, [r3, #40]	; 0x28
9000b926:	e7dc      	b.n	9000b8e2 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b928:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b92a:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b92c:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b930:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b932:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b934:	621a      	str	r2, [r3, #32]
9000b936:	e7c8      	b.n	9000b8ca <HAL_MDMA_Init+0x86>

9000b938 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b938:	b1f8      	cbz	r0, 9000b97a <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b93a:	6802      	ldr	r2, [r0, #0]
9000b93c:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b93e:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b940:	68d0      	ldr	r0, [r2, #12]
{
9000b942:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b944:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b948:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b94a:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b94c:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b94e:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b950:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b952:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b954:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b956:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b958:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b95a:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000b95c:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000b95e:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000b960:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b962:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b964:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000b966:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b96a:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000b96e:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b972:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000b974:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000b978:	4770      	bx	lr
    return HAL_ERROR;
9000b97a:	2001      	movs	r0, #1
}
9000b97c:	4770      	bx	lr
9000b97e:	bf00      	nop

9000b980 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b980:	b310      	cbz	r0, 9000b9c8 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000b982:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b984:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000b988:	2801      	cmp	r0, #1
9000b98a:	d01f      	beq.n	9000b9cc <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000b98c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b98e:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b992:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000b996:	45f4      	cmp	ip, lr
9000b998:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b99c:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b9a0:	d004      	beq.n	9000b9ac <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000b9a2:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b9a4:	2200      	movs	r2, #0
9000b9a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000b9aa:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b9ac:	681d      	ldr	r5, [r3, #0]
9000b9ae:	692c      	ldr	r4, [r5, #16]
9000b9b0:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000b9b4:	d1f6      	bne.n	9000b9a4 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b9b6:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000b9b8:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b9ba:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000b9bc:	b941      	cbnz	r1, 9000b9d0 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b9be:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000b9c2:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b9c4:	612a      	str	r2, [r5, #16]
9000b9c6:	e7ed      	b.n	9000b9a4 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b9c8:	2001      	movs	r0, #1
9000b9ca:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b9cc:	2002      	movs	r0, #2
}
9000b9ce:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b9d0:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000b9d4:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b9d6:	612a      	str	r2, [r5, #16]
9000b9d8:	e7e4      	b.n	9000b9a4 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000b9da:	bf00      	nop

9000b9dc <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b9dc:	2800      	cmp	r0, #0
9000b9de:	d06f      	beq.n	9000bac0 <HAL_MDMA_Start_IT+0xe4>
9000b9e0:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000b9e2:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000b9e6:	2801      	cmp	r0, #1
9000b9e8:	d072      	beq.n	9000bad0 <HAL_MDMA_Start_IT+0xf4>
9000b9ea:	2001      	movs	r0, #1
9000b9ec:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b9f0:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000b9f4:	2801      	cmp	r0, #1
9000b9f6:	d004      	beq.n	9000ba02 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000b9f8:	2300      	movs	r3, #0
    return HAL_BUSY;
9000b9fa:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000b9fc:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000ba00:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ba02:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ba04:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ba08:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000ba0c:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba0e:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ba10:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ba14:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000ba18:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba1c:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ba20:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ba24:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000ba28:	68e5      	ldr	r5, [r4, #12]
9000ba2a:	f025 0501 	bic.w	r5, r5, #1
9000ba2e:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ba30:	6965      	ldr	r5, [r4, #20]
9000ba32:	ea00 0005 	and.w	r0, r0, r5
9000ba36:	ea40 0003 	orr.w	r0, r0, r3
9000ba3a:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ba3c:	6963      	ldr	r3, [r4, #20]
9000ba3e:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000ba42:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000ba46:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000ba48:	f04f 031f 	mov.w	r3, #31
9000ba4c:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000ba4e:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000ba50:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000ba52:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba54:	bf0c      	ite	eq
9000ba56:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ba5a:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ba5e:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000ba62:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ba66:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000ba68:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba6a:	bf0c      	ite	eq
9000ba6c:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000ba70:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000ba74:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000ba76:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000ba7a:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000ba7c:	68e3      	ldr	r3, [r4, #12]
9000ba7e:	f043 0306 	orr.w	r3, r3, #6
9000ba82:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000ba84:	b11a      	cbz	r2, 9000ba8e <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000ba86:	68e3      	ldr	r3, [r4, #12]
9000ba88:	f043 0310 	orr.w	r3, r3, #16
9000ba8c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ba8e:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000ba92:	b11b      	cbz	r3, 9000ba9c <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000ba94:	68e3      	ldr	r3, [r4, #12]
9000ba96:	f043 0308 	orr.w	r3, r3, #8
9000ba9a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000ba9c:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000baa0:	b11b      	cbz	r3, 9000baaa <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000baa2:	68e3      	ldr	r3, [r4, #12]
9000baa4:	f043 0320 	orr.w	r3, r3, #32
9000baa8:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000baaa:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000baac:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000bab0:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bab4:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000bab8:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000baba:	d003      	beq.n	9000bac4 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000babc:	2000      	movs	r0, #0
}
9000babe:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000bac0:	2001      	movs	r0, #1
9000bac2:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000bac4:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000bac6:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000bac8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000bacc:	60e3      	str	r3, [r4, #12]
}
9000bace:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000bad0:	2002      	movs	r0, #2
}
9000bad2:	4770      	bx	lr

9000bad4 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000bad4:	4603      	mov	r3, r0
9000bad6:	b188      	cbz	r0, 9000bafc <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000bad8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000badc:	2a02      	cmp	r2, #2
9000bade:	d003      	beq.n	9000bae8 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bae0:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000bae2:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bae4:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000bae6:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000bae8:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000baea:	2104      	movs	r1, #4
  return HAL_OK;
9000baec:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000baee:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000baf2:	68d3      	ldr	r3, [r2, #12]
9000baf4:	f023 0301 	bic.w	r3, r3, #1
9000baf8:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000bafa:	4770      	bx	lr
    return HAL_ERROR;
9000bafc:	2001      	movs	r0, #1
}
9000bafe:	4770      	bx	lr

9000bb00 <HAL_MDMA_IRQHandler>:
{
9000bb00:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000bb02:	2300      	movs	r3, #0
{
9000bb04:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb06:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000bb0a:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000bb0c:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb0e:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bb10:	4b57      	ldr	r3, [pc, #348]	; (9000bc70 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb12:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb14:	4a57      	ldr	r2, [pc, #348]	; (9000bc74 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000bb16:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bb18:	6823      	ldr	r3, [r4, #0]
9000bb1a:	441a      	add	r2, r3
9000bb1c:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000bb20:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bb24:	4202      	tst	r2, r0
9000bb26:	f000 80a0 	beq.w	9000bc6a <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000bb2a:	681a      	ldr	r2, [r3, #0]
9000bb2c:	07d1      	lsls	r1, r2, #31
9000bb2e:	d529      	bpl.n	9000bb84 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000bb30:	68da      	ldr	r2, [r3, #12]
9000bb32:	0792      	lsls	r2, r2, #30
9000bb34:	d526      	bpl.n	9000bb84 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000bb36:	68da      	ldr	r2, [r3, #12]
9000bb38:	f022 0202 	bic.w	r2, r2, #2
9000bb3c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000bb3e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb40:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000bb42:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bb44:	bf54      	ite	pl
9000bb46:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000bb4a:	f041 0102 	orrmi.w	r1, r1, #2
9000bb4e:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000bb50:	0591      	lsls	r1, r2, #22
9000bb52:	d503      	bpl.n	9000bb5c <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000bb54:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bb56:	f041 0104 	orr.w	r1, r1, #4
9000bb5a:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000bb5c:	05d0      	lsls	r0, r2, #23
9000bb5e:	d503      	bpl.n	9000bb68 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000bb60:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bb62:	f041 0108 	orr.w	r1, r1, #8
9000bb66:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000bb68:	0551      	lsls	r1, r2, #21
9000bb6a:	d503      	bpl.n	9000bb74 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000bb6c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bb6e:	f041 0110 	orr.w	r1, r1, #16
9000bb72:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000bb74:	0510      	lsls	r0, r2, #20
9000bb76:	d503      	bpl.n	9000bb80 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000bb78:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000bb7a:	f042 0220 	orr.w	r2, r2, #32
9000bb7e:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000bb80:	2201      	movs	r2, #1
9000bb82:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000bb84:	681a      	ldr	r2, [r3, #0]
9000bb86:	06d1      	lsls	r1, r2, #27
9000bb88:	d509      	bpl.n	9000bb9e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000bb8a:	68da      	ldr	r2, [r3, #12]
9000bb8c:	0692      	lsls	r2, r2, #26
9000bb8e:	d506      	bpl.n	9000bb9e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bb90:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000bb92:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000bb94:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000bb96:	b112      	cbz	r2, 9000bb9e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000bb98:	4620      	mov	r0, r4
9000bb9a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000bb9c:	6823      	ldr	r3, [r4, #0]
9000bb9e:	681a      	ldr	r2, [r3, #0]
9000bba0:	0710      	lsls	r0, r2, #28
9000bba2:	d509      	bpl.n	9000bbb8 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000bba4:	68da      	ldr	r2, [r3, #12]
9000bba6:	06d1      	lsls	r1, r2, #27
9000bba8:	d506      	bpl.n	9000bbb8 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bbaa:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000bbac:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000bbae:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000bbb0:	b112      	cbz	r2, 9000bbb8 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000bbb2:	4620      	mov	r0, r4
9000bbb4:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000bbb6:	6823      	ldr	r3, [r4, #0]
9000bbb8:	681a      	ldr	r2, [r3, #0]
9000bbba:	0752      	lsls	r2, r2, #29
9000bbbc:	d509      	bpl.n	9000bbd2 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000bbbe:	68da      	ldr	r2, [r3, #12]
9000bbc0:	0710      	lsls	r0, r2, #28
9000bbc2:	d506      	bpl.n	9000bbd2 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bbc4:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bbc6:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000bbc8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bbca:	b112      	cbz	r2, 9000bbd2 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000bbcc:	4620      	mov	r0, r4
9000bbce:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000bbd0:	6823      	ldr	r3, [r4, #0]
9000bbd2:	681a      	ldr	r2, [r3, #0]
9000bbd4:	0791      	lsls	r1, r2, #30
9000bbd6:	d516      	bpl.n	9000bc06 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000bbd8:	68da      	ldr	r2, [r3, #12]
9000bbda:	0752      	lsls	r2, r2, #29
9000bbdc:	d513      	bpl.n	9000bc06 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000bbde:	68da      	ldr	r2, [r3, #12]
9000bbe0:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000bbe4:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000bbe6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000bbea:	2a04      	cmp	r2, #4
9000bbec:	d034      	beq.n	9000bc58 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bbee:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000bbf0:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000bbf2:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000bbf4:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000bbf6:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000bbf8:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000bbfc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000bc00:	b10b      	cbz	r3, 9000bc06 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000bc02:	4620      	mov	r0, r4
9000bc04:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000bc06:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000bc08:	2b00      	cmp	r3, #0
9000bc0a:	d02e      	beq.n	9000bc6a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000bc0c:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bc0e:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc10:	4b19      	ldr	r3, [pc, #100]	; (9000bc78 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bc12:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc16:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000bc1a:	68cb      	ldr	r3, [r1, #12]
9000bc1c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bc20:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000bc22:	60cb      	str	r3, [r1, #12]
9000bc24:	e002      	b.n	9000bc2c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000bc26:	68cb      	ldr	r3, [r1, #12]
9000bc28:	07d8      	lsls	r0, r3, #31
9000bc2a:	d504      	bpl.n	9000bc36 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000bc2c:	9b01      	ldr	r3, [sp, #4]
9000bc2e:	3301      	adds	r3, #1
9000bc30:	4293      	cmp	r3, r2
9000bc32:	9301      	str	r3, [sp, #4]
9000bc34:	d9f7      	bls.n	9000bc26 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000bc36:	2300      	movs	r3, #0
9000bc38:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bc3c:	68cb      	ldr	r3, [r1, #12]
9000bc3e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bc40:	bf4c      	ite	mi
9000bc42:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000bc44:	2301      	movpl	r3, #1
9000bc46:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000bc4a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000bc4c:	b16b      	cbz	r3, 9000bc6a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000bc4e:	4620      	mov	r0, r4
}
9000bc50:	b003      	add	sp, #12
9000bc52:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000bc56:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000bc58:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000bc5a:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000bc5c:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000bc5e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000bc62:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000bc66:	2b00      	cmp	r3, #0
9000bc68:	d1f1      	bne.n	9000bc4e <HAL_MDMA_IRQHandler+0x14e>
}
9000bc6a:	b003      	add	sp, #12
9000bc6c:	bd30      	pop	{r4, r5, pc}
9000bc6e:	bf00      	nop
9000bc70:	2400006c 	.word	0x2400006c
9000bc74:	adffffc0 	.word	0xadffffc0
9000bc78:	1b4e81b5 	.word	0x1b4e81b5

9000bc7c <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000bc7c:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bc7e:	4c10      	ldr	r4, [pc, #64]	; (9000bcc0 <HAL_PWREx_ConfigSupply+0x44>)
9000bc80:	68e3      	ldr	r3, [r4, #12]
9000bc82:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bc86:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000bc88:	d105      	bne.n	9000bc96 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bc8a:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000bc8e:	1a18      	subs	r0, r3, r0
9000bc90:	bf18      	it	ne
9000bc92:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000bc94:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000bc96:	f023 0307 	bic.w	r3, r3, #7
9000bc9a:	4303      	orrs	r3, r0
9000bc9c:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000bc9e:	f7fc ff59 	bl	90008b54 <HAL_GetTick>
9000bca2:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bca4:	e005      	b.n	9000bcb2 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000bca6:	f7fc ff55 	bl	90008b54 <HAL_GetTick>
9000bcaa:	1b40      	subs	r0, r0, r5
9000bcac:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000bcb0:	d804      	bhi.n	9000bcbc <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bcb2:	6863      	ldr	r3, [r4, #4]
9000bcb4:	049b      	lsls	r3, r3, #18
9000bcb6:	d5f6      	bpl.n	9000bca6 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000bcb8:	2000      	movs	r0, #0
}
9000bcba:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000bcbc:	2001      	movs	r0, #1
}
9000bcbe:	bd38      	pop	{r3, r4, r5, pc}
9000bcc0:	58024800 	.word	0x58024800

9000bcc4 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bcc4:	4b3b      	ldr	r3, [pc, #236]	; (9000bdb4 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000bcc6:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bcc8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bcca:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bccc:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000bcce:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bcd2:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bcd4:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bcd8:	d038      	beq.n	9000bd4c <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bcda:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bcde:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bce2:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bce6:	fb05 f101 	mul.w	r1, r5, r1
9000bcea:	2a01      	cmp	r2, #1
9000bcec:	ee07 1a90 	vmov	s15, r1
9000bcf0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000bcf4:	d002      	beq.n	9000bcfc <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000bcf6:	2a02      	cmp	r2, #2
9000bcf8:	d04e      	beq.n	9000bd98 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000bcfa:	b34a      	cbz	r2, 9000bd50 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bcfc:	ee07 0a90 	vmov	s15, r0
9000bd00:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000bdb8 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000bd04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bd08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000bd0a:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000bd0e:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000bdbc <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000bd12:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bd16:	ee07 3a90 	vmov	s15, r3
9000bd1a:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000bd1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bd22:	eee7 7a25 	vfma.f32	s15, s14, s11
9000bd26:	ee77 7a86 	vadd.f32	s15, s15, s12
9000bd2a:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bd2e:	4b21      	ldr	r3, [pc, #132]	; (9000bdb4 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000bd30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000bd32:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bd36:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bd38:	ee07 3a90 	vmov	s15, r3
9000bd3c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000bd40:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000bd44:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000bd48:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000bd4c:	bc30      	pop	{r4, r5}
9000bd4e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bd50:	681a      	ldr	r2, [r3, #0]
9000bd52:	0692      	lsls	r2, r2, #26
9000bd54:	d527      	bpl.n	9000bda6 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd56:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd58:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd5c:	4a18      	ldr	r2, [pc, #96]	; (9000bdc0 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd5e:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000bd62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd64:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bd6c:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000bdbc <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000bd70:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bd74:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd76:	ee06 3a90 	vmov	s13, r3
9000bd7a:	ee06 2a10 	vmov	s12, r2
9000bd7e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000bd82:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bd86:	eee7 6a05 	vfma.f32	s13, s14, s10
9000bd8a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000bd8e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000bd92:	ee66 6a87 	vmul.f32	s13, s13, s14
9000bd96:	e7ca      	b.n	9000bd2e <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bd98:	ee07 0a90 	vmov	s15, r0
9000bd9c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000bdc4 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000bda0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bda4:	e7b0      	b.n	9000bd08 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bda6:	ee07 0a90 	vmov	s15, r0
9000bdaa:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000bdc8 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000bdae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bdb2:	e7a9      	b.n	9000bd08 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000bdb4:	58024400 	.word	0x58024400
9000bdb8:	4a742400 	.word	0x4a742400
9000bdbc:	39000000 	.word	0x39000000
9000bdc0:	03d09000 	.word	0x03d09000
9000bdc4:	4bbebc20 	.word	0x4bbebc20
9000bdc8:	4c742400 	.word	0x4c742400

9000bdcc <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000bdcc:	2800      	cmp	r0, #0
9000bdce:	f000 81e8 	beq.w	9000c1a2 <HAL_RCC_OscConfig+0x3d6>
{
9000bdd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000bdd4:	6803      	ldr	r3, [r0, #0]
9000bdd6:	4604      	mov	r4, r0
9000bdd8:	07d9      	lsls	r1, r3, #31
9000bdda:	d52e      	bpl.n	9000be3a <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bddc:	49a4      	ldr	r1, [pc, #656]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bdde:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bde0:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bde2:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bde6:	2a10      	cmp	r2, #16
9000bde8:	f000 8107 	beq.w	9000bffa <HAL_RCC_OscConfig+0x22e>
9000bdec:	2a18      	cmp	r2, #24
9000bdee:	f000 80ff 	beq.w	9000bff0 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bdf2:	6863      	ldr	r3, [r4, #4]
9000bdf4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000bdf8:	f000 812a 	beq.w	9000c050 <HAL_RCC_OscConfig+0x284>
9000bdfc:	2b00      	cmp	r3, #0
9000bdfe:	f000 8168 	beq.w	9000c0d2 <HAL_RCC_OscConfig+0x306>
9000be02:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000be06:	4b9a      	ldr	r3, [pc, #616]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000be08:	681a      	ldr	r2, [r3, #0]
9000be0a:	f000 8289 	beq.w	9000c320 <HAL_RCC_OscConfig+0x554>
9000be0e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000be12:	601a      	str	r2, [r3, #0]
9000be14:	681a      	ldr	r2, [r3, #0]
9000be16:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000be1a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000be1c:	f7fc fe9a 	bl	90008b54 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be20:	4e93      	ldr	r6, [pc, #588]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000be22:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be24:	e005      	b.n	9000be32 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000be26:	f7fc fe95 	bl	90008b54 <HAL_GetTick>
9000be2a:	1b40      	subs	r0, r0, r5
9000be2c:	2864      	cmp	r0, #100	; 0x64
9000be2e:	f200 814e 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000be32:	6833      	ldr	r3, [r6, #0]
9000be34:	039b      	lsls	r3, r3, #14
9000be36:	d5f6      	bpl.n	9000be26 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000be38:	6823      	ldr	r3, [r4, #0]
9000be3a:	079d      	lsls	r5, r3, #30
9000be3c:	f100 808a 	bmi.w	9000bf54 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000be40:	06d9      	lsls	r1, r3, #27
9000be42:	d533      	bpl.n	9000beac <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be44:	4a8a      	ldr	r2, [pc, #552]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000be46:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000be48:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000be4a:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000be4e:	2b08      	cmp	r3, #8
9000be50:	f000 80e3 	beq.w	9000c01a <HAL_RCC_OscConfig+0x24e>
9000be54:	2b18      	cmp	r3, #24
9000be56:	f000 80db 	beq.w	9000c010 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000be5a:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000be5c:	4d84      	ldr	r5, [pc, #528]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000be5e:	2b00      	cmp	r3, #0
9000be60:	f000 816f 	beq.w	9000c142 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000be64:	682b      	ldr	r3, [r5, #0]
9000be66:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000be6a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be6c:	f7fc fe72 	bl	90008b54 <HAL_GetTick>
9000be70:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000be72:	e005      	b.n	9000be80 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000be74:	f7fc fe6e 	bl	90008b54 <HAL_GetTick>
9000be78:	1b80      	subs	r0, r0, r6
9000be7a:	2802      	cmp	r0, #2
9000be7c:	f200 8127 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000be80:	682b      	ldr	r3, [r5, #0]
9000be82:	05db      	lsls	r3, r3, #23
9000be84:	d5f6      	bpl.n	9000be74 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000be86:	f7fc fe6b 	bl	90008b60 <HAL_GetREVID>
9000be8a:	f241 0303 	movw	r3, #4099	; 0x1003
9000be8e:	4298      	cmp	r0, r3
9000be90:	f200 826d 	bhi.w	9000c36e <HAL_RCC_OscConfig+0x5a2>
9000be94:	6a22      	ldr	r2, [r4, #32]
9000be96:	686b      	ldr	r3, [r5, #4]
9000be98:	2a20      	cmp	r2, #32
9000be9a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000be9e:	bf0c      	ite	eq
9000bea0:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000bea4:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000bea8:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000beaa:	6823      	ldr	r3, [r4, #0]
9000beac:	071d      	lsls	r5, r3, #28
9000beae:	d516      	bpl.n	9000bede <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000beb0:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000beb2:	4d6f      	ldr	r5, [pc, #444]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000beb4:	2b00      	cmp	r3, #0
9000beb6:	f000 8122 	beq.w	9000c0fe <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000beba:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bebc:	f043 0301 	orr.w	r3, r3, #1
9000bec0:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000bec2:	f7fc fe47 	bl	90008b54 <HAL_GetTick>
9000bec6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bec8:	e005      	b.n	9000bed6 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000beca:	f7fc fe43 	bl	90008b54 <HAL_GetTick>
9000bece:	1b80      	subs	r0, r0, r6
9000bed0:	2802      	cmp	r0, #2
9000bed2:	f200 80fc 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bed6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bed8:	0798      	lsls	r0, r3, #30
9000beda:	d5f6      	bpl.n	9000beca <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000bedc:	6823      	ldr	r3, [r4, #0]
9000bede:	069a      	lsls	r2, r3, #26
9000bee0:	d516      	bpl.n	9000bf10 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bee2:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000bee4:	4d62      	ldr	r5, [pc, #392]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bee6:	2b00      	cmp	r3, #0
9000bee8:	f000 811a 	beq.w	9000c120 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000beec:	682b      	ldr	r3, [r5, #0]
9000beee:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000bef2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bef4:	f7fc fe2e 	bl	90008b54 <HAL_GetTick>
9000bef8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000befa:	e005      	b.n	9000bf08 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000befc:	f7fc fe2a 	bl	90008b54 <HAL_GetTick>
9000bf00:	1b80      	subs	r0, r0, r6
9000bf02:	2802      	cmp	r0, #2
9000bf04:	f200 80e3 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bf08:	682b      	ldr	r3, [r5, #0]
9000bf0a:	049f      	lsls	r7, r3, #18
9000bf0c:	d5f6      	bpl.n	9000befc <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000bf0e:	6823      	ldr	r3, [r4, #0]
9000bf10:	0759      	lsls	r1, r3, #29
9000bf12:	f100 80a3 	bmi.w	9000c05c <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000bf16:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000bf18:	b1d0      	cbz	r0, 9000bf50 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000bf1a:	4d55      	ldr	r5, [pc, #340]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bf1c:	692b      	ldr	r3, [r5, #16]
9000bf1e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000bf22:	2b18      	cmp	r3, #24
9000bf24:	f000 81ae 	beq.w	9000c284 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000bf28:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bf2a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000bf2c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000bf30:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bf32:	f000 8142 	beq.w	9000c1ba <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000bf36:	f7fc fe0d 	bl	90008b54 <HAL_GetTick>
9000bf3a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bf3c:	e005      	b.n	9000bf4a <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bf3e:	f7fc fe09 	bl	90008b54 <HAL_GetTick>
9000bf42:	1b00      	subs	r0, r0, r4
9000bf44:	2802      	cmp	r0, #2
9000bf46:	f200 80c2 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bf4a:	682b      	ldr	r3, [r5, #0]
9000bf4c:	019b      	lsls	r3, r3, #6
9000bf4e:	d4f6      	bmi.n	9000bf3e <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000bf50:	2000      	movs	r0, #0
}
9000bf52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bf54:	4a46      	ldr	r2, [pc, #280]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bf56:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bf58:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bf5a:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000bf5e:	d12d      	bne.n	9000bfbc <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bf60:	4b43      	ldr	r3, [pc, #268]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bf62:	68e2      	ldr	r2, [r4, #12]
9000bf64:	681b      	ldr	r3, [r3, #0]
9000bf66:	0759      	lsls	r1, r3, #29
9000bf68:	d501      	bpl.n	9000bf6e <HAL_RCC_OscConfig+0x1a2>
9000bf6a:	2a00      	cmp	r2, #0
9000bf6c:	d04e      	beq.n	9000c00c <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bf6e:	4d40      	ldr	r5, [pc, #256]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bf70:	682b      	ldr	r3, [r5, #0]
9000bf72:	f023 0319 	bic.w	r3, r3, #25
9000bf76:	4313      	orrs	r3, r2
9000bf78:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bf7a:	f7fc fdeb 	bl	90008b54 <HAL_GetTick>
9000bf7e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf80:	e005      	b.n	9000bf8e <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bf82:	f7fc fde7 	bl	90008b54 <HAL_GetTick>
9000bf86:	1b80      	subs	r0, r0, r6
9000bf88:	2802      	cmp	r0, #2
9000bf8a:	f200 80a0 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bf8e:	682b      	ldr	r3, [r5, #0]
9000bf90:	075b      	lsls	r3, r3, #29
9000bf92:	d5f6      	bpl.n	9000bf82 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000bf94:	f7fc fde4 	bl	90008b60 <HAL_GetREVID>
9000bf98:	f241 0303 	movw	r3, #4099	; 0x1003
9000bf9c:	4298      	cmp	r0, r3
9000bf9e:	f200 80f7 	bhi.w	9000c190 <HAL_RCC_OscConfig+0x3c4>
9000bfa2:	6922      	ldr	r2, [r4, #16]
9000bfa4:	686b      	ldr	r3, [r5, #4]
9000bfa6:	2a40      	cmp	r2, #64	; 0x40
9000bfa8:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000bfac:	bf0c      	ite	eq
9000bfae:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000bfb2:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000bfb6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bfb8:	6823      	ldr	r3, [r4, #0]
9000bfba:	e741      	b.n	9000be40 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bfbc:	2b18      	cmp	r3, #24
9000bfbe:	f000 80e3 	beq.w	9000c188 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfc2:	4d2b      	ldr	r5, [pc, #172]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bfc4:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfc6:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000bfc8:	2a00      	cmp	r2, #0
9000bfca:	f000 80cc 	beq.w	9000c166 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bfce:	f023 0319 	bic.w	r3, r3, #25
9000bfd2:	4313      	orrs	r3, r2
9000bfd4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bfd6:	f7fc fdbd 	bl	90008b54 <HAL_GetTick>
9000bfda:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bfdc:	e004      	b.n	9000bfe8 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bfde:	f7fc fdb9 	bl	90008b54 <HAL_GetTick>
9000bfe2:	1b80      	subs	r0, r0, r6
9000bfe4:	2802      	cmp	r0, #2
9000bfe6:	d872      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bfe8:	682b      	ldr	r3, [r5, #0]
9000bfea:	075f      	lsls	r7, r3, #29
9000bfec:	d5f7      	bpl.n	9000bfde <HAL_RCC_OscConfig+0x212>
9000bfee:	e7d1      	b.n	9000bf94 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bff0:	f001 0103 	and.w	r1, r1, #3
9000bff4:	2902      	cmp	r1, #2
9000bff6:	f47f aefc 	bne.w	9000bdf2 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000bffa:	4a1d      	ldr	r2, [pc, #116]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000bffc:	6812      	ldr	r2, [r2, #0]
9000bffe:	0392      	lsls	r2, r2, #14
9000c000:	f57f af1b 	bpl.w	9000be3a <HAL_RCC_OscConfig+0x6e>
9000c004:	6862      	ldr	r2, [r4, #4]
9000c006:	2a00      	cmp	r2, #0
9000c008:	f47f af17 	bne.w	9000be3a <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000c00c:	2001      	movs	r0, #1
}
9000c00e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c010:	f002 0203 	and.w	r2, r2, #3
9000c014:	2a01      	cmp	r2, #1
9000c016:	f47f af20 	bne.w	9000be5a <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000c01a:	4b15      	ldr	r3, [pc, #84]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000c01c:	681b      	ldr	r3, [r3, #0]
9000c01e:	05da      	lsls	r2, r3, #23
9000c020:	d502      	bpl.n	9000c028 <HAL_RCC_OscConfig+0x25c>
9000c022:	69e3      	ldr	r3, [r4, #28]
9000c024:	2b80      	cmp	r3, #128	; 0x80
9000c026:	d1f1      	bne.n	9000c00c <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c028:	f7fc fd9a 	bl	90008b60 <HAL_GetREVID>
9000c02c:	f241 0303 	movw	r3, #4099	; 0x1003
9000c030:	4298      	cmp	r0, r3
9000c032:	f200 80b8 	bhi.w	9000c1a6 <HAL_RCC_OscConfig+0x3da>
9000c036:	6a22      	ldr	r2, [r4, #32]
9000c038:	2a20      	cmp	r2, #32
9000c03a:	f000 81a7 	beq.w	9000c38c <HAL_RCC_OscConfig+0x5c0>
9000c03e:	490c      	ldr	r1, [pc, #48]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000c040:	684b      	ldr	r3, [r1, #4]
9000c042:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c046:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000c04a:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c04c:	6823      	ldr	r3, [r4, #0]
9000c04e:	e72d      	b.n	9000beac <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c050:	4a07      	ldr	r2, [pc, #28]	; (9000c070 <HAL_RCC_OscConfig+0x2a4>)
9000c052:	6813      	ldr	r3, [r2, #0]
9000c054:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c058:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c05a:	e6df      	b.n	9000be1c <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000c05c:	4d05      	ldr	r5, [pc, #20]	; (9000c074 <HAL_RCC_OscConfig+0x2a8>)
9000c05e:	682b      	ldr	r3, [r5, #0]
9000c060:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c064:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000c066:	f7fc fd75 	bl	90008b54 <HAL_GetTick>
9000c06a:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c06c:	e009      	b.n	9000c082 <HAL_RCC_OscConfig+0x2b6>
9000c06e:	bf00      	nop
9000c070:	58024400 	.word	0x58024400
9000c074:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c078:	f7fc fd6c 	bl	90008b54 <HAL_GetTick>
9000c07c:	1b80      	subs	r0, r0, r6
9000c07e:	2864      	cmp	r0, #100	; 0x64
9000c080:	d825      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c082:	682b      	ldr	r3, [r5, #0]
9000c084:	05da      	lsls	r2, r3, #23
9000c086:	d5f7      	bpl.n	9000c078 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c088:	68a3      	ldr	r3, [r4, #8]
9000c08a:	2b01      	cmp	r3, #1
9000c08c:	f000 8178 	beq.w	9000c380 <HAL_RCC_OscConfig+0x5b4>
9000c090:	2b00      	cmp	r3, #0
9000c092:	f000 8153 	beq.w	9000c33c <HAL_RCC_OscConfig+0x570>
9000c096:	2b05      	cmp	r3, #5
9000c098:	4ba5      	ldr	r3, [pc, #660]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
9000c09a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c09c:	f000 817f 	beq.w	9000c39e <HAL_RCC_OscConfig+0x5d2>
9000c0a0:	f022 0201 	bic.w	r2, r2, #1
9000c0a4:	671a      	str	r2, [r3, #112]	; 0x70
9000c0a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c0a8:	f022 0204 	bic.w	r2, r2, #4
9000c0ac:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c0ae:	f7fc fd51 	bl	90008b54 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0b2:	4e9f      	ldr	r6, [pc, #636]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c0b4:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000c0b8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0ba:	e004      	b.n	9000c0c6 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c0bc:	f7fc fd4a 	bl	90008b54 <HAL_GetTick>
9000c0c0:	1b40      	subs	r0, r0, r5
9000c0c2:	42b8      	cmp	r0, r7
9000c0c4:	d803      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0c6:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000c0c8:	079b      	lsls	r3, r3, #30
9000c0ca:	d5f7      	bpl.n	9000c0bc <HAL_RCC_OscConfig+0x2f0>
9000c0cc:	e723      	b.n	9000bf16 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000c0ce:	2003      	movs	r0, #3
}
9000c0d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c0d2:	4d97      	ldr	r5, [pc, #604]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
9000c0d4:	682b      	ldr	r3, [r5, #0]
9000c0d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000c0da:	602b      	str	r3, [r5, #0]
9000c0dc:	682b      	ldr	r3, [r5, #0]
9000c0de:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000c0e2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c0e4:	f7fc fd36 	bl	90008b54 <HAL_GetTick>
9000c0e8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c0ea:	e004      	b.n	9000c0f6 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c0ec:	f7fc fd32 	bl	90008b54 <HAL_GetTick>
9000c0f0:	1b80      	subs	r0, r0, r6
9000c0f2:	2864      	cmp	r0, #100	; 0x64
9000c0f4:	d8eb      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c0f6:	682b      	ldr	r3, [r5, #0]
9000c0f8:	039f      	lsls	r7, r3, #14
9000c0fa:	d4f7      	bmi.n	9000c0ec <HAL_RCC_OscConfig+0x320>
9000c0fc:	e69c      	b.n	9000be38 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000c0fe:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c100:	f023 0301 	bic.w	r3, r3, #1
9000c104:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000c106:	f7fc fd25 	bl	90008b54 <HAL_GetTick>
9000c10a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c10c:	e004      	b.n	9000c118 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c10e:	f7fc fd21 	bl	90008b54 <HAL_GetTick>
9000c112:	1b80      	subs	r0, r0, r6
9000c114:	2802      	cmp	r0, #2
9000c116:	d8da      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c118:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c11a:	0799      	lsls	r1, r3, #30
9000c11c:	d4f7      	bmi.n	9000c10e <HAL_RCC_OscConfig+0x342>
9000c11e:	e6dd      	b.n	9000bedc <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000c120:	682b      	ldr	r3, [r5, #0]
9000c122:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c126:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c128:	f7fc fd14 	bl	90008b54 <HAL_GetTick>
9000c12c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c12e:	e004      	b.n	9000c13a <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c130:	f7fc fd10 	bl	90008b54 <HAL_GetTick>
9000c134:	1b80      	subs	r0, r0, r6
9000c136:	2802      	cmp	r0, #2
9000c138:	d8c9      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c13a:	682b      	ldr	r3, [r5, #0]
9000c13c:	0498      	lsls	r0, r3, #18
9000c13e:	d4f7      	bmi.n	9000c130 <HAL_RCC_OscConfig+0x364>
9000c140:	e6e5      	b.n	9000bf0e <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000c142:	682b      	ldr	r3, [r5, #0]
9000c144:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c148:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c14a:	f7fc fd03 	bl	90008b54 <HAL_GetTick>
9000c14e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c150:	e004      	b.n	9000c15c <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c152:	f7fc fcff 	bl	90008b54 <HAL_GetTick>
9000c156:	1b80      	subs	r0, r0, r6
9000c158:	2802      	cmp	r0, #2
9000c15a:	d8b8      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c15c:	682b      	ldr	r3, [r5, #0]
9000c15e:	05df      	lsls	r7, r3, #23
9000c160:	d4f7      	bmi.n	9000c152 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c162:	6823      	ldr	r3, [r4, #0]
9000c164:	e6a2      	b.n	9000beac <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000c166:	f023 0301 	bic.w	r3, r3, #1
9000c16a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c16c:	f7fc fcf2 	bl	90008b54 <HAL_GetTick>
9000c170:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c172:	e004      	b.n	9000c17e <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c174:	f7fc fcee 	bl	90008b54 <HAL_GetTick>
9000c178:	1b80      	subs	r0, r0, r6
9000c17a:	2802      	cmp	r0, #2
9000c17c:	d8a7      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c17e:	682b      	ldr	r3, [r5, #0]
9000c180:	0758      	lsls	r0, r3, #29
9000c182:	d4f7      	bmi.n	9000c174 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c184:	6823      	ldr	r3, [r4, #0]
9000c186:	e65b      	b.n	9000be40 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c188:	0790      	lsls	r0, r2, #30
9000c18a:	f47f af1a 	bne.w	9000bfc2 <HAL_RCC_OscConfig+0x1f6>
9000c18e:	e6e7      	b.n	9000bf60 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c190:	686b      	ldr	r3, [r5, #4]
9000c192:	6922      	ldr	r2, [r4, #16]
9000c194:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000c198:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c19c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c19e:	6823      	ldr	r3, [r4, #0]
9000c1a0:	e64e      	b.n	9000be40 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000c1a2:	2001      	movs	r0, #1
}
9000c1a4:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c1a6:	4a62      	ldr	r2, [pc, #392]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
9000c1a8:	6a21      	ldr	r1, [r4, #32]
9000c1aa:	68d3      	ldr	r3, [r2, #12]
9000c1ac:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c1b0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c1b4:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c1b6:	6823      	ldr	r3, [r4, #0]
9000c1b8:	e678      	b.n	9000beac <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000c1ba:	f7fc fccb 	bl	90008b54 <HAL_GetTick>
9000c1be:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c1c0:	e004      	b.n	9000c1cc <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c1c2:	f7fc fcc7 	bl	90008b54 <HAL_GetTick>
9000c1c6:	1b80      	subs	r0, r0, r6
9000c1c8:	2802      	cmp	r0, #2
9000c1ca:	d880      	bhi.n	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c1cc:	682b      	ldr	r3, [r5, #0]
9000c1ce:	0199      	lsls	r1, r3, #6
9000c1d0:	d4f7      	bmi.n	9000c1c2 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c1d2:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000c1d4:	4b57      	ldr	r3, [pc, #348]	; (9000c334 <HAL_RCC_OscConfig+0x568>)
9000c1d6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c1d8:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c1da:	4957      	ldr	r1, [pc, #348]	; (9000c338 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c1dc:	4e54      	ldr	r6, [pc, #336]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c1de:	4313      	orrs	r3, r2
9000c1e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c1e2:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000c1e6:	62ab      	str	r3, [r5, #40]	; 0x28
9000c1e8:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000c1ec:	3b01      	subs	r3, #1
9000c1ee:	3a01      	subs	r2, #1
9000c1f0:	025b      	lsls	r3, r3, #9
9000c1f2:	0412      	lsls	r2, r2, #16
9000c1f4:	b29b      	uxth	r3, r3
9000c1f6:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c1fa:	4313      	orrs	r3, r2
9000c1fc:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000c1fe:	3a01      	subs	r2, #1
9000c200:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c204:	4313      	orrs	r3, r2
9000c206:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000c208:	3a01      	subs	r2, #1
9000c20a:	0612      	lsls	r2, r2, #24
9000c20c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c210:	4313      	orrs	r3, r2
9000c212:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000c214:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c216:	f023 0301 	bic.w	r3, r3, #1
9000c21a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c21c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000c21e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000c220:	4011      	ands	r1, r2
9000c222:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000c226:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000c228:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c22a:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000c22c:	f023 030c 	bic.w	r3, r3, #12
9000c230:	4313      	orrs	r3, r2
9000c232:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000c234:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c236:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000c238:	f023 0302 	bic.w	r3, r3, #2
9000c23c:	4313      	orrs	r3, r2
9000c23e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000c240:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c242:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c246:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c248:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c24a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000c24e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000c250:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c252:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000c256:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000c258:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c25a:	f043 0301 	orr.w	r3, r3, #1
9000c25e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000c260:	682b      	ldr	r3, [r5, #0]
9000c262:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000c266:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c268:	f7fc fc74 	bl	90008b54 <HAL_GetTick>
9000c26c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c26e:	e005      	b.n	9000c27c <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c270:	f7fc fc70 	bl	90008b54 <HAL_GetTick>
9000c274:	1b00      	subs	r0, r0, r4
9000c276:	2802      	cmp	r0, #2
9000c278:	f63f af29 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c27c:	6833      	ldr	r3, [r6, #0]
9000c27e:	019a      	lsls	r2, r3, #6
9000c280:	d5f6      	bpl.n	9000c270 <HAL_RCC_OscConfig+0x4a4>
9000c282:	e665      	b.n	9000bf50 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c284:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000c286:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000c288:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c28a:	f43f ae62 	beq.w	9000bf52 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c28e:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c292:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000c294:	428b      	cmp	r3, r1
9000c296:	f47f aeb9 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c29a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c29e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c2a0:	429a      	cmp	r2, r3
9000c2a2:	f47f aeb3 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c2a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000c2a8:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000c2ac:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c2ae:	429a      	cmp	r2, r3
9000c2b0:	f47f aeac 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c2b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c2b6:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000c2ba:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c2bc:	429a      	cmp	r2, r3
9000c2be:	f47f aea5 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c2c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000c2c4:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000c2c8:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c2ca:	429a      	cmp	r2, r3
9000c2cc:	f47f ae9e 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000c2d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000c2d2:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000c2d6:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c2d8:	429e      	cmp	r6, r3
9000c2da:	f47f ae97 	bne.w	9000c00c <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c2de:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c2e0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c2e2:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c2e6:	429a      	cmp	r2, r3
9000c2e8:	f43f ae32 	beq.w	9000bf50 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000c2ec:	4a10      	ldr	r2, [pc, #64]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
9000c2ee:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c2f0:	f023 0301 	bic.w	r3, r3, #1
9000c2f4:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000c2f6:	f7fc fc2d 	bl	90008b54 <HAL_GetTick>
9000c2fa:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c2fc:	f7fc fc2a 	bl	90008b54 <HAL_GetTick>
9000c300:	42a8      	cmp	r0, r5
9000c302:	d0fb      	beq.n	9000c2fc <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c304:	4a0a      	ldr	r2, [pc, #40]	; (9000c330 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000c306:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c308:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000c30a:	4b0b      	ldr	r3, [pc, #44]	; (9000c338 <HAL_RCC_OscConfig+0x56c>)
9000c30c:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000c30e:	4023      	ands	r3, r4
9000c310:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c314:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c316:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c318:	f043 0301 	orr.w	r3, r3, #1
9000c31c:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000c31e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c320:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000c324:	601a      	str	r2, [r3, #0]
9000c326:	681a      	ldr	r2, [r3, #0]
9000c328:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000c32c:	601a      	str	r2, [r3, #0]
9000c32e:	e575      	b.n	9000be1c <HAL_RCC_OscConfig+0x50>
9000c330:	58024400 	.word	0x58024400
9000c334:	fffffc0c 	.word	0xfffffc0c
9000c338:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c33c:	4d1c      	ldr	r5, [pc, #112]	; (9000c3b0 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c33e:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c342:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c344:	f023 0301 	bic.w	r3, r3, #1
9000c348:	672b      	str	r3, [r5, #112]	; 0x70
9000c34a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c34c:	f023 0304 	bic.w	r3, r3, #4
9000c350:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c352:	f7fc fbff 	bl	90008b54 <HAL_GetTick>
9000c356:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c358:	e005      	b.n	9000c366 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c35a:	f7fc fbfb 	bl	90008b54 <HAL_GetTick>
9000c35e:	1b80      	subs	r0, r0, r6
9000c360:	42b8      	cmp	r0, r7
9000c362:	f63f aeb4 	bhi.w	9000c0ce <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c366:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c368:	0798      	lsls	r0, r3, #30
9000c36a:	d4f6      	bmi.n	9000c35a <HAL_RCC_OscConfig+0x58e>
9000c36c:	e5d3      	b.n	9000bf16 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c36e:	68eb      	ldr	r3, [r5, #12]
9000c370:	6a22      	ldr	r2, [r4, #32]
9000c372:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c376:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c37a:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c37c:	6823      	ldr	r3, [r4, #0]
9000c37e:	e595      	b.n	9000beac <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c380:	4a0b      	ldr	r2, [pc, #44]	; (9000c3b0 <HAL_RCC_OscConfig+0x5e4>)
9000c382:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000c384:	f043 0301 	orr.w	r3, r3, #1
9000c388:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c38a:	e690      	b.n	9000c0ae <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c38c:	4a08      	ldr	r2, [pc, #32]	; (9000c3b0 <HAL_RCC_OscConfig+0x5e4>)
9000c38e:	6853      	ldr	r3, [r2, #4]
9000c390:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c394:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000c398:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c39a:	6823      	ldr	r3, [r4, #0]
9000c39c:	e586      	b.n	9000beac <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c39e:	f042 0204 	orr.w	r2, r2, #4
9000c3a2:	671a      	str	r2, [r3, #112]	; 0x70
9000c3a4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c3a6:	f042 0201 	orr.w	r2, r2, #1
9000c3aa:	671a      	str	r2, [r3, #112]	; 0x70
9000c3ac:	e67f      	b.n	9000c0ae <HAL_RCC_OscConfig+0x2e2>
9000c3ae:	bf00      	nop
9000c3b0:	58024400 	.word	0x58024400

9000c3b4 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c3b4:	4a47      	ldr	r2, [pc, #284]	; (9000c4d4 <HAL_RCC_GetSysClockFreq+0x120>)
9000c3b6:	6913      	ldr	r3, [r2, #16]
9000c3b8:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c3bc:	2b10      	cmp	r3, #16
9000c3be:	d004      	beq.n	9000c3ca <HAL_RCC_GetSysClockFreq+0x16>
9000c3c0:	2b18      	cmp	r3, #24
9000c3c2:	d00d      	beq.n	9000c3e0 <HAL_RCC_GetSysClockFreq+0x2c>
9000c3c4:	b11b      	cbz	r3, 9000c3ce <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000c3c6:	4844      	ldr	r0, [pc, #272]	; (9000c4d8 <HAL_RCC_GetSysClockFreq+0x124>)
9000c3c8:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c3ca:	4844      	ldr	r0, [pc, #272]	; (9000c4dc <HAL_RCC_GetSysClockFreq+0x128>)
9000c3cc:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c3ce:	6813      	ldr	r3, [r2, #0]
9000c3d0:	0699      	lsls	r1, r3, #26
9000c3d2:	d54a      	bpl.n	9000c46a <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c3d4:	6813      	ldr	r3, [r2, #0]
9000c3d6:	4842      	ldr	r0, [pc, #264]	; (9000c4e0 <HAL_RCC_GetSysClockFreq+0x12c>)
9000c3d8:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c3dc:	40d8      	lsrs	r0, r3
9000c3de:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c3e0:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000c3e2:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c3e4:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c3e6:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000c3e8:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c3ec:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c3ee:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c3f2:	d038      	beq.n	9000c466 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c3f4:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c3f8:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c3fc:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c400:	fb05 f101 	mul.w	r1, r5, r1
9000c404:	2b01      	cmp	r3, #1
9000c406:	ee07 1a90 	vmov	s15, r1
9000c40a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000c40e:	d002      	beq.n	9000c416 <HAL_RCC_GetSysClockFreq+0x62>
9000c410:	2b02      	cmp	r3, #2
9000c412:	d02c      	beq.n	9000c46e <HAL_RCC_GetSysClockFreq+0xba>
9000c414:	b393      	cbz	r3, 9000c47c <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c416:	ee07 0a90 	vmov	s15, r0
9000c41a:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000c4e4 <HAL_RCC_GetSysClockFreq+0x130>
9000c41e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c422:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c424:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000c428:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000c4e8 <HAL_RCC_GetSysClockFreq+0x134>
9000c42c:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c430:	ee07 3a90 	vmov	s15, r3
9000c434:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000c438:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c43c:	eee7 7a25 	vfma.f32	s15, s14, s11
9000c440:	ee77 7a86 	vadd.f32	s15, s15, s12
9000c444:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c448:	4b22      	ldr	r3, [pc, #136]	; (9000c4d4 <HAL_RCC_GetSysClockFreq+0x120>)
9000c44a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c44c:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c450:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c452:	ee07 3a90 	vmov	s15, r3
9000c456:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c45a:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000c45e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c462:	ee17 0a90 	vmov	r0, s15
}
9000c466:	bc30      	pop	{r4, r5}
9000c468:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c46a:	481d      	ldr	r0, [pc, #116]	; (9000c4e0 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000c46c:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c46e:	ee07 0a90 	vmov	s15, r0
9000c472:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000c4ec <HAL_RCC_GetSysClockFreq+0x138>
9000c476:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c47a:	e7d2      	b.n	9000c422 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c47c:	6813      	ldr	r3, [r2, #0]
9000c47e:	069b      	lsls	r3, r3, #26
9000c480:	d520      	bpl.n	9000c4c4 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c482:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c484:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c488:	4915      	ldr	r1, [pc, #84]	; (9000c4e0 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c48a:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000c48e:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c490:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c498:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000c4e8 <HAL_RCC_GetSysClockFreq+0x134>
9000c49c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c4a0:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4a2:	ee06 3a90 	vmov	s13, r3
9000c4a6:	ee06 1a10 	vmov	s12, r1
9000c4aa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c4ae:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c4b2:	eee7 6a05 	vfma.f32	s13, s14, s10
9000c4b6:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c4ba:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000c4be:	ee66 6a87 	vmul.f32	s13, s13, s14
9000c4c2:	e7c1      	b.n	9000c448 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c4c4:	ee07 0a90 	vmov	s15, r0
9000c4c8:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000c4f0 <HAL_RCC_GetSysClockFreq+0x13c>
9000c4cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c4d0:	e7a7      	b.n	9000c422 <HAL_RCC_GetSysClockFreq+0x6e>
9000c4d2:	bf00      	nop
9000c4d4:	58024400 	.word	0x58024400
9000c4d8:	003d0900 	.word	0x003d0900
9000c4dc:	017d7840 	.word	0x017d7840
9000c4e0:	03d09000 	.word	0x03d09000
9000c4e4:	4a742400 	.word	0x4a742400
9000c4e8:	39000000 	.word	0x39000000
9000c4ec:	4bbebc20 	.word	0x4bbebc20
9000c4f0:	4c742400 	.word	0x4c742400

9000c4f4 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c4f4:	2800      	cmp	r0, #0
9000c4f6:	f000 810c 	beq.w	9000c712 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c4fa:	4a8c      	ldr	r2, [pc, #560]	; (9000c72c <HAL_RCC_ClockConfig+0x238>)
9000c4fc:	6813      	ldr	r3, [r2, #0]
9000c4fe:	f003 030f 	and.w	r3, r3, #15
9000c502:	428b      	cmp	r3, r1
{
9000c504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c508:	4604      	mov	r4, r0
9000c50a:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c50c:	d20c      	bcs.n	9000c528 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c50e:	6813      	ldr	r3, [r2, #0]
9000c510:	f023 030f 	bic.w	r3, r3, #15
9000c514:	430b      	orrs	r3, r1
9000c516:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c518:	6813      	ldr	r3, [r2, #0]
9000c51a:	f003 030f 	and.w	r3, r3, #15
9000c51e:	428b      	cmp	r3, r1
9000c520:	d002      	beq.n	9000c528 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c522:	2001      	movs	r0, #1
}
9000c524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c528:	6823      	ldr	r3, [r4, #0]
9000c52a:	075f      	lsls	r7, r3, #29
9000c52c:	d50b      	bpl.n	9000c546 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c52e:	4980      	ldr	r1, [pc, #512]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c530:	6920      	ldr	r0, [r4, #16]
9000c532:	698a      	ldr	r2, [r1, #24]
9000c534:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c538:	4290      	cmp	r0, r2
9000c53a:	d904      	bls.n	9000c546 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c53c:	698a      	ldr	r2, [r1, #24]
9000c53e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c542:	4302      	orrs	r2, r0
9000c544:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c546:	071e      	lsls	r6, r3, #28
9000c548:	d50b      	bpl.n	9000c562 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c54a:	4979      	ldr	r1, [pc, #484]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c54c:	6960      	ldr	r0, [r4, #20]
9000c54e:	69ca      	ldr	r2, [r1, #28]
9000c550:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c554:	4290      	cmp	r0, r2
9000c556:	d904      	bls.n	9000c562 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c558:	69ca      	ldr	r2, [r1, #28]
9000c55a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c55e:	4302      	orrs	r2, r0
9000c560:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c562:	06d8      	lsls	r0, r3, #27
9000c564:	d50b      	bpl.n	9000c57e <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c566:	4972      	ldr	r1, [pc, #456]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c568:	69a0      	ldr	r0, [r4, #24]
9000c56a:	69ca      	ldr	r2, [r1, #28]
9000c56c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c570:	4290      	cmp	r0, r2
9000c572:	d904      	bls.n	9000c57e <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c574:	69ca      	ldr	r2, [r1, #28]
9000c576:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000c57a:	4302      	orrs	r2, r0
9000c57c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c57e:	0699      	lsls	r1, r3, #26
9000c580:	d50b      	bpl.n	9000c59a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c582:	496b      	ldr	r1, [pc, #428]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c584:	69e0      	ldr	r0, [r4, #28]
9000c586:	6a0a      	ldr	r2, [r1, #32]
9000c588:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c58c:	4290      	cmp	r0, r2
9000c58e:	d904      	bls.n	9000c59a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c590:	6a0a      	ldr	r2, [r1, #32]
9000c592:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c596:	4302      	orrs	r2, r0
9000c598:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c59a:	079a      	lsls	r2, r3, #30
9000c59c:	f140 80ab 	bpl.w	9000c6f6 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c5a0:	4863      	ldr	r0, [pc, #396]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c5a2:	68e1      	ldr	r1, [r4, #12]
9000c5a4:	6982      	ldr	r2, [r0, #24]
9000c5a6:	f002 020f 	and.w	r2, r2, #15
9000c5aa:	4291      	cmp	r1, r2
9000c5ac:	d904      	bls.n	9000c5b8 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c5ae:	6982      	ldr	r2, [r0, #24]
9000c5b0:	f022 020f 	bic.w	r2, r2, #15
9000c5b4:	430a      	orrs	r2, r1
9000c5b6:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c5b8:	07d8      	lsls	r0, r3, #31
9000c5ba:	d530      	bpl.n	9000c61e <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000c5bc:	4a5c      	ldr	r2, [pc, #368]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c5be:	68a1      	ldr	r1, [r4, #8]
9000c5c0:	6993      	ldr	r3, [r2, #24]
9000c5c2:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000c5c6:	430b      	orrs	r3, r1
9000c5c8:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c5ca:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c5cc:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c5ce:	2902      	cmp	r1, #2
9000c5d0:	f000 80a1 	beq.w	9000c716 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000c5d4:	2903      	cmp	r1, #3
9000c5d6:	f000 8098 	beq.w	9000c70a <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000c5da:	2901      	cmp	r1, #1
9000c5dc:	f000 80a1 	beq.w	9000c722 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c5e0:	0758      	lsls	r0, r3, #29
9000c5e2:	d59e      	bpl.n	9000c522 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c5e4:	4e52      	ldr	r6, [pc, #328]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c5e6:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c5ea:	6933      	ldr	r3, [r6, #16]
9000c5ec:	f023 0307 	bic.w	r3, r3, #7
9000c5f0:	430b      	orrs	r3, r1
9000c5f2:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000c5f4:	f7fc faae 	bl	90008b54 <HAL_GetTick>
9000c5f8:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c5fa:	e005      	b.n	9000c608 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c5fc:	f7fc faaa 	bl	90008b54 <HAL_GetTick>
9000c600:	1bc0      	subs	r0, r0, r7
9000c602:	4540      	cmp	r0, r8
9000c604:	f200 808b 	bhi.w	9000c71e <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c608:	6933      	ldr	r3, [r6, #16]
9000c60a:	6862      	ldr	r2, [r4, #4]
9000c60c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c610:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000c614:	d1f2      	bne.n	9000c5fc <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c616:	6823      	ldr	r3, [r4, #0]
9000c618:	0799      	lsls	r1, r3, #30
9000c61a:	d506      	bpl.n	9000c62a <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c61c:	68e1      	ldr	r1, [r4, #12]
9000c61e:	4844      	ldr	r0, [pc, #272]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c620:	6982      	ldr	r2, [r0, #24]
9000c622:	f002 020f 	and.w	r2, r2, #15
9000c626:	428a      	cmp	r2, r1
9000c628:	d869      	bhi.n	9000c6fe <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000c62a:	4940      	ldr	r1, [pc, #256]	; (9000c72c <HAL_RCC_ClockConfig+0x238>)
9000c62c:	680a      	ldr	r2, [r1, #0]
9000c62e:	f002 020f 	and.w	r2, r2, #15
9000c632:	42aa      	cmp	r2, r5
9000c634:	d90a      	bls.n	9000c64c <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c636:	680a      	ldr	r2, [r1, #0]
9000c638:	f022 020f 	bic.w	r2, r2, #15
9000c63c:	432a      	orrs	r2, r5
9000c63e:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c640:	680a      	ldr	r2, [r1, #0]
9000c642:	f002 020f 	and.w	r2, r2, #15
9000c646:	42aa      	cmp	r2, r5
9000c648:	f47f af6b 	bne.w	9000c522 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c64c:	075a      	lsls	r2, r3, #29
9000c64e:	d50b      	bpl.n	9000c668 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c650:	4937      	ldr	r1, [pc, #220]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c652:	6920      	ldr	r0, [r4, #16]
9000c654:	698a      	ldr	r2, [r1, #24]
9000c656:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c65a:	4290      	cmp	r0, r2
9000c65c:	d204      	bcs.n	9000c668 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c65e:	698a      	ldr	r2, [r1, #24]
9000c660:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c664:	4302      	orrs	r2, r0
9000c666:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c668:	071f      	lsls	r7, r3, #28
9000c66a:	d50b      	bpl.n	9000c684 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c66c:	4930      	ldr	r1, [pc, #192]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c66e:	6960      	ldr	r0, [r4, #20]
9000c670:	69ca      	ldr	r2, [r1, #28]
9000c672:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c676:	4290      	cmp	r0, r2
9000c678:	d204      	bcs.n	9000c684 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c67a:	69ca      	ldr	r2, [r1, #28]
9000c67c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c680:	4302      	orrs	r2, r0
9000c682:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c684:	06de      	lsls	r6, r3, #27
9000c686:	d50b      	bpl.n	9000c6a0 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c688:	4929      	ldr	r1, [pc, #164]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c68a:	69a0      	ldr	r0, [r4, #24]
9000c68c:	69ca      	ldr	r2, [r1, #28]
9000c68e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c692:	4290      	cmp	r0, r2
9000c694:	d204      	bcs.n	9000c6a0 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c696:	69ca      	ldr	r2, [r1, #28]
9000c698:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000c69c:	4302      	orrs	r2, r0
9000c69e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c6a0:	069d      	lsls	r5, r3, #26
9000c6a2:	d50b      	bpl.n	9000c6bc <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c6a4:	4a22      	ldr	r2, [pc, #136]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c6a6:	69e1      	ldr	r1, [r4, #28]
9000c6a8:	6a13      	ldr	r3, [r2, #32]
9000c6aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000c6ae:	4299      	cmp	r1, r3
9000c6b0:	d204      	bcs.n	9000c6bc <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c6b2:	6a13      	ldr	r3, [r2, #32]
9000c6b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000c6b8:	430b      	orrs	r3, r1
9000c6ba:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6bc:	f7ff fe7a 	bl	9000c3b4 <HAL_RCC_GetSysClockFreq>
9000c6c0:	4a1b      	ldr	r2, [pc, #108]	; (9000c730 <HAL_RCC_ClockConfig+0x23c>)
9000c6c2:	4603      	mov	r3, r0
9000c6c4:	481b      	ldr	r0, [pc, #108]	; (9000c734 <HAL_RCC_ClockConfig+0x240>)
9000c6c6:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6c8:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6ca:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c6ce:	4d1a      	ldr	r5, [pc, #104]	; (9000c738 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6d0:	f002 020f 	and.w	r2, r2, #15
9000c6d4:	4c19      	ldr	r4, [pc, #100]	; (9000c73c <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6d6:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6d8:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6da:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c6de:	4818      	ldr	r0, [pc, #96]	; (9000c740 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6e0:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c6e4:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c6e6:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c6e8:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c6ea:	40d3      	lsrs	r3, r2
9000c6ec:	6023      	str	r3, [r4, #0]
}
9000c6ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c6f2:	f7f6 be73 	b.w	900033dc <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c6f6:	07da      	lsls	r2, r3, #31
9000c6f8:	f53f af60 	bmi.w	9000c5bc <HAL_RCC_ClockConfig+0xc8>
9000c6fc:	e795      	b.n	9000c62a <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c6fe:	6982      	ldr	r2, [r0, #24]
9000c700:	f022 020f 	bic.w	r2, r2, #15
9000c704:	430a      	orrs	r2, r1
9000c706:	6182      	str	r2, [r0, #24]
9000c708:	e78f      	b.n	9000c62a <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c70a:	019f      	lsls	r7, r3, #6
9000c70c:	f53f af6a 	bmi.w	9000c5e4 <HAL_RCC_ClockConfig+0xf0>
9000c710:	e707      	b.n	9000c522 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c712:	2001      	movs	r0, #1
}
9000c714:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c716:	039b      	lsls	r3, r3, #14
9000c718:	f53f af64 	bmi.w	9000c5e4 <HAL_RCC_ClockConfig+0xf0>
9000c71c:	e701      	b.n	9000c522 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c71e:	2003      	movs	r0, #3
9000c720:	e700      	b.n	9000c524 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c722:	05de      	lsls	r6, r3, #23
9000c724:	f53f af5e 	bmi.w	9000c5e4 <HAL_RCC_ClockConfig+0xf0>
9000c728:	e6fb      	b.n	9000c522 <HAL_RCC_ClockConfig+0x2e>
9000c72a:	bf00      	nop
9000c72c:	52002000 	.word	0x52002000
9000c730:	58024400 	.word	0x58024400
9000c734:	9002b1b0 	.word	0x9002b1b0
9000c738:	2400006c 	.word	0x2400006c
9000c73c:	24000070 	.word	0x24000070
9000c740:	24000078 	.word	0x24000078

9000c744 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c744:	4a1c      	ldr	r2, [pc, #112]	; (9000c7b8 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c746:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c748:	6913      	ldr	r3, [r2, #16]
9000c74a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c74e:	2b10      	cmp	r3, #16
9000c750:	d021      	beq.n	9000c796 <HAL_RCC_GetPCLK1Freq+0x52>
9000c752:	2b18      	cmp	r3, #24
9000c754:	d02a      	beq.n	9000c7ac <HAL_RCC_GetPCLK1Freq+0x68>
9000c756:	b303      	cbz	r3, 9000c79a <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000c758:	4818      	ldr	r0, [pc, #96]	; (9000c7bc <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c75a:	4a17      	ldr	r2, [pc, #92]	; (9000c7b8 <HAL_RCC_GetPCLK1Freq+0x74>)
9000c75c:	4918      	ldr	r1, [pc, #96]	; (9000c7c0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c75e:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c760:	4c18      	ldr	r4, [pc, #96]	; (9000c7c4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c762:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000c766:	4d18      	ldr	r5, [pc, #96]	; (9000c7c8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c768:	5ccb      	ldrb	r3, [r1, r3]
9000c76a:	f003 031f 	and.w	r3, r3, #31
9000c76e:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c770:	6993      	ldr	r3, [r2, #24]
9000c772:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000c776:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c778:	5ccb      	ldrb	r3, [r1, r3]
9000c77a:	f003 031f 	and.w	r3, r3, #31
9000c77e:	fa20 f303 	lsr.w	r3, r0, r3
9000c782:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c784:	69d2      	ldr	r2, [r2, #28]
9000c786:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c78a:	5c88      	ldrb	r0, [r1, r2]
9000c78c:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c790:	fa23 f000 	lsr.w	r0, r3, r0
9000c794:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c796:	480d      	ldr	r0, [pc, #52]	; (9000c7cc <HAL_RCC_GetPCLK1Freq+0x88>)
9000c798:	e7df      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c79a:	6813      	ldr	r3, [r2, #0]
9000c79c:	069b      	lsls	r3, r3, #26
9000c79e:	d508      	bpl.n	9000c7b2 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c7a0:	6813      	ldr	r3, [r2, #0]
9000c7a2:	480b      	ldr	r0, [pc, #44]	; (9000c7d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c7a4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c7a8:	40d8      	lsrs	r0, r3
9000c7aa:	e7d6      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
9000c7ac:	f7ff fa8a 	bl	9000bcc4 <HAL_RCC_GetSysClockFreq.part.0>
9000c7b0:	e7d3      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c7b2:	4807      	ldr	r0, [pc, #28]	; (9000c7d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c7b4:	e7d1      	b.n	9000c75a <HAL_RCC_GetPCLK1Freq+0x16>
9000c7b6:	bf00      	nop
9000c7b8:	58024400 	.word	0x58024400
9000c7bc:	003d0900 	.word	0x003d0900
9000c7c0:	9002b1b0 	.word	0x9002b1b0
9000c7c4:	24000070 	.word	0x24000070
9000c7c8:	2400006c 	.word	0x2400006c
9000c7cc:	017d7840 	.word	0x017d7840
9000c7d0:	03d09000 	.word	0x03d09000

9000c7d4 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7d4:	4a1c      	ldr	r2, [pc, #112]	; (9000c848 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c7d6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c7d8:	6913      	ldr	r3, [r2, #16]
9000c7da:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c7de:	2b10      	cmp	r3, #16
9000c7e0:	d021      	beq.n	9000c826 <HAL_RCC_GetPCLK2Freq+0x52>
9000c7e2:	2b18      	cmp	r3, #24
9000c7e4:	d02a      	beq.n	9000c83c <HAL_RCC_GetPCLK2Freq+0x68>
9000c7e6:	b303      	cbz	r3, 9000c82a <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000c7e8:	4818      	ldr	r0, [pc, #96]	; (9000c84c <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7ea:	4a17      	ldr	r2, [pc, #92]	; (9000c848 <HAL_RCC_GetPCLK2Freq+0x74>)
9000c7ec:	4918      	ldr	r1, [pc, #96]	; (9000c850 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c7ee:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c7f0:	4c18      	ldr	r4, [pc, #96]	; (9000c854 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7f2:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000c7f6:	4d18      	ldr	r5, [pc, #96]	; (9000c858 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c7f8:	5ccb      	ldrb	r3, [r1, r3]
9000c7fa:	f003 031f 	and.w	r3, r3, #31
9000c7fe:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c800:	6993      	ldr	r3, [r2, #24]
9000c802:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000c806:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c808:	5ccb      	ldrb	r3, [r1, r3]
9000c80a:	f003 031f 	and.w	r3, r3, #31
9000c80e:	fa20 f303 	lsr.w	r3, r0, r3
9000c812:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c814:	69d2      	ldr	r2, [r2, #28]
9000c816:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c81a:	5c88      	ldrb	r0, [r1, r2]
9000c81c:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c820:	fa23 f000 	lsr.w	r0, r3, r0
9000c824:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c826:	480d      	ldr	r0, [pc, #52]	; (9000c85c <HAL_RCC_GetPCLK2Freq+0x88>)
9000c828:	e7df      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c82a:	6813      	ldr	r3, [r2, #0]
9000c82c:	069b      	lsls	r3, r3, #26
9000c82e:	d508      	bpl.n	9000c842 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c830:	6813      	ldr	r3, [r2, #0]
9000c832:	480b      	ldr	r0, [pc, #44]	; (9000c860 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c834:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c838:	40d8      	lsrs	r0, r3
9000c83a:	e7d6      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
9000c83c:	f7ff fa42 	bl	9000bcc4 <HAL_RCC_GetSysClockFreq.part.0>
9000c840:	e7d3      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c842:	4807      	ldr	r0, [pc, #28]	; (9000c860 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c844:	e7d1      	b.n	9000c7ea <HAL_RCC_GetPCLK2Freq+0x16>
9000c846:	bf00      	nop
9000c848:	58024400 	.word	0x58024400
9000c84c:	003d0900 	.word	0x003d0900
9000c850:	9002b1b0 	.word	0x9002b1b0
9000c854:	24000070 	.word	0x24000070
9000c858:	2400006c 	.word	0x2400006c
9000c85c:	017d7840 	.word	0x017d7840
9000c860:	03d09000 	.word	0x03d09000

9000c864 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c864:	4b13      	ldr	r3, [pc, #76]	; (9000c8b4 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c866:	223f      	movs	r2, #63	; 0x3f
9000c868:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c86a:	691a      	ldr	r2, [r3, #16]
9000c86c:	f002 0207 	and.w	r2, r2, #7
9000c870:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c872:	699a      	ldr	r2, [r3, #24]
9000c874:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000c878:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c87a:	699a      	ldr	r2, [r3, #24]
9000c87c:	f002 020f 	and.w	r2, r2, #15
9000c880:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c882:	699a      	ldr	r2, [r3, #24]
9000c884:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c888:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c88a:	69da      	ldr	r2, [r3, #28]
9000c88c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c890:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c892:	69da      	ldr	r2, [r3, #28]
9000c894:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c898:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c89a:	6a1b      	ldr	r3, [r3, #32]
{
9000c89c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c89e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8a2:	4c05      	ldr	r4, [pc, #20]	; (9000c8b8 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c8a4:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8a6:	6823      	ldr	r3, [r4, #0]
}
9000c8a8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c8ac:	f003 030f 	and.w	r3, r3, #15
9000c8b0:	600b      	str	r3, [r1, #0]
}
9000c8b2:	4770      	bx	lr
9000c8b4:	58024400 	.word	0x58024400
9000c8b8:	52002000 	.word	0x52002000

9000c8bc <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000c8bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c8be:	4c3a      	ldr	r4, [pc, #232]	; (9000c9a8 <RCCEx_PLL2_Config+0xec>)
9000c8c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c8c2:	f003 0303 	and.w	r3, r3, #3
9000c8c6:	2b03      	cmp	r3, #3
9000c8c8:	d067      	beq.n	9000c99a <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c8ca:	6823      	ldr	r3, [r4, #0]
9000c8cc:	4606      	mov	r6, r0
9000c8ce:	460f      	mov	r7, r1
9000c8d0:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000c8d4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c8d6:	f7fc f93d 	bl	90008b54 <HAL_GetTick>
9000c8da:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c8dc:	e004      	b.n	9000c8e8 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c8de:	f7fc f939 	bl	90008b54 <HAL_GetTick>
9000c8e2:	1b43      	subs	r3, r0, r5
9000c8e4:	2b02      	cmp	r3, #2
9000c8e6:	d856      	bhi.n	9000c996 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c8e8:	6823      	ldr	r3, [r4, #0]
9000c8ea:	011a      	lsls	r2, r3, #4
9000c8ec:	d4f7      	bmi.n	9000c8de <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c8ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c8f0:	6832      	ldr	r2, [r6, #0]
9000c8f2:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000c8f6:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c8fa:	62a3      	str	r3, [r4, #40]	; 0x28
9000c8fc:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c900:	3b01      	subs	r3, #1
9000c902:	3a01      	subs	r2, #1
9000c904:	025b      	lsls	r3, r3, #9
9000c906:	0412      	lsls	r2, r2, #16
9000c908:	b29b      	uxth	r3, r3
9000c90a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c90e:	4313      	orrs	r3, r2
9000c910:	6872      	ldr	r2, [r6, #4]
9000c912:	3a01      	subs	r2, #1
9000c914:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c918:	4313      	orrs	r3, r2
9000c91a:	6932      	ldr	r2, [r6, #16]
9000c91c:	3a01      	subs	r2, #1
9000c91e:	0612      	lsls	r2, r2, #24
9000c920:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c924:	4313      	orrs	r3, r2
9000c926:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c928:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c92a:	6972      	ldr	r2, [r6, #20]
9000c92c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000c930:	4313      	orrs	r3, r2
9000c932:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c934:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c936:	69b3      	ldr	r3, [r6, #24]
9000c938:	f022 0220 	bic.w	r2, r2, #32
9000c93c:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c93e:	4b1b      	ldr	r3, [pc, #108]	; (9000c9ac <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c940:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c942:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c944:	f022 0210 	bic.w	r2, r2, #16
9000c948:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c94a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000c94c:	69f2      	ldr	r2, [r6, #28]
9000c94e:	400b      	ands	r3, r1
9000c950:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c954:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c956:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c958:	f043 0310 	orr.w	r3, r3, #16
9000c95c:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c95e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c960:	b1ef      	cbz	r7, 9000c99e <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c962:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c964:	bf0c      	ite	eq
9000c966:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c96a:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000c96e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c970:	4c0d      	ldr	r4, [pc, #52]	; (9000c9a8 <RCCEx_PLL2_Config+0xec>)
9000c972:	6823      	ldr	r3, [r4, #0]
9000c974:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000c978:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c97a:	f7fc f8eb 	bl	90008b54 <HAL_GetTick>
9000c97e:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c980:	e004      	b.n	9000c98c <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c982:	f7fc f8e7 	bl	90008b54 <HAL_GetTick>
9000c986:	1b40      	subs	r0, r0, r5
9000c988:	2802      	cmp	r0, #2
9000c98a:	d804      	bhi.n	9000c996 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c98c:	6823      	ldr	r3, [r4, #0]
9000c98e:	011b      	lsls	r3, r3, #4
9000c990:	d5f7      	bpl.n	9000c982 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000c992:	2000      	movs	r0, #0
}
9000c994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c996:	2003      	movs	r0, #3
}
9000c998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c99a:	2001      	movs	r0, #1
}
9000c99c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c99e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000c9a2:	62e3      	str	r3, [r4, #44]	; 0x2c
9000c9a4:	e7e4      	b.n	9000c970 <RCCEx_PLL2_Config+0xb4>
9000c9a6:	bf00      	nop
9000c9a8:	58024400 	.word	0x58024400
9000c9ac:	ffff0007 	.word	0xffff0007

9000c9b0 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000c9b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9b2:	4c3a      	ldr	r4, [pc, #232]	; (9000ca9c <RCCEx_PLL3_Config+0xec>)
9000c9b4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c9b6:	f003 0303 	and.w	r3, r3, #3
9000c9ba:	2b03      	cmp	r3, #3
9000c9bc:	d067      	beq.n	9000ca8e <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c9be:	6823      	ldr	r3, [r4, #0]
9000c9c0:	4606      	mov	r6, r0
9000c9c2:	460f      	mov	r7, r1
9000c9c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000c9c8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c9ca:	f7fc f8c3 	bl	90008b54 <HAL_GetTick>
9000c9ce:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c9d0:	e004      	b.n	9000c9dc <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c9d2:	f7fc f8bf 	bl	90008b54 <HAL_GetTick>
9000c9d6:	1b43      	subs	r3, r0, r5
9000c9d8:	2b02      	cmp	r3, #2
9000c9da:	d856      	bhi.n	9000ca8a <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c9dc:	6823      	ldr	r3, [r4, #0]
9000c9de:	009a      	lsls	r2, r3, #2
9000c9e0:	d4f7      	bmi.n	9000c9d2 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c9e2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c9e4:	6832      	ldr	r2, [r6, #0]
9000c9e6:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000c9ea:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c9ee:	62a3      	str	r3, [r4, #40]	; 0x28
9000c9f0:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c9f4:	3b01      	subs	r3, #1
9000c9f6:	3a01      	subs	r2, #1
9000c9f8:	025b      	lsls	r3, r3, #9
9000c9fa:	0412      	lsls	r2, r2, #16
9000c9fc:	b29b      	uxth	r3, r3
9000c9fe:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ca02:	4313      	orrs	r3, r2
9000ca04:	6872      	ldr	r2, [r6, #4]
9000ca06:	3a01      	subs	r2, #1
9000ca08:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ca0c:	4313      	orrs	r3, r2
9000ca0e:	6932      	ldr	r2, [r6, #16]
9000ca10:	3a01      	subs	r2, #1
9000ca12:	0612      	lsls	r2, r2, #24
9000ca14:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000ca18:	4313      	orrs	r3, r2
9000ca1a:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000ca1c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ca1e:	6972      	ldr	r2, [r6, #20]
9000ca20:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000ca24:	4313      	orrs	r3, r2
9000ca26:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ca28:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ca2a:	69b3      	ldr	r3, [r6, #24]
9000ca2c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000ca30:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ca32:	4b1b      	ldr	r3, [pc, #108]	; (9000caa0 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ca34:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000ca36:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ca38:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000ca3c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ca3e:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000ca40:	69f2      	ldr	r2, [r6, #28]
9000ca42:	400b      	ands	r3, r1
9000ca44:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000ca48:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000ca4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ca4c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ca50:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ca52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000ca54:	b1ef      	cbz	r7, 9000ca92 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000ca56:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000ca58:	bf0c      	ite	eq
9000ca5a:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000ca5e:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000ca62:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000ca64:	4c0d      	ldr	r4, [pc, #52]	; (9000ca9c <RCCEx_PLL3_Config+0xec>)
9000ca66:	6823      	ldr	r3, [r4, #0]
9000ca68:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000ca6c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ca6e:	f7fc f871 	bl	90008b54 <HAL_GetTick>
9000ca72:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ca74:	e004      	b.n	9000ca80 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ca76:	f7fc f86d 	bl	90008b54 <HAL_GetTick>
9000ca7a:	1b40      	subs	r0, r0, r5
9000ca7c:	2802      	cmp	r0, #2
9000ca7e:	d804      	bhi.n	9000ca8a <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ca80:	6823      	ldr	r3, [r4, #0]
9000ca82:	009b      	lsls	r3, r3, #2
9000ca84:	d5f7      	bpl.n	9000ca76 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000ca86:	2000      	movs	r0, #0
}
9000ca88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ca8a:	2003      	movs	r0, #3
}
9000ca8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000ca8e:	2001      	movs	r0, #1
}
9000ca90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ca92:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000ca96:	62e3      	str	r3, [r4, #44]	; 0x2c
9000ca98:	e7e4      	b.n	9000ca64 <RCCEx_PLL3_Config+0xb4>
9000ca9a:	bf00      	nop
9000ca9c:	58024400 	.word	0x58024400
9000caa0:	ffff0007 	.word	0xffff0007

9000caa4 <HAL_RCCEx_PeriphCLKConfig>:
{
9000caa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000caa8:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000caac:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000caae:	011d      	lsls	r5, r3, #4
9000cab0:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000cab4:	d523      	bpl.n	9000cafe <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cab6:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000cab8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000cabc:	f000 8553 	beq.w	9000d566 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000cac0:	d812      	bhi.n	9000cae8 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000cac2:	2900      	cmp	r1, #0
9000cac4:	f000 85a9 	beq.w	9000d61a <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000cac8:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000cacc:	f040 85a2 	bne.w	9000d614 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000cad0:	2102      	movs	r1, #2
9000cad2:	3008      	adds	r0, #8
9000cad4:	f7ff fef2 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cad8:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000cada:	2e00      	cmp	r6, #0
9000cadc:	f040 8522 	bne.w	9000d524 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cae0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cae2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cae6:	e003      	b.n	9000caf0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cae8:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000caec:	f040 8592 	bne.w	9000d614 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000caf0:	4dae      	ldr	r5, [pc, #696]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000caf2:	2600      	movs	r6, #0
9000caf4:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000caf6:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000cafa:	4301      	orrs	r1, r0
9000cafc:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cafe:	05d8      	lsls	r0, r3, #23
9000cb00:	d50a      	bpl.n	9000cb18 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000cb02:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000cb04:	2904      	cmp	r1, #4
9000cb06:	d806      	bhi.n	9000cb16 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000cb08:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cb0c:	053d0536 	.word	0x053d0536
9000cb10:	0323051a 	.word	0x0323051a
9000cb14:	0323      	.short	0x0323
9000cb16:	2601      	movs	r6, #1
9000cb18:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cb1a:	0599      	lsls	r1, r3, #22
9000cb1c:	d51d      	bpl.n	9000cb5a <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000cb1e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000cb20:	2980      	cmp	r1, #128	; 0x80
9000cb22:	f000 8516 	beq.w	9000d552 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000cb26:	f200 80f9 	bhi.w	9000cd1c <HAL_RCCEx_PeriphCLKConfig+0x278>
9000cb2a:	2900      	cmp	r1, #0
9000cb2c:	f000 8433 	beq.w	9000d396 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000cb30:	2940      	cmp	r1, #64	; 0x40
9000cb32:	f040 80fa 	bne.w	9000cd2a <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cb36:	2100      	movs	r1, #0
9000cb38:	f104 0008 	add.w	r0, r4, #8
9000cb3c:	f7ff febe 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cb40:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cb42:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb46:	2d00      	cmp	r5, #0
9000cb48:	f040 83fe 	bne.w	9000d348 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000cb4c:	4f97      	ldr	r7, [pc, #604]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cb4e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000cb50:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cb52:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000cb56:	4301      	orrs	r1, r0
9000cb58:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cb5a:	055f      	lsls	r7, r3, #21
9000cb5c:	d521      	bpl.n	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cb5e:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000cb62:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000cb66:	f000 8521 	beq.w	9000d5ac <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000cb6a:	f200 80e1 	bhi.w	9000cd30 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000cb6e:	2900      	cmp	r1, #0
9000cb70:	f000 8418 	beq.w	9000d3a4 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000cb74:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000cb78:	f040 80e2 	bne.w	9000cd40 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cb7c:	2100      	movs	r1, #0
9000cb7e:	f104 0008 	add.w	r0, r4, #8
9000cb82:	f7ff fe9b 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cb86:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cb88:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb8c:	2d00      	cmp	r5, #0
9000cb8e:	f040 83e2 	bne.w	9000d356 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000cb92:	4f86      	ldr	r7, [pc, #536]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cb94:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000cb98:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cb9a:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000cb9e:	4301      	orrs	r1, r0
9000cba0:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cba2:	0518      	lsls	r0, r3, #20
9000cba4:	d521      	bpl.n	9000cbea <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cba6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000cbaa:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000cbae:	f000 84bd 	beq.w	9000d52c <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000cbb2:	f200 80c8 	bhi.w	9000cd46 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000cbb6:	2900      	cmp	r1, #0
9000cbb8:	f000 83e7 	beq.w	9000d38a <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000cbbc:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000cbc0:	f040 80c9 	bne.w	9000cd56 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cbc4:	2100      	movs	r1, #0
9000cbc6:	f104 0008 	add.w	r0, r4, #8
9000cbca:	f7ff fe77 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cbce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cbd0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cbd4:	2d00      	cmp	r5, #0
9000cbd6:	f040 83b5 	bne.w	9000d344 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000cbda:	4f74      	ldr	r7, [pc, #464]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cbdc:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000cbe0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cbe2:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000cbe6:	4301      	orrs	r1, r0
9000cbe8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cbea:	0199      	lsls	r1, r3, #6
9000cbec:	d518      	bpl.n	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000cbee:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000cbf0:	2920      	cmp	r1, #32
9000cbf2:	f000 841f 	beq.w	9000d434 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000cbf6:	f200 80b1 	bhi.w	9000cd5c <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000cbfa:	b139      	cbz	r1, 9000cc0c <HAL_RCCEx_PeriphCLKConfig+0x168>
9000cbfc:	2910      	cmp	r1, #16
9000cbfe:	f040 80b0 	bne.w	9000cd62 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc02:	486a      	ldr	r0, [pc, #424]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cc04:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000cc06:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000cc0a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000cc0c:	2d00      	cmp	r5, #0
9000cc0e:	f040 83d8 	bne.w	9000d3c2 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000cc12:	4f66      	ldr	r7, [pc, #408]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cc14:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000cc16:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000cc18:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000cc1c:	4301      	orrs	r1, r0
9000cc1e:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000cc20:	04df      	lsls	r7, r3, #19
9000cc22:	d51f      	bpl.n	9000cc64 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cc24:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000cc26:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000cc2a:	f000 84b5 	beq.w	9000d598 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000cc2e:	f200 809b 	bhi.w	9000cd68 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000cc32:	2900      	cmp	r1, #0
9000cc34:	f000 83a3 	beq.w	9000d37e <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000cc38:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000cc3c:	f040 809c 	bne.w	9000cd78 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cc40:	2100      	movs	r1, #0
9000cc42:	f104 0008 	add.w	r0, r4, #8
9000cc46:	f7ff fe39 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cc4a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cc4c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc50:	2d00      	cmp	r5, #0
9000cc52:	f040 837b 	bne.w	9000d34c <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000cc56:	4f55      	ldr	r7, [pc, #340]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cc58:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000cc5a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cc5c:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000cc60:	4301      	orrs	r1, r0
9000cc62:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cc64:	0498      	lsls	r0, r3, #18
9000cc66:	d51d      	bpl.n	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cc68:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000cc6a:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000cc6e:	f000 8410 	beq.w	9000d492 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000cc72:	f200 8084 	bhi.w	9000cd7e <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000cc76:	b159      	cbz	r1, 9000cc90 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cc78:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000cc7c:	f040 8087 	bne.w	9000cd8e <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000cc80:	2101      	movs	r1, #1
9000cc82:	f104 0008 	add.w	r0, r4, #8
9000cc86:	f7ff fe19 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cc8a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cc8c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cc90:	2d00      	cmp	r5, #0
9000cc92:	f040 839a 	bne.w	9000d3ca <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000cc96:	4f45      	ldr	r7, [pc, #276]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cc98:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000cc9a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cc9c:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000cca0:	4301      	orrs	r1, r0
9000cca2:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cca4:	0459      	lsls	r1, r3, #17
9000cca6:	d51d      	bpl.n	9000cce4 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cca8:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000ccac:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ccb0:	f000 83fb 	beq.w	9000d4aa <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000ccb4:	d86e      	bhi.n	9000cd94 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000ccb6:	b151      	cbz	r1, 9000ccce <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ccb8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ccbc:	d172      	bne.n	9000cda4 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ccbe:	2101      	movs	r1, #1
9000ccc0:	f104 0008 	add.w	r0, r4, #8
9000ccc4:	f7ff fdfa 	bl	9000c8bc <RCCEx_PLL2_Config>
9000ccc8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ccca:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccce:	2d00      	cmp	r5, #0
9000ccd0:	f040 837f 	bne.w	9000d3d2 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000ccd4:	4f35      	ldr	r7, [pc, #212]	; (9000cdac <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ccd6:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000ccda:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ccdc:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000cce0:	4301      	orrs	r1, r0
9000cce2:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cce4:	041f      	lsls	r7, r3, #16
9000cce6:	d50d      	bpl.n	9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000cce8:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000ccea:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ccee:	f000 83c8 	beq.w	9000d482 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000ccf2:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ccf6:	f000 823b 	beq.w	9000d170 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000ccfa:	2900      	cmp	r1, #0
9000ccfc:	f000 8240 	beq.w	9000d180 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000cd00:	2601      	movs	r6, #1
9000cd02:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cd04:	01d8      	lsls	r0, r3, #7
9000cd06:	d562      	bpl.n	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000cd08:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000cd0a:	2903      	cmp	r1, #3
9000cd0c:	f200 84bf 	bhi.w	9000d68e <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000cd10:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cd14:	004e0053 	.word	0x004e0053
9000cd18:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000cd1c:	29c0      	cmp	r1, #192	; 0xc0
9000cd1e:	f43f af12 	beq.w	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000cd22:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000cd26:	f43f af0e 	beq.w	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000cd2a:	2601      	movs	r6, #1
9000cd2c:	4635      	mov	r5, r6
9000cd2e:	e714      	b.n	9000cb5a <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cd30:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000cd34:	f43f af2a 	beq.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000cd38:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000cd3c:	f43f af26 	beq.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000cd40:	2601      	movs	r6, #1
9000cd42:	4635      	mov	r5, r6
9000cd44:	e72d      	b.n	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cd46:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000cd4a:	f43f af43 	beq.w	9000cbd4 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000cd4e:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000cd52:	f43f af3f 	beq.w	9000cbd4 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000cd56:	2601      	movs	r6, #1
9000cd58:	4635      	mov	r5, r6
9000cd5a:	e746      	b.n	9000cbea <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000cd5c:	2930      	cmp	r1, #48	; 0x30
9000cd5e:	f43f af55 	beq.w	9000cc0c <HAL_RCCEx_PeriphCLKConfig+0x168>
9000cd62:	2601      	movs	r6, #1
9000cd64:	4635      	mov	r5, r6
9000cd66:	e75b      	b.n	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cd68:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000cd6c:	f43f af70 	beq.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000cd70:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000cd74:	f43f af6c 	beq.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000cd78:	2601      	movs	r6, #1
9000cd7a:	4635      	mov	r5, r6
9000cd7c:	e772      	b.n	9000cc64 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cd7e:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000cd82:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000cd86:	d083      	beq.n	9000cc90 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cd88:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000cd8c:	d080      	beq.n	9000cc90 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cd8e:	2601      	movs	r6, #1
9000cd90:	4635      	mov	r5, r6
9000cd92:	e787      	b.n	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cd94:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000cd98:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000cd9c:	d097      	beq.n	9000ccce <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000cd9e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000cda2:	d094      	beq.n	9000ccce <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000cda4:	2601      	movs	r6, #1
9000cda6:	4635      	mov	r5, r6
9000cda8:	e79c      	b.n	9000cce4 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000cdaa:	bf00      	nop
9000cdac:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cdb0:	4839      	ldr	r0, [pc, #228]	; (9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000cdb2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000cdb4:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000cdb8:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000cdba:	2d00      	cmp	r5, #0
9000cdbc:	f040 8303 	bne.w	9000d3c6 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000cdc0:	4f35      	ldr	r7, [pc, #212]	; (9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000cdc2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000cdc4:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000cdc6:	f021 0103 	bic.w	r1, r1, #3
9000cdca:	4301      	orrs	r1, r0
9000cdcc:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cdce:	0259      	lsls	r1, r3, #9
9000cdd0:	f100 826a 	bmi.w	9000d2a8 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cdd4:	07d8      	lsls	r0, r3, #31
9000cdd6:	d52f      	bpl.n	9000ce38 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000cdd8:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000cdda:	2928      	cmp	r1, #40	; 0x28
9000cddc:	d82a      	bhi.n	9000ce34 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000cdde:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cde2:	020a      	.short	0x020a
9000cde4:	00290029 	.word	0x00290029
9000cde8:	00290029 	.word	0x00290029
9000cdec:	00290029 	.word	0x00290029
9000cdf0:	02020029 	.word	0x02020029
9000cdf4:	00290029 	.word	0x00290029
9000cdf8:	00290029 	.word	0x00290029
9000cdfc:	00290029 	.word	0x00290029
9000ce00:	04070029 	.word	0x04070029
9000ce04:	00290029 	.word	0x00290029
9000ce08:	00290029 	.word	0x00290029
9000ce0c:	00290029 	.word	0x00290029
9000ce10:	020a0029 	.word	0x020a0029
9000ce14:	00290029 	.word	0x00290029
9000ce18:	00290029 	.word	0x00290029
9000ce1c:	00290029 	.word	0x00290029
9000ce20:	020a0029 	.word	0x020a0029
9000ce24:	00290029 	.word	0x00290029
9000ce28:	00290029 	.word	0x00290029
9000ce2c:	00290029 	.word	0x00290029
9000ce30:	020a0029 	.word	0x020a0029
9000ce34:	2601      	movs	r6, #1
9000ce36:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ce38:	0799      	lsls	r1, r3, #30
9000ce3a:	d51d      	bpl.n	9000ce78 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ce3c:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000ce3e:	2905      	cmp	r1, #5
9000ce40:	f200 8421 	bhi.w	9000d686 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000ce44:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce48:	0006000e 	.word	0x0006000e
9000ce4c:	000e03c8 	.word	0x000e03c8
9000ce50:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ce54:	2101      	movs	r1, #1
9000ce56:	f104 0008 	add.w	r0, r4, #8
9000ce5a:	f7ff fd2f 	bl	9000c8bc <RCCEx_PLL2_Config>
9000ce5e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ce60:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce64:	2d00      	cmp	r5, #0
9000ce66:	f040 82b8 	bne.w	9000d3da <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000ce6a:	4f0b      	ldr	r7, [pc, #44]	; (9000ce98 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ce6c:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000ce6e:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ce70:	f021 0107 	bic.w	r1, r1, #7
9000ce74:	4301      	orrs	r1, r0
9000ce76:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ce78:	075f      	lsls	r7, r3, #29
9000ce7a:	d522      	bpl.n	9000cec2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ce7c:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000ce80:	2905      	cmp	r1, #5
9000ce82:	f200 8408 	bhi.w	9000d696 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000ce86:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ce8a:	0011      	.short	0x0011
9000ce8c:	039b0009 	.word	0x039b0009
9000ce90:	00110011 	.word	0x00110011
9000ce94:	0011      	.short	0x0011
9000ce96:	bf00      	nop
9000ce98:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ce9c:	2101      	movs	r1, #1
9000ce9e:	f104 0008 	add.w	r0, r4, #8
9000cea2:	f7ff fd0b 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cea6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cea8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ceac:	2d00      	cmp	r5, #0
9000ceae:	f040 8286 	bne.w	9000d3be <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000ceb2:	4fae      	ldr	r7, [pc, #696]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ceb4:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000ceb8:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ceba:	f021 0107 	bic.w	r1, r1, #7
9000cebe:	4301      	orrs	r1, r0
9000cec0:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cec2:	0698      	lsls	r0, r3, #26
9000cec4:	d51f      	bpl.n	9000cf06 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cec6:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000ceca:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000cece:	f000 82f7 	beq.w	9000d4c0 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000ced2:	f200 810b 	bhi.w	9000d0ec <HAL_RCCEx_PeriphCLKConfig+0x648>
9000ced6:	b159      	cbz	r1, 9000cef0 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ced8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000cedc:	f040 8110 	bne.w	9000d100 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cee0:	2100      	movs	r1, #0
9000cee2:	f104 0008 	add.w	r0, r4, #8
9000cee6:	f7ff fce9 	bl	9000c8bc <RCCEx_PLL2_Config>
9000ceea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ceec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cef0:	2d00      	cmp	r5, #0
9000cef2:	f040 8260 	bne.w	9000d3b6 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000cef6:	4f9d      	ldr	r7, [pc, #628]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cef8:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000cefc:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000cefe:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000cf02:	4301      	orrs	r1, r0
9000cf04:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cf06:	0659      	lsls	r1, r3, #25
9000cf08:	d51f      	bpl.n	9000cf4a <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cf0a:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000cf0e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000cf12:	f000 829b 	beq.w	9000d44c <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000cf16:	f200 80f6 	bhi.w	9000d106 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000cf1a:	b159      	cbz	r1, 9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000cf1c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000cf20:	f040 80fb 	bne.w	9000d11a <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cf24:	2100      	movs	r1, #0
9000cf26:	f104 0008 	add.w	r0, r4, #8
9000cf2a:	f7ff fcc7 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cf2e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf30:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf34:	2d00      	cmp	r5, #0
9000cf36:	f040 824e 	bne.w	9000d3d6 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000cf3a:	4f8c      	ldr	r7, [pc, #560]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cf3c:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000cf40:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cf42:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000cf46:	4301      	orrs	r1, r0
9000cf48:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cf4a:	061f      	lsls	r7, r3, #24
9000cf4c:	d51f      	bpl.n	9000cf8e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cf4e:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000cf52:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000cf56:	f000 8289 	beq.w	9000d46c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000cf5a:	f200 80e1 	bhi.w	9000d120 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000cf5e:	b159      	cbz	r1, 9000cf78 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000cf60:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000cf64:	f040 80e6 	bne.w	9000d134 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cf68:	2100      	movs	r1, #0
9000cf6a:	f104 0008 	add.w	r0, r4, #8
9000cf6e:	f7ff fca5 	bl	9000c8bc <RCCEx_PLL2_Config>
9000cf72:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cf74:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf78:	2d00      	cmp	r5, #0
9000cf7a:	f040 8228 	bne.w	9000d3ce <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000cf7e:	4f7b      	ldr	r7, [pc, #492]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cf80:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000cf84:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cf86:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000cf8a:	4301      	orrs	r1, r0
9000cf8c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cf8e:	0718      	lsls	r0, r3, #28
9000cf90:	d50b      	bpl.n	9000cfaa <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000cf92:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000cf96:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000cf9a:	f000 82a9 	beq.w	9000d4f0 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cf9e:	4f73      	ldr	r7, [pc, #460]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cfa0:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000cfa2:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000cfa6:	4301      	orrs	r1, r0
9000cfa8:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cfaa:	06d9      	lsls	r1, r3, #27
9000cfac:	d50b      	bpl.n	9000cfc6 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000cfae:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000cfb2:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000cfb6:	f000 82a8 	beq.w	9000d50a <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000cfba:	4f6c      	ldr	r7, [pc, #432]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cfbc:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cfbe:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000cfc2:	4301      	orrs	r1, r0
9000cfc4:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000cfc6:	031f      	lsls	r7, r3, #12
9000cfc8:	d50e      	bpl.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000cfca:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000cfce:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000cfd2:	f000 80f4 	beq.w	9000d1be <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000cfd6:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000cfda:	f000 80f8 	beq.w	9000d1ce <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000cfde:	2900      	cmp	r1, #0
9000cfe0:	f000 821c 	beq.w	9000d41c <HAL_RCCEx_PeriphCLKConfig+0x978>
9000cfe4:	2601      	movs	r6, #1
9000cfe6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000cfe8:	0358      	lsls	r0, r3, #13
9000cfea:	d50f      	bpl.n	9000d00c <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000cfec:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000cff0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000cff4:	f000 80cf 	beq.w	9000d196 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000cff8:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000cffc:	f000 80d3 	beq.w	9000d1a6 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000d000:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000d004:	f000 8202 	beq.w	9000d40c <HAL_RCCEx_PeriphCLKConfig+0x968>
9000d008:	2601      	movs	r6, #1
9000d00a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d00c:	03d9      	lsls	r1, r3, #15
9000d00e:	d509      	bpl.n	9000d024 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000d010:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000d012:	2900      	cmp	r1, #0
9000d014:	f000 81f1 	beq.w	9000d3fa <HAL_RCCEx_PeriphCLKConfig+0x956>
9000d018:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d01c:	f000 819d 	beq.w	9000d35a <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000d020:	2601      	movs	r6, #1
9000d022:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d024:	009f      	lsls	r7, r3, #2
9000d026:	f100 80f1 	bmi.w	9000d20c <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d02a:	0398      	lsls	r0, r3, #14
9000d02c:	d50c      	bpl.n	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000d02e:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000d032:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000d036:	f000 81d8 	beq.w	9000d3ea <HAL_RCCEx_PeriphCLKConfig+0x946>
9000d03a:	d97e      	bls.n	9000d13a <HAL_RCCEx_PeriphCLKConfig+0x696>
9000d03c:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000d040:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000d044:	d07b      	beq.n	9000d13e <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000d046:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000d048:	02d9      	lsls	r1, r3, #11
9000d04a:	d506      	bpl.n	9000d05a <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000d04c:	4847      	ldr	r0, [pc, #284]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d04e:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000d050:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d052:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000d056:	4329      	orrs	r1, r5
9000d058:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000d05a:	00df      	lsls	r7, r3, #3
9000d05c:	d507      	bpl.n	9000d06e <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000d05e:	4843      	ldr	r0, [pc, #268]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d060:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000d064:	6901      	ldr	r1, [r0, #16]
9000d066:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000d06a:	4329      	orrs	r1, r5
9000d06c:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000d06e:	029d      	lsls	r5, r3, #10
9000d070:	d506      	bpl.n	9000d080 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000d072:	483e      	ldr	r0, [pc, #248]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d074:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000d076:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d078:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000d07c:	4329      	orrs	r1, r5
9000d07e:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000d080:	0058      	lsls	r0, r3, #1
9000d082:	d509      	bpl.n	9000d098 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000d084:	4939      	ldr	r1, [pc, #228]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d086:	6908      	ldr	r0, [r1, #16]
9000d088:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000d08c:	6108      	str	r0, [r1, #16]
9000d08e:	6908      	ldr	r0, [r1, #16]
9000d090:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000d094:	4328      	orrs	r0, r5
9000d096:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000d098:	2b00      	cmp	r3, #0
9000d09a:	da06      	bge.n	9000d0aa <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000d09c:	4833      	ldr	r0, [pc, #204]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d09e:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000d0a0:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000d0a2:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d0a6:	4329      	orrs	r1, r5
9000d0a8:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000d0aa:	0219      	lsls	r1, r3, #8
9000d0ac:	d507      	bpl.n	9000d0be <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000d0ae:	492f      	ldr	r1, [pc, #188]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d0b0:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000d0b4:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000d0b6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000d0ba:	4303      	orrs	r3, r0
9000d0bc:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000d0be:	07d3      	lsls	r3, r2, #31
9000d0c0:	f100 80b0 	bmi.w	9000d224 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d0c4:	0797      	lsls	r7, r2, #30
9000d0c6:	f100 80ba 	bmi.w	9000d23e <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d0ca:	0755      	lsls	r5, r2, #29
9000d0cc:	f100 80c4 	bmi.w	9000d258 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d0d0:	0710      	lsls	r0, r2, #28
9000d0d2:	f100 80ce 	bmi.w	9000d272 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d0d6:	06d1      	lsls	r1, r2, #27
9000d0d8:	f100 80d8 	bmi.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d0dc:	0692      	lsls	r2, r2, #26
9000d0de:	f100 8125 	bmi.w	9000d32c <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000d0e2:	1e30      	subs	r0, r6, #0
9000d0e4:	bf18      	it	ne
9000d0e6:	2001      	movne	r0, #1
}
9000d0e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d0ec:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000d0f0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000d0f4:	f43f aefc 	beq.w	9000cef0 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d0f8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000d0fc:	f43f aef8 	beq.w	9000cef0 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d100:	2601      	movs	r6, #1
9000d102:	4635      	mov	r5, r6
9000d104:	e6ff      	b.n	9000cf06 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d106:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000d10a:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000d10e:	f43f af11 	beq.w	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d112:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000d116:	f43f af0d 	beq.w	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d11a:	2601      	movs	r6, #1
9000d11c:	4635      	mov	r5, r6
9000d11e:	e714      	b.n	9000cf4a <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d120:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000d124:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000d128:	f43f af26 	beq.w	9000cf78 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d12c:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000d130:	f43f af22 	beq.w	9000cf78 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d134:	2601      	movs	r6, #1
9000d136:	4635      	mov	r5, r6
9000d138:	e729      	b.n	9000cf8e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000d13a:	2900      	cmp	r1, #0
9000d13c:	d183      	bne.n	9000d046 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000d13e:	2d00      	cmp	r5, #0
9000d140:	f040 8151 	bne.w	9000d3e6 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000d144:	4d09      	ldr	r5, [pc, #36]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d146:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000d148:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000d14c:	4301      	orrs	r1, r0
9000d14e:	6569      	str	r1, [r5, #84]	; 0x54
9000d150:	e77a      	b.n	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d152:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d154:	2d00      	cmp	r5, #0
9000d156:	f040 80fb 	bne.w	9000d350 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d15a:	4f04      	ldr	r7, [pc, #16]	; (9000d16c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d15c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000d15e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d160:	f021 0107 	bic.w	r1, r1, #7
9000d164:	4301      	orrs	r1, r0
9000d166:	6539      	str	r1, [r7, #80]	; 0x50
9000d168:	e4d7      	b.n	9000cb1a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d16a:	bf00      	nop
9000d16c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d170:	2101      	movs	r1, #1
9000d172:	f104 0008 	add.w	r0, r4, #8
9000d176:	f7ff fba1 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d17a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d17c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d180:	2d00      	cmp	r5, #0
9000d182:	f040 811a 	bne.w	9000d3ba <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000d186:	4fb7      	ldr	r7, [pc, #732]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d188:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000d18a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d18c:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d190:	4301      	orrs	r1, r0
9000d192:	6539      	str	r1, [r7, #80]	; 0x50
9000d194:	e5b6      	b.n	9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d196:	2101      	movs	r1, #1
9000d198:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d19c:	f7ff fc08 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d1a0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d1a2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d1a6:	2d00      	cmp	r5, #0
9000d1a8:	f040 811b 	bne.w	9000d3e2 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d1ac:	4fad      	ldr	r7, [pc, #692]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1ae:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000d1b2:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d1b4:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000d1b8:	4301      	orrs	r1, r0
9000d1ba:	6579      	str	r1, [r7, #84]	; 0x54
9000d1bc:	e726      	b.n	9000d00c <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d1be:	2102      	movs	r1, #2
9000d1c0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d1c4:	f7ff fbf4 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d1c8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d1ca:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d1ce:	2d00      	cmp	r5, #0
9000d1d0:	f040 8105 	bne.w	9000d3de <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d1d4:	4fa3      	ldr	r7, [pc, #652]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1d6:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000d1da:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d1dc:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000d1e0:	4301      	orrs	r1, r0
9000d1e2:	65b9      	str	r1, [r7, #88]	; 0x58
9000d1e4:	e700      	b.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d1e6:	2101      	movs	r1, #1
9000d1e8:	f104 0008 	add.w	r0, r4, #8
9000d1ec:	f7ff fb66 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d1f0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d1f2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d1f6:	2d00      	cmp	r5, #0
9000d1f8:	f040 80db 	bne.w	9000d3b2 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d1fc:	4f99      	ldr	r7, [pc, #612]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1fe:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000d200:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d202:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000d206:	4301      	orrs	r1, r0
9000d208:	6579      	str	r1, [r7, #84]	; 0x54
9000d20a:	e615      	b.n	9000ce38 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d20c:	2102      	movs	r1, #2
9000d20e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d212:	f7ff fbcd 	bl	9000c9b0 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d216:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d21a:	2800      	cmp	r0, #0
9000d21c:	f43f af05 	beq.w	9000d02a <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000d220:	2601      	movs	r6, #1
9000d222:	e702      	b.n	9000d02a <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d224:	2100      	movs	r1, #0
9000d226:	f104 0008 	add.w	r0, r4, #8
9000d22a:	f7ff fb47 	bl	9000c8bc <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d22e:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d230:	2800      	cmp	r0, #0
9000d232:	f43f af47 	beq.w	9000d0c4 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d236:	0797      	lsls	r7, r2, #30
9000d238:	4606      	mov	r6, r0
9000d23a:	f57f af46 	bpl.w	9000d0ca <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d23e:	2101      	movs	r1, #1
9000d240:	f104 0008 	add.w	r0, r4, #8
9000d244:	f7ff fb3a 	bl	9000c8bc <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d248:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d24a:	2800      	cmp	r0, #0
9000d24c:	f43f af3d 	beq.w	9000d0ca <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d250:	0755      	lsls	r5, r2, #29
9000d252:	4606      	mov	r6, r0
9000d254:	f57f af3c 	bpl.w	9000d0d0 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d258:	2102      	movs	r1, #2
9000d25a:	f104 0008 	add.w	r0, r4, #8
9000d25e:	f7ff fb2d 	bl	9000c8bc <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d262:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d264:	2800      	cmp	r0, #0
9000d266:	f43f af33 	beq.w	9000d0d0 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d26a:	4606      	mov	r6, r0
9000d26c:	0710      	lsls	r0, r2, #28
9000d26e:	f57f af32 	bpl.w	9000d0d6 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d272:	2100      	movs	r1, #0
9000d274:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d278:	f7ff fb9a 	bl	9000c9b0 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d27c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d27e:	2800      	cmp	r0, #0
9000d280:	f43f af29 	beq.w	9000d0d6 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d284:	06d1      	lsls	r1, r2, #27
9000d286:	4606      	mov	r6, r0
9000d288:	f57f af28 	bpl.w	9000d0dc <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d28c:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000d290:	2101      	movs	r1, #1
9000d292:	4628      	mov	r0, r5
9000d294:	f7ff fb8c 	bl	9000c9b0 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d298:	2800      	cmp	r0, #0
9000d29a:	f000 80c9 	beq.w	9000d430 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d29e:	6863      	ldr	r3, [r4, #4]
9000d2a0:	069b      	lsls	r3, r3, #26
9000d2a2:	d54c      	bpl.n	9000d33e <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000d2a4:	4606      	mov	r6, r0
9000d2a6:	e043      	b.n	9000d330 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d2a8:	4f6f      	ldr	r7, [pc, #444]	; (9000d468 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000d2aa:	683b      	ldr	r3, [r7, #0]
9000d2ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000d2b0:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d2b2:	f7fb fc4f 	bl	90008b54 <HAL_GetTick>
9000d2b6:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d2b8:	e006      	b.n	9000d2c8 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d2ba:	f7fb fc4b 	bl	90008b54 <HAL_GetTick>
9000d2be:	eba0 0008 	sub.w	r0, r0, r8
9000d2c2:	2864      	cmp	r0, #100	; 0x64
9000d2c4:	f200 81a0 	bhi.w	9000d608 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d2c8:	683b      	ldr	r3, [r7, #0]
9000d2ca:	05da      	lsls	r2, r3, #23
9000d2cc:	d5f5      	bpl.n	9000d2ba <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000d2ce:	2d00      	cmp	r5, #0
9000d2d0:	f040 81d4 	bne.w	9000d67c <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d2d4:	4a63      	ldr	r2, [pc, #396]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d2d6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000d2da:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000d2dc:	4059      	eors	r1, r3
9000d2de:	f411 7f40 	tst.w	r1, #768	; 0x300
9000d2e2:	d00b      	beq.n	9000d2fc <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d2e4:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d2e6:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d2e8:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d2ec:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000d2f0:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d2f2:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000d2f4:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000d2f8:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000d2fa:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d2fc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000d300:	f000 819e 	beq.w	9000d640 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d304:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000d308:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000d30c:	f000 81ac 	beq.w	9000d668 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000d310:	4954      	ldr	r1, [pc, #336]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d312:	690a      	ldr	r2, [r1, #16]
9000d314:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000d318:	610a      	str	r2, [r1, #16]
9000d31a:	4852      	ldr	r0, [pc, #328]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d31c:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d320:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000d322:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d324:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d328:	6701      	str	r1, [r0, #112]	; 0x70
9000d32a:	e553      	b.n	9000cdd4 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d32c:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d330:	2102      	movs	r1, #2
9000d332:	4628      	mov	r0, r5
9000d334:	f7ff fb3c 	bl	9000c9b0 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d338:	2800      	cmp	r0, #0
9000d33a:	f43f aed2 	beq.w	9000d0e2 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000d33e:	2001      	movs	r0, #1
}
9000d340:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000d344:	462e      	mov	r6, r5
9000d346:	e450      	b.n	9000cbea <HAL_RCCEx_PeriphCLKConfig+0x146>
9000d348:	462e      	mov	r6, r5
9000d34a:	e406      	b.n	9000cb5a <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000d34c:	462e      	mov	r6, r5
9000d34e:	e489      	b.n	9000cc64 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000d350:	462e      	mov	r6, r5
9000d352:	f7ff bbe2 	b.w	9000cb1a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d356:	462e      	mov	r6, r5
9000d358:	e423      	b.n	9000cba2 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d35a:	2102      	movs	r1, #2
9000d35c:	f104 0008 	add.w	r0, r4, #8
9000d360:	f7ff faac 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d364:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d366:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d36a:	2d00      	cmp	r5, #0
9000d36c:	d14c      	bne.n	9000d408 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000d36e:	4f3d      	ldr	r7, [pc, #244]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d370:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000d372:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d374:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000d378:	4301      	orrs	r1, r0
9000d37a:	64f9      	str	r1, [r7, #76]	; 0x4c
9000d37c:	e652      	b.n	9000d024 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d37e:	4839      	ldr	r0, [pc, #228]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d380:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d382:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d386:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d388:	e462      	b.n	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d38a:	4836      	ldr	r0, [pc, #216]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d38c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d38e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d392:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d394:	e41e      	b.n	9000cbd4 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d396:	4833      	ldr	r0, [pc, #204]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d398:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d39a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d39e:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d3a0:	f7ff bbd1 	b.w	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3a4:	482f      	ldr	r0, [pc, #188]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d3a6:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d3a8:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d3ac:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d3ae:	f7ff bbed 	b.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d3b2:	462e      	mov	r6, r5
9000d3b4:	e540      	b.n	9000ce38 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000d3b6:	462e      	mov	r6, r5
9000d3b8:	e5a5      	b.n	9000cf06 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000d3ba:	462e      	mov	r6, r5
9000d3bc:	e4a2      	b.n	9000cd04 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000d3be:	462e      	mov	r6, r5
9000d3c0:	e57f      	b.n	9000cec2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000d3c2:	462e      	mov	r6, r5
9000d3c4:	e42c      	b.n	9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000d3c6:	462e      	mov	r6, r5
9000d3c8:	e501      	b.n	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000d3ca:	462e      	mov	r6, r5
9000d3cc:	e46a      	b.n	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000d3ce:	462e      	mov	r6, r5
9000d3d0:	e5dd      	b.n	9000cf8e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000d3d2:	462e      	mov	r6, r5
9000d3d4:	e486      	b.n	9000cce4 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000d3d6:	462e      	mov	r6, r5
9000d3d8:	e5b7      	b.n	9000cf4a <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000d3da:	462e      	mov	r6, r5
9000d3dc:	e54c      	b.n	9000ce78 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000d3de:	462e      	mov	r6, r5
9000d3e0:	e602      	b.n	9000cfe8 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000d3e2:	462e      	mov	r6, r5
9000d3e4:	e612      	b.n	9000d00c <HAL_RCCEx_PeriphCLKConfig+0x568>
9000d3e6:	462e      	mov	r6, r5
9000d3e8:	e62e      	b.n	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3ea:	4f1e      	ldr	r7, [pc, #120]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d3ec:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000d3ee:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000d3f2:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000d3f4:	2d00      	cmp	r5, #0
9000d3f6:	d1f6      	bne.n	9000d3e6 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000d3f8:	e6a4      	b.n	9000d144 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3fa:	481a      	ldr	r0, [pc, #104]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d3fc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d3fe:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d402:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d404:	2d00      	cmp	r5, #0
9000d406:	d0b2      	beq.n	9000d36e <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000d408:	462e      	mov	r6, r5
9000d40a:	e60b      	b.n	9000d024 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d40c:	4815      	ldr	r0, [pc, #84]	; (9000d464 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d40e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d410:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d414:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d416:	2d00      	cmp	r5, #0
9000d418:	d1e3      	bne.n	9000d3e2 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000d41a:	e6c7      	b.n	9000d1ac <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d41c:	f104 0008 	add.w	r0, r4, #8
9000d420:	f7ff fa4c 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d424:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d426:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d42a:	2d00      	cmp	r5, #0
9000d42c:	d1d7      	bne.n	9000d3de <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000d42e:	e6d1      	b.n	9000d1d4 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d430:	6862      	ldr	r2, [r4, #4]
9000d432:	e653      	b.n	9000d0dc <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d434:	2102      	movs	r1, #2
9000d436:	f104 0008 	add.w	r0, r4, #8
9000d43a:	f7ff fa3f 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d43e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d440:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d444:	2d00      	cmp	r5, #0
9000d446:	d1bc      	bne.n	9000d3c2 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000d448:	f7ff bbe3 	b.w	9000cc12 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d44c:	2102      	movs	r1, #2
9000d44e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d452:	f7ff faad 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d456:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d458:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d45c:	2d00      	cmp	r5, #0
9000d45e:	d1ba      	bne.n	9000d3d6 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000d460:	e56b      	b.n	9000cf3a <HAL_RCCEx_PeriphCLKConfig+0x496>
9000d462:	bf00      	nop
9000d464:	58024400 	.word	0x58024400
9000d468:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d46c:	2102      	movs	r1, #2
9000d46e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d472:	f7ff fa9d 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d476:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d478:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d47c:	2d00      	cmp	r5, #0
9000d47e:	d1a6      	bne.n	9000d3ce <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000d480:	e57d      	b.n	9000cf7e <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d482:	4886      	ldr	r0, [pc, #536]	; (9000d69c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d484:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d486:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d48a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d48c:	2d00      	cmp	r5, #0
9000d48e:	d194      	bne.n	9000d3ba <HAL_RCCEx_PeriphCLKConfig+0x916>
9000d490:	e679      	b.n	9000d186 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d492:	2101      	movs	r1, #1
9000d494:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d498:	f7ff fa8a 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d49c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d49e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4a2:	2d00      	cmp	r5, #0
9000d4a4:	d191      	bne.n	9000d3ca <HAL_RCCEx_PeriphCLKConfig+0x926>
9000d4a6:	f7ff bbf6 	b.w	9000cc96 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d4aa:	2101      	movs	r1, #1
9000d4ac:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d4b0:	f7ff fa7e 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d4b4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d4b6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4ba:	2d00      	cmp	r5, #0
9000d4bc:	d189      	bne.n	9000d3d2 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000d4be:	e409      	b.n	9000ccd4 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d4c0:	2102      	movs	r1, #2
9000d4c2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d4c6:	f7ff fa73 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d4ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d4cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4d0:	2d00      	cmp	r5, #0
9000d4d2:	f47f af70 	bne.w	9000d3b6 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000d4d6:	e50e      	b.n	9000cef6 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d4d8:	2102      	movs	r1, #2
9000d4da:	f104 0008 	add.w	r0, r4, #8
9000d4de:	f7ff f9ed 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d4e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d4e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d4e8:	2d00      	cmp	r5, #0
9000d4ea:	f47f af6c 	bne.w	9000d3c6 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000d4ee:	e467      	b.n	9000cdc0 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d4f0:	2102      	movs	r1, #2
9000d4f2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d4f6:	f7ff fa5b 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d4fa:	2800      	cmp	r0, #0
9000d4fc:	f040 8094 	bne.w	9000d628 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d500:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d504:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d508:	e549      	b.n	9000cf9e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d50a:	2102      	movs	r1, #2
9000d50c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d510:	f7ff fa4e 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d514:	2800      	cmp	r0, #0
9000d516:	f040 808d 	bne.w	9000d634 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d51a:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d51e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d522:	e54a      	b.n	9000cfba <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d524:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d528:	f7ff bae9 	b.w	9000cafe <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d52c:	2100      	movs	r1, #0
9000d52e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d532:	f7ff fa3d 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d536:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d538:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d53c:	f7ff bb4a 	b.w	9000cbd4 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d540:	2100      	movs	r1, #0
9000d542:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d546:	f7ff fa33 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d54a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d54c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d550:	e600      	b.n	9000d154 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d552:	2100      	movs	r1, #0
9000d554:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d558:	f7ff fa2a 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d55c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d55e:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d562:	f7ff baf0 	b.w	9000cb46 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d566:	2102      	movs	r1, #2
9000d568:	3028      	adds	r0, #40	; 0x28
9000d56a:	f7ff fa21 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d56e:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000d570:	2e00      	cmp	r6, #0
9000d572:	f43f aab5 	beq.w	9000cae0 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000d576:	e7d5      	b.n	9000d524 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d578:	4848      	ldr	r0, [pc, #288]	; (9000d69c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000d57a:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d57c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d57e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d582:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d584:	e5e6      	b.n	9000d154 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d586:	2100      	movs	r1, #0
9000d588:	f104 0008 	add.w	r0, r4, #8
9000d58c:	f7ff f996 	bl	9000c8bc <RCCEx_PLL2_Config>
9000d590:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d592:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d596:	e5dd      	b.n	9000d154 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d598:	2100      	movs	r1, #0
9000d59a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d59e:	f7ff fa07 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d5a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d5a4:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d5a8:	f7ff bb52 	b.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d5ac:	2100      	movs	r1, #0
9000d5ae:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d5b2:	f7ff f9fd 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d5b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d5b8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d5bc:	f7ff bae6 	b.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d5c0:	2101      	movs	r1, #1
9000d5c2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d5c6:	f7ff f9f3 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d5ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d5cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5d0:	2d00      	cmp	r5, #0
9000d5d2:	f47f aef4 	bne.w	9000d3be <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000d5d6:	e46c      	b.n	9000ceb2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d5d8:	2101      	movs	r1, #1
9000d5da:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d5de:	f7ff f9e7 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d5e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d5e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5e8:	2d00      	cmp	r5, #0
9000d5ea:	f47f aef6 	bne.w	9000d3da <HAL_RCCEx_PeriphCLKConfig+0x936>
9000d5ee:	e43c      	b.n	9000ce6a <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d5f0:	2101      	movs	r1, #1
9000d5f2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d5f6:	f7ff f9db 	bl	9000c9b0 <RCCEx_PLL3_Config>
9000d5fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d5fc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d600:	2d00      	cmp	r5, #0
9000d602:	f47f aed6 	bne.w	9000d3b2 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000d606:	e5f9      	b.n	9000d1fc <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000d608:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d60a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d60e:	4635      	mov	r5, r6
9000d610:	f7ff bbe0 	b.w	9000cdd4 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d614:	2601      	movs	r6, #1
9000d616:	f7ff ba72 	b.w	9000cafe <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d61a:	4d20      	ldr	r5, [pc, #128]	; (9000d69c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d61c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000d61e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000d622:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000d624:	f7ff ba64 	b.w	9000caf0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d628:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000d62c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d62e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d632:	e4b4      	b.n	9000cf9e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d634:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000d638:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d63a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d63e:	e4bc      	b.n	9000cfba <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000d640:	f7fb fa88 	bl	90008b54 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d644:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000d69c <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000d648:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d64a:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d64e:	e004      	b.n	9000d65a <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d650:	f7fb fa80 	bl	90008b54 <HAL_GetTick>
9000d654:	1bc0      	subs	r0, r0, r7
9000d656:	4548      	cmp	r0, r9
9000d658:	d8d6      	bhi.n	9000d608 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d65a:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000d65e:	079b      	lsls	r3, r3, #30
9000d660:	d5f6      	bpl.n	9000d650 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d662:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000d666:	e64d      	b.n	9000d304 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000d668:	480c      	ldr	r0, [pc, #48]	; (9000d69c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d66a:	4a0d      	ldr	r2, [pc, #52]	; (9000d6a0 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000d66c:	6901      	ldr	r1, [r0, #16]
9000d66e:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d672:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000d676:	430a      	orrs	r2, r1
9000d678:	6102      	str	r2, [r0, #16]
9000d67a:	e64e      	b.n	9000d31a <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d67c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d680:	462e      	mov	r6, r5
9000d682:	f7ff bba7 	b.w	9000cdd4 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d686:	2601      	movs	r6, #1
9000d688:	4635      	mov	r5, r6
9000d68a:	f7ff bbf5 	b.w	9000ce78 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000d68e:	2601      	movs	r6, #1
9000d690:	4635      	mov	r5, r6
9000d692:	f7ff bb9c 	b.w	9000cdce <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d696:	2601      	movs	r6, #1
9000d698:	4635      	mov	r5, r6
9000d69a:	e412      	b.n	9000cec2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000d69c:	58024400 	.word	0x58024400
9000d6a0:	00ffffcf 	.word	0x00ffffcf

9000d6a4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d6a4:	b318      	cbz	r0, 9000d6ee <HAL_SDRAM_Init+0x4a>
{
9000d6a6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d6a8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000d6ac:	4604      	mov	r4, r0
9000d6ae:	460d      	mov	r5, r1
9000d6b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d6b4:	b1b3      	cbz	r3, 9000d6e4 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d6b6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d6b8:	2302      	movs	r3, #2
9000d6ba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d6be:	f851 0b04 	ldr.w	r0, [r1], #4
9000d6c2:	f000 fa39 	bl	9000db38 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d6c6:	6862      	ldr	r2, [r4, #4]
9000d6c8:	4629      	mov	r1, r5
9000d6ca:	6820      	ldr	r0, [r4, #0]
9000d6cc:	f000 fa72 	bl	9000dbb4 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d6d0:	4a08      	ldr	r2, [pc, #32]	; (9000d6f4 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d6d2:	2101      	movs	r1, #1

  return HAL_OK;
9000d6d4:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d6d6:	6813      	ldr	r3, [r2, #0]
9000d6d8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000d6dc:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d6de:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000d6e2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d6e4:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d6e8:	f7f5 fdc6 	bl	90003278 <HAL_SDRAM_MspInit>
9000d6ec:	e7e3      	b.n	9000d6b6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d6ee:	2001      	movs	r0, #1
}
9000d6f0:	4770      	bx	lr
9000d6f2:	bf00      	nop
9000d6f4:	52004000 	.word	0x52004000

9000d6f8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d6f8:	b510      	push	{r4, lr}
9000d6fa:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d6fc:	f7f5 fe38 	bl	90003370 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d700:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d704:	f000 faa4 	bl	9000dc50 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d708:	2000      	movs	r0, #0
9000d70a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d70e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000d712:	bd10      	pop	{r4, pc}

9000d714 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d714:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d716:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000d71a:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d71c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d71e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d720:	d004      	beq.n	9000d72c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d722:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000d726:	2e01      	cmp	r6, #1
9000d728:	d001      	beq.n	9000d72e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d72a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d72c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d72e:	2302      	movs	r3, #2
9000d730:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d732:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d734:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d738:	f000 fa9e 	bl	9000dc78 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d73c:	682b      	ldr	r3, [r5, #0]
9000d73e:	2b02      	cmp	r3, #2
9000d740:	d003      	beq.n	9000d74a <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000d742:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d744:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000d748:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d74a:	2305      	movs	r3, #5
  return HAL_OK;
9000d74c:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d74e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000d752:	bd70      	pop	{r4, r5, r6, pc}

9000d754 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d754:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d756:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000d75a:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d75c:	2b02      	cmp	r3, #2
9000d75e:	b2d8      	uxtb	r0, r3
9000d760:	d005      	beq.n	9000d76e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d762:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000d766:	2b01      	cmp	r3, #1
9000d768:	b2dd      	uxtb	r5, r3
9000d76a:	d001      	beq.n	9000d770 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d76c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d76e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d770:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d772:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d774:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d778:	f000 fa96 	bl	9000dca8 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d77c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d77e:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000d782:	bd38      	pop	{r3, r4, r5, pc}

9000d784 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d784:	4770      	bx	lr
9000d786:	bf00      	nop

9000d788 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d788:	2800      	cmp	r0, #0
9000d78a:	f000 80a5 	beq.w	9000d8d8 <HAL_TIM_Base_Init+0x150>
{
9000d78e:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d790:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d794:	4604      	mov	r4, r0
9000d796:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d79a:	2b00      	cmp	r3, #0
9000d79c:	d076      	beq.n	9000d88c <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d79e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d7a0:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d7a2:	494e      	ldr	r1, [pc, #312]	; (9000d8dc <HAL_TIM_Base_Init+0x154>)
9000d7a4:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000d7a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d7ac:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000d7b0:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d7b2:	fab1 f181 	clz	r1, r1
9000d7b6:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000d7ba:	d027      	beq.n	9000d80c <HAL_TIM_Base_Init+0x84>
9000d7bc:	bb31      	cbnz	r1, 9000d80c <HAL_TIM_Base_Init+0x84>
9000d7be:	4848      	ldr	r0, [pc, #288]	; (9000d8e0 <HAL_TIM_Base_Init+0x158>)
9000d7c0:	4d48      	ldr	r5, [pc, #288]	; (9000d8e4 <HAL_TIM_Base_Init+0x15c>)
9000d7c2:	4282      	cmp	r2, r0
9000d7c4:	d067      	beq.n	9000d896 <HAL_TIM_Base_Init+0x10e>
9000d7c6:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000d7ca:	4282      	cmp	r2, r0
9000d7cc:	d063      	beq.n	9000d896 <HAL_TIM_Base_Init+0x10e>
9000d7ce:	1b55      	subs	r5, r2, r5
9000d7d0:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000d7d4:	fab5 f585 	clz	r5, r5
9000d7d8:	4282      	cmp	r2, r0
9000d7da:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000d7de:	d063      	beq.n	9000d8a8 <HAL_TIM_Base_Init+0x120>
9000d7e0:	2d00      	cmp	r5, #0
9000d7e2:	d161      	bne.n	9000d8a8 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d7e4:	4840      	ldr	r0, [pc, #256]	; (9000d8e8 <HAL_TIM_Base_Init+0x160>)
9000d7e6:	4941      	ldr	r1, [pc, #260]	; (9000d8ec <HAL_TIM_Base_Init+0x164>)
9000d7e8:	428a      	cmp	r2, r1
9000d7ea:	bf18      	it	ne
9000d7ec:	4282      	cmpne	r2, r0
9000d7ee:	d065      	beq.n	9000d8bc <HAL_TIM_Base_Init+0x134>
9000d7f0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000d7f4:	428a      	cmp	r2, r1
9000d7f6:	d061      	beq.n	9000d8bc <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d7f8:	69a0      	ldr	r0, [r4, #24]
9000d7fa:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d7fe:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d800:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000d802:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d804:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d806:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d808:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d80a:	e023      	b.n	9000d854 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d80c:	4d35      	ldr	r5, [pc, #212]	; (9000d8e4 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d80e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d812:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d814:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000d816:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d818:	fab5 f585 	clz	r5, r5
9000d81c:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d81e:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d820:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d824:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d826:	69a0      	ldr	r0, [r4, #24]
9000d828:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000d82c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000d82e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d830:	68e3      	ldr	r3, [r4, #12]
9000d832:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d834:	6863      	ldr	r3, [r4, #4]
9000d836:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d838:	b951      	cbnz	r1, 9000d850 <HAL_TIM_Base_Init+0xc8>
9000d83a:	b94d      	cbnz	r5, 9000d850 <HAL_TIM_Base_Init+0xc8>
9000d83c:	492a      	ldr	r1, [pc, #168]	; (9000d8e8 <HAL_TIM_Base_Init+0x160>)
9000d83e:	4b2b      	ldr	r3, [pc, #172]	; (9000d8ec <HAL_TIM_Base_Init+0x164>)
9000d840:	429a      	cmp	r2, r3
9000d842:	bf18      	it	ne
9000d844:	428a      	cmpne	r2, r1
9000d846:	d003      	beq.n	9000d850 <HAL_TIM_Base_Init+0xc8>
9000d848:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000d84c:	429a      	cmp	r2, r3
9000d84e:	d101      	bne.n	9000d854 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d850:	6963      	ldr	r3, [r4, #20]
9000d852:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d854:	2301      	movs	r3, #1
  return HAL_OK;
9000d856:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000d858:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d85a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d85e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000d862:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000d866:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000d86a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000d86e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000d872:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d876:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000d87a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000d87e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000d882:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d886:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d88a:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000d88c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d890:	f7ff ff78 	bl	9000d784 <HAL_TIM_Base_MspInit>
9000d894:	e783      	b.n	9000d79e <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d896:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d898:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d89c:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d89e:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000d8a2:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d8a4:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d8a6:	e7ba      	b.n	9000d81e <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000d8a8:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d8aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d8ae:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d8b0:	480f      	ldr	r0, [pc, #60]	; (9000d8f0 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d8b2:	4282      	cmp	r2, r0
9000d8b4:	d0b3      	beq.n	9000d81e <HAL_TIM_Base_Init+0x96>
9000d8b6:	2d00      	cmp	r5, #0
9000d8b8:	d1b1      	bne.n	9000d81e <HAL_TIM_Base_Init+0x96>
9000d8ba:	e793      	b.n	9000d7e4 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d8bc:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d8be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d8c2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d8c4:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d8c6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d8c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000d8cc:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000d8ce:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000d8d0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d8d2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d8d4:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d8d6:	e7b1      	b.n	9000d83c <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000d8d8:	2001      	movs	r0, #1
}
9000d8da:	4770      	bx	lr
9000d8dc:	40010000 	.word	0x40010000
9000d8e0:	40000400 	.word	0x40000400
9000d8e4:	40010400 	.word	0x40010400
9000d8e8:	40014000 	.word	0x40014000
9000d8ec:	40014400 	.word	0x40014400
9000d8f0:	40000c00 	.word	0x40000c00

9000d8f4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d8f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d8f8:	2b01      	cmp	r3, #1
9000d8fa:	d141      	bne.n	9000d980 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d8fc:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d8fe:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d900:	4b24      	ldr	r3, [pc, #144]	; (9000d994 <HAL_TIM_Base_Start_IT+0xa0>)
9000d902:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000d906:	bf18      	it	ne
9000d908:	429a      	cmpne	r2, r3
{
9000d90a:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d90c:	bf0c      	ite	eq
9000d90e:	2301      	moveq	r3, #1
9000d910:	2300      	movne	r3, #0
9000d912:	4d21      	ldr	r5, [pc, #132]	; (9000d998 <HAL_TIM_Base_Start_IT+0xa4>)
9000d914:	4c21      	ldr	r4, [pc, #132]	; (9000d99c <HAL_TIM_Base_Start_IT+0xa8>)
9000d916:	42aa      	cmp	r2, r5
9000d918:	bf08      	it	eq
9000d91a:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d91e:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d922:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d924:	42a2      	cmp	r2, r4
9000d926:	bf08      	it	eq
9000d928:	f043 0301 	orreq.w	r3, r3, #1
9000d92c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d930:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d934:	481a      	ldr	r0, [pc, #104]	; (9000d9a0 <HAL_TIM_Base_Start_IT+0xac>)
9000d936:	42a2      	cmp	r2, r4
9000d938:	bf08      	it	eq
9000d93a:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d93e:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d940:	4282      	cmp	r2, r0
9000d942:	bf08      	it	eq
9000d944:	f043 0301 	orreq.w	r3, r3, #1
9000d948:	4916      	ldr	r1, [pc, #88]	; (9000d9a4 <HAL_TIM_Base_Start_IT+0xb0>)
9000d94a:	428a      	cmp	r2, r1
9000d94c:	bf08      	it	eq
9000d94e:	f043 0301 	orreq.w	r3, r3, #1
9000d952:	b933      	cbnz	r3, 9000d962 <HAL_TIM_Base_Start_IT+0x6e>
9000d954:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000d958:	1a10      	subs	r0, r2, r0
9000d95a:	fab0 f080 	clz	r0, r0
9000d95e:	0940      	lsrs	r0, r0, #5
9000d960:	b198      	cbz	r0, 9000d98a <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d962:	6891      	ldr	r1, [r2, #8]
9000d964:	4b10      	ldr	r3, [pc, #64]	; (9000d9a8 <HAL_TIM_Base_Start_IT+0xb4>)
9000d966:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d968:	2b06      	cmp	r3, #6
9000d96a:	d00b      	beq.n	9000d984 <HAL_TIM_Base_Start_IT+0x90>
9000d96c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000d970:	d008      	beq.n	9000d984 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000d972:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000d974:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000d976:	f043 0301 	orr.w	r3, r3, #1
9000d97a:	6013      	str	r3, [r2, #0]
}
9000d97c:	bc30      	pop	{r4, r5}
9000d97e:	4770      	bx	lr
    return HAL_ERROR;
9000d980:	2001      	movs	r0, #1
}
9000d982:	4770      	bx	lr
  return HAL_OK;
9000d984:	2000      	movs	r0, #0
}
9000d986:	bc30      	pop	{r4, r5}
9000d988:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000d98a:	6813      	ldr	r3, [r2, #0]
9000d98c:	f043 0301 	orr.w	r3, r3, #1
9000d990:	6013      	str	r3, [r2, #0]
9000d992:	e7f3      	b.n	9000d97c <HAL_TIM_Base_Start_IT+0x88>
9000d994:	40010000 	.word	0x40010000
9000d998:	40000400 	.word	0x40000400
9000d99c:	40000800 	.word	0x40000800
9000d9a0:	40010400 	.word	0x40010400
9000d9a4:	40001800 	.word	0x40001800
9000d9a8:	00010007 	.word	0x00010007

9000d9ac <HAL_TIM_OC_DelayElapsedCallback>:
9000d9ac:	4770      	bx	lr
9000d9ae:	bf00      	nop

9000d9b0 <HAL_TIM_IC_CaptureCallback>:
9000d9b0:	4770      	bx	lr
9000d9b2:	bf00      	nop

9000d9b4 <HAL_TIM_PWM_PulseFinishedCallback>:
9000d9b4:	4770      	bx	lr
9000d9b6:	bf00      	nop

9000d9b8 <HAL_TIM_TriggerCallback>:
9000d9b8:	4770      	bx	lr
9000d9ba:	bf00      	nop

9000d9bc <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000d9bc:	6803      	ldr	r3, [r0, #0]
9000d9be:	691a      	ldr	r2, [r3, #16]
9000d9c0:	0791      	lsls	r1, r2, #30
{
9000d9c2:	b510      	push	{r4, lr}
9000d9c4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000d9c6:	d502      	bpl.n	9000d9ce <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000d9c8:	68da      	ldr	r2, [r3, #12]
9000d9ca:	0792      	lsls	r2, r2, #30
9000d9cc:	d468      	bmi.n	9000daa0 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000d9ce:	691a      	ldr	r2, [r3, #16]
9000d9d0:	0752      	lsls	r2, r2, #29
9000d9d2:	d502      	bpl.n	9000d9da <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000d9d4:	68da      	ldr	r2, [r3, #12]
9000d9d6:	0750      	lsls	r0, r2, #29
9000d9d8:	d44f      	bmi.n	9000da7a <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000d9da:	691a      	ldr	r2, [r3, #16]
9000d9dc:	0711      	lsls	r1, r2, #28
9000d9de:	d502      	bpl.n	9000d9e6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000d9e0:	68da      	ldr	r2, [r3, #12]
9000d9e2:	0712      	lsls	r2, r2, #28
9000d9e4:	d437      	bmi.n	9000da56 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000d9e6:	691a      	ldr	r2, [r3, #16]
9000d9e8:	06d0      	lsls	r0, r2, #27
9000d9ea:	d502      	bpl.n	9000d9f2 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000d9ec:	68da      	ldr	r2, [r3, #12]
9000d9ee:	06d1      	lsls	r1, r2, #27
9000d9f0:	d41e      	bmi.n	9000da30 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000d9f2:	691a      	ldr	r2, [r3, #16]
9000d9f4:	07d2      	lsls	r2, r2, #31
9000d9f6:	d502      	bpl.n	9000d9fe <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000d9f8:	68da      	ldr	r2, [r3, #12]
9000d9fa:	07d0      	lsls	r0, r2, #31
9000d9fc:	d469      	bmi.n	9000dad2 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000d9fe:	691a      	ldr	r2, [r3, #16]
9000da00:	0611      	lsls	r1, r2, #24
9000da02:	d502      	bpl.n	9000da0a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000da04:	68da      	ldr	r2, [r3, #12]
9000da06:	0612      	lsls	r2, r2, #24
9000da08:	d46b      	bmi.n	9000dae2 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000da0a:	691a      	ldr	r2, [r3, #16]
9000da0c:	05d0      	lsls	r0, r2, #23
9000da0e:	d502      	bpl.n	9000da16 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000da10:	68da      	ldr	r2, [r3, #12]
9000da12:	0611      	lsls	r1, r2, #24
9000da14:	d46d      	bmi.n	9000daf2 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000da16:	691a      	ldr	r2, [r3, #16]
9000da18:	0652      	lsls	r2, r2, #25
9000da1a:	d502      	bpl.n	9000da22 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000da1c:	68da      	ldr	r2, [r3, #12]
9000da1e:	0650      	lsls	r0, r2, #25
9000da20:	d46f      	bmi.n	9000db02 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000da22:	691a      	ldr	r2, [r3, #16]
9000da24:	0691      	lsls	r1, r2, #26
9000da26:	d502      	bpl.n	9000da2e <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000da28:	68da      	ldr	r2, [r3, #12]
9000da2a:	0692      	lsls	r2, r2, #26
9000da2c:	d449      	bmi.n	9000dac2 <HAL_TIM_IRQHandler+0x106>
}
9000da2e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000da30:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000da34:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000da36:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000da38:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000da3a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000da3c:	69db      	ldr	r3, [r3, #28]
9000da3e:	f413 7f40 	tst.w	r3, #768	; 0x300
9000da42:	d16f      	bne.n	9000db24 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000da44:	f7ff ffb2 	bl	9000d9ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000da48:	4620      	mov	r0, r4
9000da4a:	f7ff ffb3 	bl	9000d9b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da4e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000da50:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da52:	7722      	strb	r2, [r4, #28]
9000da54:	e7cd      	b.n	9000d9f2 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000da56:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000da5a:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000da5c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000da5e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000da60:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000da62:	69db      	ldr	r3, [r3, #28]
9000da64:	079b      	lsls	r3, r3, #30
9000da66:	d15a      	bne.n	9000db1e <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000da68:	f7ff ffa0 	bl	9000d9ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000da6c:	4620      	mov	r0, r4
9000da6e:	f7ff ffa1 	bl	9000d9b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da72:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000da74:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da76:	7722      	strb	r2, [r4, #28]
9000da78:	e7b5      	b.n	9000d9e6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000da7a:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000da7e:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000da80:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000da82:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000da84:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000da86:	699b      	ldr	r3, [r3, #24]
9000da88:	f413 7f40 	tst.w	r3, #768	; 0x300
9000da8c:	d144      	bne.n	9000db18 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000da8e:	f7ff ff8d 	bl	9000d9ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000da92:	4620      	mov	r0, r4
9000da94:	f7ff ff8e 	bl	9000d9b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da98:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000da9a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000da9c:	7722      	strb	r2, [r4, #28]
9000da9e:	e79c      	b.n	9000d9da <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000daa0:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000daa4:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000daa6:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000daa8:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000daaa:	699b      	ldr	r3, [r3, #24]
9000daac:	0799      	lsls	r1, r3, #30
9000daae:	d130      	bne.n	9000db12 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000dab0:	f7ff ff7c 	bl	9000d9ac <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000dab4:	4620      	mov	r0, r4
9000dab6:	f7ff ff7d 	bl	9000d9b4 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000daba:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000dabc:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dabe:	7722      	strb	r2, [r4, #28]
9000dac0:	e785      	b.n	9000d9ce <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000dac2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000dac6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000dac8:	611a      	str	r2, [r3, #16]
}
9000daca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000dace:	f000 b82d 	b.w	9000db2c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000dad2:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000dad6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000dad8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000dada:	f7f5 fa31 	bl	90002f40 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000dade:	6823      	ldr	r3, [r4, #0]
9000dae0:	e78d      	b.n	9000d9fe <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000dae2:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000dae6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000dae8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000daea:	f000 f821 	bl	9000db30 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000daee:	6823      	ldr	r3, [r4, #0]
9000daf0:	e78b      	b.n	9000da0a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000daf2:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000daf6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000daf8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000dafa:	f000 f81b 	bl	9000db34 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000dafe:	6823      	ldr	r3, [r4, #0]
9000db00:	e789      	b.n	9000da16 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000db02:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000db06:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000db08:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000db0a:	f7ff ff55 	bl	9000d9b8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000db0e:	6823      	ldr	r3, [r4, #0]
9000db10:	e787      	b.n	9000da22 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000db12:	f7ff ff4d 	bl	9000d9b0 <HAL_TIM_IC_CaptureCallback>
9000db16:	e7d0      	b.n	9000daba <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000db18:	f7ff ff4a 	bl	9000d9b0 <HAL_TIM_IC_CaptureCallback>
9000db1c:	e7bc      	b.n	9000da98 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000db1e:	f7ff ff47 	bl	9000d9b0 <HAL_TIM_IC_CaptureCallback>
9000db22:	e7a6      	b.n	9000da72 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000db24:	f7ff ff44 	bl	9000d9b0 <HAL_TIM_IC_CaptureCallback>
9000db28:	e791      	b.n	9000da4e <HAL_TIM_IRQHandler+0x92>
9000db2a:	bf00      	nop

9000db2c <HAL_TIMEx_CommutCallback>:
9000db2c:	4770      	bx	lr
9000db2e:	bf00      	nop

9000db30 <HAL_TIMEx_BreakCallback>:
9000db30:	4770      	bx	lr
9000db32:	bf00      	nop

9000db34 <HAL_TIMEx_Break2Callback>:
9000db34:	4770      	bx	lr
9000db36:	bf00      	nop

9000db38 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000db38:	680b      	ldr	r3, [r1, #0]
{
9000db3a:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000db3c:	b9d3      	cbnz	r3, 9000db74 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000db3e:	6804      	ldr	r4, [r0, #0]
9000db40:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000db44:	684a      	ldr	r2, [r1, #4]
9000db46:	4023      	ands	r3, r4
9000db48:	4313      	orrs	r3, r2
9000db4a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000db4e:	4323      	orrs	r3, r4
9000db50:	4313      	orrs	r3, r2
9000db52:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000db56:	4323      	orrs	r3, r4
9000db58:	4313      	orrs	r3, r2
9000db5a:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000db5e:	4323      	orrs	r3, r4
9000db60:	4313      	orrs	r3, r2
9000db62:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000db66:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000db68:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000db6c:	4313      	orrs	r3, r2
9000db6e:	6003      	str	r3, [r0, #0]
}
9000db70:	2000      	movs	r0, #0
9000db72:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000db74:	6802      	ldr	r2, [r0, #0]
9000db76:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000db7a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000db7e:	4322      	orrs	r2, r4
9000db80:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000db82:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000db84:	4b0a      	ldr	r3, [pc, #40]	; (9000dbb0 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000db86:	4322      	orrs	r2, r4
9000db88:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000db8a:	6842      	ldr	r2, [r0, #4]
9000db8c:	4013      	ands	r3, r2
9000db8e:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000db92:	4323      	orrs	r3, r4
9000db94:	4313      	orrs	r3, r2
9000db96:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000db9a:	4323      	orrs	r3, r4
9000db9c:	4313      	orrs	r3, r2
9000db9e:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000dba2:	4323      	orrs	r3, r4
}
9000dba4:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dba8:	4313      	orrs	r3, r2
9000dbaa:	6043      	str	r3, [r0, #4]
}
9000dbac:	2000      	movs	r0, #0
9000dbae:	4770      	bx	lr
9000dbb0:	ffff8000 	.word	0xffff8000

9000dbb4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000dbb4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000dbb6:	bb0a      	cbnz	r2, 9000dbfc <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dbb8:	6883      	ldr	r3, [r0, #8]
9000dbba:	e9d1 2400 	ldrd	r2, r4, [r1]
9000dbbe:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000dbc2:	3c01      	subs	r4, #1
9000dbc4:	3a01      	subs	r2, #1
9000dbc6:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000dbca:	4313      	orrs	r3, r2
9000dbcc:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000dbd0:	3c01      	subs	r4, #1
9000dbd2:	3a01      	subs	r2, #1
9000dbd4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000dbd8:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000dbdc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000dbe0:	698a      	ldr	r2, [r1, #24]
9000dbe2:	3d01      	subs	r5, #1
9000dbe4:	1e61      	subs	r1, r4, #1
9000dbe6:	3a01      	subs	r2, #1
9000dbe8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000dbec:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000dbf0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000dbf4:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dbf6:	6083      	str	r3, [r0, #8]
}
9000dbf8:	2000      	movs	r0, #0
9000dbfa:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dbfc:	6885      	ldr	r5, [r0, #8]
9000dbfe:	68ca      	ldr	r2, [r1, #12]
9000dc00:	4b12      	ldr	r3, [pc, #72]	; (9000dc4c <FMC_SDRAM_Timing_Init+0x98>)
9000dc02:	1e54      	subs	r4, r2, #1
9000dc04:	694a      	ldr	r2, [r1, #20]
9000dc06:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dc08:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dc0a:	3a01      	subs	r2, #1
9000dc0c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dc10:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dc14:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dc18:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000dc1c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dc1e:	68c3      	ldr	r3, [r0, #12]
9000dc20:	3c01      	subs	r4, #1
9000dc22:	3a01      	subs	r2, #1
9000dc24:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000dc28:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000dc2c:	690c      	ldr	r4, [r1, #16]
9000dc2e:	4313      	orrs	r3, r2
9000dc30:	698a      	ldr	r2, [r1, #24]
9000dc32:	1e61      	subs	r1, r4, #1
9000dc34:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000dc38:	3a01      	subs	r2, #1
9000dc3a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000dc3e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000dc42:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dc44:	60c3      	str	r3, [r0, #12]
}
9000dc46:	2000      	movs	r0, #0
9000dc48:	4770      	bx	lr
9000dc4a:	bf00      	nop
9000dc4c:	ff0f0fff 	.word	0xff0f0fff

9000dc50 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000dc50:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000dc52:	2200      	movs	r2, #0
{
9000dc54:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000dc56:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000dc5a:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000dc5e:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000dc62:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000dc66:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000dc68:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000dc6c:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000dc6e:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000dc70:	619a      	str	r2, [r3, #24]
}
9000dc72:	bc30      	pop	{r4, r5}
9000dc74:	4770      	bx	lr
9000dc76:	bf00      	nop

9000dc78 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000dc78:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000dc7a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000dc7e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000dc80:	6900      	ldr	r0, [r0, #16]
9000dc82:	4323      	orrs	r3, r4
9000dc84:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000dc88:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000dc8c:	4c05      	ldr	r4, [pc, #20]	; (9000dca4 <FMC_SDRAM_SendCommand+0x2c>)
9000dc8e:	3901      	subs	r1, #1
9000dc90:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000dc92:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000dc94:	4323      	orrs	r3, r4
}
9000dc96:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000dc9a:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000dc9e:	6113      	str	r3, [r2, #16]
}
9000dca0:	4770      	bx	lr
9000dca2:	bf00      	nop
9000dca4:	ffc00000 	.word	0xffc00000

9000dca8 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000dca8:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000dcaa:	4b05      	ldr	r3, [pc, #20]	; (9000dcc0 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000dcac:	2000      	movs	r0, #0
{
9000dcae:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000dcb0:	6954      	ldr	r4, [r2, #20]
9000dcb2:	4023      	ands	r3, r4
}
9000dcb4:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000dcb8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000dcbc:	6151      	str	r1, [r2, #20]
}
9000dcbe:	4770      	bx	lr
9000dcc0:	ffffc001 	.word	0xffffc001

9000dcc4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000dcc4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000dcc6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000dcca:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000dccc:	f002 fcdc 	bl	90010688 <xTaskGetSchedulerState>
9000dcd0:	2801      	cmp	r0, #1
9000dcd2:	d100      	bne.n	9000dcd6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000dcd4:	bd08      	pop	{r3, pc}
9000dcd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000dcda:	f000 bcdb 	b.w	9000e694 <xPortSysTickHandler>
9000dcde:	bf00      	nop

9000dce0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000dce0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000dce4:	b92b      	cbnz	r3, 9000dcf2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000dce6:	4b06      	ldr	r3, [pc, #24]	; (9000dd00 <osKernelInitialize+0x20>)
9000dce8:	6818      	ldr	r0, [r3, #0]
9000dcea:	b928      	cbnz	r0, 9000dcf8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000dcec:	2201      	movs	r2, #1
9000dcee:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000dcf0:	4770      	bx	lr
    stat = osErrorISR;
9000dcf2:	f06f 0005 	mvn.w	r0, #5
9000dcf6:	4770      	bx	lr
    } else {
      stat = osError;
9000dcf8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000dcfc:	4770      	bx	lr
9000dcfe:	bf00      	nop
9000dd00:	24020564 	.word	0x24020564

9000dd04 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000dd04:	b510      	push	{r4, lr}
9000dd06:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000dd0a:	b974      	cbnz	r4, 9000dd2a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000dd0c:	4b08      	ldr	r3, [pc, #32]	; (9000dd30 <osKernelStart+0x2c>)
9000dd0e:	681a      	ldr	r2, [r3, #0]
9000dd10:	2a01      	cmp	r2, #1
9000dd12:	d107      	bne.n	9000dd24 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000dd14:	4907      	ldr	r1, [pc, #28]	; (9000dd34 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000dd16:	2202      	movs	r2, #2
9000dd18:	77cc      	strb	r4, [r1, #31]
9000dd1a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000dd1c:	f002 fa42 	bl	900101a4 <vTaskStartScheduler>
      stat = osOK;
9000dd20:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000dd22:	bd10      	pop	{r4, pc}
      stat = osError;
9000dd24:	f04f 30ff 	mov.w	r0, #4294967295
}
9000dd28:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dd2a:	f06f 0005 	mvn.w	r0, #5
}
9000dd2e:	bd10      	pop	{r4, pc}
9000dd30:	24020564 	.word	0x24020564
9000dd34:	e000ed00 	.word	0xe000ed00

9000dd38 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dd38:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000dd3a:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dd3c:	b087      	sub	sp, #28
9000dd3e:	4614      	mov	r4, r2
  hTask = NULL;
9000dd40:	9505      	str	r5, [sp, #20]
9000dd42:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000dd46:	bb5a      	cbnz	r2, 9000dda0 <osThreadNew+0x68>
9000dd48:	4606      	mov	r6, r0
9000dd4a:	b348      	cbz	r0, 9000dda0 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000dd4c:	b1e4      	cbz	r4, 9000dd88 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000dd4e:	69a7      	ldr	r7, [r4, #24]
9000dd50:	bb4f      	cbnz	r7, 9000dda6 <osThreadNew+0x6e>
9000dd52:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dd54:	6863      	ldr	r3, [r4, #4]
9000dd56:	07db      	lsls	r3, r3, #31
9000dd58:	d422      	bmi.n	9000dda0 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000dd5a:	6963      	ldr	r3, [r4, #20]
9000dd5c:	b33b      	cbz	r3, 9000ddae <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000dd5e:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dd62:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000dd64:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dd66:	b338      	cbz	r0, 9000ddb8 <osThreadNew+0x80>
9000dd68:	68e2      	ldr	r2, [r4, #12]
9000dd6a:	2a5f      	cmp	r2, #95	; 0x5f
9000dd6c:	d918      	bls.n	9000dda0 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000dd6e:	6924      	ldr	r4, [r4, #16]
9000dd70:	b1b3      	cbz	r3, 9000dda0 <osThreadNew+0x68>
9000dd72:	b1ac      	cbz	r4, 9000dda0 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000dd74:	460b      	mov	r3, r1
9000dd76:	4662      	mov	r2, ip
9000dd78:	4629      	mov	r1, r5
9000dd7a:	9700      	str	r7, [sp, #0]
9000dd7c:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000dd80:	4630      	mov	r0, r6
9000dd82:	f002 f873 	bl	9000fe6c <xTaskCreateStatic>
9000dd86:	e00c      	b.n	9000dda2 <osThreadNew+0x6a>
9000dd88:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000dd8a:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dd8c:	460b      	mov	r3, r1
9000dd8e:	4621      	mov	r1, r4
9000dd90:	ac05      	add	r4, sp, #20
9000dd92:	4630      	mov	r0, r6
9000dd94:	9700      	str	r7, [sp, #0]
9000dd96:	9401      	str	r4, [sp, #4]
9000dd98:	f002 f912 	bl	9000ffc0 <xTaskCreate>
9000dd9c:	2801      	cmp	r0, #1
9000dd9e:	d009      	beq.n	9000ddb4 <osThreadNew+0x7c>
        return (NULL);
9000dda0:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000dda2:	b007      	add	sp, #28
9000dda4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dda6:	1e7a      	subs	r2, r7, #1
9000dda8:	2a37      	cmp	r2, #55	; 0x37
9000ddaa:	d9d3      	bls.n	9000dd54 <osThreadNew+0x1c>
9000ddac:	e7f8      	b.n	9000dda0 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000ddae:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000ddb2:	e7d6      	b.n	9000dd62 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000ddb4:	9805      	ldr	r0, [sp, #20]
9000ddb6:	e7f4      	b.n	9000dda2 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000ddb8:	68e3      	ldr	r3, [r4, #12]
9000ddba:	2b00      	cmp	r3, #0
9000ddbc:	d1f1      	bne.n	9000dda2 <osThreadNew+0x6a>
9000ddbe:	6923      	ldr	r3, [r4, #16]
9000ddc0:	2b00      	cmp	r3, #0
9000ddc2:	d1ee      	bne.n	9000dda2 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000ddc4:	fa1f f28c 	uxth.w	r2, ip
9000ddc8:	462c      	mov	r4, r5
9000ddca:	e7df      	b.n	9000dd8c <osThreadNew+0x54>

9000ddcc <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000ddcc:	b510      	push	{r4, lr}
9000ddce:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000ddd2:	b92c      	cbnz	r4, 9000dde0 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000ddd4:	b900      	cbnz	r0, 9000ddd8 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000ddd6:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000ddd8:	f002 f98e 	bl	900100f8 <vTaskDelay>
    stat = osOK;
9000dddc:	4620      	mov	r0, r4
}
9000ddde:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dde0:	f06f 0005 	mvn.w	r0, #5
}
9000dde4:	bd10      	pop	{r4, pc}
9000dde6:	bf00      	nop

9000dde8 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000dde8:	b570      	push	{r4, r5, r6, lr}
9000ddea:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000ddee:	b9db      	cbnz	r3, 9000de28 <osMutexNew+0x40>
    if (attr != NULL) {
9000ddf0:	4604      	mov	r4, r0
9000ddf2:	b1e0      	cbz	r0, 9000de2e <osMutexNew+0x46>
      type = attr->attr_bits;
9000ddf4:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000ddf6:	0733      	lsls	r3, r6, #28
9000ddf8:	d416      	bmi.n	9000de28 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ddfa:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000ddfc:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000de00:	68c3      	ldr	r3, [r0, #12]
9000de02:	b181      	cbz	r1, 9000de26 <osMutexNew+0x3e>
9000de04:	2b4f      	cmp	r3, #79	; 0x4f
9000de06:	d90f      	bls.n	9000de28 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000de08:	b31e      	cbz	r6, 9000de52 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000de0a:	2004      	movs	r0, #4
9000de0c:	f001 f854 	bl	9000eeb8 <xQueueCreateMutexStatic>
9000de10:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000de12:	b14d      	cbz	r5, 9000de28 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000de14:	6821      	ldr	r1, [r4, #0]
9000de16:	4628      	mov	r0, r5
9000de18:	f001 fd84 	bl	9000f924 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000de1c:	b12e      	cbz	r6, 9000de2a <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000de1e:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000de22:	4628      	mov	r0, r5
9000de24:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000de26:	b163      	cbz	r3, 9000de42 <osMutexNew+0x5a>
  hMutex = NULL;
9000de28:	2500      	movs	r5, #0
}
9000de2a:	4628      	mov	r0, r5
9000de2c:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000de2e:	2001      	movs	r0, #1
9000de30:	f001 f8b2 	bl	9000ef98 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000de34:	4605      	mov	r5, r0
9000de36:	2800      	cmp	r0, #0
9000de38:	d0f6      	beq.n	9000de28 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000de3a:	4621      	mov	r1, r4
9000de3c:	f001 fd72 	bl	9000f924 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000de40:	e7f3      	b.n	9000de2a <osMutexNew+0x42>
            if (rmtx != 0U) {
9000de42:	b15e      	cbz	r6, 9000de5c <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000de44:	2004      	movs	r0, #4
9000de46:	f001 f8a7 	bl	9000ef98 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000de4a:	4605      	mov	r5, r0
9000de4c:	2800      	cmp	r0, #0
9000de4e:	d1e1      	bne.n	9000de14 <osMutexNew+0x2c>
9000de50:	e7ea      	b.n	9000de28 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000de52:	2001      	movs	r0, #1
9000de54:	f001 f830 	bl	9000eeb8 <xQueueCreateMutexStatic>
9000de58:	4605      	mov	r5, r0
9000de5a:	e7da      	b.n	9000de12 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000de5c:	2001      	movs	r0, #1
9000de5e:	f001 f89b 	bl	9000ef98 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000de62:	4605      	mov	r5, r0
9000de64:	e7d5      	b.n	9000de12 <osMutexNew+0x2a>
9000de66:	bf00      	nop

9000de68 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000de68:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000de6c:	f000 0301 	and.w	r3, r0, #1
9000de70:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000de74:	b9a8      	cbnz	r0, 9000dea2 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000de76:	b1ba      	cbz	r2, 9000dea8 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000de78:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000de7a:	b510      	push	{r4, lr}
9000de7c:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000de7e:	b953      	cbnz	r3, 9000de96 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000de80:	f001 fb02 	bl	9000f488 <xQueueSemaphoreTake>
9000de84:	2801      	cmp	r0, #1
9000de86:	d00a      	beq.n	9000de9e <osMutexAcquire+0x36>
          stat = osErrorResource;
9000de88:	2c00      	cmp	r4, #0
9000de8a:	bf14      	ite	ne
9000de8c:	f06f 0001 	mvnne.w	r0, #1
9000de90:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000de94:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000de96:	f001 fc7f 	bl	9000f798 <xQueueTakeMutexRecursive>
9000de9a:	2801      	cmp	r0, #1
9000de9c:	d1f4      	bne.n	9000de88 <osMutexAcquire+0x20>
  stat = osOK;
9000de9e:	2000      	movs	r0, #0
}
9000dea0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dea2:	f06f 0005 	mvn.w	r0, #5
9000dea6:	4770      	bx	lr
    stat = osErrorParameter;
9000dea8:	f06f 0003 	mvn.w	r0, #3
}
9000deac:	4770      	bx	lr
9000deae:	bf00      	nop

9000deb0 <osMutexRelease>:
9000deb0:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000deb4:	b9ba      	cbnz	r2, 9000dee6 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000deb6:	b510      	push	{r4, lr}
9000deb8:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000debc:	b1b4      	cbz	r4, 9000deec <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000debe:	f000 0301 	and.w	r3, r0, #1
9000dec2:	b943      	cbnz	r3, 9000ded6 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000dec4:	461a      	mov	r2, r3
9000dec6:	4619      	mov	r1, r3
9000dec8:	4620      	mov	r0, r4
9000deca:	f000 fe73 	bl	9000ebb4 <xQueueGenericSend>
9000dece:	2801      	cmp	r0, #1
9000ded0:	d106      	bne.n	9000dee0 <osMutexRelease+0x30>
  stat = osOK;
9000ded2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000ded4:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000ded6:	4620      	mov	r0, r4
9000ded8:	f001 f83e 	bl	9000ef58 <xQueueGiveMutexRecursive>
9000dedc:	2801      	cmp	r0, #1
9000dede:	d0f8      	beq.n	9000ded2 <osMutexRelease+0x22>
        stat = osErrorResource;
9000dee0:	f06f 0002 	mvn.w	r0, #2
}
9000dee4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dee6:	f06f 0005 	mvn.w	r0, #5
}
9000deea:	4770      	bx	lr
    stat = osErrorParameter;
9000deec:	f06f 0003 	mvn.w	r0, #3
}
9000def0:	bd10      	pop	{r4, pc}
9000def2:	bf00      	nop

9000def4 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000def4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000def6:	b083      	sub	sp, #12
9000def8:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000defc:	b98e      	cbnz	r6, 9000df22 <osSemaphoreNew+0x2e>
9000defe:	4605      	mov	r5, r0
9000df00:	b178      	cbz	r0, 9000df22 <osSemaphoreNew+0x2e>
9000df02:	4288      	cmp	r0, r1
9000df04:	460f      	mov	r7, r1
9000df06:	d30c      	bcc.n	9000df22 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000df08:	4614      	mov	r4, r2
9000df0a:	b182      	cbz	r2, 9000df2e <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000df0c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000df10:	b15a      	cbz	r2, 9000df2a <osSemaphoreNew+0x36>
9000df12:	2b4f      	cmp	r3, #79	; 0x4f
9000df14:	d905      	bls.n	9000df22 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000df16:	2801      	cmp	r0, #1
9000df18:	d032      	beq.n	9000df80 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000df1a:	f000 fda3 	bl	9000ea64 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000df1e:	4605      	mov	r5, r0
9000df20:	b978      	cbnz	r0, 9000df42 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000df22:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000df24:	4628      	mov	r0, r5
9000df26:	b003      	add	sp, #12
9000df28:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000df2a:	2b00      	cmp	r3, #0
9000df2c:	d1f9      	bne.n	9000df22 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000df2e:	2d01      	cmp	r5, #1
9000df30:	d00f      	beq.n	9000df52 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000df32:	4628      	mov	r0, r5
9000df34:	4639      	mov	r1, r7
9000df36:	f000 fdf7 	bl	9000eb28 <xQueueCreateCountingSemaphore>
9000df3a:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000df3c:	2d00      	cmp	r5, #0
9000df3e:	d0f0      	beq.n	9000df22 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000df40:	b104      	cbz	r4, 9000df44 <osSemaphoreNew+0x50>
          name = attr->name;
9000df42:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000df44:	4628      	mov	r0, r5
9000df46:	4621      	mov	r1, r4
9000df48:	f001 fcec 	bl	9000f924 <vQueueAddToRegistry>
}
9000df4c:	4628      	mov	r0, r5
9000df4e:	b003      	add	sp, #12
9000df50:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000df52:	4628      	mov	r0, r5
9000df54:	2203      	movs	r2, #3
9000df56:	2100      	movs	r1, #0
9000df58:	f000 fd42 	bl	9000e9e0 <xQueueGenericCreate>
9000df5c:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000df5e:	2d00      	cmp	r5, #0
9000df60:	d0df      	beq.n	9000df22 <osSemaphoreNew+0x2e>
9000df62:	2f00      	cmp	r7, #0
9000df64:	d0ea      	beq.n	9000df3c <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000df66:	2300      	movs	r3, #0
9000df68:	4628      	mov	r0, r5
9000df6a:	461a      	mov	r2, r3
9000df6c:	4619      	mov	r1, r3
9000df6e:	f000 fe21 	bl	9000ebb4 <xQueueGenericSend>
9000df72:	2801      	cmp	r0, #1
9000df74:	d0e4      	beq.n	9000df40 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000df76:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000df78:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000df7a:	f001 fc8d 	bl	9000f898 <vQueueDelete>
      if (hSemaphore != NULL) {
9000df7e:	e7d1      	b.n	9000df24 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000df80:	4613      	mov	r3, r2
9000df82:	2203      	movs	r2, #3
9000df84:	4631      	mov	r1, r6
9000df86:	9200      	str	r2, [sp, #0]
9000df88:	4632      	mov	r2, r6
9000df8a:	f000 fcbd 	bl	9000e908 <xQueueGenericCreateStatic>
9000df8e:	4605      	mov	r5, r0
9000df90:	e7e5      	b.n	9000df5e <osSemaphoreNew+0x6a>
9000df92:	bf00      	nop

9000df94 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000df94:	b370      	cbz	r0, 9000dff4 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000df96:	b510      	push	{r4, lr}
9000df98:	460c      	mov	r4, r1
9000df9a:	b082      	sub	sp, #8
9000df9c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000dfa0:	b1c3      	cbz	r3, 9000dfd4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000dfa2:	bb21      	cbnz	r1, 9000dfee <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dfa4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000dfa6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000dfa8:	f001 fc16 	bl	9000f7d8 <xQueueReceiveFromISR>
9000dfac:	2801      	cmp	r0, #1
9000dfae:	d11a      	bne.n	9000dfe6 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000dfb0:	9b01      	ldr	r3, [sp, #4]
9000dfb2:	b913      	cbnz	r3, 9000dfba <osSemaphoreAcquire+0x26>
  stat = osOK;
9000dfb4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000dfb6:	b002      	add	sp, #8
9000dfb8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000dfba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000dfbe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000dfc2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000dfc6:	f3bf 8f4f 	dsb	sy
9000dfca:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000dfce:	4620      	mov	r0, r4
}
9000dfd0:	b002      	add	sp, #8
9000dfd2:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000dfd4:	f001 fa58 	bl	9000f488 <xQueueSemaphoreTake>
9000dfd8:	2801      	cmp	r0, #1
9000dfda:	d0eb      	beq.n	9000dfb4 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000dfdc:	b11c      	cbz	r4, 9000dfe6 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000dfde:	f06f 0001 	mvn.w	r0, #1
}
9000dfe2:	b002      	add	sp, #8
9000dfe4:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000dfe6:	f06f 0002 	mvn.w	r0, #2
}
9000dfea:	b002      	add	sp, #8
9000dfec:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000dfee:	f06f 0003 	mvn.w	r0, #3
9000dff2:	e7e0      	b.n	9000dfb6 <osSemaphoreAcquire+0x22>
9000dff4:	f06f 0003 	mvn.w	r0, #3
}
9000dff8:	4770      	bx	lr
9000dffa:	bf00      	nop

9000dffc <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000dffc:	b330      	cbz	r0, 9000e04c <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000dffe:	b510      	push	{r4, lr}
9000e000:	b082      	sub	sp, #8
9000e002:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e006:	b1ab      	cbz	r3, 9000e034 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000e008:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e00a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e00c:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e00e:	f001 f865 	bl	9000f0dc <xQueueGiveFromISR>
9000e012:	2801      	cmp	r0, #1
9000e014:	d117      	bne.n	9000e046 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e016:	9b01      	ldr	r3, [sp, #4]
9000e018:	b193      	cbz	r3, 9000e040 <osSemaphoreRelease+0x44>
9000e01a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e01e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e022:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e026:	f3bf 8f4f 	dsb	sy
9000e02a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e02e:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e030:	b002      	add	sp, #8
9000e032:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e034:	461a      	mov	r2, r3
9000e036:	4619      	mov	r1, r3
9000e038:	f000 fdbc 	bl	9000ebb4 <xQueueGenericSend>
9000e03c:	2801      	cmp	r0, #1
9000e03e:	d102      	bne.n	9000e046 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000e040:	2000      	movs	r0, #0
}
9000e042:	b002      	add	sp, #8
9000e044:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000e046:	f06f 0002 	mvn.w	r0, #2
9000e04a:	e7fa      	b.n	9000e042 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000e04c:	f06f 0003 	mvn.w	r0, #3
}
9000e050:	4770      	bx	lr
9000e052:	bf00      	nop

9000e054 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e054:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e056:	b083      	sub	sp, #12
9000e058:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e05c:	b987      	cbnz	r7, 9000e080 <osMessageQueueNew+0x2c>
9000e05e:	4605      	mov	r5, r0
9000e060:	b170      	cbz	r0, 9000e080 <osMessageQueueNew+0x2c>
9000e062:	b169      	cbz	r1, 9000e080 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e064:	4614      	mov	r4, r2
9000e066:	b17a      	cbz	r2, 9000e088 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e068:	6893      	ldr	r3, [r2, #8]
9000e06a:	b1cb      	cbz	r3, 9000e0a0 <osMessageQueueNew+0x4c>
9000e06c:	68d2      	ldr	r2, [r2, #12]
9000e06e:	2a4f      	cmp	r2, #79	; 0x4f
9000e070:	d906      	bls.n	9000e080 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e072:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e074:	b122      	cbz	r2, 9000e080 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e076:	fb01 f505 	mul.w	r5, r1, r5
9000e07a:	6966      	ldr	r6, [r4, #20]
9000e07c:	42ae      	cmp	r6, r5
9000e07e:	d21f      	bcs.n	9000e0c0 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000e080:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e082:	4628      	mov	r0, r5
9000e084:	b003      	add	sp, #12
9000e086:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e088:	f000 fcaa 	bl	9000e9e0 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e08c:	4605      	mov	r5, r0
9000e08e:	2800      	cmp	r0, #0
9000e090:	d0f6      	beq.n	9000e080 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e092:	4628      	mov	r0, r5
9000e094:	4621      	mov	r1, r4
9000e096:	f001 fc45 	bl	9000f924 <vQueueAddToRegistry>
}
9000e09a:	4628      	mov	r0, r5
9000e09c:	b003      	add	sp, #12
9000e09e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e0a0:	68d3      	ldr	r3, [r2, #12]
9000e0a2:	2b00      	cmp	r3, #0
9000e0a4:	d1ec      	bne.n	9000e080 <osMessageQueueNew+0x2c>
9000e0a6:	6913      	ldr	r3, [r2, #16]
9000e0a8:	2b00      	cmp	r3, #0
9000e0aa:	d1e9      	bne.n	9000e080 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e0ac:	6952      	ldr	r2, [r2, #20]
9000e0ae:	2a00      	cmp	r2, #0
9000e0b0:	d1e6      	bne.n	9000e080 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e0b2:	f000 fc95 	bl	9000e9e0 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e0b6:	4605      	mov	r5, r0
9000e0b8:	2800      	cmp	r0, #0
9000e0ba:	d0e1      	beq.n	9000e080 <osMessageQueueNew+0x2c>
        name = attr->name;
9000e0bc:	6824      	ldr	r4, [r4, #0]
9000e0be:	e7e8      	b.n	9000e092 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e0c0:	9700      	str	r7, [sp, #0]
9000e0c2:	f000 fc21 	bl	9000e908 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e0c6:	4605      	mov	r5, r0
9000e0c8:	2800      	cmp	r0, #0
9000e0ca:	d1f7      	bne.n	9000e0bc <osMessageQueueNew+0x68>
9000e0cc:	e7d8      	b.n	9000e080 <osMessageQueueNew+0x2c>
9000e0ce:	bf00      	nop

9000e0d0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e0d0:	b530      	push	{r4, r5, lr}
9000e0d2:	461c      	mov	r4, r3
9000e0d4:	b083      	sub	sp, #12
9000e0d6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e0da:	b30b      	cbz	r3, 9000e120 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e0dc:	3c00      	subs	r4, #0
9000e0de:	bf18      	it	ne
9000e0e0:	2401      	movne	r4, #1
9000e0e2:	2900      	cmp	r1, #0
9000e0e4:	bf08      	it	eq
9000e0e6:	f044 0401 	orreq.w	r4, r4, #1
9000e0ea:	bb7c      	cbnz	r4, 9000e14c <osMessageQueuePut+0x7c>
9000e0ec:	fab0 f480 	clz	r4, r0
9000e0f0:	0964      	lsrs	r4, r4, #5
9000e0f2:	b358      	cbz	r0, 9000e14c <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e0f4:	4623      	mov	r3, r4
9000e0f6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e0f8:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e0fa:	f000 ff85 	bl	9000f008 <xQueueGenericSendFromISR>
9000e0fe:	2801      	cmp	r0, #1
9000e100:	d120      	bne.n	9000e144 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e102:	9b01      	ldr	r3, [sp, #4]
9000e104:	b1db      	cbz	r3, 9000e13e <osMessageQueuePut+0x6e>
9000e106:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e10a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e10e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e112:	f3bf 8f4f 	dsb	sy
9000e116:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e11a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e11c:	b003      	add	sp, #12
9000e11e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e120:	b1a0      	cbz	r0, 9000e14c <osMessageQueuePut+0x7c>
9000e122:	fab1 f381 	clz	r3, r1
9000e126:	095b      	lsrs	r3, r3, #5
9000e128:	b181      	cbz	r1, 9000e14c <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e12a:	4622      	mov	r2, r4
9000e12c:	f000 fd42 	bl	9000ebb4 <xQueueGenericSend>
9000e130:	2801      	cmp	r0, #1
9000e132:	d004      	beq.n	9000e13e <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000e134:	b134      	cbz	r4, 9000e144 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000e136:	f06f 0001 	mvn.w	r0, #1
}
9000e13a:	b003      	add	sp, #12
9000e13c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e13e:	2000      	movs	r0, #0
}
9000e140:	b003      	add	sp, #12
9000e142:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e144:	f06f 0002 	mvn.w	r0, #2
}
9000e148:	b003      	add	sp, #12
9000e14a:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e14c:	f06f 0003 	mvn.w	r0, #3
9000e150:	e7e4      	b.n	9000e11c <osMessageQueuePut+0x4c>
9000e152:	bf00      	nop

9000e154 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e154:	b530      	push	{r4, r5, lr}
9000e156:	461c      	mov	r4, r3
9000e158:	b083      	sub	sp, #12
9000e15a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e15e:	b303      	cbz	r3, 9000e1a2 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e160:	3c00      	subs	r4, #0
9000e162:	bf18      	it	ne
9000e164:	2401      	movne	r4, #1
9000e166:	2900      	cmp	r1, #0
9000e168:	bf08      	it	eq
9000e16a:	f044 0401 	orreq.w	r4, r4, #1
9000e16e:	bb5c      	cbnz	r4, 9000e1c8 <osMessageQueueGet+0x74>
9000e170:	fab0 f480 	clz	r4, r0
9000e174:	0964      	lsrs	r4, r4, #5
9000e176:	b338      	cbz	r0, 9000e1c8 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e178:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e17a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e17c:	f001 fb2c 	bl	9000f7d8 <xQueueReceiveFromISR>
9000e180:	2801      	cmp	r0, #1
9000e182:	d11d      	bne.n	9000e1c0 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e184:	9b01      	ldr	r3, [sp, #4]
9000e186:	b1c3      	cbz	r3, 9000e1ba <osMessageQueueGet+0x66>
9000e188:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e18c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e190:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e194:	f3bf 8f4f 	dsb	sy
9000e198:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e19c:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e19e:	b003      	add	sp, #12
9000e1a0:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e1a2:	b188      	cbz	r0, 9000e1c8 <osMessageQueueGet+0x74>
9000e1a4:	b181      	cbz	r1, 9000e1c8 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e1a6:	4622      	mov	r2, r4
9000e1a8:	f000 fff0 	bl	9000f18c <xQueueReceive>
9000e1ac:	2801      	cmp	r0, #1
9000e1ae:	d004      	beq.n	9000e1ba <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000e1b0:	b134      	cbz	r4, 9000e1c0 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000e1b2:	f06f 0001 	mvn.w	r0, #1
}
9000e1b6:	b003      	add	sp, #12
9000e1b8:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e1ba:	2000      	movs	r0, #0
}
9000e1bc:	b003      	add	sp, #12
9000e1be:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e1c0:	f06f 0002 	mvn.w	r0, #2
}
9000e1c4:	b003      	add	sp, #12
9000e1c6:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e1c8:	f06f 0003 	mvn.w	r0, #3
9000e1cc:	e7e7      	b.n	9000e19e <osMessageQueueGet+0x4a>
9000e1ce:	bf00      	nop

9000e1d0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e1d0:	4b04      	ldr	r3, [pc, #16]	; (9000e1e4 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e1d2:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e1d4:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e1d6:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e1d8:	4c03      	ldr	r4, [pc, #12]	; (9000e1e8 <vApplicationGetIdleTaskMemory+0x18>)
9000e1da:	600c      	str	r4, [r1, #0]
}
9000e1dc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e1e0:	6013      	str	r3, [r2, #0]
}
9000e1e2:	4770      	bx	lr
9000e1e4:	24020504 	.word	0x24020504
9000e1e8:	24020304 	.word	0x24020304

9000e1ec <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e1ec:	4b05      	ldr	r3, [pc, #20]	; (9000e204 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e1ee:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e1f0:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e1f2:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e1f6:	4c04      	ldr	r4, [pc, #16]	; (9000e208 <vApplicationGetTimerTaskMemory+0x1c>)
9000e1f8:	600c      	str	r4, [r1, #0]
}
9000e1fa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e1fe:	6013      	str	r3, [r2, #0]
}
9000e200:	4770      	bx	lr
9000e202:	bf00      	nop
9000e204:	24020968 	.word	0x24020968
9000e208:	24020568 	.word	0x24020568

9000e20c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e20c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e210:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e212:	f002 f863 	bl	900102dc <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e216:	4a54      	ldr	r2, [pc, #336]	; (9000e368 <pvPortMalloc+0x15c>)
9000e218:	6816      	ldr	r6, [r2, #0]
9000e21a:	2e00      	cmp	r6, #0
9000e21c:	d06f      	beq.n	9000e2fe <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e21e:	4b53      	ldr	r3, [pc, #332]	; (9000e36c <pvPortMalloc+0x160>)
9000e220:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e222:	423d      	tst	r5, r7
9000e224:	d12e      	bne.n	9000e284 <pvPortMalloc+0x78>
9000e226:	b36d      	cbz	r5, 9000e284 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000e228:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e22c:	076d      	lsls	r5, r5, #29
9000e22e:	d002      	beq.n	9000e236 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e230:	f024 0407 	bic.w	r4, r4, #7
9000e234:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e236:	b32c      	cbz	r4, 9000e284 <pvPortMalloc+0x78>
9000e238:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000e384 <pvPortMalloc+0x178>
9000e23c:	f8dc 5000 	ldr.w	r5, [ip]
9000e240:	42a5      	cmp	r5, r4
9000e242:	d31f      	bcc.n	9000e284 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e244:	484a      	ldr	r0, [pc, #296]	; (9000e370 <pvPortMalloc+0x164>)
9000e246:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e248:	e003      	b.n	9000e252 <pvPortMalloc+0x46>
9000e24a:	681a      	ldr	r2, [r3, #0]
9000e24c:	b122      	cbz	r2, 9000e258 <pvPortMalloc+0x4c>
9000e24e:	4618      	mov	r0, r3
9000e250:	4613      	mov	r3, r2
9000e252:	6859      	ldr	r1, [r3, #4]
9000e254:	42a1      	cmp	r1, r4
9000e256:	d3f8      	bcc.n	9000e24a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e258:	42b3      	cmp	r3, r6
9000e25a:	d013      	beq.n	9000e284 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e25c:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e25e:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e260:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e264:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e266:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e26a:	d929      	bls.n	9000e2c0 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e26c:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e26e:	0748      	lsls	r0, r1, #29
9000e270:	d00f      	beq.n	9000e292 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e272:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e276:	f383 8811 	msr	BASEPRI, r3
9000e27a:	f3bf 8f6f 	isb	sy
9000e27e:	f3bf 8f4f 	dsb	sy
9000e282:	e7fe      	b.n	9000e282 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e284:	f04f 0800 	mov.w	r8, #0
9000e288:	f002 f830 	bl	900102ec <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e28c:	4640      	mov	r0, r8
9000e28e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e292:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e294:	4a36      	ldr	r2, [pc, #216]	; (9000e370 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000e296:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e298:	4614      	mov	r4, r2
9000e29a:	6812      	ldr	r2, [r2, #0]
9000e29c:	4291      	cmp	r1, r2
9000e29e:	d8fb      	bhi.n	9000e298 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e2a0:	6860      	ldr	r0, [r4, #4]
9000e2a2:	eb04 0e00 	add.w	lr, r4, r0
9000e2a6:	4571      	cmp	r1, lr
9000e2a8:	d04a      	beq.n	9000e340 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e2aa:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e2ae:	eb01 000e 	add.w	r0, r1, lr
9000e2b2:	4282      	cmp	r2, r0
9000e2b4:	d050      	beq.n	9000e358 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e2b6:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e2b8:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e2ba:	bf18      	it	ne
9000e2bc:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e2be:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e2c0:	4a2c      	ldr	r2, [pc, #176]	; (9000e374 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e2c2:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e2c4:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e2c6:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e2c8:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e2cc:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000e2ce:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e2d2:	bf38      	it	cc
9000e2d4:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000e2d6:	4a28      	ldr	r2, [pc, #160]	; (9000e378 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000e2d8:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000e2dc:	6813      	ldr	r3, [r2, #0]
9000e2de:	3301      	adds	r3, #1
9000e2e0:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000e2e2:	f002 f803 	bl	900102ec <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e2e6:	f018 0f07 	tst.w	r8, #7
9000e2ea:	d0cf      	beq.n	9000e28c <pvPortMalloc+0x80>
9000e2ec:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e2f0:	f383 8811 	msr	BASEPRI, r3
9000e2f4:	f3bf 8f6f 	isb	sy
9000e2f8:	f3bf 8f4f 	dsb	sy
9000e2fc:	e7fe      	b.n	9000e2fc <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000e2fe:	4b1f      	ldr	r3, [pc, #124]	; (9000e37c <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e300:	075e      	lsls	r6, r3, #29
9000e302:	d117      	bne.n	9000e334 <pvPortMalloc+0x128>
9000e304:	4e1e      	ldr	r6, [pc, #120]	; (9000e380 <pvPortMalloc+0x174>)
9000e306:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000e308:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e30a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e30e:	4818      	ldr	r0, [pc, #96]	; (9000e370 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e310:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000e314:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e316:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e318:	4a16      	ldr	r2, [pc, #88]	; (9000e374 <pvPortMalloc+0x168>)
9000e31a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e31c:	4a19      	ldr	r2, [pc, #100]	; (9000e384 <pvPortMalloc+0x178>)
9000e31e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e320:	4a12      	ldr	r2, [pc, #72]	; (9000e36c <pvPortMalloc+0x160>)
9000e322:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e324:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e326:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000e32a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e32e:	e9c1 6300 	strd	r6, r3, [r1]
}
9000e332:	e776      	b.n	9000e222 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e334:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000e336:	4e12      	ldr	r6, [pc, #72]	; (9000e380 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000e338:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e33c:	460b      	mov	r3, r1
9000e33e:	e7e3      	b.n	9000e308 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e340:	6849      	ldr	r1, [r1, #4]
9000e342:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e346:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e34a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e34e:	428a      	cmp	r2, r1
9000e350:	d001      	beq.n	9000e356 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e352:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000e354:	e7b3      	b.n	9000e2be <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e356:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e358:	42b2      	cmp	r2, r6
9000e35a:	d0ac      	beq.n	9000e2b6 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e35c:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e35e:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e360:	4470      	add	r0, lr
9000e362:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e364:	e7a7      	b.n	9000e2b6 <pvPortMalloc+0xaa>
9000e366:	bf00      	nop
9000e368:	240209c8 	.word	0x240209c8
9000e36c:	2403906c 	.word	0x2403906c
9000e370:	24039080 	.word	0x24039080
9000e374:	24039074 	.word	0x24039074
9000e378:	24039078 	.word	0x24039078
9000e37c:	240209cc 	.word	0x240209cc
9000e380:	2403906c 	.word	0x2403906c
9000e384:	24039070 	.word	0x24039070

9000e388 <vPortFree>:
	if( pv != NULL )
9000e388:	b1d0      	cbz	r0, 9000e3c0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e38a:	4a2c      	ldr	r2, [pc, #176]	; (9000e43c <vPortFree+0xb4>)
9000e38c:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e390:	6812      	ldr	r2, [r2, #0]
9000e392:	4213      	tst	r3, r2
9000e394:	d00b      	beq.n	9000e3ae <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e396:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e39a:	b191      	cbz	r1, 9000e3c2 <vPortFree+0x3a>
9000e39c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3a0:	f383 8811 	msr	BASEPRI, r3
9000e3a4:	f3bf 8f6f 	isb	sy
9000e3a8:	f3bf 8f4f 	dsb	sy
9000e3ac:	e7fe      	b.n	9000e3ac <vPortFree+0x24>
9000e3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3b2:	f383 8811 	msr	BASEPRI, r3
9000e3b6:	f3bf 8f6f 	isb	sy
9000e3ba:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e3be:	e7fe      	b.n	9000e3be <vPortFree+0x36>
9000e3c0:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e3c2:	ea23 0302 	bic.w	r3, r3, r2
{
9000e3c6:	b530      	push	{r4, r5, lr}
9000e3c8:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e3ca:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e3ce:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e3d2:	4d1b      	ldr	r5, [pc, #108]	; (9000e440 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e3d4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e3d6:	f001 ff81 	bl	900102dc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e3da:	9801      	ldr	r0, [sp, #4]
9000e3dc:	682a      	ldr	r2, [r5, #0]
9000e3de:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e3e2:	4b18      	ldr	r3, [pc, #96]	; (9000e444 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e3e4:	440a      	add	r2, r1
9000e3e6:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e3e8:	461a      	mov	r2, r3
9000e3ea:	681b      	ldr	r3, [r3, #0]
9000e3ec:	429c      	cmp	r4, r3
9000e3ee:	d8fb      	bhi.n	9000e3e8 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e3f0:	6850      	ldr	r0, [r2, #4]
9000e3f2:	eb02 0c00 	add.w	ip, r2, r0
9000e3f6:	4564      	cmp	r4, ip
9000e3f8:	d00f      	beq.n	9000e41a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e3fa:	1860      	adds	r0, r4, r1
9000e3fc:	4283      	cmp	r3, r0
9000e3fe:	d014      	beq.n	9000e42a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000e400:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e402:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e404:	bf18      	it	ne
9000e406:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e408:	4a0f      	ldr	r2, [pc, #60]	; (9000e448 <vPortFree+0xc0>)
9000e40a:	6813      	ldr	r3, [r2, #0]
9000e40c:	3301      	adds	r3, #1
9000e40e:	6013      	str	r3, [r2, #0]
}
9000e410:	b003      	add	sp, #12
9000e412:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e416:	f001 bf69 	b.w	900102ec <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e41a:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e41c:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e41e:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e420:	4283      	cmp	r3, r0
9000e422:	d001      	beq.n	9000e428 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e424:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000e426:	e7ef      	b.n	9000e408 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e428:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e42a:	4808      	ldr	r0, [pc, #32]	; (9000e44c <vPortFree+0xc4>)
9000e42c:	6800      	ldr	r0, [r0, #0]
9000e42e:	4283      	cmp	r3, r0
9000e430:	d0e6      	beq.n	9000e400 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e432:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e436:	4401      	add	r1, r0
9000e438:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e43a:	e7e1      	b.n	9000e400 <vPortFree+0x78>
9000e43c:	2403906c 	.word	0x2403906c
9000e440:	24039070 	.word	0x24039070
9000e444:	24039080 	.word	0x24039080
9000e448:	2403907c 	.word	0x2403907c
9000e44c:	240209c8 	.word	0x240209c8

9000e450 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e450:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e454:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e458:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e45a:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e45c:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e45e:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e460:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e464:	4770      	bx	lr
9000e466:	bf00      	nop

9000e468 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e468:	2300      	movs	r3, #0
9000e46a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e46c:	4770      	bx	lr
9000e46e:	bf00      	nop

9000e470 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000e470:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e472:	6802      	ldr	r2, [r0, #0]
{
9000e474:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e476:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000e478:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000e47a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e47c:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e47e:	689c      	ldr	r4, [r3, #8]
9000e480:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e482:	6099      	str	r1, [r3, #8]
}
9000e484:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e488:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e48a:	6002      	str	r2, [r0, #0]
}
9000e48c:	4770      	bx	lr
9000e48e:	bf00      	nop

9000e490 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e490:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e492:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e494:	1c6b      	adds	r3, r5, #1
9000e496:	d010      	beq.n	9000e4ba <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e498:	f100 0308 	add.w	r3, r0, #8
9000e49c:	461c      	mov	r4, r3
9000e49e:	685b      	ldr	r3, [r3, #4]
9000e4a0:	681a      	ldr	r2, [r3, #0]
9000e4a2:	42aa      	cmp	r2, r5
9000e4a4:	d9fa      	bls.n	9000e49c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e4a6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e4a8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e4aa:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e4ac:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e4ae:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e4b0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e4b2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e4b4:	6002      	str	r2, [r0, #0]
}
9000e4b6:	bc30      	pop	{r4, r5}
9000e4b8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e4ba:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e4bc:	6863      	ldr	r3, [r4, #4]
9000e4be:	e7f2      	b.n	9000e4a6 <vListInsert+0x16>

9000e4c0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e4c0:	6903      	ldr	r3, [r0, #16]
{
9000e4c2:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e4c4:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e4c6:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e4ca:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e4cc:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e4d0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e4d2:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e4d4:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e4d8:	bf08      	it	eq
9000e4da:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e4dc:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e4de:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e4e0:	3a01      	subs	r2, #1
9000e4e2:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e4e4:	6818      	ldr	r0, [r3, #0]
}
9000e4e6:	4770      	bx	lr

9000e4e8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e4e8:	4808      	ldr	r0, [pc, #32]	; (9000e50c <prvPortStartFirstTask+0x24>)
9000e4ea:	6800      	ldr	r0, [r0, #0]
9000e4ec:	6800      	ldr	r0, [r0, #0]
9000e4ee:	f380 8808 	msr	MSP, r0
9000e4f2:	f04f 0000 	mov.w	r0, #0
9000e4f6:	f380 8814 	msr	CONTROL, r0
9000e4fa:	b662      	cpsie	i
9000e4fc:	b661      	cpsie	f
9000e4fe:	f3bf 8f4f 	dsb	sy
9000e502:	f3bf 8f6f 	isb	sy
9000e506:	df00      	svc	0
9000e508:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e50a:	0000      	.short	0x0000
9000e50c:	e000ed08 	.word	0xe000ed08

9000e510 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e510:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000e520 <vPortEnableVFP+0x10>
9000e514:	6801      	ldr	r1, [r0, #0]
9000e516:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000e51a:	6001      	str	r1, [r0, #0]
9000e51c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e51e:	0000      	.short	0x0000
9000e520:	e000ed88 	.word	0xe000ed88

9000e524 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e524:	4b0e      	ldr	r3, [pc, #56]	; (9000e560 <prvTaskExitError+0x3c>)
{
9000e526:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e528:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e52a:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e52c:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e52e:	3301      	adds	r3, #1
9000e530:	d008      	beq.n	9000e544 <prvTaskExitError+0x20>
9000e532:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e536:	f383 8811 	msr	BASEPRI, r3
9000e53a:	f3bf 8f6f 	isb	sy
9000e53e:	f3bf 8f4f 	dsb	sy
9000e542:	e7fe      	b.n	9000e542 <prvTaskExitError+0x1e>
9000e544:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e548:	f383 8811 	msr	BASEPRI, r3
9000e54c:	f3bf 8f6f 	isb	sy
9000e550:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e554:	9b01      	ldr	r3, [sp, #4]
9000e556:	2b00      	cmp	r3, #0
9000e558:	d0fc      	beq.n	9000e554 <prvTaskExitError+0x30>
}
9000e55a:	b002      	add	sp, #8
9000e55c:	4770      	bx	lr
9000e55e:	bf00      	nop
9000e560:	2400007c 	.word	0x2400007c

9000e564 <pxPortInitialiseStack>:
{
9000e564:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e566:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e56a:	4809      	ldr	r0, [pc, #36]	; (9000e590 <pxPortInitialiseStack+0x2c>)
{
9000e56c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e56e:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e572:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e576:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e57a:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e57e:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e582:	f06f 0102 	mvn.w	r1, #2
}
9000e586:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e58a:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000e58e:	4770      	bx	lr
9000e590:	9000e525 	.word	0x9000e525
	...

9000e5a0 <SVC_Handler>:
	__asm volatile (
9000e5a0:	4b07      	ldr	r3, [pc, #28]	; (9000e5c0 <pxCurrentTCBConst2>)
9000e5a2:	6819      	ldr	r1, [r3, #0]
9000e5a4:	6808      	ldr	r0, [r1, #0]
9000e5a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e5aa:	f380 8809 	msr	PSP, r0
9000e5ae:	f3bf 8f6f 	isb	sy
9000e5b2:	f04f 0000 	mov.w	r0, #0
9000e5b6:	f380 8811 	msr	BASEPRI, r0
9000e5ba:	4770      	bx	lr
9000e5bc:	f3af 8000 	nop.w

9000e5c0 <pxCurrentTCBConst2>:
9000e5c0:	240390d0 	.word	0x240390d0

9000e5c4 <vPortEnterCritical>:
9000e5c4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5c8:	f383 8811 	msr	BASEPRI, r3
9000e5cc:	f3bf 8f6f 	isb	sy
9000e5d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000e5d4:	4a0b      	ldr	r2, [pc, #44]	; (9000e604 <vPortEnterCritical+0x40>)
9000e5d6:	6813      	ldr	r3, [r2, #0]
9000e5d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000e5da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000e5dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000e5de:	d000      	beq.n	9000e5e2 <vPortEnterCritical+0x1e>
}
9000e5e0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000e5e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e5e6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000e5ea:	b2db      	uxtb	r3, r3
9000e5ec:	2b00      	cmp	r3, #0
9000e5ee:	d0f7      	beq.n	9000e5e0 <vPortEnterCritical+0x1c>
9000e5f0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5f4:	f383 8811 	msr	BASEPRI, r3
9000e5f8:	f3bf 8f6f 	isb	sy
9000e5fc:	f3bf 8f4f 	dsb	sy
9000e600:	e7fe      	b.n	9000e600 <vPortEnterCritical+0x3c>
9000e602:	bf00      	nop
9000e604:	2400007c 	.word	0x2400007c

9000e608 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000e608:	4a08      	ldr	r2, [pc, #32]	; (9000e62c <vPortExitCritical+0x24>)
9000e60a:	6813      	ldr	r3, [r2, #0]
9000e60c:	b943      	cbnz	r3, 9000e620 <vPortExitCritical+0x18>
9000e60e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e612:	f383 8811 	msr	BASEPRI, r3
9000e616:	f3bf 8f6f 	isb	sy
9000e61a:	f3bf 8f4f 	dsb	sy
9000e61e:	e7fe      	b.n	9000e61e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000e620:	3b01      	subs	r3, #1
9000e622:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000e624:	b90b      	cbnz	r3, 9000e62a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000e626:	f383 8811 	msr	BASEPRI, r3
}
9000e62a:	4770      	bx	lr
9000e62c:	2400007c 	.word	0x2400007c

9000e630 <PendSV_Handler>:
	__asm volatile
9000e630:	f3ef 8009 	mrs	r0, PSP
9000e634:	f3bf 8f6f 	isb	sy
9000e638:	4b15      	ldr	r3, [pc, #84]	; (9000e690 <pxCurrentTCBConst>)
9000e63a:	681a      	ldr	r2, [r3, #0]
9000e63c:	f01e 0f10 	tst.w	lr, #16
9000e640:	bf08      	it	eq
9000e642:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000e646:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e64a:	6010      	str	r0, [r2, #0]
9000e64c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000e650:	f04f 0050 	mov.w	r0, #80	; 0x50
9000e654:	f380 8811 	msr	BASEPRI, r0
9000e658:	f3bf 8f4f 	dsb	sy
9000e65c:	f3bf 8f6f 	isb	sy
9000e660:	f001 fe80 	bl	90010364 <vTaskSwitchContext>
9000e664:	f04f 0000 	mov.w	r0, #0
9000e668:	f380 8811 	msr	BASEPRI, r0
9000e66c:	bc09      	pop	{r0, r3}
9000e66e:	6819      	ldr	r1, [r3, #0]
9000e670:	6808      	ldr	r0, [r1, #0]
9000e672:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e676:	f01e 0f10 	tst.w	lr, #16
9000e67a:	bf08      	it	eq
9000e67c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000e680:	f380 8809 	msr	PSP, r0
9000e684:	f3bf 8f6f 	isb	sy
9000e688:	4770      	bx	lr
9000e68a:	bf00      	nop
9000e68c:	f3af 8000 	nop.w

9000e690 <pxCurrentTCBConst>:
9000e690:	240390d0 	.word	0x240390d0

9000e694 <xPortSysTickHandler>:
{
9000e694:	b508      	push	{r3, lr}
	__asm volatile
9000e696:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e69a:	f383 8811 	msr	BASEPRI, r3
9000e69e:	f3bf 8f6f 	isb	sy
9000e6a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000e6a6:	f001 fe37 	bl	90010318 <xTaskIncrementTick>
9000e6aa:	b128      	cbz	r0, 9000e6b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000e6ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e6b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e6b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000e6b8:	2300      	movs	r3, #0
9000e6ba:	f383 8811 	msr	BASEPRI, r3
}
9000e6be:	bd08      	pop	{r3, pc}

9000e6c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e6c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000e6c4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e6c6:	4806      	ldr	r0, [pc, #24]	; (9000e6e0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e6c8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e6ca:	4906      	ldr	r1, [pc, #24]	; (9000e6e4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000e6cc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e6ce:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e6d0:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e6d2:	fba1 1303 	umull	r1, r3, r1, r3
9000e6d6:	099b      	lsrs	r3, r3, #6
9000e6d8:	3b01      	subs	r3, #1
9000e6da:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e6dc:	6110      	str	r0, [r2, #16]
}
9000e6de:	4770      	bx	lr
9000e6e0:	2400006c 	.word	0x2400006c
9000e6e4:	10624dd3 	.word	0x10624dd3

9000e6e8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e6e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e6ec:	4a48      	ldr	r2, [pc, #288]	; (9000e810 <xPortStartScheduler+0x128>)
9000e6ee:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000e6f2:	4291      	cmp	r1, r2
9000e6f4:	d041      	beq.n	9000e77a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e6f6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000e6fa:	4b46      	ldr	r3, [pc, #280]	; (9000e814 <xPortStartScheduler+0x12c>)
9000e6fc:	429a      	cmp	r2, r3
9000e6fe:	d033      	beq.n	9000e768 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e700:	4b45      	ldr	r3, [pc, #276]	; (9000e818 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e702:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e704:	4945      	ldr	r1, [pc, #276]	; (9000e81c <xPortStartScheduler+0x134>)
{
9000e706:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e708:	781a      	ldrb	r2, [r3, #0]
{
9000e70a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e70c:	4c44      	ldr	r4, [pc, #272]	; (9000e820 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e70e:	b2d2      	uxtb	r2, r2
9000e710:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e712:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e714:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e716:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e718:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e71a:	b2db      	uxtb	r3, r3
9000e71c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e720:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e724:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e728:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e72c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e72e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e730:	d511      	bpl.n	9000e756 <xPortStartScheduler+0x6e>
9000e732:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e734:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e738:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e73a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e73c:	005b      	lsls	r3, r3, #1
9000e73e:	b2db      	uxtb	r3, r3
9000e740:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e744:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000e748:	0609      	lsls	r1, r1, #24
9000e74a:	d4f3      	bmi.n	9000e734 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000e74c:	2803      	cmp	r0, #3
9000e74e:	6020      	str	r0, [r4, #0]
9000e750:	f88d 3007 	strb.w	r3, [sp, #7]
9000e754:	d01a      	beq.n	9000e78c <xPortStartScheduler+0xa4>
	__asm volatile
9000e756:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e75a:	f383 8811 	msr	BASEPRI, r3
9000e75e:	f3bf 8f6f 	isb	sy
9000e762:	f3bf 8f4f 	dsb	sy
9000e766:	e7fe      	b.n	9000e766 <xPortStartScheduler+0x7e>
9000e768:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e76c:	f383 8811 	msr	BASEPRI, r3
9000e770:	f3bf 8f6f 	isb	sy
9000e774:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e778:	e7fe      	b.n	9000e778 <xPortStartScheduler+0x90>
9000e77a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e77e:	f383 8811 	msr	BASEPRI, r3
9000e782:	f3bf 8f6f 	isb	sy
9000e786:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e78a:	e7fe      	b.n	9000e78a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e78c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e78e:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e792:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e796:	4a20      	ldr	r2, [pc, #128]	; (9000e818 <xPortStartScheduler+0x130>)
9000e798:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000e79a:	4e22      	ldr	r6, [pc, #136]	; (9000e824 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e79c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000e79e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e7a0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e7a2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000e7a6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000e7aa:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000e7ae:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000e7b2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000e7b6:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000e7ba:	f7ff ff81 	bl	9000e6c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000e7be:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000e7c0:	f7ff fea6 	bl	9000e510 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000e7c4:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000e7c8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000e7cc:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000e7d0:	f7ff fe8a 	bl	9000e4e8 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000e7d4:	f001 fdc6 	bl	90010364 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000e7d8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000e7da:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000e7dc:	3301      	adds	r3, #1
9000e7de:	d008      	beq.n	9000e7f2 <xPortStartScheduler+0x10a>
9000e7e0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7e4:	f383 8811 	msr	BASEPRI, r3
9000e7e8:	f3bf 8f6f 	isb	sy
9000e7ec:	f3bf 8f4f 	dsb	sy
9000e7f0:	e7fe      	b.n	9000e7f0 <xPortStartScheduler+0x108>
9000e7f2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7f6:	f383 8811 	msr	BASEPRI, r3
9000e7fa:	f3bf 8f6f 	isb	sy
9000e7fe:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e802:	9b03      	ldr	r3, [sp, #12]
9000e804:	2b00      	cmp	r3, #0
9000e806:	d0fc      	beq.n	9000e802 <xPortStartScheduler+0x11a>
}
9000e808:	2000      	movs	r0, #0
9000e80a:	b004      	add	sp, #16
9000e80c:	bd70      	pop	{r4, r5, r6, pc}
9000e80e:	bf00      	nop
9000e810:	410fc271 	.word	0x410fc271
9000e814:	410fc270 	.word	0x410fc270
9000e818:	e000e400 	.word	0xe000e400
9000e81c:	24039088 	.word	0x24039088
9000e820:	2403908c 	.word	0x2403908c
9000e824:	2400007c 	.word	0x2400007c

9000e828 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000e828:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000e82c:	2b0f      	cmp	r3, #15
9000e82e:	d90e      	bls.n	9000e84e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e830:	4911      	ldr	r1, [pc, #68]	; (9000e878 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e832:	4a12      	ldr	r2, [pc, #72]	; (9000e87c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e834:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e836:	7812      	ldrb	r2, [r2, #0]
9000e838:	429a      	cmp	r2, r3
9000e83a:	d908      	bls.n	9000e84e <vPortValidateInterruptPriority+0x26>
9000e83c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e840:	f383 8811 	msr	BASEPRI, r3
9000e844:	f3bf 8f6f 	isb	sy
9000e848:	f3bf 8f4f 	dsb	sy
9000e84c:	e7fe      	b.n	9000e84c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000e84e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e852:	4a0b      	ldr	r2, [pc, #44]	; (9000e880 <vPortValidateInterruptPriority+0x58>)
9000e854:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000e858:	6812      	ldr	r2, [r2, #0]
9000e85a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000e85e:	4293      	cmp	r3, r2
9000e860:	d908      	bls.n	9000e874 <vPortValidateInterruptPriority+0x4c>
9000e862:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e866:	f383 8811 	msr	BASEPRI, r3
9000e86a:	f3bf 8f6f 	isb	sy
9000e86e:	f3bf 8f4f 	dsb	sy
9000e872:	e7fe      	b.n	9000e872 <vPortValidateInterruptPriority+0x4a>
	}
9000e874:	4770      	bx	lr
9000e876:	bf00      	nop
9000e878:	e000e3f0 	.word	0xe000e3f0
9000e87c:	24039088 	.word	0x24039088
9000e880:	2403908c 	.word	0x2403908c

9000e884 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000e884:	b570      	push	{r4, r5, r6, lr}
9000e886:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e888:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000e88a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e88c:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e88e:	b92a      	cbnz	r2, 9000e89c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e890:	6805      	ldr	r5, [r0, #0]
9000e892:	b365      	cbz	r5, 9000e8ee <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e894:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e896:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e898:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000e89a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000e89c:	b97d      	cbnz	r5, 9000e8be <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e89e:	6840      	ldr	r0, [r0, #4]
9000e8a0:	f019 fa9c 	bl	90027ddc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e8a4:	6863      	ldr	r3, [r4, #4]
9000e8a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e8a8:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e8aa:	68a2      	ldr	r2, [r4, #8]
9000e8ac:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e8ae:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e8b0:	d319      	bcc.n	9000e8e6 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e8b2:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8b4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e8b6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e8b8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8ba:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e8bc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000e8be:	68c0      	ldr	r0, [r0, #12]
9000e8c0:	f019 fa8c 	bl	90027ddc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e8c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e8c6:	68e3      	ldr	r3, [r4, #12]
9000e8c8:	4251      	negs	r1, r2
9000e8ca:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e8cc:	6822      	ldr	r2, [r4, #0]
9000e8ce:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e8d0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e8d2:	d202      	bcs.n	9000e8da <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000e8d4:	68a3      	ldr	r3, [r4, #8]
9000e8d6:	440b      	add	r3, r1
9000e8d8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000e8da:	2d02      	cmp	r5, #2
9000e8dc:	d00d      	beq.n	9000e8fa <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8de:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e8e0:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8e2:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e8e4:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8e6:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e8e8:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8ea:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e8ec:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e8ee:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e8f0:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e8f2:	f001 ff1f 	bl	90010734 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000e8f6:	60a5      	str	r5, [r4, #8]
9000e8f8:	e7ce      	b.n	9000e898 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e8fa:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000e8fc:	f04f 0000 	mov.w	r0, #0
9000e900:	bf38      	it	cc
9000e902:	2601      	movcc	r6, #1
9000e904:	e7c8      	b.n	9000e898 <prvCopyDataToQueue+0x14>
9000e906:	bf00      	nop

9000e908 <xQueueGenericCreateStatic>:
	{
9000e908:	b530      	push	{r4, r5, lr}
9000e90a:	b083      	sub	sp, #12
9000e90c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e910:	b940      	cbnz	r0, 9000e924 <xQueueGenericCreateStatic+0x1c>
9000e912:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e916:	f383 8811 	msr	BASEPRI, r3
9000e91a:	f3bf 8f6f 	isb	sy
9000e91e:	f3bf 8f4f 	dsb	sy
9000e922:	e7fe      	b.n	9000e922 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000e924:	461d      	mov	r5, r3
9000e926:	b153      	cbz	r3, 9000e93e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000e928:	b30a      	cbz	r2, 9000e96e <xQueueGenericCreateStatic+0x66>
9000e92a:	b989      	cbnz	r1, 9000e950 <xQueueGenericCreateStatic+0x48>
9000e92c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e930:	f383 8811 	msr	BASEPRI, r3
9000e934:	f3bf 8f6f 	isb	sy
9000e938:	f3bf 8f4f 	dsb	sy
9000e93c:	e7fe      	b.n	9000e93c <xQueueGenericCreateStatic+0x34>
9000e93e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e942:	f383 8811 	msr	BASEPRI, r3
9000e946:	f3bf 8f6f 	isb	sy
9000e94a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e94e:	e7fe      	b.n	9000e94e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e950:	b16a      	cbz	r2, 9000e96e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e952:	2350      	movs	r3, #80	; 0x50
9000e954:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e956:	9b01      	ldr	r3, [sp, #4]
9000e958:	2b50      	cmp	r3, #80	; 0x50
9000e95a:	d013      	beq.n	9000e984 <xQueueGenericCreateStatic+0x7c>
9000e95c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e960:	f383 8811 	msr	BASEPRI, r3
9000e964:	f3bf 8f6f 	isb	sy
9000e968:	f3bf 8f4f 	dsb	sy
9000e96c:	e7fe      	b.n	9000e96c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e96e:	2900      	cmp	r1, #0
9000e970:	d0ef      	beq.n	9000e952 <xQueueGenericCreateStatic+0x4a>
9000e972:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e976:	f383 8811 	msr	BASEPRI, r3
9000e97a:	f3bf 8f6f 	isb	sy
9000e97e:	f3bf 8f4f 	dsb	sy
9000e982:	e7fe      	b.n	9000e982 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000e984:	2900      	cmp	r1, #0
9000e986:	bf08      	it	eq
9000e988:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000e98a:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000e98c:	6429      	str	r1, [r5, #64]	; 0x40
9000e98e:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e990:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e992:	2201      	movs	r2, #1
9000e994:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000e998:	f7ff fe14 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e99c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e99e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e9a0:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e9a2:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9a4:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000e9a8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9ac:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9ae:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9b0:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9b2:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e9b4:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e9b6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9ba:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e9bc:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e9c0:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e9c4:	f7ff fd44 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e9c8:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000e9cc:	f7ff fd40 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000e9d0:	f7ff fe1a 	bl	9000e608 <vPortExitCritical>
	}
9000e9d4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000e9d6:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000e9da:	b003      	add	sp, #12
9000e9dc:	bd30      	pop	{r4, r5, pc}
9000e9de:	bf00      	nop

9000e9e0 <xQueueGenericCreate>:
	{
9000e9e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e9e2:	b940      	cbnz	r0, 9000e9f6 <xQueueGenericCreate+0x16>
9000e9e4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9e8:	f383 8811 	msr	BASEPRI, r3
9000e9ec:	f3bf 8f6f 	isb	sy
9000e9f0:	f3bf 8f4f 	dsb	sy
9000e9f4:	e7fe      	b.n	9000e9f4 <xQueueGenericCreate+0x14>
9000e9f6:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e9f8:	fb01 f000 	mul.w	r0, r1, r0
9000e9fc:	460e      	mov	r6, r1
9000e9fe:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ea00:	3050      	adds	r0, #80	; 0x50
9000ea02:	f7ff fc03 	bl	9000e20c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ea06:	4604      	mov	r4, r0
9000ea08:	b340      	cbz	r0, 9000ea5c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ea0a:	2300      	movs	r3, #0
9000ea0c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000ea10:	b336      	cbz	r6, 9000ea60 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea12:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000ea16:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ea18:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000ea1c:	f7ff fdd2 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea20:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ea22:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ea26:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea28:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000ea2c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea30:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea32:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea34:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea36:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea38:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ea3a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ea3c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ea3e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000ea40:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ea44:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ea48:	f7ff fd02 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ea4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ea50:	f7ff fcfe 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000ea54:	f7ff fdd8 	bl	9000e608 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ea58:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000ea5c:	4620      	mov	r0, r4
9000ea5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000ea60:	4603      	mov	r3, r0
9000ea62:	e7d8      	b.n	9000ea16 <xQueueGenericCreate+0x36>

9000ea64 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000ea64:	b940      	cbnz	r0, 9000ea78 <xQueueCreateCountingSemaphoreStatic+0x14>
9000ea66:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea6a:	f383 8811 	msr	BASEPRI, r3
9000ea6e:	f3bf 8f6f 	isb	sy
9000ea72:	f3bf 8f4f 	dsb	sy
9000ea76:	e7fe      	b.n	9000ea76 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000ea78:	4288      	cmp	r0, r1
9000ea7a:	d208      	bcs.n	9000ea8e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000ea7c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea80:	f383 8811 	msr	BASEPRI, r3
9000ea84:	f3bf 8f6f 	isb	sy
9000ea88:	f3bf 8f4f 	dsb	sy
9000ea8c:	e7fe      	b.n	9000ea8c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000ea8e:	b530      	push	{r4, r5, lr}
9000ea90:	4615      	mov	r5, r2
9000ea92:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000ea94:	2a00      	cmp	r2, #0
9000ea96:	d03d      	beq.n	9000eb14 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ea98:	2350      	movs	r3, #80	; 0x50
9000ea9a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ea9c:	9b03      	ldr	r3, [sp, #12]
9000ea9e:	2b50      	cmp	r3, #80	; 0x50
9000eaa0:	d008      	beq.n	9000eab4 <xQueueCreateCountingSemaphoreStatic+0x50>
9000eaa2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eaa6:	f383 8811 	msr	BASEPRI, r3
9000eaaa:	f3bf 8f6f 	isb	sy
9000eaae:	f3bf 8f4f 	dsb	sy
9000eab2:	e7fe      	b.n	9000eab2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000eab4:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eab6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eab8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000eaba:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eabc:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000eac0:	6414      	str	r4, [r2, #64]	; 0x40
9000eac2:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000eac4:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000eac6:	f7ff fd7d 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eaca:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000eacc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000eace:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ead0:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000ead4:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ead8:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eadc:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eade:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eae0:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000eae2:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eae4:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eae8:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000eaec:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000eaf0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eaf4:	f7ff fcac 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eaf8:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000eafc:	f7ff fca8 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000eb00:	f7ff fd82 	bl	9000e608 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eb04:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eb06:	9901      	ldr	r1, [sp, #4]
	}
9000eb08:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000eb0a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000eb0e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000eb10:	b005      	add	sp, #20
9000eb12:	bd30      	pop	{r4, r5, pc}
9000eb14:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb18:	f383 8811 	msr	BASEPRI, r3
9000eb1c:	f3bf 8f6f 	isb	sy
9000eb20:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000eb24:	e7fe      	b.n	9000eb24 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000eb26:	bf00      	nop

9000eb28 <xQueueCreateCountingSemaphore>:
	{
9000eb28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000eb2a:	b940      	cbnz	r0, 9000eb3e <xQueueCreateCountingSemaphore+0x16>
9000eb2c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb30:	f383 8811 	msr	BASEPRI, r3
9000eb34:	f3bf 8f6f 	isb	sy
9000eb38:	f3bf 8f4f 	dsb	sy
9000eb3c:	e7fe      	b.n	9000eb3c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000eb3e:	4288      	cmp	r0, r1
9000eb40:	4604      	mov	r4, r0
9000eb42:	460e      	mov	r6, r1
9000eb44:	d208      	bcs.n	9000eb58 <xQueueCreateCountingSemaphore+0x30>
9000eb46:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb4a:	f383 8811 	msr	BASEPRI, r3
9000eb4e:	f3bf 8f6f 	isb	sy
9000eb52:	f3bf 8f4f 	dsb	sy
9000eb56:	e7fe      	b.n	9000eb56 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000eb58:	2050      	movs	r0, #80	; 0x50
9000eb5a:	f7ff fb57 	bl	9000e20c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000eb5e:	4605      	mov	r5, r0
9000eb60:	b330      	cbz	r0, 9000ebb0 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000eb62:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eb64:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000eb66:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000eb68:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000eb6c:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000eb6e:	f7ff fd29 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb72:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000eb74:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eb76:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000eb7a:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb7c:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000eb80:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb84:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb86:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb88:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb8a:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000eb8c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eb8e:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000eb90:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000eb94:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eb98:	f7ff fc5a 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eb9c:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000eba0:	f7ff fc56 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000eba4:	f7ff fd30 	bl	9000e608 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eba8:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ebaa:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000ebac:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000ebb0:	4628      	mov	r0, r5
9000ebb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000ebb4 <xQueueGenericSend>:
{
9000ebb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ebb8:	b084      	sub	sp, #16
9000ebba:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000ebbc:	2800      	cmp	r0, #0
9000ebbe:	f000 8103 	beq.w	9000edc8 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ebc2:	4688      	mov	r8, r1
9000ebc4:	4604      	mov	r4, r0
9000ebc6:	461f      	mov	r7, r3
9000ebc8:	2900      	cmp	r1, #0
9000ebca:	f000 8097 	beq.w	9000ecfc <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ebce:	2f02      	cmp	r7, #2
9000ebd0:	d10b      	bne.n	9000ebea <xQueueGenericSend+0x36>
9000ebd2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ebd4:	2b01      	cmp	r3, #1
9000ebd6:	d008      	beq.n	9000ebea <xQueueGenericSend+0x36>
9000ebd8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebdc:	f383 8811 	msr	BASEPRI, r3
9000ebe0:	f3bf 8f6f 	isb	sy
9000ebe4:	f3bf 8f4f 	dsb	sy
9000ebe8:	e7fe      	b.n	9000ebe8 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ebea:	f001 fd4d 	bl	90010688 <xTaskGetSchedulerState>
9000ebee:	2800      	cmp	r0, #0
9000ebf0:	f000 80f3 	beq.w	9000edda <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ebf4:	f1a7 0902 	sub.w	r9, r7, #2
9000ebf8:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebfa:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ebfe:	fab9 f989 	clz	r9, r9
9000ec02:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000ec06:	f7ff fcdd 	bl	9000e5c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ec0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000ec0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ec0e:	429a      	cmp	r2, r3
9000ec10:	f0c0 80f0 	bcc.w	9000edf4 <xQueueGenericSend+0x240>
9000ec14:	f1b9 0f00 	cmp.w	r9, #0
9000ec18:	f040 80ec 	bne.w	9000edf4 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ec1c:	9b01      	ldr	r3, [sp, #4]
9000ec1e:	2b00      	cmp	r3, #0
9000ec20:	f000 8101 	beq.w	9000ee26 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000ec24:	2d00      	cmp	r5, #0
9000ec26:	f000 80cb 	beq.w	9000edc0 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000ec2a:	f7ff fced 	bl	9000e608 <vPortExitCritical>
		vTaskSuspendAll();
9000ec2e:	f001 fb55 	bl	900102dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ec32:	f7ff fcc7 	bl	9000e5c4 <vPortEnterCritical>
9000ec36:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ec3a:	2bff      	cmp	r3, #255	; 0xff
9000ec3c:	d102      	bne.n	9000ec44 <xQueueGenericSend+0x90>
9000ec3e:	2300      	movs	r3, #0
9000ec40:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000ec44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000ec48:	2bff      	cmp	r3, #255	; 0xff
9000ec4a:	d102      	bne.n	9000ec52 <xQueueGenericSend+0x9e>
9000ec4c:	2300      	movs	r3, #0
9000ec4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000ec52:	f7ff fcd9 	bl	9000e608 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000ec56:	a901      	add	r1, sp, #4
9000ec58:	a802      	add	r0, sp, #8
9000ec5a:	f001 fcc1 	bl	900105e0 <xTaskCheckForTimeOut>
9000ec5e:	2800      	cmp	r0, #0
9000ec60:	f040 80e5 	bne.w	9000ee2e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000ec64:	f7ff fcae 	bl	9000e5c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000ec68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000ec6a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ec6c:	429a      	cmp	r2, r3
9000ec6e:	d052      	beq.n	9000ed16 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000ec70:	f7ff fcca 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ec74:	f7ff fca6 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ec78:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000ec7c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec7e:	2d00      	cmp	r5, #0
9000ec80:	dc04      	bgt.n	9000ec8c <xQueueGenericSend+0xd8>
9000ec82:	e011      	b.n	9000eca8 <xQueueGenericSend+0xf4>
			--cTxLock;
9000ec84:	1e6a      	subs	r2, r5, #1
9000ec86:	b2d3      	uxtb	r3, r2
9000ec88:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec8a:	b16b      	cbz	r3, 9000eca8 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec8e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec90:	b153      	cbz	r3, 9000eca8 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec92:	f001 fc4f 	bl	90010534 <xTaskRemoveFromEventList>
9000ec96:	2800      	cmp	r0, #0
9000ec98:	d0f4      	beq.n	9000ec84 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000ec9a:	f001 fce9 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000ec9e:	1e6a      	subs	r2, r5, #1
9000eca0:	b2d3      	uxtb	r3, r2
9000eca2:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eca4:	2b00      	cmp	r3, #0
9000eca6:	d1f1      	bne.n	9000ec8c <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000eca8:	23ff      	movs	r3, #255	; 0xff
9000ecaa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000ecae:	f7ff fcab 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ecb2:	f7ff fc87 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ecb6:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000ecba:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ecbc:	2d00      	cmp	r5, #0
9000ecbe:	dd14      	ble.n	9000ecea <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecc0:	f104 0a10 	add.w	sl, r4, #16
9000ecc4:	e003      	b.n	9000ecce <xQueueGenericSend+0x11a>
				--cRxLock;
9000ecc6:	1e6a      	subs	r2, r5, #1
9000ecc8:	b2d3      	uxtb	r3, r2
9000ecca:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eccc:	b16b      	cbz	r3, 9000ecea <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecd0:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecd2:	b153      	cbz	r3, 9000ecea <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecd4:	f001 fc2e 	bl	90010534 <xTaskRemoveFromEventList>
9000ecd8:	2800      	cmp	r0, #0
9000ecda:	d0f4      	beq.n	9000ecc6 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000ecdc:	f001 fcc8 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000ece0:	1e6a      	subs	r2, r5, #1
9000ece2:	b2d3      	uxtb	r3, r2
9000ece4:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ece6:	2b00      	cmp	r3, #0
9000ece8:	d1f1      	bne.n	9000ecce <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000ecea:	23ff      	movs	r3, #255	; 0xff
9000ecec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ecf0:	f7ff fc8a 	bl	9000e608 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000ecf4:	f001 fafa 	bl	900102ec <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ecf8:	2501      	movs	r5, #1
9000ecfa:	e784      	b.n	9000ec06 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ecfc:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000ecfe:	2b00      	cmp	r3, #0
9000ed00:	f43f af65 	beq.w	9000ebce <xQueueGenericSend+0x1a>
9000ed04:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed08:	f383 8811 	msr	BASEPRI, r3
9000ed0c:	f3bf 8f6f 	isb	sy
9000ed10:	f3bf 8f4f 	dsb	sy
9000ed14:	e7fe      	b.n	9000ed14 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ed16:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ed1a:	f7ff fc75 	bl	9000e608 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ed1e:	9901      	ldr	r1, [sp, #4]
9000ed20:	4650      	mov	r0, sl
9000ed22:	f001 fb79 	bl	90010418 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ed26:	f7ff fc4d 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ed2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000ed2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed30:	2d00      	cmp	r5, #0
9000ed32:	dc04      	bgt.n	9000ed3e <xQueueGenericSend+0x18a>
9000ed34:	e011      	b.n	9000ed5a <xQueueGenericSend+0x1a6>
			--cTxLock;
9000ed36:	1e6b      	subs	r3, r5, #1
9000ed38:	b2da      	uxtb	r2, r3
9000ed3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed3c:	b16a      	cbz	r2, 9000ed5a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ed3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ed40:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ed42:	b153      	cbz	r3, 9000ed5a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ed44:	f001 fbf6 	bl	90010534 <xTaskRemoveFromEventList>
9000ed48:	2800      	cmp	r0, #0
9000ed4a:	d0f4      	beq.n	9000ed36 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000ed4c:	f001 fc90 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000ed50:	1e6b      	subs	r3, r5, #1
9000ed52:	b2da      	uxtb	r2, r3
9000ed54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ed56:	2a00      	cmp	r2, #0
9000ed58:	d1f1      	bne.n	9000ed3e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000ed5a:	23ff      	movs	r3, #255	; 0xff
9000ed5c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000ed60:	f7ff fc52 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ed64:	f7ff fc2e 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ed68:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ed6c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed6e:	2d00      	cmp	r5, #0
9000ed70:	dc04      	bgt.n	9000ed7c <xQueueGenericSend+0x1c8>
9000ed72:	e011      	b.n	9000ed98 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000ed74:	1e6b      	subs	r3, r5, #1
9000ed76:	b2da      	uxtb	r2, r3
9000ed78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed7a:	b16a      	cbz	r2, 9000ed98 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed7c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed7e:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed80:	b153      	cbz	r3, 9000ed98 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed82:	f001 fbd7 	bl	90010534 <xTaskRemoveFromEventList>
9000ed86:	2800      	cmp	r0, #0
9000ed88:	d0f4      	beq.n	9000ed74 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000ed8a:	f001 fc71 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000ed8e:	1e6b      	subs	r3, r5, #1
9000ed90:	b2da      	uxtb	r2, r3
9000ed92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed94:	2a00      	cmp	r2, #0
9000ed96:	d1f1      	bne.n	9000ed7c <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed98:	23ff      	movs	r3, #255	; 0xff
9000ed9a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ed9e:	f7ff fc33 	bl	9000e608 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000eda2:	f001 faa3 	bl	900102ec <xTaskResumeAll>
9000eda6:	2800      	cmp	r0, #0
9000eda8:	d1a6      	bne.n	9000ecf8 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000edaa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000edae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000edb2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000edb6:	f3bf 8f4f 	dsb	sy
9000edba:	f3bf 8f6f 	isb	sy
9000edbe:	e79b      	b.n	9000ecf8 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000edc0:	a802      	add	r0, sp, #8
9000edc2:	f001 fc01 	bl	900105c8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000edc6:	e730      	b.n	9000ec2a <xQueueGenericSend+0x76>
9000edc8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000edcc:	f383 8811 	msr	BASEPRI, r3
9000edd0:	f3bf 8f6f 	isb	sy
9000edd4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000edd8:	e7fe      	b.n	9000edd8 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000edda:	9b01      	ldr	r3, [sp, #4]
9000eddc:	2b00      	cmp	r3, #0
9000edde:	f43f af09 	beq.w	9000ebf4 <xQueueGenericSend+0x40>
9000ede2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ede6:	f383 8811 	msr	BASEPRI, r3
9000edea:	f3bf 8f6f 	isb	sy
9000edee:	f3bf 8f4f 	dsb	sy
9000edf2:	e7fe      	b.n	9000edf2 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000edf4:	463a      	mov	r2, r7
9000edf6:	4641      	mov	r1, r8
9000edf8:	4620      	mov	r0, r4
9000edfa:	f7ff fd43 	bl	9000e884 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000edfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ee00:	2b00      	cmp	r3, #0
9000ee02:	d152      	bne.n	9000eeaa <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000ee04:	b148      	cbz	r0, 9000ee1a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000ee06:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ee0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ee0e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ee12:	f3bf 8f4f 	dsb	sy
9000ee16:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000ee1a:	f7ff fbf5 	bl	9000e608 <vPortExitCritical>
				return pdPASS;
9000ee1e:	2001      	movs	r0, #1
}
9000ee20:	b004      	add	sp, #16
9000ee22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000ee26:	f7ff fbef 	bl	9000e608 <vPortExitCritical>
					return errQUEUE_FULL;
9000ee2a:	4648      	mov	r0, r9
9000ee2c:	e7f8      	b.n	9000ee20 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000ee2e:	f7ff fbc9 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ee32:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000ee36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ee38:	2d00      	cmp	r5, #0
9000ee3a:	dd10      	ble.n	9000ee5e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee3c:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000ee40:	e003      	b.n	9000ee4a <xQueueGenericSend+0x296>
			--cTxLock;
9000ee42:	1e6b      	subs	r3, r5, #1
9000ee44:	b2da      	uxtb	r2, r3
9000ee46:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ee48:	b14a      	cbz	r2, 9000ee5e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ee4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee4c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ee4e:	b133      	cbz	r3, 9000ee5e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ee50:	f001 fb70 	bl	90010534 <xTaskRemoveFromEventList>
9000ee54:	2800      	cmp	r0, #0
9000ee56:	d0f4      	beq.n	9000ee42 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000ee58:	f001 fc0a 	bl	90010670 <vTaskMissedYield>
9000ee5c:	e7f1      	b.n	9000ee42 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ee5e:	23ff      	movs	r3, #255	; 0xff
9000ee60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000ee64:	f7ff fbd0 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ee68:	f7ff fbac 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ee6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ee70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ee72:	2d00      	cmp	r5, #0
9000ee74:	dd10      	ble.n	9000ee98 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ee76:	f104 0610 	add.w	r6, r4, #16
9000ee7a:	e003      	b.n	9000ee84 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000ee7c:	1e6b      	subs	r3, r5, #1
9000ee7e:	b2da      	uxtb	r2, r3
9000ee80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ee82:	b14a      	cbz	r2, 9000ee98 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ee84:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ee86:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ee88:	b133      	cbz	r3, 9000ee98 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ee8a:	f001 fb53 	bl	90010534 <xTaskRemoveFromEventList>
9000ee8e:	2800      	cmp	r0, #0
9000ee90:	d0f4      	beq.n	9000ee7c <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000ee92:	f001 fbed 	bl	90010670 <vTaskMissedYield>
9000ee96:	e7f1      	b.n	9000ee7c <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ee98:	23ff      	movs	r3, #255	; 0xff
9000ee9a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ee9e:	f7ff fbb3 	bl	9000e608 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000eea2:	f001 fa23 	bl	900102ec <xTaskResumeAll>
			return errQUEUE_FULL;
9000eea6:	2000      	movs	r0, #0
9000eea8:	e7ba      	b.n	9000ee20 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eeaa:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000eeae:	f001 fb41 	bl	90010534 <xTaskRemoveFromEventList>
9000eeb2:	2800      	cmp	r0, #0
9000eeb4:	d0b1      	beq.n	9000ee1a <xQueueGenericSend+0x266>
9000eeb6:	e7a6      	b.n	9000ee06 <xQueueGenericSend+0x252>

9000eeb8 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000eeb8:	b179      	cbz	r1, 9000eeda <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000eeba:	2350      	movs	r3, #80	; 0x50
	{
9000eebc:	b570      	push	{r4, r5, r6, lr}
9000eebe:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000eec0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000eec2:	9b01      	ldr	r3, [sp, #4]
9000eec4:	2b50      	cmp	r3, #80	; 0x50
9000eec6:	d011      	beq.n	9000eeec <xQueueCreateMutexStatic+0x34>
9000eec8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eecc:	f383 8811 	msr	BASEPRI, r3
9000eed0:	f3bf 8f6f 	isb	sy
9000eed4:	f3bf 8f4f 	dsb	sy
9000eed8:	e7fe      	b.n	9000eed8 <xQueueCreateMutexStatic+0x20>
9000eeda:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eede:	f383 8811 	msr	BASEPRI, r3
9000eee2:	f3bf 8f6f 	isb	sy
9000eee6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000eeea:	e7fe      	b.n	9000eeea <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000eeec:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eeee:	2301      	movs	r3, #1
9000eef0:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000eef2:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000eef4:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000eef8:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000eefa:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000eefc:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000ef00:	f7ff fb60 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef04:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef06:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef08:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ef0a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ef10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef14:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000ef18:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef1c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef1e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef20:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef22:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef26:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef2a:	f7ff fa91 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ef2e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ef32:	f7ff fa8d 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000ef36:	f7ff fb67 	bl	9000e608 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000ef3a:	4633      	mov	r3, r6
9000ef3c:	4632      	mov	r2, r6
9000ef3e:	4631      	mov	r1, r6
9000ef40:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000ef42:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000ef46:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000ef48:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000ef4a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000ef4c:	f7ff fe32 	bl	9000ebb4 <xQueueGenericSend>
	}
9000ef50:	4620      	mov	r0, r4
9000ef52:	b002      	add	sp, #8
9000ef54:	bd70      	pop	{r4, r5, r6, pc}
9000ef56:	bf00      	nop

9000ef58 <xQueueGiveMutexRecursive>:
	{
9000ef58:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000ef5a:	b138      	cbz	r0, 9000ef6c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000ef5c:	6885      	ldr	r5, [r0, #8]
9000ef5e:	4604      	mov	r4, r0
9000ef60:	f001 fb8c 	bl	9001067c <xTaskGetCurrentTaskHandle>
9000ef64:	4285      	cmp	r5, r0
9000ef66:	d00a      	beq.n	9000ef7e <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000ef68:	2000      	movs	r0, #0
	}
9000ef6a:	bd38      	pop	{r3, r4, r5, pc}
9000ef6c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef70:	f383 8811 	msr	BASEPRI, r3
9000ef74:	f3bf 8f6f 	isb	sy
9000ef78:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000ef7c:	e7fe      	b.n	9000ef7c <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000ef7e:	68e3      	ldr	r3, [r4, #12]
9000ef80:	3b01      	subs	r3, #1
9000ef82:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000ef84:	b10b      	cbz	r3, 9000ef8a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000ef86:	2001      	movs	r0, #1
	}
9000ef88:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000ef8a:	461a      	mov	r2, r3
9000ef8c:	4619      	mov	r1, r3
9000ef8e:	4620      	mov	r0, r4
9000ef90:	f7ff fe10 	bl	9000ebb4 <xQueueGenericSend>
			xReturn = pdPASS;
9000ef94:	2001      	movs	r0, #1
	}
9000ef96:	bd38      	pop	{r3, r4, r5, pc}

9000ef98 <xQueueCreateMutex>:
	{
9000ef98:	b570      	push	{r4, r5, r6, lr}
9000ef9a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ef9c:	2050      	movs	r0, #80	; 0x50
9000ef9e:	f7ff f935 	bl	9000e20c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000efa2:	4604      	mov	r4, r0
9000efa4:	b370      	cbz	r0, 9000f004 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000efa6:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000efa8:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000efaa:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000efac:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000efb0:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000efb4:	f7ff fb06 	bl	9000e5c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efb8:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000efba:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000efbc:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000efc0:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efc2:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000efc6:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efca:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efcc:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efce:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000efd0:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efd2:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000efd6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000efda:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000efde:	f7ff fa37 	bl	9000e450 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000efe2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000efe6:	f7ff fa33 	bl	9000e450 <vListInitialise>
	taskEXIT_CRITICAL();
9000efea:	f7ff fb0d 	bl	9000e608 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000efee:	4633      	mov	r3, r6
9000eff0:	4632      	mov	r2, r6
9000eff2:	4631      	mov	r1, r6
9000eff4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000eff6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000effa:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000effc:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000effe:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f000:	f7ff fdd8 	bl	9000ebb4 <xQueueGenericSend>
	}
9000f004:	4620      	mov	r0, r4
9000f006:	bd70      	pop	{r4, r5, r6, pc}

9000f008 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000f008:	2800      	cmp	r0, #0
9000f00a:	d04e      	beq.n	9000f0aa <xQueueGenericSendFromISR+0xa2>
{
9000f00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f010:	460e      	mov	r6, r1
9000f012:	4604      	mov	r4, r0
9000f014:	4617      	mov	r7, r2
9000f016:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f018:	b339      	cbz	r1, 9000f06a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f01a:	2d02      	cmp	r5, #2
9000f01c:	d10b      	bne.n	9000f036 <xQueueGenericSendFromISR+0x2e>
9000f01e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f020:	2b01      	cmp	r3, #1
9000f022:	d008      	beq.n	9000f036 <xQueueGenericSendFromISR+0x2e>
9000f024:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f028:	f383 8811 	msr	BASEPRI, r3
9000f02c:	f3bf 8f6f 	isb	sy
9000f030:	f3bf 8f4f 	dsb	sy
9000f034:	e7fe      	b.n	9000f034 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f036:	f7ff fbf7 	bl	9000e828 <vPortValidateInterruptPriority>
	__asm volatile
9000f03a:	f3ef 8811 	mrs	r8, BASEPRI
9000f03e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f042:	f383 8811 	msr	BASEPRI, r3
9000f046:	f3bf 8f6f 	isb	sy
9000f04a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f04e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f050:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f052:	429a      	cmp	r2, r3
9000f054:	d315      	bcc.n	9000f082 <xQueueGenericSendFromISR+0x7a>
9000f056:	f1a5 0002 	sub.w	r0, r5, #2
9000f05a:	fab0 f080 	clz	r0, r0
9000f05e:	0940      	lsrs	r0, r0, #5
9000f060:	b978      	cbnz	r0, 9000f082 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000f062:	f388 8811 	msr	BASEPRI, r8
}
9000f066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f06a:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f06c:	2b00      	cmp	r3, #0
9000f06e:	d0d4      	beq.n	9000f01a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000f070:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f074:	f383 8811 	msr	BASEPRI, r3
9000f078:	f3bf 8f6f 	isb	sy
9000f07c:	f3bf 8f4f 	dsb	sy
9000f080:	e7fe      	b.n	9000f080 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f082:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000f084:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f088:	4631      	mov	r1, r6
9000f08a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000f08c:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f08e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f090:	f7ff fbf8 	bl	9000e884 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000f094:	1c6b      	adds	r3, r5, #1
9000f096:	d011      	beq.n	9000f0bc <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f098:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000f09a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f09c:	b25b      	sxtb	r3, r3
9000f09e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000f0a2:	f388 8811 	msr	BASEPRI, r8
}
9000f0a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000f0aa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f0ae:	f383 8811 	msr	BASEPRI, r3
9000f0b2:	f3bf 8f6f 	isb	sy
9000f0b6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f0ba:	e7fe      	b.n	9000f0ba <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f0be:	b90b      	cbnz	r3, 9000f0c4 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000f0c0:	2001      	movs	r0, #1
9000f0c2:	e7ce      	b.n	9000f062 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0c4:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f0c8:	f001 fa34 	bl	90010534 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f0cc:	2800      	cmp	r0, #0
9000f0ce:	d0f7      	beq.n	9000f0c0 <xQueueGenericSendFromISR+0xb8>
9000f0d0:	2f00      	cmp	r7, #0
9000f0d2:	d0f5      	beq.n	9000f0c0 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f0d4:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f0d6:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f0d8:	603b      	str	r3, [r7, #0]
9000f0da:	e7c2      	b.n	9000f062 <xQueueGenericSendFromISR+0x5a>

9000f0dc <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000f0dc:	b360      	cbz	r0, 9000f138 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f0de:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000f0e0:	b570      	push	{r4, r5, r6, lr}
9000f0e2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000f0e4:	b143      	cbz	r3, 9000f0f8 <xQueueGiveFromISR+0x1c>
9000f0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f0ea:	f383 8811 	msr	BASEPRI, r3
9000f0ee:	f3bf 8f6f 	isb	sy
9000f0f2:	f3bf 8f4f 	dsb	sy
9000f0f6:	e7fe      	b.n	9000f0f6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f0f8:	6803      	ldr	r3, [r0, #0]
9000f0fa:	460d      	mov	r5, r1
9000f0fc:	b32b      	cbz	r3, 9000f14a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f0fe:	f7ff fb93 	bl	9000e828 <vPortValidateInterruptPriority>
	__asm volatile
9000f102:	f3ef 8611 	mrs	r6, BASEPRI
9000f106:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f10a:	f383 8811 	msr	BASEPRI, r3
9000f10e:	f3bf 8f6f 	isb	sy
9000f112:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f116:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f118:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000f11a:	429a      	cmp	r2, r3
9000f11c:	d921      	bls.n	9000f162 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f11e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f122:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f124:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f126:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f128:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f12a:	d01e      	beq.n	9000f16a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f12c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000f12e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f130:	b25b      	sxtb	r3, r3
9000f132:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f136:	e015      	b.n	9000f164 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f138:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f13c:	f383 8811 	msr	BASEPRI, r3
9000f140:	f3bf 8f6f 	isb	sy
9000f144:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f148:	e7fe      	b.n	9000f148 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f14a:	6883      	ldr	r3, [r0, #8]
9000f14c:	2b00      	cmp	r3, #0
9000f14e:	d0d6      	beq.n	9000f0fe <xQueueGiveFromISR+0x22>
9000f150:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f154:	f383 8811 	msr	BASEPRI, r3
9000f158:	f3bf 8f6f 	isb	sy
9000f15c:	f3bf 8f4f 	dsb	sy
9000f160:	e7fe      	b.n	9000f160 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f162:	2000      	movs	r0, #0
	__asm volatile
9000f164:	f386 8811 	msr	BASEPRI, r6
}
9000f168:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f16a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f16c:	b90b      	cbnz	r3, 9000f172 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000f16e:	2001      	movs	r0, #1
9000f170:	e7f8      	b.n	9000f164 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f172:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f176:	f001 f9dd 	bl	90010534 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f17a:	2d00      	cmp	r5, #0
9000f17c:	d0f7      	beq.n	9000f16e <xQueueGiveFromISR+0x92>
9000f17e:	2800      	cmp	r0, #0
9000f180:	d0f5      	beq.n	9000f16e <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f182:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f184:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f186:	602b      	str	r3, [r5, #0]
9000f188:	e7ec      	b.n	9000f164 <xQueueGiveFromISR+0x88>
9000f18a:	bf00      	nop

9000f18c <xQueueReceive>:
{
9000f18c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f190:	b085      	sub	sp, #20
9000f192:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f194:	2800      	cmp	r0, #0
9000f196:	f000 815c 	beq.w	9000f452 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f19a:	460f      	mov	r7, r1
9000f19c:	4604      	mov	r4, r0
9000f19e:	2900      	cmp	r1, #0
9000f1a0:	d079      	beq.n	9000f296 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f1a2:	f001 fa71 	bl	90010688 <xTaskGetSchedulerState>
9000f1a6:	2800      	cmp	r0, #0
9000f1a8:	f000 8081 	beq.w	9000f2ae <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000f1ac:	f7ff fa0a 	bl	9000e5c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f1b0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f1b2:	2d00      	cmp	r5, #0
9000f1b4:	f040 8138 	bne.w	9000f428 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f1b8:	9b01      	ldr	r3, [sp, #4]
9000f1ba:	2b00      	cmp	r3, #0
9000f1bc:	f000 80d5 	beq.w	9000f36a <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000f1c0:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1c2:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f1c6:	a802      	add	r0, sp, #8
9000f1c8:	f001 f9fe 	bl	900105c8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f1cc:	f7ff fa1c 	bl	9000e608 <vPortExitCritical>
		vTaskSuspendAll();
9000f1d0:	f001 f884 	bl	900102dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f1d4:	f7ff f9f6 	bl	9000e5c4 <vPortEnterCritical>
9000f1d8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f1dc:	2bff      	cmp	r3, #255	; 0xff
9000f1de:	d101      	bne.n	9000f1e4 <xQueueReceive+0x58>
9000f1e0:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000f1e4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f1e8:	2bff      	cmp	r3, #255	; 0xff
9000f1ea:	d101      	bne.n	9000f1f0 <xQueueReceive+0x64>
9000f1ec:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000f1f0:	f7ff fa0a 	bl	9000e608 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f1f4:	a901      	add	r1, sp, #4
9000f1f6:	a802      	add	r0, sp, #8
9000f1f8:	f001 f9f2 	bl	900105e0 <xTaskCheckForTimeOut>
9000f1fc:	2800      	cmp	r0, #0
9000f1fe:	d163      	bne.n	9000f2c8 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000f200:	f7ff f9e0 	bl	9000e5c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f204:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f206:	2b00      	cmp	r3, #0
9000f208:	f000 80b5 	beq.w	9000f376 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000f20c:	f7ff f9fc 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f210:	f7ff f9d8 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f214:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f218:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f21a:	2d00      	cmp	r5, #0
9000f21c:	dc04      	bgt.n	9000f228 <xQueueReceive+0x9c>
9000f21e:	e011      	b.n	9000f244 <xQueueReceive+0xb8>
			--cTxLock;
9000f220:	1e6b      	subs	r3, r5, #1
9000f222:	b2da      	uxtb	r2, r3
9000f224:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f226:	b16a      	cbz	r2, 9000f244 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f228:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f22a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f22c:	b153      	cbz	r3, 9000f244 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f22e:	f001 f981 	bl	90010534 <xTaskRemoveFromEventList>
9000f232:	2800      	cmp	r0, #0
9000f234:	d0f4      	beq.n	9000f220 <xQueueReceive+0x94>
						vTaskMissedYield();
9000f236:	f001 fa1b 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000f23a:	1e6b      	subs	r3, r5, #1
9000f23c:	b2da      	uxtb	r2, r3
9000f23e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f240:	2a00      	cmp	r2, #0
9000f242:	d1f1      	bne.n	9000f228 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000f244:	23ff      	movs	r3, #255	; 0xff
9000f246:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f24a:	f7ff f9dd 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f24e:	f7ff f9b9 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f252:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f256:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f258:	2d00      	cmp	r5, #0
9000f25a:	dd14      	ble.n	9000f286 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f25c:	f104 0910 	add.w	r9, r4, #16
9000f260:	e003      	b.n	9000f26a <xQueueReceive+0xde>
				--cRxLock;
9000f262:	1e6b      	subs	r3, r5, #1
9000f264:	b2da      	uxtb	r2, r3
9000f266:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f268:	b16a      	cbz	r2, 9000f286 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f26a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f26c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f26e:	b153      	cbz	r3, 9000f286 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f270:	f001 f960 	bl	90010534 <xTaskRemoveFromEventList>
9000f274:	2800      	cmp	r0, #0
9000f276:	d0f4      	beq.n	9000f262 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000f278:	f001 f9fa 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000f27c:	1e6b      	subs	r3, r5, #1
9000f27e:	b2da      	uxtb	r2, r3
9000f280:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f282:	2a00      	cmp	r2, #0
9000f284:	d1f1      	bne.n	9000f26a <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000f286:	23ff      	movs	r3, #255	; 0xff
9000f288:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f28c:	f7ff f9bc 	bl	9000e608 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f290:	f001 f82c 	bl	900102ec <xTaskResumeAll>
		taskENTER_CRITICAL();
9000f294:	e060      	b.n	9000f358 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f296:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f298:	2b00      	cmp	r3, #0
9000f29a:	d082      	beq.n	9000f1a2 <xQueueReceive+0x16>
	__asm volatile
9000f29c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2a0:	f383 8811 	msr	BASEPRI, r3
9000f2a4:	f3bf 8f6f 	isb	sy
9000f2a8:	f3bf 8f4f 	dsb	sy
9000f2ac:	e7fe      	b.n	9000f2ac <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f2ae:	9b01      	ldr	r3, [sp, #4]
9000f2b0:	2b00      	cmp	r3, #0
9000f2b2:	f43f af7b 	beq.w	9000f1ac <xQueueReceive+0x20>
9000f2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2ba:	f383 8811 	msr	BASEPRI, r3
9000f2be:	f3bf 8f6f 	isb	sy
9000f2c2:	f3bf 8f4f 	dsb	sy
9000f2c6:	e7fe      	b.n	9000f2c6 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000f2c8:	f7ff f97c 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f2cc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f2d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2d2:	2d00      	cmp	r5, #0
9000f2d4:	dc04      	bgt.n	9000f2e0 <xQueueReceive+0x154>
9000f2d6:	e011      	b.n	9000f2fc <xQueueReceive+0x170>
			--cTxLock;
9000f2d8:	1e6b      	subs	r3, r5, #1
9000f2da:	b2da      	uxtb	r2, r3
9000f2dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2de:	b16a      	cbz	r2, 9000f2fc <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2e2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2e4:	b153      	cbz	r3, 9000f2fc <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2e6:	f001 f925 	bl	90010534 <xTaskRemoveFromEventList>
9000f2ea:	2800      	cmp	r0, #0
9000f2ec:	d0f4      	beq.n	9000f2d8 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000f2ee:	f001 f9bf 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000f2f2:	1e6b      	subs	r3, r5, #1
9000f2f4:	b2da      	uxtb	r2, r3
9000f2f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2f8:	2a00      	cmp	r2, #0
9000f2fa:	d1f1      	bne.n	9000f2e0 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000f2fc:	23ff      	movs	r3, #255	; 0xff
9000f2fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f302:	f7ff f981 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f306:	f7ff f95d 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f30a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f30e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f310:	2d00      	cmp	r5, #0
9000f312:	dd14      	ble.n	9000f33e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f314:	f104 0910 	add.w	r9, r4, #16
9000f318:	e003      	b.n	9000f322 <xQueueReceive+0x196>
				--cRxLock;
9000f31a:	1e6b      	subs	r3, r5, #1
9000f31c:	b2da      	uxtb	r2, r3
9000f31e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f320:	b16a      	cbz	r2, 9000f33e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f322:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f324:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f326:	b153      	cbz	r3, 9000f33e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f328:	f001 f904 	bl	90010534 <xTaskRemoveFromEventList>
9000f32c:	2800      	cmp	r0, #0
9000f32e:	d0f4      	beq.n	9000f31a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000f330:	f001 f99e 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000f334:	1e6b      	subs	r3, r5, #1
9000f336:	b2da      	uxtb	r2, r3
9000f338:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f33a:	2a00      	cmp	r2, #0
9000f33c:	d1f1      	bne.n	9000f322 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000f33e:	23ff      	movs	r3, #255	; 0xff
9000f340:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f344:	f7ff f960 	bl	9000e608 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f348:	f000 ffd0 	bl	900102ec <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f34c:	f7ff f93a 	bl	9000e5c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f350:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f352:	b153      	cbz	r3, 9000f36a <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000f354:	f7ff f958 	bl	9000e608 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f358:	f7ff f934 	bl	9000e5c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f35c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f35e:	2d00      	cmp	r5, #0
9000f360:	d162      	bne.n	9000f428 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f362:	9b01      	ldr	r3, [sp, #4]
9000f364:	2b00      	cmp	r3, #0
9000f366:	f47f af31 	bne.w	9000f1cc <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f36a:	f7ff f94d 	bl	9000e608 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f36e:	2000      	movs	r0, #0
}
9000f370:	b005      	add	sp, #20
9000f372:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000f376:	f7ff f947 	bl	9000e608 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f37a:	9901      	ldr	r1, [sp, #4]
9000f37c:	4630      	mov	r0, r6
9000f37e:	f001 f84b 	bl	90010418 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f382:	f7ff f91f 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f386:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f38a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f38c:	2d00      	cmp	r5, #0
9000f38e:	dc04      	bgt.n	9000f39a <xQueueReceive+0x20e>
9000f390:	e011      	b.n	9000f3b6 <xQueueReceive+0x22a>
			--cTxLock;
9000f392:	1e6b      	subs	r3, r5, #1
9000f394:	b2da      	uxtb	r2, r3
9000f396:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f398:	b16a      	cbz	r2, 9000f3b6 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f39a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f39c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f39e:	b153      	cbz	r3, 9000f3b6 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3a0:	f001 f8c8 	bl	90010534 <xTaskRemoveFromEventList>
9000f3a4:	2800      	cmp	r0, #0
9000f3a6:	d0f4      	beq.n	9000f392 <xQueueReceive+0x206>
						vTaskMissedYield();
9000f3a8:	f001 f962 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000f3ac:	1e6b      	subs	r3, r5, #1
9000f3ae:	b2da      	uxtb	r2, r3
9000f3b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f3b2:	2a00      	cmp	r2, #0
9000f3b4:	d1f1      	bne.n	9000f39a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f3b6:	23ff      	movs	r3, #255	; 0xff
9000f3b8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f3bc:	f7ff f924 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f3c0:	f7ff f900 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f3c4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f3c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3ca:	2d00      	cmp	r5, #0
9000f3cc:	dd14      	ble.n	9000f3f8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3ce:	f104 0910 	add.w	r9, r4, #16
9000f3d2:	e003      	b.n	9000f3dc <xQueueReceive+0x250>
				--cRxLock;
9000f3d4:	1e6b      	subs	r3, r5, #1
9000f3d6:	b2da      	uxtb	r2, r3
9000f3d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3da:	b16a      	cbz	r2, 9000f3f8 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3de:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f3e0:	b153      	cbz	r3, 9000f3f8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f3e2:	f001 f8a7 	bl	90010534 <xTaskRemoveFromEventList>
9000f3e6:	2800      	cmp	r0, #0
9000f3e8:	d0f4      	beq.n	9000f3d4 <xQueueReceive+0x248>
					vTaskMissedYield();
9000f3ea:	f001 f941 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000f3ee:	1e6b      	subs	r3, r5, #1
9000f3f0:	b2da      	uxtb	r2, r3
9000f3f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f3f4:	2a00      	cmp	r2, #0
9000f3f6:	d1f1      	bne.n	9000f3dc <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000f3f8:	23ff      	movs	r3, #255	; 0xff
9000f3fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f3fe:	f7ff f903 	bl	9000e608 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f402:	f000 ff73 	bl	900102ec <xTaskResumeAll>
9000f406:	2800      	cmp	r0, #0
9000f408:	d1a6      	bne.n	9000f358 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000f40a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f40e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f412:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f416:	f3bf 8f4f 	dsb	sy
9000f41a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000f41e:	f7ff f8d1 	bl	9000e5c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f422:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f424:	2d00      	cmp	r5, #0
9000f426:	d09c      	beq.n	9000f362 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f428:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000f42a:	b152      	cbz	r2, 9000f442 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f42c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f42e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f430:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f432:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f434:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f436:	d301      	bcc.n	9000f43c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f438:	6821      	ldr	r1, [r4, #0]
9000f43a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f43c:	4638      	mov	r0, r7
9000f43e:	f018 fccd 	bl	90027ddc <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f442:	3d01      	subs	r5, #1
9000f444:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f446:	6923      	ldr	r3, [r4, #16]
9000f448:	b963      	cbnz	r3, 9000f464 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f44a:	f7ff f8dd 	bl	9000e608 <vPortExitCritical>
				return pdPASS;
9000f44e:	2001      	movs	r0, #1
9000f450:	e78e      	b.n	9000f370 <xQueueReceive+0x1e4>
9000f452:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f456:	f383 8811 	msr	BASEPRI, r3
9000f45a:	f3bf 8f6f 	isb	sy
9000f45e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f462:	e7fe      	b.n	9000f462 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f464:	f104 0010 	add.w	r0, r4, #16
9000f468:	f001 f864 	bl	90010534 <xTaskRemoveFromEventList>
9000f46c:	2800      	cmp	r0, #0
9000f46e:	d0ec      	beq.n	9000f44a <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000f470:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f474:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f478:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f47c:	f3bf 8f4f 	dsb	sy
9000f480:	f3bf 8f6f 	isb	sy
9000f484:	e7e1      	b.n	9000f44a <xQueueReceive+0x2be>
9000f486:	bf00      	nop

9000f488 <xQueueSemaphoreTake>:
{
9000f488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f48c:	b084      	sub	sp, #16
9000f48e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f490:	2800      	cmp	r0, #0
9000f492:	d05c      	beq.n	9000f54e <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f494:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000f496:	4604      	mov	r4, r0
9000f498:	b147      	cbz	r7, 9000f4ac <xQueueSemaphoreTake+0x24>
9000f49a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f49e:	f383 8811 	msr	BASEPRI, r3
9000f4a2:	f3bf 8f6f 	isb	sy
9000f4a6:	f3bf 8f4f 	dsb	sy
9000f4aa:	e7fe      	b.n	9000f4aa <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f4ac:	f001 f8ec 	bl	90010688 <xTaskGetSchedulerState>
9000f4b0:	4605      	mov	r5, r0
9000f4b2:	2800      	cmp	r0, #0
9000f4b4:	d054      	beq.n	9000f560 <xQueueSemaphoreTake+0xd8>
9000f4b6:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f4b8:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000f4bc:	f7ff f882 	bl	9000e5c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f4c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f4c2:	2b00      	cmp	r3, #0
9000f4c4:	f040 8149 	bne.w	9000f75a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f4c8:	9b01      	ldr	r3, [sp, #4]
9000f4ca:	2b00      	cmp	r3, #0
9000f4cc:	f000 813a 	beq.w	9000f744 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000f4d0:	2d00      	cmp	r5, #0
9000f4d2:	f000 809d 	beq.w	9000f610 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000f4d6:	f7ff f897 	bl	9000e608 <vPortExitCritical>
		vTaskSuspendAll();
9000f4da:	f000 feff 	bl	900102dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f4de:	f7ff f871 	bl	9000e5c4 <vPortEnterCritical>
9000f4e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f4e6:	2bff      	cmp	r3, #255	; 0xff
9000f4e8:	d102      	bne.n	9000f4f0 <xQueueSemaphoreTake+0x68>
9000f4ea:	2300      	movs	r3, #0
9000f4ec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f4f0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f4f4:	2bff      	cmp	r3, #255	; 0xff
9000f4f6:	d102      	bne.n	9000f4fe <xQueueSemaphoreTake+0x76>
9000f4f8:	2300      	movs	r3, #0
9000f4fa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f4fe:	f7ff f883 	bl	9000e608 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f502:	a901      	add	r1, sp, #4
9000f504:	a802      	add	r0, sp, #8
9000f506:	f001 f86b 	bl	900105e0 <xTaskCheckForTimeOut>
9000f50a:	2800      	cmp	r0, #0
9000f50c:	d135      	bne.n	9000f57a <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000f50e:	f7ff f859 	bl	9000e5c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f512:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f514:	2b00      	cmp	r3, #0
9000f516:	f000 80a4 	beq.w	9000f662 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000f51a:	f7ff f875 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f51e:	f7ff f851 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f522:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f526:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f528:	2d00      	cmp	r5, #0
9000f52a:	dc05      	bgt.n	9000f538 <xQueueSemaphoreTake+0xb0>
9000f52c:	e074      	b.n	9000f618 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000f52e:	1e6b      	subs	r3, r5, #1
9000f530:	b2da      	uxtb	r2, r3
9000f532:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f534:	2a00      	cmp	r2, #0
9000f536:	d06f      	beq.n	9000f618 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f538:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f53a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f53c:	2b00      	cmp	r3, #0
9000f53e:	d06b      	beq.n	9000f618 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f540:	f000 fff8 	bl	90010534 <xTaskRemoveFromEventList>
9000f544:	2800      	cmp	r0, #0
9000f546:	d0f2      	beq.n	9000f52e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000f548:	f001 f892 	bl	90010670 <vTaskMissedYield>
9000f54c:	e7ef      	b.n	9000f52e <xQueueSemaphoreTake+0xa6>
9000f54e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f552:	f383 8811 	msr	BASEPRI, r3
9000f556:	f3bf 8f6f 	isb	sy
9000f55a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f55e:	e7fe      	b.n	9000f55e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f560:	9b01      	ldr	r3, [sp, #4]
9000f562:	2b00      	cmp	r3, #0
9000f564:	f000 80d4 	beq.w	9000f710 <xQueueSemaphoreTake+0x288>
9000f568:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f56c:	f383 8811 	msr	BASEPRI, r3
9000f570:	f3bf 8f6f 	isb	sy
9000f574:	f3bf 8f4f 	dsb	sy
9000f578:	e7fe      	b.n	9000f578 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000f57a:	f7ff f823 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f57e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f582:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f584:	2d00      	cmp	r5, #0
9000f586:	dc04      	bgt.n	9000f592 <xQueueSemaphoreTake+0x10a>
9000f588:	e011      	b.n	9000f5ae <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000f58a:	1e6b      	subs	r3, r5, #1
9000f58c:	b2da      	uxtb	r2, r3
9000f58e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f590:	b16a      	cbz	r2, 9000f5ae <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f592:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f594:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f596:	b153      	cbz	r3, 9000f5ae <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f598:	f000 ffcc 	bl	90010534 <xTaskRemoveFromEventList>
9000f59c:	2800      	cmp	r0, #0
9000f59e:	d0f4      	beq.n	9000f58a <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000f5a0:	f001 f866 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000f5a4:	1e6b      	subs	r3, r5, #1
9000f5a6:	b2da      	uxtb	r2, r3
9000f5a8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f5aa:	2a00      	cmp	r2, #0
9000f5ac:	d1f1      	bne.n	9000f592 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f5ae:	23ff      	movs	r3, #255	; 0xff
9000f5b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f5b4:	f7ff f828 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f5b8:	f7ff f804 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f5bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f5c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5c2:	2d00      	cmp	r5, #0
9000f5c4:	dd14      	ble.n	9000f5f0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5c6:	f104 0810 	add.w	r8, r4, #16
9000f5ca:	e003      	b.n	9000f5d4 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000f5cc:	1e6b      	subs	r3, r5, #1
9000f5ce:	b2da      	uxtb	r2, r3
9000f5d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5d2:	b16a      	cbz	r2, 9000f5f0 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5d4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5d6:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5d8:	b153      	cbz	r3, 9000f5f0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5da:	f000 ffab 	bl	90010534 <xTaskRemoveFromEventList>
9000f5de:	2800      	cmp	r0, #0
9000f5e0:	d0f4      	beq.n	9000f5cc <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000f5e2:	f001 f845 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000f5e6:	1e6b      	subs	r3, r5, #1
9000f5e8:	b2da      	uxtb	r2, r3
9000f5ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f5ec:	2a00      	cmp	r2, #0
9000f5ee:	d1f1      	bne.n	9000f5d4 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000f5f0:	23ff      	movs	r3, #255	; 0xff
9000f5f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f5f6:	f7ff f807 	bl	9000e608 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f5fa:	f000 fe77 	bl	900102ec <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f5fe:	f7fe ffe1 	bl	9000e5c4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f602:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f604:	2b00      	cmp	r3, #0
9000f606:	d07c      	beq.n	9000f702 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000f608:	f7fe fffe 	bl	9000e608 <vPortExitCritical>
	return xReturn;
9000f60c:	2501      	movs	r5, #1
9000f60e:	e755      	b.n	9000f4bc <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f610:	a802      	add	r0, sp, #8
9000f612:	f000 ffd9 	bl	900105c8 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f616:	e75e      	b.n	9000f4d6 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f618:	23ff      	movs	r3, #255	; 0xff
9000f61a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f61e:	f7fe fff3 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f622:	f7fe ffcf 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f626:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f62a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f62c:	2d00      	cmp	r5, #0
9000f62e:	dd10      	ble.n	9000f652 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f630:	f104 0810 	add.w	r8, r4, #16
9000f634:	e003      	b.n	9000f63e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000f636:	1e6b      	subs	r3, r5, #1
9000f638:	b2da      	uxtb	r2, r3
9000f63a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f63c:	b14a      	cbz	r2, 9000f652 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f63e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f640:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f642:	b133      	cbz	r3, 9000f652 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f644:	f000 ff76 	bl	90010534 <xTaskRemoveFromEventList>
9000f648:	2800      	cmp	r0, #0
9000f64a:	d0f4      	beq.n	9000f636 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000f64c:	f001 f810 	bl	90010670 <vTaskMissedYield>
9000f650:	e7f1      	b.n	9000f636 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000f652:	23ff      	movs	r3, #255	; 0xff
9000f654:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f658:	f7fe ffd6 	bl	9000e608 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f65c:	f000 fe46 	bl	900102ec <xTaskResumeAll>
9000f660:	e7d4      	b.n	9000f60c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000f662:	f7fe ffd1 	bl	9000e608 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f666:	6823      	ldr	r3, [r4, #0]
9000f668:	2b00      	cmp	r3, #0
9000f66a:	d062      	beq.n	9000f732 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f66c:	9901      	ldr	r1, [sp, #4]
9000f66e:	4630      	mov	r0, r6
9000f670:	f000 fed2 	bl	90010418 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f674:	f7fe ffa6 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f678:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f67c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f67e:	2d00      	cmp	r5, #0
9000f680:	dc04      	bgt.n	9000f68c <xQueueSemaphoreTake+0x204>
9000f682:	e00d      	b.n	9000f6a0 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000f684:	1e6b      	subs	r3, r5, #1
9000f686:	b2da      	uxtb	r2, r3
9000f688:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f68a:	b14a      	cbz	r2, 9000f6a0 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f68c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f68e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f690:	b133      	cbz	r3, 9000f6a0 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f692:	f000 ff4f 	bl	90010534 <xTaskRemoveFromEventList>
9000f696:	2800      	cmp	r0, #0
9000f698:	d0f4      	beq.n	9000f684 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000f69a:	f000 ffe9 	bl	90010670 <vTaskMissedYield>
9000f69e:	e7f1      	b.n	9000f684 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000f6a0:	23ff      	movs	r3, #255	; 0xff
9000f6a2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f6a6:	f7fe ffaf 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f6aa:	f7fe ff8b 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f6ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f6b2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6b4:	2d00      	cmp	r5, #0
9000f6b6:	dd10      	ble.n	9000f6da <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6b8:	f104 0810 	add.w	r8, r4, #16
9000f6bc:	e003      	b.n	9000f6c6 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000f6be:	1e6b      	subs	r3, r5, #1
9000f6c0:	b2da      	uxtb	r2, r3
9000f6c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6c4:	b14a      	cbz	r2, 9000f6da <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6c6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6c8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6ca:	b133      	cbz	r3, 9000f6da <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6cc:	f000 ff32 	bl	90010534 <xTaskRemoveFromEventList>
9000f6d0:	2800      	cmp	r0, #0
9000f6d2:	d0f4      	beq.n	9000f6be <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000f6d4:	f000 ffcc 	bl	90010670 <vTaskMissedYield>
9000f6d8:	e7f1      	b.n	9000f6be <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000f6da:	23ff      	movs	r3, #255	; 0xff
9000f6dc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f6e0:	f7fe ff92 	bl	9000e608 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f6e4:	f000 fe02 	bl	900102ec <xTaskResumeAll>
9000f6e8:	2800      	cmp	r0, #0
9000f6ea:	d18f      	bne.n	9000f60c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000f6ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f6f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f6f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f6f8:	f3bf 8f4f 	dsb	sy
9000f6fc:	f3bf 8f6f 	isb	sy
9000f700:	e784      	b.n	9000f60c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000f702:	f7fe ff81 	bl	9000e608 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000f706:	b92f      	cbnz	r7, 9000f714 <xQueueSemaphoreTake+0x28c>
}
9000f708:	4638      	mov	r0, r7
9000f70a:	b004      	add	sp, #16
9000f70c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000f710:	4607      	mov	r7, r0
9000f712:	e6d1      	b.n	9000f4b8 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000f714:	f7fe ff56 	bl	9000e5c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000f718:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000f71a:	b119      	cbz	r1, 9000f724 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000f71c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000f71e:	6819      	ldr	r1, [r3, #0]
9000f720:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f724:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000f726:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f728:	f001 f84a 	bl	900107c0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000f72c:	f7fe ff6c 	bl	9000e608 <vPortExitCritical>
9000f730:	e7ea      	b.n	9000f708 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000f732:	f7fe ff47 	bl	9000e5c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f736:	68a0      	ldr	r0, [r4, #8]
9000f738:	f000 ffb6 	bl	900106a8 <xTaskPriorityInherit>
9000f73c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000f73e:	f7fe ff63 	bl	9000e608 <vPortExitCritical>
9000f742:	e793      	b.n	9000f66c <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000f744:	2f00      	cmp	r7, #0
9000f746:	d0f1      	beq.n	9000f72c <xQueueSemaphoreTake+0x2a4>
9000f748:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f74c:	f383 8811 	msr	BASEPRI, r3
9000f750:	f3bf 8f6f 	isb	sy
9000f754:	f3bf 8f4f 	dsb	sy
9000f758:	e7fe      	b.n	9000f758 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f75a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f75c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f75e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f760:	b12a      	cbz	r2, 9000f76e <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f762:	6923      	ldr	r3, [r4, #16]
9000f764:	b93b      	cbnz	r3, 9000f776 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000f766:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000f768:	f7fe ff4e 	bl	9000e608 <vPortExitCritical>
				return pdPASS;
9000f76c:	e7cc      	b.n	9000f708 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000f76e:	f001 f87b 	bl	90010868 <pvTaskIncrementMutexHeldCount>
9000f772:	60a0      	str	r0, [r4, #8]
9000f774:	e7f5      	b.n	9000f762 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f776:	f104 0010 	add.w	r0, r4, #16
9000f77a:	f000 fedb 	bl	90010534 <xTaskRemoveFromEventList>
9000f77e:	2800      	cmp	r0, #0
9000f780:	d0f1      	beq.n	9000f766 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000f782:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f786:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f78a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f78e:	f3bf 8f4f 	dsb	sy
9000f792:	f3bf 8f6f 	isb	sy
9000f796:	e7e6      	b.n	9000f766 <xQueueSemaphoreTake+0x2de>

9000f798 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000f798:	b1a8      	cbz	r0, 9000f7c6 <xQueueTakeMutexRecursive+0x2e>
	{
9000f79a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000f79c:	6886      	ldr	r6, [r0, #8]
9000f79e:	4604      	mov	r4, r0
9000f7a0:	460d      	mov	r5, r1
9000f7a2:	f000 ff6b 	bl	9001067c <xTaskGetCurrentTaskHandle>
9000f7a6:	4286      	cmp	r6, r0
9000f7a8:	d008      	beq.n	9000f7bc <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000f7aa:	4629      	mov	r1, r5
9000f7ac:	4620      	mov	r0, r4
9000f7ae:	f7ff fe6b 	bl	9000f488 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000f7b2:	b110      	cbz	r0, 9000f7ba <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f7b4:	68e3      	ldr	r3, [r4, #12]
9000f7b6:	3301      	adds	r3, #1
9000f7b8:	60e3      	str	r3, [r4, #12]
	}
9000f7ba:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f7bc:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000f7be:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f7c0:	4403      	add	r3, r0
9000f7c2:	60e3      	str	r3, [r4, #12]
	}
9000f7c4:	bd70      	pop	{r4, r5, r6, pc}
9000f7c6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7ca:	f383 8811 	msr	BASEPRI, r3
9000f7ce:	f3bf 8f6f 	isb	sy
9000f7d2:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000f7d6:	e7fe      	b.n	9000f7d6 <xQueueTakeMutexRecursive+0x3e>

9000f7d8 <xQueueReceiveFromISR>:
{
9000f7d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000f7dc:	b310      	cbz	r0, 9000f824 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f7de:	460e      	mov	r6, r1
9000f7e0:	4604      	mov	r4, r0
9000f7e2:	4617      	mov	r7, r2
9000f7e4:	b191      	cbz	r1, 9000f80c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f7e6:	f7ff f81f 	bl	9000e828 <vPortValidateInterruptPriority>
	__asm volatile
9000f7ea:	f3ef 8911 	mrs	r9, BASEPRI
9000f7ee:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7f2:	f383 8811 	msr	BASEPRI, r3
9000f7f6:	f3bf 8f6f 	isb	sy
9000f7fa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f7fe:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f800:	b9cd      	cbnz	r5, 9000f836 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000f802:	4628      	mov	r0, r5
	__asm volatile
9000f804:	f389 8811 	msr	BASEPRI, r9
}
9000f808:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f80c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f80e:	2b00      	cmp	r3, #0
9000f810:	d0e9      	beq.n	9000f7e6 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000f812:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f816:	f383 8811 	msr	BASEPRI, r3
9000f81a:	f3bf 8f6f 	isb	sy
9000f81e:	f3bf 8f4f 	dsb	sy
9000f822:	e7fe      	b.n	9000f822 <xQueueReceiveFromISR+0x4a>
9000f824:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f828:	f383 8811 	msr	BASEPRI, r3
9000f82c:	f3bf 8f6f 	isb	sy
9000f830:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f834:	e7fe      	b.n	9000f834 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000f836:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f83a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000f83c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f840:	b142      	cbz	r2, 9000f854 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f842:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f844:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f846:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f848:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f84a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f84c:	d215      	bcs.n	9000f87a <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f84e:	4630      	mov	r0, r6
9000f850:	f018 fac4 	bl	90027ddc <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f854:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000f856:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f85a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000f85c:	d009      	beq.n	9000f872 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f85e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000f862:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f864:	b25b      	sxtb	r3, r3
9000f866:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000f86a:	f389 8811 	msr	BASEPRI, r9
}
9000f86e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f872:	6923      	ldr	r3, [r4, #16]
9000f874:	b923      	cbnz	r3, 9000f880 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000f876:	2001      	movs	r0, #1
9000f878:	e7c4      	b.n	9000f804 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f87a:	6821      	ldr	r1, [r4, #0]
9000f87c:	60e1      	str	r1, [r4, #12]
9000f87e:	e7e6      	b.n	9000f84e <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f880:	f104 0010 	add.w	r0, r4, #16
9000f884:	f000 fe56 	bl	90010534 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000f888:	2f00      	cmp	r7, #0
9000f88a:	d0f4      	beq.n	9000f876 <xQueueReceiveFromISR+0x9e>
9000f88c:	2800      	cmp	r0, #0
9000f88e:	d0f2      	beq.n	9000f876 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f890:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f892:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f894:	603b      	str	r3, [r7, #0]
9000f896:	e7b5      	b.n	9000f804 <xQueueReceiveFromISR+0x2c>

9000f898 <vQueueDelete>:
	configASSERT( pxQueue );
9000f898:	b1e0      	cbz	r0, 9000f8d4 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000f89a:	4b21      	ldr	r3, [pc, #132]	; (9000f920 <vQueueDelete+0x88>)
9000f89c:	685a      	ldr	r2, [r3, #4]
9000f89e:	4290      	cmp	r0, r2
9000f8a0:	d02b      	beq.n	9000f8fa <vQueueDelete+0x62>
9000f8a2:	68da      	ldr	r2, [r3, #12]
9000f8a4:	4290      	cmp	r0, r2
9000f8a6:	d02a      	beq.n	9000f8fe <vQueueDelete+0x66>
9000f8a8:	695a      	ldr	r2, [r3, #20]
9000f8aa:	4290      	cmp	r0, r2
9000f8ac:	d029      	beq.n	9000f902 <vQueueDelete+0x6a>
9000f8ae:	69da      	ldr	r2, [r3, #28]
9000f8b0:	4290      	cmp	r0, r2
9000f8b2:	d028      	beq.n	9000f906 <vQueueDelete+0x6e>
9000f8b4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000f8b6:	4290      	cmp	r0, r2
9000f8b8:	d027      	beq.n	9000f90a <vQueueDelete+0x72>
9000f8ba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000f8bc:	4290      	cmp	r0, r2
9000f8be:	d014      	beq.n	9000f8ea <vQueueDelete+0x52>
9000f8c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000f8c2:	4290      	cmp	r0, r2
9000f8c4:	d023      	beq.n	9000f90e <vQueueDelete+0x76>
9000f8c6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000f8c8:	4290      	cmp	r0, r2
9000f8ca:	d022      	beq.n	9000f912 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000f8cc:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000f8d0:	b14b      	cbz	r3, 9000f8e6 <vQueueDelete+0x4e>
}
9000f8d2:	4770      	bx	lr
	__asm volatile
9000f8d4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8d8:	f383 8811 	msr	BASEPRI, r3
9000f8dc:	f3bf 8f6f 	isb	sy
9000f8e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f8e4:	e7fe      	b.n	9000f8e4 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000f8e6:	f7fe bd4f 	b.w	9000e388 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f8ea:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000f8ec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000f8f0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000f918 <vQueueDelete+0x80>
9000f8f4:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000f8f8:	e7e8      	b.n	9000f8cc <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f8fa:	2200      	movs	r2, #0
9000f8fc:	e7f6      	b.n	9000f8ec <vQueueDelete+0x54>
9000f8fe:	2201      	movs	r2, #1
9000f900:	e7f4      	b.n	9000f8ec <vQueueDelete+0x54>
9000f902:	2202      	movs	r2, #2
9000f904:	e7f2      	b.n	9000f8ec <vQueueDelete+0x54>
9000f906:	2203      	movs	r2, #3
9000f908:	e7f0      	b.n	9000f8ec <vQueueDelete+0x54>
9000f90a:	2204      	movs	r2, #4
9000f90c:	e7ee      	b.n	9000f8ec <vQueueDelete+0x54>
9000f90e:	2206      	movs	r2, #6
9000f910:	e7ec      	b.n	9000f8ec <vQueueDelete+0x54>
9000f912:	2207      	movs	r2, #7
9000f914:	e7ea      	b.n	9000f8ec <vQueueDelete+0x54>
9000f916:	bf00      	nop
	...
9000f920:	24039090 	.word	0x24039090

9000f924 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000f924:	4b12      	ldr	r3, [pc, #72]	; (9000f970 <vQueueAddToRegistry+0x4c>)
9000f926:	681a      	ldr	r2, [r3, #0]
9000f928:	b17a      	cbz	r2, 9000f94a <vQueueAddToRegistry+0x26>
9000f92a:	689a      	ldr	r2, [r3, #8]
9000f92c:	b162      	cbz	r2, 9000f948 <vQueueAddToRegistry+0x24>
9000f92e:	691a      	ldr	r2, [r3, #16]
9000f930:	b192      	cbz	r2, 9000f958 <vQueueAddToRegistry+0x34>
9000f932:	699a      	ldr	r2, [r3, #24]
9000f934:	b192      	cbz	r2, 9000f95c <vQueueAddToRegistry+0x38>
9000f936:	6a1a      	ldr	r2, [r3, #32]
9000f938:	b192      	cbz	r2, 9000f960 <vQueueAddToRegistry+0x3c>
9000f93a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000f93c:	b192      	cbz	r2, 9000f964 <vQueueAddToRegistry+0x40>
9000f93e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000f940:	b192      	cbz	r2, 9000f968 <vQueueAddToRegistry+0x44>
9000f942:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000f944:	b192      	cbz	r2, 9000f96c <vQueueAddToRegistry+0x48>
	}
9000f946:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f948:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f94a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000f94e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f952:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000f956:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f958:	2202      	movs	r2, #2
9000f95a:	e7f6      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f95c:	2203      	movs	r2, #3
9000f95e:	e7f4      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f960:	2204      	movs	r2, #4
9000f962:	e7f2      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f964:	2205      	movs	r2, #5
9000f966:	e7f0      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f968:	2206      	movs	r2, #6
9000f96a:	e7ee      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f96c:	2207      	movs	r2, #7
9000f96e:	e7ec      	b.n	9000f94a <vQueueAddToRegistry+0x26>
9000f970:	24039090 	.word	0x24039090

9000f974 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000f974:	b570      	push	{r4, r5, r6, lr}
9000f976:	4605      	mov	r5, r0
9000f978:	460e      	mov	r6, r1
9000f97a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000f97c:	f7fe fe22 	bl	9000e5c4 <vPortEnterCritical>
9000f980:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000f984:	2bff      	cmp	r3, #255	; 0xff
9000f986:	d102      	bne.n	9000f98e <vQueueWaitForMessageRestricted+0x1a>
9000f988:	2300      	movs	r3, #0
9000f98a:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000f98e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000f992:	2bff      	cmp	r3, #255	; 0xff
9000f994:	d102      	bne.n	9000f99c <vQueueWaitForMessageRestricted+0x28>
9000f996:	2300      	movs	r3, #0
9000f998:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000f99c:	f7fe fe34 	bl	9000e608 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000f9a0:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000f9a2:	2b00      	cmp	r3, #0
9000f9a4:	d043      	beq.n	9000fa2e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000f9a6:	f7fe fe0d 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f9aa:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000f9ae:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9b0:	2c00      	cmp	r4, #0
9000f9b2:	dd14      	ble.n	9000f9de <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9b4:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000f9b8:	e003      	b.n	9000f9c2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000f9ba:	1e63      	subs	r3, r4, #1
9000f9bc:	b2da      	uxtb	r2, r3
9000f9be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9c0:	b16a      	cbz	r2, 9000f9de <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f9c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9c4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f9c6:	b153      	cbz	r3, 9000f9de <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9c8:	f000 fdb4 	bl	90010534 <xTaskRemoveFromEventList>
9000f9cc:	2800      	cmp	r0, #0
9000f9ce:	d0f4      	beq.n	9000f9ba <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000f9d0:	f000 fe4e 	bl	90010670 <vTaskMissedYield>
			--cTxLock;
9000f9d4:	1e63      	subs	r3, r4, #1
9000f9d6:	b2da      	uxtb	r2, r3
9000f9d8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9da:	2a00      	cmp	r2, #0
9000f9dc:	d1f1      	bne.n	9000f9c2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f9de:	23ff      	movs	r3, #255	; 0xff
9000f9e0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f9e4:	f7fe fe10 	bl	9000e608 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f9e8:	f7fe fdec 	bl	9000e5c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f9ec:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000f9f0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f9f2:	2c00      	cmp	r4, #0
9000f9f4:	dd14      	ble.n	9000fa20 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f9f6:	f105 0610 	add.w	r6, r5, #16
9000f9fa:	e003      	b.n	9000fa04 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000f9fc:	1e63      	subs	r3, r4, #1
9000f9fe:	b2da      	uxtb	r2, r3
9000fa00:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa02:	b16a      	cbz	r2, 9000fa20 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa04:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa06:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa08:	b153      	cbz	r3, 9000fa20 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa0a:	f000 fd93 	bl	90010534 <xTaskRemoveFromEventList>
9000fa0e:	2800      	cmp	r0, #0
9000fa10:	d0f4      	beq.n	9000f9fc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000fa12:	f000 fe2d 	bl	90010670 <vTaskMissedYield>
				--cRxLock;
9000fa16:	1e63      	subs	r3, r4, #1
9000fa18:	b2da      	uxtb	r2, r3
9000fa1a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa1c:	2a00      	cmp	r2, #0
9000fa1e:	d1f1      	bne.n	9000fa04 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000fa20:	23ff      	movs	r3, #255	; 0xff
9000fa22:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000fa26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000fa2a:	f7fe bded 	b.w	9000e608 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000fa2e:	4622      	mov	r2, r4
9000fa30:	4631      	mov	r1, r6
9000fa32:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000fa36:	f000 fd33 	bl	900104a0 <vTaskPlaceOnEventListRestricted>
9000fa3a:	e7b4      	b.n	9000f9a6 <vQueueWaitForMessageRestricted+0x32>

9000fa3c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000fa3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fa40:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000fa42:	f7fe fdbf 	bl	9000e5c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000fa46:	4a34      	ldr	r2, [pc, #208]	; (9000fb18 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000fa48:	4e34      	ldr	r6, [pc, #208]	; (9000fb1c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000fa4a:	6813      	ldr	r3, [r2, #0]
9000fa4c:	3301      	adds	r3, #1
9000fa4e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000fa50:	6833      	ldr	r3, [r6, #0]
9000fa52:	2b00      	cmp	r3, #0
9000fa54:	d032      	beq.n	9000fabc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000fa56:	4c32      	ldr	r4, [pc, #200]	; (9000fb20 <prvAddNewTaskToReadyList+0xe4>)
9000fa58:	6823      	ldr	r3, [r4, #0]
9000fa5a:	b33b      	cbz	r3, 9000faac <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fa5c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000fa5e:	4f31      	ldr	r7, [pc, #196]	; (9000fb24 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000fa60:	4a31      	ldr	r2, [pc, #196]	; (9000fb28 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000fa62:	4932      	ldr	r1, [pc, #200]	; (9000fb2c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000fa64:	6813      	ldr	r3, [r2, #0]
9000fa66:	3301      	adds	r3, #1
9000fa68:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000fa6a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000fa6c:	680b      	ldr	r3, [r1, #0]
9000fa6e:	4283      	cmp	r3, r0
9000fa70:	d200      	bcs.n	9000fa74 <prvAddNewTaskToReadyList+0x38>
9000fa72:	6008      	str	r0, [r1, #0]
9000fa74:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fa78:	1d29      	adds	r1, r5, #4
9000fa7a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000fa7e:	f7fe fcf7 	bl	9000e470 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000fa82:	f7fe fdc1 	bl	9000e608 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000fa86:	6823      	ldr	r3, [r4, #0]
9000fa88:	b173      	cbz	r3, 9000faa8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000fa8a:	6832      	ldr	r2, [r6, #0]
9000fa8c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000fa8e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000fa90:	429a      	cmp	r2, r3
9000fa92:	d209      	bcs.n	9000faa8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000fa94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fa98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fa9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000faa0:	f3bf 8f4f 	dsb	sy
9000faa4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000faa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000faac:	6833      	ldr	r3, [r6, #0]
9000faae:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000fab0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fab2:	4f1c      	ldr	r7, [pc, #112]	; (9000fb24 <prvAddNewTaskToReadyList+0xe8>)
9000fab4:	4283      	cmp	r3, r0
9000fab6:	d8d3      	bhi.n	9000fa60 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000fab8:	6035      	str	r5, [r6, #0]
9000faba:	e7d1      	b.n	9000fa60 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000fabc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000fabe:	6813      	ldr	r3, [r2, #0]
9000fac0:	2b01      	cmp	r3, #1
9000fac2:	d003      	beq.n	9000facc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fac4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000fac6:	4f17      	ldr	r7, [pc, #92]	; (9000fb24 <prvAddNewTaskToReadyList+0xe8>)
9000fac8:	4c15      	ldr	r4, [pc, #84]	; (9000fb20 <prvAddNewTaskToReadyList+0xe4>)
9000faca:	e7c9      	b.n	9000fa60 <prvAddNewTaskToReadyList+0x24>
9000facc:	4f15      	ldr	r7, [pc, #84]	; (9000fb24 <prvAddNewTaskToReadyList+0xe8>)
9000face:	463c      	mov	r4, r7
9000fad0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fad4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fad6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000fad8:	f7fe fcba 	bl	9000e450 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000fadc:	45a0      	cmp	r8, r4
9000fade:	d1f9      	bne.n	9000fad4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000fae0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000fb44 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000fae4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000fb48 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000fae8:	4648      	mov	r0, r9
9000faea:	4c0d      	ldr	r4, [pc, #52]	; (9000fb20 <prvAddNewTaskToReadyList+0xe4>)
9000faec:	f7fe fcb0 	bl	9000e450 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000faf0:	4640      	mov	r0, r8
9000faf2:	f7fe fcad 	bl	9000e450 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000faf6:	480e      	ldr	r0, [pc, #56]	; (9000fb30 <prvAddNewTaskToReadyList+0xf4>)
9000faf8:	f7fe fcaa 	bl	9000e450 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000fafc:	480d      	ldr	r0, [pc, #52]	; (9000fb34 <prvAddNewTaskToReadyList+0xf8>)
9000fafe:	f7fe fca7 	bl	9000e450 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000fb02:	480d      	ldr	r0, [pc, #52]	; (9000fb38 <prvAddNewTaskToReadyList+0xfc>)
9000fb04:	f7fe fca4 	bl	9000e450 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000fb08:	4b0c      	ldr	r3, [pc, #48]	; (9000fb3c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000fb0a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000fb0c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000fb10:	4b0b      	ldr	r3, [pc, #44]	; (9000fb40 <prvAddNewTaskToReadyList+0x104>)
9000fb12:	f8c3 8000 	str.w	r8, [r3]
}
9000fb16:	e7a3      	b.n	9000fa60 <prvAddNewTaskToReadyList+0x24>
9000fb18:	2403953c 	.word	0x2403953c
9000fb1c:	240390d0 	.word	0x240390d0
9000fb20:	24039598 	.word	0x24039598
9000fb24:	240390dc 	.word	0x240390dc
9000fb28:	24039548 	.word	0x24039548
9000fb2c:	2403954c 	.word	0x2403954c
9000fb30:	24039584 	.word	0x24039584
9000fb34:	240395b0 	.word	0x240395b0
9000fb38:	2403959c 	.word	0x2403959c
9000fb3c:	240390d4 	.word	0x240390d4
9000fb40:	240390d8 	.word	0x240390d8
9000fb44:	24039550 	.word	0x24039550
9000fb48:	24039564 	.word	0x24039564

9000fb4c <prvIdleTask>:
{
9000fb4c:	b580      	push	{r7, lr}
9000fb4e:	4c22      	ldr	r4, [pc, #136]	; (9000fbd8 <prvIdleTask+0x8c>)
				taskYIELD();
9000fb50:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000fb54:	4e21      	ldr	r6, [pc, #132]	; (9000fbdc <prvIdleTask+0x90>)
9000fb56:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000fb5a:	4d21      	ldr	r5, [pc, #132]	; (9000fbe0 <prvIdleTask+0x94>)
9000fb5c:	4f21      	ldr	r7, [pc, #132]	; (9000fbe4 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fb5e:	6823      	ldr	r3, [r4, #0]
9000fb60:	b353      	cbz	r3, 9000fbb8 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000fb62:	f7fe fd2f 	bl	9000e5c4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb66:	68f3      	ldr	r3, [r6, #12]
9000fb68:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fb6c:	f10a 0004 	add.w	r0, sl, #4
9000fb70:	f7fe fca6 	bl	9000e4c0 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000fb74:	682b      	ldr	r3, [r5, #0]
9000fb76:	3b01      	subs	r3, #1
9000fb78:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000fb7a:	6823      	ldr	r3, [r4, #0]
9000fb7c:	3b01      	subs	r3, #1
9000fb7e:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000fb80:	f7fe fd42 	bl	9000e608 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000fb84:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000fb88:	b163      	cbz	r3, 9000fba4 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000fb8a:	2b01      	cmp	r3, #1
9000fb8c:	d020      	beq.n	9000fbd0 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000fb8e:	2b02      	cmp	r3, #2
9000fb90:	d0e5      	beq.n	9000fb5e <prvIdleTask+0x12>
9000fb92:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fb96:	f383 8811 	msr	BASEPRI, r3
9000fb9a:	f3bf 8f6f 	isb	sy
9000fb9e:	f3bf 8f4f 	dsb	sy
9000fba2:	e7fe      	b.n	9000fba2 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000fba4:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000fba8:	f7fe fbee 	bl	9000e388 <vPortFree>
				vPortFree( pxTCB );
9000fbac:	4650      	mov	r0, sl
9000fbae:	f7fe fbeb 	bl	9000e388 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fbb2:	6823      	ldr	r3, [r4, #0]
9000fbb4:	2b00      	cmp	r3, #0
9000fbb6:	d1d4      	bne.n	9000fb62 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000fbb8:	683b      	ldr	r3, [r7, #0]
9000fbba:	2b01      	cmp	r3, #1
9000fbbc:	d905      	bls.n	9000fbca <prvIdleTask+0x7e>
				taskYIELD();
9000fbbe:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000fbc2:	f3bf 8f4f 	dsb	sy
9000fbc6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000fbca:	f7f2 fee9 	bl	900029a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000fbce:	e7c6      	b.n	9000fb5e <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000fbd0:	4650      	mov	r0, sl
9000fbd2:	f7fe fbd9 	bl	9000e388 <vPortFree>
9000fbd6:	e7c2      	b.n	9000fb5e <prvIdleTask+0x12>
9000fbd8:	24039540 	.word	0x24039540
9000fbdc:	240395b0 	.word	0x240395b0
9000fbe0:	2403953c 	.word	0x2403953c
9000fbe4:	240390dc 	.word	0x240390dc

9000fbe8 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fbe8:	4b4a      	ldr	r3, [pc, #296]	; (9000fd14 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000fbea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fbee:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000fbf0:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fbf2:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000fbf4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000fbf6:	2e00      	cmp	r6, #0
9000fbf8:	d040      	beq.n	9000fc7c <xTaskIncrementTick.part.0+0x94>
9000fbfa:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000fd28 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000fbfe:	f8db 3000 	ldr.w	r3, [fp]
9000fc02:	429e      	cmp	r6, r3
9000fc04:	d347      	bcc.n	9000fc96 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc06:	4f44      	ldr	r7, [pc, #272]	; (9000fd18 <xTaskIncrementTick.part.0+0x130>)
9000fc08:	683b      	ldr	r3, [r7, #0]
9000fc0a:	681d      	ldr	r5, [r3, #0]
9000fc0c:	2d00      	cmp	r5, #0
9000fc0e:	d077      	beq.n	9000fd00 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000fc10:	2500      	movs	r5, #0
9000fc12:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000fd2c <xTaskIncrementTick.part.0+0x144>
9000fc16:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000fd30 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000fc1a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000fd34 <xTaskIncrementTick.part.0+0x14c>
9000fc1e:	e022      	b.n	9000fc66 <xTaskIncrementTick.part.0+0x7e>
9000fc20:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fc22:	f7fe fc4d 	bl	9000e4c0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fc26:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fc28:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fc2c:	9901      	ldr	r1, [sp, #4]
9000fc2e:	b113      	cbz	r3, 9000fc36 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fc30:	f7fe fc46 	bl	9000e4c0 <uxListRemove>
9000fc34:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000fc36:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000fc38:	f8d8 2000 	ldr.w	r2, [r8]
9000fc3c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fc40:	4293      	cmp	r3, r2
9000fc42:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fc46:	d901      	bls.n	9000fc4c <xTaskIncrementTick.part.0+0x64>
9000fc48:	f8c8 3000 	str.w	r3, [r8]
9000fc4c:	f7fe fc10 	bl	9000e470 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fc50:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc54:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fc56:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000fc58:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc5a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000fc5c:	4291      	cmp	r1, r2
9000fc5e:	bf28      	it	cs
9000fc60:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc62:	2b00      	cmp	r3, #0
9000fc64:	d050      	beq.n	9000fd08 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fc66:	683b      	ldr	r3, [r7, #0]
9000fc68:	68db      	ldr	r3, [r3, #12]
9000fc6a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000fc6c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fc6e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000fc70:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fc72:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000fc74:	d2d4      	bcs.n	9000fc20 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000fc76:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000fc7a:	e011      	b.n	9000fca0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000fc7c:	4b26      	ldr	r3, [pc, #152]	; (9000fd18 <xTaskIncrementTick.part.0+0x130>)
9000fc7e:	681a      	ldr	r2, [r3, #0]
9000fc80:	6812      	ldr	r2, [r2, #0]
9000fc82:	b30a      	cbz	r2, 9000fcc8 <xTaskIncrementTick.part.0+0xe0>
9000fc84:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc88:	f383 8811 	msr	BASEPRI, r3
9000fc8c:	f3bf 8f6f 	isb	sy
9000fc90:	f3bf 8f4f 	dsb	sy
9000fc94:	e7fe      	b.n	9000fc94 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000fc96:	2500      	movs	r5, #0
9000fc98:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000fd2c <xTaskIncrementTick.part.0+0x144>
9000fc9c:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000fd30 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fca0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000fca4:	491d      	ldr	r1, [pc, #116]	; (9000fd1c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fca6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fca8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000fcac:	009b      	lsls	r3, r3, #2
9000fcae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000fcb2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000fcb4:	2a02      	cmp	r2, #2
9000fcb6:	bf28      	it	cs
9000fcb8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000fcba:	2b00      	cmp	r3, #0
}
9000fcbc:	bf0c      	ite	eq
9000fcbe:	4628      	moveq	r0, r5
9000fcc0:	2001      	movne	r0, #1
9000fcc2:	b003      	add	sp, #12
9000fcc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000fcc8:	4a15      	ldr	r2, [pc, #84]	; (9000fd20 <xTaskIncrementTick.part.0+0x138>)
9000fcca:	6818      	ldr	r0, [r3, #0]
9000fccc:	6811      	ldr	r1, [r2, #0]
9000fcce:	6019      	str	r1, [r3, #0]
9000fcd0:	4914      	ldr	r1, [pc, #80]	; (9000fd24 <xTaskIncrementTick.part.0+0x13c>)
9000fcd2:	6010      	str	r0, [r2, #0]
9000fcd4:	680a      	ldr	r2, [r1, #0]
9000fcd6:	3201      	adds	r2, #1
9000fcd8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fcda:	681a      	ldr	r2, [r3, #0]
9000fcdc:	6812      	ldr	r2, [r2, #0]
9000fcde:	b932      	cbnz	r2, 9000fcee <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000fce0:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000fd28 <xTaskIncrementTick.part.0+0x140>
9000fce4:	f04f 33ff 	mov.w	r3, #4294967295
9000fce8:	f8cb 3000 	str.w	r3, [fp]
9000fcec:	e787      	b.n	9000fbfe <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fcee:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fcf0:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000fd28 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fcf4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fcf6:	68db      	ldr	r3, [r3, #12]
9000fcf8:	685b      	ldr	r3, [r3, #4]
9000fcfa:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000fcfe:	e77e      	b.n	9000fbfe <xTaskIncrementTick.part.0+0x16>
9000fd00:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000fd2c <xTaskIncrementTick.part.0+0x144>
9000fd04:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000fd30 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fd08:	f04f 33ff 	mov.w	r3, #4294967295
9000fd0c:	f8cb 3000 	str.w	r3, [fp]
					break;
9000fd10:	e7c6      	b.n	9000fca0 <xTaskIncrementTick.part.0+0xb8>
9000fd12:	bf00      	nop
9000fd14:	240395c4 	.word	0x240395c4
9000fd18:	240390d4 	.word	0x240390d4
9000fd1c:	240395c8 	.word	0x240395c8
9000fd20:	240390d8 	.word	0x240390d8
9000fd24:	2403957c 	.word	0x2403957c
9000fd28:	24039578 	.word	0x24039578
9000fd2c:	240390dc 	.word	0x240390dc
9000fd30:	240390d0 	.word	0x240390d0
9000fd34:	2403954c 	.word	0x2403954c

9000fd38 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000fd38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000fd3c:	4d41      	ldr	r5, [pc, #260]	; (9000fe44 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000fd3e:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000fd40:	f7fe fc40 	bl	9000e5c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000fd44:	682b      	ldr	r3, [r5, #0]
9000fd46:	3b01      	subs	r3, #1
9000fd48:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fd4a:	682b      	ldr	r3, [r5, #0]
9000fd4c:	2b00      	cmp	r3, #0
9000fd4e:	d161      	bne.n	9000fe14 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000fd50:	4b3d      	ldr	r3, [pc, #244]	; (9000fe48 <xTaskResumeAll.part.0+0x110>)
9000fd52:	681b      	ldr	r3, [r3, #0]
9000fd54:	2b00      	cmp	r3, #0
9000fd56:	d05d      	beq.n	9000fe14 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fd58:	4e3c      	ldr	r6, [pc, #240]	; (9000fe4c <xTaskResumeAll.part.0+0x114>)
9000fd5a:	6833      	ldr	r3, [r6, #0]
9000fd5c:	2b00      	cmp	r3, #0
9000fd5e:	d06e      	beq.n	9000fe3e <xTaskResumeAll.part.0+0x106>
9000fd60:	4f3b      	ldr	r7, [pc, #236]	; (9000fe50 <xTaskResumeAll.part.0+0x118>)
9000fd62:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000fe60 <xTaskResumeAll.part.0+0x128>
9000fd66:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000fe64 <xTaskResumeAll.part.0+0x12c>
9000fd6a:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000fe68 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fd6e:	68f3      	ldr	r3, [r6, #12]
9000fd70:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fd72:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fd76:	f104 0018 	add.w	r0, r4, #24
9000fd7a:	f7fe fba1 	bl	9000e4c0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fd7e:	4658      	mov	r0, fp
9000fd80:	f7fe fb9e 	bl	9000e4c0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fd84:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000fd86:	683a      	ldr	r2, [r7, #0]
9000fd88:	4659      	mov	r1, fp
9000fd8a:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fd8e:	4293      	cmp	r3, r2
9000fd90:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fd94:	d900      	bls.n	9000fd98 <xTaskResumeAll.part.0+0x60>
9000fd96:	603b      	str	r3, [r7, #0]
9000fd98:	f7fe fb6a 	bl	9000e470 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fd9c:	f8d8 3000 	ldr.w	r3, [r8]
9000fda0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000fda2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fda4:	429a      	cmp	r2, r3
9000fda6:	d33d      	bcc.n	9000fe24 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000fda8:	2301      	movs	r3, #1
9000fdaa:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fdae:	6833      	ldr	r3, [r6, #0]
9000fdb0:	2b00      	cmp	r3, #0
9000fdb2:	d1dc      	bne.n	9000fd6e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fdb4:	4b27      	ldr	r3, [pc, #156]	; (9000fe54 <xTaskResumeAll.part.0+0x11c>)
9000fdb6:	681a      	ldr	r2, [r3, #0]
9000fdb8:	6812      	ldr	r2, [r2, #0]
9000fdba:	2a00      	cmp	r2, #0
9000fdbc:	d03a      	beq.n	9000fe34 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fdbe:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fdc0:	4b25      	ldr	r3, [pc, #148]	; (9000fe58 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fdc2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fdc4:	68d2      	ldr	r2, [r2, #12]
9000fdc6:	6852      	ldr	r2, [r2, #4]
9000fdc8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000fdca:	4e24      	ldr	r6, [pc, #144]	; (9000fe5c <xTaskResumeAll.part.0+0x124>)
9000fdcc:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000fdce:	b194      	cbz	r4, 9000fdf6 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000fdd0:	2701      	movs	r7, #1
9000fdd2:	e006      	b.n	9000fde2 <xTaskResumeAll.part.0+0xaa>
9000fdd4:	f7ff ff08 	bl	9000fbe8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000fdd8:	b108      	cbz	r0, 9000fdde <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000fdda:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fdde:	3c01      	subs	r4, #1
9000fde0:	d008      	beq.n	9000fdf4 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fde2:	682b      	ldr	r3, [r5, #0]
9000fde4:	2b00      	cmp	r3, #0
9000fde6:	d0f5      	beq.n	9000fdd4 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000fde8:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fdea:	3c01      	subs	r4, #1
		++xPendedTicks;
9000fdec:	f103 0301 	add.w	r3, r3, #1
9000fdf0:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fdf2:	d1f6      	bne.n	9000fde2 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000fdf4:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000fdf6:	f8da 3000 	ldr.w	r3, [sl]
9000fdfa:	b15b      	cbz	r3, 9000fe14 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000fdfc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fe00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fe04:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fe08:	f3bf 8f4f 	dsb	sy
9000fe0c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000fe10:	2001      	movs	r0, #1
9000fe12:	e000      	b.n	9000fe16 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000fe14:	2000      	movs	r0, #0
9000fe16:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000fe18:	f7fe fbf6 	bl	9000e608 <vPortExitCritical>
}
9000fe1c:	9801      	ldr	r0, [sp, #4]
9000fe1e:	b003      	add	sp, #12
9000fe20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fe24:	6833      	ldr	r3, [r6, #0]
9000fe26:	2b00      	cmp	r3, #0
9000fe28:	d1a1      	bne.n	9000fd6e <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fe2a:	4b0a      	ldr	r3, [pc, #40]	; (9000fe54 <xTaskResumeAll.part.0+0x11c>)
9000fe2c:	681a      	ldr	r2, [r3, #0]
9000fe2e:	6812      	ldr	r2, [r2, #0]
9000fe30:	2a00      	cmp	r2, #0
9000fe32:	d1c4      	bne.n	9000fdbe <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000fe34:	4b08      	ldr	r3, [pc, #32]	; (9000fe58 <xTaskResumeAll.part.0+0x120>)
9000fe36:	f04f 32ff 	mov.w	r2, #4294967295
9000fe3a:	601a      	str	r2, [r3, #0]
9000fe3c:	e7c5      	b.n	9000fdca <xTaskResumeAll.part.0+0x92>
9000fe3e:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000fe68 <xTaskResumeAll.part.0+0x130>
9000fe42:	e7c2      	b.n	9000fdca <xTaskResumeAll.part.0+0x92>
9000fe44:	24039544 	.word	0x24039544
9000fe48:	2403953c 	.word	0x2403953c
9000fe4c:	24039584 	.word	0x24039584
9000fe50:	2403954c 	.word	0x2403954c
9000fe54:	240390d4 	.word	0x240390d4
9000fe58:	24039578 	.word	0x24039578
9000fe5c:	24039580 	.word	0x24039580
9000fe60:	240390dc 	.word	0x240390dc
9000fe64:	240390d0 	.word	0x240390d0
9000fe68:	240395c8 	.word	0x240395c8

9000fe6c <xTaskCreateStatic>:
	{
9000fe6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000fe70:	b083      	sub	sp, #12
9000fe72:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000fe74:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000fe78:	b1bb      	cbz	r3, 9000feaa <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000fe7a:	b16c      	cbz	r4, 9000fe98 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000fe7c:	2360      	movs	r3, #96	; 0x60
9000fe7e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000fe80:	9b01      	ldr	r3, [sp, #4]
9000fe82:	2b60      	cmp	r3, #96	; 0x60
9000fe84:	d01a      	beq.n	9000febc <xTaskCreateStatic+0x50>
9000fe86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fe8a:	f383 8811 	msr	BASEPRI, r3
9000fe8e:	f3bf 8f6f 	isb	sy
9000fe92:	f3bf 8f4f 	dsb	sy
9000fe96:	e7fe      	b.n	9000fe96 <xTaskCreateStatic+0x2a>
9000fe98:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fe9c:	f383 8811 	msr	BASEPRI, r3
9000fea0:	f3bf 8f6f 	isb	sy
9000fea4:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000fea8:	e7fe      	b.n	9000fea8 <xTaskCreateStatic+0x3c>
9000feaa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000feae:	f383 8811 	msr	BASEPRI, r3
9000feb2:	f3bf 8f6f 	isb	sy
9000feb6:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000feba:	e7fe      	b.n	9000feba <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000febc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000febe:	0096      	lsls	r6, r2, #2
9000fec0:	4607      	mov	r7, r0
9000fec2:	460d      	mov	r5, r1
9000fec4:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000fec6:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000fec8:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000feca:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fecc:	4632      	mov	r2, r6
9000fece:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000fed0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fed4:	f017 fea2 	bl	90027c1c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fed8:	1f32      	subs	r2, r6, #4
9000feda:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000fedc:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fede:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000fee2:	2d00      	cmp	r5, #0
9000fee4:	d069      	beq.n	9000ffba <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fee6:	782b      	ldrb	r3, [r5, #0]
9000fee8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000feec:	2b00      	cmp	r3, #0
9000feee:	d03b      	beq.n	9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fef0:	786b      	ldrb	r3, [r5, #1]
9000fef2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fef6:	2b00      	cmp	r3, #0
9000fef8:	d036      	beq.n	9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fefa:	78ab      	ldrb	r3, [r5, #2]
9000fefc:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ff00:	b393      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff02:	78eb      	ldrb	r3, [r5, #3]
9000ff04:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ff08:	b373      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff0a:	792b      	ldrb	r3, [r5, #4]
9000ff0c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ff10:	b353      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff12:	796b      	ldrb	r3, [r5, #5]
9000ff14:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ff18:	b333      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff1a:	79ab      	ldrb	r3, [r5, #6]
9000ff1c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ff20:	b313      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff22:	79eb      	ldrb	r3, [r5, #7]
9000ff24:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ff28:	b1f3      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff2a:	7a2b      	ldrb	r3, [r5, #8]
9000ff2c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ff30:	b1d3      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff32:	7a6b      	ldrb	r3, [r5, #9]
9000ff34:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ff38:	b1b3      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff3a:	7aab      	ldrb	r3, [r5, #10]
9000ff3c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ff40:	b193      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff42:	7aeb      	ldrb	r3, [r5, #11]
9000ff44:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ff48:	b173      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff4a:	7b2b      	ldrb	r3, [r5, #12]
9000ff4c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ff50:	b153      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff52:	7b6b      	ldrb	r3, [r5, #13]
9000ff54:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ff58:	b133      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff5a:	7bab      	ldrb	r3, [r5, #14]
9000ff5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000ff60:	b113      	cbz	r3, 9000ff68 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ff62:	7beb      	ldrb	r3, [r5, #15]
9000ff64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ff68:	2300      	movs	r3, #0
9000ff6a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ff6e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000ff70:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ff72:	1d20      	adds	r0, r4, #4
9000ff74:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000ff76:	6526      	str	r6, [r4, #80]	; 0x50
9000ff78:	bf28      	it	cs
9000ff7a:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ff7c:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ff7e:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ff80:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ff84:	f7fe fa70 	bl	9000e468 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ff88:	f104 0018 	add.w	r0, r4, #24
9000ff8c:	f7fe fa6c 	bl	9000e468 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ff90:	4642      	mov	r2, r8
9000ff92:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000ff94:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ff96:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ff98:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ff9a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ff9c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ff9e:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ffa0:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffa4:	f7fe fade 	bl	9000e564 <pxPortInitialiseStack>
9000ffa8:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000ffaa:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ffac:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ffae:	f7ff fd45 	bl	9000fa3c <prvAddNewTaskToReadyList>
	}
9000ffb2:	4620      	mov	r0, r4
9000ffb4:	b003      	add	sp, #12
9000ffb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000ffba:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000ffbe:	e7d6      	b.n	9000ff6e <xTaskCreateStatic+0x102>

9000ffc0 <xTaskCreate>:
	{
9000ffc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ffc4:	0096      	lsls	r6, r2, #2
	{
9000ffc6:	4680      	mov	r8, r0
9000ffc8:	460d      	mov	r5, r1
9000ffca:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ffcc:	4630      	mov	r0, r6
9000ffce:	f7fe f91d 	bl	9000e20c <pvPortMalloc>
			if( pxStack != NULL )
9000ffd2:	2800      	cmp	r0, #0
9000ffd4:	f000 8083 	beq.w	900100de <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000ffd8:	4607      	mov	r7, r0
9000ffda:	2060      	movs	r0, #96	; 0x60
9000ffdc:	f7fe f916 	bl	9000e20c <pvPortMalloc>
				if( pxNewTCB != NULL )
9000ffe0:	4604      	mov	r4, r0
9000ffe2:	2800      	cmp	r0, #0
9000ffe4:	d07f      	beq.n	900100e6 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ffe6:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000ffe8:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ffea:	4632      	mov	r2, r6
9000ffec:	4638      	mov	r0, r7
9000ffee:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000fff0:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fff4:	f017 fe12 	bl	90027c1c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fff8:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000fffc:	2d00      	cmp	r5, #0
9000fffe:	d078      	beq.n	900100f2 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010000:	782b      	ldrb	r3, [r5, #0]
90010002:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90010006:	2b00      	cmp	r3, #0
90010008:	d03b      	beq.n	90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001000a:	786b      	ldrb	r3, [r5, #1]
9001000c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010010:	2b00      	cmp	r3, #0
90010012:	d036      	beq.n	90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010014:	78ab      	ldrb	r3, [r5, #2]
90010016:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9001001a:	b393      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001001c:	78eb      	ldrb	r3, [r5, #3]
9001001e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010022:	b373      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010024:	792b      	ldrb	r3, [r5, #4]
90010026:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9001002a:	b353      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001002c:	796b      	ldrb	r3, [r5, #5]
9001002e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90010032:	b333      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010034:	79ab      	ldrb	r3, [r5, #6]
90010036:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9001003a:	b313      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001003c:	79eb      	ldrb	r3, [r5, #7]
9001003e:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010042:	b1f3      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010044:	7a2b      	ldrb	r3, [r5, #8]
90010046:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9001004a:	b1d3      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001004c:	7a6b      	ldrb	r3, [r5, #9]
9001004e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90010052:	b1b3      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010054:	7aab      	ldrb	r3, [r5, #10]
90010056:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9001005a:	b193      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001005c:	7aeb      	ldrb	r3, [r5, #11]
9001005e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90010062:	b173      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010064:	7b2b      	ldrb	r3, [r5, #12]
90010066:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9001006a:	b153      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001006c:	7b6b      	ldrb	r3, [r5, #13]
9001006e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90010072:	b133      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010074:	7bab      	ldrb	r3, [r5, #14]
90010076:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9001007a:	b113      	cbz	r3, 90010082 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001007c:	7beb      	ldrb	r3, [r5, #15]
9001007e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010082:	2300      	movs	r3, #0
90010084:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90010088:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9001008a:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001008c:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001008e:	3e04      	subs	r6, #4
90010090:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90010092:	6527      	str	r7, [r4, #80]	; 0x50
90010094:	bf28      	it	cs
90010096:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90010098:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001009a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001009c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900100a0:	f7fe f9e2 	bl	9000e468 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900100a4:	f104 0018 	add.w	r0, r4, #24
900100a8:	f7fe f9de 	bl	9000e468 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900100ac:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
900100b0:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100b2:	464a      	mov	r2, r9
900100b4:	4641      	mov	r1, r8
900100b6:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900100ba:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900100bc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900100be:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
900100c0:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900100c2:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100c6:	f7fe fa4d 	bl	9000e564 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
900100ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100cc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
900100ce:	b103      	cbz	r3, 900100d2 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
900100d0:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900100d2:	4620      	mov	r0, r4
900100d4:	f7ff fcb2 	bl	9000fa3c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
900100d8:	2001      	movs	r0, #1
	}
900100da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900100de:	f04f 30ff 	mov.w	r0, #4294967295
	}
900100e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
900100e6:	4638      	mov	r0, r7
900100e8:	f7fe f94e 	bl	9000e388 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
900100ec:	f04f 30ff 	mov.w	r0, #4294967295
900100f0:	e7f3      	b.n	900100da <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
900100f2:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
900100f6:	e7c7      	b.n	90010088 <xTaskCreate+0xc8>

900100f8 <vTaskDelay>:
	{
900100f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
900100fa:	b950      	cbnz	r0, 90010112 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
900100fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010100:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010104:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010108:	f3bf 8f4f 	dsb	sy
9001010c:	f3bf 8f6f 	isb	sy
	}
90010110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90010112:	4d1e      	ldr	r5, [pc, #120]	; (9001018c <vTaskDelay+0x94>)
90010114:	682b      	ldr	r3, [r5, #0]
90010116:	b143      	cbz	r3, 9001012a <vTaskDelay+0x32>
90010118:	f04f 0350 	mov.w	r3, #80	; 0x50
9001011c:	f383 8811 	msr	BASEPRI, r3
90010120:	f3bf 8f6f 	isb	sy
90010124:	f3bf 8f4f 	dsb	sy
90010128:	e7fe      	b.n	90010128 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001012a:	682b      	ldr	r3, [r5, #0]
9001012c:	4604      	mov	r4, r0
9001012e:	3301      	adds	r3, #1
90010130:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90010132:	4b17      	ldr	r3, [pc, #92]	; (90010190 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010134:	4e17      	ldr	r6, [pc, #92]	; (90010194 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90010136:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010138:	6830      	ldr	r0, [r6, #0]
9001013a:	3004      	adds	r0, #4
9001013c:	f7fe f9c0 	bl	9000e4c0 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90010140:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90010142:	6833      	ldr	r3, [r6, #0]
90010144:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90010146:	d315      	bcc.n	90010174 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010148:	4b13      	ldr	r3, [pc, #76]	; (90010198 <vTaskDelay+0xa0>)
9001014a:	6818      	ldr	r0, [r3, #0]
9001014c:	6831      	ldr	r1, [r6, #0]
9001014e:	3104      	adds	r1, #4
90010150:	f7fe f99e 	bl	9000e490 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90010154:	682b      	ldr	r3, [r5, #0]
90010156:	b943      	cbnz	r3, 9001016a <vTaskDelay+0x72>
90010158:	f04f 0350 	mov.w	r3, #80	; 0x50
9001015c:	f383 8811 	msr	BASEPRI, r3
90010160:	f3bf 8f6f 	isb	sy
90010164:	f3bf 8f4f 	dsb	sy
90010168:	e7fe      	b.n	90010168 <vTaskDelay+0x70>
9001016a:	f7ff fde5 	bl	9000fd38 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9001016e:	2800      	cmp	r0, #0
90010170:	d0c4      	beq.n	900100fc <vTaskDelay+0x4>
	}
90010172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010174:	4b09      	ldr	r3, [pc, #36]	; (9001019c <vTaskDelay+0xa4>)
90010176:	6818      	ldr	r0, [r3, #0]
90010178:	6831      	ldr	r1, [r6, #0]
9001017a:	3104      	adds	r1, #4
9001017c:	f7fe f988 	bl	9000e490 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90010180:	4b07      	ldr	r3, [pc, #28]	; (900101a0 <vTaskDelay+0xa8>)
90010182:	681a      	ldr	r2, [r3, #0]
90010184:	4294      	cmp	r4, r2
90010186:	d2e5      	bcs.n	90010154 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90010188:	601c      	str	r4, [r3, #0]
9001018a:	e7e3      	b.n	90010154 <vTaskDelay+0x5c>
9001018c:	24039544 	.word	0x24039544
90010190:	240395c4 	.word	0x240395c4
90010194:	240390d0 	.word	0x240390d0
90010198:	240390d8 	.word	0x240390d8
9001019c:	240390d4 	.word	0x240390d4
900101a0:	24039578 	.word	0x24039578

900101a4 <vTaskStartScheduler>:
{
900101a4:	b570      	push	{r4, r5, r6, lr}
900101a6:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900101a8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900101aa:	4668      	mov	r0, sp
900101ac:	aa02      	add	r2, sp, #8
900101ae:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
900101b0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900101b4:	f7fe f80c 	bl	9000e1d0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900101b8:	9d00      	ldr	r5, [sp, #0]
900101ba:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
900101be:	b1b8      	cbz	r0, 900101f0 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
900101c0:	b16d      	cbz	r5, 900101de <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
900101c2:	2260      	movs	r2, #96	; 0x60
900101c4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
900101c6:	9a03      	ldr	r2, [sp, #12]
900101c8:	2a60      	cmp	r2, #96	; 0x60
900101ca:	d01a      	beq.n	90010202 <vTaskStartScheduler+0x5e>
900101cc:	f04f 0350 	mov.w	r3, #80	; 0x50
900101d0:	f383 8811 	msr	BASEPRI, r3
900101d4:	f3bf 8f6f 	isb	sy
900101d8:	f3bf 8f4f 	dsb	sy
900101dc:	e7fe      	b.n	900101dc <vTaskStartScheduler+0x38>
900101de:	f04f 0350 	mov.w	r3, #80	; 0x50
900101e2:	f383 8811 	msr	BASEPRI, r3
900101e6:	f3bf 8f6f 	isb	sy
900101ea:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900101ee:	e7fe      	b.n	900101ee <vTaskStartScheduler+0x4a>
900101f0:	f04f 0350 	mov.w	r3, #80	; 0x50
900101f4:	f383 8811 	msr	BASEPRI, r3
900101f8:	f3bf 8f6f 	isb	sy
900101fc:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010200:	e7fe      	b.n	90010200 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010202:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010204:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010206:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010208:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001020a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001020c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010210:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010212:	f017 fd03 	bl	90027c1c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010216:	1f33      	subs	r3, r6, #4
90010218:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001021a:	492a      	ldr	r1, [pc, #168]	; (900102c4 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001021c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001021e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010220:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90010224:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010226:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001022a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001022e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90010230:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010234:	f7fe f918 	bl	9000e468 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010238:	f105 0018 	add.w	r0, r5, #24
9001023c:	f7fe f914 	bl	9000e468 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010240:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010242:	4622      	mov	r2, r4
90010244:	4920      	ldr	r1, [pc, #128]	; (900102c8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90010246:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010248:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001024a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001024c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001024e:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90010250:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010252:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010256:	f7fe f985 	bl	9000e564 <pxPortInitialiseStack>
9001025a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001025c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001025e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010260:	f7ff fbec 	bl	9000fa3c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90010264:	f000 fca4 	bl	90010bb0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90010268:	2801      	cmp	r0, #1
9001026a:	d00c      	beq.n	90010286 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9001026c:	3001      	adds	r0, #1
9001026e:	d001      	beq.n	90010274 <vTaskStartScheduler+0xd0>
}
90010270:	b004      	add	sp, #16
90010272:	bd70      	pop	{r4, r5, r6, pc}
90010274:	f04f 0350 	mov.w	r3, #80	; 0x50
90010278:	f383 8811 	msr	BASEPRI, r3
9001027c:	f3bf 8f6f 	isb	sy
90010280:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90010284:	e7fe      	b.n	90010284 <vTaskStartScheduler+0xe0>
90010286:	f04f 0350 	mov.w	r3, #80	; 0x50
9001028a:	f383 8811 	msr	BASEPRI, r3
9001028e:	f3bf 8f6f 	isb	sy
90010292:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90010296:	4b0d      	ldr	r3, [pc, #52]	; (900102cc <vTaskStartScheduler+0x128>)
90010298:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9001029c:	490c      	ldr	r1, [pc, #48]	; (900102d0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9001029e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900102a0:	4b0c      	ldr	r3, [pc, #48]	; (900102d4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
900102a2:	4a0d      	ldr	r2, [pc, #52]	; (900102d8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
900102a4:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900102a6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
900102a8:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
900102aa:	b143      	cbz	r3, 900102be <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
900102ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900102ae:	b10b      	cbz	r3, 900102b4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
900102b0:	2000      	movs	r0, #0
900102b2:	4798      	blx	r3
}
900102b4:	b004      	add	sp, #16
900102b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
900102ba:	f7fe ba15 	b.w	9000e6e8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
900102be:	6813      	ldr	r3, [r2, #0]
900102c0:	e7f4      	b.n	900102ac <vTaskStartScheduler+0x108>
900102c2:	bf00      	nop
900102c4:	454c4449 	.word	0x454c4449
900102c8:	9000fb4d 	.word	0x9000fb4d
900102cc:	24039578 	.word	0x24039578
900102d0:	24039598 	.word	0x24039598
900102d4:	240395c4 	.word	0x240395c4
900102d8:	240390d0 	.word	0x240390d0

900102dc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
900102dc:	4a02      	ldr	r2, [pc, #8]	; (900102e8 <vTaskSuspendAll+0xc>)
900102de:	6813      	ldr	r3, [r2, #0]
900102e0:	3301      	adds	r3, #1
900102e2:	6013      	str	r3, [r2, #0]
}
900102e4:	4770      	bx	lr
900102e6:	bf00      	nop
900102e8:	24039544 	.word	0x24039544

900102ec <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
900102ec:	4b06      	ldr	r3, [pc, #24]	; (90010308 <xTaskResumeAll+0x1c>)
900102ee:	681b      	ldr	r3, [r3, #0]
900102f0:	b943      	cbnz	r3, 90010304 <xTaskResumeAll+0x18>
900102f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900102f6:	f383 8811 	msr	BASEPRI, r3
900102fa:	f3bf 8f6f 	isb	sy
900102fe:	f3bf 8f4f 	dsb	sy
90010302:	e7fe      	b.n	90010302 <xTaskResumeAll+0x16>
90010304:	f7ff bd18 	b.w	9000fd38 <xTaskResumeAll.part.0>
90010308:	24039544 	.word	0x24039544

9001030c <xTaskGetTickCount>:
		xTicks = xTickCount;
9001030c:	4b01      	ldr	r3, [pc, #4]	; (90010314 <xTaskGetTickCount+0x8>)
9001030e:	6818      	ldr	r0, [r3, #0]
}
90010310:	4770      	bx	lr
90010312:	bf00      	nop
90010314:	240395c4 	.word	0x240395c4

90010318 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010318:	4b05      	ldr	r3, [pc, #20]	; (90010330 <xTaskIncrementTick+0x18>)
9001031a:	681b      	ldr	r3, [r3, #0]
9001031c:	b90b      	cbnz	r3, 90010322 <xTaskIncrementTick+0xa>
9001031e:	f7ff bc63 	b.w	9000fbe8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010322:	4a04      	ldr	r2, [pc, #16]	; (90010334 <xTaskIncrementTick+0x1c>)
}
90010324:	2000      	movs	r0, #0
		++xPendedTicks;
90010326:	6813      	ldr	r3, [r2, #0]
90010328:	3301      	adds	r3, #1
9001032a:	6013      	str	r3, [r2, #0]
}
9001032c:	4770      	bx	lr
9001032e:	bf00      	nop
90010330:	24039544 	.word	0x24039544
90010334:	24039580 	.word	0x24039580

90010338 <vTaskSetApplicationTaskTag>:
	{
90010338:	b538      	push	{r3, r4, r5, lr}
9001033a:	460d      	mov	r5, r1
		if( xTask == NULL )
9001033c:	b138      	cbz	r0, 9001034e <vTaskSetApplicationTaskTag+0x16>
9001033e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90010340:	f7fe f940 	bl	9000e5c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90010344:	6565      	str	r5, [r4, #84]	; 0x54
	}
90010346:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001034a:	f7fe b95d 	b.w	9000e608 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9001034e:	4b04      	ldr	r3, [pc, #16]	; (90010360 <vTaskSetApplicationTaskTag+0x28>)
90010350:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90010352:	f7fe f937 	bl	9000e5c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90010356:	6565      	str	r5, [r4, #84]	; 0x54
	}
90010358:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9001035c:	f7fe b954 	b.w	9000e608 <vPortExitCritical>
90010360:	240390d0 	.word	0x240390d0

90010364 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90010364:	4b27      	ldr	r3, [pc, #156]	; (90010404 <vTaskSwitchContext+0xa0>)
90010366:	681b      	ldr	r3, [r3, #0]
90010368:	b11b      	cbz	r3, 90010372 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9001036a:	4b27      	ldr	r3, [pc, #156]	; (90010408 <vTaskSwitchContext+0xa4>)
9001036c:	2201      	movs	r2, #1
9001036e:	601a      	str	r2, [r3, #0]
90010370:	4770      	bx	lr
{
90010372:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90010374:	4a24      	ldr	r2, [pc, #144]	; (90010408 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90010376:	4c25      	ldr	r4, [pc, #148]	; (9001040c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90010378:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9001037a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001037c:	2b00      	cmp	r3, #0
9001037e:	d036      	beq.n	900103ee <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90010380:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010382:	b10b      	cbz	r3, 90010388 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010384:	2001      	movs	r0, #1
90010386:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010388:	4d21      	ldr	r5, [pc, #132]	; (90010410 <vTaskSwitchContext+0xac>)
9001038a:	4922      	ldr	r1, [pc, #136]	; (90010414 <vTaskSwitchContext+0xb0>)
9001038c:	682b      	ldr	r3, [r5, #0]
9001038e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010392:	0098      	lsls	r0, r3, #2
90010394:	0092      	lsls	r2, r2, #2
90010396:	588a      	ldr	r2, [r1, r2]
90010398:	b942      	cbnz	r2, 900103ac <vTaskSwitchContext+0x48>
9001039a:	b1fb      	cbz	r3, 900103dc <vTaskSwitchContext+0x78>
9001039c:	3b01      	subs	r3, #1
9001039e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
900103a2:	0098      	lsls	r0, r3, #2
900103a4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
900103a8:	2a00      	cmp	r2, #0
900103aa:	d0f6      	beq.n	9001039a <vTaskSwitchContext+0x36>
900103ac:	4418      	add	r0, r3
900103ae:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
900103b2:	f8dc 1004 	ldr.w	r1, [ip, #4]
900103b6:	4662      	mov	r2, ip
900103b8:	6849      	ldr	r1, [r1, #4]
900103ba:	3208      	adds	r2, #8
900103bc:	4291      	cmp	r1, r2
900103be:	f8cc 1004 	str.w	r1, [ip, #4]
900103c2:	d01b      	beq.n	900103fc <vTaskSwitchContext+0x98>
900103c4:	68ca      	ldr	r2, [r1, #12]
900103c6:	6022      	str	r2, [r4, #0]
900103c8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
900103ca:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900103cc:	b1a3      	cbz	r3, 900103f8 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
900103ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900103d0:	b11b      	cbz	r3, 900103da <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
900103d2:	2000      	movs	r0, #0
}
900103d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
900103d8:	4718      	bx	r3
}
900103da:	bd70      	pop	{r4, r5, r6, pc}
900103dc:	f04f 0350 	mov.w	r3, #80	; 0x50
900103e0:	f383 8811 	msr	BASEPRI, r3
900103e4:	f3bf 8f6f 	isb	sy
900103e8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900103ec:	e7fe      	b.n	900103ec <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
900103ee:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
900103f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900103f2:	2b00      	cmp	r3, #0
900103f4:	d1c6      	bne.n	90010384 <vTaskSwitchContext+0x20>
900103f6:	e7c7      	b.n	90010388 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
900103f8:	6823      	ldr	r3, [r4, #0]
900103fa:	e7e8      	b.n	900103ce <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900103fc:	6849      	ldr	r1, [r1, #4]
900103fe:	f8cc 1004 	str.w	r1, [ip, #4]
90010402:	e7df      	b.n	900103c4 <vTaskSwitchContext+0x60>
90010404:	24039544 	.word	0x24039544
90010408:	240395c8 	.word	0x240395c8
9001040c:	240390d0 	.word	0x240390d0
90010410:	2403954c 	.word	0x2403954c
90010414:	240390dc 	.word	0x240390dc

90010418 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90010418:	b1f0      	cbz	r0, 90010458 <vTaskPlaceOnEventList+0x40>
{
9001041a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9001041c:	4d1a      	ldr	r5, [pc, #104]	; (90010488 <vTaskPlaceOnEventList+0x70>)
9001041e:	460c      	mov	r4, r1
90010420:	6829      	ldr	r1, [r5, #0]
90010422:	3118      	adds	r1, #24
90010424:	f7fe f834 	bl	9000e490 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90010428:	4b18      	ldr	r3, [pc, #96]	; (9001048c <vTaskPlaceOnEventList+0x74>)
9001042a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001042c:	6828      	ldr	r0, [r5, #0]
9001042e:	3004      	adds	r0, #4
90010430:	f7fe f846 	bl	9000e4c0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90010434:	1c63      	adds	r3, r4, #1
90010436:	d020      	beq.n	9001047a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90010438:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001043a:	682b      	ldr	r3, [r5, #0]
9001043c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001043e:	d214      	bcs.n	9001046a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010440:	4b13      	ldr	r3, [pc, #76]	; (90010490 <vTaskPlaceOnEventList+0x78>)
90010442:	6818      	ldr	r0, [r3, #0]
90010444:	6829      	ldr	r1, [r5, #0]
90010446:	3104      	adds	r1, #4
90010448:	f7fe f822 	bl	9000e490 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001044c:	4b11      	ldr	r3, [pc, #68]	; (90010494 <vTaskPlaceOnEventList+0x7c>)
9001044e:	681a      	ldr	r2, [r3, #0]
90010450:	4294      	cmp	r4, r2
90010452:	d200      	bcs.n	90010456 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90010454:	601c      	str	r4, [r3, #0]
}
90010456:	bd70      	pop	{r4, r5, r6, pc}
90010458:	f04f 0350 	mov.w	r3, #80	; 0x50
9001045c:	f383 8811 	msr	BASEPRI, r3
90010460:	f3bf 8f6f 	isb	sy
90010464:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90010468:	e7fe      	b.n	90010468 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001046a:	4b0b      	ldr	r3, [pc, #44]	; (90010498 <vTaskPlaceOnEventList+0x80>)
9001046c:	6818      	ldr	r0, [r3, #0]
9001046e:	6829      	ldr	r1, [r5, #0]
}
90010470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010474:	3104      	adds	r1, #4
90010476:	f7fe b80b 	b.w	9000e490 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001047a:	6829      	ldr	r1, [r5, #0]
9001047c:	4807      	ldr	r0, [pc, #28]	; (9001049c <vTaskPlaceOnEventList+0x84>)
9001047e:	3104      	adds	r1, #4
}
90010480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010484:	f7fd bff4 	b.w	9000e470 <vListInsertEnd>
90010488:	240390d0 	.word	0x240390d0
9001048c:	240395c4 	.word	0x240395c4
90010490:	240390d4 	.word	0x240390d4
90010494:	24039578 	.word	0x24039578
90010498:	240390d8 	.word	0x240390d8
9001049c:	2403959c 	.word	0x2403959c

900104a0 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
900104a0:	b358      	cbz	r0, 900104fa <vTaskPlaceOnEventListRestricted+0x5a>
	{
900104a2:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
900104a4:	4e1d      	ldr	r6, [pc, #116]	; (9001051c <vTaskPlaceOnEventListRestricted+0x7c>)
900104a6:	460c      	mov	r4, r1
900104a8:	4615      	mov	r5, r2
900104aa:	6831      	ldr	r1, [r6, #0]
900104ac:	3118      	adds	r1, #24
900104ae:	f7fd ffdf 	bl	9000e470 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
900104b2:	b165      	cbz	r5, 900104ce <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
900104b4:	4b1a      	ldr	r3, [pc, #104]	; (90010520 <vTaskPlaceOnEventListRestricted+0x80>)
900104b6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900104b8:	6830      	ldr	r0, [r6, #0]
900104ba:	3004      	adds	r0, #4
900104bc:	f7fe f800 	bl	9000e4c0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900104c0:	6831      	ldr	r1, [r6, #0]
900104c2:	4818      	ldr	r0, [pc, #96]	; (90010524 <vTaskPlaceOnEventListRestricted+0x84>)
900104c4:	3104      	adds	r1, #4
	}
900104c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900104ca:	f7fd bfd1 	b.w	9000e470 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
900104ce:	4b14      	ldr	r3, [pc, #80]	; (90010520 <vTaskPlaceOnEventListRestricted+0x80>)
900104d0:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900104d2:	6830      	ldr	r0, [r6, #0]
900104d4:	3004      	adds	r0, #4
900104d6:	f7fd fff3 	bl	9000e4c0 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
900104da:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900104dc:	6833      	ldr	r3, [r6, #0]
900104de:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900104e0:	d214      	bcs.n	9001050c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900104e2:	4b11      	ldr	r3, [pc, #68]	; (90010528 <vTaskPlaceOnEventListRestricted+0x88>)
900104e4:	6818      	ldr	r0, [r3, #0]
900104e6:	6831      	ldr	r1, [r6, #0]
900104e8:	3104      	adds	r1, #4
900104ea:	f7fd ffd1 	bl	9000e490 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900104ee:	4b0f      	ldr	r3, [pc, #60]	; (9001052c <vTaskPlaceOnEventListRestricted+0x8c>)
900104f0:	681a      	ldr	r2, [r3, #0]
900104f2:	4294      	cmp	r4, r2
900104f4:	d200      	bcs.n	900104f8 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
900104f6:	601c      	str	r4, [r3, #0]
	}
900104f8:	bd70      	pop	{r4, r5, r6, pc}
900104fa:	f04f 0350 	mov.w	r3, #80	; 0x50
900104fe:	f383 8811 	msr	BASEPRI, r3
90010502:	f3bf 8f6f 	isb	sy
90010506:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001050a:	e7fe      	b.n	9001050a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001050c:	4b08      	ldr	r3, [pc, #32]	; (90010530 <vTaskPlaceOnEventListRestricted+0x90>)
9001050e:	6818      	ldr	r0, [r3, #0]
90010510:	6831      	ldr	r1, [r6, #0]
	}
90010512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010516:	3104      	adds	r1, #4
90010518:	f7fd bfba 	b.w	9000e490 <vListInsert>
9001051c:	240390d0 	.word	0x240390d0
90010520:	240395c4 	.word	0x240395c4
90010524:	2403959c 	.word	0x2403959c
90010528:	240390d4 	.word	0x240390d4
9001052c:	24039578 	.word	0x24039578
90010530:	240390d8 	.word	0x240390d8

90010534 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010534:	68c3      	ldr	r3, [r0, #12]
{
90010536:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010538:	68dc      	ldr	r4, [r3, #12]
{
9001053a:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9001053c:	b35c      	cbz	r4, 90010596 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9001053e:	f104 0518 	add.w	r5, r4, #24
90010542:	4628      	mov	r0, r5
90010544:	f7fd ffbc 	bl	9000e4c0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010548:	4b19      	ldr	r3, [pc, #100]	; (900105b0 <xTaskRemoveFromEventList+0x7c>)
9001054a:	681b      	ldr	r3, [r3, #0]
9001054c:	b17b      	cbz	r3, 9001056e <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9001054e:	4629      	mov	r1, r5
90010550:	4818      	ldr	r0, [pc, #96]	; (900105b4 <xTaskRemoveFromEventList+0x80>)
90010552:	f7fd ff8d 	bl	9000e470 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90010556:	4b18      	ldr	r3, [pc, #96]	; (900105b8 <xTaskRemoveFromEventList+0x84>)
90010558:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001055a:	681b      	ldr	r3, [r3, #0]
9001055c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001055e:	429a      	cmp	r2, r3
90010560:	d922      	bls.n	900105a8 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
90010562:	2301      	movs	r3, #1
90010564:	4a15      	ldr	r2, [pc, #84]	; (900105bc <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
90010566:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90010568:	6013      	str	r3, [r2, #0]
}
9001056a:	b003      	add	sp, #12
9001056c:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9001056e:	1d21      	adds	r1, r4, #4
90010570:	4608      	mov	r0, r1
90010572:	9101      	str	r1, [sp, #4]
90010574:	f7fd ffa4 	bl	9000e4c0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90010578:	4a11      	ldr	r2, [pc, #68]	; (900105c0 <xTaskRemoveFromEventList+0x8c>)
9001057a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001057c:	6810      	ldr	r0, [r2, #0]
9001057e:	9901      	ldr	r1, [sp, #4]
90010580:	4283      	cmp	r3, r0
90010582:	d900      	bls.n	90010586 <xTaskRemoveFromEventList+0x52>
90010584:	6013      	str	r3, [r2, #0]
90010586:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001058a:	480e      	ldr	r0, [pc, #56]	; (900105c4 <xTaskRemoveFromEventList+0x90>)
9001058c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90010590:	f7fd ff6e 	bl	9000e470 <vListInsertEnd>
90010594:	e7df      	b.n	90010556 <xTaskRemoveFromEventList+0x22>
90010596:	f04f 0350 	mov.w	r3, #80	; 0x50
9001059a:	f383 8811 	msr	BASEPRI, r3
9001059e:	f3bf 8f6f 	isb	sy
900105a2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
900105a6:	e7fe      	b.n	900105a6 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
900105a8:	2000      	movs	r0, #0
}
900105aa:	b003      	add	sp, #12
900105ac:	bd30      	pop	{r4, r5, pc}
900105ae:	bf00      	nop
900105b0:	24039544 	.word	0x24039544
900105b4:	24039584 	.word	0x24039584
900105b8:	240390d0 	.word	0x240390d0
900105bc:	240395c8 	.word	0x240395c8
900105c0:	2403954c 	.word	0x2403954c
900105c4:	240390dc 	.word	0x240390dc

900105c8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900105c8:	4a03      	ldr	r2, [pc, #12]	; (900105d8 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
900105ca:	4b04      	ldr	r3, [pc, #16]	; (900105dc <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900105cc:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900105ce:	681b      	ldr	r3, [r3, #0]
900105d0:	e9c0 2300 	strd	r2, r3, [r0]
}
900105d4:	4770      	bx	lr
900105d6:	bf00      	nop
900105d8:	2403957c 	.word	0x2403957c
900105dc:	240395c4 	.word	0x240395c4

900105e0 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
900105e0:	b328      	cbz	r0, 9001062e <xTaskCheckForTimeOut+0x4e>
{
900105e2:	b5f0      	push	{r4, r5, r6, r7, lr}
900105e4:	460d      	mov	r5, r1
900105e6:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
900105e8:	b1c1      	cbz	r1, 9001061c <xTaskCheckForTimeOut+0x3c>
900105ea:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
900105ec:	f7fd ffea 	bl	9000e5c4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
900105f0:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
900105f2:	4a1d      	ldr	r2, [pc, #116]	; (90010668 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
900105f4:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
900105f6:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
900105f8:	d030      	beq.n	9001065c <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
900105fa:	f8df c070 	ldr.w	ip, [pc, #112]	; 9001066c <xTaskCheckForTimeOut+0x8c>
900105fe:	6826      	ldr	r6, [r4, #0]
90010600:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010604:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010606:	42be      	cmp	r6, r7
90010608:	d01a      	beq.n	90010640 <xTaskCheckForTimeOut+0x60>
9001060a:	4288      	cmp	r0, r1
9001060c:	d818      	bhi.n	90010640 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9001060e:	2001      	movs	r0, #1
90010610:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010612:	f7fd fff9 	bl	9000e608 <vPortExitCritical>
}
90010616:	9801      	ldr	r0, [sp, #4]
90010618:	b003      	add	sp, #12
9001061a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001061c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010620:	f383 8811 	msr	BASEPRI, r3
90010624:	f3bf 8f6f 	isb	sy
90010628:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001062c:	e7fe      	b.n	9001062c <xTaskCheckForTimeOut+0x4c>
9001062e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010632:	f383 8811 	msr	BASEPRI, r3
90010636:	f3bf 8f6f 	isb	sy
9001063a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001063e:	e7fe      	b.n	9001063e <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010640:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90010644:	4573      	cmp	r3, lr
90010646:	d90b      	bls.n	90010660 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
90010648:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001064a:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001064e:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90010650:	4403      	add	r3, r0
			xReturn = pdFALSE;
90010652:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
90010654:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010656:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9001065a:	e7d9      	b.n	90010610 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9001065c:	2000      	movs	r0, #0
9001065e:	e7d7      	b.n	90010610 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
90010660:	2300      	movs	r3, #0
			xReturn = pdTRUE;
90010662:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
90010664:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90010666:	e7d3      	b.n	90010610 <xTaskCheckForTimeOut+0x30>
90010668:	240395c4 	.word	0x240395c4
9001066c:	2403957c 	.word	0x2403957c

90010670 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90010670:	4b01      	ldr	r3, [pc, #4]	; (90010678 <vTaskMissedYield+0x8>)
90010672:	2201      	movs	r2, #1
90010674:	601a      	str	r2, [r3, #0]
}
90010676:	4770      	bx	lr
90010678:	240395c8 	.word	0x240395c8

9001067c <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9001067c:	4b01      	ldr	r3, [pc, #4]	; (90010684 <xTaskGetCurrentTaskHandle+0x8>)
9001067e:	6818      	ldr	r0, [r3, #0]
	}
90010680:	4770      	bx	lr
90010682:	bf00      	nop
90010684:	240390d0 	.word	0x240390d0

90010688 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90010688:	4b05      	ldr	r3, [pc, #20]	; (900106a0 <xTaskGetSchedulerState+0x18>)
9001068a:	681b      	ldr	r3, [r3, #0]
9001068c:	b133      	cbz	r3, 9001069c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9001068e:	4b05      	ldr	r3, [pc, #20]	; (900106a4 <xTaskGetSchedulerState+0x1c>)
90010690:	6818      	ldr	r0, [r3, #0]
90010692:	fab0 f080 	clz	r0, r0
90010696:	0940      	lsrs	r0, r0, #5
90010698:	0040      	lsls	r0, r0, #1
9001069a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9001069c:	2001      	movs	r0, #1
	}
9001069e:	4770      	bx	lr
900106a0:	24039598 	.word	0x24039598
900106a4:	24039544 	.word	0x24039544

900106a8 <xTaskPriorityInherit>:
	{
900106a8:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
900106aa:	4604      	mov	r4, r0
	{
900106ac:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
900106ae:	b1c8      	cbz	r0, 900106e4 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
900106b0:	4d1d      	ldr	r5, [pc, #116]	; (90010728 <xTaskPriorityInherit+0x80>)
900106b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900106b4:	682a      	ldr	r2, [r5, #0]
900106b6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900106b8:	4293      	cmp	r3, r2
900106ba:	d215      	bcs.n	900106e8 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900106bc:	6982      	ldr	r2, [r0, #24]
900106be:	2a00      	cmp	r2, #0
900106c0:	db04      	blt.n	900106cc <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106c2:	682a      	ldr	r2, [r5, #0]
900106c4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900106c6:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
900106ca:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
900106cc:	4e17      	ldr	r6, [pc, #92]	; (9001072c <xTaskPriorityInherit+0x84>)
900106ce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900106d2:	6962      	ldr	r2, [r4, #20]
900106d4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
900106d8:	429a      	cmp	r2, r3
900106da:	d00e      	beq.n	900106fa <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900106dc:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
900106de:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
900106e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106e2:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
900106e4:	b002      	add	sp, #8
900106e6:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
900106e8:	682b      	ldr	r3, [r5, #0]
900106ea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
900106ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106ee:	4298      	cmp	r0, r3
900106f0:	bf2c      	ite	cs
900106f2:	2000      	movcs	r0, #0
900106f4:	2001      	movcc	r0, #1
	}
900106f6:	b002      	add	sp, #8
900106f8:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900106fa:	1d21      	adds	r1, r4, #4
900106fc:	4608      	mov	r0, r1
900106fe:	9101      	str	r1, [sp, #4]
90010700:	f7fd fede 	bl	9000e4c0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010704:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010706:	4b0a      	ldr	r3, [pc, #40]	; (90010730 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010708:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001070a:	681a      	ldr	r2, [r3, #0]
9001070c:	9901      	ldr	r1, [sp, #4]
9001070e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010710:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010712:	d900      	bls.n	90010716 <xTaskPriorityInherit+0x6e>
90010714:	6018      	str	r0, [r3, #0]
90010716:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001071a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001071e:	f7fd fea7 	bl	9000e470 <vListInsertEnd>
				xReturn = pdTRUE;
90010722:	2001      	movs	r0, #1
90010724:	e7de      	b.n	900106e4 <xTaskPriorityInherit+0x3c>
90010726:	bf00      	nop
90010728:	240390d0 	.word	0x240390d0
9001072c:	240390dc 	.word	0x240390dc
90010730:	2403954c 	.word	0x2403954c

90010734 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90010734:	b318      	cbz	r0, 9001077e <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90010736:	4b1f      	ldr	r3, [pc, #124]	; (900107b4 <xTaskPriorityDisinherit+0x80>)
	{
90010738:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9001073a:	681c      	ldr	r4, [r3, #0]
	{
9001073c:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9001073e:	4284      	cmp	r4, r0
90010740:	d008      	beq.n	90010754 <xTaskPriorityDisinherit+0x20>
90010742:	f04f 0350 	mov.w	r3, #80	; 0x50
90010746:	f383 8811 	msr	BASEPRI, r3
9001074a:	f3bf 8f6f 	isb	sy
9001074e:	f3bf 8f4f 	dsb	sy
90010752:	e7fe      	b.n	90010752 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
90010754:	6d23      	ldr	r3, [r4, #80]	; 0x50
90010756:	b14b      	cbz	r3, 9001076c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010758:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9001075a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9001075c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9001075e:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90010760:	4291      	cmp	r1, r2
90010762:	d000      	beq.n	90010766 <xTaskPriorityDisinherit+0x32>
90010764:	b16b      	cbz	r3, 90010782 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
90010766:	2000      	movs	r0, #0
	}
90010768:	b002      	add	sp, #8
9001076a:	bd10      	pop	{r4, pc}
9001076c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010770:	f383 8811 	msr	BASEPRI, r3
90010774:	f3bf 8f6f 	isb	sy
90010778:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9001077c:	e7fe      	b.n	9001077c <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9001077e:	2000      	movs	r0, #0
	}
90010780:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010782:	1d21      	adds	r1, r4, #4
90010784:	4608      	mov	r0, r1
90010786:	9101      	str	r1, [sp, #4]
90010788:	f7fd fe9a 	bl	9000e4c0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9001078c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9001078e:	4b0a      	ldr	r3, [pc, #40]	; (900107b8 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010790:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90010794:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010796:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010798:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9001079a:	681a      	ldr	r2, [r3, #0]
9001079c:	4290      	cmp	r0, r2
9001079e:	d900      	bls.n	900107a2 <xTaskPriorityDisinherit+0x6e>
900107a0:	6018      	str	r0, [r3, #0]
900107a2:	4b06      	ldr	r3, [pc, #24]	; (900107bc <xTaskPriorityDisinherit+0x88>)
900107a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900107a8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
900107ac:	f7fd fe60 	bl	9000e470 <vListInsertEnd>
					xReturn = pdTRUE;
900107b0:	2001      	movs	r0, #1
		return xReturn;
900107b2:	e7d9      	b.n	90010768 <xTaskPriorityDisinherit+0x34>
900107b4:	240390d0 	.word	0x240390d0
900107b8:	2403954c 	.word	0x2403954c
900107bc:	240390dc 	.word	0x240390dc

900107c0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
900107c0:	2800      	cmp	r0, #0
900107c2:	d040      	beq.n	90010846 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
900107c4:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
900107c6:	b530      	push	{r4, r5, lr}
900107c8:	4604      	mov	r4, r0
900107ca:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
900107cc:	b153      	cbz	r3, 900107e4 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
900107ce:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
900107d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900107d2:	4281      	cmp	r1, r0
900107d4:	bf38      	it	cc
900107d6:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
900107d8:	2b01      	cmp	r3, #1
900107da:	d101      	bne.n	900107e0 <vTaskPriorityDisinheritAfterTimeout+0x20>
900107dc:	428a      	cmp	r2, r1
900107de:	d10a      	bne.n	900107f6 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
900107e0:	b003      	add	sp, #12
900107e2:	bd30      	pop	{r4, r5, pc}
900107e4:	f04f 0350 	mov.w	r3, #80	; 0x50
900107e8:	f383 8811 	msr	BASEPRI, r3
900107ec:	f3bf 8f6f 	isb	sy
900107f0:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900107f4:	e7fe      	b.n	900107f4 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
900107f6:	4b19      	ldr	r3, [pc, #100]	; (9001085c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
900107f8:	681b      	ldr	r3, [r3, #0]
900107fa:	42a3      	cmp	r3, r4
900107fc:	d024      	beq.n	90010848 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
900107fe:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010800:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010802:	2b00      	cmp	r3, #0
90010804:	db02      	blt.n	9001080c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010806:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001080a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001080c:	4d14      	ldr	r5, [pc, #80]	; (90010860 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001080e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010812:	6961      	ldr	r1, [r4, #20]
90010814:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010818:	4299      	cmp	r1, r3
9001081a:	d1e1      	bne.n	900107e0 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001081c:	1d21      	adds	r1, r4, #4
9001081e:	4608      	mov	r0, r1
90010820:	9101      	str	r1, [sp, #4]
90010822:	f7fd fe4d 	bl	9000e4c0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010826:	4b0f      	ldr	r3, [pc, #60]	; (90010864 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90010828:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001082a:	681a      	ldr	r2, [r3, #0]
9001082c:	9901      	ldr	r1, [sp, #4]
9001082e:	4290      	cmp	r0, r2
90010830:	d900      	bls.n	90010834 <vTaskPriorityDisinheritAfterTimeout+0x74>
90010832:	6018      	str	r0, [r3, #0]
90010834:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010838:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001083c:	b003      	add	sp, #12
9001083e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
90010842:	f7fd be15 	b.w	9000e470 <vListInsertEnd>
90010846:	4770      	bx	lr
90010848:	f04f 0350 	mov.w	r3, #80	; 0x50
9001084c:	f383 8811 	msr	BASEPRI, r3
90010850:	f3bf 8f6f 	isb	sy
90010854:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90010858:	e7fe      	b.n	90010858 <vTaskPriorityDisinheritAfterTimeout+0x98>
9001085a:	bf00      	nop
9001085c:	240390d0 	.word	0x240390d0
90010860:	240390dc 	.word	0x240390dc
90010864:	2403954c 	.word	0x2403954c

90010868 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90010868:	4b04      	ldr	r3, [pc, #16]	; (9001087c <pvTaskIncrementMutexHeldCount+0x14>)
9001086a:	681a      	ldr	r2, [r3, #0]
9001086c:	b11a      	cbz	r2, 90010876 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9001086e:	6819      	ldr	r1, [r3, #0]
90010870:	6d0a      	ldr	r2, [r1, #80]	; 0x50
90010872:	3201      	adds	r2, #1
90010874:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
90010876:	6818      	ldr	r0, [r3, #0]
	}
90010878:	4770      	bx	lr
9001087a:	bf00      	nop
9001087c:	240390d0 	.word	0x240390d0

90010880 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90010880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010884:	4e22      	ldr	r6, [pc, #136]	; (90010910 <prvSwitchTimerLists+0x90>)
90010886:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
90010888:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90010918 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9001088c:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010890:	e00d      	b.n	900108ae <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010892:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010894:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010896:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010898:	1d25      	adds	r5, r4, #4
9001089a:	4628      	mov	r0, r5
9001089c:	f7fd fe10 	bl	9000e4c0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900108a0:	6a23      	ldr	r3, [r4, #32]
900108a2:	4620      	mov	r0, r4
900108a4:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900108a6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900108aa:	075b      	lsls	r3, r3, #29
900108ac:	d40a      	bmi.n	900108c4 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900108ae:	6833      	ldr	r3, [r6, #0]
900108b0:	681a      	ldr	r2, [r3, #0]
900108b2:	2a00      	cmp	r2, #0
900108b4:	d1ed      	bne.n	90010892 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
900108b6:	4a17      	ldr	r2, [pc, #92]	; (90010914 <prvSwitchTimerLists+0x94>)
900108b8:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
900108ba:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
900108bc:	6031      	str	r1, [r6, #0]
}
900108be:	b005      	add	sp, #20
900108c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900108c4:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900108c6:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
900108c8:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
900108ca:	429f      	cmp	r7, r3
900108cc:	d205      	bcs.n	900108da <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900108ce:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
900108d0:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900108d2:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900108d4:	f7fd fddc 	bl	9000e490 <vListInsert>
900108d8:	e7e9      	b.n	900108ae <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
900108da:	f8d9 3000 	ldr.w	r3, [r9]
900108de:	b16b      	cbz	r3, 900108fc <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900108e0:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900108e2:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900108e6:	f7ff fecf 	bl	90010688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900108ea:	2300      	movs	r3, #0
900108ec:	4669      	mov	r1, sp
900108ee:	f8d9 0000 	ldr.w	r0, [r9]
900108f2:	461a      	mov	r2, r3
900108f4:	f7fe f95e 	bl	9000ebb4 <xQueueGenericSend>
				configASSERT( xResult );
900108f8:	2800      	cmp	r0, #0
900108fa:	d1d8      	bne.n	900108ae <prvSwitchTimerLists+0x2e>
900108fc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010900:	f383 8811 	msr	BASEPRI, r3
90010904:	f3bf 8f6f 	isb	sy
90010908:	f3bf 8f4f 	dsb	sy
9001090c:	e7fe      	b.n	9001090c <prvSwitchTimerLists+0x8c>
9001090e:	bf00      	nop
90010910:	240395cc 	.word	0x240395cc
90010914:	240395d0 	.word	0x240395d0
90010918:	240396f0 	.word	0x240396f0

9001091c <prvTimerTask>:
{
9001091c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010920:	4e9f      	ldr	r6, [pc, #636]	; (90010ba0 <prvTimerTask+0x284>)
90010922:	b089      	sub	sp, #36	; 0x24
90010924:	4d9f      	ldr	r5, [pc, #636]	; (90010ba4 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010926:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001092a:	4c9f      	ldr	r4, [pc, #636]	; (90010ba8 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001092c:	6833      	ldr	r3, [r6, #0]
9001092e:	681f      	ldr	r7, [r3, #0]
90010930:	2f00      	cmp	r7, #0
90010932:	f000 80b2 	beq.w	90010a9a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010936:	68db      	ldr	r3, [r3, #12]
90010938:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001093a:	f7ff fccf 	bl	900102dc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001093e:	f7ff fce5 	bl	9001030c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010942:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010944:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010946:	4290      	cmp	r0, r2
90010948:	f0c0 80af 	bcc.w	90010aaa <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9001094c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9001094e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010950:	f200 80d0 	bhi.w	90010af4 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90010954:	f7ff fcca 	bl	900102ec <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010958:	6832      	ldr	r2, [r6, #0]
9001095a:	68d2      	ldr	r2, [r2, #12]
9001095c:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010960:	f10b 0804 	add.w	r8, fp, #4
90010964:	4640      	mov	r0, r8
90010966:	f7fd fdab 	bl	9000e4c0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001096a:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9001096e:	0741      	lsls	r1, r0, #29
90010970:	f100 80d0 	bmi.w	90010b14 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010974:	f020 0001 	bic.w	r0, r0, #1
90010978:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001097c:	f8db 3020 	ldr.w	r3, [fp, #32]
90010980:	4658      	mov	r0, fp
90010982:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90010984:	2200      	movs	r2, #0
90010986:	4669      	mov	r1, sp
90010988:	6820      	ldr	r0, [r4, #0]
9001098a:	f7fe fbff 	bl	9000f18c <xQueueReceive>
9001098e:	2800      	cmp	r0, #0
90010990:	d0cc      	beq.n	9001092c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010992:	9b00      	ldr	r3, [sp, #0]
90010994:	2b00      	cmp	r3, #0
90010996:	db77      	blt.n	90010a88 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90010998:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9001099a:	697b      	ldr	r3, [r7, #20]
9001099c:	b113      	cbz	r3, 900109a4 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001099e:	1d38      	adds	r0, r7, #4
900109a0:	f7fd fd8e 	bl	9000e4c0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900109a4:	f7ff fcb2 	bl	9001030c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900109a8:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900109aa:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
900109ac:	4298      	cmp	r0, r3
900109ae:	f0c0 8083 	bcc.w	90010ab8 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900109b2:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900109b4:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
900109b8:	2b09      	cmp	r3, #9
900109ba:	d8e3      	bhi.n	90010984 <prvTimerTask+0x68>
900109bc:	e8df f003 	tbb	[pc, r3]
900109c0:	54050505 	.word	0x54050505
900109c4:	05055b3e 	.word	0x05055b3e
900109c8:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900109ca:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900109ce:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900109d0:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900109d4:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900109d6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900109da:	9b01      	ldr	r3, [sp, #4]
900109dc:	1899      	adds	r1, r3, r2
900109de:	bf2c      	ite	cs
900109e0:	2001      	movcs	r0, #1
900109e2:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
900109e4:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900109e6:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900109e8:	f200 8086 	bhi.w	90010af8 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900109ec:	eba8 0303 	sub.w	r3, r8, r3
900109f0:	429a      	cmp	r2, r3
900109f2:	f200 80c0 	bhi.w	90010b76 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900109f6:	6a3b      	ldr	r3, [r7, #32]
900109f8:	4638      	mov	r0, r7
900109fa:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900109fc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010a00:	075b      	lsls	r3, r3, #29
90010a02:	d5bf      	bpl.n	90010984 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010a04:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010a06:	9901      	ldr	r1, [sp, #4]
90010a08:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
90010a0a:	b172      	cbz	r2, 90010a2a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010a0c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010a0e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010a12:	2300      	movs	r3, #0
90010a14:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010a16:	f7ff fe37 	bl	90010688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010a1a:	2300      	movs	r3, #0
90010a1c:	a904      	add	r1, sp, #16
90010a1e:	6820      	ldr	r0, [r4, #0]
90010a20:	461a      	mov	r2, r3
90010a22:	f7fe f8c7 	bl	9000ebb4 <xQueueGenericSend>
							configASSERT( xResult );
90010a26:	2800      	cmp	r0, #0
90010a28:	d1ac      	bne.n	90010984 <prvTimerTask+0x68>
90010a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a2e:	f383 8811 	msr	BASEPRI, r3
90010a32:	f3bf 8f6f 	isb	sy
90010a36:	f3bf 8f4f 	dsb	sy
90010a3a:	e7fe      	b.n	90010a3a <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010a3c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010a40:	f043 0301 	orr.w	r3, r3, #1
90010a44:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010a48:	9b01      	ldr	r3, [sp, #4]
90010a4a:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010a4c:	2b00      	cmp	r3, #0
90010a4e:	f000 809e 	beq.w	90010b8e <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90010a52:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010a54:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010a56:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90010a58:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010a5a:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010a5c:	d856      	bhi.n	90010b0c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010a5e:	4b53      	ldr	r3, [pc, #332]	; (90010bac <prvTimerTask+0x290>)
90010a60:	6818      	ldr	r0, [r3, #0]
90010a62:	f7fd fd15 	bl	9000e490 <vListInsert>
	return xProcessTimerNow;
90010a66:	e78d      	b.n	90010984 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010a68:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010a6c:	f023 0301 	bic.w	r3, r3, #1
90010a70:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
90010a74:	e786      	b.n	90010984 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90010a76:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010a7a:	079a      	lsls	r2, r3, #30
90010a7c:	d572      	bpl.n	90010b64 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010a7e:	f023 0301 	bic.w	r3, r3, #1
90010a82:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
90010a86:	e77d      	b.n	90010984 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010a88:	9b01      	ldr	r3, [sp, #4]
90010a8a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
90010a8e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010a90:	9b00      	ldr	r3, [sp, #0]
90010a92:	2b00      	cmp	r3, #0
90010a94:	f6ff af76 	blt.w	90010984 <prvTimerTask+0x68>
90010a98:	e77e      	b.n	90010998 <prvTimerTask+0x7c>
	vTaskSuspendAll();
90010a9a:	f7ff fc1f 	bl	900102dc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010a9e:	f7ff fc35 	bl	9001030c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010aa2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010aa4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010aa6:	4282      	cmp	r2, r0
90010aa8:	d909      	bls.n	90010abe <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90010aaa:	f7ff fee9 	bl	90010880 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90010aae:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010ab2:	f7ff fc1b 	bl	900102ec <xTaskResumeAll>
90010ab6:	e765      	b.n	90010984 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90010ab8:	f7ff fee2 	bl	90010880 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90010abc:	e779      	b.n	900109b2 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010abe:	4b3b      	ldr	r3, [pc, #236]	; (90010bac <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010ac0:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010ac4:	681a      	ldr	r2, [r3, #0]
90010ac6:	6812      	ldr	r2, [r2, #0]
90010ac8:	fab2 f282 	clz	r2, r2
90010acc:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010ace:	eba7 010a 	sub.w	r1, r7, sl
90010ad2:	6820      	ldr	r0, [r4, #0]
90010ad4:	f7fe ff4e 	bl	9000f974 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010ad8:	f7ff fc08 	bl	900102ec <xTaskResumeAll>
90010adc:	2800      	cmp	r0, #0
90010ade:	f47f af51 	bne.w	90010984 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010ae2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90010ae6:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
90010aea:	f3bf 8f4f 	dsb	sy
90010aee:	f3bf 8f6f 	isb	sy
90010af2:	e747      	b.n	90010984 <prvTimerTask+0x68>
90010af4:	2200      	movs	r2, #0
90010af6:	e7ea      	b.n	90010ace <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010af8:	4543      	cmp	r3, r8
90010afa:	d902      	bls.n	90010b02 <prvTimerTask+0x1e6>
90010afc:	2800      	cmp	r0, #0
90010afe:	f43f af7a 	beq.w	900109f6 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b02:	1d39      	adds	r1, r7, #4
90010b04:	6830      	ldr	r0, [r6, #0]
90010b06:	f7fd fcc3 	bl	9000e490 <vListInsert>
	return xProcessTimerNow;
90010b0a:	e73b      	b.n	90010984 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b0c:	6830      	ldr	r0, [r6, #0]
90010b0e:	f7fd fcbf 	bl	9000e490 <vListInsert>
90010b12:	e737      	b.n	90010984 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010b14:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010b18:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010b1c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90010b1e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010b20:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010b24:	d322      	bcc.n	90010b6c <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010b26:	ebaa 0307 	sub.w	r3, sl, r7
90010b2a:	429a      	cmp	r2, r3
90010b2c:	d829      	bhi.n	90010b82 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
90010b2e:	6823      	ldr	r3, [r4, #0]
90010b30:	b17b      	cbz	r3, 90010b52 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90010b32:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010b34:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010b36:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
90010b3a:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010b3c:	f7ff fda4 	bl	90010688 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010b40:	2300      	movs	r3, #0
90010b42:	a904      	add	r1, sp, #16
90010b44:	6820      	ldr	r0, [r4, #0]
90010b46:	461a      	mov	r2, r3
90010b48:	f7fe f834 	bl	9000ebb4 <xQueueGenericSend>
			configASSERT( xResult );
90010b4c:	2800      	cmp	r0, #0
90010b4e:	f47f af15 	bne.w	9001097c <prvTimerTask+0x60>
90010b52:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b56:	f383 8811 	msr	BASEPRI, r3
90010b5a:	f3bf 8f6f 	isb	sy
90010b5e:	f3bf 8f4f 	dsb	sy
90010b62:	e7fe      	b.n	90010b62 <prvTimerTask+0x246>
							vPortFree( pxTimer );
90010b64:	4638      	mov	r0, r7
90010b66:	f7fd fc0f 	bl	9000e388 <vPortFree>
90010b6a:	e70b      	b.n	90010984 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010b6c:	4641      	mov	r1, r8
90010b6e:	6830      	ldr	r0, [r6, #0]
90010b70:	f7fd fc8e 	bl	9000e490 <vListInsert>
	return xProcessTimerNow;
90010b74:	e702      	b.n	9001097c <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010b76:	4b0d      	ldr	r3, [pc, #52]	; (90010bac <prvTimerTask+0x290>)
90010b78:	1d39      	adds	r1, r7, #4
90010b7a:	6818      	ldr	r0, [r3, #0]
90010b7c:	f7fd fc88 	bl	9000e490 <vListInsert>
	return xProcessTimerNow;
90010b80:	e700      	b.n	90010984 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010b82:	4b0a      	ldr	r3, [pc, #40]	; (90010bac <prvTimerTask+0x290>)
90010b84:	4641      	mov	r1, r8
90010b86:	6818      	ldr	r0, [r3, #0]
90010b88:	f7fd fc82 	bl	9000e490 <vListInsert>
	return xProcessTimerNow;
90010b8c:	e6f6      	b.n	9001097c <prvTimerTask+0x60>
90010b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b92:	f383 8811 	msr	BASEPRI, r3
90010b96:	f3bf 8f6f 	isb	sy
90010b9a:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010b9e:	e7fe      	b.n	90010b9e <prvTimerTask+0x282>
90010ba0:	240395cc 	.word	0x240395cc
90010ba4:	2403969c 	.word	0x2403969c
90010ba8:	240396f0 	.word	0x240396f0
90010bac:	240395d0 	.word	0x240395d0

90010bb0 <xTimerCreateTimerTask>:
{
90010bb0:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90010bb2:	4c23      	ldr	r4, [pc, #140]	; (90010c40 <xTimerCreateTimerTask+0x90>)
{
90010bb4:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90010bb6:	f7fd fd05 	bl	9000e5c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90010bba:	6825      	ldr	r5, [r4, #0]
90010bbc:	b335      	cbz	r5, 90010c0c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90010bbe:	f7fd fd23 	bl	9000e608 <vPortExitCritical>
	if( xTimerQueue != NULL )
90010bc2:	6823      	ldr	r3, [r4, #0]
90010bc4:	b1cb      	cbz	r3, 90010bfa <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90010bc6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010bc8:	aa07      	add	r2, sp, #28
90010bca:	a906      	add	r1, sp, #24
90010bcc:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010bce:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010bd0:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010bd4:	f7fd fb0a 	bl	9000e1ec <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010bd8:	4623      	mov	r3, r4
90010bda:	9a07      	ldr	r2, [sp, #28]
90010bdc:	9500      	str	r5, [sp, #0]
90010bde:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90010be2:	e9cd 1001 	strd	r1, r0, [sp, #4]
90010be6:	4917      	ldr	r1, [pc, #92]	; (90010c44 <xTimerCreateTimerTask+0x94>)
90010be8:	4817      	ldr	r0, [pc, #92]	; (90010c48 <xTimerCreateTimerTask+0x98>)
90010bea:	f7ff f93f 	bl	9000fe6c <xTaskCreateStatic>
90010bee:	4b17      	ldr	r3, [pc, #92]	; (90010c4c <xTimerCreateTimerTask+0x9c>)
90010bf0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90010bf2:	b110      	cbz	r0, 90010bfa <xTimerCreateTimerTask+0x4a>
}
90010bf4:	2001      	movs	r0, #1
90010bf6:	b009      	add	sp, #36	; 0x24
90010bf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010bfa:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bfe:	f383 8811 	msr	BASEPRI, r3
90010c02:	f3bf 8f6f 	isb	sy
90010c06:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90010c0a:	e7fe      	b.n	90010c0a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90010c0c:	4f10      	ldr	r7, [pc, #64]	; (90010c50 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90010c0e:	4e11      	ldr	r6, [pc, #68]	; (90010c54 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90010c10:	4638      	mov	r0, r7
90010c12:	f7fd fc1d 	bl	9000e450 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90010c16:	4630      	mov	r0, r6
90010c18:	f7fd fc1a 	bl	9000e450 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90010c1c:	4a0e      	ldr	r2, [pc, #56]	; (90010c58 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010c1e:	9500      	str	r5, [sp, #0]
90010c20:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90010c22:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010c24:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90010c26:	4a0d      	ldr	r2, [pc, #52]	; (90010c5c <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010c28:	4b0d      	ldr	r3, [pc, #52]	; (90010c60 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90010c2a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010c2c:	4a0d      	ldr	r2, [pc, #52]	; (90010c64 <xTimerCreateTimerTask+0xb4>)
90010c2e:	f7fd fe6b 	bl	9000e908 <xQueueGenericCreateStatic>
90010c32:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90010c34:	2800      	cmp	r0, #0
90010c36:	d0c2      	beq.n	90010bbe <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90010c38:	490b      	ldr	r1, [pc, #44]	; (90010c68 <xTimerCreateTimerTask+0xb8>)
90010c3a:	f7fe fe73 	bl	9000f924 <vQueueAddToRegistry>
90010c3e:	e7be      	b.n	90010bbe <xTimerCreateTimerTask+0xe>
90010c40:	240396f0 	.word	0x240396f0
90010c44:	9002b444 	.word	0x9002b444
90010c48:	9001091d 	.word	0x9001091d
90010c4c:	240396f4 	.word	0x240396f4
90010c50:	24039674 	.word	0x24039674
90010c54:	24039688 	.word	0x24039688
90010c58:	240395cc 	.word	0x240395cc
90010c5c:	240395d0 	.word	0x240395d0
90010c60:	240396a0 	.word	0x240396a0
90010c64:	240395d4 	.word	0x240395d4
90010c68:	9002b43c 	.word	0x9002b43c

90010c6c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90010c6c:	8880      	ldrh	r0, [r0, #4]
90010c6e:	4770      	bx	lr

90010c70 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010c70:	b570      	push	{r4, r5, r6, lr}
90010c72:	6803      	ldr	r3, [r0, #0]
90010c74:	460c      	mov	r4, r1
90010c76:	2100      	movs	r1, #0
90010c78:	4605      	mov	r5, r0
90010c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010c7c:	4798      	blx	r3
90010c7e:	4606      	mov	r6, r0
90010c80:	682b      	ldr	r3, [r5, #0]
90010c82:	4628      	mov	r0, r5
90010c84:	1ba4      	subs	r4, r4, r6
90010c86:	6a1b      	ldr	r3, [r3, #32]
90010c88:	b2a4      	uxth	r4, r4
90010c8a:	4798      	blx	r3
90010c8c:	fbb4 f0f0 	udiv	r0, r4, r0
90010c90:	bd70      	pop	{r4, r5, r6, pc}

90010c92 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010c92:	2300      	movs	r3, #0
90010c94:	8083      	strh	r3, [r0, #4]
90010c96:	4770      	bx	lr

90010c98 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90010c98:	b510      	push	{r4, lr}
90010c9a:	6803      	ldr	r3, [r0, #0]
90010c9c:	4604      	mov	r4, r0
90010c9e:	8881      	ldrh	r1, [r0, #4]
90010ca0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010ca2:	4798      	blx	r3
90010ca4:	88a3      	ldrh	r3, [r4, #4]
90010ca6:	3301      	adds	r3, #1
90010ca8:	80a3      	strh	r3, [r4, #4]
90010caa:	bd10      	pop	{r4, pc}

90010cac <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90010cac:	6803      	ldr	r3, [r0, #0]
90010cae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010cb0:	4718      	bx	r3

90010cb2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010cb2:	4770      	bx	lr

90010cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010cb4:	4a02      	ldr	r2, [pc, #8]	; (90010cc0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90010cb6:	6002      	str	r2, [r0, #0]
90010cb8:	2200      	movs	r2, #0
90010cba:	8082      	strh	r2, [r0, #4]
90010cbc:	4770      	bx	lr
90010cbe:	bf00      	nop
90010cc0:	9002b454 	.word	0x9002b454

90010cc4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90010cc4:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010cc6:	2000      	movs	r0, #0
90010cc8:	b12b      	cbz	r3, 90010cd6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010cca:	b920      	cbnz	r0, 90010cd6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010ccc:	1a5a      	subs	r2, r3, r1
90010cce:	699b      	ldr	r3, [r3, #24]
90010cd0:	4250      	negs	r0, r2
90010cd2:	4150      	adcs	r0, r2
90010cd4:	e7f8      	b.n	90010cc8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90010cd6:	4770      	bx	lr

90010cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010cd8:	2300      	movs	r3, #0
90010cda:	6148      	str	r0, [r1, #20]
90010cdc:	618b      	str	r3, [r1, #24]
90010cde:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010ce0:	b913      	cbnz	r3, 90010ce8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010ce2:	6281      	str	r1, [r0, #40]	; 0x28
90010ce4:	4770      	bx	lr
90010ce6:	4613      	mov	r3, r2
90010ce8:	699a      	ldr	r2, [r3, #24]
90010cea:	2a00      	cmp	r2, #0
90010cec:	d1fb      	bne.n	90010ce6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010cee:	6199      	str	r1, [r3, #24]
90010cf0:	4770      	bx	lr

90010cf2 <_ZN8touchgfx9Container9removeAllEv>:
90010cf2:	2200      	movs	r2, #0
90010cf4:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010cf6:	b123      	cbz	r3, 90010d02 <_ZN8touchgfx9Container9removeAllEv+0x10>
90010cf8:	6999      	ldr	r1, [r3, #24]
90010cfa:	6281      	str	r1, [r0, #40]	; 0x28
90010cfc:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010d00:	e7f8      	b.n	90010cf4 <_ZN8touchgfx9Container9removeAllEv+0x2>
90010d02:	4770      	bx	lr

90010d04 <_ZN8touchgfx9Container6unlinkEv>:
90010d04:	2300      	movs	r3, #0
90010d06:	6283      	str	r3, [r0, #40]	; 0x28
90010d08:	4770      	bx	lr

90010d0a <_ZNK8touchgfx9Container12getSolidRectEv>:
90010d0a:	2200      	movs	r2, #0
90010d0c:	8002      	strh	r2, [r0, #0]
90010d0e:	8042      	strh	r2, [r0, #2]
90010d10:	8082      	strh	r2, [r0, #4]
90010d12:	80c2      	strh	r2, [r0, #6]
90010d14:	4770      	bx	lr

90010d16 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90010d16:	b570      	push	{r4, r5, r6, lr}
90010d18:	460d      	mov	r5, r1
90010d1a:	4616      	mov	r6, r2
90010d1c:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010d1e:	b13c      	cbz	r4, 90010d30 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90010d20:	6823      	ldr	r3, [r4, #0]
90010d22:	4620      	mov	r0, r4
90010d24:	4632      	mov	r2, r6
90010d26:	4629      	mov	r1, r5
90010d28:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010d2a:	4798      	blx	r3
90010d2c:	69a4      	ldr	r4, [r4, #24]
90010d2e:	e7f6      	b.n	90010d1e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90010d30:	bd70      	pop	{r4, r5, r6, pc}

90010d32 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90010d32:	b538      	push	{r3, r4, r5, lr}
90010d34:	460d      	mov	r5, r1
90010d36:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010d38:	b134      	cbz	r4, 90010d48 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90010d3a:	682b      	ldr	r3, [r5, #0]
90010d3c:	4621      	mov	r1, r4
90010d3e:	4628      	mov	r0, r5
90010d40:	689b      	ldr	r3, [r3, #8]
90010d42:	4798      	blx	r3
90010d44:	69a4      	ldr	r4, [r4, #24]
90010d46:	e7f7      	b.n	90010d38 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90010d48:	bd38      	pop	{r3, r4, r5, pc}

90010d4a <_ZN8touchgfx9ContainerD1Ev>:
90010d4a:	4770      	bx	lr

90010d4c <_ZN8touchgfx9ContainerD0Ev>:
90010d4c:	b510      	push	{r4, lr}
90010d4e:	4604      	mov	r4, r0
90010d50:	212c      	movs	r1, #44	; 0x2c
90010d52:	f016 fcad 	bl	900276b0 <_ZdlPvj>
90010d56:	4620      	mov	r0, r4
90010d58:	bd10      	pop	{r4, pc}

90010d5a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90010d5a:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010d5c:	b19b      	cbz	r3, 90010d86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010d5e:	428b      	cmp	r3, r1
90010d60:	d109      	bne.n	90010d76 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010d62:	699a      	ldr	r2, [r3, #24]
90010d64:	2100      	movs	r1, #0
90010d66:	6159      	str	r1, [r3, #20]
90010d68:	6282      	str	r2, [r0, #40]	; 0x28
90010d6a:	b902      	cbnz	r2, 90010d6e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010d6c:	4770      	bx	lr
90010d6e:	6199      	str	r1, [r3, #24]
90010d70:	4770      	bx	lr
90010d72:	4613      	mov	r3, r2
90010d74:	b13a      	cbz	r2, 90010d86 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010d76:	699a      	ldr	r2, [r3, #24]
90010d78:	428a      	cmp	r2, r1
90010d7a:	d1fa      	bne.n	90010d72 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010d7c:	698a      	ldr	r2, [r1, #24]
90010d7e:	619a      	str	r2, [r3, #24]
90010d80:	2300      	movs	r3, #0
90010d82:	e9c1 3305 	strd	r3, r3, [r1, #20]
90010d86:	4770      	bx	lr

90010d88 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010d88:	b410      	push	{r4}
90010d8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010d8c:	4604      	mov	r4, r0
90010d8e:	b92b      	cbnz	r3, 90010d9c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010d90:	6803      	ldr	r3, [r0, #0]
90010d92:	4611      	mov	r1, r2
90010d94:	f85d 4b04 	ldr.w	r4, [sp], #4
90010d98:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90010d9a:	4718      	bx	r3
90010d9c:	b941      	cbnz	r1, 90010db0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010d9e:	6193      	str	r3, [r2, #24]
90010da0:	6282      	str	r2, [r0, #40]	; 0x28
90010da2:	6154      	str	r4, [r2, #20]
90010da4:	f85d 4b04 	ldr.w	r4, [sp], #4
90010da8:	4770      	bx	lr
90010daa:	4603      	mov	r3, r0
90010dac:	2800      	cmp	r0, #0
90010dae:	d0f9      	beq.n	90010da4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010db0:	4299      	cmp	r1, r3
90010db2:	6998      	ldr	r0, [r3, #24]
90010db4:	d1f9      	bne.n	90010daa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90010db6:	6190      	str	r0, [r2, #24]
90010db8:	618a      	str	r2, [r1, #24]
90010dba:	e7f2      	b.n	90010da2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010dbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010dbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010dc0:	461f      	mov	r7, r3
90010dc2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90010dc6:	460d      	mov	r5, r1
90010dc8:	4616      	mov	r6, r2
90010dca:	b103      	cbz	r3, 90010dce <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010dcc:	6038      	str	r0, [r7, #0]
90010dce:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010dd0:	b314      	cbz	r4, 90010e18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90010dd2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90010dd6:	b1eb      	cbz	r3, 90010e14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010dd8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010ddc:	428d      	cmp	r5, r1
90010dde:	db19      	blt.n	90010e14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010de0:	b289      	uxth	r1, r1
90010de2:	8923      	ldrh	r3, [r4, #8]
90010de4:	440b      	add	r3, r1
90010de6:	b21b      	sxth	r3, r3
90010de8:	429d      	cmp	r5, r3
90010dea:	da13      	bge.n	90010e14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010dec:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010df0:	4296      	cmp	r6, r2
90010df2:	db0f      	blt.n	90010e14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010df4:	b292      	uxth	r2, r2
90010df6:	8963      	ldrh	r3, [r4, #10]
90010df8:	4413      	add	r3, r2
90010dfa:	b21b      	sxth	r3, r3
90010dfc:	429e      	cmp	r6, r3
90010dfe:	da09      	bge.n	90010e14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010e00:	6823      	ldr	r3, [r4, #0]
90010e02:	1ab2      	subs	r2, r6, r2
90010e04:	1a69      	subs	r1, r5, r1
90010e06:	4620      	mov	r0, r4
90010e08:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90010e0c:	b212      	sxth	r2, r2
90010e0e:	463b      	mov	r3, r7
90010e10:	b209      	sxth	r1, r1
90010e12:	47c0      	blx	r8
90010e14:	69a4      	ldr	r4, [r4, #24]
90010e16:	e7db      	b.n	90010dd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90010e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010e1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90010e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e20:	4c6d      	ldr	r4, [pc, #436]	; (90010fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90010e22:	b0a1      	sub	sp, #132	; 0x84
90010e24:	4606      	mov	r6, r0
90010e26:	6824      	ldr	r4, [r4, #0]
90010e28:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90010e2a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
90010e2e:	2400      	movs	r4, #0
90010e30:	9303      	str	r3, [sp, #12]
90010e32:	802c      	strh	r4, [r5, #0]
90010e34:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90010e36:	802c      	strh	r4, [r5, #0]
90010e38:	601c      	str	r4, [r3, #0]
90010e3a:	e9cd 1201 	strd	r1, r2, [sp, #4]
90010e3e:	f7ff ffbd 	bl	90010dbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010e42:	f1b9 0f03 	cmp.w	r9, #3
90010e46:	f340 80c1 	ble.w	90010fcc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90010e4a:	4631      	mov	r1, r6
90010e4c:	a80c      	add	r0, sp, #48	; 0x30
90010e4e:	f006 fc2d 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010e52:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90010e56:	9306      	str	r3, [sp, #24]
90010e58:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90010e5c:	9307      	str	r3, [sp, #28]
90010e5e:	9b03      	ldr	r3, [sp, #12]
90010e60:	f8d3 a000 	ldr.w	sl, [r3]
90010e64:	f1ba 0f00 	cmp.w	sl, #0
90010e68:	f000 80b3 	beq.w	90010fd2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010e6c:	4651      	mov	r1, sl
90010e6e:	a810      	add	r0, sp, #64	; 0x40
90010e70:	f006 fc1c 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010e74:	2002      	movs	r0, #2
90010e76:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90010e7a:	9b01      	ldr	r3, [sp, #4]
90010e7c:	9a06      	ldr	r2, [sp, #24]
90010e7e:	fb91 f1f0 	sdiv	r1, r1, r0
90010e82:	189d      	adds	r5, r3, r2
90010e84:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90010e88:	9a07      	ldr	r2, [sp, #28]
90010e8a:	4419      	add	r1, r3
90010e8c:	9b02      	ldr	r3, [sp, #8]
90010e8e:	4413      	add	r3, r2
90010e90:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90010e94:	1a6d      	subs	r5, r5, r1
90010e96:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90010e9a:	fb92 f2f0 	sdiv	r2, r2, r0
90010e9e:	440a      	add	r2, r1
90010ea0:	1a9b      	subs	r3, r3, r2
90010ea2:	435b      	muls	r3, r3
90010ea4:	fb05 3505 	mla	r5, r5, r5, r3
90010ea8:	4f4c      	ldr	r7, [pc, #304]	; (90010fdc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010eaa:	ac10      	add	r4, sp, #64	; 0x40
90010eac:	f1b9 0f0c 	cmp.w	r9, #12
90010eb0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010eb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010eb4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010eb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010eb8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010eba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010ebc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010ec0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90010ec4:	f04f 0303 	mov.w	r3, #3
90010ec8:	bfd8      	it	le
90010eca:	f109 32ff 	addle.w	r2, r9, #4294967295
90010ece:	f04f 0400 	mov.w	r4, #0
90010ed2:	f8cd 9000 	str.w	r9, [sp]
90010ed6:	bfcc      	ite	gt
90010ed8:	4698      	movgt	r8, r3
90010eda:	fb92 f8f3 	sdivle	r8, r2, r3
90010ede:	1c63      	adds	r3, r4, #1
90010ee0:	aa10      	add	r2, sp, #64	; 0x40
90010ee2:	f004 0401 	and.w	r4, r4, #1
90010ee6:	f04f 0b00 	mov.w	fp, #0
90010eea:	9308      	str	r3, [sp, #32]
90010eec:	9b00      	ldr	r3, [sp, #0]
90010eee:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90010ef2:	fb93 f3f8 	sdiv	r3, r3, r8
90010ef6:	3404      	adds	r4, #4
90010ef8:	b29b      	uxth	r3, r3
90010efa:	9304      	str	r3, [sp, #16]
90010efc:	9a04      	ldr	r2, [sp, #16]
90010efe:	f854 3c04 	ldr.w	r3, [r4, #-4]
90010f02:	fb13 f302 	smulbb	r3, r3, r2
90010f06:	9a01      	ldr	r2, [sp, #4]
90010f08:	b29b      	uxth	r3, r3
90010f0a:	1899      	adds	r1, r3, r2
90010f0c:	9305      	str	r3, [sp, #20]
90010f0e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010f12:	b209      	sxth	r1, r1
90010f14:	4299      	cmp	r1, r3
90010f16:	db4d      	blt.n	90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f18:	8932      	ldrh	r2, [r6, #8]
90010f1a:	4413      	add	r3, r2
90010f1c:	b21b      	sxth	r3, r3
90010f1e:	4299      	cmp	r1, r3
90010f20:	da48      	bge.n	90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f22:	9b04      	ldr	r3, [sp, #16]
90010f24:	6827      	ldr	r7, [r4, #0]
90010f26:	fb17 f703 	smulbb	r7, r7, r3
90010f2a:	9b02      	ldr	r3, [sp, #8]
90010f2c:	b2bf      	uxth	r7, r7
90010f2e:	18fa      	adds	r2, r7, r3
90010f30:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010f34:	b212      	sxth	r2, r2
90010f36:	429a      	cmp	r2, r3
90010f38:	db3c      	blt.n	90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f3a:	8970      	ldrh	r0, [r6, #10]
90010f3c:	4403      	add	r3, r0
90010f3e:	b21b      	sxth	r3, r3
90010f40:	429a      	cmp	r2, r3
90010f42:	da37      	bge.n	90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f44:	2300      	movs	r3, #0
90010f46:	4630      	mov	r0, r6
90010f48:	930b      	str	r3, [sp, #44]	; 0x2c
90010f4a:	ab0b      	add	r3, sp, #44	; 0x2c
90010f4c:	f7ff ff36 	bl	90010dbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010f50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90010f52:	b37a      	cbz	r2, 90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f54:	4552      	cmp	r2, sl
90010f56:	d02d      	beq.n	90010fb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010f58:	4611      	mov	r1, r2
90010f5a:	a80e      	add	r0, sp, #56	; 0x38
90010f5c:	9209      	str	r2, [sp, #36]	; 0x24
90010f5e:	f006 fba5 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010f62:	f04f 0e02 	mov.w	lr, #2
90010f66:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90010f6a:	9a06      	ldr	r2, [sp, #24]
90010f6c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90010f70:	9b01      	ldr	r3, [sp, #4]
90010f72:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90010f76:	4413      	add	r3, r2
90010f78:	9a07      	ldr	r2, [sp, #28]
90010f7a:	fb91 f1fe 	sdiv	r1, r1, lr
90010f7e:	fb9c fcfe 	sdiv	ip, ip, lr
90010f82:	4401      	add	r1, r0
90010f84:	1a58      	subs	r0, r3, r1
90010f86:	9b02      	ldr	r3, [sp, #8]
90010f88:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90010f8c:	4413      	add	r3, r2
90010f8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90010f90:	448c      	add	ip, r1
90010f92:	eba3 030c 	sub.w	r3, r3, ip
90010f96:	435b      	muls	r3, r3
90010f98:	fb00 3300 	mla	r3, r0, r0, r3
90010f9c:	42ab      	cmp	r3, r5
90010f9e:	d208      	bcs.n	90010fb2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010fa0:	990b      	ldr	r1, [sp, #44]	; 0x2c
90010fa2:	461d      	mov	r5, r3
90010fa4:	9803      	ldr	r0, [sp, #12]
90010fa6:	6001      	str	r1, [r0, #0]
90010fa8:	992a      	ldr	r1, [sp, #168]	; 0xa8
90010faa:	9805      	ldr	r0, [sp, #20]
90010fac:	8008      	strh	r0, [r1, #0]
90010fae:	992b      	ldr	r1, [sp, #172]	; 0xac
90010fb0:	800f      	strh	r7, [r1, #0]
90010fb2:	4692      	mov	sl, r2
90010fb4:	f10b 0b01 	add.w	fp, fp, #1
90010fb8:	3408      	adds	r4, #8
90010fba:	f1bb 0f04 	cmp.w	fp, #4
90010fbe:	d19d      	bne.n	90010efc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010fc0:	9b00      	ldr	r3, [sp, #0]
90010fc2:	9c08      	ldr	r4, [sp, #32]
90010fc4:	444b      	add	r3, r9
90010fc6:	4544      	cmp	r4, r8
90010fc8:	9300      	str	r3, [sp, #0]
90010fca:	d188      	bne.n	90010ede <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010fcc:	b021      	add	sp, #132	; 0x84
90010fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010fd2:	f04f 35ff 	mov.w	r5, #4294967295
90010fd6:	e767      	b.n	90010ea8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010fd8:	24039704 	.word	0x24039704
90010fdc:	9002878c 	.word	0x9002878c

90010fe0 <_ZN8touchgfx4RectaNERKS0_>:
90010fe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010fe4:	f9b1 7000 	ldrsh.w	r7, [r1]
90010fe8:	888c      	ldrh	r4, [r1, #4]
90010fea:	f9b0 9000 	ldrsh.w	r9, [r0]
90010fee:	443c      	add	r4, r7
90010ff0:	b2a4      	uxth	r4, r4
90010ff2:	fa0f f884 	sxth.w	r8, r4
90010ff6:	45c1      	cmp	r9, r8
90010ff8:	da2f      	bge.n	9001105a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010ffa:	8882      	ldrh	r2, [r0, #4]
90010ffc:	444a      	add	r2, r9
90010ffe:	b292      	uxth	r2, r2
90011000:	fa0f fe82 	sxth.w	lr, r2
90011004:	4577      	cmp	r7, lr
90011006:	da28      	bge.n	9001105a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011008:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9001100c:	88cb      	ldrh	r3, [r1, #6]
9001100e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90011012:	442b      	add	r3, r5
90011014:	b21b      	sxth	r3, r3
90011016:	429e      	cmp	r6, r3
90011018:	da1f      	bge.n	9001105a <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001101a:	88c3      	ldrh	r3, [r0, #6]
9001101c:	4433      	add	r3, r6
9001101e:	b29b      	uxth	r3, r3
90011020:	fa0f fc83 	sxth.w	ip, r3
90011024:	4565      	cmp	r5, ip
90011026:	da18      	bge.n	9001105a <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011028:	454f      	cmp	r7, r9
9001102a:	bfb8      	it	lt
9001102c:	464f      	movlt	r7, r9
9001102e:	42b5      	cmp	r5, r6
90011030:	bfb8      	it	lt
90011032:	4635      	movlt	r5, r6
90011034:	45f0      	cmp	r8, lr
90011036:	bfd8      	it	le
90011038:	4622      	movle	r2, r4
9001103a:	1bd2      	subs	r2, r2, r7
9001103c:	8082      	strh	r2, [r0, #4]
9001103e:	884a      	ldrh	r2, [r1, #2]
90011040:	88c9      	ldrh	r1, [r1, #6]
90011042:	8007      	strh	r7, [r0, #0]
90011044:	440a      	add	r2, r1
90011046:	8045      	strh	r5, [r0, #2]
90011048:	b292      	uxth	r2, r2
9001104a:	b211      	sxth	r1, r2
9001104c:	458c      	cmp	ip, r1
9001104e:	bfa8      	it	ge
90011050:	4613      	movge	r3, r2
90011052:	1b5b      	subs	r3, r3, r5
90011054:	80c3      	strh	r3, [r0, #6]
90011056:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001105a:	2300      	movs	r3, #0
9001105c:	8003      	strh	r3, [r0, #0]
9001105e:	8043      	strh	r3, [r0, #2]
90011060:	8083      	strh	r3, [r0, #4]
90011062:	80c3      	strh	r3, [r0, #6]
90011064:	e7f7      	b.n	90011056 <_ZN8touchgfx4RectaNERKS0_+0x76>

90011066 <_ZNK8touchgfx4Rect7isEmptyEv>:
90011066:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001106a:	2b00      	cmp	r3, #0
9001106c:	dd06      	ble.n	9001107c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9001106e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90011072:	2800      	cmp	r0, #0
90011074:	bfcc      	ite	gt
90011076:	2000      	movgt	r0, #0
90011078:	2001      	movle	r0, #1
9001107a:	4770      	bx	lr
9001107c:	2001      	movs	r0, #1
9001107e:	4770      	bx	lr

90011080 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90011080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011084:	2300      	movs	r3, #0
90011086:	4604      	mov	r4, r0
90011088:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001108a:	8003      	strh	r3, [r0, #0]
9001108c:	8043      	strh	r3, [r0, #2]
9001108e:	8083      	strh	r3, [r0, #4]
90011090:	80c3      	strh	r3, [r0, #6]
90011092:	2d00      	cmp	r5, #0
90011094:	d040      	beq.n	90011118 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90011096:	1d28      	adds	r0, r5, #4
90011098:	f7ff ffe5 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001109c:	b988      	cbnz	r0, 900110c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001109e:	4620      	mov	r0, r4
900110a0:	f7ff ffe1 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900110a4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900110a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900110ac:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900110b0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900110b4:	b138      	cbz	r0, 900110c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900110b6:	8022      	strh	r2, [r4, #0]
900110b8:	8063      	strh	r3, [r4, #2]
900110ba:	f8a4 e004 	strh.w	lr, [r4, #4]
900110be:	f8a4 c006 	strh.w	ip, [r4, #6]
900110c2:	69ad      	ldr	r5, [r5, #24]
900110c4:	e7e5      	b.n	90011092 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900110c6:	f9b4 0000 	ldrsh.w	r0, [r4]
900110ca:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900110ce:	4290      	cmp	r0, r2
900110d0:	4607      	mov	r7, r0
900110d2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900110d6:	460e      	mov	r6, r1
900110d8:	bfa8      	it	ge
900110da:	4617      	movge	r7, r2
900110dc:	4299      	cmp	r1, r3
900110de:	4472      	add	r2, lr
900110e0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900110e4:	bfa8      	it	ge
900110e6:	461e      	movge	r6, r3
900110e8:	4440      	add	r0, r8
900110ea:	4471      	add	r1, lr
900110ec:	4463      	add	r3, ip
900110ee:	b200      	sxth	r0, r0
900110f0:	8027      	strh	r7, [r4, #0]
900110f2:	b212      	sxth	r2, r2
900110f4:	8066      	strh	r6, [r4, #2]
900110f6:	b209      	sxth	r1, r1
900110f8:	b21b      	sxth	r3, r3
900110fa:	4290      	cmp	r0, r2
900110fc:	bfac      	ite	ge
900110fe:	ebc7 0200 	rsbge	r2, r7, r0
90011102:	ebc7 0202 	rsblt	r2, r7, r2
90011106:	4299      	cmp	r1, r3
90011108:	bfac      	ite	ge
9001110a:	ebc6 0301 	rsbge	r3, r6, r1
9001110e:	ebc6 0303 	rsblt	r3, r6, r3
90011112:	80a2      	strh	r2, [r4, #4]
90011114:	80e3      	strh	r3, [r4, #6]
90011116:	e7d4      	b.n	900110c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011118:	4620      	mov	r0, r4
9001111a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001111e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9001111e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90011122:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011126:	b383      	cbz	r3, 9001118a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90011128:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001112a:	b374      	cbz	r4, 9001118a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001112c:	f9b1 5000 	ldrsh.w	r5, [r1]
90011130:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90011134:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90011138:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
9001113c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011140:	b303      	cbz	r3, 90011184 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90011142:	4668      	mov	r0, sp
90011144:	1d21      	adds	r1, r4, #4
90011146:	f8ad 5000 	strh.w	r5, [sp]
9001114a:	f8ad 6002 	strh.w	r6, [sp, #2]
9001114e:	f8ad 7004 	strh.w	r7, [sp, #4]
90011152:	f8ad 8006 	strh.w	r8, [sp, #6]
90011156:	f7ff ff43 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001115a:	4668      	mov	r0, sp
9001115c:	f7ff ff83 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
90011160:	b980      	cbnz	r0, 90011184 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90011162:	f8bd 3000 	ldrh.w	r3, [sp]
90011166:	4669      	mov	r1, sp
90011168:	88a2      	ldrh	r2, [r4, #4]
9001116a:	4620      	mov	r0, r4
9001116c:	1a9b      	subs	r3, r3, r2
9001116e:	88e2      	ldrh	r2, [r4, #6]
90011170:	f8ad 3000 	strh.w	r3, [sp]
90011174:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011178:	1a9b      	subs	r3, r3, r2
9001117a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001117e:	6823      	ldr	r3, [r4, #0]
90011180:	689b      	ldr	r3, [r3, #8]
90011182:	4798      	blx	r3
90011184:	69a4      	ldr	r4, [r4, #24]
90011186:	2c00      	cmp	r4, #0
90011188:	d1d8      	bne.n	9001113c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001118a:	b002      	add	sp, #8
9001118c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011190 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90011190:	b573      	push	{r0, r1, r4, r5, r6, lr}
90011192:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011196:	460d      	mov	r5, r1
90011198:	4616      	mov	r6, r2
9001119a:	b323      	cbz	r3, 900111e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001119c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001119e:	b314      	cbz	r4, 900111e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900111a0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
900111a4:	b1eb      	cbz	r3, 900111e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900111a6:	6828      	ldr	r0, [r5, #0]
900111a8:	466b      	mov	r3, sp
900111aa:	6869      	ldr	r1, [r5, #4]
900111ac:	c303      	stmia	r3!, {r0, r1}
900111ae:	4668      	mov	r0, sp
900111b0:	1d21      	adds	r1, r4, #4
900111b2:	f7ff ff15 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900111b6:	4668      	mov	r0, sp
900111b8:	f7ff ff55 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900111bc:	b988      	cbnz	r0, 900111e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900111be:	f8bd 3000 	ldrh.w	r3, [sp]
900111c2:	4669      	mov	r1, sp
900111c4:	88a2      	ldrh	r2, [r4, #4]
900111c6:	4620      	mov	r0, r4
900111c8:	1a9b      	subs	r3, r3, r2
900111ca:	88e2      	ldrh	r2, [r4, #6]
900111cc:	f8ad 3000 	strh.w	r3, [sp]
900111d0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900111d4:	1a9b      	subs	r3, r3, r2
900111d6:	4632      	mov	r2, r6
900111d8:	f8ad 3002 	strh.w	r3, [sp, #2]
900111dc:	6823      	ldr	r3, [r4, #0]
900111de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
900111e0:	4798      	blx	r3
900111e2:	69a4      	ldr	r4, [r4, #24]
900111e4:	e7db      	b.n	9001119e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900111e6:	b002      	add	sp, #8
900111e8:	bd70      	pop	{r4, r5, r6, pc}

900111ea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900111ea:	6803      	ldr	r3, [r0, #0]
900111ec:	b513      	push	{r0, r1, r4, lr}
900111ee:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
900111f2:	2300      	movs	r3, #0
900111f4:	e9cd 3300 	strd	r3, r3, [sp]
900111f8:	466b      	mov	r3, sp
900111fa:	47a0      	blx	r4
900111fc:	b002      	add	sp, #8
900111fe:	bd10      	pop	{r4, pc}

90011200 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011200:	2301      	movs	r3, #1
90011202:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011206:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001120a:	4770      	bx	lr

9001120c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
9001120c:	2301      	movs	r3, #1
9001120e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011212:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90011216:	4770      	bx	lr

90011218 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90011218:	6843      	ldr	r3, [r0, #4]
9001121a:	2201      	movs	r2, #1
9001121c:	725a      	strb	r2, [r3, #9]
9001121e:	6840      	ldr	r0, [r0, #4]
90011220:	6803      	ldr	r3, [r0, #0]
90011222:	691b      	ldr	r3, [r3, #16]
90011224:	4718      	bx	r3

90011226 <_ZN8touchgfx3HAL8flushDMAEv>:
90011226:	6840      	ldr	r0, [r0, #4]
90011228:	6803      	ldr	r3, [r0, #0]
9001122a:	689b      	ldr	r3, [r3, #8]
9001122c:	4718      	bx	r3

9001122e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9001122e:	b530      	push	{r4, r5, lr}
90011230:	b08b      	sub	sp, #44	; 0x2c
90011232:	6804      	ldr	r4, [r0, #0]
90011234:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90011238:	9509      	str	r5, [sp, #36]	; 0x24
9001123a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
9001123e:	9508      	str	r5, [sp, #32]
90011240:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90011244:	9507      	str	r5, [sp, #28]
90011246:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
9001124a:	9506      	str	r5, [sp, #24]
9001124c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90011250:	9505      	str	r5, [sp, #20]
90011252:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90011256:	9504      	str	r5, [sp, #16]
90011258:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
9001125c:	9503      	str	r5, [sp, #12]
9001125e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90011262:	9502      	str	r5, [sp, #8]
90011264:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90011268:	e9cd 3500 	strd	r3, r5, [sp]
9001126c:	4613      	mov	r3, r2
9001126e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90011270:	2200      	movs	r2, #0
90011272:	47a0      	blx	r4
90011274:	b00b      	add	sp, #44	; 0x2c
90011276:	bd30      	pop	{r4, r5, pc}

90011278 <_ZN8touchgfx3HAL10beginFrameEv>:
90011278:	4b04      	ldr	r3, [pc, #16]	; (9001128c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001127a:	781b      	ldrb	r3, [r3, #0]
9001127c:	b123      	cbz	r3, 90011288 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
9001127e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90011282:	f080 0001 	eor.w	r0, r0, #1
90011286:	4770      	bx	lr
90011288:	2001      	movs	r0, #1
9001128a:	4770      	bx	lr
9001128c:	24039702 	.word	0x24039702

90011290 <_ZN8touchgfx3HAL8endFrameEv>:
90011290:	b510      	push	{r4, lr}
90011292:	4604      	mov	r4, r0
90011294:	6840      	ldr	r0, [r0, #4]
90011296:	6803      	ldr	r3, [r0, #0]
90011298:	689b      	ldr	r3, [r3, #8]
9001129a:	4798      	blx	r3
9001129c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
900112a0:	b113      	cbz	r3, 900112a8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
900112a2:	2301      	movs	r3, #1
900112a4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900112a8:	bd10      	pop	{r4, pc}

900112aa <_ZN8touchgfx3HAL10initializeEv>:
900112aa:	b510      	push	{r4, lr}
900112ac:	4604      	mov	r4, r0
900112ae:	f7f0 fac1 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
900112b2:	f7ef f925 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
900112b6:	6860      	ldr	r0, [r4, #4]
900112b8:	6803      	ldr	r3, [r0, #0]
900112ba:	68db      	ldr	r3, [r3, #12]
900112bc:	4798      	blx	r3
900112be:	68e0      	ldr	r0, [r4, #12]
900112c0:	6803      	ldr	r3, [r0, #0]
900112c2:	689b      	ldr	r3, [r3, #8]
900112c4:	4798      	blx	r3
900112c6:	6823      	ldr	r3, [r4, #0]
900112c8:	4620      	mov	r0, r4
900112ca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900112cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900112d0:	4718      	bx	r3
	...

900112d4 <_ZN8touchgfx3HAL4tickEv>:
900112d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900112d6:	6803      	ldr	r3, [r0, #0]
900112d8:	4604      	mov	r4, r0
900112da:	4d5b      	ldr	r5, [pc, #364]	; (90011448 <_ZN8touchgfx3HAL4tickEv+0x174>)
900112dc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
900112e0:	4798      	blx	r3
900112e2:	2800      	cmp	r0, #0
900112e4:	f000 8095 	beq.w	90011412 <_ZN8touchgfx3HAL4tickEv+0x13e>
900112e8:	2001      	movs	r0, #1
900112ea:	2600      	movs	r6, #0
900112ec:	f7ef f932 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900112f0:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
900112f4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
900112f8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900112fc:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90011300:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90011304:	b133      	cbz	r3, 90011314 <_ZN8touchgfx3HAL4tickEv+0x40>
90011306:	6823      	ldr	r3, [r4, #0]
90011308:	4620      	mov	r0, r4
9001130a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
9001130e:	4798      	blx	r3
90011310:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90011314:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90011318:	2601      	movs	r6, #1
9001131a:	6862      	ldr	r2, [r4, #4]
9001131c:	f083 0301 	eor.w	r3, r3, #1
90011320:	702e      	strb	r6, [r5, #0]
90011322:	7253      	strb	r3, [r2, #9]
90011324:	f005 f886 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90011328:	6803      	ldr	r3, [r0, #0]
9001132a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001132c:	4798      	blx	r3
9001132e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90011332:	b90b      	cbnz	r3, 90011338 <_ZN8touchgfx3HAL4tickEv+0x64>
90011334:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90011338:	f005 f87c 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
9001133c:	6803      	ldr	r3, [r0, #0]
9001133e:	695b      	ldr	r3, [r3, #20]
90011340:	4798      	blx	r3
90011342:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90011344:	6803      	ldr	r3, [r0, #0]
90011346:	691b      	ldr	r3, [r3, #16]
90011348:	4798      	blx	r3
9001134a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
9001134e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90011352:	3b01      	subs	r3, #1
90011354:	b2db      	uxtb	r3, r3
90011356:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9001135a:	b10a      	cbz	r2, 90011360 <_ZN8touchgfx3HAL4tickEv+0x8c>
9001135c:	2b00      	cmp	r3, #0
9001135e:	d1eb      	bne.n	90011338 <_ZN8touchgfx3HAL4tickEv+0x64>
90011360:	4a3a      	ldr	r2, [pc, #232]	; (9001144c <_ZN8touchgfx3HAL4tickEv+0x178>)
90011362:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90011366:	7813      	ldrb	r3, [r2, #0]
90011368:	3301      	adds	r3, #1
9001136a:	b25b      	sxtb	r3, r3
9001136c:	4299      	cmp	r1, r3
9001136e:	7013      	strb	r3, [r2, #0]
90011370:	dc10      	bgt.n	90011394 <_ZN8touchgfx3HAL4tickEv+0xc0>
90011372:	2300      	movs	r3, #0
90011374:	68e0      	ldr	r0, [r4, #12]
90011376:	a902      	add	r1, sp, #8
90011378:	7013      	strb	r3, [r2, #0]
9001137a:	aa03      	add	r2, sp, #12
9001137c:	6803      	ldr	r3, [r0, #0]
9001137e:	68db      	ldr	r3, [r3, #12]
90011380:	4798      	blx	r3
90011382:	6823      	ldr	r3, [r4, #0]
90011384:	2800      	cmp	r0, #0
90011386:	d050      	beq.n	9001142a <_ZN8touchgfx3HAL4tickEv+0x156>
90011388:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
9001138c:	4620      	mov	r0, r4
9001138e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011392:	4798      	blx	r3
90011394:	2300      	movs	r3, #0
90011396:	6960      	ldr	r0, [r4, #20]
90011398:	f88d 3007 	strb.w	r3, [sp, #7]
9001139c:	b158      	cbz	r0, 900113b6 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001139e:	6803      	ldr	r3, [r0, #0]
900113a0:	f10d 0107 	add.w	r1, sp, #7
900113a4:	68db      	ldr	r3, [r3, #12]
900113a6:	4798      	blx	r3
900113a8:	b128      	cbz	r0, 900113b6 <_ZN8touchgfx3HAL4tickEv+0xe2>
900113aa:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900113ac:	f89d 1007 	ldrb.w	r1, [sp, #7]
900113b0:	6803      	ldr	r3, [r0, #0]
900113b2:	68db      	ldr	r3, [r3, #12]
900113b4:	4798      	blx	r3
900113b6:	f104 001c 	add.w	r0, r4, #28
900113ba:	f015 fd7d 	bl	90026eb8 <_ZN8touchgfx8Gestures4tickEv>
900113be:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
900113c2:	b30b      	cbz	r3, 90011408 <_ZN8touchgfx3HAL4tickEv+0x134>
900113c4:	6920      	ldr	r0, [r4, #16]
900113c6:	6803      	ldr	r3, [r0, #0]
900113c8:	691b      	ldr	r3, [r3, #16]
900113ca:	4798      	blx	r3
900113cc:	6f63      	ldr	r3, [r4, #116]	; 0x74
900113ce:	4606      	mov	r6, r0
900113d0:	b903      	cbnz	r3, 900113d4 <_ZN8touchgfx3HAL4tickEv+0x100>
900113d2:	6760      	str	r0, [r4, #116]	; 0x74
900113d4:	6f63      	ldr	r3, [r4, #116]	; 0x74
900113d6:	4a1e      	ldr	r2, [pc, #120]	; (90011450 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900113d8:	1af3      	subs	r3, r6, r3
900113da:	4293      	cmp	r3, r2
900113dc:	d914      	bls.n	90011408 <_ZN8touchgfx3HAL4tickEv+0x134>
900113de:	6920      	ldr	r0, [r4, #16]
900113e0:	6803      	ldr	r3, [r0, #0]
900113e2:	699b      	ldr	r3, [r3, #24]
900113e4:	4798      	blx	r3
900113e6:	6f63      	ldr	r3, [r4, #116]	; 0x74
900113e8:	2264      	movs	r2, #100	; 0x64
900113ea:	1af3      	subs	r3, r6, r3
900113ec:	fbb3 f3f2 	udiv	r3, r3, r2
900113f0:	fbb0 f0f3 	udiv	r0, r0, r3
900113f4:	2800      	cmp	r0, #0
900113f6:	dc1d      	bgt.n	90011434 <_ZN8touchgfx3HAL4tickEv+0x160>
900113f8:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
900113fc:	6920      	ldr	r0, [r4, #16]
900113fe:	2100      	movs	r1, #0
90011400:	6803      	ldr	r3, [r0, #0]
90011402:	69db      	ldr	r3, [r3, #28]
90011404:	4798      	blx	r3
90011406:	6766      	str	r6, [r4, #116]	; 0x74
90011408:	f005 f814 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
9001140c:	6803      	ldr	r3, [r0, #0]
9001140e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011410:	4798      	blx	r3
90011412:	6823      	ldr	r3, [r4, #0]
90011414:	4620      	mov	r0, r4
90011416:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
9001141a:	4798      	blx	r3
9001141c:	2001      	movs	r0, #1
9001141e:	f7ef f8cd 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011422:	2300      	movs	r3, #0
90011424:	702b      	strb	r3, [r5, #0]
90011426:	b004      	add	sp, #16
90011428:	bd70      	pop	{r4, r5, r6, pc}
9001142a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001142e:	4620      	mov	r0, r4
90011430:	4798      	blx	r3
90011432:	e7af      	b.n	90011394 <_ZN8touchgfx3HAL4tickEv+0xc0>
90011434:	2863      	cmp	r0, #99	; 0x63
90011436:	bfcb      	itete	gt
90011438:	2300      	movgt	r3, #0
9001143a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
9001143e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
90011442:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
90011446:	e7d9      	b.n	900113fc <_ZN8touchgfx3HAL4tickEv+0x128>
90011448:	24039708 	.word	0x24039708
9001144c:	24039709 	.word	0x24039709
90011450:	05f5e100 	.word	0x05f5e100

90011454 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90011454:	b510      	push	{r4, lr}
90011456:	4604      	mov	r4, r0
90011458:	f7f0 fa1e 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
9001145c:	2200      	movs	r2, #0
9001145e:	6863      	ldr	r3, [r4, #4]
90011460:	729a      	strb	r2, [r3, #10]
90011462:	bd10      	pop	{r4, pc}

90011464 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90011464:	65c1      	str	r1, [r0, #92]	; 0x5c
90011466:	301c      	adds	r0, #28
90011468:	f015 bd24 	b.w	90026eb4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

9001146c <_ZN8touchgfx3HAL5touchEll>:
9001146c:	b530      	push	{r4, r5, lr}
9001146e:	b087      	sub	sp, #28
90011470:	4604      	mov	r4, r0
90011472:	a804      	add	r0, sp, #16
90011474:	e9cd 1204 	strd	r1, r2, [sp, #16]
90011478:	f004 fda6 	bl	90015fc8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
9001147c:	9b04      	ldr	r3, [sp, #16]
9001147e:	a906      	add	r1, sp, #24
90011480:	a803      	add	r0, sp, #12
90011482:	f8ad 300c 	strh.w	r3, [sp, #12]
90011486:	9b05      	ldr	r3, [sp, #20]
90011488:	f821 3d0a 	strh.w	r3, [r1, #-10]!
9001148c:	f004 fdee 	bl	9001606c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011490:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90011494:	f104 001c 	add.w	r0, r4, #28
90011498:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001149c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900114a0:	b189      	cbz	r1, 900114c6 <_ZN8touchgfx3HAL5touchEll+0x5a>
900114a2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
900114a6:	9300      	str	r3, [sp, #0]
900114a8:	4613      	mov	r3, r2
900114aa:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
900114ae:	462a      	mov	r2, r5
900114b0:	f015 fd10 	bl	90026ed4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900114b4:	b128      	cbz	r0, 900114c2 <_ZN8touchgfx3HAL5touchEll+0x56>
900114b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900114ba:	6623      	str	r3, [r4, #96]	; 0x60
900114bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900114c0:	6663      	str	r3, [r4, #100]	; 0x64
900114c2:	b007      	add	sp, #28
900114c4:	bd30      	pop	{r4, r5, pc}
900114c6:	f015 fd45 	bl	90026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900114ca:	2301      	movs	r3, #1
900114cc:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900114d0:	e7f1      	b.n	900114b6 <_ZN8touchgfx3HAL5touchEll+0x4a>

900114d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900114d2:	b510      	push	{r4, lr}
900114d4:	2b00      	cmp	r3, #0
900114d6:	d046      	beq.n	90011566 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900114d8:	ea81 0002 	eor.w	r0, r1, r2
900114dc:	07c4      	lsls	r4, r0, #31
900114de:	d508      	bpl.n	900114f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900114e0:	440b      	add	r3, r1
900114e2:	3a01      	subs	r2, #1
900114e4:	428b      	cmp	r3, r1
900114e6:	d93e      	bls.n	90011566 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900114e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900114ec:	f801 0b01 	strb.w	r0, [r1], #1
900114f0:	e7f8      	b.n	900114e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900114f2:	07d0      	lsls	r0, r2, #31
900114f4:	bf42      	ittt	mi
900114f6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900114fa:	f103 33ff 	addmi.w	r3, r3, #4294967295
900114fe:	f801 0b01 	strbmi.w	r0, [r1], #1
90011502:	2b01      	cmp	r3, #1
90011504:	d911      	bls.n	9001152a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011506:	ea81 0402 	eor.w	r4, r1, r2
9001150a:	4610      	mov	r0, r2
9001150c:	07a4      	lsls	r4, r4, #30
9001150e:	d022      	beq.n	90011556 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011510:	f023 0401 	bic.w	r4, r3, #1
90011514:	440c      	add	r4, r1
90011516:	428c      	cmp	r4, r1
90011518:	4602      	mov	r2, r0
9001151a:	d904      	bls.n	90011526 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001151c:	8812      	ldrh	r2, [r2, #0]
9001151e:	3002      	adds	r0, #2
90011520:	f821 2b02 	strh.w	r2, [r1], #2
90011524:	e7f7      	b.n	90011516 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90011526:	f003 0301 	and.w	r3, r3, #1
9001152a:	f023 0003 	bic.w	r0, r3, #3
9001152e:	4408      	add	r0, r1
90011530:	4288      	cmp	r0, r1
90011532:	4614      	mov	r4, r2
90011534:	d904      	bls.n	90011540 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90011536:	6824      	ldr	r4, [r4, #0]
90011538:	3204      	adds	r2, #4
9001153a:	f841 4b04 	str.w	r4, [r1], #4
9001153e:	e7f7      	b.n	90011530 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90011540:	f003 0303 	and.w	r3, r3, #3
90011544:	3a01      	subs	r2, #1
90011546:	440b      	add	r3, r1
90011548:	428b      	cmp	r3, r1
9001154a:	d90c      	bls.n	90011566 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
9001154c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90011550:	f801 0b01 	strb.w	r0, [r1], #1
90011554:	e7f8      	b.n	90011548 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90011556:	0790      	lsls	r0, r2, #30
90011558:	d0e7      	beq.n	9001152a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001155a:	f832 0b02 	ldrh.w	r0, [r2], #2
9001155e:	3b02      	subs	r3, #2
90011560:	f821 0b02 	strh.w	r0, [r1], #2
90011564:	e7e1      	b.n	9001152a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011566:	2001      	movs	r0, #1
90011568:	bd10      	pop	{r4, pc}

9001156a <_ZN8touchgfx3HAL7noTouchEv>:
9001156a:	b510      	push	{r4, lr}
9001156c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
90011570:	4604      	mov	r4, r0
90011572:	b153      	cbz	r3, 9001158a <_ZN8touchgfx3HAL7noTouchEv+0x20>
90011574:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90011578:	2101      	movs	r1, #1
9001157a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
9001157e:	301c      	adds	r0, #28
90011580:	f015 fce8 	bl	90026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90011584:	2300      	movs	r3, #0
90011586:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
9001158a:	bd10      	pop	{r4, pc}

9001158c <_ZN8touchgfx8Drawable5setXYEss>:
9001158c:	b570      	push	{r4, r5, r6, lr}
9001158e:	6803      	ldr	r3, [r0, #0]
90011590:	4604      	mov	r4, r0
90011592:	4615      	mov	r5, r2
90011594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011596:	4798      	blx	r3
90011598:	6823      	ldr	r3, [r4, #0]
9001159a:	4629      	mov	r1, r5
9001159c:	4620      	mov	r0, r4
9001159e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900115a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900115a4:	4718      	bx	r3
	...

900115a8 <_ZN8touchgfx3HAL3lcdEv>:
900115a8:	4b04      	ldr	r3, [pc, #16]	; (900115bc <_ZN8touchgfx3HAL3lcdEv+0x14>)
900115aa:	681b      	ldr	r3, [r3, #0]
900115ac:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900115b0:	b10a      	cbz	r2, 900115b6 <_ZN8touchgfx3HAL3lcdEv+0xe>
900115b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900115b4:	b900      	cbnz	r0, 900115b8 <_ZN8touchgfx3HAL3lcdEv+0x10>
900115b6:	6898      	ldr	r0, [r3, #8]
900115b8:	4770      	bx	lr
900115ba:	bf00      	nop
900115bc:	24039704 	.word	0x24039704

900115c0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900115c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900115c4:	b085      	sub	sp, #20
900115c6:	4604      	mov	r4, r0
900115c8:	2000      	movs	r0, #0
900115ca:	4699      	mov	r9, r3
900115cc:	ad04      	add	r5, sp, #16
900115ce:	460f      	mov	r7, r1
900115d0:	4690      	mov	r8, r2
900115d2:	f845 0d04 	str.w	r0, [r5, #-4]!
900115d6:	69a0      	ldr	r0, [r4, #24]
900115d8:	6806      	ldr	r6, [r0, #0]
900115da:	9501      	str	r5, [sp, #4]
900115dc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
900115e0:	9500      	str	r5, [sp, #0]
900115e2:	6835      	ldr	r5, [r6, #0]
900115e4:	47a8      	blx	r5
900115e6:	4d10      	ldr	r5, [pc, #64]	; (90011628 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900115e8:	4606      	mov	r6, r0
900115ea:	f8a5 9000 	strh.w	r9, [r5]
900115ee:	f7ff ffdb 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900115f2:	6803      	ldr	r3, [r0, #0]
900115f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900115f6:	4798      	blx	r3
900115f8:	b128      	cbz	r0, 90011606 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900115fa:	2801      	cmp	r0, #1
900115fc:	d00b      	beq.n	90011616 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900115fe:	4630      	mov	r0, r6
90011600:	b005      	add	sp, #20
90011602:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011606:	882b      	ldrh	r3, [r5, #0]
90011608:	fb08 7203 	mla	r2, r8, r3, r7
9001160c:	9b03      	ldr	r3, [sp, #12]
9001160e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011612:	63e3      	str	r3, [r4, #60]	; 0x3c
90011614:	e7f3      	b.n	900115fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011616:	882a      	ldrh	r2, [r5, #0]
90011618:	9b03      	ldr	r3, [sp, #12]
9001161a:	fb08 7202 	mla	r2, r8, r2, r7
9001161e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011622:	1a9a      	subs	r2, r3, r2
90011624:	63e2      	str	r2, [r4, #60]	; 0x3c
90011626:	e7ea      	b.n	900115fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011628:	240396fe 	.word	0x240396fe

9001162c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001162c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001162e:	b08b      	sub	sp, #44	; 0x2c
90011630:	4617      	mov	r7, r2
90011632:	4604      	mov	r4, r0
90011634:	460e      	mov	r6, r1
90011636:	461d      	mov	r5, r3
90011638:	f7ff ffb6 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
9001163c:	6803      	ldr	r3, [r0, #0]
9001163e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011640:	4798      	blx	r3
90011642:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011646:	9007      	str	r0, [sp, #28]
90011648:	4631      	mov	r1, r6
9001164a:	6822      	ldr	r2, [r4, #0]
9001164c:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011650:	4b0c      	ldr	r3, [pc, #48]	; (90011684 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011652:	4620      	mov	r0, r4
90011654:	881b      	ldrh	r3, [r3, #0]
90011656:	9306      	str	r3, [sp, #24]
90011658:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001165c:	9305      	str	r3, [sp, #20]
9001165e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
90011662:	9304      	str	r3, [sp, #16]
90011664:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011668:	9303      	str	r3, [sp, #12]
9001166a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001166e:	9302      	str	r3, [sp, #8]
90011670:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011674:	e9cd 5300 	strd	r5, r3, [sp]
90011678:	463b      	mov	r3, r7
9001167a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
9001167c:	2200      	movs	r2, #0
9001167e:	47a8      	blx	r5
90011680:	b00b      	add	sp, #44	; 0x2c
90011682:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011684:	240396fe 	.word	0x240396fe

90011688 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001168c:	4698      	mov	r8, r3
9001168e:	6803      	ldr	r3, [r0, #0]
90011690:	b08b      	sub	sp, #44	; 0x2c
90011692:	4617      	mov	r7, r2
90011694:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
90011696:	460e      	mov	r6, r1
90011698:	4b13      	ldr	r3, [pc, #76]	; (900116e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001169a:	4604      	mov	r4, r0
9001169c:	f8b3 9000 	ldrh.w	r9, [r3]
900116a0:	f7ff ff82 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900116a4:	6803      	ldr	r3, [r0, #0]
900116a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900116a8:	4798      	blx	r3
900116aa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
900116ae:	2200      	movs	r2, #0
900116b0:	4631      	mov	r1, r6
900116b2:	e9cd 0308 	strd	r0, r3, [sp, #32]
900116b6:	2302      	movs	r3, #2
900116b8:	4620      	mov	r0, r4
900116ba:	e9cd 9306 	strd	r9, r3, [sp, #24]
900116be:	2301      	movs	r3, #1
900116c0:	9305      	str	r3, [sp, #20]
900116c2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900116c6:	9304      	str	r3, [sp, #16]
900116c8:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
900116cc:	9303      	str	r3, [sp, #12]
900116ce:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900116d2:	9302      	str	r3, [sp, #8]
900116d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900116d8:	e9cd 8300 	strd	r8, r3, [sp]
900116dc:	463b      	mov	r3, r7
900116de:	47a8      	blx	r5
900116e0:	b00b      	add	sp, #44	; 0x2c
900116e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900116e6:	bf00      	nop
900116e8:	240396fe 	.word	0x240396fe

900116ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900116ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900116f0:	4698      	mov	r8, r3
900116f2:	6803      	ldr	r3, [r0, #0]
900116f4:	b087      	sub	sp, #28
900116f6:	460e      	mov	r6, r1
900116f8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
900116fa:	4617      	mov	r7, r2
900116fc:	4b0f      	ldr	r3, [pc, #60]	; (9001173c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900116fe:	4604      	mov	r4, r0
90011700:	f8b3 9000 	ldrh.w	r9, [r3]
90011704:	f7ff ff50 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90011708:	6803      	ldr	r3, [r0, #0]
9001170a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001170c:	4798      	blx	r3
9001170e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90011712:	463a      	mov	r2, r7
90011714:	4631      	mov	r1, r6
90011716:	f8cd 900c 	str.w	r9, [sp, #12]
9001171a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001171e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90011722:	4620      	mov	r0, r4
90011724:	9302      	str	r3, [sp, #8]
90011726:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001172a:	9301      	str	r3, [sp, #4]
9001172c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011730:	9300      	str	r3, [sp, #0]
90011732:	4643      	mov	r3, r8
90011734:	47a8      	blx	r5
90011736:	b007      	add	sp, #28
90011738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001173c:	240396fe 	.word	0x240396fe

90011740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011744:	4604      	mov	r4, r0
90011746:	b08f      	sub	sp, #60	; 0x3c
90011748:	4610      	mov	r0, r2
9001174a:	460d      	mov	r5, r1
9001174c:	4691      	mov	r9, r2
9001174e:	461e      	mov	r6, r3
90011750:	f007 ff86 	bl	90019660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011754:	2800      	cmp	r0, #0
90011756:	f000 809d 	beq.w	90011894 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001175a:	6823      	ldr	r3, [r4, #0]
9001175c:	4620      	mov	r0, r4
9001175e:	f8df b198 	ldr.w	fp, [pc, #408]	; 900118f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011762:	f10d 0838 	add.w	r8, sp, #56	; 0x38
90011766:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011768:	4798      	blx	r3
9001176a:	6823      	ldr	r3, [r4, #0]
9001176c:	4620      	mov	r0, r4
9001176e:	f8df a18c 	ldr.w	sl, [pc, #396]	; 900118fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011774:	4798      	blx	r3
90011776:	f8bb 3000 	ldrh.w	r3, [fp]
9001177a:	4f5c      	ldr	r7, [pc, #368]	; (900118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001177c:	9301      	str	r3, [sp, #4]
9001177e:	f8ba 3000 	ldrh.w	r3, [sl]
90011782:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011786:	4640      	mov	r0, r8
90011788:	9302      	str	r3, [sp, #8]
9001178a:	883b      	ldrh	r3, [r7, #0]
9001178c:	9303      	str	r3, [sp, #12]
9001178e:	4b58      	ldr	r3, [pc, #352]	; (900118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011790:	881a      	ldrh	r2, [r3, #0]
90011792:	9305      	str	r3, [sp, #20]
90011794:	9204      	str	r2, [sp, #16]
90011796:	f007 fff7 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001179a:	8038      	strh	r0, [r7, #0]
9001179c:	4640      	mov	r0, r8
9001179e:	f008 f827 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
900117a2:	9b05      	ldr	r3, [sp, #20]
900117a4:	b280      	uxth	r0, r0
900117a6:	8018      	strh	r0, [r3, #0]
900117a8:	4b52      	ldr	r3, [pc, #328]	; (900118f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900117aa:	781b      	ldrb	r3, [r3, #0]
900117ac:	2b00      	cmp	r3, #0
900117ae:	d174      	bne.n	9001189a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900117b0:	883b      	ldrh	r3, [r7, #0]
900117b2:	f8aa 0000 	strh.w	r0, [sl]
900117b6:	f8ab 3000 	strh.w	r3, [fp]
900117ba:	4648      	mov	r0, r9
900117bc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
900117c0:	f007 ff4e 	bl	90019660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900117c4:	2200      	movs	r2, #0
900117c6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
900117ca:	4611      	mov	r1, r2
900117cc:	4628      	mov	r0, r5
900117ce:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900117d2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900117d6:	f7ff fed9 	bl	9001158c <_ZN8touchgfx8Drawable5setXYEss>
900117da:	2301      	movs	r3, #1
900117dc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
900117e0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
900117e4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900117e8:	2b00      	cmp	r3, #0
900117ea:	dd5c      	ble.n	900118a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900117ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900117f0:	2b00      	cmp	r3, #0
900117f2:	dd58      	ble.n	900118a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900117f4:	462a      	mov	r2, r5
900117f6:	ab0a      	add	r3, sp, #40	; 0x28
900117f8:	f852 0f04 	ldr.w	r0, [r2, #4]!
900117fc:	6851      	ldr	r1, [r2, #4]
900117fe:	c303      	stmia	r3!, {r0, r1}
90011800:	4631      	mov	r1, r6
90011802:	a80a      	add	r0, sp, #40	; 0x28
90011804:	f7ff fbec 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90011808:	4b38      	ldr	r3, [pc, #224]	; (900118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001180a:	2100      	movs	r1, #0
9001180c:	f9b3 2000 	ldrsh.w	r2, [r3]
90011810:	4b37      	ldr	r3, [pc, #220]	; (900118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011812:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90011816:	aa0a      	add	r2, sp, #40	; 0x28
90011818:	f9b3 3000 	ldrsh.w	r3, [r3]
9001181c:	910c      	str	r1, [sp, #48]	; 0x30
9001181e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011822:	ab08      	add	r3, sp, #32
90011824:	e892 0003 	ldmia.w	r2, {r0, r1}
90011828:	e883 0003 	stmia.w	r3, {r0, r1}
9001182c:	4618      	mov	r0, r3
9001182e:	a90c      	add	r1, sp, #48	; 0x30
90011830:	f7ff fbd6 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90011834:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90011836:	2b00      	cmp	r3, #0
90011838:	d13c      	bne.n	900118b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001183a:	2000      	movs	r0, #0
9001183c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90011840:	2600      	movs	r6, #0
90011842:	696b      	ldr	r3, [r5, #20]
90011844:	a908      	add	r1, sp, #32
90011846:	682a      	ldr	r2, [r5, #0]
90011848:	4628      	mov	r0, r5
9001184a:	9305      	str	r3, [sp, #20]
9001184c:	616e      	str	r6, [r5, #20]
9001184e:	6892      	ldr	r2, [r2, #8]
90011850:	4790      	blx	r2
90011852:	9b05      	ldr	r3, [sp, #20]
90011854:	4652      	mov	r2, sl
90011856:	4649      	mov	r1, r9
90011858:	616b      	str	r3, [r5, #20]
9001185a:	4628      	mov	r0, r5
9001185c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90011860:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
90011864:	f7ff fe92 	bl	9001158c <_ZN8touchgfx8Drawable5setXYEss>
90011868:	9a01      	ldr	r2, [sp, #4]
9001186a:	4b23      	ldr	r3, [pc, #140]	; (900118f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
9001186c:	4620      	mov	r0, r4
9001186e:	801a      	strh	r2, [r3, #0]
90011870:	9a02      	ldr	r2, [sp, #8]
90011872:	4b22      	ldr	r3, [pc, #136]	; (900118fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90011874:	801a      	strh	r2, [r3, #0]
90011876:	9a03      	ldr	r2, [sp, #12]
90011878:	4b1c      	ldr	r3, [pc, #112]	; (900118ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001187a:	801a      	strh	r2, [r3, #0]
9001187c:	4b1c      	ldr	r3, [pc, #112]	; (900118f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001187e:	9a04      	ldr	r2, [sp, #16]
90011880:	801a      	strh	r2, [r3, #0]
90011882:	6823      	ldr	r3, [r4, #0]
90011884:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90011888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001188a:	4798      	blx	r3
9001188c:	6823      	ldr	r3, [r4, #0]
9001188e:	4620      	mov	r0, r4
90011890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011892:	4798      	blx	r3
90011894:	b00f      	add	sp, #60	; 0x3c
90011896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001189a:	883b      	ldrh	r3, [r7, #0]
9001189c:	f8ab 0000 	strh.w	r0, [fp]
900118a0:	f8aa 3000 	strh.w	r3, [sl]
900118a4:	e789      	b.n	900117ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
900118a6:	462a      	mov	r2, r5
900118a8:	ab0a      	add	r3, sp, #40	; 0x28
900118aa:	f852 0f04 	ldr.w	r0, [r2, #4]!
900118ae:	6851      	ldr	r1, [r2, #4]
900118b0:	c303      	stmia	r3!, {r0, r1}
900118b2:	e7a9      	b.n	90011808 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900118b4:	a807      	add	r0, sp, #28
900118b6:	f008 f8d7 	bl	90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
900118ba:	4606      	mov	r6, r0
900118bc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
900118be:	6803      	ldr	r3, [r0, #0]
900118c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900118c2:	4798      	blx	r3
900118c4:	4286      	cmp	r6, r0
900118c6:	d1b8      	bne.n	9001183a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900118c8:	f7ff fe6e 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900118cc:	6803      	ldr	r3, [r0, #0]
900118ce:	4606      	mov	r6, r0
900118d0:	a807      	add	r0, sp, #28
900118d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900118d4:	9305      	str	r3, [sp, #20]
900118d6:	f008 f8c7 	bl	90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
900118da:	9b05      	ldr	r3, [sp, #20]
900118dc:	4601      	mov	r1, r0
900118de:	4630      	mov	r0, r6
900118e0:	4798      	blx	r3
900118e2:	f080 0001 	eor.w	r0, r0, #1
900118e6:	b2c0      	uxtb	r0, r0
900118e8:	e7a8      	b.n	9001183c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900118ea:	bf00      	nop
900118ec:	240396f8 	.word	0x240396f8
900118f0:	240396fa 	.word	0x240396fa
900118f4:	240396fc 	.word	0x240396fc
900118f8:	240396fe 	.word	0x240396fe
900118fc:	24039700 	.word	0x24039700

90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011900:	4b07      	ldr	r3, [pc, #28]	; (90011920 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90011902:	b510      	push	{r4, lr}
90011904:	781b      	ldrb	r3, [r3, #0]
90011906:	4604      	mov	r4, r0
90011908:	b13b      	cbz	r3, 9001191a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001190a:	6803      	ldr	r3, [r0, #0]
9001190c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001190e:	4798      	blx	r3
90011910:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011912:	4283      	cmp	r3, r0
90011914:	d101      	bne.n	9001191a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011916:	6c20      	ldr	r0, [r4, #64]	; 0x40
90011918:	bd10      	pop	{r4, pc}
9001191a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001191c:	e7fc      	b.n	90011918 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001191e:	bf00      	nop
90011920:	24039702 	.word	0x24039702

90011924 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011928:	461d      	mov	r5, r3
9001192a:	b08a      	sub	sp, #40	; 0x28
9001192c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90011930:	4690      	mov	r8, r2
90011932:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90011936:	2400      	movs	r4, #0
90011938:	4607      	mov	r7, r0
9001193a:	fb06 8505 	mla	r5, r6, r5, r8
9001193e:	9404      	str	r4, [sp, #16]
90011940:	f88d 4020 	strb.w	r4, [sp, #32]
90011944:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011948:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001194c:	f8ad 3018 	strh.w	r3, [sp, #24]
90011950:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011954:	f8ad 301a 	strh.w	r3, [sp, #26]
90011958:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9001195c:	f8ad 301c 	strh.w	r3, [sp, #28]
90011960:	f7ff ffce 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011964:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011968:	6878      	ldr	r0, [r7, #4]
9001196a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001196e:	a901      	add	r1, sp, #4
90011970:	9505      	str	r5, [sp, #20]
90011972:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011976:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
9001197a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001197e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90011982:	6803      	ldr	r3, [r0, #0]
90011984:	685b      	ldr	r3, [r3, #4]
90011986:	4798      	blx	r3
90011988:	b00a      	add	sp, #40	; 0x28
9001198a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001198e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
9001198e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011992:	b08b      	sub	sp, #44	; 0x2c
90011994:	2400      	movs	r4, #0
90011996:	4691      	mov	r9, r2
90011998:	461d      	mov	r5, r3
9001199a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
9001199e:	f44f 6300 	mov.w	r3, #2048	; 0x800
900119a2:	4688      	mov	r8, r1
900119a4:	4607      	mov	r7, r0
900119a6:	9404      	str	r4, [sp, #16]
900119a8:	fb06 9505 	mla	r5, r6, r5, r9
900119ac:	e9cd 3401 	strd	r3, r4, [sp, #4]
900119b0:	f7ff ffa6 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900119b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900119b8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900119bc:	6878      	ldr	r0, [r7, #4]
900119be:	f8ad 3018 	strh.w	r3, [sp, #24]
900119c2:	a901      	add	r1, sp, #4
900119c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900119c8:	9505      	str	r5, [sp, #20]
900119ca:	f8ad 301a 	strh.w	r3, [sp, #26]
900119ce:	f8ad 401c 	strh.w	r4, [sp, #28]
900119d2:	f8ad 601e 	strh.w	r6, [sp, #30]
900119d6:	f8cd 8010 	str.w	r8, [sp, #16]
900119da:	f8ad 4020 	strh.w	r4, [sp, #32]
900119de:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900119e2:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900119e6:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900119ea:	6803      	ldr	r3, [r0, #0]
900119ec:	685b      	ldr	r3, [r3, #4]
900119ee:	4798      	blx	r3
900119f0:	b00b      	add	sp, #44	; 0x2c
900119f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900119f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900119f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900119fc:	b08a      	sub	sp, #40	; 0x28
900119fe:	4698      	mov	r8, r3
90011a00:	2300      	movs	r3, #0
90011a02:	4606      	mov	r6, r0
90011a04:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90011a08:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90011a0c:	2d0b      	cmp	r5, #11
90011a0e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90011a12:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90011a16:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
90011a1a:	9304      	str	r3, [sp, #16]
90011a1c:	d137      	bne.n	90011a8e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90011a1e:	2380      	movs	r3, #128	; 0x80
90011a20:	f88d 0020 	strb.w	r0, [sp, #32]
90011a24:	4630      	mov	r0, r6
90011a26:	9203      	str	r2, [sp, #12]
90011a28:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011a2c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011a30:	f8ad 3018 	strh.w	r3, [sp, #24]
90011a34:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011a38:	f8ad 301a 	strh.w	r3, [sp, #26]
90011a3c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011a40:	f8ad 301c 	strh.w	r3, [sp, #28]
90011a44:	f7ff ff5c 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011a48:	2c0b      	cmp	r4, #11
90011a4a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90011a4e:	f8ad 701e 	strh.w	r7, [sp, #30]
90011a52:	bf94      	ite	ls
90011a54:	4b19      	ldrls	r3, [pc, #100]	; (90011abc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011a56:	2100      	movhi	r1, #0
90011a58:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
90011a5c:	bf98      	it	ls
90011a5e:	5d19      	ldrbls	r1, [r3, r4]
90011a60:	fb02 8307 	mla	r3, r2, r7, r8
90011a64:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011a68:	10c9      	asrs	r1, r1, #3
90011a6a:	fb01 0003 	mla	r0, r1, r3, r0
90011a6e:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
90011a72:	a901      	add	r1, sp, #4
90011a74:	9005      	str	r0, [sp, #20]
90011a76:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90011a7a:	2300      	movs	r3, #0
90011a7c:	6870      	ldr	r0, [r6, #4]
90011a7e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90011a82:	6803      	ldr	r3, [r0, #0]
90011a84:	685b      	ldr	r3, [r3, #4]
90011a86:	4798      	blx	r3
90011a88:	b00a      	add	sp, #40	; 0x28
90011a8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011a8e:	2d02      	cmp	r5, #2
90011a90:	d109      	bne.n	90011aa6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011a92:	28ff      	cmp	r0, #255	; 0xff
90011a94:	d105      	bne.n	90011aa2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011a96:	f1bc 0f00 	cmp.w	ip, #0
90011a9a:	bf14      	ite	ne
90011a9c:	2340      	movne	r3, #64	; 0x40
90011a9e:	2320      	moveq	r3, #32
90011aa0:	e7be      	b.n	90011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011aa2:	2340      	movs	r3, #64	; 0x40
90011aa4:	e7bc      	b.n	90011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011aa6:	28ff      	cmp	r0, #255	; 0xff
90011aa8:	d105      	bne.n	90011ab6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011aaa:	f1bc 0f00 	cmp.w	ip, #0
90011aae:	bf14      	ite	ne
90011ab0:	2304      	movne	r3, #4
90011ab2:	2301      	moveq	r3, #1
90011ab4:	e7b4      	b.n	90011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011ab6:	2304      	movs	r3, #4
90011ab8:	e7b2      	b.n	90011a20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011aba:	bf00      	nop
90011abc:	9002b510 	.word	0x9002b510

90011ac0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011ac4:	b08b      	sub	sp, #44	; 0x2c
90011ac6:	461d      	mov	r5, r3
90011ac8:	2400      	movs	r4, #0
90011aca:	4688      	mov	r8, r1
90011acc:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90011ad0:	4693      	mov	fp, r2
90011ad2:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90011ad6:	4607      	mov	r7, r0
90011ad8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90011adc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90011ae0:	9404      	str	r4, [sp, #16]
90011ae2:	bf14      	ite	ne
90011ae4:	2308      	movne	r3, #8
90011ae6:	2302      	moveq	r3, #2
90011ae8:	fb05 b50a 	mla	r5, r5, sl, fp
90011aec:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011af0:	f7ff ff06 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011af4:	2e0b      	cmp	r6, #11
90011af6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90011afa:	a901      	add	r1, sp, #4
90011afc:	bf98      	it	ls
90011afe:	4b13      	ldrls	r3, [pc, #76]	; (90011b4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011b00:	f8ad a01e 	strh.w	sl, [sp, #30]
90011b04:	bf98      	it	ls
90011b06:	5d9c      	ldrbls	r4, [r3, r6]
90011b08:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90011b0c:	10e4      	asrs	r4, r4, #3
90011b0e:	f8cd 8010 	str.w	r8, [sp, #16]
90011b12:	f8ad 3018 	strh.w	r3, [sp, #24]
90011b16:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90011b1a:	fb04 0405 	mla	r4, r4, r5, r0
90011b1e:	6878      	ldr	r0, [r7, #4]
90011b20:	f8ad 301a 	strh.w	r3, [sp, #26]
90011b24:	2300      	movs	r3, #0
90011b26:	9405      	str	r4, [sp, #20]
90011b28:	f8ad 301c 	strh.w	r3, [sp, #28]
90011b2c:	f88d 9020 	strb.w	r9, [sp, #32]
90011b30:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90011b34:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90011b38:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90011b3c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90011b40:	6803      	ldr	r3, [r0, #0]
90011b42:	685b      	ldr	r3, [r3, #4]
90011b44:	4798      	blx	r3
90011b46:	b00b      	add	sp, #44	; 0x2c
90011b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011b4c:	9002b510 	.word	0x9002b510

90011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90011b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011b54:	461e      	mov	r6, r3
90011b56:	4b0a      	ldr	r3, [pc, #40]	; (90011b80 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011b58:	460f      	mov	r7, r1
90011b5a:	4690      	mov	r8, r2
90011b5c:	881d      	ldrh	r5, [r3, #0]
90011b5e:	f7ff fd23 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90011b62:	6803      	ldr	r3, [r0, #0]
90011b64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011b66:	4798      	blx	r3
90011b68:	280b      	cmp	r0, #11
90011b6a:	bf96      	itet	ls
90011b6c:	4b05      	ldrls	r3, [pc, #20]	; (90011b84 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90011b6e:	2400      	movhi	r4, #0
90011b70:	5c1c      	ldrbls	r4, [r3, r0]
90011b72:	fb08 7005 	mla	r0, r8, r5, r7
90011b76:	10e4      	asrs	r4, r4, #3
90011b78:	fb04 6000 	mla	r0, r4, r0, r6
90011b7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011b80:	240396fe 	.word	0x240396fe
90011b84:	9002b510 	.word	0x9002b510

90011b88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011b88:	b5f0      	push	{r4, r5, r6, r7, lr}
90011b8a:	b08b      	sub	sp, #44	; 0x2c
90011b8c:	461f      	mov	r7, r3
90011b8e:	4604      	mov	r4, r0
90011b90:	4616      	mov	r6, r2
90011b92:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90011b96:	2500      	movs	r5, #0
90011b98:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011b9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011ba0:	9504      	str	r5, [sp, #16]
90011ba2:	f8ad 3018 	strh.w	r3, [sp, #24]
90011ba6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011baa:	f8ad 301a 	strh.w	r3, [sp, #26]
90011bae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011bb2:	f8ad 301c 	strh.w	r3, [sp, #28]
90011bb6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90011bba:	f88d 3020 	strb.w	r3, [sp, #32]
90011bbe:	f7ff fe9f 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011bc2:	463a      	mov	r2, r7
90011bc4:	4631      	mov	r1, r6
90011bc6:	4603      	mov	r3, r0
90011bc8:	4620      	mov	r0, r4
90011bca:	f7ff ffc1 	bl	90011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011bce:	4b0e      	ldr	r3, [pc, #56]	; (90011c08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011bd0:	9005      	str	r0, [sp, #20]
90011bd2:	881b      	ldrh	r3, [r3, #0]
90011bd4:	f8ad 301e 	strh.w	r3, [sp, #30]
90011bd8:	f7ff fce6 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90011bdc:	6803      	ldr	r3, [r0, #0]
90011bde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011be0:	4798      	blx	r3
90011be2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90011be4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90011be8:	a901      	add	r1, sp, #4
90011bea:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90011bee:	9304      	str	r3, [sp, #16]
90011bf0:	6860      	ldr	r0, [r4, #4]
90011bf2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90011bf6:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90011bfa:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90011bfe:	6803      	ldr	r3, [r0, #0]
90011c00:	685b      	ldr	r3, [r3, #4]
90011c02:	4798      	blx	r3
90011c04:	b00b      	add	sp, #44	; 0x2c
90011c06:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011c08:	240396fe 	.word	0x240396fe

90011c0c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90011c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011c0e:	b08d      	sub	sp, #52	; 0x34
90011c10:	2501      	movs	r5, #1
90011c12:	4604      	mov	r4, r0
90011c14:	466b      	mov	r3, sp
90011c16:	9503      	str	r5, [sp, #12]
90011c18:	e883 0006 	stmia.w	r3, {r1, r2}
90011c1c:	2300      	movs	r3, #0
90011c1e:	f8bd 6000 	ldrh.w	r6, [sp]
90011c22:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90011c26:	9306      	str	r3, [sp, #24]
90011c28:	6803      	ldr	r3, [r0, #0]
90011c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011c2c:	4798      	blx	r3
90011c2e:	463a      	mov	r2, r7
90011c30:	4631      	mov	r1, r6
90011c32:	4603      	mov	r3, r0
90011c34:	4620      	mov	r0, r4
90011c36:	f7ff ff8b 	bl	90011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011c3a:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011c3c:	9004      	str	r0, [sp, #16]
90011c3e:	9307      	str	r3, [sp, #28]
90011c40:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011c44:	f8ad 3020 	strh.w	r3, [sp, #32]
90011c48:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011c4c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90011c50:	4b0e      	ldr	r3, [pc, #56]	; (90011c8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90011c52:	881b      	ldrh	r3, [r3, #0]
90011c54:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90011c58:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90011c5c:	f7ff fca4 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90011c60:	6803      	ldr	r3, [r0, #0]
90011c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011c64:	4798      	blx	r3
90011c66:	23ff      	movs	r3, #255	; 0xff
90011c68:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90011c6c:	a903      	add	r1, sp, #12
90011c6e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90011c72:	6860      	ldr	r0, [r4, #4]
90011c74:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90011c78:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90011c7c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90011c80:	6803      	ldr	r3, [r0, #0]
90011c82:	685b      	ldr	r3, [r3, #4]
90011c84:	4798      	blx	r3
90011c86:	6c60      	ldr	r0, [r4, #68]	; 0x44
90011c88:	b00d      	add	sp, #52	; 0x34
90011c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011c8c:	240396fe 	.word	0x240396fe

90011c90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90011c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011c94:	b08c      	sub	sp, #48	; 0x30
90011c96:	461e      	mov	r6, r3
90011c98:	2300      	movs	r3, #0
90011c9a:	4604      	mov	r4, r0
90011c9c:	466d      	mov	r5, sp
90011c9e:	9306      	str	r3, [sp, #24]
90011ca0:	6803      	ldr	r3, [r0, #0]
90011ca2:	e885 0006 	stmia.w	r5, {r1, r2}
90011ca6:	2501      	movs	r5, #1
90011ca8:	f8bd 7000 	ldrh.w	r7, [sp]
90011cac:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90011cb0:	9503      	str	r5, [sp, #12]
90011cb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011cb4:	4798      	blx	r3
90011cb6:	4642      	mov	r2, r8
90011cb8:	4639      	mov	r1, r7
90011cba:	4603      	mov	r3, r0
90011cbc:	4620      	mov	r0, r4
90011cbe:	f7ff ff47 	bl	90011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011cc2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011cc6:	9004      	str	r0, [sp, #16]
90011cc8:	f8ad 3020 	strh.w	r3, [sp, #32]
90011ccc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011cd0:	9607      	str	r6, [sp, #28]
90011cd2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90011cd6:	4b10      	ldr	r3, [pc, #64]	; (90011d18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011cd8:	881b      	ldrh	r3, [r3, #0]
90011cda:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90011cde:	9b12      	ldr	r3, [sp, #72]	; 0x48
90011ce0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90011ce4:	f7ff fc60 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90011ce8:	6803      	ldr	r3, [r0, #0]
90011cea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011cec:	4798      	blx	r3
90011cee:	23ff      	movs	r3, #255	; 0xff
90011cf0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90011cf4:	a903      	add	r1, sp, #12
90011cf6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90011cfa:	6860      	ldr	r0, [r4, #4]
90011cfc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90011d00:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90011d04:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90011d08:	6803      	ldr	r3, [r0, #0]
90011d0a:	685b      	ldr	r3, [r3, #4]
90011d0c:	4798      	blx	r3
90011d0e:	4630      	mov	r0, r6
90011d10:	b00c      	add	sp, #48	; 0x30
90011d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011d16:	bf00      	nop
90011d18:	240396fe 	.word	0x240396fe

90011d1c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011d1e:	b085      	sub	sp, #20
90011d20:	4605      	mov	r5, r0
90011d22:	ac02      	add	r4, sp, #8
90011d24:	e884 0006 	stmia.w	r4, {r1, r2}
90011d28:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011d2c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90011d30:	f7ff fde6 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011d34:	4631      	mov	r1, r6
90011d36:	4603      	mov	r3, r0
90011d38:	463a      	mov	r2, r7
90011d3a:	4628      	mov	r0, r5
90011d3c:	f7ff ff08 	bl	90011b50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011d40:	4a05      	ldr	r2, [pc, #20]	; (90011d58 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90011d42:	682b      	ldr	r3, [r5, #0]
90011d44:	8812      	ldrh	r2, [r2, #0]
90011d46:	9200      	str	r2, [sp, #0]
90011d48:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90011d4a:	4603      	mov	r3, r0
90011d4c:	4628      	mov	r0, r5
90011d4e:	e894 0006 	ldmia.w	r4, {r1, r2}
90011d52:	47b0      	blx	r6
90011d54:	b005      	add	sp, #20
90011d56:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011d58:	240396fe 	.word	0x240396fe

90011d5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011d5c:	b570      	push	{r4, r5, r6, lr}
90011d5e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90011d62:	4604      	mov	r4, r0
90011d64:	b19b      	cbz	r3, 90011d8e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90011d66:	2002      	movs	r0, #2
90011d68:	f7ee fc5c 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011d6c:	2300      	movs	r3, #0
90011d6e:	4620      	mov	r0, r4
90011d70:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90011d74:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90011d78:	6823      	ldr	r3, [r4, #0]
90011d7a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90011d7e:	f7ff fdbf 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011d82:	4601      	mov	r1, r0
90011d84:	4620      	mov	r0, r4
90011d86:	462b      	mov	r3, r5
90011d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d8c:	4718      	bx	r3
90011d8e:	bd70      	pop	{r4, r5, r6, pc}

90011d90 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90011d90:	b570      	push	{r4, r5, r6, lr}
90011d92:	4605      	mov	r5, r0
90011d94:	460c      	mov	r4, r1
90011d96:	2003      	movs	r0, #3
90011d98:	b149      	cbz	r1, 90011dae <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011d9a:	f7ee fbdb 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011d9e:	6928      	ldr	r0, [r5, #16]
90011da0:	b168      	cbz	r0, 90011dbe <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011da2:	6803      	ldr	r3, [r0, #0]
90011da4:	2101      	movs	r1, #1
90011da6:	695b      	ldr	r3, [r3, #20]
90011da8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011dac:	4718      	bx	r3
90011dae:	f7ee fc05 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011db2:	6928      	ldr	r0, [r5, #16]
90011db4:	b118      	cbz	r0, 90011dbe <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011db6:	6803      	ldr	r3, [r0, #0]
90011db8:	4621      	mov	r1, r4
90011dba:	695b      	ldr	r3, [r3, #20]
90011dbc:	e7f4      	b.n	90011da8 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90011dbe:	bd70      	pop	{r4, r5, r6, pc}

90011dc0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90011dc0:	b538      	push	{r3, r4, r5, lr}
90011dc2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90011dc6:	4604      	mov	r4, r0
90011dc8:	460d      	mov	r5, r1
90011dca:	428b      	cmp	r3, r1
90011dcc:	d006      	beq.n	90011ddc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011dce:	6803      	ldr	r3, [r0, #0]
90011dd0:	b929      	cbnz	r1, 90011dde <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90011dd2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90011dd6:	4798      	blx	r3
90011dd8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90011ddc:	bd38      	pop	{r3, r4, r5, pc}
90011dde:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90011de2:	e7f8      	b.n	90011dd6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90011de4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90011de4:	4b0d      	ldr	r3, [pc, #52]	; (90011e1c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90011de6:	b510      	push	{r4, lr}
90011de8:	781b      	ldrb	r3, [r3, #0]
90011dea:	4604      	mov	r4, r0
90011dec:	b95b      	cbnz	r3, 90011e06 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011dee:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90011df2:	2b02      	cmp	r3, #2
90011df4:	d007      	beq.n	90011e06 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011df6:	6840      	ldr	r0, [r0, #4]
90011df8:	f000 f91a 	bl	90012030 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90011dfc:	b118      	cbz	r0, 90011e06 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011dfe:	6862      	ldr	r2, [r4, #4]
90011e00:	7a53      	ldrb	r3, [r2, #9]
90011e02:	2b00      	cmp	r3, #0
90011e04:	d0fc      	beq.n	90011e00 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90011e06:	f7ef fd3f 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011e0a:	4620      	mov	r0, r4
90011e0c:	2100      	movs	r1, #0
90011e0e:	f7ff ffd7 	bl	90011dc0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011e12:	4620      	mov	r0, r4
90011e14:	f7ff fd74 	bl	90011900 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011e18:	bd10      	pop	{r4, pc}
90011e1a:	bf00      	nop
90011e1c:	24039702 	.word	0x24039702

90011e20 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011e20:	b570      	push	{r4, r5, r6, lr}
90011e22:	4604      	mov	r4, r0
90011e24:	6803      	ldr	r3, [r0, #0]
90011e26:	b919      	cbnz	r1, 90011e30 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011e2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011e2e:	4718      	bx	r3
90011e30:	2200      	movs	r2, #0
90011e32:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90011e36:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90011e3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011e3c:	4798      	blx	r3
90011e3e:	6863      	ldr	r3, [r4, #4]
90011e40:	2101      	movs	r1, #1
90011e42:	4605      	mov	r5, r0
90011e44:	4620      	mov	r0, r4
90011e46:	7299      	strb	r1, [r3, #10]
90011e48:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90011e4c:	f7ff ffb8 	bl	90011dc0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011e50:	4628      	mov	r0, r5
90011e52:	bd70      	pop	{r4, r5, r6, pc}

90011e54 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011e54:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011e58:	1a13      	subs	r3, r2, r0
90011e5a:	4258      	negs	r0, r3
90011e5c:	4158      	adcs	r0, r3
90011e5e:	4770      	bx	lr

90011e60 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011e60:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011e64:	1a9b      	subs	r3, r3, r2
90011e66:	2b00      	cmp	r3, #0
90011e68:	bfdc      	itt	le
90011e6a:	6882      	ldrle	r2, [r0, #8]
90011e6c:	189b      	addle	r3, r3, r2
90011e6e:	2b01      	cmp	r3, #1
90011e70:	bfcc      	ite	gt
90011e72:	2000      	movgt	r0, #0
90011e74:	2001      	movle	r0, #1
90011e76:	4770      	bx	lr

90011e78 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011e78:	6902      	ldr	r2, [r0, #16]
90011e7a:	6843      	ldr	r3, [r0, #4]
90011e7c:	2024      	movs	r0, #36	; 0x24
90011e7e:	fb00 3002 	mla	r0, r0, r2, r3
90011e82:	4770      	bx	lr

90011e84 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90011e84:	6803      	ldr	r3, [r0, #0]
90011e86:	691b      	ldr	r3, [r3, #16]
90011e88:	4718      	bx	r3

90011e8a <_ZN8touchgfx13DMA_Interface7executeEv>:
90011e8a:	2301      	movs	r3, #1
90011e8c:	b570      	push	{r4, r5, r6, lr}
90011e8e:	7203      	strb	r3, [r0, #8]
90011e90:	4604      	mov	r4, r0
90011e92:	6840      	ldr	r0, [r0, #4]
90011e94:	6803      	ldr	r3, [r0, #0]
90011e96:	699b      	ldr	r3, [r3, #24]
90011e98:	4798      	blx	r3
90011e9a:	6803      	ldr	r3, [r0, #0]
90011e9c:	4605      	mov	r5, r0
90011e9e:	2b40      	cmp	r3, #64	; 0x40
90011ea0:	d00c      	beq.n	90011ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011ea2:	d810      	bhi.n	90011ec6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90011ea4:	2b04      	cmp	r3, #4
90011ea6:	d01d      	beq.n	90011ee4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011ea8:	d804      	bhi.n	90011eb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011eaa:	2b01      	cmp	r3, #1
90011eac:	d006      	beq.n	90011ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011eae:	2b02      	cmp	r3, #2
90011eb0:	d02c      	beq.n	90011f0c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90011eb2:	bd70      	pop	{r4, r5, r6, pc}
90011eb4:	2b08      	cmp	r3, #8
90011eb6:	d01d      	beq.n	90011ef4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011eb8:	2b20      	cmp	r3, #32
90011eba:	d1fa      	bne.n	90011eb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011ebc:	6823      	ldr	r3, [r4, #0]
90011ebe:	4620      	mov	r0, r4
90011ec0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011ec2:	4798      	blx	r3
90011ec4:	e013      	b.n	90011eee <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90011ec6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90011eca:	d0f7      	beq.n	90011ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011ecc:	d804      	bhi.n	90011ed8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011ece:	2b80      	cmp	r3, #128	; 0x80
90011ed0:	d0f4      	beq.n	90011ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011ed2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90011ed6:	e7f0      	b.n	90011eba <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011ed8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90011edc:	d0ee      	beq.n	90011ebc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011ede:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90011ee2:	e7e5      	b.n	90011eb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90011ee4:	6823      	ldr	r3, [r4, #0]
90011ee6:	7f01      	ldrb	r1, [r0, #28]
90011ee8:	4620      	mov	r0, r4
90011eea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011eec:	4798      	blx	r3
90011eee:	6823      	ldr	r3, [r4, #0]
90011ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011ef2:	e006      	b.n	90011f02 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011ef4:	6823      	ldr	r3, [r4, #0]
90011ef6:	7f01      	ldrb	r1, [r0, #28]
90011ef8:	4620      	mov	r0, r4
90011efa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011efc:	4798      	blx	r3
90011efe:	6823      	ldr	r3, [r4, #0]
90011f00:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011f02:	4629      	mov	r1, r5
90011f04:	4620      	mov	r0, r4
90011f06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011f0a:	4718      	bx	r3
90011f0c:	6823      	ldr	r3, [r4, #0]
90011f0e:	4620      	mov	r0, r4
90011f10:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011f12:	4798      	blx	r3
90011f14:	e7f3      	b.n	90011efe <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011f16 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011f16:	4770      	bx	lr

90011f18 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011f18:	4770      	bx	lr

90011f1a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011f1a:	4770      	bx	lr

90011f1c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011f1c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011f20:	b510      	push	{r4, lr}
90011f22:	1ad2      	subs	r2, r2, r3
90011f24:	2a00      	cmp	r2, #0
90011f26:	bfdc      	itt	le
90011f28:	6884      	ldrle	r4, [r0, #8]
90011f2a:	1912      	addle	r2, r2, r4
90011f2c:	2a01      	cmp	r2, #1
90011f2e:	dd16      	ble.n	90011f5e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011f30:	6842      	ldr	r2, [r0, #4]
90011f32:	2424      	movs	r4, #36	; 0x24
90011f34:	fb04 2303 	mla	r3, r4, r3, r2
90011f38:	f101 0220 	add.w	r2, r1, #32
90011f3c:	f851 4b04 	ldr.w	r4, [r1], #4
90011f40:	4291      	cmp	r1, r2
90011f42:	f843 4b04 	str.w	r4, [r3], #4
90011f46:	d1f9      	bne.n	90011f3c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011f48:	780a      	ldrb	r2, [r1, #0]
90011f4a:	701a      	strb	r2, [r3, #0]
90011f4c:	68c3      	ldr	r3, [r0, #12]
90011f4e:	6882      	ldr	r2, [r0, #8]
90011f50:	f3bf 8f5b 	dmb	ish
90011f54:	3301      	adds	r3, #1
90011f56:	429a      	cmp	r2, r3
90011f58:	bfd8      	it	le
90011f5a:	1a9b      	suble	r3, r3, r2
90011f5c:	60c3      	str	r3, [r0, #12]
90011f5e:	bd10      	pop	{r4, pc}

90011f60 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011f60:	6903      	ldr	r3, [r0, #16]
90011f62:	6882      	ldr	r2, [r0, #8]
90011f64:	f3bf 8f5b 	dmb	ish
90011f68:	3301      	adds	r3, #1
90011f6a:	429a      	cmp	r2, r3
90011f6c:	bfd8      	it	le
90011f6e:	1a9b      	suble	r3, r3, r2
90011f70:	6103      	str	r3, [r0, #16]
90011f72:	4770      	bx	lr

90011f74 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90011f74:	b570      	push	{r4, r5, r6, lr}
90011f76:	4604      	mov	r4, r0
90011f78:	460e      	mov	r6, r1
90011f7a:	6860      	ldr	r0, [r4, #4]
90011f7c:	6803      	ldr	r3, [r0, #0]
90011f7e:	685b      	ldr	r3, [r3, #4]
90011f80:	4798      	blx	r3
90011f82:	2800      	cmp	r0, #0
90011f84:	d1f9      	bne.n	90011f7a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90011f86:	4d0d      	ldr	r5, [pc, #52]	; (90011fbc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011f88:	6828      	ldr	r0, [r5, #0]
90011f8a:	6803      	ldr	r3, [r0, #0]
90011f8c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011f8e:	4798      	blx	r3
90011f90:	f7ef fc88 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90011f94:	6828      	ldr	r0, [r5, #0]
90011f96:	2101      	movs	r1, #1
90011f98:	f7ff ff12 	bl	90011dc0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011f9c:	6860      	ldr	r0, [r4, #4]
90011f9e:	4631      	mov	r1, r6
90011fa0:	6803      	ldr	r3, [r0, #0]
90011fa2:	689b      	ldr	r3, [r3, #8]
90011fa4:	4798      	blx	r3
90011fa6:	6823      	ldr	r3, [r4, #0]
90011fa8:	4620      	mov	r0, r4
90011faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011fac:	4798      	blx	r3
90011fae:	6828      	ldr	r0, [r5, #0]
90011fb0:	6803      	ldr	r3, [r0, #0]
90011fb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011fb6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90011fb8:	4718      	bx	r3
90011fba:	bf00      	nop
90011fbc:	24039704 	.word	0x24039704

90011fc0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011fc0:	b508      	push	{r3, lr}
90011fc2:	f7ef fc61 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011fc6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011fca:	f7ef bc65 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011fce <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011fce:	b510      	push	{r4, lr}
90011fd0:	4604      	mov	r4, r0
90011fd2:	2114      	movs	r1, #20
90011fd4:	f015 fb6c 	bl	900276b0 <_ZdlPvj>
90011fd8:	4620      	mov	r0, r4
90011fda:	bd10      	pop	{r4, pc}

90011fdc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011fdc:	b570      	push	{r4, r5, r6, lr}
90011fde:	4604      	mov	r4, r0
90011fe0:	6840      	ldr	r0, [r0, #4]
90011fe2:	6803      	ldr	r3, [r0, #0]
90011fe4:	681b      	ldr	r3, [r3, #0]
90011fe6:	4798      	blx	r3
90011fe8:	4605      	mov	r5, r0
90011fea:	b930      	cbnz	r0, 90011ffa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011fec:	7a23      	ldrb	r3, [r4, #8]
90011fee:	b123      	cbz	r3, 90011ffa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011ff0:	6860      	ldr	r0, [r4, #4]
90011ff2:	6803      	ldr	r3, [r0, #0]
90011ff4:	695b      	ldr	r3, [r3, #20]
90011ff6:	4798      	blx	r3
90011ff8:	7225      	strb	r5, [r4, #8]
90011ffa:	6860      	ldr	r0, [r4, #4]
90011ffc:	6803      	ldr	r3, [r0, #0]
90011ffe:	681b      	ldr	r3, [r3, #0]
90012000:	4798      	blx	r3
90012002:	b928      	cbnz	r0, 90012010 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90012004:	6823      	ldr	r3, [r4, #0]
90012006:	4620      	mov	r0, r4
90012008:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001200a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001200e:	4718      	bx	r3
90012010:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012014:	f7ef bc4e 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90012018 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90012018:	b510      	push	{r4, lr}
9001201a:	6082      	str	r2, [r0, #8]
9001201c:	2200      	movs	r2, #0
9001201e:	4c03      	ldr	r4, [pc, #12]	; (9001202c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90012020:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012024:	e9c0 4100 	strd	r4, r1, [r0]
90012028:	bd10      	pop	{r4, pc}
9001202a:	bf00      	nop
9001202c:	9002b524 	.word	0x9002b524

90012030 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90012030:	6840      	ldr	r0, [r0, #4]
90012032:	6803      	ldr	r3, [r0, #0]
90012034:	681b      	ldr	r3, [r3, #0]
90012036:	4718      	bx	r3

90012038 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012038:	094a      	lsrs	r2, r1, #5
9001203a:	4b06      	ldr	r3, [pc, #24]	; (90012054 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
9001203c:	60c1      	str	r1, [r0, #12]
9001203e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90012042:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90012046:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001204a:	4313      	orrs	r3, r2
9001204c:	4319      	orrs	r1, r3
9001204e:	8201      	strh	r1, [r0, #16]
90012050:	4770      	bx	lr
90012052:	bf00      	nop
90012054:	fffff800 	.word	0xfffff800

90012058 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90012058:	f1a0 0008 	sub.w	r0, r0, #8
9001205c:	e7ec      	b.n	90012038 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
9001205e:	bf00      	nop

90012060 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90012060:	b508      	push	{r3, lr}
90012062:	4b05      	ldr	r3, [pc, #20]	; (90012078 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90012064:	6818      	ldr	r0, [r3, #0]
90012066:	6803      	ldr	r3, [r0, #0]
90012068:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
9001206c:	4798      	blx	r3
9001206e:	1e43      	subs	r3, r0, #1
90012070:	4258      	negs	r0, r3
90012072:	4158      	adcs	r0, r3
90012074:	bd08      	pop	{r3, pc}
90012076:	bf00      	nop
90012078:	24039704 	.word	0x24039704

9001207c <_ZN8touchgfx13PainterRGB565D1Ev>:
9001207c:	4770      	bx	lr

9001207e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
9001207e:	3808      	subs	r0, #8
90012080:	4770      	bx	lr

90012082 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90012082:	b430      	push	{r4, r5}
90012084:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90012088:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
9001208c:	8a02      	ldrh	r2, [r0, #16]
9001208e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90012092:	4629      	mov	r1, r5
90012094:	9202      	str	r2, [sp, #8]
90012096:	68c2      	ldr	r2, [r0, #12]
90012098:	4620      	mov	r0, r4
9001209a:	bc30      	pop	{r4, r5}
9001209c:	f7ef bee0 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

900120a0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
900120a0:	f7ef bed4 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

900120a4 <_ZN8touchgfx13PainterRGB565D0Ev>:
900120a4:	b510      	push	{r4, lr}
900120a6:	4604      	mov	r4, r0
900120a8:	2114      	movs	r1, #20
900120aa:	f015 fb01 	bl	900276b0 <_ZdlPvj>
900120ae:	4620      	mov	r0, r4
900120b0:	bd10      	pop	{r4, pc}

900120b2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900120b2:	f1a0 0008 	sub.w	r0, r0, #8
900120b6:	e7f5      	b.n	900120a4 <_ZN8touchgfx13PainterRGB565D0Ev>

900120b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900120b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900120ba:	6803      	ldr	r3, [r0, #0]
900120bc:	460d      	mov	r5, r1
900120be:	4604      	mov	r4, r0
900120c0:	4601      	mov	r1, r0
900120c2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900120c4:	a802      	add	r0, sp, #8
900120c6:	4798      	blx	r3
900120c8:	6828      	ldr	r0, [r5, #0]
900120ca:	6869      	ldr	r1, [r5, #4]
900120cc:	466b      	mov	r3, sp
900120ce:	c303      	stmia	r3!, {r0, r1}
900120d0:	4668      	mov	r0, sp
900120d2:	4619      	mov	r1, r3
900120d4:	f7fe ff84 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900120d8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900120da:	b188      	cbz	r0, 90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900120dc:	6803      	ldr	r3, [r0, #0]
900120de:	1d21      	adds	r1, r4, #4
900120e0:	68db      	ldr	r3, [r3, #12]
900120e2:	4798      	blx	r3
900120e4:	b160      	cbz	r0, 90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900120e6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900120ea:	2b00      	cmp	r3, #0
900120ec:	dd08      	ble.n	90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900120ee:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900120f2:	2d00      	cmp	r5, #0
900120f4:	dd04      	ble.n	90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900120f6:	4a2b      	ldr	r2, [pc, #172]	; (900121a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
900120f8:	7812      	ldrb	r2, [r2, #0]
900120fa:	b11a      	cbz	r2, 90012104 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
900120fc:	2a01      	cmp	r2, #1
900120fe:	d029      	beq.n	90012154 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012100:	b004      	add	sp, #16
90012102:	bd70      	pop	{r4, r5, r6, pc}
90012104:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012108:	441d      	add	r5, r3
9001210a:	b2ad      	uxth	r5, r5
9001210c:	b22e      	sxth	r6, r5
9001210e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012112:	42b3      	cmp	r3, r6
90012114:	daf4      	bge.n	90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012116:	6823      	ldr	r3, [r4, #0]
90012118:	4669      	mov	r1, sp
9001211a:	4620      	mov	r0, r4
9001211c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001211e:	4798      	blx	r3
90012120:	b940      	cbnz	r0, 90012134 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012122:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012126:	2b01      	cmp	r3, #1
90012128:	d004      	beq.n	90012134 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001212a:	3301      	adds	r3, #1
9001212c:	105b      	asrs	r3, r3, #1
9001212e:	f8ad 3006 	strh.w	r3, [sp, #6]
90012132:	e7f0      	b.n	90012116 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012134:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012138:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001213c:	4413      	add	r3, r2
9001213e:	b29b      	uxth	r3, r3
90012140:	441a      	add	r2, r3
90012142:	f8ad 3002 	strh.w	r3, [sp, #2]
90012146:	b212      	sxth	r2, r2
90012148:	4296      	cmp	r6, r2
9001214a:	dae0      	bge.n	9001210e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001214c:	1aeb      	subs	r3, r5, r3
9001214e:	f8ad 3006 	strh.w	r3, [sp, #6]
90012152:	e7dc      	b.n	9001210e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012154:	f8bd 5000 	ldrh.w	r5, [sp]
90012158:	441d      	add	r5, r3
9001215a:	b2ad      	uxth	r5, r5
9001215c:	b22e      	sxth	r6, r5
9001215e:	f9bd 3000 	ldrsh.w	r3, [sp]
90012162:	42b3      	cmp	r3, r6
90012164:	dacc      	bge.n	90012100 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012166:	6823      	ldr	r3, [r4, #0]
90012168:	4669      	mov	r1, sp
9001216a:	4620      	mov	r0, r4
9001216c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001216e:	4798      	blx	r3
90012170:	b940      	cbnz	r0, 90012184 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012172:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012176:	2b01      	cmp	r3, #1
90012178:	d004      	beq.n	90012184 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001217a:	3301      	adds	r3, #1
9001217c:	105b      	asrs	r3, r3, #1
9001217e:	f8ad 3004 	strh.w	r3, [sp, #4]
90012182:	e7f0      	b.n	90012166 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90012184:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90012188:	f8bd 3000 	ldrh.w	r3, [sp]
9001218c:	4413      	add	r3, r2
9001218e:	b29b      	uxth	r3, r3
90012190:	441a      	add	r2, r3
90012192:	f8ad 3000 	strh.w	r3, [sp]
90012196:	b212      	sxth	r2, r2
90012198:	4296      	cmp	r6, r2
9001219a:	dae0      	bge.n	9001215e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001219c:	1aeb      	subs	r3, r5, r3
9001219e:	f8ad 3004 	strh.w	r3, [sp, #4]
900121a2:	e7dc      	b.n	9001215e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900121a4:	240396fc 	.word	0x240396fc

900121a8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900121a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900121aa:	6803      	ldr	r3, [r0, #0]
900121ac:	4604      	mov	r4, r0
900121ae:	4601      	mov	r1, r0
900121b0:	4668      	mov	r0, sp
900121b2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900121b4:	4798      	blx	r3
900121b6:	2100      	movs	r1, #0
900121b8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900121bc:	4668      	mov	r0, sp
900121be:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900121c2:	9102      	str	r1, [sp, #8]
900121c4:	a902      	add	r1, sp, #8
900121c6:	f8ad 200c 	strh.w	r2, [sp, #12]
900121ca:	f8ad 300e 	strh.w	r3, [sp, #14]
900121ce:	f7fe ff07 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900121d2:	6823      	ldr	r3, [r4, #0]
900121d4:	4669      	mov	r1, sp
900121d6:	4620      	mov	r0, r4
900121d8:	691b      	ldr	r3, [r3, #16]
900121da:	4798      	blx	r3
900121dc:	b004      	add	sp, #16
900121de:	bd10      	pop	{r4, pc}

900121e0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900121e0:	2101      	movs	r1, #1
900121e2:	2200      	movs	r2, #0
900121e4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900121e8:	490a      	ldr	r1, [pc, #40]	; (90012214 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900121ea:	8082      	strh	r2, [r0, #4]
900121ec:	6001      	str	r1, [r0, #0]
900121ee:	21ff      	movs	r1, #255	; 0xff
900121f0:	80c2      	strh	r2, [r0, #6]
900121f2:	8102      	strh	r2, [r0, #8]
900121f4:	8142      	strh	r2, [r0, #10]
900121f6:	8182      	strh	r2, [r0, #12]
900121f8:	81c2      	strh	r2, [r0, #14]
900121fa:	8202      	strh	r2, [r0, #16]
900121fc:	8242      	strh	r2, [r0, #18]
900121fe:	61c2      	str	r2, [r0, #28]
90012200:	8402      	strh	r2, [r0, #32]
90012202:	8442      	strh	r2, [r0, #34]	; 0x22
90012204:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90012208:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
9001220c:	6282      	str	r2, [r0, #40]	; 0x28
9001220e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012212:	4770      	bx	lr
90012214:	9002b580 	.word	0x9002b580

90012218 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90012218:	f101 0364 	add.w	r3, r1, #100	; 0x64
9001221c:	4602      	mov	r2, r0
9001221e:	cb03      	ldmia	r3!, {r0, r1}
90012220:	6010      	str	r0, [r2, #0]
90012222:	4610      	mov	r0, r2
90012224:	6051      	str	r1, [r2, #4]
90012226:	4770      	bx	lr

90012228 <_ZN8touchgfx4LineD1Ev>:
90012228:	4770      	bx	lr

9001222a <_ZN8touchgfx4LineD0Ev>:
9001222a:	b510      	push	{r4, lr}
9001222c:	4604      	mov	r4, r0
9001222e:	2170      	movs	r1, #112	; 0x70
90012230:	f015 fa3e 	bl	900276b0 <_ZdlPvj>
90012234:	4620      	mov	r0, r4
90012236:	bd10      	pop	{r4, pc}

90012238 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90012238:	b507      	push	{r0, r1, r2, lr}
9001223a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
9001223e:	ab01      	add	r3, sp, #4
90012240:	6809      	ldr	r1, [r1, #0]
90012242:	6800      	ldr	r0, [r0, #0]
90012244:	f005 fb64 	bl	90017910 <_ZN8touchgfx6muldivElllRl>
90012248:	b003      	add	sp, #12
9001224a:	f85d fb04 	ldr.w	pc, [sp], #4

9001224e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
9001224e:	6800      	ldr	r0, [r0, #0]
90012250:	2800      	cmp	r0, #0
90012252:	bfb9      	ittee	lt
90012254:	2320      	movlt	r3, #32
90012256:	fb90 f0f3 	sdivlt	r0, r0, r3
9001225a:	301f      	addge	r0, #31
9001225c:	1140      	asrge	r0, r0, #5
9001225e:	4770      	bx	lr

90012260 <_ZNK8touchgfx4Line17invalidateContentEv>:
90012260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012264:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90012268:	b089      	sub	sp, #36	; 0x24
9001226a:	4604      	mov	r4, r0
9001226c:	b353      	cbz	r3, 900122c4 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
9001226e:	6803      	ldr	r3, [r0, #0]
90012270:	4601      	mov	r1, r0
90012272:	a802      	add	r0, sp, #8
90012274:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90012276:	4798      	blx	r3
90012278:	2220      	movs	r2, #32
9001227a:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
9001227e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012280:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90012282:	f8d4 b000 	ldr.w	fp, [r4]
90012286:	fb9a f0f2 	sdiv	r0, sl, r2
9001228a:	fb91 f5f2 	sdiv	r5, r1, r2
9001228e:	fb93 f6f2 	sdiv	r6, r3, r2
90012292:	1b40      	subs	r0, r0, r5
90012294:	0076      	lsls	r6, r6, #1
90012296:	2800      	cmp	r0, #0
90012298:	bfb8      	it	lt
9001229a:	4240      	neglt	r0, r0
9001229c:	4286      	cmp	r6, r0
9001229e:	dc0c      	bgt.n	900122ba <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
900122a0:	6b25      	ldr	r5, [r4, #48]	; 0x30
900122a2:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
900122a6:	fb95 f0f2 	sdiv	r0, r5, r2
900122aa:	fb98 f7f2 	sdiv	r7, r8, r2
900122ae:	1bc0      	subs	r0, r0, r7
900122b0:	2800      	cmp	r0, #0
900122b2:	bfb8      	it	lt
900122b4:	4240      	neglt	r0, r0
900122b6:	4286      	cmp	r6, r0
900122b8:	dd07      	ble.n	900122ca <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
900122ba:	f8db 3010 	ldr.w	r3, [fp, #16]
900122be:	a902      	add	r1, sp, #8
900122c0:	4620      	mov	r0, r4
900122c2:	4798      	blx	r3
900122c4:	b009      	add	sp, #36	; 0x24
900122c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900122ca:	eb01 060a 	add.w	r6, r1, sl
900122ce:	2002      	movs	r0, #2
900122d0:	eb08 0705 	add.w	r7, r8, r5
900122d4:	3301      	adds	r3, #1
900122d6:	f10d 0920 	add.w	r9, sp, #32
900122da:	9101      	str	r1, [sp, #4]
900122dc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
900122e0:	fb96 f6f0 	sdiv	r6, r6, r0
900122e4:	fb97 f7f0 	sdiv	r7, r7, r0
900122e8:	4103      	asrs	r3, r0
900122ea:	b236      	sxth	r6, r6
900122ec:	b23f      	sxth	r7, r7
900122ee:	f849 3d08 	str.w	r3, [r9, #-8]!
900122f2:	4648      	mov	r0, r9
900122f4:	fb96 f6f2 	sdiv	r6, r6, r2
900122f8:	fb97 f7f2 	sdiv	r7, r7, r2
900122fc:	f7ff ffa7 	bl	9001224e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012300:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012304:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90012308:	fa1f fe87 	uxth.w	lr, r7
9001230c:	9901      	ldr	r1, [sp, #4]
9001230e:	fa1f fc86 	uxth.w	ip, r6
90012312:	4293      	cmp	r3, r2
90012314:	b280      	uxth	r0, r0
90012316:	eba1 0a0a 	sub.w	sl, r1, sl
9001231a:	da54      	bge.n	900123c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
9001231c:	ebac 0100 	sub.w	r1, ip, r0
90012320:	f1ba 0f00 	cmp.w	sl, #0
90012324:	4460      	add	r0, ip
90012326:	f9bd a008 	ldrsh.w	sl, [sp, #8]
9001232a:	b289      	uxth	r1, r1
9001232c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90012330:	b280      	uxth	r0, r0
90012332:	b20e      	sxth	r6, r1
90012334:	da29      	bge.n	9001238a <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90012336:	eba8 0505 	sub.w	r5, r8, r5
9001233a:	2d00      	cmp	r5, #0
9001233c:	da2a      	bge.n	90012394 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
9001233e:	fa1f f88a 	uxth.w	r8, sl
90012342:	f8ad a010 	strh.w	sl, [sp, #16]
90012346:	fa1f f58c 	uxth.w	r5, ip
9001234a:	f8ad c012 	strh.w	ip, [sp, #18]
9001234e:	eba0 0008 	sub.w	r0, r0, r8
90012352:	4443      	add	r3, r8
90012354:	f8ad 6018 	strh.w	r6, [sp, #24]
90012358:	f8ad 0014 	strh.w	r0, [sp, #20]
9001235c:	1a59      	subs	r1, r3, r1
9001235e:	ebae 0005 	sub.w	r0, lr, r5
90012362:	f8ad 701a 	strh.w	r7, [sp, #26]
90012366:	f8ad 101c 	strh.w	r1, [sp, #28]
9001236a:	f8ad 0016 	strh.w	r0, [sp, #22]
9001236e:	442a      	add	r2, r5
90012370:	eba2 0e0e 	sub.w	lr, r2, lr
90012374:	f8ad e01e 	strh.w	lr, [sp, #30]
90012378:	f8db 3010 	ldr.w	r3, [fp, #16]
9001237c:	a904      	add	r1, sp, #16
9001237e:	4620      	mov	r0, r4
90012380:	4798      	blx	r3
90012382:	6823      	ldr	r3, [r4, #0]
90012384:	4649      	mov	r1, r9
90012386:	691b      	ldr	r3, [r3, #16]
90012388:	e79a      	b.n	900122c0 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
9001238a:	d003      	beq.n	90012394 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
9001238c:	eba8 0505 	sub.w	r5, r8, r5
90012390:	2d00      	cmp	r5, #0
90012392:	dcd4      	bgt.n	9001233e <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90012394:	fa1f f88a 	uxth.w	r8, sl
90012398:	f8ad 6010 	strh.w	r6, [sp, #16]
9001239c:	fa1f f58c 	uxth.w	r5, ip
900123a0:	f8ad c012 	strh.w	ip, [sp, #18]
900123a4:	4443      	add	r3, r8
900123a6:	eba0 0008 	sub.w	r0, r0, r8
900123aa:	f8ad a018 	strh.w	sl, [sp, #24]
900123ae:	1a59      	subs	r1, r3, r1
900123b0:	ebae 0305 	sub.w	r3, lr, r5
900123b4:	f8ad 701a 	strh.w	r7, [sp, #26]
900123b8:	f8ad 1014 	strh.w	r1, [sp, #20]
900123bc:	f8ad 3016 	strh.w	r3, [sp, #22]
900123c0:	f8ad 001c 	strh.w	r0, [sp, #28]
900123c4:	e7d3      	b.n	9001236e <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
900123c6:	ebae 0100 	sub.w	r1, lr, r0
900123ca:	f1ba 0f00 	cmp.w	sl, #0
900123ce:	4470      	add	r0, lr
900123d0:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
900123d4:	b289      	uxth	r1, r1
900123d6:	f9bd e008 	ldrsh.w	lr, [sp, #8]
900123da:	b280      	uxth	r0, r0
900123dc:	b20f      	sxth	r7, r1
900123de:	da20      	bge.n	90012422 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
900123e0:	eba8 0505 	sub.w	r5, r8, r5
900123e4:	2d00      	cmp	r5, #0
900123e6:	da21      	bge.n	9001242c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
900123e8:	fa1f f88e 	uxth.w	r8, lr
900123ec:	f8ad e010 	strh.w	lr, [sp, #16]
900123f0:	fa1f f58a 	uxth.w	r5, sl
900123f4:	f8ad a012 	strh.w	sl, [sp, #18]
900123f8:	4443      	add	r3, r8
900123fa:	ebac 0e08 	sub.w	lr, ip, r8
900123fe:	442a      	add	r2, r5
90012400:	1b40      	subs	r0, r0, r5
90012402:	eba3 0c0c 	sub.w	ip, r3, ip
90012406:	f8ad e014 	strh.w	lr, [sp, #20]
9001240a:	1a51      	subs	r1, r2, r1
9001240c:	f8ad 0016 	strh.w	r0, [sp, #22]
90012410:	f8ad 6018 	strh.w	r6, [sp, #24]
90012414:	f8ad 701a 	strh.w	r7, [sp, #26]
90012418:	f8ad c01c 	strh.w	ip, [sp, #28]
9001241c:	f8ad 101e 	strh.w	r1, [sp, #30]
90012420:	e7aa      	b.n	90012378 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90012422:	d003      	beq.n	9001242c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012424:	eba8 0505 	sub.w	r5, r8, r5
90012428:	2d00      	cmp	r5, #0
9001242a:	dcdd      	bgt.n	900123e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
9001242c:	fa1f f58e 	uxth.w	r5, lr
90012430:	f8ad 7012 	strh.w	r7, [sp, #18]
90012434:	fa1f f88a 	uxth.w	r8, sl
90012438:	f8ad e010 	strh.w	lr, [sp, #16]
9001243c:	442b      	add	r3, r5
9001243e:	ebac 0705 	sub.w	r7, ip, r5
90012442:	4442      	add	r2, r8
90012444:	eba0 0008 	sub.w	r0, r0, r8
90012448:	eba3 0c0c 	sub.w	ip, r3, ip
9001244c:	f8ad 7014 	strh.w	r7, [sp, #20]
90012450:	1a51      	subs	r1, r2, r1
90012452:	f8ad 6018 	strh.w	r6, [sp, #24]
90012456:	f8ad a01a 	strh.w	sl, [sp, #26]
9001245a:	f8ad 1016 	strh.w	r1, [sp, #22]
9001245e:	f8ad c01c 	strh.w	ip, [sp, #28]
90012462:	f8ad 001e 	strh.w	r0, [sp, #30]
90012466:	e787      	b.n	90012378 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90012468 <_ZN8touchgfx7CWRUtil4sineEi>:
90012468:	f44f 73b4 	mov.w	r3, #360	; 0x168
9001246c:	fb90 f2f3 	sdiv	r2, r0, r3
90012470:	fb02 0013 	mls	r0, r2, r3, r0
90012474:	2800      	cmp	r0, #0
90012476:	bfb8      	it	lt
90012478:	18c0      	addlt	r0, r0, r3
9001247a:	4b0a      	ldr	r3, [pc, #40]	; (900124a4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
9001247c:	285a      	cmp	r0, #90	; 0x5a
9001247e:	dc02      	bgt.n	90012486 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90012480:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012484:	4770      	bx	lr
90012486:	28b4      	cmp	r0, #180	; 0xb4
90012488:	dc02      	bgt.n	90012490 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
9001248a:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
9001248e:	e7f7      	b.n	90012480 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90012490:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90012494:	bfd4      	ite	le
90012496:	38b4      	suble	r0, #180	; 0xb4
90012498:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001249c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900124a0:	4240      	negs	r0, r0
900124a2:	4770      	bx	lr
900124a4:	9002b64c 	.word	0x9002b64c

900124a8 <_ZN8touchgfx7CWRUtil5isqrtEm>:
900124a8:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
900124ac:	f04f 0300 	mov.w	r3, #0
900124b0:	bf2c      	ite	cs
900124b2:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
900124b6:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
900124ba:	1899      	adds	r1, r3, r2
900124bc:	4288      	cmp	r0, r1
900124be:	bf24      	itt	cs
900124c0:	1853      	addcs	r3, r2, r1
900124c2:	1a40      	subcs	r0, r0, r1
900124c4:	0892      	lsrs	r2, r2, #2
900124c6:	ea4f 0353 	mov.w	r3, r3, lsr #1
900124ca:	d1f6      	bne.n	900124ba <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
900124cc:	4618      	mov	r0, r3
900124ce:	4770      	bx	lr

900124d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
900124d0:	b510      	push	{r4, lr}
900124d2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
900124d6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
900124da:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
900124de:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
900124e2:	139b      	asrs	r3, r3, #14
900124e4:	13a4      	asrs	r4, r4, #14
900124e6:	429c      	cmp	r4, r3
900124e8:	bfb8      	it	lt
900124ea:	461c      	movlt	r4, r3
900124ec:	2c01      	cmp	r4, #1
900124ee:	dd07      	ble.n	90012500 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
900124f0:	fb91 f1f4 	sdiv	r1, r1, r4
900124f4:	fb90 f0f4 	sdiv	r0, r0, r4
900124f8:	f7ff ffea 	bl	900124d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900124fc:	4360      	muls	r0, r4
900124fe:	bd10      	pop	{r4, pc}
90012500:	4340      	muls	r0, r0
90012502:	fb01 0001 	mla	r0, r1, r1, r0
90012506:	f7ff ffcf 	bl	900124a8 <_ZN8touchgfx7CWRUtil5isqrtEm>
9001250a:	e7f8      	b.n	900124fe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

9001250c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
9001250c:	2800      	cmp	r0, #0
9001250e:	b508      	push	{r3, lr}
90012510:	da05      	bge.n	9001251e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90012512:	4240      	negs	r0, r0
90012514:	f7ff fffa 	bl	9001250c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012518:	4240      	negs	r0, r0
9001251a:	b240      	sxtb	r0, r0
9001251c:	bd08      	pop	{r3, pc}
9001251e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90012522:	dc11      	bgt.n	90012548 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90012524:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90012528:	dd09      	ble.n	9001253e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001252a:	4340      	muls	r0, r0
9001252c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
90012530:	f7ff ffba 	bl	900124a8 <_ZN8touchgfx7CWRUtil5isqrtEm>
90012534:	f7ff ffea 	bl	9001250c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012538:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
9001253c:	e7ed      	b.n	9001251a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
9001253e:	3003      	adds	r0, #3
90012540:	4b02      	ldr	r3, [pc, #8]	; (9001254c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
90012542:	10c0      	asrs	r0, r0, #3
90012544:	5618      	ldrsb	r0, [r3, r0]
90012546:	e7e9      	b.n	9001251c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
90012548:	2000      	movs	r0, #0
9001254a:	e7e7      	b.n	9001251c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
9001254c:	9002b5f0 	.word	0x9002b5f0

90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
90012550:	4281      	cmp	r1, r0
90012552:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012554:	460c      	mov	r4, r1
90012556:	4615      	mov	r5, r2
90012558:	dd07      	ble.n	9001256a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
9001255a:	4601      	mov	r1, r0
9001255c:	4620      	mov	r0, r4
9001255e:	f7ff fff7 	bl	90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012562:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
90012566:	b003      	add	sp, #12
90012568:	bd30      	pop	{r4, r5, pc}
9001256a:	f7ff ffb1 	bl	900124d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001256e:	6028      	str	r0, [r5, #0]
90012570:	2800      	cmp	r0, #0
90012572:	d0f8      	beq.n	90012566 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
90012574:	4602      	mov	r2, r0
90012576:	ab01      	add	r3, sp, #4
90012578:	f44f 6180 	mov.w	r1, #1024	; 0x400
9001257c:	4620      	mov	r0, r4
9001257e:	f005 f9c7 	bl	90017910 <_ZN8touchgfx6muldivElllRl>
90012582:	f7ff ffc3 	bl	9001250c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012586:	e7ee      	b.n	90012566 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

90012588 <_ZN8touchgfx4LineC1Ev>:
90012588:	b510      	push	{r4, lr}
9001258a:	4604      	mov	r4, r0
9001258c:	f7ff fe28 	bl	900121e0 <_ZN8touchgfx12CanvasWidgetC1Ev>
90012590:	4b0c      	ldr	r3, [pc, #48]	; (900125c4 <_ZN8touchgfx4LineC1Ev+0x3c>)
90012592:	2220      	movs	r2, #32
90012594:	4620      	mov	r0, r4
90012596:	6023      	str	r3, [r4, #0]
90012598:	2300      	movs	r3, #0
9001259a:	63e2      	str	r2, [r4, #60]	; 0x3c
9001259c:	2212      	movs	r2, #18
9001259e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900125a2:	66e2      	str	r2, [r4, #108]	; 0x6c
900125a4:	60a3      	str	r3, [r4, #8]
900125a6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
900125aa:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
900125ae:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
900125b2:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
900125b6:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
900125ba:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
900125be:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
900125c2:	bd10      	pop	{r4, pc}
900125c4:	9002b70c 	.word	0x9002b70c

900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
900125c8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900125cc:	6b47      	ldr	r7, [r0, #52]	; 0x34
900125ce:	4604      	mov	r4, r0
900125d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900125d2:	6b85      	ldr	r5, [r0, #56]	; 0x38
900125d4:	6b02      	ldr	r2, [r0, #48]	; 0x30
900125d6:	1aff      	subs	r7, r7, r3
900125d8:	eba5 0502 	sub.w	r5, r5, r2
900125dc:	d142      	bne.n	90012664 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
900125de:	b955      	cbnz	r5, 900125f6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
900125e0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
900125e4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
900125e8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
900125ec:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
900125f0:	b002      	add	sp, #8
900125f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900125f6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
900125fa:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
900125fe:	4629      	mov	r1, r5
90012600:	2502      	movs	r5, #2
90012602:	4642      	mov	r2, r8
90012604:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012606:	f005 f9a2 	bl	9001794e <_ZN8touchgfx6muldivElll>
9001260a:	4642      	mov	r2, r8
9001260c:	4639      	mov	r1, r7
9001260e:	fb90 f6f5 	sdiv	r6, r0, r5
90012612:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012614:	f005 f99b 	bl	9001794e <_ZN8touchgfx6muldivElll>
90012618:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
9001261c:	fb90 f5f5 	sdiv	r5, r0, r5
90012620:	f1b9 0f00 	cmp.w	r9, #0
90012624:	d067      	beq.n	900126f6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90012626:	f1b9 0f02 	cmp.w	r9, #2
9001262a:	d878      	bhi.n	9001271e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001262c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001262e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90012630:	1b93      	subs	r3, r2, r6
90012632:	4432      	add	r2, r6
90012634:	1b5b      	subs	r3, r3, r5
90012636:	1b52      	subs	r2, r2, r5
90012638:	6463      	str	r3, [r4, #68]	; 0x44
9001263a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001263c:	6522      	str	r2, [r4, #80]	; 0x50
9001263e:	18e9      	adds	r1, r5, r3
90012640:	1b5b      	subs	r3, r3, r5
90012642:	1b89      	subs	r1, r1, r6
90012644:	1b9b      	subs	r3, r3, r6
90012646:	6561      	str	r1, [r4, #84]	; 0x54
90012648:	1b81      	subs	r1, r0, r6
9001264a:	4430      	add	r0, r6
9001264c:	4429      	add	r1, r5
9001264e:	4428      	add	r0, r5
90012650:	64a1      	str	r1, [r4, #72]	; 0x48
90012652:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012654:	64e0      	str	r0, [r4, #76]	; 0x4c
90012656:	186f      	adds	r7, r5, r1
90012658:	1b49      	subs	r1, r1, r5
9001265a:	4437      	add	r7, r6
9001265c:	4431      	add	r1, r6
9001265e:	65a7      	str	r7, [r4, #88]	; 0x58
90012660:	65e1      	str	r1, [r4, #92]	; 0x5c
90012662:	e05b      	b.n	9001271c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90012664:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
90012668:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
9001266c:	2d00      	cmp	r5, #0
9001266e:	d0c6      	beq.n	900125fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012670:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90012674:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
90012678:	fb93 f2f8 	sdiv	r2, r3, r8
9001267c:	fb08 3312 	mls	r3, r8, r2, r3
90012680:	b353      	cbz	r3, 900126d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90012682:	fb98 f2f3 	sdiv	r2, r8, r3
90012686:	fb03 8812 	mls	r8, r3, r2, r8
9001268a:	f1b8 0f00 	cmp.w	r8, #0
9001268e:	d1f3      	bne.n	90012678 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90012690:	2b01      	cmp	r3, #1
90012692:	f24b 5104 	movw	r1, #46340	; 0xb504
90012696:	bf1c      	itt	ne
90012698:	fb97 f7f3 	sdivne	r7, r7, r3
9001269c:	fb95 f5f3 	sdivne	r5, r5, r3
900126a0:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
900126a4:	4608      	mov	r0, r1
900126a6:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
900126aa:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
900126ae:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
900126b2:	428b      	cmp	r3, r1
900126b4:	dd01      	ble.n	900126ba <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
900126b6:	428a      	cmp	r2, r1
900126b8:	dc10      	bgt.n	900126dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
900126ba:	fb90 f3f3 	sdiv	r3, r0, r3
900126be:	fb90 f2f2 	sdiv	r2, r0, r2
900126c2:	4293      	cmp	r3, r2
900126c4:	bfa8      	it	ge
900126c6:	4613      	movge	r3, r2
900126c8:	435f      	muls	r7, r3
900126ca:	435d      	muls	r5, r3
900126cc:	4629      	mov	r1, r5
900126ce:	4638      	mov	r0, r7
900126d0:	f7ff fefe 	bl	900124d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900126d4:	4680      	mov	r8, r0
900126d6:	e792      	b.n	900125fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900126d8:	4643      	mov	r3, r8
900126da:	e7d9      	b.n	90012690 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
900126dc:	fb93 f3f1 	sdiv	r3, r3, r1
900126e0:	fb92 f2f1 	sdiv	r2, r2, r1
900126e4:	4293      	cmp	r3, r2
900126e6:	bfcc      	ite	gt
900126e8:	3301      	addgt	r3, #1
900126ea:	1c53      	addle	r3, r2, #1
900126ec:	fb97 f7f3 	sdiv	r7, r7, r3
900126f0:	fb95 f5f3 	sdiv	r5, r5, r3
900126f4:	e7ea      	b.n	900126cc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
900126f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900126f8:	6b60      	ldr	r0, [r4, #52]	; 0x34
900126fa:	1b93      	subs	r3, r2, r6
900126fc:	4432      	add	r2, r6
900126fe:	6463      	str	r3, [r4, #68]	; 0x44
90012700:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012702:	6522      	str	r2, [r4, #80]	; 0x50
90012704:	18e9      	adds	r1, r5, r3
90012706:	1b5b      	subs	r3, r3, r5
90012708:	6561      	str	r1, [r4, #84]	; 0x54
9001270a:	1b81      	subs	r1, r0, r6
9001270c:	4430      	add	r0, r6
9001270e:	64a1      	str	r1, [r4, #72]	; 0x48
90012710:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012712:	64e0      	str	r0, [r4, #76]	; 0x4c
90012714:	186f      	adds	r7, r5, r1
90012716:	1b49      	subs	r1, r1, r5
90012718:	65a7      	str	r7, [r4, #88]	; 0x58
9001271a:	65e1      	str	r1, [r4, #92]	; 0x5c
9001271c:	6623      	str	r3, [r4, #96]	; 0x60
9001271e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90012720:	f104 0148 	add.w	r1, r4, #72	; 0x48
90012724:	6d63      	ldr	r3, [r4, #84]	; 0x54
90012726:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001272a:	9200      	str	r2, [sp, #0]
9001272c:	9301      	str	r3, [sp, #4]
9001272e:	680f      	ldr	r7, [r1, #0]
90012730:	3104      	adds	r1, #4
90012732:	9800      	ldr	r0, [sp, #0]
90012734:	42ba      	cmp	r2, r7
90012736:	bfa8      	it	ge
90012738:	463a      	movge	r2, r7
9001273a:	4287      	cmp	r7, r0
9001273c:	9801      	ldr	r0, [sp, #4]
9001273e:	bfc8      	it	gt
90012740:	9700      	strgt	r7, [sp, #0]
90012742:	68cf      	ldr	r7, [r1, #12]
90012744:	42bb      	cmp	r3, r7
90012746:	bfa8      	it	ge
90012748:	463b      	movge	r3, r7
9001274a:	4287      	cmp	r7, r0
9001274c:	bfc8      	it	gt
9001274e:	9701      	strgt	r7, [sp, #4]
90012750:	458c      	cmp	ip, r1
90012752:	d1ec      	bne.n	9001272e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90012754:	2720      	movs	r7, #32
90012756:	4668      	mov	r0, sp
90012758:	fb92 f8f7 	sdiv	r8, r2, r7
9001275c:	fb93 f7f7 	sdiv	r7, r3, r7
90012760:	f7ff fd75 	bl	9001224e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012764:	4682      	mov	sl, r0
90012766:	a801      	add	r0, sp, #4
90012768:	f7ff fd71 	bl	9001224e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
9001276c:	ebaa 0208 	sub.w	r2, sl, r8
90012770:	1bc0      	subs	r0, r0, r7
90012772:	f1b9 0f01 	cmp.w	r9, #1
90012776:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
9001277a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
9001277e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
90012782:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
90012786:	f47f af33 	bne.w	900125f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
9001278a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001278c:	6b61      	ldr	r1, [r4, #52]	; 0x34
9001278e:	1b83      	subs	r3, r0, r6
90012790:	6463      	str	r3, [r4, #68]	; 0x44
90012792:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012794:	18ea      	adds	r2, r5, r3
90012796:	6562      	str	r2, [r4, #84]	; 0x54
90012798:	1b8a      	subs	r2, r1, r6
9001279a:	4431      	add	r1, r6
9001279c:	4406      	add	r6, r0
9001279e:	64a2      	str	r2, [r4, #72]	; 0x48
900127a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900127a2:	64e1      	str	r1, [r4, #76]	; 0x4c
900127a4:	18af      	adds	r7, r5, r2
900127a6:	1b52      	subs	r2, r2, r5
900127a8:	1b5d      	subs	r5, r3, r5
900127aa:	6526      	str	r6, [r4, #80]	; 0x50
900127ac:	65a7      	str	r7, [r4, #88]	; 0x58
900127ae:	65e2      	str	r2, [r4, #92]	; 0x5c
900127b0:	6625      	str	r5, [r4, #96]	; 0x60
900127b2:	e71d      	b.n	900125f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

900127b4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
900127b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900127b6:	428b      	cmp	r3, r1
900127b8:	d102      	bne.n	900127c0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
900127ba:	6b03      	ldr	r3, [r0, #48]	; 0x30
900127bc:	4293      	cmp	r3, r2
900127be:	d003      	beq.n	900127c8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
900127c0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
900127c4:	f7ff bf00 	b.w	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
900127c8:	4770      	bx	lr

900127ca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
900127ca:	6b43      	ldr	r3, [r0, #52]	; 0x34
900127cc:	428b      	cmp	r3, r1
900127ce:	d102      	bne.n	900127d6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
900127d0:	6b83      	ldr	r3, [r0, #56]	; 0x38
900127d2:	4293      	cmp	r3, r2
900127d4:	d003      	beq.n	900127de <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
900127d6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
900127da:	f7ff bef5 	b.w	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
900127de:	4770      	bx	lr

900127e0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
900127e0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
900127e4:	f7ff bef0 	b.w	900125c8 <_ZN8touchgfx4Line17updateCachedShapeEv>

900127e8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
900127e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900127ec:	b0a0      	sub	sp, #128	; 0x80
900127ee:	4604      	mov	r4, r0
900127f0:	460a      	mov	r2, r1
900127f2:	4601      	mov	r1, r0
900127f4:	a804      	add	r0, sp, #16
900127f6:	f014 fcfb 	bl	900271f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
900127fa:	2300      	movs	r3, #0
900127fc:	9301      	str	r3, [sp, #4]
900127fe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90012802:	2b01      	cmp	r3, #1
90012804:	d17c      	bne.n	90012900 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90012806:	6c60      	ldr	r0, [r4, #68]	; 0x44
90012808:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001280a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001280c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001280e:	1ac0      	subs	r0, r0, r3
90012810:	eba1 0102 	sub.w	r1, r1, r2
90012814:	d437      	bmi.n	90012886 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90012816:	2900      	cmp	r1, #0
90012818:	aa01      	add	r2, sp, #4
9001281a:	db2e      	blt.n	9001287a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001281c:	f7ff fe98 	bl	90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012820:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90012824:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012826:	a804      	add	r0, sp, #16
90012828:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001282a:	f014 fe61 	bl	900274f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001282e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90012830:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90012832:	a804      	add	r0, sp, #16
90012834:	f014 fea9 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012838:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001283a:	2db3      	cmp	r5, #179	; 0xb3
9001283c:	dc33      	bgt.n	900128a6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001283e:	eba6 0805 	sub.w	r8, r6, r5
90012842:	4640      	mov	r0, r8
90012844:	f7ff fe10 	bl	90012468 <_ZN8touchgfx7CWRUtil4sineEi>
90012848:	a902      	add	r1, sp, #8
9001284a:	9002      	str	r0, [sp, #8]
9001284c:	a801      	add	r0, sp, #4
9001284e:	f7ff fcf3 	bl	90012238 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012852:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012854:	1847      	adds	r7, r0, r1
90012856:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
9001285a:	f7ff fe05 	bl	90012468 <_ZN8touchgfx7CWRUtil4sineEi>
9001285e:	a903      	add	r1, sp, #12
90012860:	9003      	str	r0, [sp, #12]
90012862:	a801      	add	r0, sp, #4
90012864:	f7ff fce8 	bl	90012238 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012868:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001286a:	4639      	mov	r1, r7
9001286c:	1a12      	subs	r2, r2, r0
9001286e:	a804      	add	r0, sp, #16
90012870:	f014 fe8b 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012874:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
90012876:	441d      	add	r5, r3
90012878:	e7df      	b.n	9001283a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
9001287a:	4249      	negs	r1, r1
9001287c:	f7ff fe68 	bl	90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012880:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
90012884:	e7ce      	b.n	90012824 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90012886:	2900      	cmp	r1, #0
90012888:	f1c0 0000 	rsb	r0, r0, #0
9001288c:	aa01      	add	r2, sp, #4
9001288e:	db04      	blt.n	9001289a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90012890:	f7ff fe5e 	bl	90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012894:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
90012898:	e7c4      	b.n	90012824 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
9001289a:	4249      	negs	r1, r1
9001289c:	f7ff fe58 	bl	90012550 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900128a0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
900128a4:	e7be      	b.n	90012824 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900128a6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
900128a8:	a804      	add	r0, sp, #16
900128aa:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
900128ac:	f014 fe6d 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900128b0:	6e22      	ldr	r2, [r4, #96]	; 0x60
900128b2:	6d21      	ldr	r1, [r4, #80]	; 0x50
900128b4:	a804      	add	r0, sp, #16
900128b6:	f014 fe68 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900128ba:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
900128bc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
900128c0:	2d00      	cmp	r5, #0
900128c2:	dd31      	ble.n	90012928 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
900128c4:	eb05 0806 	add.w	r8, r5, r6
900128c8:	4640      	mov	r0, r8
900128ca:	f7ff fdcd 	bl	90012468 <_ZN8touchgfx7CWRUtil4sineEi>
900128ce:	a902      	add	r1, sp, #8
900128d0:	9002      	str	r0, [sp, #8]
900128d2:	a801      	add	r0, sp, #4
900128d4:	f7ff fcb0 	bl	90012238 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900128d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900128da:	1847      	adds	r7, r0, r1
900128dc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900128e0:	f7ff fdc2 	bl	90012468 <_ZN8touchgfx7CWRUtil4sineEi>
900128e4:	a903      	add	r1, sp, #12
900128e6:	9003      	str	r0, [sp, #12]
900128e8:	a801      	add	r0, sp, #4
900128ea:	f7ff fca5 	bl	90012238 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900128ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
900128f0:	4639      	mov	r1, r7
900128f2:	1a12      	subs	r2, r2, r0
900128f4:	a804      	add	r0, sp, #16
900128f6:	f014 fe48 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900128fa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900128fc:	1aed      	subs	r5, r5, r3
900128fe:	e7df      	b.n	900128c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90012900:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012902:	a804      	add	r0, sp, #16
90012904:	6c61      	ldr	r1, [r4, #68]	; 0x44
90012906:	f014 fdf3 	bl	900274f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001290a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001290c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001290e:	a804      	add	r0, sp, #16
90012910:	f014 fe3b 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012914:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90012916:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90012918:	a804      	add	r0, sp, #16
9001291a:	f014 fe36 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001291e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90012920:	6d21      	ldr	r1, [r4, #80]	; 0x50
90012922:	a804      	add	r0, sp, #16
90012924:	f014 fe31 	bl	9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012928:	21ff      	movs	r1, #255	; 0xff
9001292a:	a804      	add	r0, sp, #16
9001292c:	f014 fd1c 	bl	90027368 <_ZN8touchgfx6Canvas6renderEh>
90012930:	4b04      	ldr	r3, [pc, #16]	; (90012944 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90012932:	4604      	mov	r4, r0
90012934:	a80c      	add	r0, sp, #48	; 0x30
90012936:	9304      	str	r3, [sp, #16]
90012938:	f001 f9f2 	bl	90013d20 <_ZN8touchgfx7OutlineD1Ev>
9001293c:	4620      	mov	r0, r4
9001293e:	b020      	add	sp, #128	; 0x80
90012940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012944:	9002bec0 	.word	0x9002bec0

90012948 <_ZNK8touchgfx5Image17invalidateContentEv>:
90012948:	b508      	push	{r3, lr}
9001294a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001294e:	b10b      	cbz	r3, 90012954 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90012950:	f7ef fc96 	bl	90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90012954:	bd08      	pop	{r3, pc}

90012956 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90012956:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001295a:	4770      	bx	lr

9001295c <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
9001295c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90012960:	4770      	bx	lr

90012962 <_ZN8touchgfx13ScalableImageD1Ev>:
90012962:	4770      	bx	lr

90012964 <_ZN8touchgfx13ScalableImageD0Ev>:
90012964:	b510      	push	{r4, lr}
90012966:	4604      	mov	r4, r0
90012968:	212c      	movs	r1, #44	; 0x2c
9001296a:	f014 fea1 	bl	900276b0 <_ZdlPvj>
9001296e:	4620      	mov	r0, r4
90012970:	bd10      	pop	{r4, pc}

90012972 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90012972:	b5f0      	push	{r4, r5, r6, r7, lr}
90012974:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90012978:	b085      	sub	sp, #20
9001297a:	4604      	mov	r4, r0
9001297c:	460d      	mov	r5, r1
9001297e:	2bff      	cmp	r3, #255	; 0xff
90012980:	d128      	bne.n	900129d4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90012982:	f101 0626 	add.w	r6, r1, #38	; 0x26
90012986:	4668      	mov	r0, sp
90012988:	4631      	mov	r1, r6
9001298a:	f006 ff65 	bl	90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001298e:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90012992:	4630      	mov	r0, r6
90012994:	f006 fef8 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012998:	4287      	cmp	r7, r0
9001299a:	d11b      	bne.n	900129d4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001299c:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
900129a0:	4630      	mov	r0, r6
900129a2:	f006 ff25 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
900129a6:	4287      	cmp	r7, r0
900129a8:	d114      	bne.n	900129d4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900129aa:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900129ae:	2100      	movs	r1, #0
900129b0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900129b4:	f8ad 300e 	strh.w	r3, [sp, #14]
900129b8:	466b      	mov	r3, sp
900129ba:	9102      	str	r1, [sp, #8]
900129bc:	f8ad 200c 	strh.w	r2, [sp, #12]
900129c0:	cb03      	ldmia	r3!, {r0, r1}
900129c2:	6020      	str	r0, [r4, #0]
900129c4:	4620      	mov	r0, r4
900129c6:	6061      	str	r1, [r4, #4]
900129c8:	4619      	mov	r1, r3
900129ca:	f7fe fb09 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900129ce:	4620      	mov	r0, r4
900129d0:	b005      	add	sp, #20
900129d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900129d4:	2300      	movs	r3, #0
900129d6:	8023      	strh	r3, [r4, #0]
900129d8:	8063      	strh	r3, [r4, #2]
900129da:	80a3      	strh	r3, [r4, #4]
900129dc:	80e3      	strh	r3, [r4, #6]
900129de:	e7f6      	b.n	900129ce <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

900129e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
900129e0:	b538      	push	{r3, r4, r5, lr}
900129e2:	2300      	movs	r3, #0
900129e4:	2501      	movs	r5, #1
900129e6:	4604      	mov	r4, r0
900129e8:	8083      	strh	r3, [r0, #4]
900129ea:	80c3      	strh	r3, [r0, #6]
900129ec:	8103      	strh	r3, [r0, #8]
900129ee:	8143      	strh	r3, [r0, #10]
900129f0:	8183      	strh	r3, [r0, #12]
900129f2:	81c3      	strh	r3, [r0, #14]
900129f4:	8203      	strh	r3, [r0, #16]
900129f6:	8243      	strh	r3, [r0, #18]
900129f8:	61c3      	str	r3, [r0, #28]
900129fa:	8403      	strh	r3, [r0, #32]
900129fc:	8443      	strh	r3, [r0, #34]	; 0x22
900129fe:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
90012a02:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90012a06:	e9c0 3305 	strd	r3, r3, [r0, #20]
90012a0a:	4b07      	ldr	r3, [pc, #28]	; (90012a28 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90012a0c:	6003      	str	r3, [r0, #0]
90012a0e:	880b      	ldrh	r3, [r1, #0]
90012a10:	84c3      	strh	r3, [r0, #38]	; 0x26
90012a12:	23ff      	movs	r3, #255	; 0xff
90012a14:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90012a18:	f001 f81d 	bl	90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012a1c:	4b03      	ldr	r3, [pc, #12]	; (90012a2c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90012a1e:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
90012a22:	4620      	mov	r0, r4
90012a24:	6023      	str	r3, [r4, #0]
90012a26:	bd38      	pop	{r3, r4, r5, pc}
90012a28:	9002b9d0 	.word	0x9002b9d0
90012a2c:	9002b784 	.word	0x9002b784

90012a30 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90012a30:	4603      	mov	r3, r0
90012a32:	3026      	adds	r0, #38	; 0x26
90012a34:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
90012a38:	b90b      	cbnz	r3, 90012a3e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90012a3a:	f004 bedb 	b.w	900177f4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90012a3e:	f004 bee9 	b.w	90017814 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90012a44 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90012a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012a48:	4604      	mov	r4, r0
90012a4a:	b0b3      	sub	sp, #204	; 0xcc
90012a4c:	469b      	mov	fp, r3
90012a4e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90012a52:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012a56:	2500      	movs	r5, #0
90012a58:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90012a5c:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
90012a60:	ab11      	add	r3, sp, #68	; 0x44
90012a62:	9206      	str	r2, [sp, #24]
90012a64:	4618      	mov	r0, r3
90012a66:	9511      	str	r5, [sp, #68]	; 0x44
90012a68:	9307      	str	r3, [sp, #28]
90012a6a:	ad13      	add	r5, sp, #76	; 0x4c
90012a6c:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
90012a70:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90012a74:	f7fe fab4 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90012a78:	9b07      	ldr	r3, [sp, #28]
90012a7a:	e893 0003 	ldmia.w	r3, {r0, r1}
90012a7e:	e885 0003 	stmia.w	r5, {r0, r1}
90012a82:	6821      	ldr	r1, [r4, #0]
90012a84:	4620      	mov	r0, r4
90012a86:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90012a88:	4629      	mov	r1, r5
90012a8a:	47b0      	blx	r6
90012a8c:	4621      	mov	r1, r4
90012a8e:	a815      	add	r0, sp, #84	; 0x54
90012a90:	1d26      	adds	r6, r4, #4
90012a92:	f004 fe0b 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012a96:	a815      	add	r0, sp, #84	; 0x54
90012a98:	f003 fb16 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90012a9c:	9b07      	ldr	r3, [sp, #28]
90012a9e:	4631      	mov	r1, r6
90012aa0:	4618      	mov	r0, r3
90012aa2:	f003 fb55 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90012aa6:	4628      	mov	r0, r5
90012aa8:	f104 0526 	add.w	r5, r4, #38	; 0x26
90012aac:	f003 fb0c 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90012ab0:	4628      	mov	r0, r5
90012ab2:	f006 ff55 	bl	90019960 <_ZNK8touchgfx6Bitmap7getDataEv>
90012ab6:	9007      	str	r0, [sp, #28]
90012ab8:	2800      	cmp	r0, #0
90012aba:	f000 80ce 	beq.w	90012c5a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90012abe:	f8db 200c 	ldr.w	r2, [fp, #12]
90012ac2:	a809      	add	r0, sp, #36	; 0x24
90012ac4:	f8db 1000 	ldr.w	r1, [fp]
90012ac8:	920c      	str	r2, [sp, #48]	; 0x30
90012aca:	f8da 2000 	ldr.w	r2, [sl]
90012ace:	9109      	str	r1, [sp, #36]	; 0x24
90012ad0:	920d      	str	r2, [sp, #52]	; 0x34
90012ad2:	f8da 2004 	ldr.w	r2, [sl, #4]
90012ad6:	f8db 1004 	ldr.w	r1, [fp, #4]
90012ada:	920e      	str	r2, [sp, #56]	; 0x38
90012adc:	f8da 2008 	ldr.w	r2, [sl, #8]
90012ae0:	910a      	str	r1, [sp, #40]	; 0x28
90012ae2:	920f      	str	r2, [sp, #60]	; 0x3c
90012ae4:	f8db 1008 	ldr.w	r1, [fp, #8]
90012ae8:	f8da 200c 	ldr.w	r2, [sl, #12]
90012aec:	910b      	str	r1, [sp, #44]	; 0x2c
90012aee:	a90d      	add	r1, sp, #52	; 0x34
90012af0:	9210      	str	r2, [sp, #64]	; 0x40
90012af2:	4632      	mov	r2, r6
90012af4:	f003 fb10 	bl	90016118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012af8:	4632      	mov	r2, r6
90012afa:	a90e      	add	r1, sp, #56	; 0x38
90012afc:	a80a      	add	r0, sp, #40	; 0x28
90012afe:	f003 fb0b 	bl	90016118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012b02:	4632      	mov	r2, r6
90012b04:	a90f      	add	r1, sp, #60	; 0x3c
90012b06:	a80b      	add	r0, sp, #44	; 0x2c
90012b08:	f003 fb06 	bl	90016118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012b0c:	4632      	mov	r2, r6
90012b0e:	a910      	add	r1, sp, #64	; 0x40
90012b10:	a80c      	add	r0, sp, #48	; 0x30
90012b12:	f003 fb01 	bl	90016118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012b16:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90012b1a:	ed97 3a00 	vldr	s6, [r7]
90012b1e:	eef0 6a67 	vmov.f32	s13, s15
90012b22:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90012b26:	edd7 4a01 	vldr	s9, [r7, #4]
90012b2a:	eeb0 7a67 	vmov.f32	s14, s15
90012b2e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
90012b32:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90012b36:	ed99 2a00 	vldr	s4, [r9]
90012b3a:	eeb0 6a67 	vmov.f32	s12, s15
90012b3e:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
90012b42:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90012b46:	edd8 2a00 	vldr	s5, [r8]
90012b4a:	edd9 3a01 	vldr	s7, [r9, #4]
90012b4e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012b52:	ed98 4a01 	vldr	s8, [r8, #4]
90012b56:	ed99 5a02 	vldr	s10, [r9, #8]
90012b5a:	edd8 5a02 	vldr	s11, [r8, #8]
90012b5e:	ee16 6a10 	vmov	r6, s12
90012b62:	eeb0 6a67 	vmov.f32	s12, s15
90012b66:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
90012b6a:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90012b6e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012b72:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90012b76:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90012b7a:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90012b7e:	ee16 0a10 	vmov	r0, s12
90012b82:	eeb0 6a67 	vmov.f32	s12, s15
90012b86:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90012b8a:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90012b8e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012b92:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90012b96:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90012b9a:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90012b9e:	ee16 1a10 	vmov	r1, s12
90012ba2:	eeb0 6a67 	vmov.f32	s12, s15
90012ba6:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90012baa:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90012bae:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012bb2:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90012bb6:	f8d7 a008 	ldr.w	sl, [r7, #8]
90012bba:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90012bbe:	68ff      	ldr	r7, [r7, #12]
90012bc0:	ee16 2a10 	vmov	r2, s12
90012bc4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90012bc8:	9624      	str	r6, [sp, #144]	; 0x90
90012bca:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012bce:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90012bd2:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90012bd6:	4628      	mov	r0, r5
90012bd8:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90012bdc:	9b06      	ldr	r3, [sp, #24]
90012bde:	922d      	str	r2, [sp, #180]	; 0xb4
90012be0:	4a1f      	ldr	r2, [pc, #124]	; (90012c60 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90012be2:	9317      	str	r3, [sp, #92]	; 0x5c
90012be4:	8812      	ldrh	r2, [r2, #0]
90012be6:	9b07      	ldr	r3, [sp, #28]
90012be8:	9218      	str	r2, [sp, #96]	; 0x60
90012bea:	9319      	str	r3, [sp, #100]	; 0x64
90012bec:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90012bf0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90012bf4:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90012bf8:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90012bfc:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90012c00:	9731      	str	r7, [sp, #196]	; 0xc4
90012c02:	f006 fedd 	bl	900199c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90012c06:	901a      	str	r0, [sp, #104]	; 0x68
90012c08:	4628      	mov	r0, r5
90012c0a:	f006 fdbd 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012c0e:	901b      	str	r0, [sp, #108]	; 0x6c
90012c10:	4628      	mov	r0, r5
90012c12:	f006 fded 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012c16:	901c      	str	r0, [sp, #112]	; 0x70
90012c18:	4628      	mov	r0, r5
90012c1a:	f006 fdb5 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012c1e:	4b11      	ldr	r3, [pc, #68]	; (90012c64 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90012c20:	901d      	str	r0, [sp, #116]	; 0x74
90012c22:	681b      	ldr	r3, [r3, #0]
90012c24:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012c28:	b10a      	cbz	r2, 90012c2e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90012c2a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90012c2c:	b905      	cbnz	r5, 90012c30 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90012c2e:	689d      	ldr	r5, [r3, #8]
90012c30:	682b      	ldr	r3, [r5, #0]
90012c32:	4620      	mov	r0, r4
90012c34:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90012c36:	f7ff fefb 	bl	90012a30 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90012c3a:	f64f 73ff 	movw	r3, #65535	; 0xffff
90012c3e:	aa1e      	add	r2, sp, #120	; 0x78
90012c40:	a917      	add	r1, sp, #92	; 0x5c
90012c42:	9304      	str	r3, [sp, #16]
90012c44:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90012c48:	e9cd 0302 	strd	r0, r3, [sp, #8]
90012c4c:	ab13      	add	r3, sp, #76	; 0x4c
90012c4e:	4628      	mov	r0, r5
90012c50:	9301      	str	r3, [sp, #4]
90012c52:	ab15      	add	r3, sp, #84	; 0x54
90012c54:	9300      	str	r3, [sp, #0]
90012c56:	ab19      	add	r3, sp, #100	; 0x64
90012c58:	47b0      	blx	r6
90012c5a:	b033      	add	sp, #204	; 0xcc
90012c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012c60:	240396fe 	.word	0x240396fe
90012c64:	24039704 	.word	0x24039704

90012c68 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90012c68:	b570      	push	{r4, r5, r6, lr}
90012c6a:	ed2d 8b04 	vpush	{d8-d9}
90012c6e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90012c72:	b098      	sub	sp, #96	; 0x60
90012c74:	4604      	mov	r4, r0
90012c76:	460e      	mov	r6, r1
90012c78:	2b00      	cmp	r3, #0
90012c7a:	d065      	beq.n	90012d48 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90012c7c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90012c80:	f100 0526 	add.w	r5, r0, #38	; 0x26
90012c84:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90012d64 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90012c88:	ee09 3a10 	vmov	s18, r3
90012c8c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012c90:	4628      	mov	r0, r5
90012c92:	ee08 3a90 	vmov	s17, r3
90012c96:	4b34      	ldr	r3, [pc, #208]	; (90012d68 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90012c98:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90012c9c:	930c      	str	r3, [sp, #48]	; 0x30
90012c9e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90012ca2:	930d      	str	r3, [sp, #52]	; 0x34
90012ca4:	930e      	str	r3, [sp, #56]	; 0x38
90012ca6:	ee39 9a08 	vadd.f32	s18, s18, s16
90012caa:	930f      	str	r3, [sp, #60]	; 0x3c
90012cac:	f006 fd6c 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012cb0:	ee07 0a90 	vmov	s15, r0
90012cb4:	4628      	mov	r0, r5
90012cb6:	ee78 8a88 	vadd.f32	s17, s17, s16
90012cba:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90012cbe:	f006 fd97 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012cc2:	4b2a      	ldr	r3, [pc, #168]	; (90012d6c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90012cc4:	ee07 0a90 	vmov	s15, r0
90012cc8:	781b      	ldrb	r3, [r3, #0]
90012cca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90012cce:	eef0 7a48 	vmov.f32	s15, s16
90012cd2:	2b01      	cmp	r3, #1
90012cd4:	d13c      	bne.n	90012d50 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90012cd6:	eef0 6a69 	vmov.f32	s13, s19
90012cda:	ee19 3a90 	vmov	r3, s19
90012cde:	eeb0 6a47 	vmov.f32	s12, s14
90012ce2:	eef0 5a47 	vmov.f32	s11, s14
90012ce6:	eef0 9a48 	vmov.f32	s19, s16
90012cea:	eeb0 7a48 	vmov.f32	s14, s16
90012cee:	9314      	str	r3, [sp, #80]	; 0x50
90012cf0:	ab14      	add	r3, sp, #80	; 0x50
90012cf2:	2200      	movs	r2, #0
90012cf4:	4631      	mov	r1, r6
90012cf6:	9303      	str	r3, [sp, #12]
90012cf8:	ab10      	add	r3, sp, #64	; 0x40
90012cfa:	4620      	mov	r0, r4
90012cfc:	edcd 7a04 	vstr	s15, [sp, #16]
90012d00:	9302      	str	r3, [sp, #8]
90012d02:	ab0c      	add	r3, sp, #48	; 0x30
90012d04:	ed8d 9a05 	vstr	s18, [sp, #20]
90012d08:	9301      	str	r3, [sp, #4]
90012d0a:	ab08      	add	r3, sp, #32
90012d0c:	ed8d 9a06 	vstr	s18, [sp, #24]
90012d10:	9300      	str	r3, [sp, #0]
90012d12:	ab04      	add	r3, sp, #16
90012d14:	edcd 7a07 	vstr	s15, [sp, #28]
90012d18:	edcd 7a08 	vstr	s15, [sp, #32]
90012d1c:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90012d20:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90012d24:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90012d28:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90012d2c:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90012d30:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90012d34:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90012d38:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90012d3c:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90012d40:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90012d44:	f7ff fe7e 	bl	90012a44 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90012d48:	b018      	add	sp, #96	; 0x60
90012d4a:	ecbd 8b04 	vpop	{d8-d9}
90012d4e:	bd70      	pop	{r4, r5, r6, pc}
90012d50:	eef0 6a47 	vmov.f32	s13, s14
90012d54:	ee18 3a10 	vmov	r3, s16
90012d58:	eef0 5a69 	vmov.f32	s11, s19
90012d5c:	eeb0 6a48 	vmov.f32	s12, s16
90012d60:	e7c5      	b.n	90012cee <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90012d62:	bf00      	nop
90012d64:	00000000 	.word	0x00000000
90012d68:	42c80000 	.word	0x42c80000
90012d6c:	240396fc 	.word	0x240396fc

90012d70 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90012d70:	2000      	movs	r0, #0
90012d72:	4770      	bx	lr

90012d74 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012d74:	4b07      	ldr	r3, [pc, #28]	; (90012d94 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012d76:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90012d78:	881b      	ldrh	r3, [r3, #0]
90012d7a:	4293      	cmp	r3, r2
90012d7c:	bf81      	itttt	hi
90012d7e:	4b06      	ldrhi	r3, [pc, #24]	; (90012d98 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012d80:	681b      	ldrhi	r3, [r3, #0]
90012d82:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012d86:	7858      	ldrbhi	r0, [r3, #1]
90012d88:	bf8c      	ite	hi
90012d8a:	f000 0003 	andhi.w	r0, r0, #3
90012d8e:	2000      	movls	r0, #0
90012d90:	4770      	bx	lr
90012d92:	bf00      	nop
90012d94:	24039760 	.word	0x24039760
90012d98:	2403975c 	.word	0x2403975c

90012d9c <_ZN8touchgfx8TextAreaD1Ev>:
90012d9c:	4770      	bx	lr
	...

90012da0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90012da0:	4b11      	ldr	r3, [pc, #68]	; (90012de8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90012da2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012da6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90012da8:	4604      	mov	r4, r0
90012daa:	881b      	ldrh	r3, [r3, #0]
90012dac:	428b      	cmp	r3, r1
90012dae:	d918      	bls.n	90012de2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90012db0:	6803      	ldr	r3, [r0, #0]
90012db2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90012db4:	4b0d      	ldr	r3, [pc, #52]	; (90012dec <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012db6:	6818      	ldr	r0, [r3, #0]
90012db8:	f7f1 fa38 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012dbc:	6823      	ldr	r3, [r4, #0]
90012dbe:	4606      	mov	r6, r0
90012dc0:	4620      	mov	r0, r4
90012dc2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012dc4:	4798      	blx	r3
90012dc6:	6823      	ldr	r3, [r4, #0]
90012dc8:	4607      	mov	r7, r0
90012dca:	4620      	mov	r0, r4
90012dcc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012dd0:	4798      	blx	r3
90012dd2:	463a      	mov	r2, r7
90012dd4:	4603      	mov	r3, r0
90012dd6:	4631      	mov	r1, r6
90012dd8:	4620      	mov	r0, r4
90012dda:	46ac      	mov	ip, r5
90012ddc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90012de0:	4760      	bx	ip
90012de2:	2000      	movs	r0, #0
90012de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012de8:	24039760 	.word	0x24039760
90012dec:	24039768 	.word	0x24039768

90012df0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90012df0:	4b18      	ldr	r3, [pc, #96]	; (90012e54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90012df2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90012df6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90012df8:	4604      	mov	r4, r0
90012dfa:	881b      	ldrh	r3, [r3, #0]
90012dfc:	428b      	cmp	r3, r1
90012dfe:	d926      	bls.n	90012e4e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90012e00:	4b15      	ldr	r3, [pc, #84]	; (90012e58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90012e02:	681b      	ldr	r3, [r3, #0]
90012e04:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90012e08:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90012e0c:	4b13      	ldr	r3, [pc, #76]	; (90012e5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90012e0e:	7855      	ldrb	r5, [r2, #1]
90012e10:	681b      	ldr	r3, [r3, #0]
90012e12:	f3c5 0581 	ubfx	r5, r5, #2, #2
90012e16:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90012e1a:	6833      	ldr	r3, [r6, #0]
90012e1c:	69df      	ldr	r7, [r3, #28]
90012e1e:	4b10      	ldr	r3, [pc, #64]	; (90012e60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90012e20:	6818      	ldr	r0, [r3, #0]
90012e22:	f7f1 fa03 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012e26:	6823      	ldr	r3, [r4, #0]
90012e28:	4680      	mov	r8, r0
90012e2a:	4620      	mov	r0, r4
90012e2c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012e2e:	4798      	blx	r3
90012e30:	6823      	ldr	r3, [r4, #0]
90012e32:	4681      	mov	r9, r0
90012e34:	4620      	mov	r0, r4
90012e36:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012e3a:	4798      	blx	r3
90012e3c:	464b      	mov	r3, r9
90012e3e:	9000      	str	r0, [sp, #0]
90012e40:	4642      	mov	r2, r8
90012e42:	4629      	mov	r1, r5
90012e44:	4630      	mov	r0, r6
90012e46:	47b8      	blx	r7
90012e48:	b003      	add	sp, #12
90012e4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012e4e:	2000      	movs	r0, #0
90012e50:	e7fa      	b.n	90012e48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90012e52:	bf00      	nop
90012e54:	24039760 	.word	0x24039760
90012e58:	2403975c 	.word	0x2403975c
90012e5c:	24039764 	.word	0x24039764
90012e60:	24039768 	.word	0x24039768

90012e64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012e64:	b40e      	push	{r1, r2, r3}
90012e66:	4b30      	ldr	r3, [pc, #192]	; (90012f28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012e68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012e6c:	881a      	ldrh	r2, [r3, #0]
90012e6e:	b09d      	sub	sp, #116	; 0x74
90012e70:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90012e72:	4604      	mov	r4, r0
90012e74:	429a      	cmp	r2, r3
90012e76:	d954      	bls.n	90012f22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012e78:	aa26      	add	r2, sp, #152	; 0x98
90012e7a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90012f2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90012e7e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90012f30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90012e82:	9202      	str	r2, [sp, #8]
90012e84:	f8d9 2000 	ldr.w	r2, [r9]
90012e88:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012e8c:	f8d8 3000 	ldr.w	r3, [r8]
90012e90:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012e94:	682b      	ldr	r3, [r5, #0]
90012e96:	4628      	mov	r0, r5
90012e98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012e9a:	4798      	blx	r3
90012e9c:	4606      	mov	r6, r0
90012e9e:	b207      	sxth	r7, r0
90012ea0:	a803      	add	r0, sp, #12
90012ea2:	f005 f8e4 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
90012ea6:	682b      	ldr	r3, [r5, #0]
90012ea8:	4628      	mov	r0, r5
90012eaa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90012eac:	4798      	blx	r3
90012eae:	682b      	ldr	r3, [r5, #0]
90012eb0:	4682      	mov	sl, r0
90012eb2:	4628      	mov	r0, r5
90012eb4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90012eb6:	4798      	blx	r3
90012eb8:	4653      	mov	r3, sl
90012eba:	9000      	str	r0, [sp, #0]
90012ebc:	a803      	add	r0, sp, #12
90012ebe:	9a02      	ldr	r2, [sp, #8]
90012ec0:	9925      	ldr	r1, [sp, #148]	; 0x94
90012ec2:	f005 f92f 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012ec6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90012ec8:	f8d9 3000 	ldr.w	r3, [r9]
90012ecc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90012ed0:	8925      	ldrh	r5, [r4, #8]
90012ed2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90012ed6:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90012eda:	eba5 050c 	sub.w	r5, r5, ip
90012ede:	784a      	ldrb	r2, [r1, #1]
90012ee0:	f8d8 3000 	ldr.w	r3, [r8]
90012ee4:	b22d      	sxth	r5, r5
90012ee6:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90012eea:	f3c2 0281 	ubfx	r2, r2, #2, #2
90012eee:	9500      	str	r5, [sp, #0]
90012ef0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90012ef4:	a803      	add	r0, sp, #12
90012ef6:	f002 fded 	bl	90015ad4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90012efa:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90012efe:	b203      	sxth	r3, r0
90012f00:	18b9      	adds	r1, r7, r2
90012f02:	2900      	cmp	r1, #0
90012f04:	dd0b      	ble.n	90012f1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90012f06:	3b01      	subs	r3, #1
90012f08:	fb13 f302 	smulbb	r3, r3, r2
90012f0c:	fb16 3300 	smlabb	r3, r6, r0, r3
90012f10:	b21f      	sxth	r7, r3
90012f12:	4638      	mov	r0, r7
90012f14:	b01d      	add	sp, #116	; 0x74
90012f16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012f1a:	b003      	add	sp, #12
90012f1c:	4770      	bx	lr
90012f1e:	2b00      	cmp	r3, #0
90012f20:	dcf7      	bgt.n	90012f12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012f22:	2700      	movs	r7, #0
90012f24:	e7f5      	b.n	90012f12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012f26:	bf00      	nop
90012f28:	24039760 	.word	0x24039760
90012f2c:	2403975c 	.word	0x2403975c
90012f30:	24039764 	.word	0x24039764

90012f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90012f34:	4bbd      	ldr	r3, [pc, #756]	; (9001322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90012f36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012f3a:	460c      	mov	r4, r1
90012f3c:	881b      	ldrh	r3, [r3, #0]
90012f3e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90012f40:	b0a9      	sub	sp, #164	; 0xa4
90012f42:	4680      	mov	r8, r0
90012f44:	428b      	cmp	r3, r1
90012f46:	d809      	bhi.n	90012f5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90012f48:	2300      	movs	r3, #0
90012f4a:	f04f 32ff 	mov.w	r2, #4294967295
90012f4e:	6083      	str	r3, [r0, #8]
90012f50:	e9c0 3200 	strd	r3, r2, [r0]
90012f54:	4640      	mov	r0, r8
90012f56:	b029      	add	sp, #164	; 0xa4
90012f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012f5c:	4eb4      	ldr	r6, [pc, #720]	; (90013230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90012f5e:	6833      	ldr	r3, [r6, #0]
90012f60:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90012f64:	4bb3      	ldr	r3, [pc, #716]	; (90013234 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90012f66:	681b      	ldr	r3, [r3, #0]
90012f68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012f6c:	4bb2      	ldr	r3, [pc, #712]	; (90013238 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90012f6e:	6818      	ldr	r0, [r3, #0]
90012f70:	f7f1 f95c 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012f74:	682b      	ldr	r3, [r5, #0]
90012f76:	4681      	mov	r9, r0
90012f78:	4628      	mov	r0, r5
90012f7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012f7c:	4798      	blx	r3
90012f7e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90012f80:	b203      	sxth	r3, r0
90012f82:	4682      	mov	sl, r0
90012f84:	4407      	add	r7, r0
90012f86:	a80f      	add	r0, sp, #60	; 0x3c
90012f88:	9304      	str	r3, [sp, #16]
90012f8a:	b2bb      	uxth	r3, r7
90012f8c:	9303      	str	r3, [sp, #12]
90012f8e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90012f92:	2b00      	cmp	r3, #0
90012f94:	f040 80a5 	bne.w	900130e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90012f98:	f005 f869 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
90012f9c:	682b      	ldr	r3, [r5, #0]
90012f9e:	4628      	mov	r0, r5
90012fa0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90012fa2:	4798      	blx	r3
90012fa4:	682b      	ldr	r3, [r5, #0]
90012fa6:	4606      	mov	r6, r0
90012fa8:	4628      	mov	r0, r5
90012faa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90012fac:	4798      	blx	r3
90012fae:	6823      	ldr	r3, [r4, #0]
90012fb0:	4607      	mov	r7, r0
90012fb2:	4620      	mov	r0, r4
90012fb4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012fb6:	4798      	blx	r3
90012fb8:	6823      	ldr	r3, [r4, #0]
90012fba:	4683      	mov	fp, r0
90012fbc:	4620      	mov	r0, r4
90012fbe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012fc2:	4798      	blx	r3
90012fc4:	463b      	mov	r3, r7
90012fc6:	4649      	mov	r1, r9
90012fc8:	4632      	mov	r2, r6
90012fca:	2600      	movs	r6, #0
90012fcc:	e9cd b000 	strd	fp, r0, [sp]
90012fd0:	a80f      	add	r0, sp, #60	; 0x3c
90012fd2:	4637      	mov	r7, r6
90012fd4:	f005 f8bb 	bl	9001814e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90012fd8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012fdc:	f8df b250 	ldr.w	fp, [pc, #592]	; 90013230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90012fe0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90012fe4:	bf0c      	ite	eq
90012fe6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90012fea:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90012fee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90012ff0:	4629      	mov	r1, r5
90012ff2:	f8db 3000 	ldr.w	r3, [fp]
90012ff6:	a80f      	add	r0, sp, #60	; 0x3c
90012ff8:	3701      	adds	r7, #1
90012ffa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90012ffe:	f647 72ff 	movw	r2, #32767	; 0x7fff
90013002:	b2bf      	uxth	r7, r7
90013004:	785b      	ldrb	r3, [r3, #1]
90013006:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001300a:	f002 fa7e 	bl	9001550a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001300e:	9b03      	ldr	r3, [sp, #12]
90013010:	4286      	cmp	r6, r0
90013012:	eba9 0903 	sub.w	r9, r9, r3
90013016:	bfb8      	it	lt
90013018:	4606      	movlt	r6, r0
9001301a:	a80f      	add	r0, sp, #60	; 0x3c
9001301c:	fa0f f989 	sxth.w	r9, r9
90013020:	b236      	sxth	r6, r6
90013022:	f005 f84b 	bl	900180bc <_ZN8touchgfx12TextProvider11endOfStringEv>
90013026:	b918      	cbnz	r0, 90013030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013028:	7a2b      	ldrb	r3, [r5, #8]
9001302a:	444b      	add	r3, r9
9001302c:	2b00      	cmp	r3, #0
9001302e:	dcde      	bgt.n	90012fee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90013030:	9b03      	ldr	r3, [sp, #12]
90013032:	4620      	mov	r0, r4
90013034:	9a04      	ldr	r2, [sp, #16]
90013036:	fb13 f707 	smulbb	r7, r3, r7
9001303a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
9001303c:	f895 9009 	ldrb.w	r9, [r5, #9]
90013040:	1aff      	subs	r7, r7, r3
90013042:	b2bf      	uxth	r7, r7
90013044:	b23b      	sxth	r3, r7
90013046:	429a      	cmp	r2, r3
90013048:	bfa8      	it	ge
9001304a:	4657      	movge	r7, sl
9001304c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013050:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90013054:	6823      	ldr	r3, [r4, #0]
90013056:	444f      	add	r7, r9
90013058:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001305a:	bf08      	it	eq
9001305c:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90013060:	fa1f f987 	uxth.w	r9, r7
90013064:	bf18      	it	ne
90013066:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
9001306a:	4798      	blx	r3
9001306c:	2801      	cmp	r0, #1
9001306e:	fa0f f789 	sxth.w	r7, r9
90013072:	b2b3      	uxth	r3, r6
90013074:	f000 80e2 	beq.w	9001323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90013078:	2802      	cmp	r0, #2
9001307a:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
9001307e:	f000 80e3 	beq.w	90013248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90013082:	7aea      	ldrb	r2, [r5, #11]
90013084:	b236      	sxth	r6, r6
90013086:	7b2d      	ldrb	r5, [r5, #12]
90013088:	1ab6      	subs	r6, r6, r2
9001308a:	442a      	add	r2, r5
9001308c:	fa1f fa86 	uxth.w	sl, r6
90013090:	4413      	add	r3, r2
90013092:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90013096:	fa0f fb8a 	sxth.w	fp, sl
9001309a:	b29b      	uxth	r3, r3
9001309c:	2a02      	cmp	r2, #2
9001309e:	b21e      	sxth	r6, r3
900130a0:	f000 80d6 	beq.w	90013250 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900130a4:	2a03      	cmp	r2, #3
900130a6:	f000 80de 	beq.w	90013266 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900130aa:	2a01      	cmp	r2, #1
900130ac:	f040 80e6 	bne.w	9001327c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
900130b0:	8925      	ldrh	r5, [r4, #8]
900130b2:	4633      	mov	r3, r6
900130b4:	463e      	mov	r6, r7
900130b6:	eba5 0909 	sub.w	r9, r5, r9
900130ba:	461f      	mov	r7, r3
900130bc:	465d      	mov	r5, fp
900130be:	fa0f fb89 	sxth.w	fp, r9
900130c2:	4b5d      	ldr	r3, [pc, #372]	; (90013238 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900130c4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900130c6:	6818      	ldr	r0, [r3, #0]
900130c8:	f7f1 f8b0 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900130cc:	f8a8 b000 	strh.w	fp, [r8]
900130d0:	f8a8 5002 	strh.w	r5, [r8, #2]
900130d4:	f8a8 6004 	strh.w	r6, [r8, #4]
900130d8:	f8a8 7006 	strh.w	r7, [r8, #6]
900130dc:	f8c8 0008 	str.w	r0, [r8, #8]
900130e0:	e738      	b.n	90012f54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
900130e2:	f004 ffc4 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
900130e6:	682b      	ldr	r3, [r5, #0]
900130e8:	4628      	mov	r0, r5
900130ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900130ec:	4798      	blx	r3
900130ee:	682b      	ldr	r3, [r5, #0]
900130f0:	4607      	mov	r7, r0
900130f2:	4628      	mov	r0, r5
900130f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900130f6:	4798      	blx	r3
900130f8:	6823      	ldr	r3, [r4, #0]
900130fa:	4683      	mov	fp, r0
900130fc:	4620      	mov	r0, r4
900130fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013100:	4798      	blx	r3
90013102:	6822      	ldr	r2, [r4, #0]
90013104:	9005      	str	r0, [sp, #20]
90013106:	4620      	mov	r0, r4
90013108:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
9001310c:	4790      	blx	r2
9001310e:	9b05      	ldr	r3, [sp, #20]
90013110:	463a      	mov	r2, r7
90013112:	4649      	mov	r1, r9
90013114:	9001      	str	r0, [sp, #4]
90013116:	a80f      	add	r0, sp, #60	; 0x3c
90013118:	9300      	str	r3, [sp, #0]
9001311a:	465b      	mov	r3, fp
9001311c:	f005 f817 	bl	9001814e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013120:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013124:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90013128:	af0f      	add	r7, sp, #60	; 0x3c
9001312a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001312e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013132:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013134:	bf0a      	itet	eq
90013136:	464a      	moveq	r2, r9
90013138:	461a      	movne	r2, r3
9001313a:	4699      	moveq	r9, r3
9001313c:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90013140:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90013144:	1ad2      	subs	r2, r2, r3
90013146:	6833      	ldr	r3, [r6, #0]
90013148:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
9001314c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013150:	7859      	ldrb	r1, [r3, #1]
90013152:	2300      	movs	r3, #0
90013154:	9707      	str	r7, [sp, #28]
90013156:	f3c1 0181 	ubfx	r1, r1, #2, #2
9001315a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001315e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90013162:	f88d 1020 	strb.w	r1, [sp, #32]
90013166:	9509      	str	r5, [sp, #36]	; 0x24
90013168:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001316c:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90013170:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90013174:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90013178:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001317c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90013180:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90013184:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013188:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
9001318c:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90013190:	b350      	cbz	r0, 900131e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013192:	682b      	ldr	r3, [r5, #0]
90013194:	4628      	mov	r0, r5
90013196:	695b      	ldr	r3, [r3, #20]
90013198:	4798      	blx	r3
9001319a:	4607      	mov	r7, r0
9001319c:	b320      	cbz	r0, 900131e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001319e:	9809      	ldr	r0, [sp, #36]	; 0x24
900131a0:	4639      	mov	r1, r7
900131a2:	6803      	ldr	r3, [r0, #0]
900131a4:	68db      	ldr	r3, [r3, #12]
900131a6:	4798      	blx	r3
900131a8:	4606      	mov	r6, r0
900131aa:	b1e8      	cbz	r0, 900131e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900131ac:	7b43      	ldrb	r3, [r0, #13]
900131ae:	7a82      	ldrb	r2, [r0, #10]
900131b0:	005b      	lsls	r3, r3, #1
900131b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
900131b6:	4313      	orrs	r3, r2
900131b8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
900131bc:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
900131c0:	2b06      	cmp	r3, #6
900131c2:	d111      	bne.n	900131e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900131c4:	9809      	ldr	r0, [sp, #36]	; 0x24
900131c6:	4632      	mov	r2, r6
900131c8:	4639      	mov	r1, r7
900131ca:	6803      	ldr	r3, [r0, #0]
900131cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900131ce:	4798      	blx	r3
900131d0:	7b73      	ldrb	r3, [r6, #13]
900131d2:	005b      	lsls	r3, r3, #1
900131d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
900131d8:	7ab3      	ldrb	r3, [r6, #10]
900131da:	4313      	orrs	r3, r2
900131dc:	4418      	add	r0, r3
900131de:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900131e2:	4418      	add	r0, r3
900131e4:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
900131e8:	2600      	movs	r6, #0
900131ea:	4637      	mov	r7, r6
900131ec:	a806      	add	r0, sp, #24
900131ee:	3701      	adds	r7, #1
900131f0:	f002 fb6d 	bl	900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900131f4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
900131f8:	9b03      	ldr	r3, [sp, #12]
900131fa:	b2bf      	uxth	r7, r7
900131fc:	4286      	cmp	r6, r0
900131fe:	eba9 0903 	sub.w	r9, r9, r3
90013202:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90013206:	bfb8      	it	lt
90013208:	4606      	movlt	r6, r0
9001320a:	fa0f f989 	sxth.w	r9, r9
9001320e:	b236      	sxth	r6, r6
90013210:	2b00      	cmp	r3, #0
90013212:	f43f af0d 	beq.w	90013030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013216:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
9001321a:	2b00      	cmp	r3, #0
9001321c:	f47f af08 	bne.w	90013030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013220:	7a2b      	ldrb	r3, [r5, #8]
90013222:	444b      	add	r3, r9
90013224:	2b00      	cmp	r3, #0
90013226:	dce1      	bgt.n	900131ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90013228:	e702      	b.n	90013030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001322a:	bf00      	nop
9001322c:	24039760 	.word	0x24039760
90013230:	2403975c 	.word	0x2403975c
90013234:	24039764 	.word	0x24039764
90013238:	24039768 	.word	0x24039768
9001323c:	ebaa 0606 	sub.w	r6, sl, r6
90013240:	2002      	movs	r0, #2
90013242:	fb96 f6f0 	sdiv	r6, r6, r0
90013246:	e71c      	b.n	90013082 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013248:	441e      	add	r6, r3
9001324a:	ebaa 0606 	sub.w	r6, sl, r6
9001324e:	e718      	b.n	90013082 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013250:	8925      	ldrh	r5, [r4, #8]
90013252:	1aed      	subs	r5, r5, r3
90013254:	eba5 050a 	sub.w	r5, r5, sl
90013258:	fa0f fb85 	sxth.w	fp, r5
9001325c:	8965      	ldrh	r5, [r4, #10]
9001325e:	eba5 0509 	sub.w	r5, r5, r9
90013262:	b22d      	sxth	r5, r5
90013264:	e72d      	b.n	900130c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90013266:	8965      	ldrh	r5, [r4, #10]
90013268:	f04f 0b00 	mov.w	fp, #0
9001326c:	1aed      	subs	r5, r5, r3
9001326e:	4633      	mov	r3, r6
90013270:	463e      	mov	r6, r7
90013272:	eba5 050a 	sub.w	r5, r5, sl
90013276:	461f      	mov	r7, r3
90013278:	b22d      	sxth	r5, r5
9001327a:	e722      	b.n	900130c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001327c:	2500      	movs	r5, #0
9001327e:	e720      	b.n	900130c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90013280 <_ZN8touchgfx8TextAreaD0Ev>:
90013280:	b510      	push	{r4, lr}
90013282:	4604      	mov	r4, r0
90013284:	2148      	movs	r1, #72	; 0x48
90013286:	f014 fa13 	bl	900276b0 <_ZdlPvj>
9001328a:	4620      	mov	r0, r4
9001328c:	bd10      	pop	{r4, pc}
	...

90013290 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90013290:	b513      	push	{r0, r1, r4, lr}
90013292:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90013296:	4604      	mov	r4, r0
90013298:	b1fb      	cbz	r3, 900132da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001329a:	4b16      	ldr	r3, [pc, #88]	; (900132f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
9001329c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001329e:	881b      	ldrh	r3, [r3, #0]
900132a0:	428b      	cmp	r3, r1
900132a2:	d91a      	bls.n	900132da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132a4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900132a8:	2b00      	cmp	r3, #0
900132aa:	dd16      	ble.n	900132da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900132b0:	2b00      	cmp	r3, #0
900132b2:	dd12      	ble.n	900132da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132b4:	4b10      	ldr	r3, [pc, #64]	; (900132f8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900132b6:	6818      	ldr	r0, [r3, #0]
900132b8:	f7f0 ffb8 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900132bc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
900132c0:	6822      	ldr	r2, [r4, #0]
900132c2:	2b00      	cmp	r3, #0
900132c4:	db06      	blt.n	900132d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900132c6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
900132ca:	2b00      	cmp	r3, #0
900132cc:	db02      	blt.n	900132d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900132ce:	6c63      	ldr	r3, [r4, #68]	; 0x44
900132d0:	4298      	cmp	r0, r3
900132d2:	d004      	beq.n	900132de <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900132d4:	6953      	ldr	r3, [r2, #20]
900132d6:	4620      	mov	r0, r4
900132d8:	4798      	blx	r3
900132da:	b002      	add	sp, #8
900132dc:	bd10      	pop	{r4, pc}
900132de:	f104 013c 	add.w	r1, r4, #60	; 0x3c
900132e2:	466b      	mov	r3, sp
900132e4:	6912      	ldr	r2, [r2, #16]
900132e6:	c903      	ldmia	r1, {r0, r1}
900132e8:	e883 0003 	stmia.w	r3, {r0, r1}
900132ec:	4619      	mov	r1, r3
900132ee:	4620      	mov	r0, r4
900132f0:	4790      	blx	r2
900132f2:	e7f2      	b.n	900132da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132f4:	24039760 	.word	0x24039760
900132f8:	24039768 	.word	0x24039768

900132fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900132fc:	4b45      	ldr	r3, [pc, #276]	; (90013414 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900132fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013302:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013304:	b08e      	sub	sp, #56	; 0x38
90013306:	881b      	ldrh	r3, [r3, #0]
90013308:	4604      	mov	r4, r0
9001330a:	4293      	cmp	r3, r2
9001330c:	d97e      	bls.n	9001340c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001330e:	6808      	ldr	r0, [r1, #0]
90013310:	ab05      	add	r3, sp, #20
90013312:	6849      	ldr	r1, [r1, #4]
90013314:	4d40      	ldr	r5, [pc, #256]	; (90013418 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90013316:	c303      	stmia	r3!, {r0, r1}
90013318:	4611      	mov	r1, r2
9001331a:	6828      	ldr	r0, [r5, #0]
9001331c:	f7f0 ff86 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013320:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013324:	2b00      	cmp	r3, #0
90013326:	db11      	blt.n	9001334c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013328:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001332c:	2b00      	cmp	r3, #0
9001332e:	db0d      	blt.n	9001334c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013330:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013332:	4298      	cmp	r0, r3
90013334:	d10a      	bne.n	9001334c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013336:	f104 023c 	add.w	r2, r4, #60	; 0x3c
9001333a:	ab09      	add	r3, sp, #36	; 0x24
9001333c:	e892 0003 	ldmia.w	r2, {r0, r1}
90013340:	e883 0003 	stmia.w	r3, {r0, r1}
90013344:	4619      	mov	r1, r3
90013346:	a805      	add	r0, sp, #20
90013348:	f7fd fe4a 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001334c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013350:	2b00      	cmp	r3, #0
90013352:	dd5b      	ble.n	9001340c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013354:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013358:	2b00      	cmp	r3, #0
9001335a:	dd57      	ble.n	9001340c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001335c:	4f2f      	ldr	r7, [pc, #188]	; (9001341c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
9001335e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013360:	683b      	ldr	r3, [r7, #0]
90013362:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90013366:	4b2e      	ldr	r3, [pc, #184]	; (90013420 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90013368:	681b      	ldr	r3, [r3, #0]
9001336a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001336e:	2e00      	cmp	r6, #0
90013370:	d04c      	beq.n	9001340c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013372:	6823      	ldr	r3, [r4, #0]
90013374:	4620      	mov	r0, r4
90013376:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
9001337a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001337c:	4798      	blx	r3
9001337e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013380:	683b      	ldr	r3, [r7, #0]
90013382:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90013386:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001338a:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
9001338e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90013392:	785b      	ldrb	r3, [r3, #1]
90013394:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90013398:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001339c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001339e:	9609      	str	r6, [sp, #36]	; 0x24
900133a0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
900133a4:	4b1f      	ldr	r3, [pc, #124]	; (90013424 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900133a6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
900133aa:	681b      	ldr	r3, [r3, #0]
900133ac:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
900133b0:	910b      	str	r1, [sp, #44]	; 0x2c
900133b2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
900133b6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
900133ba:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
900133be:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
900133c2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900133c6:	b10a      	cbz	r2, 900133cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900133c8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
900133ca:	b906      	cbnz	r6, 900133ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900133cc:	689e      	ldr	r6, [r3, #8]
900133ce:	af07      	add	r7, sp, #28
900133d0:	4621      	mov	r1, r4
900133d2:	4638      	mov	r0, r7
900133d4:	f004 f96a 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900133d8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900133da:	6828      	ldr	r0, [r5, #0]
900133dc:	f7f0 ff26 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900133e0:	6823      	ldr	r3, [r4, #0]
900133e2:	4605      	mov	r5, r0
900133e4:	4620      	mov	r0, r4
900133e6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900133e8:	4798      	blx	r3
900133ea:	6823      	ldr	r3, [r4, #0]
900133ec:	4680      	mov	r8, r0
900133ee:	4620      	mov	r0, r4
900133f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900133f4:	4798      	blx	r3
900133f6:	ab09      	add	r3, sp, #36	; 0x24
900133f8:	9501      	str	r5, [sp, #4]
900133fa:	9300      	str	r3, [sp, #0]
900133fc:	ab05      	add	r3, sp, #20
900133fe:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013402:	4630      	mov	r0, r6
90013404:	e897 0006 	ldmia.w	r7, {r1, r2}
90013408:	f7f0 fec0 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001340c:	b00e      	add	sp, #56	; 0x38
9001340e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013412:	bf00      	nop
90013414:	24039760 	.word	0x24039760
90013418:	24039768 	.word	0x24039768
9001341c:	2403975c 	.word	0x2403975c
90013420:	24039764 	.word	0x24039764
90013424:	24039704 	.word	0x24039704

90013428 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90013428:	b570      	push	{r4, r5, r6, lr}
9001342a:	6803      	ldr	r3, [r0, #0]
9001342c:	4604      	mov	r4, r0
9001342e:	4615      	mov	r5, r2
90013430:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013432:	4798      	blx	r3
90013434:	6823      	ldr	r3, [r4, #0]
90013436:	4629      	mov	r1, r5
90013438:	4620      	mov	r0, r4
9001343a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001343c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013440:	4718      	bx	r3
	...

90013444 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90013444:	b538      	push	{r3, r4, r5, lr}
90013446:	4b0e      	ldr	r3, [pc, #56]	; (90013480 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90013448:	4604      	mov	r4, r0
9001344a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9001344c:	881b      	ldrh	r3, [r3, #0]
9001344e:	429a      	cmp	r2, r3
90013450:	d214      	bcs.n	9001347c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90013452:	6803      	ldr	r3, [r0, #0]
90013454:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90013456:	4798      	blx	r3
90013458:	6823      	ldr	r3, [r4, #0]
9001345a:	4605      	mov	r5, r0
9001345c:	4620      	mov	r0, r4
9001345e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90013460:	4798      	blx	r3
90013462:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013466:	b22d      	sxth	r5, r5
90013468:	4601      	mov	r1, r0
9001346a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001346e:	bf06      	itte	eq
90013470:	4602      	moveq	r2, r0
90013472:	4629      	moveq	r1, r5
90013474:	462a      	movne	r2, r5
90013476:	4620      	mov	r0, r4
90013478:	f7ff ffd6 	bl	90013428 <_ZN8touchgfx8Drawable14setWidthHeightEss>
9001347c:	bd38      	pop	{r3, r4, r5, pc}
9001347e:	bf00      	nop
90013480:	24039760 	.word	0x24039760

90013484 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90013484:	b530      	push	{r4, r5, lr}
90013486:	888b      	ldrh	r3, [r1, #4]
90013488:	b085      	sub	sp, #20
9001348a:	4604      	mov	r4, r0
9001348c:	8583      	strh	r3, [r0, #44]	; 0x2c
9001348e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013492:	b923      	cbnz	r3, 9001349e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013494:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013498:	b90b      	cbnz	r3, 9001349e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001349a:	f7ff ffd3 	bl	90013444 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001349e:	6823      	ldr	r3, [r4, #0]
900134a0:	466d      	mov	r5, sp
900134a2:	4621      	mov	r1, r4
900134a4:	343c      	adds	r4, #60	; 0x3c
900134a6:	4628      	mov	r0, r5
900134a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900134ac:	4798      	blx	r3
900134ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900134b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900134b6:	b005      	add	sp, #20
900134b8:	bd30      	pop	{r4, r5, pc}

900134ba <_ZNK8touchgfx3Box12getSolidRectEv>:
900134ba:	2300      	movs	r3, #0
900134bc:	8083      	strh	r3, [r0, #4]
900134be:	80c3      	strh	r3, [r0, #6]
900134c0:	8003      	strh	r3, [r0, #0]
900134c2:	8043      	strh	r3, [r0, #2]
900134c4:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
900134c8:	2bff      	cmp	r3, #255	; 0xff
900134ca:	bf01      	itttt	eq
900134cc:	890b      	ldrheq	r3, [r1, #8]
900134ce:	8083      	strheq	r3, [r0, #4]
900134d0:	894b      	ldrheq	r3, [r1, #10]
900134d2:	80c3      	strheq	r3, [r0, #6]
900134d4:	4770      	bx	lr
	...

900134d8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900134d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
900134da:	4604      	mov	r4, r0
900134dc:	466b      	mov	r3, sp
900134de:	6808      	ldr	r0, [r1, #0]
900134e0:	6849      	ldr	r1, [r1, #4]
900134e2:	c303      	stmia	r3!, {r0, r1}
900134e4:	6823      	ldr	r3, [r4, #0]
900134e6:	4669      	mov	r1, sp
900134e8:	4620      	mov	r0, r4
900134ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900134ec:	4798      	blx	r3
900134ee:	4b08      	ldr	r3, [pc, #32]	; (90013510 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900134f0:	681b      	ldr	r3, [r3, #0]
900134f2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900134f6:	b10a      	cbz	r2, 900134fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900134f8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900134fa:	b900      	cbnz	r0, 900134fe <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900134fc:	6898      	ldr	r0, [r3, #8]
900134fe:	6803      	ldr	r3, [r0, #0]
90013500:	4669      	mov	r1, sp
90013502:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90013504:	6a1d      	ldr	r5, [r3, #32]
90013506:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001350a:	47a8      	blx	r5
9001350c:	b003      	add	sp, #12
9001350e:	bd30      	pop	{r4, r5, pc}
90013510:	24039704 	.word	0x24039704

90013514 <_ZN8touchgfx3BoxD1Ev>:
90013514:	4770      	bx	lr

90013516 <_ZN8touchgfx3BoxD0Ev>:
90013516:	b510      	push	{r4, lr}
90013518:	4604      	mov	r4, r0
9001351a:	212c      	movs	r1, #44	; 0x2c
9001351c:	f014 f8c8 	bl	900276b0 <_ZdlPvj>
90013520:	4620      	mov	r0, r4
90013522:	bd10      	pop	{r4, pc}

90013524 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013524:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90013528:	b12a      	cbz	r2, 90013536 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001352a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001352e:	b112      	cbz	r2, 90013536 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90013530:	6803      	ldr	r3, [r0, #0]
90013532:	695b      	ldr	r3, [r3, #20]
90013534:	4718      	bx	r3
90013536:	4770      	bx	lr

90013538 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90013538:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
9001353c:	4770      	bx	lr

9001353e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9001353e:	b570      	push	{r4, r5, r6, lr}
90013540:	880b      	ldrh	r3, [r1, #0]
90013542:	4605      	mov	r5, r0
90013544:	4604      	mov	r4, r0
90013546:	85c3      	strh	r3, [r0, #46]	; 0x2e
90013548:	8813      	ldrh	r3, [r2, #0]
9001354a:	f825 3f30 	strh.w	r3, [r5, #48]!
9001354e:	4628      	mov	r0, r5
90013550:	f006 f91a 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013554:	4606      	mov	r6, r0
90013556:	4628      	mov	r0, r5
90013558:	f006 f94a 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001355c:	6823      	ldr	r3, [r4, #0]
9001355e:	4605      	mov	r5, r0
90013560:	4631      	mov	r1, r6
90013562:	4620      	mov	r0, r4
90013564:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013566:	4798      	blx	r3
90013568:	6823      	ldr	r3, [r4, #0]
9001356a:	4629      	mov	r1, r5
9001356c:	4620      	mov	r0, r4
9001356e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013570:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013574:	4718      	bx	r3

90013576 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90013576:	b510      	push	{r4, lr}
90013578:	4604      	mov	r4, r0
9001357a:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001357c:	b150      	cbz	r0, 90013594 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001357e:	6803      	ldr	r3, [r0, #0]
90013580:	68db      	ldr	r3, [r3, #12]
90013582:	4798      	blx	r3
90013584:	b130      	cbz	r0, 90013594 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90013586:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90013588:	4621      	mov	r1, r4
9001358a:	6803      	ldr	r3, [r0, #0]
9001358c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013590:	689b      	ldr	r3, [r3, #8]
90013592:	4718      	bx	r3
90013594:	bd10      	pop	{r4, pc}

90013596 <_ZNK8touchgfx6Button12getSolidRectEv>:
90013596:	b510      	push	{r4, lr}
90013598:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
9001359c:	4604      	mov	r4, r0
9001359e:	2bff      	cmp	r3, #255	; 0xff
900135a0:	d006      	beq.n	900135b0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900135a2:	2300      	movs	r3, #0
900135a4:	8003      	strh	r3, [r0, #0]
900135a6:	8043      	strh	r3, [r0, #2]
900135a8:	8083      	strh	r3, [r0, #4]
900135aa:	80c3      	strh	r3, [r0, #6]
900135ac:	4620      	mov	r0, r4
900135ae:	bd10      	pop	{r4, pc}
900135b0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
900135b4:	b11b      	cbz	r3, 900135be <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900135b6:	3130      	adds	r1, #48	; 0x30
900135b8:	f006 f94e 	bl	90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900135bc:	e7f6      	b.n	900135ac <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900135be:	312e      	adds	r1, #46	; 0x2e
900135c0:	e7fa      	b.n	900135b8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900135c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900135c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900135c8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900135cc:	b08a      	sub	sp, #40	; 0x28
900135ce:	4604      	mov	r4, r0
900135d0:	4688      	mov	r8, r1
900135d2:	2b00      	cmp	r3, #0
900135d4:	d066      	beq.n	900136a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900135d6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900135d8:	a805      	add	r0, sp, #20
900135da:	f8ad 3014 	strh.w	r3, [sp, #20]
900135de:	f006 f8d3 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
900135e2:	4607      	mov	r7, r0
900135e4:	a805      	add	r0, sp, #20
900135e6:	f006 f903 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
900135ea:	f9b8 6000 	ldrsh.w	r6, [r8]
900135ee:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900135f2:	2300      	movs	r3, #0
900135f4:	4432      	add	r2, r6
900135f6:	9306      	str	r3, [sp, #24]
900135f8:	b292      	uxth	r2, r2
900135fa:	fa0f fc82 	sxth.w	ip, r2
900135fe:	459c      	cmp	ip, r3
90013600:	dd52      	ble.n	900136a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013602:	42b7      	cmp	r7, r6
90013604:	dd50      	ble.n	900136a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013606:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9001360a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001360e:	442b      	add	r3, r5
90013610:	b29b      	uxth	r3, r3
90013612:	b219      	sxth	r1, r3
90013614:	2900      	cmp	r1, #0
90013616:	dd47      	ble.n	900136a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013618:	42a8      	cmp	r0, r5
9001361a:	dd45      	ble.n	900136a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001361c:	4567      	cmp	r7, ip
9001361e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013622:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90013626:	bfb8      	it	lt
90013628:	b2ba      	uxthlt	r2, r7
9001362a:	4288      	cmp	r0, r1
9001362c:	f8ad 6018 	strh.w	r6, [sp, #24]
90013630:	bfb8      	it	lt
90013632:	b283      	uxthlt	r3, r0
90013634:	1b92      	subs	r2, r2, r6
90013636:	f8ad 501a 	strh.w	r5, [sp, #26]
9001363a:	1b5b      	subs	r3, r3, r5
9001363c:	f8ad 201c 	strh.w	r2, [sp, #28]
90013640:	f8ad 301e 	strh.w	r3, [sp, #30]
90013644:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90013648:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001364c:	429a      	cmp	r2, r3
9001364e:	d026      	beq.n	9001369e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013650:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013654:	2b00      	cmp	r3, #0
90013656:	dd22      	ble.n	9001369e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013658:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9001365c:	2b00      	cmp	r3, #0
9001365e:	dd1e      	ble.n	9001369e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013660:	2300      	movs	r3, #0
90013662:	a908      	add	r1, sp, #32
90013664:	4620      	mov	r0, r4
90013666:	e9cd 3308 	strd	r3, r3, [sp, #32]
9001366a:	6823      	ldr	r3, [r4, #0]
9001366c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001366e:	4798      	blx	r3
90013670:	4b0f      	ldr	r3, [pc, #60]	; (900136b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90013672:	681b      	ldr	r3, [r3, #0]
90013674:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013678:	b10a      	cbz	r2, 9001367e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9001367a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001367c:	b900      	cbnz	r0, 90013680 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001367e:	6898      	ldr	r0, [r3, #8]
90013680:	2501      	movs	r5, #1
90013682:	6801      	ldr	r1, [r0, #0]
90013684:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90013688:	9502      	str	r5, [sp, #8]
9001368a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9001368e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90013692:	9401      	str	r4, [sp, #4]
90013694:	ac06      	add	r4, sp, #24
90013696:	9400      	str	r4, [sp, #0]
90013698:	688c      	ldr	r4, [r1, #8]
9001369a:	a905      	add	r1, sp, #20
9001369c:	47a0      	blx	r4
9001369e:	b00a      	add	sp, #40	; 0x28
900136a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900136a4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
900136a6:	e797      	b.n	900135d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900136a8:	2300      	movs	r3, #0
900136aa:	9307      	str	r3, [sp, #28]
900136ac:	e7ca      	b.n	90013644 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900136ae:	bf00      	nop
900136b0:	24039704 	.word	0x24039704

900136b4 <_ZNK8touchgfx6Button17invalidateContentEv>:
900136b4:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
900136b8:	b12a      	cbz	r2, 900136c6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900136ba:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900136be:	b112      	cbz	r2, 900136c6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900136c0:	6803      	ldr	r3, [r0, #0]
900136c2:	695b      	ldr	r3, [r3, #20]
900136c4:	4718      	bx	r3
900136c6:	4770      	bx	lr

900136c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900136c8:	4b30      	ldr	r3, [pc, #192]	; (9001378c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900136ca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900136ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900136d0:	b08d      	sub	sp, #52	; 0x34
900136d2:	881b      	ldrh	r3, [r3, #0]
900136d4:	4604      	mov	r4, r0
900136d6:	460f      	mov	r7, r1
900136d8:	4293      	cmp	r3, r2
900136da:	d954      	bls.n	90013786 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900136dc:	4b2c      	ldr	r3, [pc, #176]	; (90013790 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900136de:	6819      	ldr	r1, [r3, #0]
900136e0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
900136e4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
900136e8:	4a2a      	ldr	r2, [pc, #168]	; (90013794 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
900136ea:	6812      	ldr	r2, [r2, #0]
900136ec:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900136f0:	2900      	cmp	r1, #0
900136f2:	d048      	beq.n	90013786 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900136f4:	785a      	ldrb	r2, [r3, #1]
900136f6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900136fa:	f3c2 0801 	ubfx	r8, r2, #0, #2
900136fe:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013702:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90013706:	4b24      	ldr	r3, [pc, #144]	; (90013798 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90013708:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
9001370c:	681a      	ldr	r2, [r3, #0]
9001370e:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90013712:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90013716:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9001371a:	6b26      	ldr	r6, [r4, #48]	; 0x30
9001371c:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
90013720:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90013724:	9107      	str	r1, [sp, #28]
90013726:	f88d 8020 	strb.w	r8, [sp, #32]
9001372a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9001372e:	9609      	str	r6, [sp, #36]	; 0x24
90013730:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90013734:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
90013738:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
9001373c:	b10b      	cbz	r3, 90013742 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9001373e:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
90013740:	b905      	cbnz	r5, 90013744 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90013742:	6895      	ldr	r5, [r2, #8]
90013744:	ae05      	add	r6, sp, #20
90013746:	4621      	mov	r1, r4
90013748:	4630      	mov	r0, r6
9001374a:	f003 ffaf 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001374e:	4b13      	ldr	r3, [pc, #76]	; (9001379c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90013750:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013752:	6818      	ldr	r0, [r3, #0]
90013754:	f7f0 fd6a 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013758:	6823      	ldr	r3, [r4, #0]
9001375a:	4680      	mov	r8, r0
9001375c:	4620      	mov	r0, r4
9001375e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013760:	4798      	blx	r3
90013762:	6823      	ldr	r3, [r4, #0]
90013764:	4681      	mov	r9, r0
90013766:	4620      	mov	r0, r4
90013768:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001376c:	4798      	blx	r3
9001376e:	ab07      	add	r3, sp, #28
90013770:	f8cd 8004 	str.w	r8, [sp, #4]
90013774:	9300      	str	r3, [sp, #0]
90013776:	463b      	mov	r3, r7
90013778:	e9cd 9002 	strd	r9, r0, [sp, #8]
9001377c:	4628      	mov	r0, r5
9001377e:	e896 0006 	ldmia.w	r6, {r1, r2}
90013782:	f7f0 fd03 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013786:	b00d      	add	sp, #52	; 0x34
90013788:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001378c:	24039760 	.word	0x24039760
90013790:	2403975c 	.word	0x2403975c
90013794:	24039764 	.word	0x24039764
90013798:	24039704 	.word	0x24039704
9001379c:	24039768 	.word	0x24039768

900137a0 <_ZN8touchgfx13BoxWithBorderD1Ev>:
900137a0:	4770      	bx	lr

900137a2 <_ZN8touchgfx13BoxWithBorderD0Ev>:
900137a2:	b510      	push	{r4, lr}
900137a4:	4604      	mov	r4, r0
900137a6:	2134      	movs	r1, #52	; 0x34
900137a8:	f013 ff82 	bl	900276b0 <_ZdlPvj>
900137ac:	4620      	mov	r0, r4
900137ae:	bd10      	pop	{r4, pc}

900137b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
900137b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900137b4:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900137b6:	4604      	mov	r4, r0
900137b8:	460e      	mov	r6, r1
900137ba:	b08e      	sub	sp, #56	; 0x38
900137bc:	b218      	sxth	r0, r3
900137be:	8921      	ldrh	r1, [r4, #8]
900137c0:	005b      	lsls	r3, r3, #1
900137c2:	8962      	ldrh	r2, [r4, #10]
900137c4:	f8ad 0000 	strh.w	r0, [sp]
900137c8:	b29b      	uxth	r3, r3
900137ca:	f8ad 0002 	strh.w	r0, [sp, #2]
900137ce:	1ac9      	subs	r1, r1, r3
900137d0:	1ad3      	subs	r3, r2, r3
900137d2:	b209      	sxth	r1, r1
900137d4:	b21b      	sxth	r3, r3
900137d6:	2900      	cmp	r1, #0
900137d8:	f8ad 1004 	strh.w	r1, [sp, #4]
900137dc:	f8ad 3006 	strh.w	r3, [sp, #6]
900137e0:	dd5e      	ble.n	900138a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
900137e2:	2b00      	cmp	r3, #0
900137e4:	dd5c      	ble.n	900138a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
900137e6:	6830      	ldr	r0, [r6, #0]
900137e8:	ab02      	add	r3, sp, #8
900137ea:	6871      	ldr	r1, [r6, #4]
900137ec:	c303      	stmia	r3!, {r0, r1}
900137ee:	4669      	mov	r1, sp
900137f0:	a802      	add	r0, sp, #8
900137f2:	f7fd fbf5 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900137f6:	4620      	mov	r0, r4
900137f8:	a902      	add	r1, sp, #8
900137fa:	f7ff fe6d 	bl	900134d8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900137fe:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90013800:	2800      	cmp	r0, #0
90013802:	d05f      	beq.n	900138c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90013804:	8963      	ldrh	r3, [r4, #10]
90013806:	b202      	sxth	r2, r0
90013808:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001380c:	2500      	movs	r5, #0
9001380e:	1a1f      	subs	r7, r3, r0
90013810:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90013814:	f8ad 101c 	strh.w	r1, [sp, #28]
90013818:	b21b      	sxth	r3, r3
9001381a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001381e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
90013822:	af04      	add	r7, sp, #16
90013824:	1a09      	subs	r1, r1, r0
90013826:	9506      	str	r5, [sp, #24]
90013828:	f8ad 201e 	strh.w	r2, [sp, #30]
9001382c:	f8ad 5020 	strh.w	r5, [sp, #32]
90013830:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90013834:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
90013838:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001383c:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90013840:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90013844:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
90013848:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001384c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90013850:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013854:	ab06      	add	r3, sp, #24
90013856:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001385a:	e893 0003 	ldmia.w	r3, {r0, r1}
9001385e:	e887 0003 	stmia.w	r7, {r0, r1}
90013862:	4631      	mov	r1, r6
90013864:	4638      	mov	r0, r7
90013866:	f7fd fbbb 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001386a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001386e:	2b00      	cmp	r3, #0
90013870:	dd12      	ble.n	90013898 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90013872:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90013876:	2b00      	cmp	r3, #0
90013878:	dd0e      	ble.n	90013898 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001387a:	6823      	ldr	r3, [r4, #0]
9001387c:	4639      	mov	r1, r7
9001387e:	4620      	mov	r0, r4
90013880:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013882:	4798      	blx	r3
90013884:	f7fd fe90 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90013888:	6803      	ldr	r3, [r0, #0]
9001388a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001388c:	4639      	mov	r1, r7
9001388e:	f8d3 8020 	ldr.w	r8, [r3, #32]
90013892:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013896:	47c0      	blx	r8
90013898:	3501      	adds	r5, #1
9001389a:	2d04      	cmp	r5, #4
9001389c:	d1da      	bne.n	90013854 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001389e:	e011      	b.n	900138c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900138a0:	6830      	ldr	r0, [r6, #0]
900138a2:	ab06      	add	r3, sp, #24
900138a4:	6871      	ldr	r1, [r6, #4]
900138a6:	c303      	stmia	r3!, {r0, r1}
900138a8:	6823      	ldr	r3, [r4, #0]
900138aa:	a906      	add	r1, sp, #24
900138ac:	4620      	mov	r0, r4
900138ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900138b0:	4798      	blx	r3
900138b2:	f7fd fe79 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900138b6:	6803      	ldr	r3, [r0, #0]
900138b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900138ba:	a906      	add	r1, sp, #24
900138bc:	6a1d      	ldr	r5, [r3, #32]
900138be:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900138c2:	47a8      	blx	r5
900138c4:	b00e      	add	sp, #56	; 0x38
900138c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900138ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
900138ca:	4770      	bx	lr

900138cc <_ZN8touchgfx14ButtonWithIconD1Ev>:
900138cc:	4770      	bx	lr

900138ce <_ZN8touchgfx14ButtonWithIconD0Ev>:
900138ce:	b510      	push	{r4, lr}
900138d0:	4604      	mov	r4, r0
900138d2:	213c      	movs	r1, #60	; 0x3c
900138d4:	f013 feec 	bl	900276b0 <_ZdlPvj>
900138d8:	4620      	mov	r0, r4
900138da:	bd10      	pop	{r4, pc}

900138dc <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
900138dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900138e0:	461c      	mov	r4, r3
900138e2:	4606      	mov	r6, r0
900138e4:	9f06      	ldr	r7, [sp, #24]
900138e6:	f7ff fe2a 	bl	9001353e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900138ea:	8823      	ldrh	r3, [r4, #0]
900138ec:	f04f 0802 	mov.w	r8, #2
900138f0:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
900138f4:	4638      	mov	r0, r7
900138f6:	86b3      	strh	r3, [r6, #52]	; 0x34
900138f8:	883b      	ldrh	r3, [r7, #0]
900138fa:	fb95 f5f8 	sdiv	r5, r5, r8
900138fe:	86f3      	strh	r3, [r6, #54]	; 0x36
90013900:	b2ad      	uxth	r5, r5
90013902:	f005 ff41 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013906:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001390a:	fb90 f0f8 	sdiv	r0, r0, r8
9001390e:	1a2d      	subs	r5, r5, r0
90013910:	4638      	mov	r0, r7
90013912:	fb94 f4f8 	sdiv	r4, r4, r8
90013916:	8735      	strh	r5, [r6, #56]	; 0x38
90013918:	b2a4      	uxth	r4, r4
9001391a:	f005 ff69 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001391e:	fb90 f0f8 	sdiv	r0, r0, r8
90013922:	1a24      	subs	r4, r4, r0
90013924:	8774      	strh	r4, [r6, #58]	; 0x3a
90013926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001392c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
9001392c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013930:	4604      	mov	r4, r0
90013932:	b08c      	sub	sp, #48	; 0x30
90013934:	460d      	mov	r5, r1
90013936:	f7ff fe45 	bl	900135c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001393a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001393e:	2b00      	cmp	r3, #0
90013940:	d05d      	beq.n	900139fe <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90013942:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90013944:	a805      	add	r0, sp, #20
90013946:	f8ad 3014 	strh.w	r3, [sp, #20]
9001394a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
9001394e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90013952:	f005 ff19 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013956:	4606      	mov	r6, r0
90013958:	a805      	add	r0, sp, #20
9001395a:	f005 ff49 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001395e:	6869      	ldr	r1, [r5, #4]
90013960:	f8ad 001e 	strh.w	r0, [sp, #30]
90013964:	ab08      	add	r3, sp, #32
90013966:	6828      	ldr	r0, [r5, #0]
90013968:	ad08      	add	r5, sp, #32
9001396a:	f8ad 8018 	strh.w	r8, [sp, #24]
9001396e:	f8ad 701a 	strh.w	r7, [sp, #26]
90013972:	f8ad 601c 	strh.w	r6, [sp, #28]
90013976:	c303      	stmia	r3!, {r0, r1}
90013978:	a906      	add	r1, sp, #24
9001397a:	4628      	mov	r0, r5
9001397c:	f7fd fb30 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90013980:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90013984:	f64f 73ff 	movw	r3, #65535	; 0xffff
90013988:	429a      	cmp	r2, r3
9001398a:	d035      	beq.n	900139f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001398c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90013990:	2b00      	cmp	r3, #0
90013992:	dd31      	ble.n	900139f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90013994:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
90013998:	2b00      	cmp	r3, #0
9001399a:	dd2d      	ble.n	900139f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001399c:	2300      	movs	r3, #0
9001399e:	a90a      	add	r1, sp, #40	; 0x28
900139a0:	4620      	mov	r0, r4
900139a2:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
900139a6:	6823      	ldr	r3, [r4, #0]
900139a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900139aa:	4798      	blx	r3
900139ac:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900139b0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
900139b2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900139b6:	1a9b      	subs	r3, r3, r2
900139b8:	f8ad 3020 	strh.w	r3, [sp, #32]
900139bc:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
900139be:	1ac9      	subs	r1, r1, r3
900139c0:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
900139c4:	490f      	ldr	r1, [pc, #60]	; (90013a04 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900139c6:	6809      	ldr	r1, [r1, #0]
900139c8:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
900139cc:	b108      	cbz	r0, 900139d2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
900139ce:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
900139d0:	b900      	cbnz	r0, 900139d4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
900139d2:	6888      	ldr	r0, [r1, #8]
900139d4:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
900139d8:	2601      	movs	r6, #1
900139da:	440b      	add	r3, r1
900139dc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
900139e0:	440a      	add	r2, r1
900139e2:	6801      	ldr	r1, [r0, #0]
900139e4:	9602      	str	r6, [sp, #8]
900139e6:	b21b      	sxth	r3, r3
900139e8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900139ec:	b212      	sxth	r2, r2
900139ee:	e9cd 5400 	strd	r5, r4, [sp]
900139f2:	688c      	ldr	r4, [r1, #8]
900139f4:	a905      	add	r1, sp, #20
900139f6:	47a0      	blx	r4
900139f8:	b00c      	add	sp, #48	; 0x30
900139fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900139fe:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90013a00:	e7a0      	b.n	90013944 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90013a02:	bf00      	nop
90013a04:	24039704 	.word	0x24039704

90013a08 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90013a08:	2101      	movs	r1, #1
90013a0a:	2200      	movs	r2, #0
90013a0c:	b510      	push	{r4, lr}
90013a0e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013a12:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90013a16:	f64f 71ff 	movw	r1, #65535	; 0xffff
90013a1a:	4c0d      	ldr	r4, [pc, #52]	; (90013a50 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90013a1c:	8082      	strh	r2, [r0, #4]
90013a1e:	80c2      	strh	r2, [r0, #6]
90013a20:	8102      	strh	r2, [r0, #8]
90013a22:	8142      	strh	r2, [r0, #10]
90013a24:	8182      	strh	r2, [r0, #12]
90013a26:	81c2      	strh	r2, [r0, #14]
90013a28:	8202      	strh	r2, [r0, #16]
90013a2a:	8242      	strh	r2, [r0, #18]
90013a2c:	61c2      	str	r2, [r0, #28]
90013a2e:	8402      	strh	r2, [r0, #32]
90013a30:	8442      	strh	r2, [r0, #34]	; 0x22
90013a32:	6282      	str	r2, [r0, #40]	; 0x28
90013a34:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90013a38:	85c1      	strh	r1, [r0, #46]	; 0x2e
90013a3a:	8601      	strh	r1, [r0, #48]	; 0x30
90013a3c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90013a40:	6004      	str	r4, [r0, #0]
90013a42:	8681      	strh	r1, [r0, #52]	; 0x34
90013a44:	86c1      	strh	r1, [r0, #54]	; 0x36
90013a46:	8702      	strh	r2, [r0, #56]	; 0x38
90013a48:	8742      	strh	r2, [r0, #58]	; 0x3a
90013a4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013a4e:	bd10      	pop	{r4, pc}
90013a50:	9002b958 	.word	0x9002b958

90013a54 <_ZN8touchgfx5ImageD1Ev>:
90013a54:	4770      	bx	lr

90013a56 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90013a56:	b570      	push	{r4, r5, r6, lr}
90013a58:	880b      	ldrh	r3, [r1, #0]
90013a5a:	460d      	mov	r5, r1
90013a5c:	4604      	mov	r4, r0
90013a5e:	84c3      	strh	r3, [r0, #38]	; 0x26
90013a60:	4608      	mov	r0, r1
90013a62:	f005 fe91 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013a66:	4606      	mov	r6, r0
90013a68:	4628      	mov	r0, r5
90013a6a:	f005 fec1 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013a6e:	6823      	ldr	r3, [r4, #0]
90013a70:	4605      	mov	r5, r0
90013a72:	4631      	mov	r1, r6
90013a74:	4620      	mov	r0, r4
90013a76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013a78:	4798      	blx	r3
90013a7a:	6823      	ldr	r3, [r4, #0]
90013a7c:	4629      	mov	r1, r5
90013a7e:	4620      	mov	r0, r4
90013a80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013a82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013a86:	4718      	bx	r3

90013a88 <_ZN8touchgfx5ImageD0Ev>:
90013a88:	b510      	push	{r4, lr}
90013a8a:	4604      	mov	r4, r0
90013a8c:	212c      	movs	r1, #44	; 0x2c
90013a8e:	f013 fe0f 	bl	900276b0 <_ZdlPvj>
90013a92:	4620      	mov	r0, r4
90013a94:	bd10      	pop	{r4, pc}

90013a96 <_ZNK8touchgfx5Image12getSolidRectEv>:
90013a96:	b510      	push	{r4, lr}
90013a98:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90013a9c:	4604      	mov	r4, r0
90013a9e:	2bff      	cmp	r3, #255	; 0xff
90013aa0:	d006      	beq.n	90013ab0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90013aa2:	2300      	movs	r3, #0
90013aa4:	8003      	strh	r3, [r0, #0]
90013aa6:	8043      	strh	r3, [r0, #2]
90013aa8:	8083      	strh	r3, [r0, #4]
90013aaa:	80c3      	strh	r3, [r0, #6]
90013aac:	4620      	mov	r0, r4
90013aae:	bd10      	pop	{r4, pc}
90013ab0:	3126      	adds	r1, #38	; 0x26
90013ab2:	f005 fed1 	bl	90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013ab6:	e7f9      	b.n	90013aac <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90013ab8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90013ab8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013abc:	4604      	mov	r4, r0
90013abe:	b088      	sub	sp, #32
90013ac0:	2500      	movs	r5, #0
90013ac2:	460f      	mov	r7, r1
90013ac4:	f854 3b26 	ldr.w	r3, [r4], #38
90013ac8:	a904      	add	r1, sp, #16
90013aca:	4606      	mov	r6, r0
90013acc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013ace:	e9cd 5504 	strd	r5, r5, [sp, #16]
90013ad2:	4798      	blx	r3
90013ad4:	4620      	mov	r0, r4
90013ad6:	f005 fe57 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013ada:	4680      	mov	r8, r0
90013adc:	4620      	mov	r0, r4
90013ade:	f005 fe87 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013ae2:	9506      	str	r5, [sp, #24]
90013ae4:	ad06      	add	r5, sp, #24
90013ae6:	f8ad 001e 	strh.w	r0, [sp, #30]
90013aea:	4639      	mov	r1, r7
90013aec:	f8ad 801c 	strh.w	r8, [sp, #28]
90013af0:	4628      	mov	r0, r5
90013af2:	f7fd fa75 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90013af6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013afa:	2b00      	cmp	r3, #0
90013afc:	dd19      	ble.n	90013b32 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013afe:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013b02:	2b00      	cmp	r3, #0
90013b04:	dd15      	ble.n	90013b32 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013b06:	4b0c      	ldr	r3, [pc, #48]	; (90013b38 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90013b08:	681b      	ldr	r3, [r3, #0]
90013b0a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013b0e:	b10a      	cbz	r2, 90013b14 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90013b10:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013b12:	b900      	cbnz	r0, 90013b16 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90013b14:	6898      	ldr	r0, [r3, #8]
90013b16:	2701      	movs	r7, #1
90013b18:	6801      	ldr	r1, [r0, #0]
90013b1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90013b1e:	9702      	str	r7, [sp, #8]
90013b20:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90013b24:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90013b28:	e9cd 5600 	strd	r5, r6, [sp]
90013b2c:	688d      	ldr	r5, [r1, #8]
90013b2e:	4621      	mov	r1, r4
90013b30:	47a8      	blx	r5
90013b32:	b008      	add	sp, #32
90013b34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013b38:	24039704 	.word	0x24039704

90013b3c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90013b3c:	4770      	bx	lr

90013b3e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90013b3e:	b510      	push	{r4, lr}
90013b40:	4604      	mov	r4, r0
90013b42:	2148      	movs	r1, #72	; 0x48
90013b44:	f013 fdb4 	bl	900276b0 <_ZdlPvj>
90013b48:	4620      	mov	r0, r4
90013b4a:	bd10      	pop	{r4, pc}

90013b4c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90013b4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013b50:	b08d      	sub	sp, #52	; 0x34
90013b52:	4604      	mov	r4, r0
90013b54:	460f      	mov	r7, r1
90013b56:	f7ff fd35 	bl	900135c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90013b5a:	4a55      	ldr	r2, [pc, #340]	; (90013cb0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90013b5c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90013b5e:	8812      	ldrh	r2, [r2, #0]
90013b60:	429a      	cmp	r2, r3
90013b62:	f240 8082 	bls.w	90013c6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013b66:	4d53      	ldr	r5, [pc, #332]	; (90013cb4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90013b68:	682a      	ldr	r2, [r5, #0]
90013b6a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90013b6e:	4b52      	ldr	r3, [pc, #328]	; (90013cb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90013b70:	681b      	ldr	r3, [r3, #0]
90013b72:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013b76:	2200      	movs	r2, #0
90013b78:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90013b7c:	e9cd 2203 	strd	r2, r2, [sp, #12]
90013b80:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90013b84:	2a03      	cmp	r2, #3
90013b86:	d811      	bhi.n	90013bac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013b88:	e8df f002 	tbb	[pc, r2]
90013b8c:	89727902 	.word	0x89727902
90013b90:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013b94:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013b98:	1ad2      	subs	r2, r2, r3
90013b9a:	2002      	movs	r0, #2
90013b9c:	f8ad 1010 	strh.w	r1, [sp, #16]
90013ba0:	f8ad 3012 	strh.w	r3, [sp, #18]
90013ba4:	fb92 f2f0 	sdiv	r2, r2, r0
90013ba8:	f8ad 200e 	strh.w	r2, [sp, #14]
90013bac:	f10d 080c 	add.w	r8, sp, #12
90013bb0:	f10d 0914 	add.w	r9, sp, #20
90013bb4:	e898 0003 	ldmia.w	r8, {r0, r1}
90013bb8:	e889 0003 	stmia.w	r9, {r0, r1}
90013bbc:	4639      	mov	r1, r7
90013bbe:	4648      	mov	r0, r9
90013bc0:	f7fd fa0e 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90013bc4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013bc8:	2b00      	cmp	r3, #0
90013bca:	dd4e      	ble.n	90013c6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013bcc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013bd0:	2b00      	cmp	r3, #0
90013bd2:	dd4a      	ble.n	90013c6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013bd4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90013bd8:	4641      	mov	r1, r8
90013bda:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013bde:	4620      	mov	r0, r4
90013be0:	1a9b      	subs	r3, r3, r2
90013be2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013be6:	f8ad 3014 	strh.w	r3, [sp, #20]
90013bea:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90013bee:	1a9b      	subs	r3, r3, r2
90013bf0:	f8ad 3016 	strh.w	r3, [sp, #22]
90013bf4:	6823      	ldr	r3, [r4, #0]
90013bf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013bf8:	4798      	blx	r3
90013bfa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90013bfe:	2b00      	cmp	r3, #0
90013c00:	d053      	beq.n	90013caa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90013c02:	6c22      	ldr	r2, [r4, #64]	; 0x40
90013c04:	8f21      	ldrh	r1, [r4, #56]	; 0x38
90013c06:	682b      	ldr	r3, [r5, #0]
90013c08:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
90013c0c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013c10:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
90013c14:	785b      	ldrb	r3, [r3, #1]
90013c16:	9209      	str	r2, [sp, #36]	; 0x24
90013c18:	f3c3 0501 	ubfx	r5, r3, #0, #2
90013c1c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013c20:	9607      	str	r6, [sp, #28]
90013c22:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
90013c26:	2300      	movs	r3, #0
90013c28:	f88d 5020 	strb.w	r5, [sp, #32]
90013c2c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
90013c30:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
90013c34:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90013c38:	4b20      	ldr	r3, [pc, #128]	; (90013cbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90013c3a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013c3e:	681b      	ldr	r3, [r3, #0]
90013c40:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90013c44:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013c48:	b10a      	cbz	r2, 90013c4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90013c4a:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
90013c4c:	b904      	cbnz	r4, 90013c50 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90013c4e:	689c      	ldr	r4, [r3, #8]
90013c50:	4b1b      	ldr	r3, [pc, #108]	; (90013cc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90013c52:	6818      	ldr	r0, [r3, #0]
90013c54:	f7f0 faea 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013c58:	ab07      	add	r3, sp, #28
90013c5a:	9001      	str	r0, [sp, #4]
90013c5c:	4620      	mov	r0, r4
90013c5e:	9300      	str	r3, [sp, #0]
90013c60:	464b      	mov	r3, r9
90013c62:	e898 0006 	ldmia.w	r8, {r1, r2}
90013c66:	f7f0 fa91 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013c6a:	b00d      	add	sp, #52	; 0x34
90013c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013c70:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013c74:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013c78:	1ad2      	subs	r2, r2, r3
90013c7a:	3201      	adds	r2, #1
90013c7c:	e78d      	b.n	90013b9a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90013c7e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013c82:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013c86:	1ad2      	subs	r2, r2, r3
90013c88:	3201      	adds	r2, #1
90013c8a:	2002      	movs	r0, #2
90013c8c:	f8ad 3010 	strh.w	r3, [sp, #16]
90013c90:	f8ad 1012 	strh.w	r1, [sp, #18]
90013c94:	fb92 f2f0 	sdiv	r2, r2, r0
90013c98:	f8ad 200c 	strh.w	r2, [sp, #12]
90013c9c:	e786      	b.n	90013bac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013c9e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013ca2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013ca6:	1ad2      	subs	r2, r2, r3
90013ca8:	e7ef      	b.n	90013c8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90013caa:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90013cac:	e7aa      	b.n	90013c04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90013cae:	bf00      	nop
90013cb0:	24039760 	.word	0x24039760
90013cb4:	2403975c 	.word	0x2403975c
90013cb8:	24039764 	.word	0x24039764
90013cbc:	24039704 	.word	0x24039704
90013cc0:	24039768 	.word	0x24039768

90013cc4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90013cc4:	2101      	movs	r1, #1
90013cc6:	2200      	movs	r2, #0
90013cc8:	b510      	push	{r4, lr}
90013cca:	4c13      	ldr	r4, [pc, #76]	; (90013d18 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90013ccc:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013cd0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90013cd4:	f64f 71ff 	movw	r1, #65535	; 0xffff
90013cd8:	6004      	str	r4, [r0, #0]
90013cda:	4c10      	ldr	r4, [pc, #64]	; (90013d1c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90013cdc:	8082      	strh	r2, [r0, #4]
90013cde:	80c2      	strh	r2, [r0, #6]
90013ce0:	8102      	strh	r2, [r0, #8]
90013ce2:	8142      	strh	r2, [r0, #10]
90013ce4:	8182      	strh	r2, [r0, #12]
90013ce6:	81c2      	strh	r2, [r0, #14]
90013ce8:	8202      	strh	r2, [r0, #16]
90013cea:	8242      	strh	r2, [r0, #18]
90013cec:	61c2      	str	r2, [r0, #28]
90013cee:	8402      	strh	r2, [r0, #32]
90013cf0:	8442      	strh	r2, [r0, #34]	; 0x22
90013cf2:	6282      	str	r2, [r0, #40]	; 0x28
90013cf4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90013cf8:	85c1      	strh	r1, [r0, #46]	; 0x2e
90013cfa:	8601      	strh	r1, [r0, #48]	; 0x30
90013cfc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90013d00:	6344      	str	r4, [r0, #52]	; 0x34
90013d02:	8701      	strh	r1, [r0, #56]	; 0x38
90013d04:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
90013d08:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
90013d0c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013d10:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90013d14:	bd10      	pop	{r4, pc}
90013d16:	bf00      	nop
90013d18:	9002ba3c 	.word	0x9002ba3c
90013d1c:	9002a280 	.word	0x9002a280

90013d20 <_ZN8touchgfx7OutlineD1Ev>:
90013d20:	4770      	bx	lr

90013d22 <_ZN8touchgfx7OutlineD0Ev>:
90013d22:	b510      	push	{r4, lr}
90013d24:	4604      	mov	r4, r0
90013d26:	2130      	movs	r1, #48	; 0x30
90013d28:	f013 fcc2 	bl	900276b0 <_ZdlPvj>
90013d2c:	4620      	mov	r0, r4
90013d2e:	bd10      	pop	{r4, pc}

90013d30 <_ZN8touchgfx7Outline5resetEv>:
90013d30:	b510      	push	{r4, lr}
90013d32:	4604      	mov	r4, r0
90013d34:	f000 fe86 	bl	90014a44 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90013d38:	60e0      	str	r0, [r4, #12]
90013d3a:	f000 fe89 	bl	90014a50 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90013d3e:	68e3      	ldr	r3, [r4, #12]
90013d40:	08c0      	lsrs	r0, r0, #3
90013d42:	2200      	movs	r2, #0
90013d44:	f647 71ff 	movw	r1, #32767	; 0x7fff
90013d48:	6123      	str	r3, [r4, #16]
90013d4a:	3801      	subs	r0, #1
90013d4c:	60a2      	str	r2, [r4, #8]
90013d4e:	6060      	str	r0, [r4, #4]
90013d50:	8019      	strh	r1, [r3, #0]
90013d52:	8059      	strh	r1, [r3, #2]
90013d54:	809a      	strh	r2, [r3, #4]
90013d56:	80da      	strh	r2, [r3, #6]
90013d58:	6a63      	ldr	r3, [r4, #36]	; 0x24
90013d5a:	f023 0301 	bic.w	r3, r3, #1
90013d5e:	f043 0302 	orr.w	r3, r3, #2
90013d62:	6263      	str	r3, [r4, #36]	; 0x24
90013d64:	bd10      	pop	{r4, pc}
	...

90013d68 <_ZN8touchgfx7OutlineC1Ev>:
90013d68:	4b0a      	ldr	r3, [pc, #40]	; (90013d94 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90013d6a:	b510      	push	{r4, lr}
90013d6c:	6003      	str	r3, [r0, #0]
90013d6e:	2300      	movs	r3, #0
90013d70:	4604      	mov	r4, r0
90013d72:	6243      	str	r3, [r0, #36]	; 0x24
90013d74:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013d78:	e9c0 3303 	strd	r3, r3, [r0, #12]
90013d7c:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013d80:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013d84:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90013d88:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90013d8c:	f7ff ffd0 	bl	90013d30 <_ZN8touchgfx7Outline5resetEv>
90013d90:	4620      	mov	r0, r4
90013d92:	bd10      	pop	{r4, pc}
90013d94:	9002bab0 	.word	0x9002bab0

90013d98 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013d9c:	b093      	sub	sp, #76	; 0x4c
90013d9e:	1156      	asrs	r6, r2, #5
90013da0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90013da2:	9305      	str	r3, [sp, #20]
90013da4:	1153      	asrs	r3, r2, #5
90013da6:	f004 051f 	and.w	r5, r4, #31
90013daa:	9303      	str	r3, [sp, #12]
90013dac:	1163      	asrs	r3, r4, #5
90013dae:	9504      	str	r5, [sp, #16]
90013db0:	1165      	asrs	r5, r4, #5
90013db2:	9306      	str	r3, [sp, #24]
90013db4:	f002 031f 	and.w	r3, r2, #31
90013db8:	42ae      	cmp	r6, r5
90013dba:	f040 80f4 	bne.w	90013fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90013dbe:	9c04      	ldr	r4, [sp, #16]
90013dc0:	9a05      	ldr	r2, [sp, #20]
90013dc2:	42a3      	cmp	r3, r4
90013dc4:	ea4f 1e62 	mov.w	lr, r2, asr #5
90013dc8:	6902      	ldr	r2, [r0, #16]
90013dca:	d125      	bne.n	90013e18 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90013dcc:	f9b2 3000 	ldrsh.w	r3, [r2]
90013dd0:	459e      	cmp	lr, r3
90013dd2:	d103      	bne.n	90013ddc <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90013dd4:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013dd8:	429e      	cmp	r6, r3
90013dda:	d035      	beq.n	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013ddc:	88d1      	ldrh	r1, [r2, #6]
90013dde:	8893      	ldrh	r3, [r2, #4]
90013de0:	430b      	orrs	r3, r1
90013de2:	d010      	beq.n	90013e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013de4:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013de8:	2b00      	cmp	r3, #0
90013dea:	db0c      	blt.n	90013e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013dec:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90013dee:	428b      	cmp	r3, r1
90013df0:	da09      	bge.n	90013e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013df2:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90013df6:	428b      	cmp	r3, r1
90013df8:	f103 0301 	add.w	r3, r3, #1
90013dfc:	bf38      	it	cc
90013dfe:	3208      	addcc	r2, #8
90013e00:	6083      	str	r3, [r0, #8]
90013e02:	bf38      	it	cc
90013e04:	6102      	strcc	r2, [r0, #16]
90013e06:	6903      	ldr	r3, [r0, #16]
90013e08:	9a03      	ldr	r2, [sp, #12]
90013e0a:	f8a3 e000 	strh.w	lr, [r3]
90013e0e:	805a      	strh	r2, [r3, #2]
90013e10:	2200      	movs	r2, #0
90013e12:	809a      	strh	r2, [r3, #4]
90013e14:	80da      	strh	r2, [r3, #6]
90013e16:	e017      	b.n	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013e18:	9c05      	ldr	r4, [sp, #20]
90013e1a:	114e      	asrs	r6, r1, #5
90013e1c:	f001 0c1f 	and.w	ip, r1, #31
90013e20:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90013e24:	f004 041f 	and.w	r4, r4, #31
90013e28:	4576      	cmp	r6, lr
90013e2a:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90013e2e:	9402      	str	r4, [sp, #8]
90013e30:	9c04      	ldr	r4, [sp, #16]
90013e32:	eba4 0403 	sub.w	r4, r4, r3
90013e36:	d10a      	bne.n	90013e4e <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90013e38:	9b02      	ldr	r3, [sp, #8]
90013e3a:	44a0      	add	r8, r4
90013e3c:	449c      	add	ip, r3
90013e3e:	f8a2 8004 	strh.w	r8, [r2, #4]
90013e42:	fb04 a40c 	mla	r4, r4, ip, sl
90013e46:	80d4      	strh	r4, [r2, #6]
90013e48:	b013      	add	sp, #76	; 0x4c
90013e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013e4e:	9d05      	ldr	r5, [sp, #20]
90013e50:	1a69      	subs	r1, r5, r1
90013e52:	bf51      	iteee	pl
90013e54:	f1cc 0520 	rsbpl	r5, ip, #32
90013e58:	fb04 f40c 	mulmi.w	r4, r4, ip
90013e5c:	4249      	negmi	r1, r1
90013e5e:	2500      	movmi	r5, #0
90013e60:	bf5d      	ittte	pl
90013e62:	436c      	mulpl	r4, r5
90013e64:	2520      	movpl	r5, #32
90013e66:	f04f 0901 	movpl.w	r9, #1
90013e6a:	f04f 39ff 	movmi.w	r9, #4294967295
90013e6e:	9501      	str	r5, [sp, #4]
90013e70:	9f01      	ldr	r7, [sp, #4]
90013e72:	444e      	add	r6, r9
90013e74:	fb94 f5f1 	sdiv	r5, r4, r1
90013e78:	fb01 4415 	mls	r4, r1, r5, r4
90013e7c:	44bc      	add	ip, r7
90013e7e:	2c00      	cmp	r4, #0
90013e80:	bfbc      	itt	lt
90013e82:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013e86:	1864      	addlt	r4, r4, r1
90013e88:	44a8      	add	r8, r5
90013e8a:	fb05 ac0c 	mla	ip, r5, ip, sl
90013e8e:	f8a2 8004 	strh.w	r8, [r2, #4]
90013e92:	f8a2 c006 	strh.w	ip, [r2, #6]
90013e96:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013e9a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013e9e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90013ea2:	ea58 0202 	orrs.w	r2, r8, r2
90013ea6:	d011      	beq.n	90013ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013ea8:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013eac:	f1b8 0f00 	cmp.w	r8, #0
90013eb0:	db0c      	blt.n	90013ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013eb2:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90013eb4:	4590      	cmp	r8, r2
90013eb6:	da09      	bge.n	90013ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013eb8:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90013ebc:	4590      	cmp	r8, r2
90013ebe:	bf3c      	itt	cc
90013ec0:	f10c 0208 	addcc.w	r2, ip, #8
90013ec4:	6102      	strcc	r2, [r0, #16]
90013ec6:	f108 0201 	add.w	r2, r8, #1
90013eca:	6082      	str	r2, [r0, #8]
90013ecc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013ed0:	2700      	movs	r7, #0
90013ed2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90013ed6:	45b6      	cmp	lr, r6
90013ed8:	f8ac 6000 	strh.w	r6, [ip]
90013edc:	442b      	add	r3, r5
90013ede:	f8ac 2002 	strh.w	r2, [ip, #2]
90013ee2:	f8ac 7004 	strh.w	r7, [ip, #4]
90013ee6:	f8ac 7006 	strh.w	r7, [ip, #6]
90013eea:	d04b      	beq.n	90013f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90013eec:	9f04      	ldr	r7, [sp, #16]
90013eee:	1a64      	subs	r4, r4, r1
90013ef0:	f04f 0a00 	mov.w	sl, #0
90013ef4:	1aff      	subs	r7, r7, r3
90013ef6:	443d      	add	r5, r7
90013ef8:	016d      	lsls	r5, r5, #5
90013efa:	fb95 f8f1 	sdiv	r8, r5, r1
90013efe:	fb01 5518 	mls	r5, r1, r8, r5
90013f02:	2d00      	cmp	r5, #0
90013f04:	bfbc      	itt	lt
90013f06:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013f0a:	186d      	addlt	r5, r5, r1
90013f0c:	f108 0701 	add.w	r7, r8, #1
90013f10:	9703      	str	r7, [sp, #12]
90013f12:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013f16:	1964      	adds	r4, r4, r5
90013f18:	444e      	add	r6, r9
90013f1a:	bf54      	ite	pl
90013f1c:	9f03      	ldrpl	r7, [sp, #12]
90013f1e:	4647      	movmi	r7, r8
90013f20:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013f24:	bf58      	it	pl
90013f26:	1a64      	subpl	r4, r4, r1
90013f28:	443b      	add	r3, r7
90013f2a:	44bb      	add	fp, r7
90013f2c:	f8ac b004 	strh.w	fp, [ip, #4]
90013f30:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013f34:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013f38:	f8ac b006 	strh.w	fp, [ip, #6]
90013f3c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013f40:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013f44:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013f48:	ea5b 0707 	orrs.w	r7, fp, r7
90013f4c:	d011      	beq.n	90013f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013f4e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013f52:	f1bb 0f00 	cmp.w	fp, #0
90013f56:	db0c      	blt.n	90013f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013f58:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90013f5a:	45bb      	cmp	fp, r7
90013f5c:	da09      	bge.n	90013f72 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013f5e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013f62:	45bb      	cmp	fp, r7
90013f64:	bf3c      	itt	cc
90013f66:	f10c 0708 	addcc.w	r7, ip, #8
90013f6a:	6107      	strcc	r7, [r0, #16]
90013f6c:	f10b 0701 	add.w	r7, fp, #1
90013f70:	6087      	str	r7, [r0, #8]
90013f72:	6907      	ldr	r7, [r0, #16]
90013f74:	45b6      	cmp	lr, r6
90013f76:	803e      	strh	r6, [r7, #0]
90013f78:	807a      	strh	r2, [r7, #2]
90013f7a:	f8a7 a004 	strh.w	sl, [r7, #4]
90013f7e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013f82:	d1c6      	bne.n	90013f12 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013f84:	9a04      	ldr	r2, [sp, #16]
90013f86:	1ad3      	subs	r3, r2, r3
90013f88:	6902      	ldr	r2, [r0, #16]
90013f8a:	8891      	ldrh	r1, [r2, #4]
90013f8c:	88d6      	ldrh	r6, [r2, #6]
90013f8e:	4419      	add	r1, r3
90013f90:	8091      	strh	r1, [r2, #4]
90013f92:	9902      	ldr	r1, [sp, #8]
90013f94:	f101 0c20 	add.w	ip, r1, #32
90013f98:	9901      	ldr	r1, [sp, #4]
90013f9a:	ebac 0c01 	sub.w	ip, ip, r1
90013f9e:	fb03 630c 	mla	r3, r3, ip, r6
90013fa2:	80d3      	strh	r3, [r2, #6]
90013fa4:	e750      	b.n	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013fa6:	9d05      	ldr	r5, [sp, #20]
90013fa8:	1aa2      	subs	r2, r4, r2
90013faa:	eba5 0501 	sub.w	r5, r5, r1
90013fae:	9202      	str	r2, [sp, #8]
90013fb0:	9508      	str	r5, [sp, #32]
90013fb2:	f140 8128 	bpl.w	90014206 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90013fb6:	9a03      	ldr	r2, [sp, #12]
90013fb8:	2a00      	cmp	r2, #0
90013fba:	f6ff af45 	blt.w	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013fbe:	9a02      	ldr	r2, [sp, #8]
90013fc0:	f04f 34ff 	mov.w	r4, #4294967295
90013fc4:	4252      	negs	r2, r2
90013fc6:	940b      	str	r4, [sp, #44]	; 0x2c
90013fc8:	2400      	movs	r4, #0
90013fca:	9202      	str	r2, [sp, #8]
90013fcc:	9a06      	ldr	r2, [sp, #24]
90013fce:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90013fd2:	9206      	str	r2, [sp, #24]
90013fd4:	462a      	mov	r2, r5
90013fd6:	435a      	muls	r2, r3
90013fd8:	9401      	str	r4, [sp, #4]
90013fda:	9c02      	ldr	r4, [sp, #8]
90013fdc:	9d02      	ldr	r5, [sp, #8]
90013fde:	fb92 f4f4 	sdiv	r4, r2, r4
90013fe2:	fb05 2214 	mls	r2, r5, r4, r2
90013fe6:	2a00      	cmp	r2, #0
90013fe8:	9207      	str	r2, [sp, #28]
90013fea:	bfbc      	itt	lt
90013fec:	1952      	addlt	r2, r2, r5
90013fee:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013ff2:	6905      	ldr	r5, [r0, #16]
90013ff4:	bfb8      	it	lt
90013ff6:	9207      	strlt	r2, [sp, #28]
90013ff8:	eb04 0901 	add.w	r9, r4, r1
90013ffc:	9a01      	ldr	r2, [sp, #4]
90013ffe:	ea4f 1669 	mov.w	r6, r9, asr #5
90014002:	429a      	cmp	r2, r3
90014004:	f040 8111 	bne.w	9001422a <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014008:	f9b5 3000 	ldrsh.w	r3, [r5]
9001400c:	429e      	cmp	r6, r3
9001400e:	d104      	bne.n	9001401a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014010:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014014:	9a03      	ldr	r2, [sp, #12]
90014016:	429a      	cmp	r2, r3
90014018:	d01b      	beq.n	90014052 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001401a:	88ea      	ldrh	r2, [r5, #6]
9001401c:	88ab      	ldrh	r3, [r5, #4]
9001401e:	4313      	orrs	r3, r2
90014020:	d010      	beq.n	90014044 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014022:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014026:	2a00      	cmp	r2, #0
90014028:	db0c      	blt.n	90014044 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001402a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001402c:	429a      	cmp	r2, r3
9001402e:	da09      	bge.n	90014044 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014030:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90014034:	429a      	cmp	r2, r3
90014036:	f102 0201 	add.w	r2, r2, #1
9001403a:	bf38      	it	cc
9001403c:	3508      	addcc	r5, #8
9001403e:	6082      	str	r2, [r0, #8]
90014040:	bf38      	it	cc
90014042:	6105      	strcc	r5, [r0, #16]
90014044:	6903      	ldr	r3, [r0, #16]
90014046:	9a03      	ldr	r2, [sp, #12]
90014048:	801e      	strh	r6, [r3, #0]
9001404a:	805a      	strh	r2, [r3, #2]
9001404c:	2200      	movs	r2, #0
9001404e:	809a      	strh	r2, [r3, #4]
90014050:	80da      	strh	r2, [r3, #6]
90014052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90014054:	9a03      	ldr	r2, [sp, #12]
90014056:	6901      	ldr	r1, [r0, #16]
90014058:	441a      	add	r2, r3
9001405a:	f9b1 3000 	ldrsh.w	r3, [r1]
9001405e:	42b3      	cmp	r3, r6
90014060:	d103      	bne.n	9001406a <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90014062:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014066:	429a      	cmp	r2, r3
90014068:	d01a      	beq.n	900140a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
9001406a:	88cc      	ldrh	r4, [r1, #6]
9001406c:	888b      	ldrh	r3, [r1, #4]
9001406e:	4323      	orrs	r3, r4
90014070:	d010      	beq.n	90014094 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014072:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90014076:	2c00      	cmp	r4, #0
90014078:	db0c      	blt.n	90014094 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001407a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001407c:	429c      	cmp	r4, r3
9001407e:	da09      	bge.n	90014094 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014080:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014084:	429c      	cmp	r4, r3
90014086:	f104 0401 	add.w	r4, r4, #1
9001408a:	bf38      	it	cc
9001408c:	3108      	addcc	r1, #8
9001408e:	6084      	str	r4, [r0, #8]
90014090:	bf38      	it	cc
90014092:	6101      	strcc	r1, [r0, #16]
90014094:	6903      	ldr	r3, [r0, #16]
90014096:	2100      	movs	r1, #0
90014098:	801e      	strh	r6, [r3, #0]
9001409a:	805a      	strh	r2, [r3, #2]
9001409c:	8099      	strh	r1, [r3, #4]
9001409e:	80d9      	strh	r1, [r3, #6]
900140a0:	9b06      	ldr	r3, [sp, #24]
900140a2:	4293      	cmp	r3, r2
900140a4:	f000 8082 	beq.w	900141ac <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900140a8:	9b08      	ldr	r3, [sp, #32]
900140aa:	9902      	ldr	r1, [sp, #8]
900140ac:	015b      	lsls	r3, r3, #5
900140ae:	9c02      	ldr	r4, [sp, #8]
900140b0:	fb93 f1f1 	sdiv	r1, r3, r1
900140b4:	fb04 3311 	mls	r3, r4, r1, r3
900140b8:	9103      	str	r1, [sp, #12]
900140ba:	2b00      	cmp	r3, #0
900140bc:	9308      	str	r3, [sp, #32]
900140be:	da04      	bge.n	900140ca <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900140c0:	1e4b      	subs	r3, r1, #1
900140c2:	9303      	str	r3, [sp, #12]
900140c4:	9b08      	ldr	r3, [sp, #32]
900140c6:	4423      	add	r3, r4
900140c8:	9308      	str	r3, [sp, #32]
900140ca:	9b07      	ldr	r3, [sp, #28]
900140cc:	464f      	mov	r7, r9
900140ce:	9902      	ldr	r1, [sp, #8]
900140d0:	2600      	movs	r6, #0
900140d2:	1a5b      	subs	r3, r3, r1
900140d4:	9307      	str	r3, [sp, #28]
900140d6:	9b01      	ldr	r3, [sp, #4]
900140d8:	f1c3 0320 	rsb	r3, r3, #32
900140dc:	930e      	str	r3, [sp, #56]	; 0x38
900140de:	990e      	ldr	r1, [sp, #56]	; 0x38
900140e0:	9b01      	ldr	r3, [sp, #4]
900140e2:	1a5b      	subs	r3, r3, r1
900140e4:	930a      	str	r3, [sp, #40]	; 0x28
900140e6:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
900140ea:	185b      	adds	r3, r3, r1
900140ec:	bf58      	it	pl
900140ee:	9902      	ldrpl	r1, [sp, #8]
900140f0:	9307      	str	r3, [sp, #28]
900140f2:	bf57      	itett	pl
900140f4:	1a5b      	subpl	r3, r3, r1
900140f6:	9903      	ldrmi	r1, [sp, #12]
900140f8:	9307      	strpl	r3, [sp, #28]
900140fa:	9b03      	ldrpl	r3, [sp, #12]
900140fc:	bf58      	it	pl
900140fe:	1c59      	addpl	r1, r3, #1
90014100:	2a00      	cmp	r2, #0
90014102:	4489      	add	r9, r1
90014104:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014108:	db2e      	blt.n	90014168 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001410a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001410c:	4293      	cmp	r3, r2
9001410e:	dd2b      	ble.n	90014168 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014110:	9c01      	ldr	r4, [sp, #4]
90014112:	6905      	ldr	r5, [r0, #16]
90014114:	46a0      	mov	r8, r4
90014116:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90014118:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
9001411c:	45a0      	cmp	r8, r4
9001411e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014122:	f040 814c 	bne.w	900143be <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014126:	f9b5 1000 	ldrsh.w	r1, [r5]
9001412a:	4551      	cmp	r1, sl
9001412c:	d103      	bne.n	90014136 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001412e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014132:	4291      	cmp	r1, r2
90014134:	d018      	beq.n	90014168 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014136:	ea5c 010e 	orrs.w	r1, ip, lr
9001413a:	d00f      	beq.n	9001415c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
9001413c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90014140:	2900      	cmp	r1, #0
90014142:	db0b      	blt.n	9001415c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014144:	428b      	cmp	r3, r1
90014146:	dd09      	ble.n	9001415c <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90014148:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
9001414c:	4299      	cmp	r1, r3
9001414e:	f101 0101 	add.w	r1, r1, #1
90014152:	bf38      	it	cc
90014154:	3508      	addcc	r5, #8
90014156:	6081      	str	r1, [r0, #8]
90014158:	bf38      	it	cc
9001415a:	6105      	strcc	r5, [r0, #16]
9001415c:	6903      	ldr	r3, [r0, #16]
9001415e:	f8a3 a000 	strh.w	sl, [r3]
90014162:	805a      	strh	r2, [r3, #2]
90014164:	809e      	strh	r6, [r3, #4]
90014166:	80de      	strh	r6, [r3, #6]
90014168:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001416a:	6901      	ldr	r1, [r0, #16]
9001416c:	441a      	add	r2, r3
9001416e:	88cc      	ldrh	r4, [r1, #6]
90014170:	888b      	ldrh	r3, [r1, #4]
90014172:	4323      	orrs	r3, r4
90014174:	d010      	beq.n	90014198 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014176:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
9001417a:	2c00      	cmp	r4, #0
9001417c:	db0c      	blt.n	90014198 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001417e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014180:	429c      	cmp	r4, r3
90014182:	da09      	bge.n	90014198 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014184:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014188:	429c      	cmp	r4, r3
9001418a:	f104 0401 	add.w	r4, r4, #1
9001418e:	bf38      	it	cc
90014190:	3108      	addcc	r1, #8
90014192:	6084      	str	r4, [r0, #8]
90014194:	bf38      	it	cc
90014196:	6101      	strcc	r1, [r0, #16]
90014198:	6903      	ldr	r3, [r0, #16]
9001419a:	464f      	mov	r7, r9
9001419c:	f8a3 a000 	strh.w	sl, [r3]
900141a0:	805a      	strh	r2, [r3, #2]
900141a2:	809e      	strh	r6, [r3, #4]
900141a4:	80de      	strh	r6, [r3, #6]
900141a6:	9b06      	ldr	r3, [sp, #24]
900141a8:	4293      	cmp	r3, r2
900141aa:	d19c      	bne.n	900140e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900141ac:	9b01      	ldr	r3, [sp, #4]
900141ae:	6907      	ldr	r7, [r0, #16]
900141b0:	f1c3 0620 	rsb	r6, r3, #32
900141b4:	9b05      	ldr	r3, [sp, #20]
900141b6:	ea4f 1e63 	mov.w	lr, r3, asr #5
900141ba:	9b04      	ldr	r3, [sp, #16]
900141bc:	429e      	cmp	r6, r3
900141be:	f040 81c7 	bne.w	90014550 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900141c2:	f9b7 3000 	ldrsh.w	r3, [r7]
900141c6:	459e      	cmp	lr, r3
900141c8:	d104      	bne.n	900141d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900141ca:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900141ce:	429a      	cmp	r2, r3
900141d0:	f43f ae3a 	beq.w	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900141d4:	88f9      	ldrh	r1, [r7, #6]
900141d6:	88bb      	ldrh	r3, [r7, #4]
900141d8:	430b      	orrs	r3, r1
900141da:	d010      	beq.n	900141fe <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900141dc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900141e0:	2b00      	cmp	r3, #0
900141e2:	db0c      	blt.n	900141fe <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900141e4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
900141e6:	428b      	cmp	r3, r1
900141e8:	da09      	bge.n	900141fe <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900141ea:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900141ee:	428b      	cmp	r3, r1
900141f0:	f103 0301 	add.w	r3, r3, #1
900141f4:	bf38      	it	cc
900141f6:	3708      	addcc	r7, #8
900141f8:	6083      	str	r3, [r0, #8]
900141fa:	bf38      	it	cc
900141fc:	6107      	strcc	r7, [r0, #16]
900141fe:	6903      	ldr	r3, [r0, #16]
90014200:	f8a3 e000 	strh.w	lr, [r3]
90014204:	e603      	b.n	90013e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014206:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014208:	9c03      	ldr	r4, [sp, #12]
9001420a:	42a2      	cmp	r2, r4
9001420c:	f6ff ae1c 	blt.w	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014210:	9c06      	ldr	r4, [sp, #24]
90014212:	42a2      	cmp	r2, r4
90014214:	9c08      	ldr	r4, [sp, #32]
90014216:	bfbc      	itt	lt
90014218:	3201      	addlt	r2, #1
9001421a:	9206      	strlt	r2, [sp, #24]
9001421c:	f1c3 0220 	rsb	r2, r3, #32
90014220:	4362      	muls	r2, r4
90014222:	2401      	movs	r4, #1
90014224:	940b      	str	r4, [sp, #44]	; 0x2c
90014226:	2420      	movs	r4, #32
90014228:	e6d6      	b.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
9001422a:	ea4f 1861 	mov.w	r8, r1, asr #5
9001422e:	f009 021f 	and.w	r2, r9, #31
90014232:	f001 011f 	and.w	r1, r1, #31
90014236:	f8b5 e004 	ldrh.w	lr, [r5, #4]
9001423a:	920c      	str	r2, [sp, #48]	; 0x30
9001423c:	45b0      	cmp	r8, r6
9001423e:	9a01      	ldr	r2, [sp, #4]
90014240:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90014244:	eba2 0203 	sub.w	r2, r2, r3
90014248:	d108      	bne.n	9001425c <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
9001424a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001424c:	4496      	add	lr, r2
9001424e:	4419      	add	r1, r3
90014250:	f8a5 e004 	strh.w	lr, [r5, #4]
90014254:	fb02 a101 	mla	r1, r2, r1, sl
90014258:	80e9      	strh	r1, [r5, #6]
9001425a:	e6fa      	b.n	90014052 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001425c:	2c00      	cmp	r4, #0
9001425e:	f2c0 80a7 	blt.w	900143b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90014262:	2701      	movs	r7, #1
90014264:	f1c1 0c20 	rsb	ip, r1, #32
90014268:	970a      	str	r7, [sp, #40]	; 0x28
9001426a:	2720      	movs	r7, #32
9001426c:	fb02 f20c 	mul.w	r2, r2, ip
90014270:	9709      	str	r7, [sp, #36]	; 0x24
90014272:	9f09      	ldr	r7, [sp, #36]	; 0x24
90014274:	fb92 fcf4 	sdiv	ip, r2, r4
90014278:	fb04 221c 	mls	r2, r4, ip, r2
9001427c:	4439      	add	r1, r7
9001427e:	2a00      	cmp	r2, #0
90014280:	bfbc      	itt	lt
90014282:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014286:	1912      	addlt	r2, r2, r4
90014288:	fb0c a101 	mla	r1, ip, r1, sl
9001428c:	44e6      	add	lr, ip
9001428e:	80e9      	strh	r1, [r5, #6]
90014290:	990a      	ldr	r1, [sp, #40]	; 0x28
90014292:	f8a5 e004 	strh.w	lr, [r5, #4]
90014296:	eb08 0501 	add.w	r5, r8, r1
9001429a:	6901      	ldr	r1, [r0, #16]
9001429c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900142a0:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900142a4:	ea58 070e 	orrs.w	r7, r8, lr
900142a8:	d010      	beq.n	900142cc <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900142aa:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900142ae:	f1be 0f00 	cmp.w	lr, #0
900142b2:	db0b      	blt.n	900142cc <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900142b4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900142b6:	45be      	cmp	lr, r7
900142b8:	da08      	bge.n	900142cc <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900142ba:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900142be:	45be      	cmp	lr, r7
900142c0:	bf3c      	itt	cc
900142c2:	3108      	addcc	r1, #8
900142c4:	6101      	strcc	r1, [r0, #16]
900142c6:	f10e 0101 	add.w	r1, lr, #1
900142ca:	6081      	str	r1, [r0, #8]
900142cc:	6901      	ldr	r1, [r0, #16]
900142ce:	f04f 0e00 	mov.w	lr, #0
900142d2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900142d6:	42ae      	cmp	r6, r5
900142d8:	800d      	strh	r5, [r1, #0]
900142da:	4463      	add	r3, ip
900142dc:	f8a1 8002 	strh.w	r8, [r1, #2]
900142e0:	f8a1 e004 	strh.w	lr, [r1, #4]
900142e4:	f8a1 e006 	strh.w	lr, [r1, #6]
900142e8:	d053      	beq.n	90014392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
900142ea:	9901      	ldr	r1, [sp, #4]
900142ec:	1b12      	subs	r2, r2, r4
900142ee:	1ac9      	subs	r1, r1, r3
900142f0:	4461      	add	r1, ip
900142f2:	0149      	lsls	r1, r1, #5
900142f4:	fb91 fef4 	sdiv	lr, r1, r4
900142f8:	fb04 111e 	mls	r1, r4, lr, r1
900142fc:	2900      	cmp	r1, #0
900142fe:	bfbc      	itt	lt
90014300:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014304:	1909      	addlt	r1, r1, r4
90014306:	f10e 0701 	add.w	r7, lr, #1
9001430a:	970d      	str	r7, [sp, #52]	; 0x34
9001430c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014310:	1852      	adds	r2, r2, r1
90014312:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90014314:	bf54      	ite	pl
90014316:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
9001431a:	46f4      	movmi	ip, lr
9001431c:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014320:	bf58      	it	pl
90014322:	1b12      	subpl	r2, r2, r4
90014324:	4463      	add	r3, ip
90014326:	443d      	add	r5, r7
90014328:	44e3      	add	fp, ip
9001432a:	f8aa b004 	strh.w	fp, [sl, #4]
9001432e:	f8ba b006 	ldrh.w	fp, [sl, #6]
90014332:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90014336:	f8aa b006 	strh.w	fp, [sl, #6]
9001433a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001433e:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014342:	f8bc a004 	ldrh.w	sl, [ip, #4]
90014346:	ea5b 070a 	orrs.w	r7, fp, sl
9001434a:	d014      	beq.n	90014376 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001434c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90014350:	f1ba 0f00 	cmp.w	sl, #0
90014354:	db0f      	blt.n	90014376 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014356:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014358:	45ba      	cmp	sl, r7
9001435a:	da0c      	bge.n	90014376 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001435c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90014360:	45ba      	cmp	sl, r7
90014362:	f10a 0a01 	add.w	sl, sl, #1
90014366:	bf38      	it	cc
90014368:	f10c 0c08 	addcc.w	ip, ip, #8
9001436c:	f8c0 a008 	str.w	sl, [r0, #8]
90014370:	bf38      	it	cc
90014372:	f8c0 c010 	strcc.w	ip, [r0, #16]
90014376:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001437a:	f04f 0700 	mov.w	r7, #0
9001437e:	42ae      	cmp	r6, r5
90014380:	f8ac 5000 	strh.w	r5, [ip]
90014384:	f8ac 8002 	strh.w	r8, [ip, #2]
90014388:	f8ac 7004 	strh.w	r7, [ip, #4]
9001438c:	f8ac 7006 	strh.w	r7, [ip, #6]
90014390:	d1bc      	bne.n	9001430c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014392:	6904      	ldr	r4, [r0, #16]
90014394:	9a01      	ldr	r2, [sp, #4]
90014396:	990c      	ldr	r1, [sp, #48]	; 0x30
90014398:	1ad3      	subs	r3, r2, r3
9001439a:	88a2      	ldrh	r2, [r4, #4]
9001439c:	3120      	adds	r1, #32
9001439e:	441a      	add	r2, r3
900143a0:	80a2      	strh	r2, [r4, #4]
900143a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900143a4:	1a89      	subs	r1, r1, r2
900143a6:	88e2      	ldrh	r2, [r4, #6]
900143a8:	fb03 2301 	mla	r3, r3, r1, r2
900143ac:	80e3      	strh	r3, [r4, #6]
900143ae:	e650      	b.n	90014052 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900143b0:	f04f 37ff 	mov.w	r7, #4294967295
900143b4:	434a      	muls	r2, r1
900143b6:	4264      	negs	r4, r4
900143b8:	970a      	str	r7, [sp, #40]	; 0x28
900143ba:	2700      	movs	r7, #0
900143bc:	e758      	b.n	90014270 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900143be:	ea4f 1867 	mov.w	r8, r7, asr #5
900143c2:	f009 031f 	and.w	r3, r9, #31
900143c6:	f007 071f 	and.w	r7, r7, #31
900143ca:	fa1f fc8c 	uxth.w	ip, ip
900143ce:	45d0      	cmp	r8, sl
900143d0:	930f      	str	r3, [sp, #60]	; 0x3c
900143d2:	fa1f fe8e 	uxth.w	lr, lr
900143d6:	d10a      	bne.n	900143ee <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
900143d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900143da:	449c      	add	ip, r3
900143dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900143de:	441f      	add	r7, r3
900143e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900143e2:	f8a5 c004 	strh.w	ip, [r5, #4]
900143e6:	fb03 e707 	mla	r7, r3, r7, lr
900143ea:	80ef      	strh	r7, [r5, #6]
900143ec:	e6bc      	b.n	90014168 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900143ee:	2900      	cmp	r1, #0
900143f0:	f2c0 80a6 	blt.w	90014540 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900143f4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900143f6:	f1c7 0320 	rsb	r3, r7, #32
900143fa:	4363      	muls	r3, r4
900143fc:	2401      	movs	r4, #1
900143fe:	940d      	str	r4, [sp, #52]	; 0x34
90014400:	2420      	movs	r4, #32
90014402:	940c      	str	r4, [sp, #48]	; 0x30
90014404:	fb93 f4f1 	sdiv	r4, r3, r1
90014408:	fb01 3b14 	mls	fp, r1, r4, r3
9001440c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001440e:	f1bb 0f00 	cmp.w	fp, #0
90014412:	441f      	add	r7, r3
90014414:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014416:	bfbc      	itt	lt
90014418:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001441c:	448b      	addlt	fp, r1
9001441e:	fb04 e707 	mla	r7, r4, r7, lr
90014422:	44a4      	add	ip, r4
90014424:	80ef      	strh	r7, [r5, #6]
90014426:	f8a5 c004 	strh.w	ip, [r5, #4]
9001442a:	eb08 0503 	add.w	r5, r8, r3
9001442e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014432:	f8bc e006 	ldrh.w	lr, [ip, #6]
90014436:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001443a:	ea5e 0307 	orrs.w	r3, lr, r7
9001443e:	d011      	beq.n	90014464 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014440:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90014444:	f1be 0f00 	cmp.w	lr, #0
90014448:	db0c      	blt.n	90014464 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001444a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001444c:	45be      	cmp	lr, r7
9001444e:	da09      	bge.n	90014464 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014450:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014454:	45be      	cmp	lr, r7
90014456:	bf3c      	itt	cc
90014458:	f10c 0708 	addcc.w	r7, ip, #8
9001445c:	6107      	strcc	r7, [r0, #16]
9001445e:	f10e 0701 	add.w	r7, lr, #1
90014462:	6087      	str	r7, [r0, #8]
90014464:	6907      	ldr	r7, [r0, #16]
90014466:	b213      	sxth	r3, r2
90014468:	4555      	cmp	r5, sl
9001446a:	9310      	str	r3, [sp, #64]	; 0x40
9001446c:	807b      	strh	r3, [r7, #2]
9001446e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014470:	803d      	strh	r5, [r7, #0]
90014472:	80be      	strh	r6, [r7, #4]
90014474:	eb04 0c03 	add.w	ip, r4, r3
90014478:	80fe      	strh	r6, [r7, #6]
9001447a:	d050      	beq.n	9001451e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
9001447c:	9b01      	ldr	r3, [sp, #4]
9001447e:	eba3 070c 	sub.w	r7, r3, ip
90014482:	ebab 0301 	sub.w	r3, fp, r1
90014486:	443c      	add	r4, r7
90014488:	9309      	str	r3, [sp, #36]	; 0x24
9001448a:	0164      	lsls	r4, r4, #5
9001448c:	fb94 f8f1 	sdiv	r8, r4, r1
90014490:	fb01 4418 	mls	r4, r1, r8, r4
90014494:	2c00      	cmp	r4, #0
90014496:	bfbc      	itt	lt
90014498:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001449c:	1864      	addlt	r4, r4, r1
9001449e:	f108 0701 	add.w	r7, r8, #1
900144a2:	9711      	str	r7, [sp, #68]	; 0x44
900144a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900144a6:	f8d0 e010 	ldr.w	lr, [r0, #16]
900144aa:	191b      	adds	r3, r3, r4
900144ac:	f8be b004 	ldrh.w	fp, [lr, #4]
900144b0:	bf54      	ite	pl
900144b2:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
900144b4:	4647      	movmi	r7, r8
900144b6:	9309      	str	r3, [sp, #36]	; 0x24
900144b8:	bf58      	it	pl
900144ba:	1a5b      	subpl	r3, r3, r1
900144bc:	44bb      	add	fp, r7
900144be:	44bc      	add	ip, r7
900144c0:	bf58      	it	pl
900144c2:	9309      	strpl	r3, [sp, #36]	; 0x24
900144c4:	f8ae b004 	strh.w	fp, [lr, #4]
900144c8:	f8be b006 	ldrh.w	fp, [lr, #6]
900144cc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900144d0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
900144d2:	f8ae b006 	strh.w	fp, [lr, #6]
900144d6:	443d      	add	r5, r7
900144d8:	f8d0 e010 	ldr.w	lr, [r0, #16]
900144dc:	f8be b006 	ldrh.w	fp, [lr, #6]
900144e0:	f8be 7004 	ldrh.w	r7, [lr, #4]
900144e4:	ea5b 0307 	orrs.w	r3, fp, r7
900144e8:	d011      	beq.n	9001450e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900144ea:	f9be b002 	ldrsh.w	fp, [lr, #2]
900144ee:	f1bb 0f00 	cmp.w	fp, #0
900144f2:	db0c      	blt.n	9001450e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900144f4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900144f6:	45bb      	cmp	fp, r7
900144f8:	da09      	bge.n	9001450e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900144fa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900144fe:	45bb      	cmp	fp, r7
90014500:	bf3c      	itt	cc
90014502:	f10e 0708 	addcc.w	r7, lr, #8
90014506:	6107      	strcc	r7, [r0, #16]
90014508:	f10b 0701 	add.w	r7, fp, #1
9001450c:	6087      	str	r7, [r0, #8]
9001450e:	6907      	ldr	r7, [r0, #16]
90014510:	4555      	cmp	r5, sl
90014512:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014514:	803d      	strh	r5, [r7, #0]
90014516:	807b      	strh	r3, [r7, #2]
90014518:	80be      	strh	r6, [r7, #4]
9001451a:	80fe      	strh	r6, [r7, #6]
9001451c:	d1c2      	bne.n	900144a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001451e:	9b01      	ldr	r3, [sp, #4]
90014520:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90014522:	eba3 0c0c 	sub.w	ip, r3, ip
90014526:	6903      	ldr	r3, [r0, #16]
90014528:	3720      	adds	r7, #32
9001452a:	8899      	ldrh	r1, [r3, #4]
9001452c:	4461      	add	r1, ip
9001452e:	8099      	strh	r1, [r3, #4]
90014530:	990c      	ldr	r1, [sp, #48]	; 0x30
90014532:	1a7f      	subs	r7, r7, r1
90014534:	88d9      	ldrh	r1, [r3, #6]
90014536:	fb0c 1c07 	mla	ip, ip, r7, r1
9001453a:	f8a3 c006 	strh.w	ip, [r3, #6]
9001453e:	e613      	b.n	90014168 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014540:	f04f 34ff 	mov.w	r4, #4294967295
90014544:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014546:	4249      	negs	r1, r1
90014548:	940d      	str	r4, [sp, #52]	; 0x34
9001454a:	2400      	movs	r4, #0
9001454c:	437b      	muls	r3, r7
9001454e:	e758      	b.n	90014402 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90014550:	9905      	ldr	r1, [sp, #20]
90014552:	ea4f 1b69 	mov.w	fp, r9, asr #5
90014556:	f009 0c1f 	and.w	ip, r9, #31
9001455a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001455e:	f001 011f 	and.w	r1, r1, #31
90014562:	45f3      	cmp	fp, lr
90014564:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90014568:	9102      	str	r1, [sp, #8]
9001456a:	9904      	ldr	r1, [sp, #16]
9001456c:	eba1 0406 	sub.w	r4, r1, r6
90014570:	d108      	bne.n	90014584 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90014572:	9b02      	ldr	r3, [sp, #8]
90014574:	44a0      	add	r8, r4
90014576:	449c      	add	ip, r3
90014578:	f8a7 8004 	strh.w	r8, [r7, #4]
9001457c:	fb04 a40c 	mla	r4, r4, ip, sl
90014580:	80fc      	strh	r4, [r7, #6]
90014582:	e461      	b.n	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014584:	9905      	ldr	r1, [sp, #20]
90014586:	ebb1 0109 	subs.w	r1, r1, r9
9001458a:	bf51      	iteee	pl
9001458c:	f1cc 0520 	rsbpl	r5, ip, #32
90014590:	fb04 f40c 	mulmi.w	r4, r4, ip
90014594:	4249      	negmi	r1, r1
90014596:	2500      	movmi	r5, #0
90014598:	bf5d      	ittte	pl
9001459a:	436c      	mulpl	r4, r5
9001459c:	2520      	movpl	r5, #32
9001459e:	f04f 0901 	movpl.w	r9, #1
900145a2:	f04f 39ff 	movmi.w	r9, #4294967295
900145a6:	9501      	str	r5, [sp, #4]
900145a8:	9b01      	ldr	r3, [sp, #4]
900145aa:	fb94 f5f1 	sdiv	r5, r4, r1
900145ae:	fb01 4415 	mls	r4, r1, r5, r4
900145b2:	449c      	add	ip, r3
900145b4:	eb0b 0309 	add.w	r3, fp, r9
900145b8:	2c00      	cmp	r4, #0
900145ba:	bfbc      	itt	lt
900145bc:	f105 35ff 	addlt.w	r5, r5, #4294967295
900145c0:	1864      	addlt	r4, r4, r1
900145c2:	44a8      	add	r8, r5
900145c4:	fb05 ac0c 	mla	ip, r5, ip, sl
900145c8:	f8a7 8004 	strh.w	r8, [r7, #4]
900145cc:	f8a7 c006 	strh.w	ip, [r7, #6]
900145d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
900145d4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900145d8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900145dc:	ea58 0707 	orrs.w	r7, r8, r7
900145e0:	d011      	beq.n	90014606 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900145e2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900145e6:	f1b8 0f00 	cmp.w	r8, #0
900145ea:	db0c      	blt.n	90014606 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900145ec:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900145ee:	45b8      	cmp	r8, r7
900145f0:	da09      	bge.n	90014606 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900145f2:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900145f6:	45b8      	cmp	r8, r7
900145f8:	bf3c      	itt	cc
900145fa:	f10c 0708 	addcc.w	r7, ip, #8
900145fe:	6107      	strcc	r7, [r0, #16]
90014600:	f108 0701 	add.w	r7, r8, #1
90014604:	6087      	str	r7, [r0, #8]
90014606:	6907      	ldr	r7, [r0, #16]
90014608:	f04f 0c00 	mov.w	ip, #0
9001460c:	b212      	sxth	r2, r2
9001460e:	459e      	cmp	lr, r3
90014610:	803b      	strh	r3, [r7, #0]
90014612:	442e      	add	r6, r5
90014614:	807a      	strh	r2, [r7, #2]
90014616:	f8a7 c004 	strh.w	ip, [r7, #4]
9001461a:	f8a7 c006 	strh.w	ip, [r7, #6]
9001461e:	d04b      	beq.n	900146b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90014620:	9f04      	ldr	r7, [sp, #16]
90014622:	1a64      	subs	r4, r4, r1
90014624:	f04f 0a00 	mov.w	sl, #0
90014628:	1bbf      	subs	r7, r7, r6
9001462a:	443d      	add	r5, r7
9001462c:	016d      	lsls	r5, r5, #5
9001462e:	fb95 f8f1 	sdiv	r8, r5, r1
90014632:	fb01 5518 	mls	r5, r1, r8, r5
90014636:	4565      	cmp	r5, ip
90014638:	bfbc      	itt	lt
9001463a:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001463e:	186d      	addlt	r5, r5, r1
90014640:	f108 0701 	add.w	r7, r8, #1
90014644:	9703      	str	r7, [sp, #12]
90014646:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001464a:	1964      	adds	r4, r4, r5
9001464c:	444b      	add	r3, r9
9001464e:	bf54      	ite	pl
90014650:	9f03      	ldrpl	r7, [sp, #12]
90014652:	4647      	movmi	r7, r8
90014654:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014658:	bf58      	it	pl
9001465a:	1a64      	subpl	r4, r4, r1
9001465c:	443e      	add	r6, r7
9001465e:	44bb      	add	fp, r7
90014660:	f8ac b004 	strh.w	fp, [ip, #4]
90014664:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014668:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
9001466c:	f8ac b006 	strh.w	fp, [ip, #6]
90014670:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014674:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014678:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001467c:	ea5b 0707 	orrs.w	r7, fp, r7
90014680:	d011      	beq.n	900146a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014682:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014686:	f1bb 0f00 	cmp.w	fp, #0
9001468a:	db0c      	blt.n	900146a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001468c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001468e:	45bb      	cmp	fp, r7
90014690:	da09      	bge.n	900146a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014692:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014696:	45bb      	cmp	fp, r7
90014698:	bf3c      	itt	cc
9001469a:	f10c 0708 	addcc.w	r7, ip, #8
9001469e:	6107      	strcc	r7, [r0, #16]
900146a0:	f10b 0701 	add.w	r7, fp, #1
900146a4:	6087      	str	r7, [r0, #8]
900146a6:	6907      	ldr	r7, [r0, #16]
900146a8:	459e      	cmp	lr, r3
900146aa:	803b      	strh	r3, [r7, #0]
900146ac:	807a      	strh	r2, [r7, #2]
900146ae:	f8a7 a004 	strh.w	sl, [r7, #4]
900146b2:	f8a7 a006 	strh.w	sl, [r7, #6]
900146b6:	d1c6      	bne.n	90014646 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900146b8:	9b04      	ldr	r3, [sp, #16]
900146ba:	1b9e      	subs	r6, r3, r6
900146bc:	6903      	ldr	r3, [r0, #16]
900146be:	889a      	ldrh	r2, [r3, #4]
900146c0:	4432      	add	r2, r6
900146c2:	809a      	strh	r2, [r3, #4]
900146c4:	9a02      	ldr	r2, [sp, #8]
900146c6:	f102 0c20 	add.w	ip, r2, #32
900146ca:	9a01      	ldr	r2, [sp, #4]
900146cc:	ebac 0c02 	sub.w	ip, ip, r2
900146d0:	88da      	ldrh	r2, [r3, #6]
900146d2:	fb06 260c 	mla	r6, r6, ip, r2
900146d6:	80de      	strh	r6, [r3, #6]
900146d8:	f7ff bbb6 	b.w	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900146dc <_ZN8touchgfx7Outline6lineToEii>:
900146dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
900146de:	079b      	lsls	r3, r3, #30
900146e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900146e2:	460e      	mov	r6, r1
900146e4:	4615      	mov	r5, r2
900146e6:	d511      	bpl.n	9001470c <_ZN8touchgfx7Outline6lineToEii+0x30>
900146e8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900146ec:	ea86 0701 	eor.w	r7, r6, r1
900146f0:	ea85 0302 	eor.w	r3, r5, r2
900146f4:	433b      	orrs	r3, r7
900146f6:	d009      	beq.n	9001470c <_ZN8touchgfx7Outline6lineToEii+0x30>
900146f8:	4633      	mov	r3, r6
900146fa:	9500      	str	r5, [sp, #0]
900146fc:	f7ff fb4c 	bl	90013d98 <_ZN8touchgfx7Outline10renderLineEiiii>
90014700:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014702:	f043 0301 	orr.w	r3, r3, #1
90014706:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001470a:	6243      	str	r3, [r0, #36]	; 0x24
9001470c:	b003      	add	sp, #12
9001470e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014710 <_ZN8touchgfx7Outline6moveToEii>:
90014710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014712:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014714:	4615      	mov	r5, r2
90014716:	4604      	mov	r4, r0
90014718:	460e      	mov	r6, r1
9001471a:	079a      	lsls	r2, r3, #30
9001471c:	d401      	bmi.n	90014722 <_ZN8touchgfx7Outline6moveToEii+0x12>
9001471e:	f7ff fb07 	bl	90013d30 <_ZN8touchgfx7Outline5resetEv>
90014722:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014724:	07db      	lsls	r3, r3, #31
90014726:	d504      	bpl.n	90014732 <_ZN8touchgfx7Outline6moveToEii+0x22>
90014728:	4620      	mov	r0, r4
9001472a:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001472e:	f7ff ffd5 	bl	900146dc <_ZN8touchgfx7Outline6lineToEii>
90014732:	6923      	ldr	r3, [r4, #16]
90014734:	1170      	asrs	r0, r6, #5
90014736:	1169      	asrs	r1, r5, #5
90014738:	f9b3 2000 	ldrsh.w	r2, [r3]
9001473c:	4290      	cmp	r0, r2
9001473e:	d103      	bne.n	90014748 <_ZN8touchgfx7Outline6moveToEii+0x38>
90014740:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014744:	4291      	cmp	r1, r2
90014746:	d01a      	beq.n	9001477e <_ZN8touchgfx7Outline6moveToEii+0x6e>
90014748:	88df      	ldrh	r7, [r3, #6]
9001474a:	889a      	ldrh	r2, [r3, #4]
9001474c:	433a      	orrs	r2, r7
9001474e:	d010      	beq.n	90014772 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014750:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014754:	2a00      	cmp	r2, #0
90014756:	db0c      	blt.n	90014772 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014758:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9001475a:	42ba      	cmp	r2, r7
9001475c:	da09      	bge.n	90014772 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001475e:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90014762:	42ba      	cmp	r2, r7
90014764:	f102 0201 	add.w	r2, r2, #1
90014768:	bf38      	it	cc
9001476a:	3308      	addcc	r3, #8
9001476c:	60a2      	str	r2, [r4, #8]
9001476e:	bf38      	it	cc
90014770:	6123      	strcc	r3, [r4, #16]
90014772:	6923      	ldr	r3, [r4, #16]
90014774:	2200      	movs	r2, #0
90014776:	8018      	strh	r0, [r3, #0]
90014778:	8059      	strh	r1, [r3, #2]
9001477a:	809a      	strh	r2, [r3, #4]
9001477c:	80da      	strh	r2, [r3, #6]
9001477e:	6166      	str	r6, [r4, #20]
90014780:	6225      	str	r5, [r4, #32]
90014782:	e9c4 5606 	strd	r5, r6, [r4, #24]
90014786:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014788 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90014788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001478c:	b0d0      	sub	sp, #320	; 0x140
9001478e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014792:	466c      	mov	r4, sp
90014794:	4627      	mov	r7, r4
90014796:	1a0d      	subs	r5, r1, r0
90014798:	f100 0308 	add.w	r3, r0, #8
9001479c:	2d48      	cmp	r5, #72	; 0x48
9001479e:	f340 80d5 	ble.w	9001494c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900147a2:	112d      	asrs	r5, r5, #4
900147a4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900147a8:	f9b0 9000 	ldrsh.w	r9, [r0]
900147ac:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900147b0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900147b4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900147b8:	6816      	ldr	r6, [r2, #0]
900147ba:	6006      	str	r6, [r0, #0]
900147bc:	6856      	ldr	r6, [r2, #4]
900147be:	6046      	str	r6, [r0, #4]
900147c0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900147c4:	f8a2 8002 	strh.w	r8, [r2, #2]
900147c8:	f8a2 e004 	strh.w	lr, [r2, #4]
900147cc:	f8a2 c006 	strh.w	ip, [r2, #6]
900147d0:	f1a1 0208 	sub.w	r2, r1, #8
900147d4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900147d8:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
900147dc:	4565      	cmp	r5, ip
900147de:	db06      	blt.n	900147ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
900147e0:	d119      	bne.n	90014816 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900147e2:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900147e6:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
900147ea:	42ae      	cmp	r6, r5
900147ec:	dd13      	ble.n	90014816 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900147ee:	460e      	mov	r6, r1
900147f0:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900147f4:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900147f8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900147fc:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90014800:	601d      	str	r5, [r3, #0]
90014802:	6875      	ldr	r5, [r6, #4]
90014804:	605d      	str	r5, [r3, #4]
90014806:	f821 9c08 	strh.w	r9, [r1, #-8]
9001480a:	f821 cc06 	strh.w	ip, [r1, #-6]
9001480e:	f821 8c04 	strh.w	r8, [r1, #-4]
90014812:	f821 ec02 	strh.w	lr, [r1, #-2]
90014816:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001481a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001481e:	42ae      	cmp	r6, r5
90014820:	db06      	blt.n	90014830 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90014822:	d116      	bne.n	90014852 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014824:	f9b0 c000 	ldrsh.w	ip, [r0]
90014828:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
9001482c:	45ac      	cmp	ip, r5
9001482e:	da10      	bge.n	90014852 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014830:	681d      	ldr	r5, [r3, #0]
90014832:	f9b0 8000 	ldrsh.w	r8, [r0]
90014836:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001483a:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001483e:	6005      	str	r5, [r0, #0]
90014840:	685d      	ldr	r5, [r3, #4]
90014842:	f8a0 8008 	strh.w	r8, [r0, #8]
90014846:	6045      	str	r5, [r0, #4]
90014848:	8146      	strh	r6, [r0, #10]
9001484a:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001484e:	f8a0 c00e 	strh.w	ip, [r0, #14]
90014852:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014856:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001485a:	4565      	cmp	r5, ip
9001485c:	db06      	blt.n	9001486c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001485e:	d119      	bne.n	90014894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014860:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90014864:	f9b0 5000 	ldrsh.w	r5, [r0]
90014868:	42ae      	cmp	r6, r5
9001486a:	da13      	bge.n	90014894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001486c:	460e      	mov	r6, r1
9001486e:	f9b0 9000 	ldrsh.w	r9, [r0]
90014872:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90014876:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001487a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001487e:	6005      	str	r5, [r0, #0]
90014880:	6875      	ldr	r5, [r6, #4]
90014882:	6045      	str	r5, [r0, #4]
90014884:	f821 9c08 	strh.w	r9, [r1, #-8]
90014888:	f821 cc06 	strh.w	ip, [r1, #-6]
9001488c:	f821 8c04 	strh.w	r8, [r1, #-4]
90014890:	f821 ec02 	strh.w	lr, [r1, #-2]
90014894:	3308      	adds	r3, #8
90014896:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001489a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001489e:	45e6      	cmp	lr, ip
900148a0:	dbf8      	blt.n	90014894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900148a2:	d105      	bne.n	900148b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900148a4:	f9b3 6000 	ldrsh.w	r6, [r3]
900148a8:	f9b0 5000 	ldrsh.w	r5, [r0]
900148ac:	42ae      	cmp	r6, r5
900148ae:	dbf1      	blt.n	90014894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900148b0:	4615      	mov	r5, r2
900148b2:	3a08      	subs	r2, #8
900148b4:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900148b8:	45b4      	cmp	ip, r6
900148ba:	dbf9      	blt.n	900148b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900148bc:	d105      	bne.n	900148ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900148be:	f9b0 8000 	ldrsh.w	r8, [r0]
900148c2:	f9b2 6000 	ldrsh.w	r6, [r2]
900148c6:	45b0      	cmp	r8, r6
900148c8:	dbf2      	blt.n	900148b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900148ca:	4293      	cmp	r3, r2
900148cc:	f1a5 0608 	sub.w	r6, r5, #8
900148d0:	d816      	bhi.n	90014900 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900148d2:	f8d6 c000 	ldr.w	ip, [r6]
900148d6:	f9b3 a000 	ldrsh.w	sl, [r3]
900148da:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900148de:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900148e2:	f8c3 c000 	str.w	ip, [r3]
900148e6:	f8d6 c004 	ldr.w	ip, [r6, #4]
900148ea:	f8c3 c004 	str.w	ip, [r3, #4]
900148ee:	f825 ac08 	strh.w	sl, [r5, #-8]
900148f2:	f825 ec06 	strh.w	lr, [r5, #-6]
900148f6:	f825 9c04 	strh.w	r9, [r5, #-4]
900148fa:	f825 8c02 	strh.w	r8, [r5, #-2]
900148fe:	e7c9      	b.n	90014894 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014900:	f8d6 e000 	ldr.w	lr, [r6]
90014904:	f9b0 a000 	ldrsh.w	sl, [r0]
90014908:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
9001490c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90014910:	f8c0 e000 	str.w	lr, [r0]
90014914:	f8d6 e004 	ldr.w	lr, [r6, #4]
90014918:	1a16      	subs	r6, r2, r0
9001491a:	f8c0 e004 	str.w	lr, [r0, #4]
9001491e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014922:	f825 cc06 	strh.w	ip, [r5, #-6]
90014926:	f825 9c04 	strh.w	r9, [r5, #-4]
9001492a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001492e:	1acd      	subs	r5, r1, r3
90014930:	10ed      	asrs	r5, r5, #3
90014932:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90014936:	bfb5      	itete	lt
90014938:	e9c4 0200 	strdlt	r0, r2, [r4]
9001493c:	e9c4 3100 	strdge	r3, r1, [r4]
90014940:	460a      	movlt	r2, r1
90014942:	4603      	movge	r3, r0
90014944:	3408      	adds	r4, #8
90014946:	4618      	mov	r0, r3
90014948:	4611      	mov	r1, r2
9001494a:	e724      	b.n	90014796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001494c:	4299      	cmp	r1, r3
9001494e:	d927      	bls.n	900149a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90014950:	f1a3 0210 	sub.w	r2, r3, #16
90014954:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90014958:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
9001495c:	45ac      	cmp	ip, r5
9001495e:	db06      	blt.n	9001496e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90014960:	d11c      	bne.n	9001499c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90014962:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90014966:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001496a:	42ae      	cmp	r6, r5
9001496c:	da16      	bge.n	9001499c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001496e:	4615      	mov	r5, r2
90014970:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90014974:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90014978:	3a08      	subs	r2, #8
9001497a:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001497e:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90014982:	6196      	str	r6, [r2, #24]
90014984:	42a8      	cmp	r0, r5
90014986:	686e      	ldr	r6, [r5, #4]
90014988:	f8a2 9010 	strh.w	r9, [r2, #16]
9001498c:	61d6      	str	r6, [r2, #28]
9001498e:	f8a2 c012 	strh.w	ip, [r2, #18]
90014992:	f8a2 8014 	strh.w	r8, [r2, #20]
90014996:	f8a2 e016 	strh.w	lr, [r2, #22]
9001499a:	d1db      	bne.n	90014954 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001499c:	3308      	adds	r3, #8
9001499e:	e7d5      	b.n	9001494c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900149a0:	42bc      	cmp	r4, r7
900149a2:	d903      	bls.n	900149ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900149a4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900149a8:	3c08      	subs	r4, #8
900149aa:	e6f4      	b.n	90014796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900149ac:	b050      	add	sp, #320	; 0x140
900149ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900149b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900149b2:	b510      	push	{r4, lr}
900149b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
900149b6:	4604      	mov	r4, r0
900149b8:	07da      	lsls	r2, r3, #31
900149ba:	d507      	bpl.n	900149cc <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900149bc:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900149c0:	f7ff fe8c 	bl	900146dc <_ZN8touchgfx7Outline6lineToEii>
900149c4:	6a43      	ldr	r3, [r0, #36]	; 0x24
900149c6:	f023 0301 	bic.w	r3, r3, #1
900149ca:	6243      	str	r3, [r0, #36]	; 0x24
900149cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
900149ce:	079b      	lsls	r3, r3, #30
900149d0:	d521      	bpl.n	90014a16 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900149d2:	6923      	ldr	r3, [r4, #16]
900149d4:	88d9      	ldrh	r1, [r3, #6]
900149d6:	889a      	ldrh	r2, [r3, #4]
900149d8:	430a      	orrs	r2, r1
900149da:	d010      	beq.n	900149fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900149dc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900149e0:	2a00      	cmp	r2, #0
900149e2:	db0c      	blt.n	900149fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900149e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900149e6:	428a      	cmp	r2, r1
900149e8:	da09      	bge.n	900149fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900149ea:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900149ee:	4291      	cmp	r1, r2
900149f0:	f102 0201 	add.w	r2, r2, #1
900149f4:	bf88      	it	hi
900149f6:	3308      	addhi	r3, #8
900149f8:	60a2      	str	r2, [r4, #8]
900149fa:	bf88      	it	hi
900149fc:	6123      	strhi	r3, [r4, #16]
900149fe:	68a1      	ldr	r1, [r4, #8]
90014a00:	b129      	cbz	r1, 90014a0e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014a02:	6863      	ldr	r3, [r4, #4]
90014a04:	4299      	cmp	r1, r3
90014a06:	d802      	bhi.n	90014a0e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014a08:	68e0      	ldr	r0, [r4, #12]
90014a0a:	f7ff febd 	bl	90014788 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90014a0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014a10:	f023 0302 	bic.w	r3, r3, #2
90014a14:	6263      	str	r3, [r4, #36]	; 0x24
90014a16:	68e0      	ldr	r0, [r4, #12]
90014a18:	bd10      	pop	{r4, pc}
	...

90014a1c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90014a1c:	4b02      	ldr	r3, [pc, #8]	; (90014a28 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90014a1e:	6018      	str	r0, [r3, #0]
90014a20:	4b02      	ldr	r3, [pc, #8]	; (90014a2c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90014a22:	6019      	str	r1, [r3, #0]
90014a24:	4770      	bx	lr
90014a26:	bf00      	nop
90014a28:	2403970c 	.word	0x2403970c
90014a2c:	24039710 	.word	0x24039710

90014a30 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90014a30:	2300      	movs	r3, #0
90014a32:	4a02      	ldr	r2, [pc, #8]	; (90014a3c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90014a34:	6013      	str	r3, [r2, #0]
90014a36:	4a02      	ldr	r2, [pc, #8]	; (90014a40 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90014a38:	6013      	str	r3, [r2, #0]
90014a3a:	4770      	bx	lr
90014a3c:	2403970c 	.word	0x2403970c
90014a40:	24039710 	.word	0x24039710

90014a44 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90014a44:	4b01      	ldr	r3, [pc, #4]	; (90014a4c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90014a46:	6818      	ldr	r0, [r3, #0]
90014a48:	4770      	bx	lr
90014a4a:	bf00      	nop
90014a4c:	2403970c 	.word	0x2403970c

90014a50 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90014a50:	4b01      	ldr	r3, [pc, #4]	; (90014a58 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90014a52:	6818      	ldr	r0, [r3, #0]
90014a54:	4770      	bx	lr
90014a56:	bf00      	nop
90014a58:	24039710 	.word	0x24039710

90014a5c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90014a5c:	b510      	push	{r4, lr}
90014a5e:	6803      	ldr	r3, [r0, #0]
90014a60:	460c      	mov	r4, r1
90014a62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014a64:	4798      	blx	r3
90014a66:	1b03      	subs	r3, r0, r4
90014a68:	4258      	negs	r0, r3
90014a6a:	4158      	adcs	r0, r3
90014a6c:	bd10      	pop	{r4, pc}
	...

90014a70 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90014a70:	4b01      	ldr	r3, [pc, #4]	; (90014a78 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90014a72:	6019      	str	r1, [r3, #0]
90014a74:	4770      	bx	lr
90014a76:	bf00      	nop
90014a78:	24039714 	.word	0x24039714

90014a7c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a80:	4696      	mov	lr, r2
90014a82:	b097      	sub	sp, #92	; 0x5c
90014a84:	4605      	mov	r5, r0
90014a86:	4614      	mov	r4, r2
90014a88:	460e      	mov	r6, r1
90014a8a:	461f      	mov	r7, r3
90014a8c:	f10d 0c1c 	add.w	ip, sp, #28
90014a90:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90014a94:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90014a98:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90014a9c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014aa0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014aa4:	f8de 3000 	ldr.w	r3, [lr]
90014aa8:	f104 0e14 	add.w	lr, r4, #20
90014aac:	f8cc 3000 	str.w	r3, [ip]
90014ab0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90014ab4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014ab8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014abc:	f8de 3000 	ldr.w	r3, [lr]
90014ac0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014ac4:	f8cc 3000 	str.w	r3, [ip]
90014ac8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90014acc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014ad0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014ad4:	f8de 3000 	ldr.w	r3, [lr]
90014ad8:	4631      	mov	r1, r6
90014ada:	9a21      	ldr	r2, [sp, #132]	; 0x84
90014adc:	4628      	mov	r0, r5
90014ade:	f8cc 3000 	str.w	r3, [ip]
90014ae2:	682b      	ldr	r3, [r5, #0]
90014ae4:	9201      	str	r2, [sp, #4]
90014ae6:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014ae8:	f8cd 8008 	str.w	r8, [sp, #8]
90014aec:	9200      	str	r2, [sp, #0]
90014aee:	aa07      	add	r2, sp, #28
90014af0:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90014af4:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90014af8:	463b      	mov	r3, r7
90014afa:	47d8      	blx	fp
90014afc:	46a6      	mov	lr, r4
90014afe:	f10d 0c1c 	add.w	ip, sp, #28
90014b02:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014b06:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014b0a:	f8de 3000 	ldr.w	r3, [lr]
90014b0e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014b12:	343c      	adds	r4, #60	; 0x3c
90014b14:	f8cc 3000 	str.w	r3, [ip]
90014b18:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90014b1c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014b20:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014b24:	f8de 3000 	ldr.w	r3, [lr]
90014b28:	f8cc 3000 	str.w	r3, [ip]
90014b2c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90014b30:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90014b32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014b36:	6823      	ldr	r3, [r4, #0]
90014b38:	4631      	mov	r1, r6
90014b3a:	4628      	mov	r0, r5
90014b3c:	f8cc 3000 	str.w	r3, [ip]
90014b40:	682b      	ldr	r3, [r5, #0]
90014b42:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90014b46:	9a21      	ldr	r2, [sp, #132]	; 0x84
90014b48:	f8cd 8008 	str.w	r8, [sp, #8]
90014b4c:	9201      	str	r2, [sp, #4]
90014b4e:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014b50:	9200      	str	r2, [sp, #0]
90014b52:	aa07      	add	r2, sp, #28
90014b54:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90014b56:	463b      	mov	r3, r7
90014b58:	47a0      	blx	r4
90014b5a:	b017      	add	sp, #92	; 0x5c
90014b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014b60 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90014b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014b64:	b08d      	sub	sp, #52	; 0x34
90014b66:	4688      	mov	r8, r1
90014b68:	f8d3 c000 	ldr.w	ip, [r3]
90014b6c:	9916      	ldr	r1, [sp, #88]	; 0x58
90014b6e:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90014b72:	680f      	ldr	r7, [r1, #0]
90014b74:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90014b78:	eba7 070c 	sub.w	r7, r7, ip
90014b7c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90014b80:	edd3 6a07 	vldr	s13, [r3, #28]
90014b84:	42bc      	cmp	r4, r7
90014b86:	9918      	ldr	r1, [sp, #96]	; 0x60
90014b88:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90014b8c:	bfa8      	it	ge
90014b8e:	463c      	movge	r4, r7
90014b90:	f9b1 9000 	ldrsh.w	r9, [r1]
90014b94:	f9ba 1000 	ldrsh.w	r1, [sl]
90014b98:	ee07 4a90 	vmov	s15, r4
90014b9c:	eb09 0e0c 	add.w	lr, r9, ip
90014ba0:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90014ba4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90014ba8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90014bac:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90014bb0:	4571      	cmp	r1, lr
90014bb2:	ee25 4a04 	vmul.f32	s8, s10, s8
90014bb6:	ee65 4a24 	vmul.f32	s9, s10, s9
90014bba:	ee25 5a27 	vmul.f32	s10, s10, s15
90014bbe:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90014bc2:	ee71 0aa4 	vadd.f32	s1, s3, s9
90014bc6:	ee32 1a05 	vadd.f32	s2, s4, s10
90014bca:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014bce:	ee36 0a84 	vadd.f32	s0, s13, s8
90014bd2:	ee61 1a87 	vmul.f32	s3, s3, s14
90014bd6:	ee22 2a07 	vmul.f32	s4, s4, s14
90014bda:	f340 808c 	ble.w	90014cf6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90014bde:	eba1 060e 	sub.w	r6, r1, lr
90014be2:	fb96 f5f4 	sdiv	r5, r6, r4
90014be6:	ee07 5a10 	vmov	s14, r5
90014bea:	2d00      	cmp	r5, #0
90014bec:	fb04 6615 	mls	r6, r4, r5, r6
90014bf0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90014bf4:	eea7 0a04 	vfma.f32	s0, s14, s8
90014bf8:	eee7 0a24 	vfma.f32	s1, s14, s9
90014bfc:	eea7 1a05 	vfma.f32	s2, s14, s10
90014c00:	dd12      	ble.n	90014c28 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90014c02:	ee70 6a44 	vsub.f32	s13, s0, s8
90014c06:	ee70 1ae4 	vsub.f32	s3, s1, s9
90014c0a:	ee31 2a45 	vsub.f32	s4, s2, s10
90014c0e:	eef5 6a40 	vcmp.f32	s13, #0.0
90014c12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c16:	bf14      	ite	ne
90014c18:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90014c1c:	eeb0 7a67 	vmoveq.f32	s14, s15
90014c20:	ee61 1a87 	vmul.f32	s3, s3, s14
90014c24:	ee22 2a07 	vmul.f32	s4, s4, s14
90014c28:	fb05 f204 	mul.w	r2, r5, r4
90014c2c:	1abf      	subs	r7, r7, r2
90014c2e:	4494      	add	ip, r2
90014c30:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90014c34:	4411      	add	r1, r2
90014c36:	eb09 020c 	add.w	r2, r9, ip
90014c3a:	b209      	sxth	r1, r1
90014c3c:	443a      	add	r2, r7
90014c3e:	428a      	cmp	r2, r1
90014c40:	bfc4      	itt	gt
90014c42:	eba1 0209 	subgt.w	r2, r1, r9
90014c46:	eba2 070c 	subgt.w	r7, r2, ip
90014c4a:	2f00      	cmp	r7, #0
90014c4c:	dd50      	ble.n	90014cf0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90014c4e:	fb97 f1f4 	sdiv	r1, r7, r4
90014c52:	fb04 7211 	mls	r2, r4, r1, r7
90014c56:	b90a      	cbnz	r2, 90014c5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90014c58:	3901      	subs	r1, #1
90014c5a:	4622      	mov	r2, r4
90014c5c:	eec7 3a80 	vdiv.f32	s7, s15, s0
90014c60:	6840      	ldr	r0, [r0, #4]
90014c62:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90014c66:	44b6      	add	lr, r6
90014c68:	f8d0 a000 	ldr.w	sl, [r0]
90014c6c:	2900      	cmp	r1, #0
90014c6e:	bfcc      	ite	gt
90014c70:	46a1      	movgt	r9, r4
90014c72:	4691      	movle	r9, r2
90014c74:	900b      	str	r0, [sp, #44]	; 0x2c
90014c76:	9817      	ldr	r0, [sp, #92]	; 0x5c
90014c78:	fb04 e505 	mla	r5, r4, r5, lr
90014c7c:	eef0 6a42 	vmov.f32	s13, s4
90014c80:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90014c84:	9008      	str	r0, [sp, #32]
90014c86:	eeb0 7a61 	vmov.f32	s14, s3
90014c8a:	9818      	ldr	r0, [sp, #96]	; 0x60
90014c8c:	695b      	ldr	r3, [r3, #20]
90014c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90014c92:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90014c96:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90014c9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
90014c9c:	445b      	add	r3, fp
90014c9e:	9307      	str	r3, [sp, #28]
90014ca0:	ee16 3a90 	vmov	r3, s13
90014ca4:	e9cd 8505 	strd	r8, r5, [sp, #20]
90014ca8:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014cac:	ee21 3a23 	vmul.f32	s6, s2, s7
90014cb0:	ee72 7ae1 	vsub.f32	s15, s5, s3
90014cb4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014cb8:	ee17 7a90 	vmov	r7, s15
90014cbc:	ee73 7a42 	vsub.f32	s15, s6, s4
90014cc0:	fb97 f7f4 	sdiv	r7, r7, r4
90014cc4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014cc8:	ee17 ca90 	vmov	ip, s15
90014ccc:	fb9c fcf4 	sdiv	ip, ip, r4
90014cd0:	fb0c 3306 	mla	r3, ip, r6, r3
90014cd4:	9302      	str	r3, [sp, #8]
90014cd6:	ee17 3a10 	vmov	r3, s14
90014cda:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90014cde:	fb07 3706 	mla	r7, r7, r6, r3
90014ce2:	eba9 0306 	sub.w	r3, r9, r6
90014ce6:	e9cd 4700 	strd	r4, r7, [sp]
90014cea:	f8da 4008 	ldr.w	r4, [sl, #8]
90014cee:	47a0      	blx	r4
90014cf0:	b00d      	add	sp, #52	; 0x34
90014cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014cf6:	2500      	movs	r5, #0
90014cf8:	462e      	mov	r6, r5
90014cfa:	e799      	b.n	90014c30 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90014cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014d00:	b0db      	sub	sp, #364	; 0x16c
90014d02:	461d      	mov	r5, r3
90014d04:	4614      	mov	r4, r2
90014d06:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90014d0a:	910f      	str	r1, [sp, #60]	; 0x3c
90014d0c:	4629      	mov	r1, r5
90014d0e:	930a      	str	r3, [sp, #40]	; 0x28
90014d10:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90014d14:	9009      	str	r0, [sp, #36]	; 0x24
90014d16:	930b      	str	r3, [sp, #44]	; 0x2c
90014d18:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90014d1c:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90014d20:	9310      	str	r3, [sp, #64]	; 0x40
90014d22:	6803      	ldr	r3, [r0, #0]
90014d24:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90014d26:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90014d2a:	47b8      	blx	r7
90014d2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014d2e:	6058      	str	r0, [r3, #4]
90014d30:	2800      	cmp	r0, #0
90014d32:	f000 83a1 	beq.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d36:	682b      	ldr	r3, [r5, #0]
90014d38:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90014d3c:	ed94 7a02 	vldr	s14, [r4, #8]
90014d40:	9314      	str	r3, [sp, #80]	; 0x50
90014d42:	686b      	ldr	r3, [r5, #4]
90014d44:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014d48:	9315      	str	r3, [sp, #84]	; 0x54
90014d4a:	4bc1      	ldr	r3, [pc, #772]	; (90015050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90014d4c:	7819      	ldrb	r1, [r3, #0]
90014d4e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90014d52:	2900      	cmp	r1, #0
90014d54:	bf16      	itet	ne
90014d56:	4619      	movne	r1, r3
90014d58:	4611      	moveq	r1, r2
90014d5a:	4613      	movne	r3, r2
90014d5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d60:	9116      	str	r1, [sp, #88]	; 0x58
90014d62:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90014d66:	f240 8387 	bls.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d6a:	ed94 7a07 	vldr	s14, [r4, #28]
90014d6e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d76:	f240 837f 	bls.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d7a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90014d7e:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d86:	f240 8377 	bls.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d8a:	6822      	ldr	r2, [r4, #0]
90014d8c:	4bb1      	ldr	r3, [pc, #708]	; (90015054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014d8e:	429a      	cmp	r2, r3
90014d90:	f2c0 8372 	blt.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d94:	49b0      	ldr	r1, [pc, #704]	; (90015058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90014d96:	6963      	ldr	r3, [r4, #20]
90014d98:	428a      	cmp	r2, r1
90014d9a:	f300 836d 	bgt.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014d9e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90014da2:	48ae      	ldr	r0, [pc, #696]	; (9001505c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90014da4:	33ff      	adds	r3, #255	; 0xff
90014da6:	4283      	cmp	r3, r0
90014da8:	f200 8366 	bhi.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014dac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90014dae:	4dac      	ldr	r5, [pc, #688]	; (90015060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014db0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90014db4:	33ff      	adds	r3, #255	; 0xff
90014db6:	42ab      	cmp	r3, r5
90014db8:	f200 835e 	bhi.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014dbc:	6862      	ldr	r2, [r4, #4]
90014dbe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90014dc2:	33ff      	adds	r3, #255	; 0xff
90014dc4:	4283      	cmp	r3, r0
90014dc6:	f200 8357 	bhi.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014dca:	69a1      	ldr	r1, [r4, #24]
90014dcc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90014dd0:	33ff      	adds	r3, #255	; 0xff
90014dd2:	4283      	cmp	r3, r0
90014dd4:	f200 8350 	bhi.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014dd8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90014dda:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90014dde:	30ff      	adds	r0, #255	; 0xff
90014de0:	42a8      	cmp	r0, r5
90014de2:	f200 8349 	bhi.w	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014de6:	428a      	cmp	r2, r1
90014de8:	f280 8110 	bge.w	9001500c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90014dec:	429a      	cmp	r2, r3
90014dee:	f300 8119 	bgt.w	90015024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90014df2:	4299      	cmp	r1, r3
90014df4:	f280 811d 	bge.w	90015032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90014df8:	2502      	movs	r5, #2
90014dfa:	2701      	movs	r7, #1
90014dfc:	46a9      	mov	r9, r5
90014dfe:	46b8      	mov	r8, r7
90014e00:	f04f 0a00 	mov.w	sl, #0
90014e04:	4621      	mov	r1, r4
90014e06:	a849      	add	r0, sp, #292	; 0x124
90014e08:	f003 fe7c 	bl	90018b04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90014e0c:	4622      	mov	r2, r4
90014e0e:	4653      	mov	r3, sl
90014e10:	a949      	add	r1, sp, #292	; 0x124
90014e12:	f8cd 9000 	str.w	r9, [sp]
90014e16:	a819      	add	r0, sp, #100	; 0x64
90014e18:	f003 ffa4 	bl	90018d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014e1c:	4622      	mov	r2, r4
90014e1e:	4653      	mov	r3, sl
90014e20:	a949      	add	r1, sp, #292	; 0x124
90014e22:	f8cd 8000 	str.w	r8, [sp]
90014e26:	a829      	add	r0, sp, #164	; 0xa4
90014e28:	f003 ff9c 	bl	90018d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014e2c:	4643      	mov	r3, r8
90014e2e:	4622      	mov	r2, r4
90014e30:	a949      	add	r1, sp, #292	; 0x124
90014e32:	f8cd 9000 	str.w	r9, [sp]
90014e36:	a839      	add	r0, sp, #228	; 0xe4
90014e38:	f003 ff94 	bl	90018d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014e3c:	42af      	cmp	r7, r5
90014e3e:	af12      	add	r7, sp, #72	; 0x48
90014e40:	bfb7      	itett	lt
90014e42:	2300      	movlt	r3, #0
90014e44:	2301      	movge	r3, #1
90014e46:	ad29      	addlt	r5, sp, #164	; 0xa4
90014e48:	ac19      	addlt	r4, sp, #100	; 0x64
90014e4a:	bfb1      	iteee	lt
90014e4c:	930e      	strlt	r3, [sp, #56]	; 0x38
90014e4e:	ad19      	addge	r5, sp, #100	; 0x64
90014e50:	930e      	strge	r3, [sp, #56]	; 0x38
90014e52:	ac29      	addge	r4, sp, #164	; 0xa4
90014e54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014e56:	e893 0003 	ldmia.w	r3, {r0, r1}
90014e5a:	e887 0003 	stmia.w	r7, {r0, r1}
90014e5e:	b928      	cbnz	r0, 90014e6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90014e60:	4b80      	ldr	r3, [pc, #512]	; (90015064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90014e62:	6818      	ldr	r0, [r3, #0]
90014e64:	6803      	ldr	r3, [r0, #0]
90014e66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014e68:	4798      	blx	r3
90014e6a:	6038      	str	r0, [r7, #0]
90014e6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
90014e6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014e72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014e76:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90014e78:	930c      	str	r3, [sp, #48]	; 0x30
90014e7a:	990c      	ldr	r1, [sp, #48]	; 0x30
90014e7c:	6963      	ldr	r3, [r4, #20]
90014e7e:	440b      	add	r3, r1
90014e80:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014e84:	4408      	add	r0, r1
90014e86:	b200      	sxth	r0, r0
90014e88:	4283      	cmp	r3, r0
90014e8a:	900d      	str	r0, [sp, #52]	; 0x34
90014e8c:	f280 80dd 	bge.w	9001504a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014e90:	428b      	cmp	r3, r1
90014e92:	da08      	bge.n	90014ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014e94:	2a00      	cmp	r2, #0
90014e96:	dd06      	ble.n	90014ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014e98:	1acb      	subs	r3, r1, r3
90014e9a:	429a      	cmp	r2, r3
90014e9c:	f2c0 80e4 	blt.w	90015068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014ea0:	2b00      	cmp	r3, #0
90014ea2:	f300 80e2 	bgt.w	9001506a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90014ea6:	6967      	ldr	r7, [r4, #20]
90014ea8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90014eac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014eae:	443b      	add	r3, r7
90014eb0:	461f      	mov	r7, r3
90014eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014eb4:	1bdf      	subs	r7, r3, r7
90014eb6:	4297      	cmp	r7, r2
90014eb8:	bfa8      	it	ge
90014eba:	4617      	movge	r7, r2
90014ebc:	2f00      	cmp	r7, #0
90014ebe:	f340 8166 	ble.w	9001518e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90014ec2:	9b64      	ldr	r3, [sp, #400]	; 0x190
90014ec4:	6829      	ldr	r1, [r5, #0]
90014ec6:	f9b3 2000 	ldrsh.w	r2, [r3]
90014eca:	f9bb 3000 	ldrsh.w	r3, [fp]
90014ece:	4411      	add	r1, r2
90014ed0:	6820      	ldr	r0, [r4, #0]
90014ed2:	4299      	cmp	r1, r3
90014ed4:	dd1a      	ble.n	90014f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014ed6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014eda:	4402      	add	r2, r0
90014edc:	440b      	add	r3, r1
90014ede:	b21b      	sxth	r3, r3
90014ee0:	429a      	cmp	r2, r3
90014ee2:	dc13      	bgt.n	90014f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014ee4:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014ee6:	a912      	add	r1, sp, #72	; 0x48
90014ee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014eea:	9809      	ldr	r0, [sp, #36]	; 0x24
90014eec:	681b      	ldr	r3, [r3, #0]
90014eee:	9206      	str	r2, [sp, #24]
90014ef0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90014ef2:	9500      	str	r5, [sp, #0]
90014ef4:	9205      	str	r2, [sp, #20]
90014ef6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90014ef8:	e9cd b203 	strd	fp, r2, [sp, #12]
90014efc:	9a64      	ldr	r2, [sp, #400]	; 0x190
90014efe:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014f02:	aa49      	add	r2, sp, #292	; 0x124
90014f04:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90014f08:	4623      	mov	r3, r4
90014f0a:	47c8      	blx	r9
90014f0c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90014f10:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90014f14:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90014f18:	ee37 7a27 	vadd.f32	s14, s14, s15
90014f1c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90014f20:	68a1      	ldr	r1, [r4, #8]
90014f22:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014f26:	ed94 6a08 	vldr	s12, [r4, #32]
90014f2a:	edd4 6a07 	vldr	s13, [r4, #28]
90014f2e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90014f32:	ee76 6a86 	vadd.f32	s13, s13, s12
90014f36:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90014f3a:	e9d4 2300 	ldrd	r2, r3, [r4]
90014f3e:	edc4 6a07 	vstr	s13, [r4, #28]
90014f42:	441a      	add	r2, r3
90014f44:	6963      	ldr	r3, [r4, #20]
90014f46:	3301      	adds	r3, #1
90014f48:	6022      	str	r2, [r4, #0]
90014f4a:	6163      	str	r3, [r4, #20]
90014f4c:	69a3      	ldr	r3, [r4, #24]
90014f4e:	3b01      	subs	r3, #1
90014f50:	61a3      	str	r3, [r4, #24]
90014f52:	6923      	ldr	r3, [r4, #16]
90014f54:	440b      	add	r3, r1
90014f56:	68e1      	ldr	r1, [r4, #12]
90014f58:	428b      	cmp	r3, r1
90014f5a:	6123      	str	r3, [r4, #16]
90014f5c:	db15      	blt.n	90014f8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90014f5e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90014f62:	3201      	adds	r2, #1
90014f64:	1a5b      	subs	r3, r3, r1
90014f66:	ee76 6a26 	vadd.f32	s13, s12, s13
90014f6a:	6022      	str	r2, [r4, #0]
90014f6c:	6123      	str	r3, [r4, #16]
90014f6e:	edc4 6a07 	vstr	s13, [r4, #28]
90014f72:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90014f76:	ee36 7a87 	vadd.f32	s14, s13, s14
90014f7a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90014f7e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90014f82:	ee77 7a27 	vadd.f32	s15, s14, s15
90014f86:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90014f8a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90014f8e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90014f92:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90014f96:	ee37 7a27 	vadd.f32	s14, s14, s15
90014f9a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90014f9e:	68a9      	ldr	r1, [r5, #8]
90014fa0:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014fa4:	ed95 6a08 	vldr	s12, [r5, #32]
90014fa8:	edd5 6a07 	vldr	s13, [r5, #28]
90014fac:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90014fb0:	ee76 6a86 	vadd.f32	s13, s13, s12
90014fb4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90014fb8:	e9d5 2300 	ldrd	r2, r3, [r5]
90014fbc:	edc5 6a07 	vstr	s13, [r5, #28]
90014fc0:	441a      	add	r2, r3
90014fc2:	696b      	ldr	r3, [r5, #20]
90014fc4:	3301      	adds	r3, #1
90014fc6:	602a      	str	r2, [r5, #0]
90014fc8:	616b      	str	r3, [r5, #20]
90014fca:	69ab      	ldr	r3, [r5, #24]
90014fcc:	3b01      	subs	r3, #1
90014fce:	61ab      	str	r3, [r5, #24]
90014fd0:	692b      	ldr	r3, [r5, #16]
90014fd2:	440b      	add	r3, r1
90014fd4:	68e9      	ldr	r1, [r5, #12]
90014fd6:	428b      	cmp	r3, r1
90014fd8:	612b      	str	r3, [r5, #16]
90014fda:	db15      	blt.n	90015008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90014fdc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90014fe0:	3201      	adds	r2, #1
90014fe2:	1a5b      	subs	r3, r3, r1
90014fe4:	ee76 6a26 	vadd.f32	s13, s12, s13
90014fe8:	602a      	str	r2, [r5, #0]
90014fea:	612b      	str	r3, [r5, #16]
90014fec:	edc5 6a07 	vstr	s13, [r5, #28]
90014ff0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90014ff4:	ee36 7a87 	vadd.f32	s14, s13, s14
90014ff8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90014ffc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90015000:	ee77 7a27 	vadd.f32	s15, s14, s15
90015004:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015008:	3f01      	subs	r7, #1
9001500a:	e757      	b.n	90014ebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
9001500c:	4299      	cmp	r1, r3
9001500e:	dc13      	bgt.n	90015038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015010:	429a      	cmp	r2, r3
90015012:	da14      	bge.n	9001503e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015014:	2502      	movs	r5, #2
90015016:	2703      	movs	r7, #3
90015018:	f04f 0800 	mov.w	r8, #0
9001501c:	46a9      	mov	r9, r5
9001501e:	f04f 0a01 	mov.w	sl, #1
90015022:	e6ef      	b.n	90014e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015024:	2501      	movs	r5, #1
90015026:	2700      	movs	r7, #0
90015028:	46a9      	mov	r9, r5
9001502a:	46b8      	mov	r8, r7
9001502c:	f04f 0a02 	mov.w	sl, #2
90015030:	e6e8      	b.n	90014e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015032:	2501      	movs	r5, #1
90015034:	2702      	movs	r7, #2
90015036:	e6e1      	b.n	90014dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90015038:	2500      	movs	r5, #0
9001503a:	2701      	movs	r7, #1
9001503c:	e7f4      	b.n	90015028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001503e:	2702      	movs	r7, #2
90015040:	2503      	movs	r5, #3
90015042:	f04f 0900 	mov.w	r9, #0
90015046:	46b8      	mov	r8, r7
90015048:	e7e9      	b.n	9001501e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
9001504a:	4613      	mov	r3, r2
9001504c:	e728      	b.n	90014ea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001504e:	bf00      	nop
90015050:	240396fc 	.word	0x240396fc
90015054:	fffd8f01 	.word	0xfffd8f01
90015058:	00027100 	.word	0x00027100
9001505c:	0004e1ff 	.word	0x0004e1ff
90015060:	0004e1fe 	.word	0x0004e1fe
90015064:	24039704 	.word	0x24039704
90015068:	4613      	mov	r3, r2
9001506a:	992b      	ldr	r1, [sp, #172]	; 0xac
9001506c:	469e      	mov	lr, r3
9001506e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90015070:	469c      	mov	ip, r3
90015072:	9111      	str	r1, [sp, #68]	; 0x44
90015074:	f04f 0900 	mov.w	r9, #0
90015078:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
9001507c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90015080:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90015084:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90015088:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
9001508c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90015090:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90015094:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90015098:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
9001509c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
900150a0:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
900150a4:	f1bc 0f00 	cmp.w	ip, #0
900150a8:	d147      	bne.n	9001513a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900150aa:	eb03 0c07 	add.w	ip, r3, r7
900150ae:	1ad7      	subs	r7, r2, r3
900150b0:	f1b9 0f00 	cmp.w	r9, #0
900150b4:	d009      	beq.n	900150ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900150b6:	9029      	str	r0, [sp, #164]	; 0xa4
900150b8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
900150bc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
900150c0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
900150c4:	912d      	str	r1, [sp, #180]	; 0xb4
900150c6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
900150ca:	991b      	ldr	r1, [sp, #108]	; 0x6c
900150cc:	f04f 0800 	mov.w	r8, #0
900150d0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900150d4:	9111      	str	r1, [sp, #68]	; 0x44
900150d6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
900150da:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
900150de:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
900150e2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
900150e6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
900150ea:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
900150ee:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
900150f2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
900150f6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
900150fa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
900150fe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90015102:	f1be 0f00 	cmp.w	lr, #0
90015106:	d031      	beq.n	9001516c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015108:	9e11      	ldr	r6, [sp, #68]	; 0x44
9001510a:	4450      	add	r0, sl
9001510c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015110:	4431      	add	r1, r6
90015112:	ee37 7a04 	vadd.f32	s14, s14, s8
90015116:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001511a:	4549      	cmp	r1, r9
9001511c:	db08      	blt.n	90015130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001511e:	ee77 7a85 	vadd.f32	s15, s15, s10
90015122:	3001      	adds	r0, #1
90015124:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015128:	eba1 0109 	sub.w	r1, r1, r9
9001512c:	ee37 7a06 	vadd.f32	s14, s14, s12
90015130:	f10e 3eff 	add.w	lr, lr, #4294967295
90015134:	f04f 0801 	mov.w	r8, #1
90015138:	e7e3      	b.n	90015102 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9001513a:	9e11      	ldr	r6, [sp, #68]	; 0x44
9001513c:	4450      	add	r0, sl
9001513e:	ee37 7a24 	vadd.f32	s14, s14, s9
90015142:	4431      	add	r1, r6
90015144:	ee77 7a84 	vadd.f32	s15, s15, s8
90015148:	ee76 6aa3 	vadd.f32	s13, s13, s7
9001514c:	4541      	cmp	r1, r8
9001514e:	db08      	blt.n	90015162 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90015150:	ee76 6a85 	vadd.f32	s13, s13, s10
90015154:	3001      	adds	r0, #1
90015156:	ee37 7a25 	vadd.f32	s14, s14, s11
9001515a:	eba1 0108 	sub.w	r1, r1, r8
9001515e:	ee77 7a86 	vadd.f32	s15, s15, s12
90015162:	f10c 3cff 	add.w	ip, ip, #4294967295
90015166:	f04f 0901 	mov.w	r9, #1
9001516a:	e79b      	b.n	900150a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
9001516c:	449c      	add	ip, r3
9001516e:	1aff      	subs	r7, r7, r3
90015170:	f1b8 0f00 	cmp.w	r8, #0
90015174:	d009      	beq.n	9001518a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90015176:	9019      	str	r0, [sp, #100]	; 0x64
90015178:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9001517c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90015180:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90015184:	911d      	str	r1, [sp, #116]	; 0x74
90015186:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
9001518a:	1ad2      	subs	r2, r2, r3
9001518c:	e68b      	b.n	90014ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001518e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015190:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90015192:	2b00      	cmp	r3, #0
90015194:	f000 80d1 	beq.w	9001533a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015198:	ad19      	add	r5, sp, #100	; 0x64
9001519a:	ac39      	add	r4, sp, #228	; 0xe4
9001519c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001519e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900151a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900151a6:	930c      	str	r3, [sp, #48]	; 0x30
900151a8:	990c      	ldr	r1, [sp, #48]	; 0x30
900151aa:	6963      	ldr	r3, [r4, #20]
900151ac:	440b      	add	r3, r1
900151ae:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900151b2:	4408      	add	r0, r1
900151b4:	b200      	sxth	r0, r0
900151b6:	4283      	cmp	r3, r0
900151b8:	900d      	str	r0, [sp, #52]	; 0x34
900151ba:	f280 80c1 	bge.w	90015340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900151be:	428b      	cmp	r3, r1
900151c0:	da08      	bge.n	900151d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900151c2:	2a00      	cmp	r2, #0
900151c4:	dd06      	ble.n	900151d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900151c6:	1acb      	subs	r3, r1, r3
900151c8:	429a      	cmp	r2, r3
900151ca:	f2c0 80bb 	blt.w	90015344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900151ce:	2b00      	cmp	r3, #0
900151d0:	f300 80b9 	bgt.w	90015346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900151d4:	6967      	ldr	r7, [r4, #20]
900151d6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
900151da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900151dc:	443b      	add	r3, r7
900151de:	461f      	mov	r7, r3
900151e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900151e2:	1bdf      	subs	r7, r3, r7
900151e4:	4297      	cmp	r7, r2
900151e6:	bfa8      	it	ge
900151e8:	4617      	movge	r7, r2
900151ea:	2f00      	cmp	r7, #0
900151ec:	f340 813c 	ble.w	90015468 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900151f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
900151f2:	6829      	ldr	r1, [r5, #0]
900151f4:	f9b3 2000 	ldrsh.w	r2, [r3]
900151f8:	f9bb 3000 	ldrsh.w	r3, [fp]
900151fc:	4411      	add	r1, r2
900151fe:	6820      	ldr	r0, [r4, #0]
90015200:	4299      	cmp	r1, r3
90015202:	dd1a      	ble.n	9001523a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015204:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015208:	4402      	add	r2, r0
9001520a:	440b      	add	r3, r1
9001520c:	b21b      	sxth	r3, r3
9001520e:	429a      	cmp	r2, r3
90015210:	dc13      	bgt.n	9001523a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015212:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015214:	a912      	add	r1, sp, #72	; 0x48
90015216:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015218:	9809      	ldr	r0, [sp, #36]	; 0x24
9001521a:	681b      	ldr	r3, [r3, #0]
9001521c:	9206      	str	r2, [sp, #24]
9001521e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015220:	9500      	str	r5, [sp, #0]
90015222:	9205      	str	r2, [sp, #20]
90015224:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90015226:	e9cd b203 	strd	fp, r2, [sp, #12]
9001522a:	9a64      	ldr	r2, [sp, #400]	; 0x190
9001522c:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015230:	aa49      	add	r2, sp, #292	; 0x124
90015232:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90015236:	4623      	mov	r3, r4
90015238:	47c8      	blx	r9
9001523a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9001523e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90015242:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90015246:	ee37 7a27 	vadd.f32	s14, s14, s15
9001524a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9001524e:	68a1      	ldr	r1, [r4, #8]
90015250:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015254:	ed94 6a08 	vldr	s12, [r4, #32]
90015258:	edd4 6a07 	vldr	s13, [r4, #28]
9001525c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90015260:	ee76 6a86 	vadd.f32	s13, s13, s12
90015264:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90015268:	e9d4 2300 	ldrd	r2, r3, [r4]
9001526c:	edc4 6a07 	vstr	s13, [r4, #28]
90015270:	441a      	add	r2, r3
90015272:	6963      	ldr	r3, [r4, #20]
90015274:	3301      	adds	r3, #1
90015276:	6022      	str	r2, [r4, #0]
90015278:	6163      	str	r3, [r4, #20]
9001527a:	69a3      	ldr	r3, [r4, #24]
9001527c:	3b01      	subs	r3, #1
9001527e:	61a3      	str	r3, [r4, #24]
90015280:	6923      	ldr	r3, [r4, #16]
90015282:	440b      	add	r3, r1
90015284:	68e1      	ldr	r1, [r4, #12]
90015286:	428b      	cmp	r3, r1
90015288:	6123      	str	r3, [r4, #16]
9001528a:	db15      	blt.n	900152b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
9001528c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90015290:	3201      	adds	r2, #1
90015292:	1a5b      	subs	r3, r3, r1
90015294:	ee76 6a26 	vadd.f32	s13, s12, s13
90015298:	6022      	str	r2, [r4, #0]
9001529a:	6123      	str	r3, [r4, #16]
9001529c:	edc4 6a07 	vstr	s13, [r4, #28]
900152a0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900152a4:	ee36 7a87 	vadd.f32	s14, s13, s14
900152a8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900152ac:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900152b0:	ee77 7a27 	vadd.f32	s15, s14, s15
900152b4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900152b8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900152bc:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
900152c0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
900152c4:	ee37 7a27 	vadd.f32	s14, s14, s15
900152c8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
900152cc:	68a9      	ldr	r1, [r5, #8]
900152ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
900152d2:	ed95 6a08 	vldr	s12, [r5, #32]
900152d6:	edd5 6a07 	vldr	s13, [r5, #28]
900152da:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900152de:	ee76 6a86 	vadd.f32	s13, s13, s12
900152e2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900152e6:	e9d5 2300 	ldrd	r2, r3, [r5]
900152ea:	edc5 6a07 	vstr	s13, [r5, #28]
900152ee:	441a      	add	r2, r3
900152f0:	696b      	ldr	r3, [r5, #20]
900152f2:	3301      	adds	r3, #1
900152f4:	602a      	str	r2, [r5, #0]
900152f6:	616b      	str	r3, [r5, #20]
900152f8:	69ab      	ldr	r3, [r5, #24]
900152fa:	3b01      	subs	r3, #1
900152fc:	61ab      	str	r3, [r5, #24]
900152fe:	692b      	ldr	r3, [r5, #16]
90015300:	440b      	add	r3, r1
90015302:	68e9      	ldr	r1, [r5, #12]
90015304:	428b      	cmp	r3, r1
90015306:	612b      	str	r3, [r5, #16]
90015308:	db15      	blt.n	90015336 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9001530a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9001530e:	3201      	adds	r2, #1
90015310:	1a5b      	subs	r3, r3, r1
90015312:	ee76 6a26 	vadd.f32	s13, s12, s13
90015316:	602a      	str	r2, [r5, #0]
90015318:	612b      	str	r3, [r5, #16]
9001531a:	edc5 6a07 	vstr	s13, [r5, #28]
9001531e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015322:	ee36 7a87 	vadd.f32	s14, s13, s14
90015326:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001532a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9001532e:	ee77 7a27 	vadd.f32	s15, s14, s15
90015332:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015336:	3f01      	subs	r7, #1
90015338:	e757      	b.n	900151ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9001533a:	ad39      	add	r5, sp, #228	; 0xe4
9001533c:	ac19      	add	r4, sp, #100	; 0x64
9001533e:	e72d      	b.n	9001519c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90015340:	4613      	mov	r3, r2
90015342:	e744      	b.n	900151ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90015344:	4613      	mov	r3, r2
90015346:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90015348:	469e      	mov	lr, r3
9001534a:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
9001534e:	461f      	mov	r7, r3
90015350:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90015354:	f04f 0900 	mov.w	r9, #0
90015358:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
9001535c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90015360:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90015364:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90015368:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
9001536c:	993d      	ldr	r1, [sp, #244]	; 0xf4
9001536e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90015372:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90015376:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
9001537a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
9001537e:	960e      	str	r6, [sp, #56]	; 0x38
90015380:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90015384:	2f00      	cmp	r7, #0
90015386:	d146      	bne.n	90015416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90015388:	449c      	add	ip, r3
9001538a:	1ad7      	subs	r7, r2, r3
9001538c:	f1b9 0f00 	cmp.w	r9, #0
90015390:	d009      	beq.n	900153a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015392:	9039      	str	r0, [sp, #228]	; 0xe4
90015394:	913d      	str	r1, [sp, #244]	; 0xf4
90015396:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9001539a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
9001539e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
900153a2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
900153a6:	991b      	ldr	r1, [sp, #108]	; 0x6c
900153a8:	f04f 0800 	mov.w	r8, #0
900153ac:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
900153b0:	910e      	str	r1, [sp, #56]	; 0x38
900153b2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
900153b6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
900153ba:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
900153be:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
900153c2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
900153c6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
900153ca:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
900153ce:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
900153d2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
900153d6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
900153da:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
900153de:	f1be 0f00 	cmp.w	lr, #0
900153e2:	d030      	beq.n	90015446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900153e4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
900153e6:	4450      	add	r0, sl
900153e8:	ee76 6aa4 	vadd.f32	s13, s13, s9
900153ec:	4431      	add	r1, r6
900153ee:	ee37 7a04 	vadd.f32	s14, s14, s8
900153f2:	ee77 7aa3 	vadd.f32	s15, s15, s7
900153f6:	4549      	cmp	r1, r9
900153f8:	db08      	blt.n	9001540c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900153fa:	ee77 7a85 	vadd.f32	s15, s15, s10
900153fe:	3001      	adds	r0, #1
90015400:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015404:	eba1 0109 	sub.w	r1, r1, r9
90015408:	ee37 7a06 	vadd.f32	s14, s14, s12
9001540c:	f10e 3eff 	add.w	lr, lr, #4294967295
90015410:	f04f 0801 	mov.w	r8, #1
90015414:	e7e3      	b.n	900153de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015416:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015418:	4450      	add	r0, sl
9001541a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001541e:	4431      	add	r1, r6
90015420:	ee77 7a84 	vadd.f32	s15, s15, s8
90015424:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015428:	4541      	cmp	r1, r8
9001542a:	db08      	blt.n	9001543e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
9001542c:	ee76 6a85 	vadd.f32	s13, s13, s10
90015430:	3001      	adds	r0, #1
90015432:	ee37 7a25 	vadd.f32	s14, s14, s11
90015436:	eba1 0108 	sub.w	r1, r1, r8
9001543a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001543e:	3f01      	subs	r7, #1
90015440:	f04f 0901 	mov.w	r9, #1
90015444:	e79e      	b.n	90015384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90015446:	449c      	add	ip, r3
90015448:	1aff      	subs	r7, r7, r3
9001544a:	f1b8 0f00 	cmp.w	r8, #0
9001544e:	d009      	beq.n	90015464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90015450:	9019      	str	r0, [sp, #100]	; 0x64
90015452:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90015456:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9001545a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
9001545e:	911d      	str	r1, [sp, #116]	; 0x74
90015460:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90015464:	1ad2      	subs	r2, r2, r3
90015466:	e6b5      	b.n	900151d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015468:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001546a:	681b      	ldr	r3, [r3, #0]
9001546c:	b923      	cbnz	r3, 90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001546e:	4b04      	ldr	r3, [pc, #16]	; (90015480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90015470:	6818      	ldr	r0, [r3, #0]
90015472:	6803      	ldr	r3, [r0, #0]
90015474:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015476:	4798      	blx	r3
90015478:	b05b      	add	sp, #364	; 0x16c
9001547a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001547e:	bf00      	nop
90015480:	24039704 	.word	0x24039704

90015484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90015484:	b570      	push	{r4, r5, r6, lr}
90015486:	4604      	mov	r4, r0
90015488:	2500      	movs	r5, #0
9001548a:	9805      	ldr	r0, [sp, #20]
9001548c:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015490:	6061      	str	r1, [r4, #4]
90015492:	8263      	strh	r3, [r4, #18]
90015494:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015498:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001549c:	8025      	strh	r5, [r4, #0]
9001549e:	7221      	strb	r1, [r4, #8]
900154a0:	7266      	strb	r6, [r4, #9]
900154a2:	60e0      	str	r0, [r4, #12]
900154a4:	8222      	strh	r2, [r4, #16]
900154a6:	82a3      	strh	r3, [r4, #20]
900154a8:	82e5      	strh	r5, [r4, #22]
900154aa:	8325      	strh	r5, [r4, #24]
900154ac:	8365      	strh	r5, [r4, #26]
900154ae:	83a5      	strh	r5, [r4, #28]
900154b0:	83e5      	strh	r5, [r4, #30]
900154b2:	8425      	strh	r5, [r4, #32]
900154b4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
900154b8:	b32e      	cbz	r6, 90015506 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900154ba:	6803      	ldr	r3, [r0, #0]
900154bc:	695b      	ldr	r3, [r3, #20]
900154be:	4798      	blx	r3
900154c0:	4606      	mov	r6, r0
900154c2:	b300      	cbz	r0, 90015506 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900154c4:	68e0      	ldr	r0, [r4, #12]
900154c6:	4631      	mov	r1, r6
900154c8:	6803      	ldr	r3, [r0, #0]
900154ca:	68db      	ldr	r3, [r3, #12]
900154cc:	4798      	blx	r3
900154ce:	4605      	mov	r5, r0
900154d0:	b1c8      	cbz	r0, 90015506 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900154d2:	7b43      	ldrb	r3, [r0, #13]
900154d4:	7a82      	ldrb	r2, [r0, #10]
900154d6:	005b      	lsls	r3, r3, #1
900154d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
900154dc:	4313      	orrs	r3, r2
900154de:	8423      	strh	r3, [r4, #32]
900154e0:	7a63      	ldrb	r3, [r4, #9]
900154e2:	2b06      	cmp	r3, #6
900154e4:	d10f      	bne.n	90015506 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900154e6:	68e0      	ldr	r0, [r4, #12]
900154e8:	462a      	mov	r2, r5
900154ea:	4631      	mov	r1, r6
900154ec:	6803      	ldr	r3, [r0, #0]
900154ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900154f0:	4798      	blx	r3
900154f2:	7b6b      	ldrb	r3, [r5, #13]
900154f4:	005b      	lsls	r3, r3, #1
900154f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
900154fa:	7aab      	ldrb	r3, [r5, #10]
900154fc:	4313      	orrs	r3, r2
900154fe:	4418      	add	r0, r3
90015500:	8c23      	ldrh	r3, [r4, #32]
90015502:	4418      	add	r0, r3
90015504:	8420      	strh	r0, [r4, #32]
90015506:	4620      	mov	r0, r4
90015508:	bd70      	pop	{r4, r5, r6, pc}

9001550a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001550a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001550e:	2400      	movs	r4, #0
90015510:	b085      	sub	sp, #20
90015512:	4681      	mov	r9, r0
90015514:	4688      	mov	r8, r1
90015516:	4692      	mov	sl, r2
90015518:	469b      	mov	fp, r3
9001551a:	4627      	mov	r7, r4
9001551c:	4625      	mov	r5, r4
9001551e:	4626      	mov	r6, r4
90015520:	4554      	cmp	r4, sl
90015522:	da2a      	bge.n	9001557a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015524:	2300      	movs	r3, #0
90015526:	9303      	str	r3, [sp, #12]
90015528:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001552c:	429d      	cmp	r5, r3
9001552e:	d004      	beq.n	9001553a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90015530:	f242 030b 	movw	r3, #8203	; 0x200b
90015534:	429d      	cmp	r5, r3
90015536:	bf18      	it	ne
90015538:	462f      	movne	r7, r5
9001553a:	ab03      	add	r3, sp, #12
9001553c:	4642      	mov	r2, r8
9001553e:	4659      	mov	r1, fp
90015540:	4648      	mov	r0, r9
90015542:	f003 f8f5 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015546:	4605      	mov	r5, r0
90015548:	b1b8      	cbz	r0, 9001557a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001554a:	280a      	cmp	r0, #10
9001554c:	d015      	beq.n	9001557a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001554e:	9a03      	ldr	r2, [sp, #12]
90015550:	b18a      	cbz	r2, 90015576 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90015552:	7b50      	ldrb	r0, [r2, #13]
90015554:	4639      	mov	r1, r7
90015556:	7a93      	ldrb	r3, [r2, #10]
90015558:	0040      	lsls	r0, r0, #1
9001555a:	8895      	ldrh	r5, [r2, #4]
9001555c:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015560:	4303      	orrs	r3, r0
90015562:	4640      	mov	r0, r8
90015564:	9301      	str	r3, [sp, #4]
90015566:	f8d8 3000 	ldr.w	r3, [r8]
9001556a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001556c:	4798      	blx	r3
9001556e:	9b01      	ldr	r3, [sp, #4]
90015570:	4418      	add	r0, r3
90015572:	4406      	add	r6, r0
90015574:	b2b6      	uxth	r6, r6
90015576:	3401      	adds	r4, #1
90015578:	e7d2      	b.n	90015520 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001557a:	4630      	mov	r0, r6
9001557c:	b005      	add	sp, #20
9001557e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015582 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90015582:	2a02      	cmp	r2, #2
90015584:	b530      	push	{r4, r5, lr}
90015586:	d011      	beq.n	900155ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90015588:	2a03      	cmp	r2, #3
9001558a:	d01c      	beq.n	900155c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
9001558c:	2a01      	cmp	r2, #1
9001558e:	d10c      	bne.n	900155aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015590:	888b      	ldrh	r3, [r1, #4]
90015592:	8801      	ldrh	r1, [r0, #0]
90015594:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015598:	1a5b      	subs	r3, r3, r1
9001559a:	8844      	ldrh	r4, [r0, #2]
9001559c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900155a0:	1a9b      	subs	r3, r3, r2
900155a2:	8004      	strh	r4, [r0, #0]
900155a4:	8081      	strh	r1, [r0, #4]
900155a6:	8043      	strh	r3, [r0, #2]
900155a8:	80c2      	strh	r2, [r0, #6]
900155aa:	bd30      	pop	{r4, r5, pc}
900155ac:	88cb      	ldrh	r3, [r1, #6]
900155ae:	8842      	ldrh	r2, [r0, #2]
900155b0:	1a9b      	subs	r3, r3, r2
900155b2:	88c2      	ldrh	r2, [r0, #6]
900155b4:	1a9b      	subs	r3, r3, r2
900155b6:	888a      	ldrh	r2, [r1, #4]
900155b8:	8801      	ldrh	r1, [r0, #0]
900155ba:	8043      	strh	r3, [r0, #2]
900155bc:	1a52      	subs	r2, r2, r1
900155be:	8881      	ldrh	r1, [r0, #4]
900155c0:	1a52      	subs	r2, r2, r1
900155c2:	8002      	strh	r2, [r0, #0]
900155c4:	e7f1      	b.n	900155aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900155c6:	88cb      	ldrh	r3, [r1, #6]
900155c8:	8841      	ldrh	r1, [r0, #2]
900155ca:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900155ce:	1a5b      	subs	r3, r3, r1
900155d0:	f9b0 5000 	ldrsh.w	r5, [r0]
900155d4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
900155d8:	1a9b      	subs	r3, r3, r2
900155da:	8045      	strh	r5, [r0, #2]
900155dc:	8082      	strh	r2, [r0, #4]
900155de:	8003      	strh	r3, [r0, #0]
900155e0:	80c4      	strh	r4, [r0, #6]
900155e2:	e7e2      	b.n	900155aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900155e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900155e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900155e8:	b09f      	sub	sp, #124	; 0x7c
900155ea:	9116      	str	r1, [sp, #88]	; 0x58
900155ec:	9317      	str	r3, [sp, #92]	; 0x5c
900155ee:	9929      	ldr	r1, [sp, #164]	; 0xa4
900155f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900155f2:	8809      	ldrh	r1, [r1, #0]
900155f4:	889b      	ldrh	r3, [r3, #4]
900155f6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
900155fa:	440b      	add	r3, r1
900155fc:	9212      	str	r2, [sp, #72]	; 0x48
900155fe:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90015602:	b21b      	sxth	r3, r3
90015604:	9011      	str	r0, [sp, #68]	; 0x44
90015606:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
9001560a:	9310      	str	r3, [sp, #64]	; 0x40
9001560c:	f8d8 3000 	ldr.w	r3, [r8]
90015610:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90015614:	7b19      	ldrb	r1, [r3, #12]
90015616:	7adb      	ldrb	r3, [r3, #11]
90015618:	9114      	str	r1, [sp, #80]	; 0x50
9001561a:	9315      	str	r3, [sp, #84]	; 0x54
9001561c:	2a00      	cmp	r2, #0
9001561e:	d06a      	beq.n	900156f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90015620:	f898 3010 	ldrb.w	r3, [r8, #16]
90015624:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90015626:	2b06      	cmp	r3, #6
90015628:	bf14      	ite	ne
9001562a:	2301      	movne	r3, #1
9001562c:	2302      	moveq	r3, #2
9001562e:	4413      	add	r3, r2
90015630:	f04f 0900 	mov.w	r9, #0
90015634:	930f      	str	r3, [sp, #60]	; 0x3c
90015636:	464c      	mov	r4, r9
90015638:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
9001563c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90015640:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
90015644:	4293      	cmp	r3, r2
90015646:	f280 808f 	bge.w	90015768 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
9001564a:	2300      	movs	r3, #0
9001564c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90015650:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90015654:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015658:	429c      	cmp	r4, r3
9001565a:	d006      	beq.n	9001566a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
9001565c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001565e:	f242 020b 	movw	r2, #8203	; 0x200b
90015662:	4294      	cmp	r4, r2
90015664:	bf18      	it	ne
90015666:	4623      	movne	r3, r4
90015668:	930d      	str	r3, [sp, #52]	; 0x34
9001566a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001566c:	992d      	ldr	r1, [sp, #180]	; 0xb4
9001566e:	f8d8 2000 	ldr.w	r2, [r8]
90015672:	428b      	cmp	r3, r1
90015674:	db41      	blt.n	900156fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90015676:	6813      	ldr	r3, [r2, #0]
90015678:	4610      	mov	r0, r2
9001567a:	695b      	ldr	r3, [r3, #20]
9001567c:	4798      	blx	r3
9001567e:	4604      	mov	r4, r0
90015680:	f8d8 0000 	ldr.w	r0, [r8]
90015684:	aa1d      	add	r2, sp, #116	; 0x74
90015686:	4621      	mov	r1, r4
90015688:	6803      	ldr	r3, [r0, #0]
9001568a:	689d      	ldr	r5, [r3, #8]
9001568c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90015690:	47a8      	blx	r5
90015692:	901c      	str	r0, [sp, #112]	; 0x70
90015694:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015698:	429c      	cmp	r4, r3
9001569a:	f000 80ec 	beq.w	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001569e:	f242 030b 	movw	r3, #8203	; 0x200b
900156a2:	429c      	cmp	r4, r3
900156a4:	f000 80e7 	beq.w	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900156a8:	2c00      	cmp	r4, #0
900156aa:	f000 80f9 	beq.w	900158a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900156ae:	2c0a      	cmp	r4, #10
900156b0:	d060      	beq.n	90015774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
900156b2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900156b4:	b36a      	cbz	r2, 90015712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900156b6:	8894      	ldrh	r4, [r2, #4]
900156b8:	f1bb 0f00 	cmp.w	fp, #0
900156bc:	d03b      	beq.n	90015736 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900156be:	f892 900d 	ldrb.w	r9, [r2, #13]
900156c2:	f1bb 0f01 	cmp.w	fp, #1
900156c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900156ca:	f409 7380 	and.w	r3, r9, #256	; 0x100
900156ce:	f892 900a 	ldrb.w	r9, [r2, #10]
900156d2:	ea49 0903 	orr.w	r9, r9, r3
900156d6:	d134      	bne.n	90015742 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
900156d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900156da:	eba6 0609 	sub.w	r6, r6, r9
900156de:	2b00      	cmp	r3, #0
900156e0:	d14f      	bne.n	90015782 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
900156e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
900156e4:	eb09 0306 	add.w	r3, r9, r6
900156e8:	4413      	add	r3, r2
900156ea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900156ec:	f9b2 2000 	ldrsh.w	r2, [r2]
900156f0:	4293      	cmp	r3, r2
900156f2:	da51      	bge.n	90015798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
900156f4:	e038      	b.n	90015768 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900156f6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900156f8:	e79a      	b.n	90015630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
900156fa:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900156fe:	4659      	mov	r1, fp
90015700:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015702:	9301      	str	r3, [sp, #4]
90015704:	ab1d      	add	r3, sp, #116	; 0x74
90015706:	9300      	str	r3, [sp, #0]
90015708:	ab1c      	add	r3, sp, #112	; 0x70
9001570a:	f003 f85a 	bl	900187c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001570e:	4604      	mov	r4, r0
90015710:	e7c0      	b.n	90015694 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90015712:	f8d8 0000 	ldr.w	r0, [r8]
90015716:	6803      	ldr	r3, [r0, #0]
90015718:	691b      	ldr	r3, [r3, #16]
9001571a:	4798      	blx	r3
9001571c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015720:	4298      	cmp	r0, r3
90015722:	f000 80a8 	beq.w	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015726:	f242 030b 	movw	r3, #8203	; 0x200b
9001572a:	4298      	cmp	r0, r3
9001572c:	f000 80a3 	beq.w	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015730:	f1bb 0f00 	cmp.w	fp, #0
90015734:	d100      	bne.n	90015738 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
90015736:	444e      	add	r6, r9
90015738:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001573a:	2a00      	cmp	r2, #0
9001573c:	d1bf      	bne.n	900156be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
9001573e:	4691      	mov	r9, r2
90015740:	e099      	b.n	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015742:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015744:	2b00      	cmp	r3, #0
90015746:	f000 80ad 	beq.w	900158a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
9001574a:	f1bb 0f00 	cmp.w	fp, #0
9001574e:	d118      	bne.n	90015782 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90015750:	f8d8 0000 	ldr.w	r0, [r8]
90015754:	990d      	ldr	r1, [sp, #52]	; 0x34
90015756:	6803      	ldr	r3, [r0, #0]
90015758:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001575a:	4798      	blx	r3
9001575c:	4406      	add	r6, r0
9001575e:	9b15      	ldr	r3, [sp, #84]	; 0x54
90015760:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015762:	1af3      	subs	r3, r6, r3
90015764:	4293      	cmp	r3, r2
90015766:	dd17      	ble.n	90015798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90015768:	2c00      	cmp	r4, #0
9001576a:	f000 8099 	beq.w	900158a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001576e:	2c0a      	cmp	r4, #10
90015770:	f040 8087 	bne.w	90015882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
90015774:	240a      	movs	r4, #10
90015776:	fab4 f084 	clz	r0, r4
9001577a:	0940      	lsrs	r0, r0, #5
9001577c:	b01f      	add	sp, #124	; 0x7c
9001577e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015782:	f8d8 0000 	ldr.w	r0, [r8]
90015786:	990d      	ldr	r1, [sp, #52]	; 0x34
90015788:	6803      	ldr	r3, [r0, #0]
9001578a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001578c:	4798      	blx	r3
9001578e:	f1bb 0f01 	cmp.w	fp, #1
90015792:	eba6 0600 	sub.w	r6, r6, r0
90015796:	d0a4      	beq.n	900156e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90015798:	981c      	ldr	r0, [sp, #112]	; 0x70
9001579a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001579c:	f990 1009 	ldrsb.w	r1, [r0, #9]
900157a0:	f9b3 7000 	ldrsh.w	r7, [r3]
900157a4:	7b43      	ldrb	r3, [r0, #13]
900157a6:	4431      	add	r1, r6
900157a8:	015b      	lsls	r3, r3, #5
900157aa:	f403 7280 	and.w	r2, r3, #256	; 0x100
900157ae:	7983      	ldrb	r3, [r0, #6]
900157b0:	4313      	orrs	r3, r2
900157b2:	440b      	add	r3, r1
900157b4:	42bb      	cmp	r3, r7
900157b6:	db5e      	blt.n	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900157b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
900157ba:	4299      	cmp	r1, r3
900157bc:	da5b      	bge.n	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900157be:	f8d8 0000 	ldr.w	r0, [r8]
900157c2:	42b7      	cmp	r7, r6
900157c4:	6803      	ldr	r3, [r0, #0]
900157c6:	bfcc      	ite	gt
900157c8:	1bbf      	subgt	r7, r7, r6
900157ca:	2700      	movle	r7, #0
900157cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900157ce:	bfc8      	it	gt
900157d0:	b2bf      	uxthgt	r7, r7
900157d2:	4798      	blx	r3
900157d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900157d6:	7b5a      	ldrb	r2, [r3, #13]
900157d8:	00d1      	lsls	r1, r2, #3
900157da:	f401 7580 	and.w	r5, r1, #256	; 0x100
900157de:	7a19      	ldrb	r1, [r3, #8]
900157e0:	4329      	orrs	r1, r5
900157e2:	0655      	lsls	r5, r2, #25
900157e4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
900157e6:	bf48      	it	mi
900157e8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
900157ec:	4405      	add	r5, r0
900157ee:	bf48      	it	mi
900157f0:	b209      	sxthmi	r1, r1
900157f2:	1a6d      	subs	r5, r5, r1
900157f4:	9929      	ldr	r1, [sp, #164]	; 0xa4
900157f6:	b2ad      	uxth	r5, r5
900157f8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900157fc:	fa0f fa85 	sxth.w	sl, r5
90015800:	4551      	cmp	r1, sl
90015802:	dd3c      	ble.n	9001587e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
90015804:	0112      	lsls	r2, r2, #4
90015806:	79d8      	ldrb	r0, [r3, #7]
90015808:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001580c:	4302      	orrs	r2, r0
9001580e:	4492      	add	sl, r2
90015810:	4551      	cmp	r1, sl
90015812:	dc30      	bgt.n	90015876 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015814:	1b4d      	subs	r5, r1, r5
90015816:	468a      	mov	sl, r1
90015818:	b22d      	sxth	r5, r5
9001581a:	9319      	str	r3, [sp, #100]	; 0x64
9001581c:	b2ad      	uxth	r5, r5
9001581e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90015820:	f8d8 0000 	ldr.w	r0, [r8]
90015824:	681a      	ldr	r2, [r3, #0]
90015826:	6801      	ldr	r1, [r0, #0]
90015828:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9001582a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001582c:	9313      	str	r3, [sp, #76]	; 0x4c
9001582e:	9218      	str	r2, [sp, #96]	; 0x60
90015830:	6c09      	ldr	r1, [r1, #64]	; 0x40
90015832:	4788      	blx	r1
90015834:	f898 1006 	ldrb.w	r1, [r8, #6]
90015838:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001583a:	910b      	str	r1, [sp, #44]	; 0x2c
9001583c:	f898 100e 	ldrb.w	r1, [r8, #14]
90015840:	9a18      	ldr	r2, [sp, #96]	; 0x60
90015842:	910a      	str	r1, [sp, #40]	; 0x28
90015844:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90015848:	9109      	str	r1, [sp, #36]	; 0x24
9001584a:	f8d8 1008 	ldr.w	r1, [r8, #8]
9001584e:	9305      	str	r3, [sp, #20]
90015850:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015852:	9206      	str	r2, [sp, #24]
90015854:	9304      	str	r3, [sp, #16]
90015856:	9b12      	ldr	r3, [sp, #72]	; 0x48
90015858:	f8cd a004 	str.w	sl, [sp, #4]
9001585c:	e9cd 7502 	strd	r7, r5, [sp, #8]
90015860:	4437      	add	r7, r6
90015862:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90015864:	b23f      	sxth	r7, r7
90015866:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001586a:	9700      	str	r7, [sp, #0]
9001586c:	9916      	ldr	r1, [sp, #88]	; 0x58
9001586e:	681a      	ldr	r2, [r3, #0]
90015870:	9811      	ldr	r0, [sp, #68]	; 0x44
90015872:	685b      	ldr	r3, [r3, #4]
90015874:	47a8      	blx	r5
90015876:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015878:	3301      	adds	r3, #1
9001587a:	930e      	str	r3, [sp, #56]	; 0x38
9001587c:	e6e0      	b.n	90015640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
9001587e:	2500      	movs	r5, #0
90015880:	e7cb      	b.n	9001581a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
90015882:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90015884:	3501      	adds	r5, #1
90015886:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90015888:	429d      	cmp	r5, r3
9001588a:	f6bf af74 	bge.w	90015776 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
9001588e:	4659      	mov	r1, fp
90015890:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015892:	f7ee fc29 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015896:	4604      	mov	r4, r0
90015898:	b110      	cbz	r0, 900158a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001589a:	280a      	cmp	r0, #10
9001589c:	d1f2      	bne.n	90015884 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
9001589e:	e769      	b.n	90015774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
900158a0:	2400      	movs	r4, #0
900158a2:	e768      	b.n	90015776 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
900158a4:	f1bb 0f00 	cmp.w	fp, #0
900158a8:	f43f af59 	beq.w	9001575e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
900158ac:	e774      	b.n	90015798 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

900158ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900158ae:	b530      	push	{r4, r5, lr}
900158b0:	8ac4      	ldrh	r4, [r0, #22]
900158b2:	8b45      	ldrh	r5, [r0, #26]
900158b4:	8343      	strh	r3, [r0, #26]
900158b6:	442c      	add	r4, r5
900158b8:	1ae4      	subs	r4, r4, r3
900158ba:	8b83      	ldrh	r3, [r0, #28]
900158bc:	82c4      	strh	r4, [r0, #22]
900158be:	8b04      	ldrh	r4, [r0, #24]
900158c0:	4422      	add	r2, r4
900158c2:	440c      	add	r4, r1
900158c4:	1a59      	subs	r1, r3, r1
900158c6:	83c2      	strh	r2, [r0, #30]
900158c8:	8304      	strh	r4, [r0, #24]
900158ca:	8381      	strh	r1, [r0, #28]
900158cc:	bd30      	pop	{r4, r5, pc}

900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900158ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900158d2:	4604      	mov	r4, r0
900158d4:	8a47      	ldrh	r7, [r0, #18]
900158d6:	68c0      	ldr	r0, [r0, #12]
900158d8:	b085      	sub	sp, #20
900158da:	6803      	ldr	r3, [r0, #0]
900158dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900158de:	4798      	blx	r3
900158e0:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
900158e4:	7a63      	ldrb	r3, [r4, #9]
900158e6:	eb06 0640 	add.w	r6, r6, r0, lsl #1
900158ea:	3b01      	subs	r3, #1
900158ec:	42b7      	cmp	r7, r6
900158ee:	bfac      	ite	ge
900158f0:	f04f 0900 	movge.w	r9, #0
900158f4:	f04f 0901 	movlt.w	r9, #1
900158f8:	2b05      	cmp	r3, #5
900158fa:	d804      	bhi.n	90015906 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900158fc:	e8df f003 	tbb	[pc, r3]
90015900:	470f0854 	.word	0x470f0854
90015904:	4c4c      	.short	0x4c4c
90015906:	2500      	movs	r5, #0
90015908:	46a9      	mov	r9, r5
9001590a:	462e      	mov	r6, r5
9001590c:	462f      	mov	r7, r5
9001590e:	e00e      	b.n	9001592e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015910:	42b7      	cmp	r7, r6
90015912:	f04f 0500 	mov.w	r5, #0
90015916:	bfb4      	ite	lt
90015918:	2600      	movlt	r6, #0
9001591a:	2601      	movge	r6, #1
9001591c:	e7f6      	b.n	9001590c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001591e:	42b7      	cmp	r7, r6
90015920:	464d      	mov	r5, r9
90015922:	f04f 0900 	mov.w	r9, #0
90015926:	bfb4      	ite	lt
90015928:	2600      	movlt	r6, #0
9001592a:	2601      	movge	r6, #1
9001592c:	464f      	mov	r7, r9
9001592e:	f04f 0800 	mov.w	r8, #0
90015932:	f8a4 8016 	strh.w	r8, [r4, #22]
90015936:	f8a4 8018 	strh.w	r8, [r4, #24]
9001593a:	f8cd 8004 	str.w	r8, [sp, #4]
9001593e:	2300      	movs	r3, #0
90015940:	9303      	str	r3, [sp, #12]
90015942:	8823      	ldrh	r3, [r4, #0]
90015944:	2b20      	cmp	r3, #32
90015946:	d033      	beq.n	900159b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90015948:	f242 010b 	movw	r1, #8203	; 0x200b
9001594c:	1a5a      	subs	r2, r3, r1
9001594e:	f1d2 0a00 	rsbs	sl, r2, #0
90015952:	eb4a 0a02 	adc.w	sl, sl, r2
90015956:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001595a:	4293      	cmp	r3, r2
9001595c:	d008      	beq.n	90015970 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001595e:	428b      	cmp	r3, r1
90015960:	9a01      	ldr	r2, [sp, #4]
90015962:	bf0e      	itee	eq
90015964:	f04f 0a01 	moveq.w	sl, #1
90015968:	461a      	movne	r2, r3
9001596a:	f04f 0a00 	movne.w	sl, #0
9001596e:	9201      	str	r2, [sp, #4]
90015970:	ab03      	add	r3, sp, #12
90015972:	68e2      	ldr	r2, [r4, #12]
90015974:	7a21      	ldrb	r1, [r4, #8]
90015976:	6860      	ldr	r0, [r4, #4]
90015978:	f002 feda 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001597c:	8020      	strh	r0, [r4, #0]
9001597e:	b9d8      	cbnz	r0, 900159b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90015980:	8ba2      	ldrh	r2, [r4, #28]
90015982:	2300      	movs	r3, #0
90015984:	4611      	mov	r1, r2
90015986:	4620      	mov	r0, r4
90015988:	f7ff ff91 	bl	900158ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001598c:	e06e      	b.n	90015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001598e:	2500      	movs	r5, #0
90015990:	2701      	movs	r7, #1
90015992:	46a9      	mov	r9, r5
90015994:	462e      	mov	r6, r5
90015996:	e7ca      	b.n	9001592e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015998:	42b7      	cmp	r7, r6
9001599a:	f04f 0500 	mov.w	r5, #0
9001599e:	bfb4      	ite	lt
900159a0:	2700      	movlt	r7, #0
900159a2:	2701      	movge	r7, #1
900159a4:	462e      	mov	r6, r5
900159a6:	e7c2      	b.n	9001592e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900159a8:	2500      	movs	r5, #0
900159aa:	2601      	movs	r6, #1
900159ac:	46a9      	mov	r9, r5
900159ae:	e7ad      	b.n	9001590c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900159b0:	9301      	str	r3, [sp, #4]
900159b2:	f04f 0a01 	mov.w	sl, #1
900159b6:	e7db      	b.n	90015970 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900159b8:	8b63      	ldrh	r3, [r4, #26]
900159ba:	280a      	cmp	r0, #10
900159bc:	f103 0301 	add.w	r3, r3, #1
900159c0:	8363      	strh	r3, [r4, #26]
900159c2:	d0dd      	beq.n	90015980 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900159c4:	9a03      	ldr	r2, [sp, #12]
900159c6:	bb62      	cbnz	r2, 90015a22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900159c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900159cc:	4298      	cmp	r0, r3
900159ce:	d003      	beq.n	900159d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900159d0:	f242 030b 	movw	r3, #8203	; 0x200b
900159d4:	4298      	cmp	r0, r3
900159d6:	d1b2      	bne.n	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900159d8:	8823      	ldrh	r3, [r4, #0]
900159da:	8ba1      	ldrh	r1, [r4, #28]
900159dc:	2b20      	cmp	r3, #32
900159de:	d003      	beq.n	900159e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
900159e0:	f242 000b 	movw	r0, #8203	; 0x200b
900159e4:	4283      	cmp	r3, r0
900159e6:	d131      	bne.n	90015a4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
900159e8:	f1ba 0f00 	cmp.w	sl, #0
900159ec:	bf0a      	itet	eq
900159ee:	4688      	moveq	r8, r1
900159f0:	4650      	movne	r0, sl
900159f2:	2001      	moveq	r0, #1
900159f4:	440a      	add	r2, r1
900159f6:	8b23      	ldrh	r3, [r4, #24]
900159f8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900159fc:	b292      	uxth	r2, r2
900159fe:	83a2      	strh	r2, [r4, #28]
90015a00:	4413      	add	r3, r2
90015a02:	f1b9 0f00 	cmp.w	r9, #0
90015a06:	d102      	bne.n	90015a0e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90015a08:	2d00      	cmp	r5, #0
90015a0a:	d042      	beq.n	90015a92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90015a0c:	b300      	cbz	r0, 90015a50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90015a0e:	8c21      	ldrh	r1, [r4, #32]
90015a10:	4419      	add	r1, r3
90015a12:	458c      	cmp	ip, r1
90015a14:	da37      	bge.n	90015a86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015a16:	8ae1      	ldrh	r1, [r4, #22]
90015a18:	2900      	cmp	r1, #0
90015a1a:	d034      	beq.n	90015a86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015a1c:	4563      	cmp	r3, ip
90015a1e:	dd8e      	ble.n	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015a20:	e01d      	b.n	90015a5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90015a22:	8893      	ldrh	r3, [r2, #4]
90015a24:	9901      	ldr	r1, [sp, #4]
90015a26:	8023      	strh	r3, [r4, #0]
90015a28:	f892 b00d 	ldrb.w	fp, [r2, #13]
90015a2c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90015a30:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90015a34:	f892 b00a 	ldrb.w	fp, [r2, #10]
90015a38:	ea4b 0b00 	orr.w	fp, fp, r0
90015a3c:	68e0      	ldr	r0, [r4, #12]
90015a3e:	6803      	ldr	r3, [r0, #0]
90015a40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015a42:	4798      	blx	r3
90015a44:	eb0b 0200 	add.w	r2, fp, r0
90015a48:	b292      	uxth	r2, r2
90015a4a:	e7c5      	b.n	900159d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015a4c:	2000      	movs	r0, #0
90015a4e:	e7d1      	b.n	900159f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90015a50:	4563      	cmp	r3, ip
90015a52:	f77f af74 	ble.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015a56:	8ae3      	ldrh	r3, [r4, #22]
90015a58:	2b00      	cmp	r3, #0
90015a5a:	f43f af70 	beq.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015a5e:	2301      	movs	r3, #1
90015a60:	8c22      	ldrh	r2, [r4, #32]
90015a62:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
90015a66:	8be3      	ldrh	r3, [r4, #30]
90015a68:	4413      	add	r3, r2
90015a6a:	83e3      	strh	r3, [r4, #30]
90015a6c:	68e0      	ldr	r0, [r4, #12]
90015a6e:	6803      	ldr	r3, [r0, #0]
90015a70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015a72:	4798      	blx	r3
90015a74:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90015a78:	4418      	add	r0, r3
90015a7a:	8a63      	ldrh	r3, [r4, #18]
90015a7c:	1a18      	subs	r0, r3, r0
90015a7e:	8260      	strh	r0, [r4, #18]
90015a80:	b005      	add	sp, #20
90015a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015a86:	2300      	movs	r3, #0
90015a88:	4611      	mov	r1, r2
90015a8a:	4620      	mov	r0, r4
90015a8c:	f7ff ff0f 	bl	900158ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015a90:	e755      	b.n	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015a92:	4563      	cmp	r3, ip
90015a94:	dd14      	ble.n	90015ac0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90015a96:	b117      	cbz	r7, 90015a9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90015a98:	2301      	movs	r3, #1
90015a9a:	460a      	mov	r2, r1
90015a9c:	e772      	b.n	90015984 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90015a9e:	2e00      	cmp	r6, #0
90015aa0:	f43f af4d 	beq.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015aa4:	2800      	cmp	r0, #0
90015aa6:	f47f af4a 	bne.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015aaa:	f1ba 0f00 	cmp.w	sl, #0
90015aae:	d002      	beq.n	90015ab6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90015ab0:	2301      	movs	r3, #1
90015ab2:	4642      	mov	r2, r8
90015ab4:	e767      	b.n	90015986 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90015ab6:	8ae3      	ldrh	r3, [r4, #22]
90015ab8:	2b00      	cmp	r3, #0
90015aba:	f43f af40 	beq.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015abe:	e7d5      	b.n	90015a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015ac0:	2800      	cmp	r0, #0
90015ac2:	f47f af3c 	bne.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015ac6:	f1ba 0f00 	cmp.w	sl, #0
90015aca:	f43f af38 	beq.w	9001593e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015ace:	2301      	movs	r3, #1
90015ad0:	4642      	mov	r2, r8
90015ad2:	e7da      	b.n	90015a8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90015ad4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90015ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
90015ad6:	4605      	mov	r5, r0
90015ad8:	b08f      	sub	sp, #60	; 0x3c
90015ada:	4617      	mov	r7, r2
90015adc:	461c      	mov	r4, r3
90015ade:	460e      	mov	r6, r1
90015ae0:	b1d1      	cbz	r1, 90015b18 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90015ae2:	681b      	ldr	r3, [r3, #0]
90015ae4:	4620      	mov	r0, r4
90015ae6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015ae8:	4798      	blx	r3
90015aea:	4240      	negs	r0, r0
90015aec:	9603      	str	r6, [sp, #12]
90015aee:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015af2:	b200      	sxth	r0, r0
90015af4:	9700      	str	r7, [sp, #0]
90015af6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90015afa:	4629      	mov	r1, r5
90015afc:	e9cd 4001 	strd	r4, r0, [sp, #4]
90015b00:	2401      	movs	r4, #1
90015b02:	a805      	add	r0, sp, #20
90015b04:	f7ff fcbe 	bl	90015484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015b08:	a805      	add	r0, sp, #20
90015b0a:	f7ff fee0 	bl	900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015b0e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015b12:	b163      	cbz	r3, 90015b2e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90015b14:	3401      	adds	r4, #1
90015b16:	e7f7      	b.n	90015b08 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90015b18:	2401      	movs	r4, #1
90015b1a:	f002 fed5 	bl	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015b1e:	280a      	cmp	r0, #10
90015b20:	4628      	mov	r0, r5
90015b22:	bf08      	it	eq
90015b24:	3401      	addeq	r4, #1
90015b26:	f002 fecf 	bl	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015b2a:	2800      	cmp	r0, #0
90015b2c:	d1f7      	bne.n	90015b1e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90015b2e:	b2a0      	uxth	r0, r4
90015b30:	b00f      	add	sp, #60	; 0x3c
90015b32:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015b34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90015b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015b38:	b0e3      	sub	sp, #396	; 0x18c
90015b3a:	461c      	mov	r4, r3
90015b3c:	4683      	mov	fp, r0
90015b3e:	4688      	mov	r8, r1
90015b40:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90015b42:	2b00      	cmp	r3, #0
90015b44:	f000 8112 	beq.w	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b48:	6823      	ldr	r3, [r4, #0]
90015b4a:	2b00      	cmp	r3, #0
90015b4c:	f000 810e 	beq.w	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b50:	7ba3      	ldrb	r3, [r4, #14]
90015b52:	2b00      	cmp	r3, #0
90015b54:	f000 810a 	beq.w	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b58:	ad0a      	add	r5, sp, #40	; 0x28
90015b5a:	6810      	ldr	r0, [r2, #0]
90015b5c:	6851      	ldr	r1, [r2, #4]
90015b5e:	462b      	mov	r3, r5
90015b60:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90015b64:	c303      	stmia	r3!, {r0, r1}
90015b66:	2100      	movs	r1, #0
90015b68:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90015b6c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015b70:	4628      	mov	r0, r5
90015b72:	910c      	str	r1, [sp, #48]	; 0x30
90015b74:	a90c      	add	r1, sp, #48	; 0x30
90015b76:	79a2      	ldrb	r2, [r4, #6]
90015b78:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015b7c:	f7ff fd01 	bl	90015582 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015b80:	a90c      	add	r1, sp, #48	; 0x30
90015b82:	79a2      	ldrb	r2, [r4, #6]
90015b84:	4608      	mov	r0, r1
90015b86:	f7ff fcfc 	bl	90015582 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015b8a:	a817      	add	r0, sp, #92	; 0x5c
90015b8c:	f002 fa6f 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
90015b90:	6820      	ldr	r0, [r4, #0]
90015b92:	6803      	ldr	r3, [r0, #0]
90015b94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015b96:	4798      	blx	r3
90015b98:	4606      	mov	r6, r0
90015b9a:	6820      	ldr	r0, [r4, #0]
90015b9c:	6803      	ldr	r3, [r0, #0]
90015b9e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015ba0:	4798      	blx	r3
90015ba2:	4633      	mov	r3, r6
90015ba4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90015ba6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90015ba8:	9000      	str	r0, [sp, #0]
90015baa:	a817      	add	r0, sp, #92	; 0x5c
90015bac:	f002 faba 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015bb0:	6820      	ldr	r0, [r4, #0]
90015bb2:	f894 a004 	ldrb.w	sl, [r4, #4]
90015bb6:	6803      	ldr	r3, [r0, #0]
90015bb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015bba:	4798      	blx	r3
90015bbc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90015bc0:	6823      	ldr	r3, [r4, #0]
90015bc2:	4607      	mov	r7, r0
90015bc4:	4406      	add	r6, r0
90015bc6:	a830      	add	r0, sp, #192	; 0xc0
90015bc8:	f893 9009 	ldrb.w	r9, [r3, #9]
90015bcc:	f002 fa4f 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
90015bd0:	7c23      	ldrb	r3, [r4, #16]
90015bd2:	b17b      	cbz	r3, 90015bf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90015bd4:	6820      	ldr	r0, [r4, #0]
90015bd6:	6803      	ldr	r3, [r0, #0]
90015bd8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015bda:	4798      	blx	r3
90015bdc:	9009      	str	r0, [sp, #36]	; 0x24
90015bde:	6820      	ldr	r0, [r4, #0]
90015be0:	6802      	ldr	r2, [r0, #0]
90015be2:	6d12      	ldr	r2, [r2, #80]	; 0x50
90015be4:	4790      	blx	r2
90015be6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015be8:	9000      	str	r0, [sp, #0]
90015bea:	a830      	add	r0, sp, #192	; 0xc0
90015bec:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90015bee:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90015bf0:	f002 fa98 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015bf4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90015bf8:	a80e      	add	r0, sp, #56	; 0x38
90015bfa:	7be2      	ldrb	r2, [r4, #15]
90015bfc:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90015c00:	1a8a      	subs	r2, r1, r2
90015c02:	7c21      	ldrb	r1, [r4, #16]
90015c04:	9103      	str	r1, [sp, #12]
90015c06:	b292      	uxth	r2, r2
90015c08:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90015c0c:	9102      	str	r1, [sp, #8]
90015c0e:	6821      	ldr	r1, [r4, #0]
90015c10:	9101      	str	r1, [sp, #4]
90015c12:	7961      	ldrb	r1, [r4, #5]
90015c14:	9100      	str	r1, [sp, #0]
90015c16:	a930      	add	r1, sp, #192	; 0xc0
90015c18:	f7ff fc34 	bl	90015484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015c1c:	2e00      	cmp	r6, #0
90015c1e:	dc5b      	bgt.n	90015cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90015c20:	af17      	add	r7, sp, #92	; 0x5c
90015c22:	f04f 0900 	mov.w	r9, #0
90015c26:	7c23      	ldrb	r3, [r4, #16]
90015c28:	2b00      	cmp	r3, #0
90015c2a:	f000 80b1 	beq.w	90015d90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90015c2e:	a80e      	add	r0, sp, #56	; 0x38
90015c30:	f7ff fe4d 	bl	900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015c34:	f1ba 0f00 	cmp.w	sl, #0
90015c38:	f000 80a5 	beq.w	90015d86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015c3c:	7c23      	ldrb	r3, [r4, #16]
90015c3e:	2264      	movs	r2, #100	; 0x64
90015c40:	4639      	mov	r1, r7
90015c42:	a849      	add	r0, sp, #292	; 0x124
90015c44:	9309      	str	r3, [sp, #36]	; 0x24
90015c46:	f012 f8c9 	bl	90027ddc <memcpy>
90015c4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015c4c:	2b00      	cmp	r3, #0
90015c4e:	f000 80a7 	beq.w	90015da0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90015c52:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
90015c56:	7922      	ldrb	r2, [r4, #4]
90015c58:	2a01      	cmp	r2, #1
90015c5a:	f040 808a 	bne.w	90015d72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90015c5e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90015c62:	1ac0      	subs	r0, r0, r3
90015c64:	2302      	movs	r3, #2
90015c66:	fb90 f0f3 	sdiv	r0, r0, r3
90015c6a:	b200      	sxth	r0, r0
90015c6c:	7c23      	ldrb	r3, [r4, #16]
90015c6e:	2b00      	cmp	r3, #0
90015c70:	f000 808b 	beq.w	90015d8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90015c74:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
90015c78:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90015c7c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015c80:	e9cd 2105 	strd	r2, r1, [sp, #20]
90015c84:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
90015c88:	2100      	movs	r1, #0
90015c8a:	4410      	add	r0, r2
90015c8c:	4642      	mov	r2, r8
90015c8e:	b200      	sxth	r0, r0
90015c90:	e9cd 9703 	strd	r9, r7, [sp, #12]
90015c94:	9000      	str	r0, [sp, #0]
90015c96:	4658      	mov	r0, fp
90015c98:	e9cd 5401 	strd	r5, r4, [sp, #4]
90015c9c:	f7ff fca2 	bl	900155e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90015ca0:	2800      	cmp	r0, #0
90015ca2:	d163      	bne.n	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015ca4:	b2b2      	uxth	r2, r6
90015ca6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90015caa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90015cae:	4413      	add	r3, r2
90015cb0:	1a8a      	subs	r2, r1, r2
90015cb2:	b21b      	sxth	r3, r3
90015cb4:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90015cb8:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90015cbc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90015cc0:	2a00      	cmp	r2, #0
90015cc2:	d153      	bne.n	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015cc4:	6822      	ldr	r2, [r4, #0]
90015cc6:	8869      	ldrh	r1, [r5, #2]
90015cc8:	7a12      	ldrb	r2, [r2, #8]
90015cca:	1a9b      	subs	r3, r3, r2
90015ccc:	88ea      	ldrh	r2, [r5, #6]
90015cce:	440a      	add	r2, r1
90015cd0:	b212      	sxth	r2, r2
90015cd2:	4293      	cmp	r3, r2
90015cd4:	dda7      	ble.n	90015c26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90015cd6:	e049      	b.n	90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015cd8:	7c23      	ldrb	r3, [r4, #16]
90015cda:	444f      	add	r7, r9
90015cdc:	b1c3      	cbz	r3, 90015d10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90015cde:	f64f 79ff 	movw	r9, #65535	; 0xffff
90015ce2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015ce6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015cea:	443b      	add	r3, r7
90015cec:	4293      	cmp	r3, r2
90015cee:	da97      	bge.n	90015c20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015cf0:	a80e      	add	r0, sp, #56	; 0x38
90015cf2:	f7ff fdec 	bl	900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015cf6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
90015cfa:	3b01      	subs	r3, #1
90015cfc:	b29b      	uxth	r3, r3
90015cfe:	454b      	cmp	r3, r9
90015d00:	9309      	str	r3, [sp, #36]	; 0x24
90015d02:	d021      	beq.n	90015d48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90015d04:	7961      	ldrb	r1, [r4, #5]
90015d06:	a817      	add	r0, sp, #92	; 0x5c
90015d08:	f7ee f9ee 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015d0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015d0e:	e7f4      	b.n	90015cfa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90015d10:	fa1f f986 	uxth.w	r9, r6
90015d14:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015d18:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015d1c:	443b      	add	r3, r7
90015d1e:	4293      	cmp	r3, r2
90015d20:	f6bf af7e 	bge.w	90015c20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015d24:	a817      	add	r0, sp, #92	; 0x5c
90015d26:	f002 fdcf 	bl	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015d2a:	b1f8      	cbz	r0, 90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015d2c:	280a      	cmp	r0, #10
90015d2e:	d1f1      	bne.n	90015d14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015d30:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90015d34:	444b      	add	r3, r9
90015d36:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90015d3a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90015d3e:	eba3 0309 	sub.w	r3, r3, r9
90015d42:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015d46:	e7e5      	b.n	90015d14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015d48:	b2b3      	uxth	r3, r6
90015d4a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90015d4e:	441a      	add	r2, r3
90015d50:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015d54:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
90015d58:	1ad3      	subs	r3, r2, r3
90015d5a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015d5e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90015d62:	b11b      	cbz	r3, 90015d6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015d64:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
90015d68:	2b00      	cmp	r3, #0
90015d6a:	d0ba      	beq.n	90015ce2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90015d6c:	b063      	add	sp, #396	; 0x18c
90015d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015d72:	2a02      	cmp	r2, #2
90015d74:	d105      	bne.n	90015d82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90015d76:	7be2      	ldrb	r2, [r4, #15]
90015d78:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90015d7c:	1a80      	subs	r0, r0, r2
90015d7e:	1ac0      	subs	r0, r0, r3
90015d80:	e773      	b.n	90015c6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90015d82:	2000      	movs	r0, #0
90015d84:	e772      	b.n	90015c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015d86:	7be0      	ldrb	r0, [r4, #15]
90015d88:	e770      	b.n	90015c6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015d8a:	f647 72ff 	movw	r2, #32767	; 0x7fff
90015d8e:	e773      	b.n	90015c78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90015d90:	f1ba 0f00 	cmp.w	sl, #0
90015d94:	d0f7      	beq.n	90015d86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015d96:	2264      	movs	r2, #100	; 0x64
90015d98:	4639      	mov	r1, r7
90015d9a:	a849      	add	r0, sp, #292	; 0x124
90015d9c:	f012 f81e 	bl	90027ddc <memcpy>
90015da0:	2300      	movs	r3, #0
90015da2:	f647 72ff 	movw	r2, #32767	; 0x7fff
90015da6:	6821      	ldr	r1, [r4, #0]
90015da8:	a849      	add	r0, sp, #292	; 0x124
90015daa:	f7ff fbae 	bl	9001550a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90015dae:	b203      	sxth	r3, r0
90015db0:	e751      	b.n	90015c56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90015db2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90015db2:	2b03      	cmp	r3, #3
90015db4:	d818      	bhi.n	90015de8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90015db6:	e8df f003 	tbb	[pc, r3]
90015dba:	0602      	.short	0x0602
90015dbc:	130d      	.short	0x130d
90015dbe:	f9b0 2000 	ldrsh.w	r2, [r0]
90015dc2:	1850      	adds	r0, r2, r1
90015dc4:	4770      	bx	lr
90015dc6:	8803      	ldrh	r3, [r0, #0]
90015dc8:	8880      	ldrh	r0, [r0, #4]
90015dca:	4418      	add	r0, r3
90015dcc:	b200      	sxth	r0, r0
90015dce:	1a80      	subs	r0, r0, r2
90015dd0:	3801      	subs	r0, #1
90015dd2:	4770      	bx	lr
90015dd4:	8803      	ldrh	r3, [r0, #0]
90015dd6:	8880      	ldrh	r0, [r0, #4]
90015dd8:	4418      	add	r0, r3
90015dda:	b200      	sxth	r0, r0
90015ddc:	1a40      	subs	r0, r0, r1
90015dde:	e7f7      	b.n	90015dd0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90015de0:	f9b0 0000 	ldrsh.w	r0, [r0]
90015de4:	4410      	add	r0, r2
90015de6:	4770      	bx	lr
90015de8:	2000      	movs	r0, #0
90015dea:	4770      	bx	lr

90015dec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90015dec:	2b03      	cmp	r3, #3
90015dee:	d817      	bhi.n	90015e20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90015df0:	e8df f003 	tbb	[pc, r3]
90015df4:	10090602 	.word	0x10090602
90015df8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90015dfc:	1850      	adds	r0, r2, r1
90015dfe:	4770      	bx	lr
90015e00:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015e04:	e7fa      	b.n	90015dfc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90015e06:	8843      	ldrh	r3, [r0, #2]
90015e08:	88c0      	ldrh	r0, [r0, #6]
90015e0a:	4418      	add	r0, r3
90015e0c:	b200      	sxth	r0, r0
90015e0e:	1a80      	subs	r0, r0, r2
90015e10:	3801      	subs	r0, #1
90015e12:	4770      	bx	lr
90015e14:	8843      	ldrh	r3, [r0, #2]
90015e16:	88c0      	ldrh	r0, [r0, #6]
90015e18:	4418      	add	r0, r3
90015e1a:	b200      	sxth	r0, r0
90015e1c:	1a40      	subs	r0, r0, r1
90015e1e:	e7f7      	b.n	90015e10 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90015e20:	2000      	movs	r0, #0
90015e22:	4770      	bx	lr

90015e24 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90015e24:	4b01      	ldr	r3, [pc, #4]	; (90015e2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90015e26:	2200      	movs	r2, #0
90015e28:	601a      	str	r2, [r3, #0]
90015e2a:	4770      	bx	lr
90015e2c:	24039714 	.word	0x24039714

90015e30 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90015e30:	4603      	mov	r3, r0
90015e32:	b1c8      	cbz	r0, 90015e68 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90015e34:	0c02      	lsrs	r2, r0, #16
90015e36:	0412      	lsls	r2, r2, #16
90015e38:	b9a2      	cbnz	r2, 90015e64 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90015e3a:	0403      	lsls	r3, r0, #16
90015e3c:	2010      	movs	r0, #16
90015e3e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90015e42:	bf04      	itt	eq
90015e44:	021b      	lsleq	r3, r3, #8
90015e46:	3008      	addeq	r0, #8
90015e48:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90015e4c:	bf04      	itt	eq
90015e4e:	011b      	lsleq	r3, r3, #4
90015e50:	3004      	addeq	r0, #4
90015e52:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90015e56:	bf04      	itt	eq
90015e58:	009b      	lsleq	r3, r3, #2
90015e5a:	3002      	addeq	r0, #2
90015e5c:	2b00      	cmp	r3, #0
90015e5e:	db04      	blt.n	90015e6a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90015e60:	3001      	adds	r0, #1
90015e62:	4770      	bx	lr
90015e64:	2000      	movs	r0, #0
90015e66:	e7ea      	b.n	90015e3e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90015e68:	2020      	movs	r0, #32
90015e6a:	4770      	bx	lr

90015e6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90015e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015e70:	b087      	sub	sp, #28
90015e72:	460d      	mov	r5, r1
90015e74:	4616      	mov	r6, r2
90015e76:	4698      	mov	r8, r3
90015e78:	4601      	mov	r1, r0
90015e7a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90015e7e:	b120      	cbz	r0, 90015e8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015e80:	b11a      	cbz	r2, 90015e8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015e82:	2d1f      	cmp	r5, #31
90015e84:	d801      	bhi.n	90015e8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015e86:	2b1f      	cmp	r3, #31
90015e88:	d904      	bls.n	90015e94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90015e8a:	2000      	movs	r0, #0
90015e8c:	6038      	str	r0, [r7, #0]
90015e8e:	b007      	add	sp, #28
90015e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015e94:	b97d      	cbnz	r5, 90015eb6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90015e96:	b143      	cbz	r3, 90015eaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90015e98:	4602      	mov	r2, r0
90015e9a:	462b      	mov	r3, r5
90015e9c:	4641      	mov	r1, r8
90015e9e:	4630      	mov	r0, r6
90015ea0:	e9cd 4700 	strd	r4, r7, [sp]
90015ea4:	f7ff ffe2 	bl	90015e6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015ea8:	e7f1      	b.n	90015e8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015eaa:	f04f 33ff 	mov.w	r3, #4294967295
90015eae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90015eb2:	603b      	str	r3, [r7, #0]
90015eb4:	e7eb      	b.n	90015e8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015eb6:	fa32 fa05 	lsrs.w	sl, r2, r5
90015eba:	d106      	bne.n	90015eca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90015ebc:	4346      	muls	r6, r0
90015ebe:	fbb6 f0f4 	udiv	r0, r6, r4
90015ec2:	fb04 6610 	mls	r6, r4, r0, r6
90015ec6:	603e      	str	r6, [r7, #0]
90015ec8:	e7e1      	b.n	90015e8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015eca:	2201      	movs	r2, #1
90015ecc:	fa00 fb05 	lsl.w	fp, r0, r5
90015ed0:	40aa      	lsls	r2, r5
90015ed2:	fbbb f9f4 	udiv	r9, fp, r4
90015ed6:	3a01      	subs	r2, #1
90015ed8:	fb0a f309 	mul.w	r3, sl, r9
90015edc:	fb04 b919 	mls	r9, r4, r9, fp
90015ee0:	4016      	ands	r6, r2
90015ee2:	9303      	str	r3, [sp, #12]
90015ee4:	4630      	mov	r0, r6
90015ee6:	f7ff ffa3 	bl	90015e30 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015eea:	462b      	mov	r3, r5
90015eec:	460a      	mov	r2, r1
90015eee:	4601      	mov	r1, r0
90015ef0:	4630      	mov	r0, r6
90015ef2:	e9cd 4700 	strd	r4, r7, [sp]
90015ef6:	f7ff ffb9 	bl	90015e6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015efa:	4606      	mov	r6, r0
90015efc:	4648      	mov	r0, r9
90015efe:	eb05 0108 	add.w	r1, r5, r8
90015f02:	f7ff ff95 	bl	90015e30 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015f06:	ab05      	add	r3, sp, #20
90015f08:	464a      	mov	r2, r9
90015f0a:	e9cd 4300 	strd	r4, r3, [sp]
90015f0e:	4603      	mov	r3, r0
90015f10:	4650      	mov	r0, sl
90015f12:	f7ff ffab 	bl	90015e6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015f16:	6839      	ldr	r1, [r7, #0]
90015f18:	9a05      	ldr	r2, [sp, #20]
90015f1a:	9b03      	ldr	r3, [sp, #12]
90015f1c:	4411      	add	r1, r2
90015f1e:	fbb1 f2f4 	udiv	r2, r1, r4
90015f22:	18d3      	adds	r3, r2, r3
90015f24:	fb04 1412 	mls	r4, r4, r2, r1
90015f28:	441e      	add	r6, r3
90015f2a:	603c      	str	r4, [r7, #0]
90015f2c:	4430      	add	r0, r6
90015f2e:	e7ae      	b.n	90015e8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90015f30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90015f30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015f34:	b085      	sub	sp, #20
90015f36:	f1b0 0900 	subs.w	r9, r0, #0
90015f3a:	461d      	mov	r5, r3
90015f3c:	4617      	mov	r7, r2
90015f3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90015f40:	bfbb      	ittet	lt
90015f42:	f1c9 0900 	rsblt	r9, r9, #0
90015f46:	f04f 36ff 	movlt.w	r6, #4294967295
90015f4a:	2601      	movge	r6, #1
90015f4c:	6823      	ldrlt	r3, [r4, #0]
90015f4e:	bfbc      	itt	lt
90015f50:	425b      	neglt	r3, r3
90015f52:	6023      	strlt	r3, [r4, #0]
90015f54:	2a00      	cmp	r2, #0
90015f56:	da04      	bge.n	90015f62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90015f58:	6823      	ldr	r3, [r4, #0]
90015f5a:	4257      	negs	r7, r2
90015f5c:	4276      	negs	r6, r6
90015f5e:	425b      	negs	r3, r3
90015f60:	6023      	str	r3, [r4, #0]
90015f62:	2d00      	cmp	r5, #0
90015f64:	4638      	mov	r0, r7
90015f66:	bfba      	itte	lt
90015f68:	426d      	neglt	r5, r5
90015f6a:	f04f 38ff 	movlt.w	r8, #4294967295
90015f6e:	f04f 0801 	movge.w	r8, #1
90015f72:	f7ff ff5d 	bl	90015e30 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015f76:	ab03      	add	r3, sp, #12
90015f78:	463a      	mov	r2, r7
90015f7a:	e9cd 5300 	strd	r5, r3, [sp]
90015f7e:	4603      	mov	r3, r0
90015f80:	4648      	mov	r0, r9
90015f82:	f7ff ff73 	bl	90015e6c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015f86:	6823      	ldr	r3, [r4, #0]
90015f88:	9a03      	ldr	r2, [sp, #12]
90015f8a:	4546      	cmp	r6, r8
90015f8c:	441a      	add	r2, r3
90015f8e:	fb92 f3f5 	sdiv	r3, r2, r5
90015f92:	4418      	add	r0, r3
90015f94:	fb05 2313 	mls	r3, r5, r3, r2
90015f98:	bf18      	it	ne
90015f9a:	4240      	negne	r0, r0
90015f9c:	1c72      	adds	r2, r6, #1
90015f9e:	6023      	str	r3, [r4, #0]
90015fa0:	d105      	bne.n	90015fae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90015fa2:	2b00      	cmp	r3, #0
90015fa4:	f1c3 0200 	rsb	r2, r3, #0
90015fa8:	db0b      	blt.n	90015fc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90015faa:	6022      	str	r2, [r4, #0]
90015fac:	e006      	b.n	90015fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015fae:	2e01      	cmp	r6, #1
90015fb0:	d104      	bne.n	90015fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015fb2:	2b00      	cmp	r3, #0
90015fb4:	da02      	bge.n	90015fbc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015fb6:	442b      	add	r3, r5
90015fb8:	3801      	subs	r0, #1
90015fba:	6023      	str	r3, [r4, #0]
90015fbc:	b005      	add	sp, #20
90015fbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015fc2:	3801      	subs	r0, #1
90015fc4:	1b52      	subs	r2, r2, r5
90015fc6:	e7f0      	b.n	90015faa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90015fc8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90015fc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90015fcc:	4c1c      	ldr	r4, [pc, #112]	; (90016040 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90015fce:	4605      	mov	r5, r0
90015fd0:	6807      	ldr	r7, [r0, #0]
90015fd2:	69a3      	ldr	r3, [r4, #24]
90015fd4:	b92b      	cbnz	r3, 90015fe2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90015fd6:	6840      	ldr	r0, [r0, #4]
90015fd8:	e9c5 7000 	strd	r7, r0, [r5]
90015fdc:	b004      	add	sp, #16
90015fde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015fe2:	f04f 0802 	mov.w	r8, #2
90015fe6:	68a2      	ldr	r2, [r4, #8]
90015fe8:	ae04      	add	r6, sp, #16
90015fea:	6820      	ldr	r0, [r4, #0]
90015fec:	fb93 f1f8 	sdiv	r1, r3, r8
90015ff0:	440a      	add	r2, r1
90015ff2:	69e1      	ldr	r1, [r4, #28]
90015ff4:	f846 2d04 	str.w	r2, [r6, #-4]!
90015ff8:	463a      	mov	r2, r7
90015ffa:	9600      	str	r6, [sp, #0]
90015ffc:	f7ff ff98 	bl	90015f30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016000:	69a3      	ldr	r3, [r4, #24]
90016002:	4607      	mov	r7, r0
90016004:	686a      	ldr	r2, [r5, #4]
90016006:	6a21      	ldr	r1, [r4, #32]
90016008:	9600      	str	r6, [sp, #0]
9001600a:	6860      	ldr	r0, [r4, #4]
9001600c:	f7ff ff90 	bl	90015f30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016010:	69a3      	ldr	r3, [r4, #24]
90016012:	6962      	ldr	r2, [r4, #20]
90016014:	4407      	add	r7, r0
90016016:	6a61      	ldr	r1, [r4, #36]	; 0x24
90016018:	9600      	str	r6, [sp, #0]
9001601a:	68e0      	ldr	r0, [r4, #12]
9001601c:	fb93 f8f8 	sdiv	r8, r3, r8
90016020:	4442      	add	r2, r8
90016022:	9203      	str	r2, [sp, #12]
90016024:	682a      	ldr	r2, [r5, #0]
90016026:	f7ff ff83 	bl	90015f30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001602a:	4680      	mov	r8, r0
9001602c:	9600      	str	r6, [sp, #0]
9001602e:	69a3      	ldr	r3, [r4, #24]
90016030:	686a      	ldr	r2, [r5, #4]
90016032:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90016034:	6920      	ldr	r0, [r4, #16]
90016036:	f7ff ff7b 	bl	90015f30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001603a:	4440      	add	r0, r8
9001603c:	e7cc      	b.n	90015fd8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
9001603e:	bf00      	nop
90016040:	24039718 	.word	0x24039718

90016044 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90016044:	4b07      	ldr	r3, [pc, #28]	; (90016064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90016046:	781b      	ldrb	r3, [r3, #0]
90016048:	2b01      	cmp	r3, #1
9001604a:	d109      	bne.n	90016060 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
9001604c:	f9b1 3000 	ldrsh.w	r3, [r1]
90016050:	f9b0 2000 	ldrsh.w	r2, [r0]
90016054:	8003      	strh	r3, [r0, #0]
90016056:	4b04      	ldr	r3, [pc, #16]	; (90016068 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90016058:	881b      	ldrh	r3, [r3, #0]
9001605a:	3b01      	subs	r3, #1
9001605c:	1a9b      	subs	r3, r3, r2
9001605e:	800b      	strh	r3, [r1, #0]
90016060:	4770      	bx	lr
90016062:	bf00      	nop
90016064:	240396fc 	.word	0x240396fc
90016068:	240396f8 	.word	0x240396f8

9001606c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
9001606c:	4b07      	ldr	r3, [pc, #28]	; (9001608c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001606e:	b510      	push	{r4, lr}
90016070:	781b      	ldrb	r3, [r3, #0]
90016072:	2b01      	cmp	r3, #1
90016074:	d108      	bne.n	90016088 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90016076:	4b06      	ldr	r3, [pc, #24]	; (90016090 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90016078:	880c      	ldrh	r4, [r1, #0]
9001607a:	881b      	ldrh	r3, [r3, #0]
9001607c:	f9b0 2000 	ldrsh.w	r2, [r0]
90016080:	3b01      	subs	r3, #1
90016082:	1b1b      	subs	r3, r3, r4
90016084:	8003      	strh	r3, [r0, #0]
90016086:	800a      	strh	r2, [r1, #0]
90016088:	bd10      	pop	{r4, pc}
9001608a:	bf00      	nop
9001608c:	240396fc 	.word	0x240396fc
90016090:	240396f8 	.word	0x240396f8

90016094 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016094:	4b0a      	ldr	r3, [pc, #40]	; (900160c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016096:	b510      	push	{r4, lr}
90016098:	781b      	ldrb	r3, [r3, #0]
9001609a:	2b01      	cmp	r3, #1
9001609c:	d10e      	bne.n	900160bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001609e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900160a2:	8843      	ldrh	r3, [r0, #2]
900160a4:	f9b0 4000 	ldrsh.w	r4, [r0]
900160a8:	18ca      	adds	r2, r1, r3
900160aa:	4b06      	ldr	r3, [pc, #24]	; (900160c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
900160ac:	8044      	strh	r4, [r0, #2]
900160ae:	881b      	ldrh	r3, [r3, #0]
900160b0:	1a9b      	subs	r3, r3, r2
900160b2:	8003      	strh	r3, [r0, #0]
900160b4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900160b8:	8081      	strh	r1, [r0, #4]
900160ba:	80c3      	strh	r3, [r0, #6]
900160bc:	bd10      	pop	{r4, pc}
900160be:	bf00      	nop
900160c0:	240396fc 	.word	0x240396fc
900160c4:	240396f8 	.word	0x240396f8

900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
900160c8:	4b08      	ldr	r3, [pc, #32]	; (900160ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
900160ca:	781b      	ldrb	r3, [r3, #0]
900160cc:	2b01      	cmp	r3, #1
900160ce:	d10c      	bne.n	900160ea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
900160d0:	8803      	ldrh	r3, [r0, #0]
900160d2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
900160d6:	8842      	ldrh	r2, [r0, #2]
900160d8:	8002      	strh	r2, [r0, #0]
900160da:	185a      	adds	r2, r3, r1
900160dc:	4b04      	ldr	r3, [pc, #16]	; (900160f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
900160de:	881b      	ldrh	r3, [r3, #0]
900160e0:	1a9b      	subs	r3, r3, r2
900160e2:	8043      	strh	r3, [r0, #2]
900160e4:	88c3      	ldrh	r3, [r0, #6]
900160e6:	80c1      	strh	r1, [r0, #6]
900160e8:	8083      	strh	r3, [r0, #4]
900160ea:	4770      	bx	lr
900160ec:	240396fc 	.word	0x240396fc
900160f0:	240396f8 	.word	0x240396f8

900160f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
900160f4:	4b07      	ldr	r3, [pc, #28]	; (90016114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
900160f6:	b510      	push	{r4, lr}
900160f8:	781b      	ldrb	r3, [r3, #0]
900160fa:	2b01      	cmp	r3, #1
900160fc:	d108      	bne.n	90016110 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
900160fe:	f9b1 3000 	ldrsh.w	r3, [r1]
90016102:	f9b0 4000 	ldrsh.w	r4, [r0]
90016106:	8003      	strh	r3, [r0, #0]
90016108:	8893      	ldrh	r3, [r2, #4]
9001610a:	3b01      	subs	r3, #1
9001610c:	1b1b      	subs	r3, r3, r4
9001610e:	800b      	strh	r3, [r1, #0]
90016110:	bd10      	pop	{r4, pc}
90016112:	bf00      	nop
90016114:	240396fc 	.word	0x240396fc

90016118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90016118:	4b0b      	ldr	r3, [pc, #44]	; (90016148 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001611a:	781b      	ldrb	r3, [r3, #0]
9001611c:	2b01      	cmp	r3, #1
9001611e:	d111      	bne.n	90016144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90016120:	680b      	ldr	r3, [r1, #0]
90016122:	ed90 7a00 	vldr	s14, [r0]
90016126:	6003      	str	r3, [r0, #0]
90016128:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9001612c:	eddf 6a07 	vldr	s13, [pc, #28]	; 9001614c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90016130:	ee07 3a90 	vmov	s15, r3
90016134:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016138:	ee77 7ae6 	vsub.f32	s15, s15, s13
9001613c:	ee77 7ac7 	vsub.f32	s15, s15, s14
90016140:	edc1 7a00 	vstr	s15, [r1]
90016144:	4770      	bx	lr
90016146:	bf00      	nop
90016148:	240396fc 	.word	0x240396fc
9001614c:	38d1b717 	.word	0x38d1b717

90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90016150:	4b0a      	ldr	r3, [pc, #40]	; (9001617c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90016152:	460a      	mov	r2, r1
90016154:	b510      	push	{r4, lr}
90016156:	781b      	ldrb	r3, [r3, #0]
90016158:	2b01      	cmp	r3, #1
9001615a:	d10d      	bne.n	90016178 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
9001615c:	8881      	ldrh	r1, [r0, #4]
9001615e:	8803      	ldrh	r3, [r0, #0]
90016160:	440b      	add	r3, r1
90016162:	4601      	mov	r1, r0
90016164:	3b01      	subs	r3, #1
90016166:	f821 3b02 	strh.w	r3, [r1], #2
9001616a:	f7ff ffc3 	bl	900160f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001616e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016172:	88c2      	ldrh	r2, [r0, #6]
90016174:	80c3      	strh	r3, [r0, #6]
90016176:	8082      	strh	r2, [r0, #4]
90016178:	bd10      	pop	{r4, pc}
9001617a:	bf00      	nop
9001617c:	240396fc 	.word	0x240396fc

90016180 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90016180:	4770      	bx	lr
	...

90016184 <_ZN8touchgfx11Application13requestRedrawEv>:
90016184:	4b06      	ldr	r3, [pc, #24]	; (900161a0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90016186:	2100      	movs	r1, #0
90016188:	f9b3 2000 	ldrsh.w	r2, [r3]
9001618c:	4b05      	ldr	r3, [pc, #20]	; (900161a4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
9001618e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90016192:	f9b3 3000 	ldrsh.w	r3, [r3]
90016196:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
9001619a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
9001619e:	4770      	bx	lr
900161a0:	240396f8 	.word	0x240396f8
900161a4:	240396fa 	.word	0x240396fa

900161a8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900161a8:	4b03      	ldr	r3, [pc, #12]	; (900161b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900161aa:	6818      	ldr	r0, [r3, #0]
900161ac:	b110      	cbz	r0, 900161b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900161ae:	6803      	ldr	r3, [r0, #0]
900161b0:	699b      	ldr	r3, [r3, #24]
900161b2:	4718      	bx	r3
900161b4:	4770      	bx	lr
900161b6:	bf00      	nop
900161b8:	24039748 	.word	0x24039748

900161bc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900161bc:	4770      	bx	lr
	...

900161c0 <_ZN8touchgfx11Application4drawEv>:
900161c0:	4b09      	ldr	r3, [pc, #36]	; (900161e8 <_ZN8touchgfx11Application4drawEv+0x28>)
900161c2:	b507      	push	{r0, r1, r2, lr}
900161c4:	f9b3 2000 	ldrsh.w	r2, [r3]
900161c8:	2100      	movs	r1, #0
900161ca:	4b08      	ldr	r3, [pc, #32]	; (900161ec <_ZN8touchgfx11Application4drawEv+0x2c>)
900161cc:	9100      	str	r1, [sp, #0]
900161ce:	4669      	mov	r1, sp
900161d0:	f9b3 3000 	ldrsh.w	r3, [r3]
900161d4:	f8ad 2004 	strh.w	r2, [sp, #4]
900161d8:	f8ad 3006 	strh.w	r3, [sp, #6]
900161dc:	6803      	ldr	r3, [r0, #0]
900161de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900161e0:	4798      	blx	r3
900161e2:	b003      	add	sp, #12
900161e4:	f85d fb04 	ldr.w	pc, [sp], #4
900161e8:	240396f8 	.word	0x240396f8
900161ec:	240396fa 	.word	0x240396fa

900161f0 <_ZN8touchgfx11Application10invalidateEv>:
900161f0:	4b09      	ldr	r3, [pc, #36]	; (90016218 <_ZN8touchgfx11Application10invalidateEv+0x28>)
900161f2:	b082      	sub	sp, #8
900161f4:	2100      	movs	r1, #0
900161f6:	f9b3 2000 	ldrsh.w	r2, [r3]
900161fa:	4b08      	ldr	r3, [pc, #32]	; (9001621c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
900161fc:	f8ad 2004 	strh.w	r2, [sp, #4]
90016200:	aa02      	add	r2, sp, #8
90016202:	f9b3 3000 	ldrsh.w	r3, [r3]
90016206:	9100      	str	r1, [sp, #0]
90016208:	f8ad 3006 	strh.w	r3, [sp, #6]
9001620c:	6803      	ldr	r3, [r0, #0]
9001620e:	e912 0006 	ldmdb	r2, {r1, r2}
90016212:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016214:	b002      	add	sp, #8
90016216:	4718      	bx	r3
90016218:	240396f8 	.word	0x240396f8
9001621c:	240396fa 	.word	0x240396fa

90016220 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016220:	4b03      	ldr	r3, [pc, #12]	; (90016230 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016222:	6818      	ldr	r0, [r3, #0]
90016224:	b110      	cbz	r0, 9001622c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016226:	6803      	ldr	r3, [r0, #0]
90016228:	69db      	ldr	r3, [r3, #28]
9001622a:	4718      	bx	r3
9001622c:	4770      	bx	lr
9001622e:	bf00      	nop
90016230:	24039748 	.word	0x24039748

90016234 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90016234:	4b03      	ldr	r3, [pc, #12]	; (90016244 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90016236:	6818      	ldr	r0, [r3, #0]
90016238:	b110      	cbz	r0, 90016240 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
9001623a:	6803      	ldr	r3, [r0, #0]
9001623c:	6a1b      	ldr	r3, [r3, #32]
9001623e:	4718      	bx	r3
90016240:	4770      	bx	lr
90016242:	bf00      	nop
90016244:	24039748 	.word	0x24039748

90016248 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90016248:	2300      	movs	r3, #0
9001624a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
9001624e:	4770      	bx	lr

90016250 <_ZN8touchgfx11Application14handleKeyEventEh>:
90016250:	4b03      	ldr	r3, [pc, #12]	; (90016260 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90016252:	6818      	ldr	r0, [r3, #0]
90016254:	b110      	cbz	r0, 9001625c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90016256:	6803      	ldr	r3, [r0, #0]
90016258:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001625a:	4718      	bx	r3
9001625c:	4770      	bx	lr
9001625e:	bf00      	nop
90016260:	24039748 	.word	0x24039748

90016264 <_ZN8touchgfx11ApplicationD1Ev>:
90016264:	4770      	bx	lr

90016266 <_ZN8touchgfx11ApplicationD0Ev>:
90016266:	b510      	push	{r4, lr}
90016268:	4604      	mov	r4, r0
9001626a:	f44f 719e 	mov.w	r1, #316	; 0x13c
9001626e:	f011 fa1f 	bl	900276b0 <_ZdlPvj>
90016272:	4620      	mov	r0, r4
90016274:	bd10      	pop	{r4, pc}

90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016276:	b510      	push	{r4, lr}
90016278:	f9b1 4000 	ldrsh.w	r4, [r1]
9001627c:	888a      	ldrh	r2, [r1, #4]
9001627e:	f9b0 3000 	ldrsh.w	r3, [r0]
90016282:	4422      	add	r2, r4
90016284:	b212      	sxth	r2, r2
90016286:	4293      	cmp	r3, r2
90016288:	da15      	bge.n	900162b6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001628a:	8882      	ldrh	r2, [r0, #4]
9001628c:	4413      	add	r3, r2
9001628e:	b21b      	sxth	r3, r3
90016290:	429c      	cmp	r4, r3
90016292:	da10      	bge.n	900162b6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016294:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016298:	88c9      	ldrh	r1, [r1, #6]
9001629a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001629e:	4419      	add	r1, r3
900162a0:	b209      	sxth	r1, r1
900162a2:	428a      	cmp	r2, r1
900162a4:	da07      	bge.n	900162b6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900162a6:	88c0      	ldrh	r0, [r0, #6]
900162a8:	4410      	add	r0, r2
900162aa:	b200      	sxth	r0, r0
900162ac:	4283      	cmp	r3, r0
900162ae:	bfac      	ite	ge
900162b0:	2000      	movge	r0, #0
900162b2:	2001      	movlt	r0, #1
900162b4:	bd10      	pop	{r4, pc}
900162b6:	2000      	movs	r0, #0
900162b8:	e7fc      	b.n	900162b4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

900162ba <_ZN8touchgfx4Rect10restrictToEss>:
900162ba:	f9b0 3000 	ldrsh.w	r3, [r0]
900162be:	2b00      	cmp	r3, #0
900162c0:	b510      	push	{r4, lr}
900162c2:	da04      	bge.n	900162ce <_ZN8touchgfx4Rect10restrictToEss+0x14>
900162c4:	8884      	ldrh	r4, [r0, #4]
900162c6:	4423      	add	r3, r4
900162c8:	8083      	strh	r3, [r0, #4]
900162ca:	2300      	movs	r3, #0
900162cc:	8003      	strh	r3, [r0, #0]
900162ce:	f9b0 4000 	ldrsh.w	r4, [r0]
900162d2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900162d6:	1b09      	subs	r1, r1, r4
900162d8:	428b      	cmp	r3, r1
900162da:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900162de:	bfc8      	it	gt
900162e0:	8081      	strhgt	r1, [r0, #4]
900162e2:	2b00      	cmp	r3, #0
900162e4:	da04      	bge.n	900162f0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
900162e6:	88c1      	ldrh	r1, [r0, #6]
900162e8:	440b      	add	r3, r1
900162ea:	80c3      	strh	r3, [r0, #6]
900162ec:	2300      	movs	r3, #0
900162ee:	8043      	strh	r3, [r0, #2]
900162f0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900162f4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
900162f8:	1a52      	subs	r2, r2, r1
900162fa:	4293      	cmp	r3, r2
900162fc:	bfc8      	it	gt
900162fe:	80c2      	strhgt	r2, [r0, #6]
90016300:	bd10      	pop	{r4, pc}
	...

90016304 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016304:	4b10      	ldr	r3, [pc, #64]	; (90016348 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016306:	b510      	push	{r4, lr}
90016308:	460c      	mov	r4, r1
9001630a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001630e:	4b0f      	ldr	r3, [pc, #60]	; (9001634c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016310:	4620      	mov	r0, r4
90016312:	f9b3 1000 	ldrsh.w	r1, [r3]
90016316:	f7ff ffd0 	bl	900162ba <_ZN8touchgfx4Rect10restrictToEss>
9001631a:	4b0d      	ldr	r3, [pc, #52]	; (90016350 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001631c:	6818      	ldr	r0, [r3, #0]
9001631e:	b190      	cbz	r0, 90016346 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016320:	6803      	ldr	r3, [r0, #0]
90016322:	4621      	mov	r1, r4
90016324:	689b      	ldr	r3, [r3, #8]
90016326:	4798      	blx	r3
90016328:	4b0a      	ldr	r3, [pc, #40]	; (90016354 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001632a:	6818      	ldr	r0, [r3, #0]
9001632c:	b118      	cbz	r0, 90016336 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001632e:	6803      	ldr	r3, [r0, #0]
90016330:	4621      	mov	r1, r4
90016332:	689b      	ldr	r3, [r3, #8]
90016334:	4798      	blx	r3
90016336:	4b08      	ldr	r3, [pc, #32]	; (90016358 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90016338:	4621      	mov	r1, r4
9001633a:	6818      	ldr	r0, [r3, #0]
9001633c:	6803      	ldr	r3, [r0, #0]
9001633e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016342:	69db      	ldr	r3, [r3, #28]
90016344:	4718      	bx	r3
90016346:	bd10      	pop	{r4, pc}
90016348:	240396fa 	.word	0x240396fa
9001634c:	240396f8 	.word	0x240396f8
90016350:	24039748 	.word	0x24039748
90016354:	24039744 	.word	0x24039744
90016358:	24039704 	.word	0x24039704

9001635c <_ZNK8touchgfx4Rect8includesERKS0_>:
9001635c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001635e:	4606      	mov	r6, r0
90016360:	4608      	mov	r0, r1
90016362:	460f      	mov	r7, r1
90016364:	f7fa fe7f 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
90016368:	b9e8      	cbnz	r0, 900163a6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001636a:	f9b7 5000 	ldrsh.w	r5, [r7]
9001636e:	f9b6 4000 	ldrsh.w	r4, [r6]
90016372:	42a5      	cmp	r5, r4
90016374:	db17      	blt.n	900163a6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016376:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001637a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
9001637e:	429a      	cmp	r2, r3
90016380:	db11      	blt.n	900163a6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016382:	88b9      	ldrh	r1, [r7, #4]
90016384:	440d      	add	r5, r1
90016386:	88b1      	ldrh	r1, [r6, #4]
90016388:	440c      	add	r4, r1
9001638a:	b22d      	sxth	r5, r5
9001638c:	b224      	sxth	r4, r4
9001638e:	42a5      	cmp	r5, r4
90016390:	dc09      	bgt.n	900163a6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016392:	88f8      	ldrh	r0, [r7, #6]
90016394:	4410      	add	r0, r2
90016396:	88f2      	ldrh	r2, [r6, #6]
90016398:	4413      	add	r3, r2
9001639a:	b200      	sxth	r0, r0
9001639c:	b21b      	sxth	r3, r3
9001639e:	4298      	cmp	r0, r3
900163a0:	bfcc      	ite	gt
900163a2:	2000      	movgt	r0, #0
900163a4:	2001      	movle	r0, #1
900163a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900163a8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
900163a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900163aa:	4604      	mov	r4, r0
900163ac:	4608      	mov	r0, r1
900163ae:	460d      	mov	r5, r1
900163b0:	f7fa fe59 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900163b4:	b978      	cbnz	r0, 900163d6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
900163b6:	4620      	mov	r0, r4
900163b8:	f7fa fe55 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900163bc:	f9b5 6000 	ldrsh.w	r6, [r5]
900163c0:	b150      	cbz	r0, 900163d8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
900163c2:	8026      	strh	r6, [r4, #0]
900163c4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900163c8:	8063      	strh	r3, [r4, #2]
900163ca:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900163ce:	80a3      	strh	r3, [r4, #4]
900163d0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900163d4:	80e3      	strh	r3, [r4, #6]
900163d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900163d8:	f9b4 1000 	ldrsh.w	r1, [r4]
900163dc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900163e0:	42b1      	cmp	r1, r6
900163e2:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
900163e6:	f8b5 c004 	ldrh.w	ip, [r5, #4]
900163ea:	460f      	mov	r7, r1
900163ec:	88ed      	ldrh	r5, [r5, #6]
900163ee:	bfa8      	it	ge
900163f0:	4637      	movge	r7, r6
900163f2:	4293      	cmp	r3, r2
900163f4:	4618      	mov	r0, r3
900163f6:	4466      	add	r6, ip
900163f8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900163fc:	bfa8      	it	ge
900163fe:	4610      	movge	r0, r2
90016400:	442a      	add	r2, r5
90016402:	88e5      	ldrh	r5, [r4, #6]
90016404:	4461      	add	r1, ip
90016406:	b236      	sxth	r6, r6
90016408:	8027      	strh	r7, [r4, #0]
9001640a:	442b      	add	r3, r5
9001640c:	b209      	sxth	r1, r1
9001640e:	b212      	sxth	r2, r2
90016410:	8060      	strh	r0, [r4, #2]
90016412:	b21b      	sxth	r3, r3
90016414:	428e      	cmp	r6, r1
90016416:	bfac      	ite	ge
90016418:	ebc7 0106 	rsbge	r1, r7, r6
9001641c:	ebc7 0101 	rsblt	r1, r7, r1
90016420:	429a      	cmp	r2, r3
90016422:	bfac      	ite	ge
90016424:	ebc0 0202 	rsbge	r2, r0, r2
90016428:	ebc0 0203 	rsblt	r2, r0, r3
9001642c:	80a1      	strh	r1, [r4, #4]
9001642e:	80e2      	strh	r2, [r4, #6]
90016430:	e7d1      	b.n	900163d6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90016434 <_ZN8touchgfx11Application11getInstanceEv>:
90016434:	4b01      	ldr	r3, [pc, #4]	; (9001643c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90016436:	6818      	ldr	r0, [r3, #0]
90016438:	4770      	bx	lr
9001643a:	bf00      	nop
9001643c:	24039758 	.word	0x24039758

90016440 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
90016440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016442:	4b10      	ldr	r3, [pc, #64]	; (90016484 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
90016444:	4605      	mov	r5, r0
90016446:	781b      	ldrb	r3, [r3, #0]
90016448:	b1d3      	cbz	r3, 90016480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
9001644a:	4b0f      	ldr	r3, [pc, #60]	; (90016488 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
9001644c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
90016450:	4f0e      	ldr	r7, [pc, #56]	; (9001648c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90016452:	881c      	ldrh	r4, [r3, #0]
90016454:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
90016458:	42a3      	cmp	r3, r4
9001645a:	d90e      	bls.n	9001647a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
9001645c:	683b      	ldr	r3, [r7, #0]
9001645e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90016462:	b10a      	cbz	r2, 90016468 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90016464:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90016466:	b900      	cbnz	r0, 9001646a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
90016468:	6898      	ldr	r0, [r3, #8]
9001646a:	6803      	ldr	r3, [r0, #0]
9001646c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
90016470:	3401      	adds	r4, #1
90016472:	69db      	ldr	r3, [r3, #28]
90016474:	4798      	blx	r3
90016476:	b2a4      	uxth	r4, r4
90016478:	e7ec      	b.n	90016454 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
9001647a:	2300      	movs	r3, #0
9001647c:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
90016480:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016482:	bf00      	nop
90016484:	24039702 	.word	0x24039702
90016488:	24000080 	.word	0x24000080
9001648c:	24039704 	.word	0x24039704

90016490 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016490:	2300      	movs	r3, #0
90016492:	b510      	push	{r4, lr}
90016494:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90016498:	4604      	mov	r4, r0
9001649a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001649e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900164a2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900164a6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
900164aa:	429a      	cmp	r2, r3
900164ac:	d90e      	bls.n	900164cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900164ae:	18e2      	adds	r2, r4, r3
900164b0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
900164b4:	b122      	cbz	r2, 900164c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900164b6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900164ba:	6803      	ldr	r3, [r0, #0]
900164bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900164be:	4798      	blx	r3
900164c0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
900164c4:	3301      	adds	r3, #1
900164c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900164ca:	e7ea      	b.n	900164a2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900164cc:	bd10      	pop	{r4, pc}

900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
900164ce:	2300      	movs	r3, #0
900164d0:	f100 0284 	add.w	r2, r0, #132	; 0x84
900164d4:	30a4      	adds	r0, #164	; 0xa4
900164d6:	f820 3c24 	strh.w	r3, [r0, #-36]
900164da:	f802 3b01 	strb.w	r3, [r2], #1
900164de:	4282      	cmp	r2, r0
900164e0:	d1fb      	bne.n	900164da <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
900164e2:	4770      	bx	lr

900164e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
900164e4:	b570      	push	{r4, r5, r6, lr}
900164e6:	4c0b      	ldr	r4, [pc, #44]	; (90016514 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
900164e8:	4605      	mov	r5, r0
900164ea:	460e      	mov	r6, r1
900164ec:	6820      	ldr	r0, [r4, #0]
900164ee:	b110      	cbz	r0, 900164f6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900164f0:	6803      	ldr	r3, [r0, #0]
900164f2:	695b      	ldr	r3, [r3, #20]
900164f4:	4798      	blx	r3
900164f6:	1d28      	adds	r0, r5, #4
900164f8:	f7ff ffe9 	bl	900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900164fc:	6026      	str	r6, [r4, #0]
900164fe:	6833      	ldr	r3, [r6, #0]
90016500:	4630      	mov	r0, r6
90016502:	68db      	ldr	r3, [r3, #12]
90016504:	4798      	blx	r3
90016506:	682b      	ldr	r3, [r5, #0]
90016508:	4628      	mov	r0, r5
9001650a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001650c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016510:	4718      	bx	r3
90016512:	bf00      	nop
90016514:	24039748 	.word	0x24039748

90016518 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016518:	2300      	movs	r3, #0
9001651a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
9001651e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90016522:	461a      	mov	r2, r3
90016524:	b5f0      	push	{r4, r5, r6, r7, lr}
90016526:	461c      	mov	r4, r3
90016528:	461d      	mov	r5, r3
9001652a:	459c      	cmp	ip, r3
9001652c:	dd1a      	ble.n	90016564 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001652e:	18c6      	adds	r6, r0, r3
90016530:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90016534:	b16e      	cbz	r6, 90016552 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90016536:	429a      	cmp	r2, r3
90016538:	d008      	beq.n	9001654c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001653a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001653e:	fa1f fe82 	uxth.w	lr, r2
90016542:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90016546:	1887      	adds	r7, r0, r2
90016548:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
9001654c:	3201      	adds	r2, #1
9001654e:	3301      	adds	r3, #1
90016550:	e7eb      	b.n	9001652a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90016552:	4299      	cmp	r1, r3
90016554:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90016558:	bfa8      	it	ge
9001655a:	3501      	addge	r5, #1
9001655c:	429e      	cmp	r6, r3
9001655e:	bfc8      	it	gt
90016560:	3401      	addgt	r4, #1
90016562:	e7f4      	b.n	9001654e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90016564:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90016568:	1b49      	subs	r1, r1, r5
9001656a:	1b1b      	subs	r3, r3, r4
9001656c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90016570:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90016574:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90016578:	4293      	cmp	r3, r2
9001657a:	dd03      	ble.n	90016584 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
9001657c:	3b01      	subs	r3, #1
9001657e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90016582:	e7f7      	b.n	90016574 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90016584:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90016588 <_ZN8touchgfx11Application15handleTickEventEv>:
90016588:	b570      	push	{r4, r5, r6, lr}
9001658a:	4d16      	ldr	r5, [pc, #88]	; (900165e4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
9001658c:	4604      	mov	r4, r0
9001658e:	6828      	ldr	r0, [r5, #0]
90016590:	b140      	cbz	r0, 900165a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016592:	7a03      	ldrb	r3, [r0, #8]
90016594:	b933      	cbnz	r3, 900165a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016596:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001659a:	6803      	ldr	r3, [r0, #0]
9001659c:	689b      	ldr	r3, [r3, #8]
9001659e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900165a2:	4718      	bx	r3
900165a4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
900165a8:	4e0f      	ldr	r6, [pc, #60]	; (900165e8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900165aa:	b973      	cbnz	r3, 900165ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900165ac:	b168      	cbz	r0, 900165ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900165ae:	7a03      	ldrb	r3, [r0, #8]
900165b0:	b15b      	cbz	r3, 900165ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900165b2:	6830      	ldr	r0, [r6, #0]
900165b4:	b110      	cbz	r0, 900165bc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900165b6:	6803      	ldr	r3, [r0, #0]
900165b8:	691b      	ldr	r3, [r3, #16]
900165ba:	4798      	blx	r3
900165bc:	6828      	ldr	r0, [r5, #0]
900165be:	6803      	ldr	r3, [r0, #0]
900165c0:	68db      	ldr	r3, [r3, #12]
900165c2:	4798      	blx	r3
900165c4:	2301      	movs	r3, #1
900165c6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
900165ca:	3404      	adds	r4, #4
900165cc:	4620      	mov	r0, r4
900165ce:	f7ff ff5f 	bl	90016490 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
900165d2:	4620      	mov	r0, r4
900165d4:	f7ff ffa0 	bl	90016518 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
900165d8:	6830      	ldr	r0, [r6, #0]
900165da:	b110      	cbz	r0, 900165e2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
900165dc:	6803      	ldr	r3, [r0, #0]
900165de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900165e0:	e7dd      	b.n	9001659e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
900165e2:	bd70      	pop	{r4, r5, r6, pc}
900165e4:	2403974c 	.word	0x2403974c
900165e8:	24039748 	.word	0x24039748

900165ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900165ec:	4603      	mov	r3, r0
900165ee:	f100 0140 	add.w	r1, r0, #64	; 0x40
900165f2:	2200      	movs	r2, #0
900165f4:	801a      	strh	r2, [r3, #0]
900165f6:	3308      	adds	r3, #8
900165f8:	f823 2c06 	strh.w	r2, [r3, #-6]
900165fc:	f823 2c04 	strh.w	r2, [r3, #-4]
90016600:	f823 2c02 	strh.w	r2, [r3, #-2]
90016604:	428b      	cmp	r3, r1
90016606:	d1f5      	bne.n	900165f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016608:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
9001660c:	4770      	bx	lr
	...

90016610 <_ZN8touchgfx11ApplicationC1Ev>:
90016610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016612:	4b1d      	ldr	r3, [pc, #116]	; (90016688 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90016614:	4606      	mov	r6, r0
90016616:	4604      	mov	r4, r0
90016618:	2500      	movs	r5, #0
9001661a:	f846 3b04 	str.w	r3, [r6], #4
9001661e:	22a8      	movs	r2, #168	; 0xa8
90016620:	2100      	movs	r1, #0
90016622:	4630      	mov	r0, r6
90016624:	f011 fafa 	bl	90027c1c <memset>
90016628:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
9001662c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90016630:	4f16      	ldr	r7, [pc, #88]	; (9001668c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90016632:	f7ff ffdb 	bl	900165ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016636:	f104 00ee 	add.w	r0, r4, #238	; 0xee
9001663a:	f7ff ffd7 	bl	900165ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001663e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90016642:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90016646:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
9001664a:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
9001664e:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90016652:	490f      	ldr	r1, [pc, #60]	; (90016690 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90016654:	480f      	ldr	r0, [pc, #60]	; (90016694 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90016656:	f010 fbdb 	bl	90026e10 <CRC_Lock>
9001665a:	4b0f      	ldr	r3, [pc, #60]	; (90016698 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
9001665c:	b158      	cbz	r0, 90016676 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001665e:	801d      	strh	r5, [r3, #0]
90016660:	2300      	movs	r3, #0
90016662:	4a0e      	ldr	r2, [pc, #56]	; (9001669c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90016664:	4630      	mov	r0, r6
90016666:	6013      	str	r3, [r2, #0]
90016668:	4a0d      	ldr	r2, [pc, #52]	; (900166a0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001666a:	603b      	str	r3, [r7, #0]
9001666c:	6013      	str	r3, [r2, #0]
9001666e:	f7ff ff2e 	bl	900164ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016672:	4620      	mov	r0, r4
90016674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016676:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001667a:	2002      	movs	r0, #2
9001667c:	801a      	strh	r2, [r3, #0]
9001667e:	6038      	str	r0, [r7, #0]
90016680:	f001 fb48 	bl	90017d14 <_ZN8touchgfx6Screen4drawEv>
90016684:	e7ec      	b.n	90016660 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90016686:	bf00      	nop
90016688:	9002bac0 	.word	0x9002bac0
9001668c:	24039748 	.word	0x24039748
90016690:	b5e8b5cd 	.word	0xb5e8b5cd
90016694:	f407a5c2 	.word	0xf407a5c2
90016698:	24000080 	.word	0x24000080
9001669c:	24039758 	.word	0x24039758
900166a0:	2403974c 	.word	0x2403974c

900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900166a4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
900166a8:	3b01      	subs	r3, #1
900166aa:	b29b      	uxth	r3, r3
900166ac:	428b      	cmp	r3, r1
900166ae:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
900166b2:	b510      	push	{r4, lr}
900166b4:	d908      	bls.n	900166c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900166b6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900166ba:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900166be:	681a      	ldr	r2, [r3, #0]
900166c0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900166c4:	685a      	ldr	r2, [r3, #4]
900166c6:	6062      	str	r2, [r4, #4]
900166c8:	bd10      	pop	{r4, pc}
	...

900166cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
900166cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900166d0:	b08f      	sub	sp, #60	; 0x3c
900166d2:	4b8f      	ldr	r3, [pc, #572]	; (90016910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
900166d4:	4683      	mov	fp, r0
900166d6:	ac0a      	add	r4, sp, #40	; 0x28
900166d8:	e884 0006 	stmia.w	r4, {r1, r2}
900166dc:	f9b3 2000 	ldrsh.w	r2, [r3]
900166e0:	4620      	mov	r0, r4
900166e2:	4b8c      	ldr	r3, [pc, #560]	; (90016914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
900166e4:	f9b3 1000 	ldrsh.w	r1, [r3]
900166e8:	f7ff fde7 	bl	900162ba <_ZN8touchgfx4Rect10restrictToEss>
900166ec:	4620      	mov	r0, r4
900166ee:	f7fa fcba 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900166f2:	2800      	cmp	r0, #0
900166f4:	d16a      	bne.n	900167cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900166f6:	9403      	str	r4, [sp, #12]
900166f8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900166fc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90016700:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90016704:	9301      	str	r3, [sp, #4]
90016706:	35a4      	adds	r5, #164	; 0xa4
90016708:	b15c      	cbz	r4, 90016722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001670a:	4629      	mov	r1, r5
9001670c:	9803      	ldr	r0, [sp, #12]
9001670e:	f7ff fe25 	bl	9001635c <_ZNK8touchgfx4Rect8includesERKS0_>
90016712:	3c01      	subs	r4, #1
90016714:	b118      	cbz	r0, 9001671e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90016716:	b2a1      	uxth	r1, r4
90016718:	9801      	ldr	r0, [sp, #4]
9001671a:	f7ff ffc3 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001671e:	3d08      	subs	r5, #8
90016720:	e7f2      	b.n	90016708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90016722:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
90016726:	f10a 33ff 	add.w	r3, sl, #4294967295
9001672a:	f8cd a010 	str.w	sl, [sp, #16]
9001672e:	9302      	str	r3, [sp, #8]
90016730:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90016734:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
90016738:	9306      	str	r3, [sp, #24]
9001673a:	445c      	add	r4, fp
9001673c:	2500      	movs	r5, #0
9001673e:	4626      	mov	r6, r4
90016740:	f8cd a014 	str.w	sl, [sp, #20]
90016744:	462f      	mov	r7, r5
90016746:	9b05      	ldr	r3, [sp, #20]
90016748:	2b00      	cmp	r3, #0
9001674a:	d073      	beq.n	90016834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
9001674c:	9903      	ldr	r1, [sp, #12]
9001674e:	4630      	mov	r0, r6
90016750:	f7ff fd91 	bl	90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016754:	b350      	cbz	r0, 900167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016756:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001675a:	f9b6 c000 	ldrsh.w	ip, [r6]
9001675e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90016762:	45e6      	cmp	lr, ip
90016764:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016768:	db33      	blt.n	900167d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001676a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9001676e:	88b3      	ldrh	r3, [r6, #4]
90016770:	4472      	add	r2, lr
90016772:	4463      	add	r3, ip
90016774:	b212      	sxth	r2, r2
90016776:	b21b      	sxth	r3, r3
90016778:	429a      	cmp	r2, r3
9001677a:	dc2a      	bgt.n	900167d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001677c:	fa1f f289 	uxth.w	r2, r9
90016780:	88f3      	ldrh	r3, [r6, #6]
90016782:	45c8      	cmp	r8, r9
90016784:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90016788:	4413      	add	r3, r2
9001678a:	fa1f fc88 	uxth.w	ip, r8
9001678e:	b29b      	uxth	r3, r3
90016790:	fa0f fe83 	sxth.w	lr, r3
90016794:	db0f      	blt.n	900167b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016796:	eba3 030c 	sub.w	r3, r3, ip
9001679a:	1ac9      	subs	r1, r1, r3
9001679c:	b209      	sxth	r1, r1
9001679e:	2900      	cmp	r1, #0
900167a0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900167a4:	dd12      	ble.n	900167cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900167a6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
900167aa:	4605      	mov	r5, r0
900167ac:	9b05      	ldr	r3, [sp, #20]
900167ae:	3e08      	subs	r6, #8
900167b0:	3b01      	subs	r3, #1
900167b2:	9305      	str	r3, [sp, #20]
900167b4:	e7c7      	b.n	90016746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900167b6:	4461      	add	r1, ip
900167b8:	b209      	sxth	r1, r1
900167ba:	4571      	cmp	r1, lr
900167bc:	dc38      	bgt.n	90016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900167be:	eba2 020c 	sub.w	r2, r2, ip
900167c2:	b212      	sxth	r2, r2
900167c4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
900167c8:	2a00      	cmp	r2, #0
900167ca:	dcee      	bgt.n	900167aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900167cc:	b00f      	add	sp, #60	; 0x3c
900167ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167d2:	45c8      	cmp	r8, r9
900167d4:	db2c      	blt.n	90016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900167d6:	88f3      	ldrh	r3, [r6, #6]
900167d8:	4499      	add	r9, r3
900167da:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
900167de:	4498      	add	r8, r3
900167e0:	fa0f f989 	sxth.w	r9, r9
900167e4:	fa0f f888 	sxth.w	r8, r8
900167e8:	45c1      	cmp	r9, r8
900167ea:	db21      	blt.n	90016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900167ec:	fa1f f28c 	uxth.w	r2, ip
900167f0:	88b3      	ldrh	r3, [r6, #4]
900167f2:	45e6      	cmp	lr, ip
900167f4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
900167f8:	4413      	add	r3, r2
900167fa:	fa1f f88e 	uxth.w	r8, lr
900167fe:	b29b      	uxth	r3, r3
90016800:	fa0f f983 	sxth.w	r9, r3
90016804:	db0a      	blt.n	9001681c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90016806:	eba3 0308 	sub.w	r3, r3, r8
9001680a:	1ac9      	subs	r1, r1, r3
9001680c:	b209      	sxth	r1, r1
9001680e:	2900      	cmp	r1, #0
90016810:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90016814:	ddda      	ble.n	900167cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016816:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001681a:	e7c6      	b.n	900167aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001681c:	4441      	add	r1, r8
9001681e:	b209      	sxth	r1, r1
90016820:	4549      	cmp	r1, r9
90016822:	dc05      	bgt.n	90016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016824:	eba2 0208 	sub.w	r2, r2, r8
90016828:	b212      	sxth	r2, r2
9001682a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001682e:	e7cb      	b.n	900167c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90016830:	4607      	mov	r7, r0
90016832:	e7bb      	b.n	900167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016834:	2d00      	cmp	r5, #0
90016836:	d181      	bne.n	9001673c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90016838:	2f00      	cmp	r7, #0
9001683a:	f000 81dd 	beq.w	90016bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001683e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90016842:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
90016846:	b2b3      	uxth	r3, r6
90016848:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
9001684c:	9305      	str	r3, [sp, #20]
9001684e:	9a05      	ldr	r2, [sp, #20]
90016850:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90016854:	4413      	add	r3, r2
90016856:	b2ba      	uxth	r2, r7
90016858:	4492      	add	sl, r2
9001685a:	b29b      	uxth	r3, r3
9001685c:	fa1f fa8a 	uxth.w	sl, sl
90016860:	fa0f f883 	sxth.w	r8, r3
90016864:	fa0f f98a 	sxth.w	r9, sl
90016868:	e9cd 2307 	strd	r2, r3, [sp, #28]
9001686c:	9b04      	ldr	r3, [sp, #16]
9001686e:	2b00      	cmp	r3, #0
90016870:	d052      	beq.n	90016918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90016872:	9903      	ldr	r1, [sp, #12]
90016874:	4620      	mov	r0, r4
90016876:	f7ff fcfe 	bl	90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001687a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
9001687e:	b1c0      	cbz	r0, 900168b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016880:	f9b4 e000 	ldrsh.w	lr, [r4]
90016884:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90016888:	4576      	cmp	r6, lr
9001688a:	dc22      	bgt.n	900168d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001688c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016890:	44f4      	add	ip, lr
90016892:	fa0f fc8c 	sxth.w	ip, ip
90016896:	45e0      	cmp	r8, ip
90016898:	db1b      	blt.n	900168d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001689a:	428f      	cmp	r7, r1
9001689c:	fa1f fc81 	uxth.w	ip, r1
900168a0:	88e1      	ldrh	r1, [r4, #6]
900168a2:	dc0d      	bgt.n	900168c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900168a4:	ebaa 0c0c 	sub.w	ip, sl, ip
900168a8:	f8a4 9002 	strh.w	r9, [r4, #2]
900168ac:	eba1 010c 	sub.w	r1, r1, ip
900168b0:	80e1      	strh	r1, [r4, #6]
900168b2:	4628      	mov	r0, r5
900168b4:	9904      	ldr	r1, [sp, #16]
900168b6:	3c08      	subs	r4, #8
900168b8:	4605      	mov	r5, r0
900168ba:	3901      	subs	r1, #1
900168bc:	9104      	str	r1, [sp, #16]
900168be:	e7d3      	b.n	90016868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
900168c0:	4461      	add	r1, ip
900168c2:	b209      	sxth	r1, r1
900168c4:	4549      	cmp	r1, r9
900168c6:	dcf5      	bgt.n	900168b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900168c8:	eba2 0c0c 	sub.w	ip, r2, ip
900168cc:	f8a4 c006 	strh.w	ip, [r4, #6]
900168d0:	e7ef      	b.n	900168b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900168d2:	428f      	cmp	r7, r1
900168d4:	dcee      	bgt.n	900168b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900168d6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900168da:	4461      	add	r1, ip
900168dc:	b209      	sxth	r1, r1
900168de:	4589      	cmp	r9, r1
900168e0:	dbe8      	blt.n	900168b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900168e2:	4576      	cmp	r6, lr
900168e4:	fa1f fc8e 	uxth.w	ip, lr
900168e8:	88a1      	ldrh	r1, [r4, #4]
900168ea:	dc07      	bgt.n	900168fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900168ec:	eba3 0c0c 	sub.w	ip, r3, ip
900168f0:	f8a4 8000 	strh.w	r8, [r4]
900168f4:	eba1 010c 	sub.w	r1, r1, ip
900168f8:	80a1      	strh	r1, [r4, #4]
900168fa:	e7da      	b.n	900168b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900168fc:	4461      	add	r1, ip
900168fe:	b209      	sxth	r1, r1
90016900:	4588      	cmp	r8, r1
90016902:	dbd7      	blt.n	900168b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016904:	9905      	ldr	r1, [sp, #20]
90016906:	eba1 0c0c 	sub.w	ip, r1, ip
9001690a:	f8a4 c004 	strh.w	ip, [r4, #4]
9001690e:	e7d0      	b.n	900168b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016910:	240396fa 	.word	0x240396fa
90016914:	240396f8 	.word	0x240396f8
90016918:	2d00      	cmp	r5, #0
9001691a:	f000 816d 	beq.w	90016bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001691e:	9b06      	ldr	r3, [sp, #24]
90016920:	445b      	add	r3, fp
90016922:	461c      	mov	r4, r3
90016924:	9b02      	ldr	r3, [sp, #8]
90016926:	3301      	adds	r3, #1
90016928:	f000 8166 	beq.w	90016bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001692c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90016930:	9803      	ldr	r0, [sp, #12]
90016932:	4629      	mov	r1, r5
90016934:	f7ff fd12 	bl	9001635c <_ZNK8touchgfx4Rect8includesERKS0_>
90016938:	b120      	cbz	r0, 90016944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001693a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001693e:	9801      	ldr	r0, [sp, #4]
90016940:	f7ff feb0 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016944:	9903      	ldr	r1, [sp, #12]
90016946:	4628      	mov	r0, r5
90016948:	f7ff fc95 	bl	90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001694c:	2800      	cmp	r0, #0
9001694e:	f000 809c 	beq.w	90016a8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90016952:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
90016956:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001695a:	fa1f f189 	uxth.w	r1, r9
9001695e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90016962:	9309      	str	r3, [sp, #36]	; 0x24
90016964:	eb01 0c03 	add.w	ip, r1, r3
90016968:	b283      	uxth	r3, r0
9001696a:	4548      	cmp	r0, r9
9001696c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90016970:	fa1f fa8c 	uxth.w	sl, ip
90016974:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
90016978:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
9001697c:	eb03 050c 	add.w	r5, r3, ip
90016980:	b2ad      	uxth	r5, r5
90016982:	9505      	str	r5, [sp, #20]
90016984:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90016988:	9504      	str	r5, [sp, #16]
9001698a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
9001698e:	f340 8099 	ble.w	90016ac4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90016992:	1a5b      	subs	r3, r3, r1
90016994:	4596      	cmp	lr, r2
90016996:	fa0f f08a 	sxth.w	r0, sl
9001699a:	b29b      	uxth	r3, r3
9001699c:	b21e      	sxth	r6, r3
9001699e:	dd2e      	ble.n	900169fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900169a0:	9f02      	ldr	r7, [sp, #8]
900169a2:	fa1f fe8e 	uxth.w	lr, lr
900169a6:	b292      	uxth	r2, r2
900169a8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
900169ac:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900169b0:	9f04      	ldr	r7, [sp, #16]
900169b2:	ebae 0102 	sub.w	r1, lr, r2
900169b6:	44a6      	add	lr, r4
900169b8:	1a3f      	subs	r7, r7, r0
900169ba:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
900169be:	b289      	uxth	r1, r1
900169c0:	4402      	add	r2, r0
900169c2:	fa0f fe8e 	sxth.w	lr, lr
900169c6:	b20d      	sxth	r5, r1
900169c8:	b212      	sxth	r2, r2
900169ca:	436f      	muls	r7, r5
900169cc:	ebae 0202 	sub.w	r2, lr, r2
900169d0:	4372      	muls	r2, r6
900169d2:	4297      	cmp	r7, r2
900169d4:	db09      	blt.n	900169ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900169d6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
900169da:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
900169de:	449c      	add	ip, r3
900169e0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900169e4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
900169e8:	e686      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900169ea:	4421      	add	r1, r4
900169ec:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
900169f0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
900169f4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900169f8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900169fc:	e67c      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900169fe:	9f04      	ldr	r7, [sp, #16]
90016a00:	42b8      	cmp	r0, r7
90016a02:	da27      	bge.n	90016a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90016a04:	9902      	ldr	r1, [sp, #8]
90016a06:	1a3f      	subs	r7, r7, r0
90016a08:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90016a0c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90016a10:	eb05 010e 	add.w	r1, r5, lr
90016a14:	fa1f f881 	uxth.w	r8, r1
90016a18:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90016a1c:	4411      	add	r1, r2
90016a1e:	fa0f f988 	sxth.w	r9, r8
90016a22:	eba2 020e 	sub.w	r2, r2, lr
90016a26:	eba1 0108 	sub.w	r1, r1, r8
90016a2a:	4372      	muls	r2, r6
90016a2c:	b289      	uxth	r1, r1
90016a2e:	fa0f f881 	sxth.w	r8, r1
90016a32:	fb08 f707 	mul.w	r7, r8, r7
90016a36:	42ba      	cmp	r2, r7
90016a38:	dc06      	bgt.n	90016a48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90016a3a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90016a3e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90016a42:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
90016a46:	e7ca      	b.n	900169de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90016a48:	4429      	add	r1, r5
90016a4a:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90016a4e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016a52:	e651      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016a54:	9805      	ldr	r0, [sp, #20]
90016a56:	2d06      	cmp	r5, #6
90016a58:	ebaa 0000 	sub.w	r0, sl, r0
90016a5c:	b280      	uxth	r0, r0
90016a5e:	fa0f fe80 	sxth.w	lr, r0
90016a62:	d817      	bhi.n	90016a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90016a64:	9b04      	ldr	r3, [sp, #16]
90016a66:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
90016a6a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90016a6e:	1c6b      	adds	r3, r5, #1
90016a70:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90016a74:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90016a78:	9b01      	ldr	r3, [sp, #4]
90016a7a:	9801      	ldr	r0, [sp, #4]
90016a7c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90016a80:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016a84:	805a      	strh	r2, [r3, #2]
90016a86:	809e      	strh	r6, [r3, #4]
90016a88:	80d9      	strh	r1, [r3, #6]
90016a8a:	9b02      	ldr	r3, [sp, #8]
90016a8c:	3c08      	subs	r4, #8
90016a8e:	3b01      	subs	r3, #1
90016a90:	9302      	str	r3, [sp, #8]
90016a92:	e747      	b.n	90016924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90016a94:	9a02      	ldr	r2, [sp, #8]
90016a96:	45b6      	cmp	lr, r6
90016a98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016a9c:	db0d      	blt.n	90016aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90016a9e:	449c      	add	ip, r3
90016aa0:	445a      	add	r2, fp
90016aa2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90016aa6:	fa1f fc8c 	uxth.w	ip, ip
90016aaa:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90016aae:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90016ab2:	448c      	add	ip, r1
90016ab4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
90016ab8:	e61e      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016aba:	445a      	add	r2, fp
90016abc:	4484      	add	ip, r0
90016abe:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90016ac2:	e78f      	b.n	900169e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016ac4:	fa1f f18e 	uxth.w	r1, lr
90016ac8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90016acc:	b293      	uxth	r3, r2
90016ace:	4596      	cmp	lr, r2
90016ad0:	eb01 0806 	add.w	r8, r1, r6
90016ad4:	9306      	str	r3, [sp, #24]
90016ad6:	fa1f f888 	uxth.w	r8, r8
90016ada:	9f06      	ldr	r7, [sp, #24]
90016adc:	fa0f f388 	sxth.w	r3, r8
90016ae0:	9307      	str	r3, [sp, #28]
90016ae2:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90016ae6:	443b      	add	r3, r7
90016ae8:	b29b      	uxth	r3, r3
90016aea:	9308      	str	r3, [sp, #32]
90016aec:	da24      	bge.n	90016b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90016aee:	9905      	ldr	r1, [sp, #20]
90016af0:	eba3 0308 	sub.w	r3, r3, r8
90016af4:	eba2 020e 	sub.w	r2, r2, lr
90016af8:	eba9 0000 	sub.w	r0, r9, r0
90016afc:	ebaa 0401 	sub.w	r4, sl, r1
90016b00:	b29b      	uxth	r3, r3
90016b02:	b2a4      	uxth	r4, r4
90016b04:	b219      	sxth	r1, r3
90016b06:	b225      	sxth	r5, r4
90016b08:	4348      	muls	r0, r1
90016b0a:	436a      	muls	r2, r5
90016b0c:	4282      	cmp	r2, r0
90016b0e:	9a02      	ldr	r2, [sp, #8]
90016b10:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016b14:	445a      	add	r2, fp
90016b16:	dc06      	bgt.n	90016b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90016b18:	9b07      	ldr	r3, [sp, #28]
90016b1a:	44a4      	add	ip, r4
90016b1c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90016b20:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90016b24:	e75e      	b.n	900169e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016b26:	9904      	ldr	r1, [sp, #16]
90016b28:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90016b2c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90016b30:	4433      	add	r3, r6
90016b32:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90016b36:	e5df      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016b38:	9f06      	ldr	r7, [sp, #24]
90016b3a:	9b04      	ldr	r3, [sp, #16]
90016b3c:	1bc9      	subs	r1, r1, r7
90016b3e:	fa0f f78a 	sxth.w	r7, sl
90016b42:	b289      	uxth	r1, r1
90016b44:	429f      	cmp	r7, r3
90016b46:	fa0f fe81 	sxth.w	lr, r1
90016b4a:	dd23      	ble.n	90016b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90016b4c:	9a05      	ldr	r2, [sp, #20]
90016b4e:	eba9 0000 	sub.w	r0, r9, r0
90016b52:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90016b56:	ebaa 0202 	sub.w	r2, sl, r2
90016b5a:	9d07      	ldr	r5, [sp, #28]
90016b5c:	fb0e f000 	mul.w	r0, lr, r0
90016b60:	b292      	uxth	r2, r2
90016b62:	eba5 0a03 	sub.w	sl, r5, r3
90016b66:	9b02      	ldr	r3, [sp, #8]
90016b68:	b214      	sxth	r4, r2
90016b6a:	00db      	lsls	r3, r3, #3
90016b6c:	fb04 fa0a 	mul.w	sl, r4, sl
90016b70:	445b      	add	r3, fp
90016b72:	4550      	cmp	r0, sl
90016b74:	db03      	blt.n	90016b7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90016b76:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
90016b7a:	4494      	add	ip, r2
90016b7c:	e732      	b.n	900169e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016b7e:	9a04      	ldr	r2, [sp, #16]
90016b80:	4431      	add	r1, r6
90016b82:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
90016b86:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
90016b8a:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90016b8e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90016b92:	e75c      	b.n	90016a4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90016b94:	9b08      	ldr	r3, [sp, #32]
90016b96:	2d06      	cmp	r5, #6
90016b98:	eba3 0308 	sub.w	r3, r3, r8
90016b9c:	b29b      	uxth	r3, r3
90016b9e:	b218      	sxth	r0, r3
90016ba0:	d813      	bhi.n	90016bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90016ba2:	9b07      	ldr	r3, [sp, #28]
90016ba4:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
90016ba8:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90016bac:	1c6b      	adds	r3, r5, #1
90016bae:	9901      	ldr	r1, [sp, #4]
90016bb0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90016bb4:	9b01      	ldr	r3, [sp, #4]
90016bb6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90016bba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90016bbe:	805a      	strh	r2, [r3, #2]
90016bc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
90016bc2:	f8a3 e006 	strh.w	lr, [r3, #6]
90016bc6:	809a      	strh	r2, [r3, #4]
90016bc8:	e75f      	b.n	90016a8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90016bca:	9c02      	ldr	r4, [sp, #8]
90016bcc:	4570      	cmp	r0, lr
90016bce:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90016bd2:	db0d      	blt.n	90016bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90016bd4:	4431      	add	r1, r6
90016bd6:	9b06      	ldr	r3, [sp, #24]
90016bd8:	445c      	add	r4, fp
90016bda:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90016bde:	b289      	uxth	r1, r1
90016be0:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90016be4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016be8:	4419      	add	r1, r3
90016bea:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90016bee:	e583      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016bf0:	445c      	add	r4, fp
90016bf2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
90016bf6:	e79b      	b.n	90016b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90016bf8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90016bfc:	f64f 76ff 	movw	r6, #65535	; 0xffff
90016c00:	1e65      	subs	r5, r4, #1
90016c02:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90016c06:	b2ad      	uxth	r5, r5
90016c08:	42b5      	cmp	r5, r6
90016c0a:	d044      	beq.n	90016c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90016c0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90016c10:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90016c14:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90016c18:	4282      	cmp	r2, r0
90016c1a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
90016c1e:	d11f      	bne.n	90016c60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016c20:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90016c24:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90016c28:	459c      	cmp	ip, r3
90016c2a:	d119      	bne.n	90016c60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016c2c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90016c30:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90016c34:	19d8      	adds	r0, r3, r7
90016c36:	b200      	sxth	r0, r0
90016c38:	4288      	cmp	r0, r1
90016c3a:	d109      	bne.n	90016c50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90016c3c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90016c40:	4413      	add	r3, r2
90016c42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90016c46:	4629      	mov	r1, r5
90016c48:	9801      	ldr	r0, [sp, #4]
90016c4a:	f7ff fd2b 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016c4e:	e003      	b.n	90016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016c50:	4411      	add	r1, r2
90016c52:	b209      	sxth	r1, r1
90016c54:	42b9      	cmp	r1, r7
90016c56:	d0f3      	beq.n	90016c40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90016c58:	3d01      	subs	r5, #1
90016c5a:	3c08      	subs	r4, #8
90016c5c:	b2ad      	uxth	r5, r5
90016c5e:	e7d3      	b.n	90016c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90016c60:	42b9      	cmp	r1, r7
90016c62:	d1f9      	bne.n	90016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016c64:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
90016c68:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90016c6c:	4299      	cmp	r1, r3
90016c6e:	d1f3      	bne.n	90016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016c70:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90016c74:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90016c78:	181f      	adds	r7, r3, r0
90016c7a:	b23f      	sxth	r7, r7
90016c7c:	42ba      	cmp	r2, r7
90016c7e:	d105      	bne.n	90016c8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90016c80:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90016c84:	440b      	add	r3, r1
90016c86:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90016c8a:	e7dc      	b.n	90016c46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90016c8c:	440a      	add	r2, r1
90016c8e:	b212      	sxth	r2, r2
90016c90:	4290      	cmp	r0, r2
90016c92:	d1e1      	bne.n	90016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016c94:	e7f6      	b.n	90016c84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90016c96:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
90016c9a:	2e07      	cmp	r6, #7
90016c9c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90016ca0:	d812      	bhi.n	90016cc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90016ca2:	1c75      	adds	r5, r6, #1
90016ca4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90016ca8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90016cac:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90016cb0:	9d01      	ldr	r5, [sp, #4]
90016cb2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90016cb6:	442c      	add	r4, r5
90016cb8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90016cbc:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90016cc0:	8061      	strh	r1, [r4, #2]
90016cc2:	80a2      	strh	r2, [r4, #4]
90016cc4:	80e3      	strh	r3, [r4, #6]
90016cc6:	e581      	b.n	900167cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016cc8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90016ccc:	3e01      	subs	r6, #1
90016cce:	445c      	add	r4, fp
90016cd0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90016cd4:	f04f 37ff 	mov.w	r7, #4294967295
90016cd8:	2500      	movs	r5, #0
90016cda:	9305      	str	r3, [sp, #20]
90016cdc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90016ce0:	1e72      	subs	r2, r6, #1
90016ce2:	9302      	str	r3, [sp, #8]
90016ce4:	4691      	mov	r9, r2
90016ce6:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90016cea:	9304      	str	r3, [sp, #16]
90016cec:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90016cf0:	f1b9 3fff 	cmp.w	r9, #4294967295
90016cf4:	6818      	ldr	r0, [r3, #0]
90016cf6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016cfa:	9207      	str	r2, [sp, #28]
90016cfc:	bf16      	itet	ne
90016cfe:	9905      	ldrne	r1, [sp, #20]
90016d00:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90016d04:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90016d08:	9306      	str	r3, [sp, #24]
90016d0a:	f8be 1006 	ldrh.w	r1, [lr, #6]
90016d0e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90016d12:	fb18 f801 	smulbb	r8, r8, r1
90016d16:	6859      	ldr	r1, [r3, #4]
90016d18:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016d1c:	4671      	mov	r1, lr
90016d1e:	a80c      	add	r0, sp, #48	; 0x30
90016d20:	f7ff fb42 	bl	900163a8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016d24:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90016d28:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90016d2c:	f04f 0c08 	mov.w	ip, #8
90016d30:	9b04      	ldr	r3, [sp, #16]
90016d32:	9a02      	ldr	r2, [sp, #8]
90016d34:	fb10 f001 	smulbb	r0, r0, r1
90016d38:	fb02 8803 	mla	r8, r2, r3, r8
90016d3c:	eba0 0108 	sub.w	r1, r0, r8
90016d40:	fb90 f0fc 	sdiv	r0, r0, ip
90016d44:	4288      	cmp	r0, r1
90016d46:	dc20      	bgt.n	90016d8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90016d48:	4551      	cmp	r1, sl
90016d4a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90016d4e:	da03      	bge.n	90016d58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90016d50:	b1d9      	cbz	r1, 90016d8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90016d52:	468a      	mov	sl, r1
90016d54:	464f      	mov	r7, r9
90016d56:	4635      	mov	r5, r6
90016d58:	f109 39ff 	add.w	r9, r9, #4294967295
90016d5c:	f119 0f02 	cmn.w	r9, #2
90016d60:	d1c6      	bne.n	90016cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90016d62:	4616      	mov	r6, r2
90016d64:	3201      	adds	r2, #1
90016d66:	f1a4 0408 	sub.w	r4, r4, #8
90016d6a:	d1b7      	bne.n	90016cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90016d6c:	9b01      	ldr	r3, [sp, #4]
90016d6e:	b2ac      	uxth	r4, r5
90016d70:	00ed      	lsls	r5, r5, #3
90016d72:	1958      	adds	r0, r3, r5
90016d74:	1c7b      	adds	r3, r7, #1
90016d76:	d10b      	bne.n	90016d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90016d78:	4601      	mov	r1, r0
90016d7a:	9803      	ldr	r0, [sp, #12]
90016d7c:	f7ff fb14 	bl	900163a8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016d80:	4621      	mov	r1, r4
90016d82:	9801      	ldr	r0, [sp, #4]
90016d84:	f7ff fc8e 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016d88:	e4b6      	b.n	900166f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016d8a:	464f      	mov	r7, r9
90016d8c:	4635      	mov	r5, r6
90016d8e:	e7ed      	b.n	90016d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90016d90:	9b01      	ldr	r3, [sp, #4]
90016d92:	00ff      	lsls	r7, r7, #3
90016d94:	445d      	add	r5, fp
90016d96:	19d9      	adds	r1, r3, r7
90016d98:	445f      	add	r7, fp
90016d9a:	f7ff fb05 	bl	900163a8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016d9e:	9b03      	ldr	r3, [sp, #12]
90016da0:	cb03      	ldmia	r3!, {r0, r1}
90016da2:	9b03      	ldr	r3, [sp, #12]
90016da4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90016da8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90016dac:	f855 0fac 	ldr.w	r0, [r5, #172]!
90016db0:	6869      	ldr	r1, [r5, #4]
90016db2:	c303      	stmia	r3!, {r0, r1}
90016db4:	e7e4      	b.n	90016d80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90016db6:	bf00      	nop

90016db8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90016db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016dbc:	f500 7698 	add.w	r6, r0, #304	; 0x130
90016dc0:	b09b      	sub	sp, #108	; 0x6c
90016dc2:	4604      	mov	r4, r0
90016dc4:	4630      	mov	r0, r6
90016dc6:	f7fa f94e 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
90016dca:	4605      	mov	r5, r0
90016dcc:	b948      	cbnz	r0, 90016de2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90016dce:	6823      	ldr	r3, [r4, #0]
90016dd0:	4620      	mov	r0, r4
90016dd2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016dd4:	e896 0006 	ldmia.w	r6, {r1, r2}
90016dd8:	4798      	blx	r3
90016dda:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90016dde:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90016de2:	4bc5      	ldr	r3, [pc, #788]	; (900170f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90016de4:	681b      	ldr	r3, [r3, #0]
90016de6:	2b00      	cmp	r3, #0
90016de8:	d03f      	beq.n	90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016dea:	4dc4      	ldr	r5, [pc, #784]	; (900170fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90016dec:	4628      	mov	r0, r5
90016dee:	f7fa f93a 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
90016df2:	4606      	mov	r6, r0
90016df4:	2800      	cmp	r0, #0
90016df6:	d138      	bne.n	90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016df8:	4628      	mov	r0, r5
90016dfa:	f7ff f94b 	bl	90016094 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016dfe:	6823      	ldr	r3, [r4, #0]
90016e00:	6829      	ldr	r1, [r5, #0]
90016e02:	4620      	mov	r0, r4
90016e04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016e06:	686a      	ldr	r2, [r5, #4]
90016e08:	4798      	blx	r3
90016e0a:	802e      	strh	r6, [r5, #0]
90016e0c:	806e      	strh	r6, [r5, #2]
90016e0e:	80ae      	strh	r6, [r5, #4]
90016e10:	80ee      	strh	r6, [r5, #6]
90016e12:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90016e16:	4dba      	ldr	r5, [pc, #744]	; (90017100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90016e18:	4640      	mov	r0, r8
90016e1a:	f7ff fbe7 	bl	900165ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016e1e:	882e      	ldrh	r6, [r5, #0]
90016e20:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90016e24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90016e28:	4633      	mov	r3, r6
90016e2a:	42bb      	cmp	r3, r7
90016e2c:	d224      	bcs.n	90016e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016e2e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90016e32:	2907      	cmp	r1, #7
90016e34:	d816      	bhi.n	90016e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90016e36:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016e3a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90016e3e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90016e42:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90016e46:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90016e4a:	1c4a      	adds	r2, r1, #1
90016e4c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90016e50:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90016e54:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90016e58:	f8a2 a002 	strh.w	sl, [r2, #2]
90016e5c:	f8a2 e004 	strh.w	lr, [r2, #4]
90016e60:	f8a2 c006 	strh.w	ip, [r2, #6]
90016e64:	3301      	adds	r3, #1
90016e66:	b29b      	uxth	r3, r3
90016e68:	e7df      	b.n	90016e2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90016e6a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90016e6e:	2b00      	cmp	r3, #0
90016e70:	d1cf      	bne.n	90016e12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90016e72:	b01b      	add	sp, #108	; 0x6c
90016e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016e78:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90016e7c:	42b3      	cmp	r3, r6
90016e7e:	d90c      	bls.n	90016e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90016e80:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90016e84:	6822      	ldr	r2, [r4, #0]
90016e86:	3601      	adds	r6, #1
90016e88:	4620      	mov	r0, r4
90016e8a:	6c17      	ldr	r7, [r2, #64]	; 0x40
90016e8c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90016e90:	b2b6      	uxth	r6, r6
90016e92:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90016e96:	47b8      	blx	r7
90016e98:	e7ee      	b.n	90016e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016e9a:	4a9a      	ldr	r2, [pc, #616]	; (90017104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90016e9c:	6813      	ldr	r3, [r2, #0]
90016e9e:	4691      	mov	r9, r2
90016ea0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90016ea4:	2b01      	cmp	r3, #1
90016ea6:	f040 80e0 	bne.w	9001706a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90016eaa:	8829      	ldrh	r1, [r5, #0]
90016eac:	2600      	movs	r6, #0
90016eae:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90016eb2:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90016eb6:	33ae      	adds	r3, #174	; 0xae
90016eb8:	428f      	cmp	r7, r1
90016eba:	f103 0308 	add.w	r3, r3, #8
90016ebe:	dd0a      	ble.n	90016ed6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90016ec0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90016ec4:	3101      	adds	r1, #1
90016ec6:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90016eca:	4402      	add	r2, r0
90016ecc:	b212      	sxth	r2, r2
90016ece:	4296      	cmp	r6, r2
90016ed0:	bfb8      	it	lt
90016ed2:	4616      	movlt	r6, r2
90016ed4:	e7f0      	b.n	90016eb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90016ed6:	4b8c      	ldr	r3, [pc, #560]	; (90017108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90016ed8:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90017104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90016edc:	881b      	ldrh	r3, [r3, #0]
90016ede:	2b0f      	cmp	r3, #15
90016ee0:	bf8c      	ite	hi
90016ee2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90016ee6:	f04f 0b01 	movls.w	fp, #1
90016eea:	2300      	movs	r3, #0
90016eec:	e9cd 3305 	strd	r3, r3, [sp, #20]
90016ef0:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90016ef4:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90016ef8:	4b82      	ldr	r3, [pc, #520]	; (90017104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90016efa:	4438      	add	r0, r7
90016efc:	b207      	sxth	r7, r0
90016efe:	6818      	ldr	r0, [r3, #0]
90016f00:	42b7      	cmp	r7, r6
90016f02:	6803      	ldr	r3, [r0, #0]
90016f04:	f280 8083 	bge.w	9001700e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90016f08:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90016f0c:	4798      	blx	r3
90016f0e:	eb07 030b 	add.w	r3, r7, fp
90016f12:	4298      	cmp	r0, r3
90016f14:	da07      	bge.n	90016f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90016f16:	42b0      	cmp	r0, r6
90016f18:	da05      	bge.n	90016f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90016f1a:	4287      	cmp	r7, r0
90016f1c:	dd6c      	ble.n	90016ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90016f1e:	2f00      	cmp	r7, #0
90016f20:	dd6a      	ble.n	90016ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90016f22:	4630      	mov	r0, r6
90016f24:	e004      	b.n	90016f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90016f26:	4287      	cmp	r7, r0
90016f28:	dcfb      	bgt.n	90016f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90016f2a:	42b0      	cmp	r0, r6
90016f2c:	bfa8      	it	ge
90016f2e:	4630      	movge	r0, r6
90016f30:	4b76      	ldr	r3, [pc, #472]	; (9001710c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90016f32:	1bc0      	subs	r0, r0, r7
90016f34:	2200      	movs	r2, #0
90016f36:	f8ad 7016 	strh.w	r7, [sp, #22]
90016f3a:	f9b3 3000 	ldrsh.w	r3, [r3]
90016f3e:	882f      	ldrh	r7, [r5, #0]
90016f40:	f8ad 2014 	strh.w	r2, [sp, #20]
90016f44:	f8ad 3018 	strh.w	r3, [sp, #24]
90016f48:	f8ad 001a 	strh.w	r0, [sp, #26]
90016f4c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90016f50:	42bb      	cmp	r3, r7
90016f52:	d9cd      	bls.n	90016ef0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90016f54:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90016f58:	ab07      	add	r3, sp, #28
90016f5a:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016f5e:	6851      	ldr	r1, [r2, #4]
90016f60:	c303      	stmia	r3!, {r0, r1}
90016f62:	a905      	add	r1, sp, #20
90016f64:	a807      	add	r0, sp, #28
90016f66:	f7ff f986 	bl	90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016f6a:	2800      	cmp	r0, #0
90016f6c:	d04c      	beq.n	90017008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90016f6e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90016f72:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90016f76:	f8bd a020 	ldrh.w	sl, [sp, #32]
90016f7a:	4686      	mov	lr, r0
90016f7c:	4290      	cmp	r0, r2
90016f7e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90016f82:	4450      	add	r0, sl
90016f84:	f8bd a018 	ldrh.w	sl, [sp, #24]
90016f88:	bfb8      	it	lt
90016f8a:	4696      	movlt	lr, r2
90016f8c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90016f90:	4452      	add	r2, sl
90016f92:	b280      	uxth	r0, r0
90016f94:	4299      	cmp	r1, r3
90016f96:	468c      	mov	ip, r1
90016f98:	b292      	uxth	r2, r2
90016f9a:	9302      	str	r3, [sp, #8]
90016f9c:	bfb8      	it	lt
90016f9e:	469c      	movlt	ip, r3
90016fa0:	b203      	sxth	r3, r0
90016fa2:	fa0f fa82 	sxth.w	sl, r2
90016fa6:	f8ad e01c 	strh.w	lr, [sp, #28]
90016faa:	f8ad c01e 	strh.w	ip, [sp, #30]
90016fae:	4553      	cmp	r3, sl
90016fb0:	bfb8      	it	lt
90016fb2:	4602      	movlt	r2, r0
90016fb4:	9b02      	ldr	r3, [sp, #8]
90016fb6:	eba2 020e 	sub.w	r2, r2, lr
90016fba:	f8ad 2020 	strh.w	r2, [sp, #32]
90016fbe:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90016fc2:	4411      	add	r1, r2
90016fc4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90016fc8:	4413      	add	r3, r2
90016fca:	b289      	uxth	r1, r1
90016fcc:	b29b      	uxth	r3, r3
90016fce:	b208      	sxth	r0, r1
90016fd0:	b21a      	sxth	r2, r3
90016fd2:	4290      	cmp	r0, r2
90016fd4:	bfb8      	it	lt
90016fd6:	460b      	movlt	r3, r1
90016fd8:	eba3 030c 	sub.w	r3, r3, ip
90016fdc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90016fe0:	a807      	add	r0, sp, #28
90016fe2:	f7fa f840 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
90016fe6:	b920      	cbnz	r0, 90016ff2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90016fe8:	6823      	ldr	r3, [r4, #0]
90016fea:	a907      	add	r1, sp, #28
90016fec:	4620      	mov	r0, r4
90016fee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90016ff0:	4798      	blx	r3
90016ff2:	3701      	adds	r7, #1
90016ff4:	b2bf      	uxth	r7, r7
90016ff6:	e7a9      	b.n	90016f4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90016ff8:	f8d9 0000 	ldr.w	r0, [r9]
90016ffc:	2101      	movs	r1, #1
90016ffe:	6803      	ldr	r3, [r0, #0]
90017000:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90017004:	4798      	blx	r3
90017006:	e773      	b.n	90016ef0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017008:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001700c:	e7e8      	b.n	90016fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001700e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90017010:	4798      	blx	r3
90017012:	4b3f      	ldr	r3, [pc, #252]	; (90017110 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90017014:	781b      	ldrb	r3, [r3, #0]
90017016:	2b00      	cmp	r3, #0
90017018:	f43f af2b 	beq.w	90016e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001701c:	2300      	movs	r3, #0
9001701e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90017022:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90017026:	882b      	ldrh	r3, [r5, #0]
90017028:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001702c:	42ab      	cmp	r3, r5
9001702e:	f4bf af20 	bcs.w	90016e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90017032:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90017036:	2907      	cmp	r1, #7
90017038:	d814      	bhi.n	90017064 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001703a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001703e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90017042:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90017046:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001704a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001704e:	1c4a      	adds	r2, r1, #1
90017050:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90017054:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90017058:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
9001705c:	f8a2 c002 	strh.w	ip, [r2, #2]
90017060:	8097      	strh	r7, [r2, #4]
90017062:	80d6      	strh	r6, [r2, #6]
90017064:	3301      	adds	r3, #1
90017066:	b29b      	uxth	r3, r3
90017068:	e7e0      	b.n	9001702c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001706a:	2b02      	cmp	r3, #2
9001706c:	f040 8133 	bne.w	900172d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90017070:	4b28      	ldr	r3, [pc, #160]	; (90017114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90017072:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90017076:	781b      	ldrb	r3, [r3, #0]
90017078:	2b01      	cmp	r3, #1
9001707a:	f000 8098 	beq.w	900171ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001707e:	882a      	ldrh	r2, [r5, #0]
90017080:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90017084:	3201      	adds	r2, #1
90017086:	b292      	uxth	r2, r2
90017088:	2900      	cmp	r1, #0
9001708a:	d0c2      	beq.n	90017012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001708c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90017090:	4694      	mov	ip, r2
90017092:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90017096:	f04f 0900 	mov.w	r9, #0
9001709a:	441e      	add	r6, r3
9001709c:	b236      	sxth	r6, r6
9001709e:	fa1f f38c 	uxth.w	r3, ip
900170a2:	ea4f 07c9 	mov.w	r7, r9, lsl #3
900170a6:	4299      	cmp	r1, r3
900170a8:	f240 80be 	bls.w	90017228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
900170ac:	4427      	add	r7, r4
900170ae:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900170b2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
900170b6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
900170ba:	4283      	cmp	r3, r0
900170bc:	f340 80a0 	ble.w	90017200 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
900170c0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
900170c4:	46e1      	mov	r9, ip
900170c6:	4406      	add	r6, r0
900170c8:	b236      	sxth	r6, r6
900170ca:	429e      	cmp	r6, r3
900170cc:	bfa8      	it	ge
900170ce:	461e      	movge	r6, r3
900170d0:	f10c 0c01 	add.w	ip, ip, #1
900170d4:	e7e3      	b.n	9001709e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900170d6:	d10a      	bne.n	900170ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900170d8:	4562      	cmp	r2, ip
900170da:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
900170de:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
900170e2:	bfb8      	it	lt
900170e4:	4662      	movlt	r2, ip
900170e6:	4288      	cmp	r0, r1
900170e8:	bfb8      	it	lt
900170ea:	461f      	movlt	r7, r3
900170ec:	e086      	b.n	900171fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900170ee:	428a      	cmp	r2, r1
900170f0:	bfb8      	it	lt
900170f2:	460a      	movlt	r2, r1
900170f4:	e082      	b.n	900171fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
900170f6:	bf00      	nop
900170f8:	24039744 	.word	0x24039744
900170fc:	24039750 	.word	0x24039750
90017100:	24000080 	.word	0x24000080
90017104:	24039704 	.word	0x24039704
90017108:	240396fa 	.word	0x240396fa
9001710c:	240396f8 	.word	0x240396f8
90017110:	24039702 	.word	0x24039702
90017114:	240396fc 	.word	0x240396fc
90017118:	19a1      	adds	r1, r4, r6
9001711a:	ab07      	add	r3, sp, #28
9001711c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017120:	6849      	ldr	r1, [r1, #4]
90017122:	c303      	stmia	r3!, {r0, r1}
90017124:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017128:	a807      	add	r0, sp, #28
9001712a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001712e:	2b13      	cmp	r3, #19
90017130:	440b      	add	r3, r1
90017132:	bfd8      	it	le
90017134:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90017138:	1a9b      	subs	r3, r3, r2
9001713a:	f8ad 201c 	strh.w	r2, [sp, #28]
9001713e:	f8ad 3020 	strh.w	r3, [sp, #32]
90017142:	f7fe ffc1 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017146:	a807      	add	r0, sp, #28
90017148:	f7f9 ff8d 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001714c:	bb78      	cbnz	r0, 900171ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001714e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90017152:	4426      	add	r6, r4
90017154:	f8d9 0000 	ldr.w	r0, [r9]
90017158:	f1bc 0f14 	cmp.w	ip, #20
9001715c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90017160:	f8d0 e000 	ldr.w	lr, [r0]
90017164:	bfa8      	it	ge
90017166:	f04f 0c14 	movge.w	ip, #20
9001716a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001716e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017172:	fa1f fc8c 	uxth.w	ip, ip
90017176:	f8cd c000 	str.w	ip, [sp]
9001717a:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
9001717e:	47d8      	blx	fp
90017180:	4683      	mov	fp, r0
90017182:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017186:	a807      	add	r0, sp, #28
90017188:	f7fe ff84 	bl	90016094 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001718c:	6823      	ldr	r3, [r4, #0]
9001718e:	4620      	mov	r0, r4
90017190:	a907      	add	r1, sp, #28
90017192:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017194:	4798      	blx	r3
90017196:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001719a:	eba0 000b 	sub.w	r0, r0, fp
9001719e:	b200      	sxth	r0, r0
900171a0:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
900171a4:	b918      	cbnz	r0, 900171ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900171a6:	b2b9      	uxth	r1, r7
900171a8:	4650      	mov	r0, sl
900171aa:	f7ff fa7b 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900171ae:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
900171b2:	f1bb 0f00 	cmp.w	fp, #0
900171b6:	f43f af2c 	beq.w	90017012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900171ba:	882b      	ldrh	r3, [r5, #0]
900171bc:	2700      	movs	r7, #0
900171be:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
900171c2:	3301      	adds	r3, #1
900171c4:	b29b      	uxth	r3, r3
900171c6:	b299      	uxth	r1, r3
900171c8:	00fe      	lsls	r6, r7, #3
900171ca:	458b      	cmp	fp, r1
900171cc:	d9a4      	bls.n	90017118 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
900171ce:	4426      	add	r6, r4
900171d0:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900171d4:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
900171d8:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
900171dc:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
900171e0:	4408      	add	r0, r1
900171e2:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
900171e6:	4461      	add	r1, ip
900171e8:	b200      	sxth	r0, r0
900171ea:	b209      	sxth	r1, r1
900171ec:	4288      	cmp	r0, r1
900171ee:	f6bf af72 	bge.w	900170d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
900171f2:	4584      	cmp	ip, r0
900171f4:	4662      	mov	r2, ip
900171f6:	461f      	mov	r7, r3
900171f8:	bfb8      	it	lt
900171fa:	4602      	movlt	r2, r0
900171fc:	3301      	adds	r3, #1
900171fe:	e7e2      	b.n	900171c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017200:	d10e      	bne.n	90017220 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017202:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90017206:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
9001720a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
9001720e:	4473      	add	r3, lr
90017210:	b21b      	sxth	r3, r3
90017212:	429e      	cmp	r6, r3
90017214:	bfa8      	it	ge
90017216:	461e      	movge	r6, r3
90017218:	4287      	cmp	r7, r0
9001721a:	bfb8      	it	lt
9001721c:	46e1      	movlt	r9, ip
9001721e:	e757      	b.n	900170d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017220:	4286      	cmp	r6, r0
90017222:	bfa8      	it	ge
90017224:	4606      	movge	r6, r0
90017226:	e753      	b.n	900170d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017228:	eb0a 0007 	add.w	r0, sl, r7
9001722c:	4427      	add	r7, r4
9001722e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90017232:	f1bb 0f13 	cmp.w	fp, #19
90017236:	bfdc      	itt	le
90017238:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
9001723c:	445e      	addle	r6, fp
9001723e:	e9cd 2102 	strd	r2, r1, [sp, #8]
90017242:	bfd8      	it	le
90017244:	b236      	sxthle	r6, r6
90017246:	f7f9 ff0e 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001724a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001724e:	2800      	cmp	r0, #0
90017250:	f47f af1a 	bne.w	90017088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90017254:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90017258:	fa1f fb8b 	uxth.w	fp, fp
9001725c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017260:	1ab6      	subs	r6, r6, r2
90017262:	4829      	ldr	r0, [pc, #164]	; (90017308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90017264:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90017268:	2e14      	cmp	r6, #20
9001726a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
9001726e:	6800      	ldr	r0, [r0, #0]
90017270:	bfa8      	it	ge
90017272:	2614      	movge	r6, #20
90017274:	f8ad 101c 	strh.w	r1, [sp, #28]
90017278:	f8ad 201e 	strh.w	r2, [sp, #30]
9001727c:	b289      	uxth	r1, r1
9001727e:	f8ad 3020 	strh.w	r3, [sp, #32]
90017282:	b2b6      	uxth	r6, r6
90017284:	f8d0 c000 	ldr.w	ip, [r0]
90017288:	b292      	uxth	r2, r2
9001728a:	455e      	cmp	r6, fp
9001728c:	bf94      	ite	ls
9001728e:	9600      	strls	r6, [sp, #0]
90017290:	f8cd b000 	strhi.w	fp, [sp]
90017294:	b29b      	uxth	r3, r3
90017296:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
9001729a:	47b0      	blx	r6
9001729c:	6823      	ldr	r3, [r4, #0]
9001729e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900172a2:	a907      	add	r1, sp, #28
900172a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900172a6:	4620      	mov	r0, r4
900172a8:	4798      	blx	r3
900172aa:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900172ae:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
900172b2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
900172b6:	1a5b      	subs	r3, r3, r1
900172b8:	440a      	add	r2, r1
900172ba:	b21b      	sxth	r3, r3
900172bc:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
900172c0:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
900172c4:	2b00      	cmp	r3, #0
900172c6:	f47f aeda 	bne.w	9001707e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900172ca:	fa1f f189 	uxth.w	r1, r9
900172ce:	4650      	mov	r0, sl
900172d0:	f7ff f9e8 	bl	900166a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900172d4:	e6d3      	b.n	9001707e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900172d6:	882e      	ldrh	r6, [r5, #0]
900172d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900172dc:	42b3      	cmp	r3, r6
900172de:	f67f ae98 	bls.w	90017012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900172e2:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
900172e6:	ab07      	add	r3, sp, #28
900172e8:	f852 0fac 	ldr.w	r0, [r2, #172]!
900172ec:	6851      	ldr	r1, [r2, #4]
900172ee:	c303      	stmia	r3!, {r0, r1}
900172f0:	a807      	add	r0, sp, #28
900172f2:	f7f9 feb8 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
900172f6:	b920      	cbnz	r0, 90017302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
900172f8:	6823      	ldr	r3, [r4, #0]
900172fa:	a907      	add	r1, sp, #28
900172fc:	4620      	mov	r0, r4
900172fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017300:	4798      	blx	r3
90017302:	3601      	adds	r6, #1
90017304:	b2b6      	uxth	r6, r6
90017306:	e7e7      	b.n	900172d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017308:	24039704 	.word	0x24039704

9001730c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001730c:	4b03      	ldr	r3, [pc, #12]	; (9001731c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001730e:	2200      	movs	r2, #0
90017310:	801a      	strh	r2, [r3, #0]
90017312:	805a      	strh	r2, [r3, #2]
90017314:	809a      	strh	r2, [r3, #4]
90017316:	80da      	strh	r2, [r3, #6]
90017318:	4770      	bx	lr
9001731a:	bf00      	nop
9001731c:	24039750 	.word	0x24039750

90017320 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90017320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017324:	b09d      	sub	sp, #116	; 0x74
90017326:	4606      	mov	r6, r0
90017328:	4614      	mov	r4, r2
9001732a:	468a      	mov	sl, r1
9001732c:	a803      	add	r0, sp, #12
9001732e:	461d      	mov	r5, r3
90017330:	f000 fe9d 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
90017334:	6833      	ldr	r3, [r6, #0]
90017336:	4630      	mov	r0, r6
90017338:	f242 0b0b 	movw	fp, #8203	; 0x200b
9001733c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001733e:	4798      	blx	r3
90017340:	6833      	ldr	r3, [r6, #0]
90017342:	4607      	mov	r7, r0
90017344:	4630      	mov	r0, r6
90017346:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017348:	4798      	blx	r3
9001734a:	462a      	mov	r2, r5
9001734c:	2500      	movs	r5, #0
9001734e:	4621      	mov	r1, r4
90017350:	9000      	str	r0, [sp, #0]
90017352:	463b      	mov	r3, r7
90017354:	462c      	mov	r4, r5
90017356:	46a9      	mov	r9, r5
90017358:	46a8      	mov	r8, r5
9001735a:	a803      	add	r0, sp, #12
9001735c:	f000 fee2 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017360:	2300      	movs	r3, #0
90017362:	9302      	str	r3, [sp, #8]
90017364:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017368:	429c      	cmp	r4, r3
9001736a:	d002      	beq.n	90017372 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001736c:	455c      	cmp	r4, fp
9001736e:	bf18      	it	ne
90017370:	4625      	movne	r5, r4
90017372:	ab02      	add	r3, sp, #8
90017374:	4632      	mov	r2, r6
90017376:	4651      	mov	r1, sl
90017378:	a803      	add	r0, sp, #12
9001737a:	f001 f9d9 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001737e:	4604      	mov	r4, r0
90017380:	b108      	cbz	r0, 90017386 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90017382:	280a      	cmp	r0, #10
90017384:	d10a      	bne.n	9001739c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90017386:	45c1      	cmp	r9, r8
90017388:	bf38      	it	cc
9001738a:	46c1      	movcc	r9, r8
9001738c:	f04f 0800 	mov.w	r8, #0
90017390:	2c00      	cmp	r4, #0
90017392:	d1e5      	bne.n	90017360 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017394:	4648      	mov	r0, r9
90017396:	b01d      	add	sp, #116	; 0x74
90017398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001739c:	9a02      	ldr	r2, [sp, #8]
9001739e:	2a00      	cmp	r2, #0
900173a0:	d0de      	beq.n	90017360 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900173a2:	7b57      	ldrb	r7, [r2, #13]
900173a4:	4629      	mov	r1, r5
900173a6:	6833      	ldr	r3, [r6, #0]
900173a8:	007f      	lsls	r7, r7, #1
900173aa:	8894      	ldrh	r4, [r2, #4]
900173ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900173ae:	f407 7080 	and.w	r0, r7, #256	; 0x100
900173b2:	7a97      	ldrb	r7, [r2, #10]
900173b4:	4307      	orrs	r7, r0
900173b6:	4630      	mov	r0, r6
900173b8:	4798      	blx	r3
900173ba:	4438      	add	r0, r7
900173bc:	4480      	add	r8, r0
900173be:	fa1f f888 	uxth.w	r8, r8
900173c2:	e7e5      	b.n	90017390 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900173c4 <_ZNK8touchgfx4Font12getCharWidthEt>:
900173c4:	b508      	push	{r3, lr}
900173c6:	6803      	ldr	r3, [r0, #0]
900173c8:	68db      	ldr	r3, [r3, #12]
900173ca:	4798      	blx	r3
900173cc:	b128      	cbz	r0, 900173da <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900173ce:	7b43      	ldrb	r3, [r0, #13]
900173d0:	7a80      	ldrb	r0, [r0, #10]
900173d2:	005b      	lsls	r3, r3, #1
900173d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
900173d8:	4318      	orrs	r0, r3
900173da:	bd08      	pop	{r3, pc}

900173dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
900173dc:	b40e      	push	{r1, r2, r3}
900173de:	b5f0      	push	{r4, r5, r6, r7, lr}
900173e0:	b09e      	sub	sp, #120	; 0x78
900173e2:	4605      	mov	r5, r0
900173e4:	ab23      	add	r3, sp, #140	; 0x8c
900173e6:	a805      	add	r0, sp, #20
900173e8:	f853 4b04 	ldr.w	r4, [r3], #4
900173ec:	9303      	str	r3, [sp, #12]
900173ee:	f000 fe3e 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
900173f2:	682b      	ldr	r3, [r5, #0]
900173f4:	4628      	mov	r0, r5
900173f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900173f8:	4798      	blx	r3
900173fa:	682b      	ldr	r3, [r5, #0]
900173fc:	4606      	mov	r6, r0
900173fe:	4628      	mov	r0, r5
90017400:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017402:	4798      	blx	r3
90017404:	4633      	mov	r3, r6
90017406:	4621      	mov	r1, r4
90017408:	ae1e      	add	r6, sp, #120	; 0x78
9001740a:	2400      	movs	r4, #0
9001740c:	9000      	str	r0, [sp, #0]
9001740e:	9a03      	ldr	r2, [sp, #12]
90017410:	a805      	add	r0, sp, #20
90017412:	f000 fe87 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017416:	f846 4d68 	str.w	r4, [r6, #-104]!
9001741a:	462a      	mov	r2, r5
9001741c:	4633      	mov	r3, r6
9001741e:	4621      	mov	r1, r4
90017420:	a805      	add	r0, sp, #20
90017422:	f001 f985 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017426:	b300      	cbz	r0, 9001746a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017428:	280a      	cmp	r0, #10
9001742a:	d01a      	beq.n	90017462 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001742c:	9f04      	ldr	r7, [sp, #16]
9001742e:	b1c7      	cbz	r7, 90017462 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017430:	7b78      	ldrb	r0, [r7, #13]
90017432:	7a3b      	ldrb	r3, [r7, #8]
90017434:	00c1      	lsls	r1, r0, #3
90017436:	88ea      	ldrh	r2, [r5, #6]
90017438:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001743c:	4319      	orrs	r1, r3
9001743e:	0643      	lsls	r3, r0, #25
90017440:	ea4f 1000 	mov.w	r0, r0, lsl #4
90017444:	bf48      	it	mi
90017446:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
9001744a:	f400 7080 	and.w	r0, r0, #256	; 0x100
9001744e:	bf48      	it	mi
90017450:	b219      	sxthmi	r1, r3
90017452:	79fb      	ldrb	r3, [r7, #7]
90017454:	4303      	orrs	r3, r0
90017456:	4413      	add	r3, r2
90017458:	1a5b      	subs	r3, r3, r1
9001745a:	b21b      	sxth	r3, r3
9001745c:	429c      	cmp	r4, r3
9001745e:	bfb8      	it	lt
90017460:	461c      	movlt	r4, r3
90017462:	4633      	mov	r3, r6
90017464:	462a      	mov	r2, r5
90017466:	2100      	movs	r1, #0
90017468:	e7da      	b.n	90017420 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001746a:	b2a0      	uxth	r0, r4
9001746c:	b01e      	add	sp, #120	; 0x78
9001746e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017472:	b003      	add	sp, #12
90017474:	4770      	bx	lr

90017476 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90017476:	7a43      	ldrb	r3, [r0, #9]
90017478:	8880      	ldrh	r0, [r0, #4]
9001747a:	4418      	add	r0, r3
9001747c:	b280      	uxth	r0, r0
9001747e:	4770      	bx	lr

90017480 <_ZNK8touchgfx4Font13getFontHeightEv>:
90017480:	6803      	ldr	r3, [r0, #0]
90017482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017484:	4718      	bx	r3

90017486 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90017486:	b40e      	push	{r1, r2, r3}
90017488:	b570      	push	{r4, r5, r6, lr}
9001748a:	b09d      	sub	sp, #116	; 0x74
9001748c:	4604      	mov	r4, r0
9001748e:	ab21      	add	r3, sp, #132	; 0x84
90017490:	a803      	add	r0, sp, #12
90017492:	f853 5b04 	ldr.w	r5, [r3], #4
90017496:	9302      	str	r3, [sp, #8]
90017498:	f000 fde9 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
9001749c:	6823      	ldr	r3, [r4, #0]
9001749e:	4620      	mov	r0, r4
900174a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900174a2:	4798      	blx	r3
900174a4:	6823      	ldr	r3, [r4, #0]
900174a6:	4606      	mov	r6, r0
900174a8:	4620      	mov	r0, r4
900174aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900174ac:	2401      	movs	r4, #1
900174ae:	4798      	blx	r3
900174b0:	4633      	mov	r3, r6
900174b2:	9000      	str	r0, [sp, #0]
900174b4:	4629      	mov	r1, r5
900174b6:	9a02      	ldr	r2, [sp, #8]
900174b8:	a803      	add	r0, sp, #12
900174ba:	f000 fe33 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900174be:	a803      	add	r0, sp, #12
900174c0:	f001 fa02 	bl	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
900174c4:	b2a3      	uxth	r3, r4
900174c6:	b138      	cbz	r0, 900174d8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900174c8:	280a      	cmp	r0, #10
900174ca:	a803      	add	r0, sp, #12
900174cc:	bf04      	itt	eq
900174ce:	3301      	addeq	r3, #1
900174d0:	b21c      	sxtheq	r4, r3
900174d2:	f001 f9f9 	bl	900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>
900174d6:	e7f5      	b.n	900174c4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
900174d8:	4618      	mov	r0, r3
900174da:	b01d      	add	sp, #116	; 0x74
900174dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900174e0:	b003      	add	sp, #12
900174e2:	4770      	bx	lr

900174e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
900174e4:	b40e      	push	{r1, r2, r3}
900174e6:	b5f0      	push	{r4, r5, r6, r7, lr}
900174e8:	b09e      	sub	sp, #120	; 0x78
900174ea:	4604      	mov	r4, r0
900174ec:	ab23      	add	r3, sp, #140	; 0x8c
900174ee:	a805      	add	r0, sp, #20
900174f0:	f853 5b04 	ldr.w	r5, [r3], #4
900174f4:	9303      	str	r3, [sp, #12]
900174f6:	f000 fdba 	bl	9001806e <_ZN8touchgfx12TextProviderC1Ev>
900174fa:	6823      	ldr	r3, [r4, #0]
900174fc:	4620      	mov	r0, r4
900174fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017500:	4798      	blx	r3
90017502:	6823      	ldr	r3, [r4, #0]
90017504:	4606      	mov	r6, r0
90017506:	4620      	mov	r0, r4
90017508:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001750a:	4798      	blx	r3
9001750c:	4633      	mov	r3, r6
9001750e:	4629      	mov	r1, r5
90017510:	9000      	str	r0, [sp, #0]
90017512:	9a03      	ldr	r2, [sp, #12]
90017514:	a805      	add	r0, sp, #20
90017516:	f000 fe05 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001751a:	ad1e      	add	r5, sp, #120	; 0x78
9001751c:	2100      	movs	r1, #0
9001751e:	f647 76ff 	movw	r6, #32767	; 0x7fff
90017522:	4622      	mov	r2, r4
90017524:	a805      	add	r0, sp, #20
90017526:	f845 1d68 	str.w	r1, [r5, #-104]!
9001752a:	462b      	mov	r3, r5
9001752c:	f001 f900 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017530:	b1d8      	cbz	r0, 9001756a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90017532:	280a      	cmp	r0, #10
90017534:	d012      	beq.n	9001755c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017536:	9804      	ldr	r0, [sp, #16]
90017538:	b180      	cbz	r0, 9001755c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001753a:	7b47      	ldrb	r7, [r0, #13]
9001753c:	88e2      	ldrh	r2, [r4, #6]
9001753e:	00fb      	lsls	r3, r7, #3
90017540:	f403 7180 	and.w	r1, r3, #256	; 0x100
90017544:	7a03      	ldrb	r3, [r0, #8]
90017546:	430b      	orrs	r3, r1
90017548:	0679      	lsls	r1, r7, #25
9001754a:	bf44      	itt	mi
9001754c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90017550:	b21b      	sxthmi	r3, r3
90017552:	1ad3      	subs	r3, r2, r3
90017554:	b21b      	sxth	r3, r3
90017556:	429e      	cmp	r6, r3
90017558:	bfa8      	it	ge
9001755a:	461e      	movge	r6, r3
9001755c:	462b      	mov	r3, r5
9001755e:	4622      	mov	r2, r4
90017560:	2100      	movs	r1, #0
90017562:	a805      	add	r0, sp, #20
90017564:	f001 f8e4 	bl	90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017568:	e7e2      	b.n	90017530 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001756a:	4630      	mov	r0, r6
9001756c:	b01e      	add	sp, #120	; 0x78
9001756e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017572:	b003      	add	sp, #12
90017574:	4770      	bx	lr

90017576 <_ZNK8touchgfx8Drawable10invalidateEv>:
90017576:	b513      	push	{r0, r1, r4, lr}
90017578:	6803      	ldr	r3, [r0, #0]
9001757a:	2400      	movs	r4, #0
9001757c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90017580:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017584:	f8ad 1004 	strh.w	r1, [sp, #4]
90017588:	4669      	mov	r1, sp
9001758a:	691b      	ldr	r3, [r3, #16]
9001758c:	9400      	str	r4, [sp, #0]
9001758e:	f8ad 2006 	strh.w	r2, [sp, #6]
90017592:	4798      	blx	r3
90017594:	b002      	add	sp, #8
90017596:	bd10      	pop	{r4, pc}

90017598 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90017598:	b538      	push	{r3, r4, r5, lr}
9001759a:	680b      	ldr	r3, [r1, #0]
9001759c:	460c      	mov	r4, r1
9001759e:	4605      	mov	r5, r0
900175a0:	68db      	ldr	r3, [r3, #12]
900175a2:	4798      	blx	r3
900175a4:	6823      	ldr	r3, [r4, #0]
900175a6:	4620      	mov	r0, r4
900175a8:	4629      	mov	r1, r5
900175aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900175ac:	4798      	blx	r3
900175ae:	4628      	mov	r0, r5
900175b0:	bd38      	pop	{r3, r4, r5, pc}

900175b2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900175b2:	b410      	push	{r4}
900175b4:	880a      	ldrh	r2, [r1, #0]
900175b6:	8884      	ldrh	r4, [r0, #4]
900175b8:	4422      	add	r2, r4
900175ba:	800a      	strh	r2, [r1, #0]
900175bc:	884a      	ldrh	r2, [r1, #2]
900175be:	88c4      	ldrh	r4, [r0, #6]
900175c0:	4422      	add	r2, r4
900175c2:	804a      	strh	r2, [r1, #2]
900175c4:	6940      	ldr	r0, [r0, #20]
900175c6:	b120      	cbz	r0, 900175d2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900175c8:	6803      	ldr	r3, [r0, #0]
900175ca:	f85d 4b04 	ldr.w	r4, [sp], #4
900175ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900175d0:	4718      	bx	r3
900175d2:	f85d 4b04 	ldr.w	r4, [sp], #4
900175d6:	4770      	bx	lr

900175d8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
900175d8:	b570      	push	{r4, r5, r6, lr}
900175da:	8882      	ldrh	r2, [r0, #4]
900175dc:	460c      	mov	r4, r1
900175de:	880b      	ldrh	r3, [r1, #0]
900175e0:	4605      	mov	r5, r0
900175e2:	4413      	add	r3, r2
900175e4:	800b      	strh	r3, [r1, #0]
900175e6:	884b      	ldrh	r3, [r1, #2]
900175e8:	88c2      	ldrh	r2, [r0, #6]
900175ea:	4413      	add	r3, r2
900175ec:	804b      	strh	r3, [r1, #2]
900175ee:	1d01      	adds	r1, r0, #4
900175f0:	4620      	mov	r0, r4
900175f2:	f7f9 fcf5 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
900175f6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900175fa:	2b00      	cmp	r3, #0
900175fc:	dd0b      	ble.n	90017616 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900175fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017602:	2b00      	cmp	r3, #0
90017604:	dd07      	ble.n	90017616 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017606:	6968      	ldr	r0, [r5, #20]
90017608:	b128      	cbz	r0, 90017616 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001760a:	6803      	ldr	r3, [r0, #0]
9001760c:	4621      	mov	r1, r4
9001760e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017614:	4718      	bx	r3
90017616:	bd70      	pop	{r4, r5, r6, pc}

90017618 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017618:	b570      	push	{r4, r5, r6, lr}
9001761a:	8882      	ldrh	r2, [r0, #4]
9001761c:	460c      	mov	r4, r1
9001761e:	880b      	ldrh	r3, [r1, #0]
90017620:	4605      	mov	r5, r0
90017622:	4413      	add	r3, r2
90017624:	800b      	strh	r3, [r1, #0]
90017626:	884b      	ldrh	r3, [r1, #2]
90017628:	88c2      	ldrh	r2, [r0, #6]
9001762a:	4413      	add	r3, r2
9001762c:	804b      	strh	r3, [r1, #2]
9001762e:	1d01      	adds	r1, r0, #4
90017630:	4620      	mov	r0, r4
90017632:	f7f9 fcd5 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90017636:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001763a:	2b00      	cmp	r3, #0
9001763c:	dd19      	ble.n	90017672 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001763e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017642:	2b00      	cmp	r3, #0
90017644:	dd15      	ble.n	90017672 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017646:	6968      	ldr	r0, [r5, #20]
90017648:	b128      	cbz	r0, 90017656 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001764a:	6803      	ldr	r3, [r0, #0]
9001764c:	4621      	mov	r1, r4
9001764e:	691b      	ldr	r3, [r3, #16]
90017650:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017654:	4718      	bx	r3
90017656:	4b07      	ldr	r3, [pc, #28]	; (90017674 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017658:	681b      	ldr	r3, [r3, #0]
9001765a:	3304      	adds	r3, #4
9001765c:	429d      	cmp	r5, r3
9001765e:	d108      	bne.n	90017672 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017660:	f7fe fee8 	bl	90016434 <_ZN8touchgfx11Application11getInstanceEv>
90017664:	6803      	ldr	r3, [r0, #0]
90017666:	6821      	ldr	r1, [r4, #0]
90017668:	6862      	ldr	r2, [r4, #4]
9001766a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001766c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017670:	4718      	bx	r3
90017672:	bd70      	pop	{r4, r5, r6, pc}
90017674:	24039748 	.word	0x24039748

90017678 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90017678:	b570      	push	{r4, r5, r6, lr}
9001767a:	4604      	mov	r4, r0
9001767c:	4616      	mov	r6, r2
9001767e:	460d      	mov	r5, r1
90017680:	b901      	cbnz	r1, 90017684 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90017682:	b192      	cbz	r2, 900176aa <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90017684:	6823      	ldr	r3, [r4, #0]
90017686:	4620      	mov	r0, r4
90017688:	699b      	ldr	r3, [r3, #24]
9001768a:	4798      	blx	r3
9001768c:	88e2      	ldrh	r2, [r4, #6]
9001768e:	88a1      	ldrh	r1, [r4, #4]
90017690:	4620      	mov	r0, r4
90017692:	4432      	add	r2, r6
90017694:	4429      	add	r1, r5
90017696:	b212      	sxth	r2, r2
90017698:	b209      	sxth	r1, r1
9001769a:	f7f9 ff77 	bl	9001158c <_ZN8touchgfx8Drawable5setXYEss>
9001769e:	6823      	ldr	r3, [r4, #0]
900176a0:	4620      	mov	r0, r4
900176a2:	699b      	ldr	r3, [r3, #24]
900176a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900176a8:	4718      	bx	r3
900176aa:	bd70      	pop	{r4, r5, r6, pc}

900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900176ac:	b510      	push	{r4, lr}
900176ae:	2300      	movs	r3, #0
900176b0:	4604      	mov	r4, r0
900176b2:	4608      	mov	r0, r1
900176b4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900176b8:	8023      	strh	r3, [r4, #0]
900176ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900176be:	8063      	strh	r3, [r4, #2]
900176c0:	6803      	ldr	r3, [r0, #0]
900176c2:	80a1      	strh	r1, [r4, #4]
900176c4:	4621      	mov	r1, r4
900176c6:	80e2      	strh	r2, [r4, #6]
900176c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900176ca:	4798      	blx	r3
900176cc:	4620      	mov	r0, r4
900176ce:	bd10      	pop	{r4, pc}

900176d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
900176d0:	b530      	push	{r4, r5, lr}
900176d2:	8083      	strh	r3, [r0, #4]
900176d4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
900176d8:	f89d 5018 	ldrb.w	r5, [sp, #24]
900176dc:	80c3      	strh	r3, [r0, #6]
900176de:	f89d 3010 	ldrb.w	r3, [sp, #16]
900176e2:	6141      	str	r1, [r0, #20]
900176e4:	7203      	strb	r3, [r0, #8]
900176e6:	f89d 3014 	ldrb.w	r3, [sp, #20]
900176ea:	8302      	strh	r2, [r0, #24]
900176ec:	7243      	strb	r3, [r0, #9]
900176ee:	7a83      	ldrb	r3, [r0, #10]
900176f0:	f365 0306 	bfi	r3, r5, #0, #7
900176f4:	f89d 501c 	ldrb.w	r5, [sp, #28]
900176f8:	f365 13c7 	bfi	r3, r5, #7, #1
900176fc:	7283      	strb	r3, [r0, #10]
900176fe:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017702:	72c3      	strb	r3, [r0, #11]
90017704:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
90017708:	7303      	strb	r3, [r0, #12]
9001770a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001770e:	81c3      	strh	r3, [r0, #14]
90017710:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90017714:	8203      	strh	r3, [r0, #16]
90017716:	4b01      	ldr	r3, [pc, #4]	; (9001771c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017718:	6003      	str	r3, [r0, #0]
9001771a:	bd30      	pop	{r4, r5, pc}
9001771c:	9002bb14 	.word	0x9002bb14

90017720 <_ZNK8touchgfx9ConstFont4findEt>:
90017720:	b5f0      	push	{r4, r5, r6, r7, lr}
90017722:	6944      	ldr	r4, [r0, #20]
90017724:	b3bc      	cbz	r4, 90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017726:	88a3      	ldrh	r3, [r4, #4]
90017728:	8b02      	ldrh	r2, [r0, #24]
9001772a:	1acb      	subs	r3, r1, r3
9001772c:	f102 32ff 	add.w	r2, r2, #4294967295
90017730:	d431      	bmi.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017732:	4293      	cmp	r3, r2
90017734:	dd0c      	ble.n	90017750 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90017736:	230e      	movs	r3, #14
90017738:	fb03 4302 	mla	r3, r3, r2, r4
9001773c:	889b      	ldrh	r3, [r3, #4]
9001773e:	1a5b      	subs	r3, r3, r1
90017740:	1ad3      	subs	r3, r2, r3
90017742:	429a      	cmp	r2, r3
90017744:	db27      	blt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017746:	2b00      	cmp	r3, #0
90017748:	bfbc      	itt	lt
9001774a:	2302      	movlt	r3, #2
9001774c:	fb92 f3f3 	sdivlt	r3, r2, r3
90017750:	2500      	movs	r5, #0
90017752:	260e      	movs	r6, #14
90017754:	4295      	cmp	r5, r2
90017756:	dc1e      	bgt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017758:	fb06 4003 	mla	r0, r6, r3, r4
9001775c:	8887      	ldrh	r7, [r0, #4]
9001775e:	42b9      	cmp	r1, r7
90017760:	d01a      	beq.n	90017798 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90017762:	d20d      	bcs.n	90017780 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90017764:	1e5a      	subs	r2, r3, #1
90017766:	4295      	cmp	r5, r2
90017768:	dc15      	bgt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001776a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001776e:	1a5b      	subs	r3, r3, r1
90017770:	1ad3      	subs	r3, r2, r3
90017772:	429a      	cmp	r2, r3
90017774:	db0f      	blt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017776:	429d      	cmp	r5, r3
90017778:	ddec      	ble.n	90017754 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001777a:	1953      	adds	r3, r2, r5
9001777c:	105b      	asrs	r3, r3, #1
9001777e:	e7e9      	b.n	90017754 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017780:	1c5d      	adds	r5, r3, #1
90017782:	42aa      	cmp	r2, r5
90017784:	db07      	blt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017786:	8a43      	ldrh	r3, [r0, #18]
90017788:	1acb      	subs	r3, r1, r3
9001778a:	442b      	add	r3, r5
9001778c:	429d      	cmp	r5, r3
9001778e:	dc02      	bgt.n	90017796 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017790:	429a      	cmp	r2, r3
90017792:	dadf      	bge.n	90017754 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017794:	e7f1      	b.n	9001777a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017796:	2000      	movs	r0, #0
90017798:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001779a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001779a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001779c:	4604      	mov	r4, r0
9001779e:	4617      	mov	r7, r2
900177a0:	461e      	mov	r6, r3
900177a2:	b911      	cbnz	r1, 900177aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
900177a4:	2500      	movs	r5, #0
900177a6:	4628      	mov	r0, r5
900177a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900177aa:	290a      	cmp	r1, #10
900177ac:	d0fa      	beq.n	900177a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900177ae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900177b2:	4291      	cmp	r1, r2
900177b4:	d0f6      	beq.n	900177a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900177b6:	f242 020b 	movw	r2, #8203	; 0x200b
900177ba:	4291      	cmp	r1, r2
900177bc:	d0f2      	beq.n	900177a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900177be:	f7ff ffaf 	bl	90017720 <_ZNK8touchgfx9ConstFont4findEt>
900177c2:	4605      	mov	r5, r0
900177c4:	b950      	cbnz	r0, 900177dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
900177c6:	6823      	ldr	r3, [r4, #0]
900177c8:	4620      	mov	r0, r4
900177ca:	691b      	ldr	r3, [r3, #16]
900177cc:	4798      	blx	r3
900177ce:	4601      	mov	r1, r0
900177d0:	4620      	mov	r0, r4
900177d2:	f7ff ffa5 	bl	90017720 <_ZNK8touchgfx9ConstFont4findEt>
900177d6:	4605      	mov	r5, r0
900177d8:	2800      	cmp	r0, #0
900177da:	d0e3      	beq.n	900177a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900177dc:	6823      	ldr	r3, [r4, #0]
900177de:	4629      	mov	r1, r5
900177e0:	4620      	mov	r0, r4
900177e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900177e4:	4798      	blx	r3
900177e6:	6038      	str	r0, [r7, #0]
900177e8:	6823      	ldr	r3, [r4, #0]
900177ea:	4620      	mov	r0, r4
900177ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900177ee:	4798      	blx	r3
900177f0:	7030      	strb	r0, [r6, #0]
900177f2:	e7d8      	b.n	900177a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

900177f4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
900177f4:	b538      	push	{r3, r4, r5, lr}
900177f6:	4605      	mov	r5, r0
900177f8:	f002 f936 	bl	90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
900177fc:	4604      	mov	r4, r0
900177fe:	4628      	mov	r0, r5
90017800:	f002 f876 	bl	900198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017804:	2800      	cmp	r0, #0
90017806:	bf14      	ite	ne
90017808:	2002      	movne	r0, #2
9001780a:	2000      	moveq	r0, #0
9001780c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90017810:	b280      	uxth	r0, r0
90017812:	bd38      	pop	{r3, r4, r5, pc}

90017814 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90017814:	b538      	push	{r3, r4, r5, lr}
90017816:	4605      	mov	r5, r0
90017818:	f002 f926 	bl	90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001781c:	4604      	mov	r4, r0
9001781e:	4628      	mov	r0, r5
90017820:	f002 f866 	bl	900198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017824:	2800      	cmp	r0, #0
90017826:	bf14      	ite	ne
90017828:	2002      	movne	r0, #2
9001782a:	2000      	moveq	r0, #0
9001782c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90017830:	f040 0001 	orr.w	r0, r0, #1
90017834:	b280      	uxth	r0, r0
90017836:	bd38      	pop	{r3, r4, r5, pc}

90017838 <_ZN8touchgfx4clzuEm>:
90017838:	4603      	mov	r3, r0
9001783a:	b1c8      	cbz	r0, 90017870 <_ZN8touchgfx4clzuEm+0x38>
9001783c:	0c02      	lsrs	r2, r0, #16
9001783e:	0412      	lsls	r2, r2, #16
90017840:	b9a2      	cbnz	r2, 9001786c <_ZN8touchgfx4clzuEm+0x34>
90017842:	0403      	lsls	r3, r0, #16
90017844:	2010      	movs	r0, #16
90017846:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001784a:	bf04      	itt	eq
9001784c:	021b      	lsleq	r3, r3, #8
9001784e:	3008      	addeq	r0, #8
90017850:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90017854:	bf04      	itt	eq
90017856:	011b      	lsleq	r3, r3, #4
90017858:	3004      	addeq	r0, #4
9001785a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
9001785e:	bf04      	itt	eq
90017860:	009b      	lsleq	r3, r3, #2
90017862:	3002      	addeq	r0, #2
90017864:	2b00      	cmp	r3, #0
90017866:	db04      	blt.n	90017872 <_ZN8touchgfx4clzuEm+0x3a>
90017868:	3001      	adds	r0, #1
9001786a:	4770      	bx	lr
9001786c:	2000      	movs	r0, #0
9001786e:	e7ea      	b.n	90017846 <_ZN8touchgfx4clzuEm+0xe>
90017870:	2020      	movs	r0, #32
90017872:	4770      	bx	lr

90017874 <_ZN8touchgfx7muldivuEmmmRm>:
90017874:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90017878:	460f      	mov	r7, r1
9001787a:	4615      	mov	r5, r2
9001787c:	461e      	mov	r6, r3
9001787e:	4601      	mov	r1, r0
90017880:	b100      	cbz	r0, 90017884 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90017882:	b927      	cbnz	r7, 9001788e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90017884:	2000      	movs	r0, #0
90017886:	6030      	str	r0, [r6, #0]
90017888:	b002      	add	sp, #8
9001788a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001788e:	f7ff ffd3 	bl	90017838 <_ZN8touchgfx4clzuEm>
90017892:	b980      	cbnz	r0, 900178b6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90017894:	4638      	mov	r0, r7
90017896:	f7ff ffcf 	bl	90017838 <_ZN8touchgfx4clzuEm>
9001789a:	2800      	cmp	r0, #0
9001789c:	dd05      	ble.n	900178aa <_ZN8touchgfx7muldivuEmmmRm+0x36>
9001789e:	4633      	mov	r3, r6
900178a0:	462a      	mov	r2, r5
900178a2:	4638      	mov	r0, r7
900178a4:	f7ff ffe6 	bl	90017874 <_ZN8touchgfx7muldivuEmmmRm>
900178a8:	e7ee      	b.n	90017888 <_ZN8touchgfx7muldivuEmmmRm+0x14>
900178aa:	f04f 33ff 	mov.w	r3, #4294967295
900178ae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900178b2:	6033      	str	r3, [r6, #0]
900178b4:	e7e8      	b.n	90017888 <_ZN8touchgfx7muldivuEmmmRm+0x14>
900178b6:	fa37 f800 	lsrs.w	r8, r7, r0
900178ba:	fb07 f301 	mul.w	r3, r7, r1
900178be:	d105      	bne.n	900178cc <_ZN8touchgfx7muldivuEmmmRm+0x58>
900178c0:	fbb3 f0f5 	udiv	r0, r3, r5
900178c4:	fb05 3510 	mls	r5, r5, r0, r3
900178c8:	6035      	str	r5, [r6, #0]
900178ca:	e7dd      	b.n	90017888 <_ZN8touchgfx7muldivuEmmmRm+0x14>
900178cc:	2301      	movs	r3, #1
900178ce:	fa01 fa00 	lsl.w	sl, r1, r0
900178d2:	462a      	mov	r2, r5
900178d4:	fa03 f000 	lsl.w	r0, r3, r0
900178d8:	4633      	mov	r3, r6
900178da:	fbba f9f5 	udiv	r9, sl, r5
900178de:	3801      	subs	r0, #1
900178e0:	fb08 f409 	mul.w	r4, r8, r9
900178e4:	4038      	ands	r0, r7
900178e6:	f7ff ffc5 	bl	90017874 <_ZN8touchgfx7muldivuEmmmRm>
900178ea:	462a      	mov	r2, r5
900178ec:	4607      	mov	r7, r0
900178ee:	ab01      	add	r3, sp, #4
900178f0:	fb05 a119 	mls	r1, r5, r9, sl
900178f4:	4640      	mov	r0, r8
900178f6:	f7ff ffbd 	bl	90017874 <_ZN8touchgfx7muldivuEmmmRm>
900178fa:	9b01      	ldr	r3, [sp, #4]
900178fc:	6832      	ldr	r2, [r6, #0]
900178fe:	441a      	add	r2, r3
90017900:	fbb2 f3f5 	udiv	r3, r2, r5
90017904:	441c      	add	r4, r3
90017906:	fb05 2513 	mls	r5, r5, r3, r2
9001790a:	443c      	add	r4, r7
9001790c:	4420      	add	r0, r4
9001790e:	e7db      	b.n	900178c8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90017910 <_ZN8touchgfx6muldivElllRl>:
90017910:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017912:	2800      	cmp	r0, #0
90017914:	461e      	mov	r6, r3
90017916:	bfba      	itte	lt
90017918:	4240      	neglt	r0, r0
9001791a:	f04f 34ff 	movlt.w	r4, #4294967295
9001791e:	2401      	movge	r4, #1
90017920:	2900      	cmp	r1, #0
90017922:	bfbc      	itt	lt
90017924:	4249      	neglt	r1, r1
90017926:	4264      	neglt	r4, r4
90017928:	2a00      	cmp	r2, #0
9001792a:	bfb6      	itet	lt
9001792c:	4265      	neglt	r5, r4
9001792e:	4625      	movge	r5, r4
90017930:	4252      	neglt	r2, r2
90017932:	4288      	cmp	r0, r1
90017934:	bfc2      	ittt	gt
90017936:	4603      	movgt	r3, r0
90017938:	4608      	movgt	r0, r1
9001793a:	4619      	movgt	r1, r3
9001793c:	ab01      	add	r3, sp, #4
9001793e:	f7ff ff99 	bl	90017874 <_ZN8touchgfx7muldivuEmmmRm>
90017942:	9b01      	ldr	r3, [sp, #4]
90017944:	4368      	muls	r0, r5
90017946:	435c      	muls	r4, r3
90017948:	6034      	str	r4, [r6, #0]
9001794a:	b002      	add	sp, #8
9001794c:	bd70      	pop	{r4, r5, r6, pc}

9001794e <_ZN8touchgfx6muldivElll>:
9001794e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017950:	4606      	mov	r6, r0
90017952:	ab01      	add	r3, sp, #4
90017954:	460d      	mov	r5, r1
90017956:	4614      	mov	r4, r2
90017958:	f7ff ffda 	bl	90017910 <_ZN8touchgfx6muldivElllRl>
9001795c:	2e00      	cmp	r6, #0
9001795e:	db20      	blt.n	900179a2 <_ZN8touchgfx6muldivElll+0x54>
90017960:	bf14      	ite	ne
90017962:	2301      	movne	r3, #1
90017964:	2300      	moveq	r3, #0
90017966:	2d00      	cmp	r5, #0
90017968:	db1e      	blt.n	900179a8 <_ZN8touchgfx6muldivElll+0x5a>
9001796a:	bf14      	ite	ne
9001796c:	2201      	movne	r2, #1
9001796e:	2200      	moveq	r2, #0
90017970:	2c00      	cmp	r4, #0
90017972:	fb03 f202 	mul.w	r2, r3, r2
90017976:	db1a      	blt.n	900179ae <_ZN8touchgfx6muldivElll+0x60>
90017978:	bf14      	ite	ne
9001797a:	2301      	movne	r3, #1
9001797c:	2300      	moveq	r3, #0
9001797e:	4353      	muls	r3, r2
90017980:	2b01      	cmp	r3, #1
90017982:	d117      	bne.n	900179b4 <_ZN8touchgfx6muldivElll+0x66>
90017984:	2c00      	cmp	r4, #0
90017986:	9b01      	ldr	r3, [sp, #4]
90017988:	bfb8      	it	lt
9001798a:	4264      	neglt	r4, r4
9001798c:	2b00      	cmp	r3, #0
9001798e:	f104 0401 	add.w	r4, r4, #1
90017992:	bfb8      	it	lt
90017994:	425b      	neglt	r3, r3
90017996:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001799a:	db00      	blt.n	9001799e <_ZN8touchgfx6muldivElll+0x50>
9001799c:	3001      	adds	r0, #1
9001799e:	b002      	add	sp, #8
900179a0:	bd70      	pop	{r4, r5, r6, pc}
900179a2:	f04f 33ff 	mov.w	r3, #4294967295
900179a6:	e7de      	b.n	90017966 <_ZN8touchgfx6muldivElll+0x18>
900179a8:	f04f 32ff 	mov.w	r2, #4294967295
900179ac:	e7e0      	b.n	90017970 <_ZN8touchgfx6muldivElll+0x22>
900179ae:	f04f 33ff 	mov.w	r3, #4294967295
900179b2:	e7e4      	b.n	9001797e <_ZN8touchgfx6muldivElll+0x30>
900179b4:	3301      	adds	r3, #1
900179b6:	d1f2      	bne.n	9001799e <_ZN8touchgfx6muldivElll+0x50>
900179b8:	9b01      	ldr	r3, [sp, #4]
900179ba:	2c00      	cmp	r4, #0
900179bc:	bfb8      	it	lt
900179be:	4264      	neglt	r4, r4
900179c0:	2b00      	cmp	r3, #0
900179c2:	bfb8      	it	lt
900179c4:	425b      	neglt	r3, r3
900179c6:	ebb3 0f64 	cmp.w	r3, r4, asr #1
900179ca:	bfc8      	it	gt
900179cc:	f100 30ff 	addgt.w	r0, r0, #4294967295
900179d0:	e7e5      	b.n	9001799e <_ZN8touchgfx6muldivElll+0x50>

900179d2 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
900179d2:	2000      	movs	r0, #0
900179d4:	4770      	bx	lr

900179d6 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
900179d6:	2001      	movs	r0, #1
900179d8:	4770      	bx	lr

900179da <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
900179da:	2002      	movs	r0, #2
900179dc:	4770      	bx	lr

900179de <_ZN8touchgfx6ScreenD1Ev>:
900179de:	4770      	bx	lr

900179e0 <_ZN8touchgfx6Screen11setupScreenEv>:
900179e0:	4770      	bx	lr

900179e2 <_ZN8touchgfx12GestureEventD1Ev>:
900179e2:	4770      	bx	lr

900179e4 <_ZN8touchgfx9DragEventD1Ev>:
900179e4:	4770      	bx	lr

900179e6 <_ZN8touchgfx10ClickEventD1Ev>:
900179e6:	4770      	bx	lr

900179e8 <_ZN8touchgfx10ClickEventD0Ev>:
900179e8:	b510      	push	{r4, lr}
900179ea:	4604      	mov	r4, r0
900179ec:	210c      	movs	r1, #12
900179ee:	f00f fe5f 	bl	900276b0 <_ZdlPvj>
900179f2:	4620      	mov	r0, r4
900179f4:	bd10      	pop	{r4, pc}

900179f6 <_ZN8touchgfx9DragEventD0Ev>:
900179f6:	b510      	push	{r4, lr}
900179f8:	4604      	mov	r4, r0
900179fa:	2110      	movs	r1, #16
900179fc:	f00f fe58 	bl	900276b0 <_ZdlPvj>
90017a00:	4620      	mov	r0, r4
90017a02:	bd10      	pop	{r4, pc}

90017a04 <_ZN8touchgfx12GestureEventD0Ev>:
90017a04:	b510      	push	{r4, lr}
90017a06:	4604      	mov	r4, r0
90017a08:	210c      	movs	r1, #12
90017a0a:	f00f fe51 	bl	900276b0 <_ZdlPvj>
90017a0e:	4620      	mov	r0, r4
90017a10:	bd10      	pop	{r4, pc}

90017a12 <_ZN8touchgfx6ScreenD0Ev>:
90017a12:	b510      	push	{r4, lr}
90017a14:	4604      	mov	r4, r0
90017a16:	213c      	movs	r1, #60	; 0x3c
90017a18:	f00f fe4a 	bl	900276b0 <_ZdlPvj>
90017a1c:	4620      	mov	r0, r4
90017a1e:	bd10      	pop	{r4, pc}

90017a20 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90017a20:	b530      	push	{r4, r5, lr}
90017a22:	460d      	mov	r5, r1
90017a24:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017a26:	b087      	sub	sp, #28
90017a28:	4604      	mov	r4, r0
90017a2a:	b301      	cbz	r1, 90017a6e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90017a2c:	a801      	add	r0, sp, #4
90017a2e:	f7ff fe3d 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017a32:	892a      	ldrh	r2, [r5, #8]
90017a34:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90017a38:	7928      	ldrb	r0, [r5, #4]
90017a3a:	1ad2      	subs	r2, r2, r3
90017a3c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90017a3e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90017a42:	441a      	add	r2, r3
90017a44:	896b      	ldrh	r3, [r5, #10]
90017a46:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90017a4a:	f88d 0010 	strb.w	r0, [sp, #16]
90017a4e:	1b5b      	subs	r3, r3, r5
90017a50:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90017a52:	6b20      	ldr	r0, [r4, #48]	; 0x30
90017a54:	442b      	add	r3, r5
90017a56:	4d07      	ldr	r5, [pc, #28]	; (90017a74 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90017a58:	f8ad 1012 	strh.w	r1, [sp, #18]
90017a5c:	a903      	add	r1, sp, #12
90017a5e:	9503      	str	r5, [sp, #12]
90017a60:	f8ad 2014 	strh.w	r2, [sp, #20]
90017a64:	f8ad 3016 	strh.w	r3, [sp, #22]
90017a68:	6803      	ldr	r3, [r0, #0]
90017a6a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017a6c:	4798      	blx	r3
90017a6e:	b007      	add	sp, #28
90017a70:	bd30      	pop	{r4, r5, pc}
90017a72:	bf00      	nop
90017a74:	9002bb9c 	.word	0x9002bb9c

90017a78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90017a78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017a7c:	6b03      	ldr	r3, [r0, #48]	; 0x30
90017a7e:	b08a      	sub	sp, #40	; 0x28
90017a80:	4604      	mov	r4, r0
90017a82:	460d      	mov	r5, r1
90017a84:	b113      	cbz	r3, 90017a8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90017a86:	790b      	ldrb	r3, [r1, #4]
90017a88:	2b00      	cmp	r3, #0
90017a8a:	d044      	beq.n	90017b16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017a8c:	f104 0804 	add.w	r8, r4, #4
90017a90:	a803      	add	r0, sp, #12
90017a92:	4641      	mov	r1, r8
90017a94:	f7ff fe0a 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017a98:	792b      	ldrb	r3, [r5, #4]
90017a9a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90017a9e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90017aa2:	b983      	cbnz	r3, 90017ac6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90017aa4:	f104 0336 	add.w	r3, r4, #54	; 0x36
90017aa8:	892a      	ldrh	r2, [r5, #8]
90017aaa:	88e9      	ldrh	r1, [r5, #6]
90017aac:	4640      	mov	r0, r8
90017aae:	1b92      	subs	r2, r2, r6
90017ab0:	9301      	str	r3, [sp, #4]
90017ab2:	1bc9      	subs	r1, r1, r7
90017ab4:	f104 0334 	add.w	r3, r4, #52	; 0x34
90017ab8:	b212      	sxth	r2, r2
90017aba:	9300      	str	r3, [sp, #0]
90017abc:	b209      	sxth	r1, r1
90017abe:	f104 0330 	add.w	r3, r4, #48	; 0x30
90017ac2:	f7f9 f9ab 	bl	90010e1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90017ac6:	6b21      	ldr	r1, [r4, #48]	; 0x30
90017ac8:	b329      	cbz	r1, 90017b16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017aca:	a805      	add	r0, sp, #20
90017acc:	f7ff fdee 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017ad0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90017ad4:	792b      	ldrb	r3, [r5, #4]
90017ad6:	a907      	add	r1, sp, #28
90017ad8:	1abf      	subs	r7, r7, r2
90017ada:	88ea      	ldrh	r2, [r5, #6]
90017adc:	6b20      	ldr	r0, [r4, #48]	; 0x30
90017ade:	4417      	add	r7, r2
90017ae0:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90017ae2:	f88d 3020 	strb.w	r3, [sp, #32]
90017ae6:	4417      	add	r7, r2
90017ae8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90017aec:	1ab6      	subs	r6, r6, r2
90017aee:	892a      	ldrh	r2, [r5, #8]
90017af0:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90017af4:	4416      	add	r6, r2
90017af6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017af8:	4416      	add	r6, r2
90017afa:	4a08      	ldr	r2, [pc, #32]	; (90017b1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90017afc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90017b00:	2600      	movs	r6, #0
90017b02:	9207      	str	r2, [sp, #28]
90017b04:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90017b08:	6803      	ldr	r3, [r0, #0]
90017b0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017b0c:	4798      	blx	r3
90017b0e:	792b      	ldrb	r3, [r5, #4]
90017b10:	b10b      	cbz	r3, 90017b16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017b12:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90017b16:	b00a      	add	sp, #40	; 0x28
90017b18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017b1c:	9002bb74 	.word	0x9002bb74

90017b20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90017b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017b24:	460c      	mov	r4, r1
90017b26:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017b28:	b088      	sub	sp, #32
90017b2a:	4605      	mov	r5, r0
90017b2c:	2900      	cmp	r1, #0
90017b2e:	d06d      	beq.n	90017c0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90017b30:	4668      	mov	r0, sp
90017b32:	f7ff fdbb 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017b36:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90017b38:	88e3      	ldrh	r3, [r4, #6]
90017b3a:	f9bd 8000 	ldrsh.w	r8, [sp]
90017b3e:	440b      	add	r3, r1
90017b40:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90017b44:	b21b      	sxth	r3, r3
90017b46:	4543      	cmp	r3, r8
90017b48:	db31      	blt.n	90017bae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017b4a:	f8bd c004 	ldrh.w	ip, [sp, #4]
90017b4e:	44c4      	add	ip, r8
90017b50:	fa0f fc8c 	sxth.w	ip, ip
90017b54:	4563      	cmp	r3, ip
90017b56:	da2a      	bge.n	90017bae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017b58:	8eea      	ldrh	r2, [r5, #54]	; 0x36
90017b5a:	8926      	ldrh	r6, [r4, #8]
90017b5c:	4416      	add	r6, r2
90017b5e:	b236      	sxth	r6, r6
90017b60:	42be      	cmp	r6, r7
90017b62:	db24      	blt.n	90017bae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017b64:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90017b68:	4438      	add	r0, r7
90017b6a:	b200      	sxth	r0, r0
90017b6c:	4286      	cmp	r6, r0
90017b6e:	da1e      	bge.n	90017bae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017b70:	8963      	ldrh	r3, [r4, #10]
90017b72:	4419      	add	r1, r3
90017b74:	b209      	sxth	r1, r1
90017b76:	4541      	cmp	r1, r8
90017b78:	db08      	blt.n	90017b8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017b7a:	4561      	cmp	r1, ip
90017b7c:	da06      	bge.n	90017b8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017b7e:	89a3      	ldrh	r3, [r4, #12]
90017b80:	441a      	add	r2, r3
90017b82:	b212      	sxth	r2, r2
90017b84:	42ba      	cmp	r2, r7
90017b86:	db01      	blt.n	90017b8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017b88:	4282      	cmp	r2, r0
90017b8a:	db10      	blt.n	90017bae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017b8c:	4b21      	ldr	r3, [pc, #132]	; (90017c14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90017b8e:	a904      	add	r1, sp, #16
90017b90:	6b28      	ldr	r0, [r5, #48]	; 0x30
90017b92:	9304      	str	r3, [sp, #16]
90017b94:	2302      	movs	r3, #2
90017b96:	f88d 3014 	strb.w	r3, [sp, #20]
90017b9a:	2300      	movs	r3, #0
90017b9c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017ba0:	f8ad 3018 	strh.w	r3, [sp, #24]
90017ba4:	f8ad 301a 	strh.w	r3, [sp, #26]
90017ba8:	6803      	ldr	r3, [r0, #0]
90017baa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017bac:	4798      	blx	r3
90017bae:	1d29      	adds	r1, r5, #4
90017bb0:	a802      	add	r0, sp, #8
90017bb2:	f7ff fd7b 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017bb6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017bba:	88e0      	ldrh	r0, [r4, #6]
90017bbc:	eba3 0808 	sub.w	r8, r3, r8
90017bc0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017bc4:	7921      	ldrb	r1, [r4, #4]
90017bc6:	fa1f f888 	uxth.w	r8, r8
90017bca:	1bdf      	subs	r7, r3, r7
90017bcc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90017bd0:	b2bb      	uxth	r3, r7
90017bd2:	4440      	add	r0, r8
90017bd4:	8922      	ldrh	r2, [r4, #8]
90017bd6:	8967      	ldrh	r7, [r4, #10]
90017bd8:	4460      	add	r0, ip
90017bda:	89a4      	ldrh	r4, [r4, #12]
90017bdc:	441a      	add	r2, r3
90017bde:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90017be0:	44b8      	add	r8, r7
90017be2:	4423      	add	r3, r4
90017be4:	f8ad 0016 	strh.w	r0, [sp, #22]
90017be8:	4432      	add	r2, r6
90017bea:	44e0      	add	r8, ip
90017bec:	4433      	add	r3, r6
90017bee:	4c0a      	ldr	r4, [pc, #40]	; (90017c18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90017bf0:	6b28      	ldr	r0, [r5, #48]	; 0x30
90017bf2:	f88d 1014 	strb.w	r1, [sp, #20]
90017bf6:	a904      	add	r1, sp, #16
90017bf8:	9404      	str	r4, [sp, #16]
90017bfa:	f8ad 2018 	strh.w	r2, [sp, #24]
90017bfe:	f8ad 801a 	strh.w	r8, [sp, #26]
90017c02:	f8ad 301c 	strh.w	r3, [sp, #28]
90017c06:	6803      	ldr	r3, [r0, #0]
90017c08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017c0a:	4798      	blx	r3
90017c0c:	b008      	add	sp, #32
90017c0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017c12:	bf00      	nop
90017c14:	9002bb74 	.word	0x9002bb74
90017c18:	9002bb88 	.word	0x9002bb88

90017c1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90017c1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
90017c1e:	4604      	mov	r4, r0
90017c20:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90017c24:	3201      	adds	r2, #1
90017c26:	d112      	bne.n	90017c4e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90017c28:	2500      	movs	r5, #0
90017c2a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90017c2e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017c32:	6803      	ldr	r3, [r0, #0]
90017c34:	9500      	str	r5, [sp, #0]
90017c36:	466d      	mov	r5, sp
90017c38:	f8ad 1004 	strh.w	r1, [sp, #4]
90017c3c:	f8ad 2006 	strh.w	r2, [sp, #6]
90017c40:	4629      	mov	r1, r5
90017c42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017c44:	4798      	blx	r3
90017c46:	e895 0003 	ldmia.w	r5, {r0, r1}
90017c4a:	e884 0003 	stmia.w	r4, {r0, r1}
90017c4e:	4620      	mov	r0, r4
90017c50:	b003      	add	sp, #12
90017c52:	bd30      	pop	{r4, r5, pc}

90017c54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90017c54:	b513      	push	{r0, r1, r4, lr}
90017c56:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90017c5a:	4604      	mov	r4, r0
90017c5c:	3301      	adds	r3, #1
90017c5e:	d109      	bne.n	90017c74 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90017c60:	4601      	mov	r1, r0
90017c62:	4668      	mov	r0, sp
90017c64:	f7ff fd22 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017c68:	f8bd 3000 	ldrh.w	r3, [sp]
90017c6c:	8423      	strh	r3, [r4, #32]
90017c6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017c72:	8463      	strh	r3, [r4, #34]	; 0x22
90017c74:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90017c78:	b002      	add	sp, #8
90017c7a:	bd10      	pop	{r4, pc}

90017c7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90017c7c:	b513      	push	{r0, r1, r4, lr}
90017c7e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90017c82:	4604      	mov	r4, r0
90017c84:	3301      	adds	r3, #1
90017c86:	d109      	bne.n	90017c9c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90017c88:	4601      	mov	r1, r0
90017c8a:	4668      	mov	r0, sp
90017c8c:	f7ff fd0e 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017c90:	f8bd 3000 	ldrh.w	r3, [sp]
90017c94:	8423      	strh	r3, [r4, #32]
90017c96:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017c9a:	8463      	strh	r3, [r4, #34]	; 0x22
90017c9c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90017ca0:	b002      	add	sp, #8
90017ca2:	bd10      	pop	{r4, pc}

90017ca4 <_ZN8touchgfx6ScreenC1Ev>:
90017ca4:	b570      	push	{r4, r5, r6, lr}
90017ca6:	4b17      	ldr	r3, [pc, #92]	; (90017d04 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90017ca8:	4605      	mov	r5, r0
90017caa:	4a17      	ldr	r2, [pc, #92]	; (90017d08 <_ZN8touchgfx6ScreenC1Ev+0x64>)
90017cac:	2101      	movs	r1, #1
90017cae:	f845 3b04 	str.w	r3, [r5], #4
90017cb2:	2300      	movs	r3, #0
90017cb4:	6042      	str	r2, [r0, #4]
90017cb6:	4604      	mov	r4, r0
90017cb8:	8103      	strh	r3, [r0, #8]
90017cba:	8143      	strh	r3, [r0, #10]
90017cbc:	8183      	strh	r3, [r0, #12]
90017cbe:	81c3      	strh	r3, [r0, #14]
90017cc0:	8203      	strh	r3, [r0, #16]
90017cc2:	8243      	strh	r3, [r0, #18]
90017cc4:	8283      	strh	r3, [r0, #20]
90017cc6:	82c3      	strh	r3, [r0, #22]
90017cc8:	6203      	str	r3, [r0, #32]
90017cca:	8483      	strh	r3, [r0, #36]	; 0x24
90017ccc:	84c3      	strh	r3, [r0, #38]	; 0x26
90017cce:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90017cd2:	6343      	str	r3, [r0, #52]	; 0x34
90017cd4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90017cd8:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90017cdc:	e9c0 3306 	strd	r3, r3, [r0, #24]
90017ce0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90017ce4:	4b09      	ldr	r3, [pc, #36]	; (90017d0c <_ZN8touchgfx6ScreenC1Ev+0x68>)
90017ce6:	4628      	mov	r0, r5
90017ce8:	f9b3 6000 	ldrsh.w	r6, [r3]
90017cec:	6b93      	ldr	r3, [r2, #56]	; 0x38
90017cee:	4a08      	ldr	r2, [pc, #32]	; (90017d10 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90017cf0:	f9b2 1000 	ldrsh.w	r1, [r2]
90017cf4:	4798      	blx	r3
90017cf6:	6863      	ldr	r3, [r4, #4]
90017cf8:	4628      	mov	r0, r5
90017cfa:	4631      	mov	r1, r6
90017cfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90017cfe:	4798      	blx	r3
90017d00:	4620      	mov	r0, r4
90017d02:	bd70      	pop	{r4, r5, r6, pc}
90017d04:	9002bbb0 	.word	0x9002bbb0
90017d08:	9002b488 	.word	0x9002b488
90017d0c:	240396fa 	.word	0x240396fa
90017d10:	240396f8 	.word	0x240396f8

90017d14 <_ZN8touchgfx6Screen4drawEv>:
90017d14:	4b09      	ldr	r3, [pc, #36]	; (90017d3c <_ZN8touchgfx6Screen4drawEv+0x28>)
90017d16:	b507      	push	{r0, r1, r2, lr}
90017d18:	f9b3 2000 	ldrsh.w	r2, [r3]
90017d1c:	2100      	movs	r1, #0
90017d1e:	4b08      	ldr	r3, [pc, #32]	; (90017d40 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90017d20:	9100      	str	r1, [sp, #0]
90017d22:	4669      	mov	r1, sp
90017d24:	f9b3 3000 	ldrsh.w	r3, [r3]
90017d28:	f8ad 2004 	strh.w	r2, [sp, #4]
90017d2c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017d30:	6803      	ldr	r3, [r0, #0]
90017d32:	689b      	ldr	r3, [r3, #8]
90017d34:	4798      	blx	r3
90017d36:	b003      	add	sp, #12
90017d38:	f85d fb04 	ldr.w	pc, [sp], #4
90017d3c:	240396f8 	.word	0x240396f8
90017d40:	240396fa 	.word	0x240396fa

90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90017d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017d48:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90017d4c:	b089      	sub	sp, #36	; 0x24
90017d4e:	4680      	mov	r8, r0
90017d50:	460c      	mov	r4, r1
90017d52:	2b00      	cmp	r3, #0
90017d54:	4615      	mov	r5, r2
90017d56:	dd0e      	ble.n	90017d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017d58:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90017d5c:	2b00      	cmp	r3, #0
90017d5e:	dd0a      	ble.n	90017d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017d60:	4628      	mov	r0, r5
90017d62:	f7ff ff5b 	bl	90017c1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017d66:	4621      	mov	r1, r4
90017d68:	f7fe fa85 	bl	90016276 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017d6c:	69eb      	ldr	r3, [r5, #28]
90017d6e:	b928      	cbnz	r0, 90017d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90017d70:	461d      	mov	r5, r3
90017d72:	2b00      	cmp	r3, #0
90017d74:	d1f4      	bne.n	90017d60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90017d76:	b009      	add	sp, #36	; 0x24
90017d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017d7c:	ae04      	add	r6, sp, #16
90017d7e:	2b00      	cmp	r3, #0
90017d80:	f000 80b5 	beq.w	90017eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017d84:	682b      	ldr	r3, [r5, #0]
90017d86:	4629      	mov	r1, r5
90017d88:	a802      	add	r0, sp, #8
90017d8a:	68db      	ldr	r3, [r3, #12]
90017d8c:	4798      	blx	r3
90017d8e:	4628      	mov	r0, r5
90017d90:	f7ff ff60 	bl	90017c54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017d94:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90017d98:	4407      	add	r7, r0
90017d9a:	4628      	mov	r0, r5
90017d9c:	f7ff ff6e 	bl	90017c7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017da0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017da4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90017da8:	b23f      	sxth	r7, r7
90017daa:	4418      	add	r0, r3
90017dac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90017db0:	4621      	mov	r1, r4
90017db2:	f8ad 2014 	strh.w	r2, [sp, #20]
90017db6:	f8ad 0012 	strh.w	r0, [sp, #18]
90017dba:	4630      	mov	r0, r6
90017dbc:	f8ad 3016 	strh.w	r3, [sp, #22]
90017dc0:	f8ad 7010 	strh.w	r7, [sp, #16]
90017dc4:	f7f9 f90c 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90017dc8:	4628      	mov	r0, r5
90017dca:	f7ff ff27 	bl	90017c1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017dce:	ab06      	add	r3, sp, #24
90017dd0:	4602      	mov	r2, r0
90017dd2:	e896 0003 	ldmia.w	r6, {r0, r1}
90017dd6:	e883 0003 	stmia.w	r3, {r0, r1}
90017dda:	4611      	mov	r1, r2
90017ddc:	4618      	mov	r0, r3
90017dde:	f7f9 f8ff 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90017de2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017de6:	f9b4 1000 	ldrsh.w	r1, [r4]
90017dea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90017dee:	4299      	cmp	r1, r3
90017df0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90017df4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90017df8:	d10b      	bne.n	90017e12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017dfa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017dfe:	4552      	cmp	r2, sl
90017e00:	d107      	bne.n	90017e12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017e02:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90017e06:	455a      	cmp	r2, fp
90017e08:	d103      	bne.n	90017e12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017e0a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90017e0e:	454a      	cmp	r2, r9
90017e10:	d06d      	beq.n	90017eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017e12:	f1bb 0f00 	cmp.w	fp, #0
90017e16:	dd65      	ble.n	90017ee4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90017e18:	f1b9 0f00 	cmp.w	r9, #0
90017e1c:	dd62      	ble.n	90017ee4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90017e1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017e22:	fa1f f08a 	uxth.w	r0, sl
90017e26:	4552      	cmp	r2, sl
90017e28:	9000      	str	r0, [sp, #0]
90017e2a:	da12      	bge.n	90017e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90017e2c:	9301      	str	r3, [sp, #4]
90017e2e:	9b00      	ldr	r3, [sp, #0]
90017e30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017e34:	f8ad 2012 	strh.w	r2, [sp, #18]
90017e38:	1a9a      	subs	r2, r3, r2
90017e3a:	f8ad 1010 	strh.w	r1, [sp, #16]
90017e3e:	4631      	mov	r1, r6
90017e40:	f8ad 0014 	strh.w	r0, [sp, #20]
90017e44:	4640      	mov	r0, r8
90017e46:	f8ad 2016 	strh.w	r2, [sp, #22]
90017e4a:	69ea      	ldr	r2, [r5, #28]
90017e4c:	f7ff ff7a 	bl	90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017e50:	9b01      	ldr	r3, [sp, #4]
90017e52:	f9b4 2000 	ldrsh.w	r2, [r4]
90017e56:	b29f      	uxth	r7, r3
90017e58:	429a      	cmp	r2, r3
90017e5a:	da0d      	bge.n	90017e78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90017e5c:	f8ad 2010 	strh.w	r2, [sp, #16]
90017e60:	1aba      	subs	r2, r7, r2
90017e62:	f8ad a012 	strh.w	sl, [sp, #18]
90017e66:	4631      	mov	r1, r6
90017e68:	f8ad 2014 	strh.w	r2, [sp, #20]
90017e6c:	4640      	mov	r0, r8
90017e6e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017e72:	69ea      	ldr	r2, [r5, #28]
90017e74:	f7ff ff66 	bl	90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017e78:	8822      	ldrh	r2, [r4, #0]
90017e7a:	445f      	add	r7, fp
90017e7c:	88a3      	ldrh	r3, [r4, #4]
90017e7e:	b2bf      	uxth	r7, r7
90017e80:	4413      	add	r3, r2
90017e82:	b23a      	sxth	r2, r7
90017e84:	b29b      	uxth	r3, r3
90017e86:	b219      	sxth	r1, r3
90017e88:	4291      	cmp	r1, r2
90017e8a:	dd0d      	ble.n	90017ea8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90017e8c:	1bdb      	subs	r3, r3, r7
90017e8e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017e92:	f8ad a012 	strh.w	sl, [sp, #18]
90017e96:	4631      	mov	r1, r6
90017e98:	f8ad 3014 	strh.w	r3, [sp, #20]
90017e9c:	4640      	mov	r0, r8
90017e9e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017ea2:	69ea      	ldr	r2, [r5, #28]
90017ea4:	f7ff ff4e 	bl	90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017ea8:	88e2      	ldrh	r2, [r4, #6]
90017eaa:	8863      	ldrh	r3, [r4, #2]
90017eac:	4413      	add	r3, r2
90017eae:	9a00      	ldr	r2, [sp, #0]
90017eb0:	444a      	add	r2, r9
90017eb2:	b29b      	uxth	r3, r3
90017eb4:	fa1f f982 	uxth.w	r9, r2
90017eb8:	b219      	sxth	r1, r3
90017eba:	fa0f f289 	sxth.w	r2, r9
90017ebe:	428a      	cmp	r2, r1
90017ec0:	da15      	bge.n	90017eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017ec2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90017ec6:	eba3 0309 	sub.w	r3, r3, r9
90017eca:	f9b4 0000 	ldrsh.w	r0, [r4]
90017ece:	f8ad 1014 	strh.w	r1, [sp, #20]
90017ed2:	4631      	mov	r1, r6
90017ed4:	f8ad 0010 	strh.w	r0, [sp, #16]
90017ed8:	f8ad 2012 	strh.w	r2, [sp, #18]
90017edc:	f8ad 3016 	strh.w	r3, [sp, #22]
90017ee0:	69ea      	ldr	r2, [r5, #28]
90017ee2:	e001      	b.n	90017ee8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90017ee4:	69ea      	ldr	r2, [r5, #28]
90017ee6:	4621      	mov	r1, r4
90017ee8:	4640      	mov	r0, r8
90017eea:	f7ff ff2b 	bl	90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017eee:	4628      	mov	r0, r5
90017ef0:	f7ff fe94 	bl	90017c1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017ef4:	6861      	ldr	r1, [r4, #4]
90017ef6:	4602      	mov	r2, r0
90017ef8:	4633      	mov	r3, r6
90017efa:	6820      	ldr	r0, [r4, #0]
90017efc:	c303      	stmia	r3!, {r0, r1}
90017efe:	4611      	mov	r1, r2
90017f00:	4630      	mov	r0, r6
90017f02:	f7f9 f86d 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90017f06:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90017f0a:	2b00      	cmp	r3, #0
90017f0c:	f77f af33 	ble.w	90017d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017f10:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017f14:	2b00      	cmp	r3, #0
90017f16:	f77f af2e 	ble.w	90017d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017f1a:	4628      	mov	r0, r5
90017f1c:	f7ff fe9a 	bl	90017c54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017f20:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90017f24:	1a18      	subs	r0, r3, r0
90017f26:	f8ad 0010 	strh.w	r0, [sp, #16]
90017f2a:	4628      	mov	r0, r5
90017f2c:	f7ff fea6 	bl	90017c7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017f30:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90017f34:	4631      	mov	r1, r6
90017f36:	1a18      	subs	r0, r3, r0
90017f38:	f8ad 0012 	strh.w	r0, [sp, #18]
90017f3c:	4628      	mov	r0, r5
90017f3e:	682b      	ldr	r3, [r5, #0]
90017f40:	689b      	ldr	r3, [r3, #8]
90017f42:	4798      	blx	r3
90017f44:	e717      	b.n	90017d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90017f46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90017f46:	b570      	push	{r4, r5, r6, lr}
90017f48:	1d06      	adds	r6, r0, #4
90017f4a:	b086      	sub	sp, #24
90017f4c:	460c      	mov	r4, r1
90017f4e:	2300      	movs	r3, #0
90017f50:	4631      	mov	r1, r6
90017f52:	4605      	mov	r5, r0
90017f54:	a802      	add	r0, sp, #8
90017f56:	9301      	str	r3, [sp, #4]
90017f58:	f7ff fba8 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017f5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017f60:	8822      	ldrh	r2, [r4, #0]
90017f62:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90017f66:	1ad2      	subs	r2, r2, r3
90017f68:	8863      	ldrh	r3, [r4, #2]
90017f6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017f6e:	1a5b      	subs	r3, r3, r1
90017f70:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90017f74:	f8ad 2010 	strh.w	r2, [sp, #16]
90017f78:	aa01      	add	r2, sp, #4
90017f7a:	f8ad 0014 	strh.w	r0, [sp, #20]
90017f7e:	4630      	mov	r0, r6
90017f80:	f8ad 1016 	strh.w	r1, [sp, #22]
90017f84:	a904      	add	r1, sp, #16
90017f86:	f8ad 3012 	strh.w	r3, [sp, #18]
90017f8a:	f7f9 f901 	bl	90011190 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90017f8e:	9a01      	ldr	r2, [sp, #4]
90017f90:	b11a      	cbz	r2, 90017f9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90017f92:	4621      	mov	r1, r4
90017f94:	4628      	mov	r0, r5
90017f96:	f7ff fed5 	bl	90017d44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017f9a:	b006      	add	sp, #24
90017f9c:	bd70      	pop	{r4, r5, r6, pc}

90017f9e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90017f9e:	4602      	mov	r2, r0
90017fa0:	b530      	push	{r4, r5, lr}
90017fa2:	4604      	mov	r4, r0
90017fa4:	b085      	sub	sp, #20
90017fa6:	f852 0f08 	ldr.w	r0, [r2, #8]!
90017faa:	460d      	mov	r5, r1
90017fac:	466b      	mov	r3, sp
90017fae:	6851      	ldr	r1, [r2, #4]
90017fb0:	c303      	stmia	r3!, {r0, r1}
90017fb2:	4629      	mov	r1, r5
90017fb4:	4668      	mov	r0, sp
90017fb6:	f7f9 f813 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
90017fba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017fbe:	b12b      	cbz	r3, 90017fcc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90017fc0:	4669      	mov	r1, sp
90017fc2:	4620      	mov	r0, r4
90017fc4:	f7ff ffbf 	bl	90017f46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90017fc8:	b005      	add	sp, #20
90017fca:	bd30      	pop	{r4, r5, pc}
90017fcc:	3404      	adds	r4, #4
90017fce:	a802      	add	r0, sp, #8
90017fd0:	4621      	mov	r1, r4
90017fd2:	f7ff fb6b 	bl	900176ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017fd6:	f8bd 3000 	ldrh.w	r3, [sp]
90017fda:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90017fde:	4669      	mov	r1, sp
90017fe0:	4620      	mov	r0, r4
90017fe2:	1a9b      	subs	r3, r3, r2
90017fe4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90017fe8:	f8ad 3000 	strh.w	r3, [sp]
90017fec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017ff0:	1a9b      	subs	r3, r3, r2
90017ff2:	f8ad 3002 	strh.w	r3, [sp, #2]
90017ff6:	f7f9 f892 	bl	9001111e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90017ffa:	e7e5      	b.n	90017fc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90017ffc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90017ffc:	460b      	mov	r3, r1
90017ffe:	680a      	ldr	r2, [r1, #0]
90018000:	1d01      	adds	r1, r0, #4
90018002:	6992      	ldr	r2, [r2, #24]
90018004:	4618      	mov	r0, r3
90018006:	4710      	bx	r2

90018008 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90018008:	4298      	cmp	r0, r3
9001800a:	d200      	bcs.n	9001800e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001800c:	b913      	cbnz	r3, 90018014 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001800e:	440a      	add	r2, r1
90018010:	b210      	sxth	r0, r2
90018012:	4770      	bx	lr
90018014:	ee07 0a90 	vmov	s15, r0
90018018:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001801c:	ee07 3a90 	vmov	s15, r3
90018020:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018024:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90018028:	ee07 2a90 	vmov	s15, r2
9001802c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018030:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90018034:	ee07 1a90 	vmov	s15, r1
90018038:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001803c:	ee37 7a66 	vsub.f32	s14, s14, s13
90018040:	ee67 5a07 	vmul.f32	s11, s14, s14
90018044:	eee5 6a87 	vfma.f32	s13, s11, s14
90018048:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9001804c:	eee6 7a26 	vfma.f32	s15, s12, s13
90018050:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90018054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018058:	bfcc      	ite	gt
9001805a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
9001805e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90018062:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90018066:	ee17 3a90 	vmov	r3, s15
9001806a:	b218      	sxth	r0, r3
9001806c:	4770      	bx	lr

9001806e <_ZN8touchgfx12TextProviderC1Ev>:
9001806e:	b538      	push	{r3, r4, r5, lr}
90018070:	2500      	movs	r5, #0
90018072:	2302      	movs	r3, #2
90018074:	4604      	mov	r4, r0
90018076:	220e      	movs	r2, #14
90018078:	7403      	strb	r3, [r0, #16]
9001807a:	4629      	mov	r1, r5
9001807c:	6145      	str	r5, [r0, #20]
9001807e:	7605      	strb	r5, [r0, #24]
90018080:	83c5      	strh	r5, [r0, #30]
90018082:	8405      	strh	r5, [r0, #32]
90018084:	86c5      	strh	r5, [r0, #54]	; 0x36
90018086:	8705      	strh	r5, [r0, #56]	; 0x38
90018088:	87c5      	strh	r5, [r0, #62]	; 0x3e
9001808a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
9001808e:	e9c0 5500 	strd	r5, r5, [r0]
90018092:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90018096:	304c      	adds	r0, #76	; 0x4c
90018098:	f00f fdc0 	bl	90027c1c <memset>
9001809c:	2301      	movs	r3, #1
9001809e:	4620      	mov	r0, r4
900180a0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
900180a4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900180a8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
900180ac:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
900180b0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
900180b4:	f7ec f868 	bl	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>
900180b8:	4620      	mov	r0, r4
900180ba:	bd38      	pop	{r3, r4, r5, pc}

900180bc <_ZN8touchgfx12TextProvider11endOfStringEv>:
900180bc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900180be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900180c2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
900180c4:	fab0 f080 	clz	r0, r0
900180c8:	0940      	lsrs	r0, r0, #5
900180ca:	4770      	bx	lr

900180cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900180cc:	b530      	push	{r4, r5, lr}
900180ce:	2500      	movs	r5, #0
900180d0:	2401      	movs	r4, #1
900180d2:	6843      	ldr	r3, [r0, #4]
900180d4:	b913      	cbnz	r3, 900180dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
900180d6:	6803      	ldr	r3, [r0, #0]
900180d8:	b313      	cbz	r3, 90018120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900180da:	6043      	str	r3, [r0, #4]
900180dc:	7e03      	ldrb	r3, [r0, #24]
900180de:	b143      	cbz	r3, 900180f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
900180e0:	6943      	ldr	r3, [r0, #20]
900180e2:	b12b      	cbz	r3, 900180f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900180e4:	881a      	ldrh	r2, [r3, #0]
900180e6:	b11a      	cbz	r2, 900180f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
900180e8:	1c9a      	adds	r2, r3, #2
900180ea:	6142      	str	r2, [r0, #20]
900180ec:	8818      	ldrh	r0, [r3, #0]
900180ee:	bd30      	pop	{r4, r5, pc}
900180f0:	7605      	strb	r5, [r0, #24]
900180f2:	6843      	ldr	r3, [r0, #4]
900180f4:	8819      	ldrh	r1, [r3, #0]
900180f6:	b199      	cbz	r1, 90018120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
900180f8:	1c9a      	adds	r2, r3, #2
900180fa:	2902      	cmp	r1, #2
900180fc:	6042      	str	r2, [r0, #4]
900180fe:	d1f5      	bne.n	900180ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90018100:	7c03      	ldrb	r3, [r0, #16]
90018102:	2b01      	cmp	r3, #1
90018104:	d8e5      	bhi.n	900180d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018106:	1c5a      	adds	r2, r3, #1
90018108:	3302      	adds	r3, #2
9001810a:	7402      	strb	r2, [r0, #16]
9001810c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90018110:	6143      	str	r3, [r0, #20]
90018112:	2b00      	cmp	r3, #0
90018114:	d0dd      	beq.n	900180d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018116:	881b      	ldrh	r3, [r3, #0]
90018118:	2b00      	cmp	r3, #0
9001811a:	d0da      	beq.n	900180d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001811c:	7604      	strb	r4, [r0, #24]
9001811e:	e7d8      	b.n	900180d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018120:	2000      	movs	r0, #0
90018122:	e7e4      	b.n	900180ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018124:	6001      	str	r1, [r0, #0]
90018126:	2100      	movs	r1, #0
90018128:	b430      	push	{r4, r5}
9001812a:	6041      	str	r1, [r0, #4]
9001812c:	6815      	ldr	r5, [r2, #0]
9001812e:	6085      	str	r5, [r0, #8]
90018130:	6852      	ldr	r2, [r2, #4]
90018132:	6443      	str	r3, [r0, #68]	; 0x44
90018134:	9b02      	ldr	r3, [sp, #8]
90018136:	60c2      	str	r2, [r0, #12]
90018138:	7401      	strb	r1, [r0, #16]
9001813a:	6141      	str	r1, [r0, #20]
9001813c:	7601      	strb	r1, [r0, #24]
9001813e:	8701      	strh	r1, [r0, #56]	; 0x38
90018140:	8401      	strh	r1, [r0, #32]
90018142:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90018146:	6483      	str	r3, [r0, #72]	; 0x48
90018148:	bc30      	pop	{r4, r5}
9001814a:	f7ec b81d 	b.w	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001814e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001814e:	b408      	push	{r3}
90018150:	b510      	push	{r4, lr}
90018152:	b085      	sub	sp, #20
90018154:	ac07      	add	r4, sp, #28
90018156:	f854 3b04 	ldr.w	r3, [r4], #4
9001815a:	9300      	str	r3, [sp, #0]
9001815c:	4613      	mov	r3, r2
9001815e:	4622      	mov	r2, r4
90018160:	9403      	str	r4, [sp, #12]
90018162:	f7ff ffdf 	bl	90018124 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018166:	b005      	add	sp, #20
90018168:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001816c:	b001      	add	sp, #4
9001816e:	4770      	bx	lr

90018170 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90018170:	b5f0      	push	{r4, r5, r6, r7, lr}
90018172:	4605      	mov	r5, r0
90018174:	4608      	mov	r0, r1
90018176:	b1f1      	cbz	r1, 900181b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90018178:	f105 044c 	add.w	r4, r5, #76	; 0x4c
9001817c:	460b      	mov	r3, r1
9001817e:	f101 0708 	add.w	r7, r1, #8
90018182:	4622      	mov	r2, r4
90018184:	6818      	ldr	r0, [r3, #0]
90018186:	3308      	adds	r3, #8
90018188:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001818c:	4626      	mov	r6, r4
9001818e:	42bb      	cmp	r3, r7
90018190:	c603      	stmia	r6!, {r0, r1}
90018192:	4634      	mov	r4, r6
90018194:	d1f6      	bne.n	90018184 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90018196:	6818      	ldr	r0, [r3, #0]
90018198:	6030      	str	r0, [r6, #0]
9001819a:	4610      	mov	r0, r2
9001819c:	889b      	ldrh	r3, [r3, #4]
9001819e:	80b3      	strh	r3, [r6, #4]
900181a0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
900181a4:	015b      	lsls	r3, r3, #5
900181a6:	f403 7180 	and.w	r1, r3, #256	; 0x100
900181aa:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
900181ae:	430b      	orrs	r3, r1
900181b0:	425b      	negs	r3, r3
900181b2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
900181b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900181b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900181b8:	b538      	push	{r3, r4, r5, lr}
900181ba:	460c      	mov	r4, r1
900181bc:	6811      	ldr	r1, [r2, #0]
900181be:	4610      	mov	r0, r2
900181c0:	68cd      	ldr	r5, [r1, #12]
900181c2:	4619      	mov	r1, r3
900181c4:	47a8      	blx	r5
900181c6:	2800      	cmp	r0, #0
900181c8:	bf08      	it	eq
900181ca:	4620      	moveq	r0, r4
900181cc:	bd38      	pop	{r3, r4, r5, pc}
	...

900181d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900181d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900181d2:	4604      	mov	r4, r0
900181d4:	4615      	mov	r5, r2
900181d6:	4608      	mov	r0, r1
900181d8:	b93a      	cbnz	r2, 900181ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
900181da:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
900181de:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
900181e2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
900181e6:	4628      	mov	r0, r5
900181e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900181ea:	f892 c00d 	ldrb.w	ip, [r2, #13]
900181ee:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
900181f2:	8893      	ldrh	r3, [r2, #4]
900181f4:	ea4f 160c 	mov.w	r6, ip, lsl #4
900181f8:	f406 7280 	and.w	r2, r6, #256	; 0x100
900181fc:	79ee      	ldrb	r6, [r5, #7]
900181fe:	4316      	orrs	r6, r2
90018200:	19da      	adds	r2, r3, r7
90018202:	b291      	uxth	r1, r2
90018204:	b2b7      	uxth	r7, r6
90018206:	291d      	cmp	r1, #29
90018208:	d87b      	bhi.n	90018302 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001820a:	2201      	movs	r2, #1
9001820c:	10f6      	asrs	r6, r6, #3
9001820e:	408a      	lsls	r2, r1
90018210:	4974      	ldr	r1, [pc, #464]	; (900183e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90018212:	420a      	tst	r2, r1
90018214:	d12e      	bne.n	90018274 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018216:	f412 7f60 	tst.w	r2, #896	; 0x380
9001821a:	d072      	beq.n	90018302 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001821c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90018220:	462b      	mov	r3, r5
90018222:	f105 0e08 	add.w	lr, r5, #8
90018226:	4615      	mov	r5, r2
90018228:	6818      	ldr	r0, [r3, #0]
9001822a:	3308      	adds	r3, #8
9001822c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018230:	4694      	mov	ip, r2
90018232:	4573      	cmp	r3, lr
90018234:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018238:	4662      	mov	r2, ip
9001823a:	d1f5      	bne.n	90018228 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001823c:	6818      	ldr	r0, [r3, #0]
9001823e:	f8cc 0000 	str.w	r0, [ip]
90018242:	889b      	ldrh	r3, [r3, #4]
90018244:	f8ac 3004 	strh.w	r3, [ip, #4]
90018248:	b2b3      	uxth	r3, r6
9001824a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001824e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90018252:	1aca      	subs	r2, r1, r3
90018254:	1bcf      	subs	r7, r1, r7
90018256:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001825a:	b292      	uxth	r2, r2
9001825c:	1afb      	subs	r3, r7, r3
9001825e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90018262:	10d2      	asrs	r2, r2, #3
90018264:	f002 0260 	and.w	r2, r2, #96	; 0x60
90018268:	4302      	orrs	r2, r0
9001826a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
9001826e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90018272:	e7b8      	b.n	900181e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018274:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90018276:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001827a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
9001827c:	f640 6333 	movw	r3, #3635	; 0xe33
90018280:	4299      	cmp	r1, r3
90018282:	d110      	bne.n	900182a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90018284:	6803      	ldr	r3, [r0, #0]
90018286:	68db      	ldr	r3, [r3, #12]
90018288:	4798      	blx	r3
9001828a:	7b41      	ldrb	r1, [r0, #13]
9001828c:	00cb      	lsls	r3, r1, #3
9001828e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018292:	7a03      	ldrb	r3, [r0, #8]
90018294:	0648      	lsls	r0, r1, #25
90018296:	ea43 0302 	orr.w	r3, r3, r2
9001829a:	bf44      	itt	mi
9001829c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900182a0:	b21b      	sxthmi	r3, r3
900182a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900182a6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
900182aa:	462a      	mov	r2, r5
900182ac:	f105 0c08 	add.w	ip, r5, #8
900182b0:	443b      	add	r3, r7
900182b2:	4433      	add	r3, r6
900182b4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
900182b8:	b29b      	uxth	r3, r3
900182ba:	4635      	mov	r5, r6
900182bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900182c0:	6810      	ldr	r0, [r2, #0]
900182c2:	3208      	adds	r2, #8
900182c4:	f852 1c04 	ldr.w	r1, [r2, #-4]
900182c8:	4637      	mov	r7, r6
900182ca:	4562      	cmp	r2, ip
900182cc:	c703      	stmia	r7!, {r0, r1}
900182ce:	463e      	mov	r6, r7
900182d0:	d1f6      	bne.n	900182c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
900182d2:	6810      	ldr	r0, [r2, #0]
900182d4:	6038      	str	r0, [r7, #0]
900182d6:	8892      	ldrh	r2, [r2, #4]
900182d8:	80ba      	strh	r2, [r7, #4]
900182da:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
900182de:	10db      	asrs	r3, r3, #3
900182e0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
900182e4:	f003 0360 	and.w	r3, r3, #96	; 0x60
900182e8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900182ec:	4313      	orrs	r3, r2
900182ee:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
900182f2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900182f6:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
900182fa:	1a9b      	subs	r3, r3, r2
900182fc:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90018300:	e771      	b.n	900181e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018302:	f023 0204 	bic.w	r2, r3, #4
90018306:	f640 611b 	movw	r1, #3611	; 0xe1b
9001830a:	428a      	cmp	r2, r1
9001830c:	d003      	beq.n	90018316 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001830e:	f640 621d 	movw	r2, #3613	; 0xe1d
90018312:	4293      	cmp	r3, r2
90018314:	d120      	bne.n	90018358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90018316:	3b01      	subs	r3, #1
90018318:	4602      	mov	r2, r0
9001831a:	4629      	mov	r1, r5
9001831c:	4620      	mov	r0, r4
9001831e:	b29b      	uxth	r3, r3
90018320:	f7ff ff4a 	bl	900181b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018324:	7b41      	ldrb	r1, [r0, #13]
90018326:	00cb      	lsls	r3, r1, #3
90018328:	0649      	lsls	r1, r1, #25
9001832a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001832e:	7a03      	ldrb	r3, [r0, #8]
90018330:	ea43 0302 	orr.w	r3, r3, r2
90018334:	bf44      	itt	mi
90018336:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001833a:	b21b      	sxthmi	r3, r3
9001833c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018340:	7b6b      	ldrb	r3, [r5, #13]
90018342:	7aaa      	ldrb	r2, [r5, #10]
90018344:	005b      	lsls	r3, r3, #1
90018346:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001834a:	4313      	orrs	r3, r2
9001834c:	115a      	asrs	r2, r3, #5
9001834e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90018352:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018356:	e035      	b.n	900183c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90018358:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001835c:	f01c 0f40 	tst.w	ip, #64	; 0x40
90018360:	f402 7180 	and.w	r1, r2, #256	; 0x100
90018364:	7a2a      	ldrb	r2, [r5, #8]
90018366:	ea42 0201 	orr.w	r2, r2, r1
9001836a:	f640 6109 	movw	r1, #3593	; 0xe09
9001836e:	bf1c      	itt	ne
90018370:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90018374:	b212      	sxthne	r2, r2
90018376:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001837a:	f023 0210 	bic.w	r2, r3, #16
9001837e:	428a      	cmp	r2, r1
90018380:	d003      	beq.n	9001838a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90018382:	f640 6213 	movw	r2, #3603	; 0xe13
90018386:	4293      	cmp	r3, r2
90018388:	d129      	bne.n	900183de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001838a:	7b6e      	ldrb	r6, [r5, #13]
9001838c:	4629      	mov	r1, r5
9001838e:	0076      	lsls	r6, r6, #1
90018390:	f406 7280 	and.w	r2, r6, #256	; 0x100
90018394:	7aae      	ldrb	r6, [r5, #10]
90018396:	4316      	orrs	r6, r2
90018398:	f640 6213 	movw	r2, #3603	; 0xe13
9001839c:	4293      	cmp	r3, r2
9001839e:	4602      	mov	r2, r0
900183a0:	4620      	mov	r0, r4
900183a2:	bf16      	itet	ne
900183a4:	f103 33ff 	addne.w	r3, r3, #4294967295
900183a8:	f640 630c 	movweq	r3, #3596	; 0xe0c
900183ac:	b29b      	uxthne	r3, r3
900183ae:	f7ff ff03 	bl	900181b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900183b2:	7b43      	ldrb	r3, [r0, #13]
900183b4:	7a82      	ldrb	r2, [r0, #10]
900183b6:	005b      	lsls	r3, r3, #1
900183b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
900183bc:	4313      	orrs	r3, r2
900183be:	1af6      	subs	r6, r6, r3
900183c0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
900183c4:	7b69      	ldrb	r1, [r5, #13]
900183c6:	00cb      	lsls	r3, r1, #3
900183c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
900183cc:	7a2b      	ldrb	r3, [r5, #8]
900183ce:	4313      	orrs	r3, r2
900183d0:	064a      	lsls	r2, r1, #25
900183d2:	bf44      	itt	mi
900183d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900183d8:	b21b      	sxthmi	r3, r3
900183da:	1bdb      	subs	r3, r3, r7
900183dc:	e747      	b.n	9001826e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
900183de:	2300      	movs	r3, #0
900183e0:	e7b7      	b.n	90018352 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
900183e2:	bf00      	nop
900183e4:	3fc00079 	.word	0x3fc00079

900183e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
900183e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900183ec:	4604      	mov	r4, r0
900183ee:	b942      	cbnz	r2, 90018402 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
900183f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900183f4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
900183f8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
900183fc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018400:	e047      	b.n	90018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018402:	7b51      	ldrb	r1, [r2, #13]
90018404:	8893      	ldrh	r3, [r2, #4]
90018406:	010d      	lsls	r5, r1, #4
90018408:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001840c:	79d5      	ldrb	r5, [r2, #7]
9001840e:	4305      	orrs	r5, r0
90018410:	2d04      	cmp	r5, #4
90018412:	bfcc      	ite	gt
90018414:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90018418:	f04f 0e01 	movle.w	lr, #1
9001841c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90018420:	f200 80ab 	bhi.w	9001857a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90018424:	f240 60e7 	movw	r0, #1767	; 0x6e7
90018428:	4283      	cmp	r3, r0
9001842a:	d216      	bcs.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001842c:	f240 605b 	movw	r0, #1627	; 0x65b
90018430:	4283      	cmp	r3, r0
90018432:	d859      	bhi.n	900184e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90018434:	f240 6057 	movw	r0, #1623	; 0x657
90018438:	4283      	cmp	r3, r0
9001843a:	d20e      	bcs.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001843c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90018440:	d24a      	bcs.n	900184d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90018442:	f240 604e 	movw	r0, #1614	; 0x64e
90018446:	4283      	cmp	r3, r0
90018448:	d207      	bcs.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001844a:	f240 601a 	movw	r0, #1562	; 0x61a
9001844e:	4283      	cmp	r3, r0
90018450:	d02a      	beq.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018452:	d821      	bhi.n	90018498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90018454:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90018458:	d35b      	bcc.n	90018512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001845a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001845e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018462:	f040 80d0 	bne.w	90018606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018466:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001846a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001846e:	f040 80ca 	bne.w	90018606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018472:	00cb      	lsls	r3, r1, #3
90018474:	0649      	lsls	r1, r1, #25
90018476:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001847a:	7a13      	ldrb	r3, [r2, #8]
9001847c:	ea43 0300 	orr.w	r3, r3, r0
90018480:	bf44      	itt	mi
90018482:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018486:	b21b      	sxthmi	r3, r3
90018488:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001848c:	1b5d      	subs	r5, r3, r5
9001848e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018492:	4610      	mov	r0, r2
90018494:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018498:	f240 604b 	movw	r0, #1611	; 0x64b
9001849c:	4283      	cmp	r3, r0
9001849e:	d338      	bcc.n	90018512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900184a0:	f240 604c 	movw	r0, #1612	; 0x64c
900184a4:	4283      	cmp	r3, r0
900184a6:	d9d8      	bls.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900184a8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
900184ac:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
900184b0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900184b4:	f040 80f3 	bne.w	9001869e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900184b8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900184bc:	f040 80ef 	bne.w	9001869e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900184c0:	00cb      	lsls	r3, r1, #3
900184c2:	064e      	lsls	r6, r1, #25
900184c4:	f403 7080 	and.w	r0, r3, #256	; 0x100
900184c8:	7a13      	ldrb	r3, [r2, #8]
900184ca:	ea43 0300 	orr.w	r3, r3, r0
900184ce:	bf44      	itt	mi
900184d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900184d4:	b21b      	sxthmi	r3, r3
900184d6:	e7d9      	b.n	9001848c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
900184d8:	f240 6054 	movw	r0, #1620	; 0x654
900184dc:	4283      	cmp	r3, r0
900184de:	d8e3      	bhi.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900184e0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
900184e4:	d9e0      	bls.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900184e6:	e7b8      	b.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900184e8:	f240 6074 	movw	r0, #1652	; 0x674
900184ec:	4283      	cmp	r3, r0
900184ee:	d0b4      	beq.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900184f0:	d82d      	bhi.n	9001854e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
900184f2:	f240 605e 	movw	r0, #1630	; 0x65e
900184f6:	4283      	cmp	r3, r0
900184f8:	d804      	bhi.n	90018504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
900184fa:	f240 605d 	movw	r0, #1629	; 0x65d
900184fe:	4283      	cmp	r3, r0
90018500:	d3d2      	bcc.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018502:	e7aa      	b.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018504:	f240 605f 	movw	r0, #1631	; 0x65f
90018508:	4283      	cmp	r3, r0
9001850a:	d0cd      	beq.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001850c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90018510:	d0a3      	beq.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018512:	00cb      	lsls	r3, r1, #3
90018514:	0649      	lsls	r1, r1, #25
90018516:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001851a:	7a13      	ldrb	r3, [r2, #8]
9001851c:	ea43 0300 	orr.w	r3, r3, r0
90018520:	bf44      	itt	mi
90018522:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018526:	b21b      	sxthmi	r3, r3
90018528:	1b5d      	subs	r5, r3, r5
9001852a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001852e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018532:	7b53      	ldrb	r3, [r2, #13]
90018534:	015b      	lsls	r3, r3, #5
90018536:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001853a:	7993      	ldrb	r3, [r2, #6]
9001853c:	430b      	orrs	r3, r1
9001853e:	2105      	movs	r1, #5
90018540:	005b      	lsls	r3, r3, #1
90018542:	fb93 f3f1 	sdiv	r3, r3, r1
90018546:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001854a:	440b      	add	r3, r1
9001854c:	e756      	b.n	900183fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001854e:	f240 60e2 	movw	r0, #1762	; 0x6e2
90018552:	4283      	cmp	r3, r0
90018554:	d809      	bhi.n	9001856a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90018556:	f240 60df 	movw	r0, #1759	; 0x6df
9001855a:	4283      	cmp	r3, r0
9001855c:	f4bf af7d 	bcs.w	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018560:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90018564:	2b05      	cmp	r3, #5
90018566:	d8d4      	bhi.n	90018512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018568:	e777      	b.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001856a:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001856e:	4283      	cmp	r3, r0
90018570:	d09a      	beq.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018572:	f240 60e4 	movw	r0, #1764	; 0x6e4
90018576:	4283      	cmp	r3, r0
90018578:	e7ca      	b.n	90018510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001857a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001857e:	d22b      	bcs.n	900185d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90018580:	f640 00ed 	movw	r0, #2285	; 0x8ed
90018584:	4283      	cmp	r3, r0
90018586:	d28f      	bcs.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018588:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001858c:	4283      	cmp	r3, r0
9001858e:	d816      	bhi.n	900185be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018590:	f640 00e4 	movw	r0, #2276	; 0x8e4
90018594:	4283      	cmp	r3, r0
90018596:	f4bf af60 	bcs.w	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001859a:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001859e:	4283      	cmp	r3, r0
900185a0:	d80a      	bhi.n	900185b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
900185a2:	f240 60eb 	movw	r0, #1771	; 0x6eb
900185a6:	4283      	cmp	r3, r0
900185a8:	f4bf af57 	bcs.w	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900185ac:	f240 60ea 	movw	r0, #1770	; 0x6ea
900185b0:	4283      	cmp	r3, r0
900185b2:	f43f af79 	beq.w	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900185b6:	e7ac      	b.n	90018512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900185b8:	f240 60ed 	movw	r0, #1773	; 0x6ed
900185bc:	e7f8      	b.n	900185b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
900185be:	f640 00e8 	movw	r0, #2280	; 0x8e8
900185c2:	4283      	cmp	r3, r0
900185c4:	d802      	bhi.n	900185cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
900185c6:	f640 00e7 	movw	r0, #2279	; 0x8e7
900185ca:	e798      	b.n	900184fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
900185cc:	f640 00e9 	movw	r0, #2281	; 0x8e9
900185d0:	4283      	cmp	r3, r0
900185d2:	f47f af42 	bne.w	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900185d6:	e767      	b.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900185d8:	f640 00f6 	movw	r0, #2294	; 0x8f6
900185dc:	4283      	cmp	r3, r0
900185de:	f43f af63 	beq.w	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900185e2:	d802      	bhi.n	900185ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
900185e4:	f640 00f2 	movw	r0, #2290	; 0x8f2
900185e8:	e7f2      	b.n	900185d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
900185ea:	f640 00fa 	movw	r0, #2298	; 0x8fa
900185ee:	4283      	cmp	r3, r0
900185f0:	d805      	bhi.n	900185fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
900185f2:	f640 00f9 	movw	r0, #2297	; 0x8f9
900185f6:	4283      	cmp	r3, r0
900185f8:	f4ff af2f 	bcc.w	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900185fc:	e754      	b.n	900184a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900185fe:	f640 00fe 	movw	r0, #2302	; 0x8fe
90018602:	4283      	cmp	r3, r0
90018604:	e7af      	b.n	90018566 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018606:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001860a:	4617      	mov	r7, r2
9001860c:	f102 0808 	add.w	r8, r2, #8
90018610:	4666      	mov	r6, ip
90018612:	6838      	ldr	r0, [r7, #0]
90018614:	3708      	adds	r7, #8
90018616:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001861a:	46e6      	mov	lr, ip
9001861c:	4547      	cmp	r7, r8
9001861e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018622:	46f4      	mov	ip, lr
90018624:	d1f5      	bne.n	90018612 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018626:	6838      	ldr	r0, [r7, #0]
90018628:	f8ce 0000 	str.w	r0, [lr]
9001862c:	88b9      	ldrh	r1, [r7, #4]
9001862e:	f8ae 1004 	strh.w	r1, [lr, #4]
90018632:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90018636:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001863a:	d009      	beq.n	90018650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001863c:	7b51      	ldrb	r1, [r2, #13]
9001863e:	7992      	ldrb	r2, [r2, #6]
90018640:	0149      	lsls	r1, r1, #5
90018642:	f401 7180 	and.w	r1, r1, #256	; 0x100
90018646:	4311      	orrs	r1, r2
90018648:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001864c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90018650:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018654:	b2ad      	uxth	r5, r5
90018656:	d00d      	beq.n	90018674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90018658:	442b      	add	r3, r5
9001865a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001865e:	b29b      	uxth	r3, r3
90018660:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90018664:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018668:	10db      	asrs	r3, r3, #3
9001866a:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001866e:	4313      	orrs	r3, r2
90018670:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018674:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018678:	00cb      	lsls	r3, r1, #3
9001867a:	064f      	lsls	r7, r1, #25
9001867c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018680:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90018684:	ea43 0302 	orr.w	r3, r3, r2
90018688:	bf44      	itt	mi
9001868a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001868e:	b21b      	sxthmi	r3, r3
90018690:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018694:	1b5b      	subs	r3, r3, r5
90018696:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001869a:	4632      	mov	r2, r6
9001869c:	e6f9      	b.n	90018492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001869e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
900186a2:	4617      	mov	r7, r2
900186a4:	f102 0908 	add.w	r9, r2, #8
900186a8:	4666      	mov	r6, ip
900186aa:	6838      	ldr	r0, [r7, #0]
900186ac:	3708      	adds	r7, #8
900186ae:	f857 1c04 	ldr.w	r1, [r7, #-4]
900186b2:	46e0      	mov	r8, ip
900186b4:	454f      	cmp	r7, r9
900186b6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
900186ba:	46c4      	mov	ip, r8
900186bc:	d1f5      	bne.n	900186aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
900186be:	6838      	ldr	r0, [r7, #0]
900186c0:	f8c8 0000 	str.w	r0, [r8]
900186c4:	88b9      	ldrh	r1, [r7, #4]
900186c6:	f8a8 1004 	strh.w	r1, [r8, #4]
900186ca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
900186ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900186d2:	d009      	beq.n	900186e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
900186d4:	7b51      	ldrb	r1, [r2, #13]
900186d6:	7992      	ldrb	r2, [r2, #6]
900186d8:	0149      	lsls	r1, r1, #5
900186da:	f401 7180 	and.w	r1, r1, #256	; 0x100
900186de:	4311      	orrs	r1, r2
900186e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900186e4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
900186e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900186ec:	d00e      	beq.n	9001870c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
900186ee:	eba3 030e 	sub.w	r3, r3, lr
900186f2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
900186f6:	b29b      	uxth	r3, r3
900186f8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900186fc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018700:	10db      	asrs	r3, r3, #3
90018702:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018706:	4313      	orrs	r3, r2
90018708:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001870c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018710:	00cb      	lsls	r3, r1, #3
90018712:	0648      	lsls	r0, r1, #25
90018714:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018718:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001871c:	ea43 0302 	orr.w	r3, r3, r2
90018720:	bf44      	itt	mi
90018722:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018726:	b21b      	sxthmi	r3, r3
90018728:	1b5d      	subs	r5, r3, r5
9001872a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001872e:	e7b4      	b.n	9001869a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90018730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90018730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018734:	461e      	mov	r6, r3
90018736:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90018738:	4604      	mov	r4, r0
9001873a:	4617      	mov	r7, r2
9001873c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018740:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018744:	f7eb fcd0 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018748:	4605      	mov	r5, r0
9001874a:	b918      	cbnz	r0, 90018754 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001874c:	6030      	str	r0, [r6, #0]
9001874e:	4628      	mov	r0, r5
90018750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018754:	683b      	ldr	r3, [r7, #0]
90018756:	4601      	mov	r1, r0
90018758:	4638      	mov	r0, r7
9001875a:	68db      	ldr	r3, [r3, #12]
9001875c:	4798      	blx	r3
9001875e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90018762:	4602      	mov	r2, r0
90018764:	6030      	str	r0, [r6, #0]
90018766:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001876a:	d213      	bcs.n	90018794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001876c:	4643      	mov	r3, r8
9001876e:	4639      	mov	r1, r7
90018770:	4620      	mov	r0, r4
90018772:	f7ff fe39 	bl	900183e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018776:	6030      	str	r0, [r6, #0]
90018778:	6833      	ldr	r3, [r6, #0]
9001877a:	b143      	cbz	r3, 9001878e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001877c:	7b5a      	ldrb	r2, [r3, #13]
9001877e:	7a9b      	ldrb	r3, [r3, #10]
90018780:	0052      	lsls	r2, r2, #1
90018782:	f402 7280 	and.w	r2, r2, #256	; 0x100
90018786:	4313      	orrs	r3, r2
90018788:	bf0c      	ite	eq
9001878a:	2301      	moveq	r3, #1
9001878c:	2300      	movne	r3, #0
9001878e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90018792:	e7dc      	b.n	9001874e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90018794:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90018798:	b29b      	uxth	r3, r3
9001879a:	2b7f      	cmp	r3, #127	; 0x7f
9001879c:	d804      	bhi.n	900187a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001879e:	4639      	mov	r1, r7
900187a0:	4620      	mov	r0, r4
900187a2:	f7ff fd15 	bl	900181d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900187a6:	e7e6      	b.n	90018776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
900187a8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
900187ac:	2b00      	cmp	r3, #0
900187ae:	d0e3      	beq.n	90018778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900187b0:	f640 1302 	movw	r3, #2306	; 0x902
900187b4:	429d      	cmp	r5, r3
900187b6:	d1df      	bne.n	90018778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900187b8:	4601      	mov	r1, r0
900187ba:	4620      	mov	r0, r4
900187bc:	f7ff fcd8 	bl	90018170 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900187c0:	e7d9      	b.n	90018776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

900187c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
900187c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900187c6:	461e      	mov	r6, r3
900187c8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900187ca:	4604      	mov	r4, r0
900187cc:	4617      	mov	r7, r2
900187ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900187d2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900187d6:	f7eb fc87 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900187da:	4605      	mov	r5, r0
900187dc:	b918      	cbnz	r0, 900187e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
900187de:	6030      	str	r0, [r6, #0]
900187e0:	4628      	mov	r0, r5
900187e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900187e6:	683b      	ldr	r3, [r7, #0]
900187e8:	4601      	mov	r1, r0
900187ea:	4638      	mov	r0, r7
900187ec:	f8d3 9008 	ldr.w	r9, [r3, #8]
900187f0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
900187f4:	47c8      	blx	r9
900187f6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
900187fa:	4602      	mov	r2, r0
900187fc:	6030      	str	r0, [r6, #0]
900187fe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90018802:	d213      	bcs.n	9001882c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018804:	4643      	mov	r3, r8
90018806:	4639      	mov	r1, r7
90018808:	4620      	mov	r0, r4
9001880a:	f7ff fded 	bl	900183e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001880e:	6030      	str	r0, [r6, #0]
90018810:	6833      	ldr	r3, [r6, #0]
90018812:	b143      	cbz	r3, 90018826 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018814:	7b5a      	ldrb	r2, [r3, #13]
90018816:	7a9b      	ldrb	r3, [r3, #10]
90018818:	0052      	lsls	r2, r2, #1
9001881a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001881e:	4313      	orrs	r3, r2
90018820:	bf0c      	ite	eq
90018822:	2301      	moveq	r3, #1
90018824:	2300      	movne	r3, #0
90018826:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001882a:	e7d9      	b.n	900187e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001882c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90018830:	b29b      	uxth	r3, r3
90018832:	2b7f      	cmp	r3, #127	; 0x7f
90018834:	d804      	bhi.n	90018840 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90018836:	4639      	mov	r1, r7
90018838:	4620      	mov	r0, r4
9001883a:	f7ff fcc9 	bl	900181d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001883e:	e7e6      	b.n	9001880e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90018840:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90018844:	2b00      	cmp	r3, #0
90018846:	d0e3      	beq.n	90018810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018848:	f640 1302 	movw	r3, #2306	; 0x902
9001884c:	429d      	cmp	r5, r3
9001884e:	d1df      	bne.n	90018810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018850:	4601      	mov	r1, r0
90018852:	4620      	mov	r0, r4
90018854:	f7ff fc8c 	bl	90018170 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018858:	e7d9      	b.n	9001880e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001885a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001885a:	b510      	push	{r4, lr}
9001885c:	4604      	mov	r4, r0
9001885e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90018862:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90018864:	b1e1      	cbz	r1, 900188a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018866:	2b0a      	cmp	r3, #10
90018868:	d02d      	beq.n	900188c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001886a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001886c:	3901      	subs	r1, #1
9001886e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90018872:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90018874:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90018878:	1c51      	adds	r1, r2, #1
9001887a:	b289      	uxth	r1, r1
9001887c:	2901      	cmp	r1, #1
9001887e:	bf8a      	itet	hi
90018880:	f102 32ff 	addhi.w	r2, r2, #4294967295
90018884:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90018886:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90018888:	1c5a      	adds	r2, r3, #1
9001888a:	8722      	strh	r2, [r4, #56]	; 0x38
9001888c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001888e:	4413      	add	r3, r2
90018890:	b29b      	uxth	r3, r3
90018892:	2b09      	cmp	r3, #9
90018894:	bf88      	it	hi
90018896:	3b0a      	subhi	r3, #10
90018898:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001889c:	8458      	strh	r0, [r3, #34]	; 0x22
9001889e:	e7de      	b.n	9001885e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
900188a0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900188a2:	2b0a      	cmp	r3, #10
900188a4:	d00f      	beq.n	900188c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900188a6:	4620      	mov	r0, r4
900188a8:	f7ff fc10 	bl	900180cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
900188ac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900188ae:	1c5a      	adds	r2, r3, #1
900188b0:	8722      	strh	r2, [r4, #56]	; 0x38
900188b2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900188b4:	4413      	add	r3, r2
900188b6:	b29b      	uxth	r3, r3
900188b8:	2b09      	cmp	r3, #9
900188ba:	bf88      	it	hi
900188bc:	3b0a      	subhi	r3, #10
900188be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900188c2:	8458      	strh	r0, [r3, #34]	; 0x22
900188c4:	e7ec      	b.n	900188a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900188c6:	bd10      	pop	{r4, pc}

900188c8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
900188c8:	b538      	push	{r3, r4, r5, lr}
900188ca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900188cc:	4604      	mov	r4, r0
900188ce:	eb00 0243 	add.w	r2, r0, r3, lsl #1
900188d2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
900188d4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
900188d6:	3a01      	subs	r2, #1
900188d8:	8702      	strh	r2, [r0, #56]	; 0x38
900188da:	1c5a      	adds	r2, r3, #1
900188dc:	b292      	uxth	r2, r2
900188de:	2a09      	cmp	r2, #9
900188e0:	bf8a      	itet	hi
900188e2:	3b09      	subhi	r3, #9
900188e4:	86c2      	strhls	r2, [r0, #54]	; 0x36
900188e6:	86c3      	strhhi	r3, [r0, #54]	; 0x36
900188e8:	f7ff ffb7 	bl	9001885a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
900188ec:	8c23      	ldrh	r3, [r4, #32]
900188ee:	2b01      	cmp	r3, #1
900188f0:	bf9c      	itt	ls
900188f2:	3301      	addls	r3, #1
900188f4:	8423      	strhls	r3, [r4, #32]
900188f6:	8be3      	ldrh	r3, [r4, #30]
900188f8:	b90b      	cbnz	r3, 900188fe <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
900188fa:	2302      	movs	r3, #2
900188fc:	83e3      	strh	r3, [r4, #30]
900188fe:	8be3      	ldrh	r3, [r4, #30]
90018900:	4628      	mov	r0, r5
90018902:	3b01      	subs	r3, #1
90018904:	b29b      	uxth	r3, r3
90018906:	83e3      	strh	r3, [r4, #30]
90018908:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001890c:	8365      	strh	r5, [r4, #26]
9001890e:	bd38      	pop	{r3, r4, r5, pc}

90018910 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90018910:	428a      	cmp	r2, r1
90018912:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018916:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
90018918:	d932      	bls.n	90018980 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001891a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001891c:	1a54      	subs	r4, r2, r1
9001891e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
90018922:	19ee      	adds	r6, r5, r7
90018924:	fa1f fe84 	uxth.w	lr, r4
90018928:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001892c:	3e01      	subs	r6, #1
9001892e:	b2b4      	uxth	r4, r6
90018930:	eba4 090e 	sub.w	r9, r4, lr
90018934:	fa1f f989 	uxth.w	r9, r9
90018938:	2c09      	cmp	r4, #9
9001893a:	4626      	mov	r6, r4
9001893c:	bf88      	it	hi
9001893e:	f1a4 060a 	subhi.w	r6, r4, #10
90018942:	f1bc 0f00 	cmp.w	ip, #0
90018946:	f104 34ff 	add.w	r4, r4, #4294967295
9001894a:	bf08      	it	eq
9001894c:	f04f 0c02 	moveq.w	ip, #2
90018950:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90018954:	b2a4      	uxth	r4, r4
90018956:	f10c 3cff 	add.w	ip, ip, #4294967295
9001895a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001895e:	454c      	cmp	r4, r9
90018960:	fa1f fc8c 	uxth.w	ip, ip
90018964:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90018968:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001896c:	d1e4      	bne.n	90018938 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001896e:	eba5 050e 	sub.w	r5, r5, lr
90018972:	eb0e 0408 	add.w	r4, lr, r8
90018976:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001897a:	8705      	strh	r5, [r0, #56]	; 0x38
9001897c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90018980:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90018982:	250a      	movs	r5, #10
90018984:	1a64      	subs	r4, r4, r1
90018986:	4439      	add	r1, r7
90018988:	b289      	uxth	r1, r1
9001898a:	8704      	strh	r4, [r0, #56]	; 0x38
9001898c:	2909      	cmp	r1, #9
9001898e:	bf88      	it	hi
90018990:	390a      	subhi	r1, #10
90018992:	86c1      	strh	r1, [r0, #54]	; 0x36
90018994:	b18a      	cbz	r2, 900189ba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90018996:	8f01      	ldrh	r1, [r0, #56]	; 0x38
90018998:	3a01      	subs	r2, #1
9001899a:	3101      	adds	r1, #1
9001899c:	b292      	uxth	r2, r2
9001899e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
900189a2:	8701      	strh	r1, [r0, #56]	; 0x38
900189a4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900189a6:	b901      	cbnz	r1, 900189aa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
900189a8:	86c5      	strh	r5, [r0, #54]	; 0x36
900189aa:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900189ac:	3901      	subs	r1, #1
900189ae:	b289      	uxth	r1, r1
900189b0:	86c1      	strh	r1, [r0, #54]	; 0x36
900189b2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
900189b6:	844c      	strh	r4, [r1, #34]	; 0x22
900189b8:	e7ec      	b.n	90018994 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
900189ba:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900189be:	f7ff bf4c 	b.w	9001885a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900189c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
900189c2:	b570      	push	{r4, r5, r6, lr}
900189c4:	2500      	movs	r5, #0
900189c6:	4295      	cmp	r5, r2
900189c8:	d011      	beq.n	900189ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
900189ca:	8bc4      	ldrh	r4, [r0, #30]
900189cc:	f831 6b02 	ldrh.w	r6, [r1], #2
900189d0:	4414      	add	r4, r2
900189d2:	3c01      	subs	r4, #1
900189d4:	1b64      	subs	r4, r4, r5
900189d6:	b2a4      	uxth	r4, r4
900189d8:	2c01      	cmp	r4, #1
900189da:	bf88      	it	hi
900189dc:	3c02      	subhi	r4, #2
900189de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900189e2:	8b64      	ldrh	r4, [r4, #26]
900189e4:	42b4      	cmp	r4, r6
900189e6:	d117      	bne.n	90018a18 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
900189e8:	3501      	adds	r5, #1
900189ea:	b2ad      	uxth	r5, r5
900189ec:	e7eb      	b.n	900189c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
900189ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900189f2:	2400      	movs	r4, #0
900189f4:	4413      	add	r3, r2
900189f6:	b2a2      	uxth	r2, r4
900189f8:	429a      	cmp	r2, r3
900189fa:	da0f      	bge.n	90018a1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
900189fc:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
900189fe:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90018a02:	3401      	adds	r4, #1
90018a04:	4432      	add	r2, r6
90018a06:	b292      	uxth	r2, r2
90018a08:	2a09      	cmp	r2, #9
90018a0a:	bf88      	it	hi
90018a0c:	3a0a      	subhi	r2, #10
90018a0e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90018a12:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90018a14:	42aa      	cmp	r2, r5
90018a16:	d0ee      	beq.n	900189f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90018a18:	2000      	movs	r0, #0
90018a1a:	bd70      	pop	{r4, r5, r6, pc}
90018a1c:	2001      	movs	r0, #1
90018a1e:	e7fc      	b.n	90018a1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90018a20 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90018a20:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018a24:	4605      	mov	r5, r0
90018a26:	4616      	mov	r6, r2
90018a28:	1c8c      	adds	r4, r1, #2
90018a2a:	8809      	ldrh	r1, [r1, #0]
90018a2c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90018a30:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90018a34:	42b3      	cmp	r3, r6
90018a36:	d124      	bne.n	90018a82 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90018a38:	f3c1 2903 	ubfx	r9, r1, #8, #4
90018a3c:	f3c1 1803 	ubfx	r8, r1, #4, #4
90018a40:	f001 070f 	and.w	r7, r1, #15
90018a44:	4652      	mov	r2, sl
90018a46:	f8cd 8000 	str.w	r8, [sp]
90018a4a:	464b      	mov	r3, r9
90018a4c:	4621      	mov	r1, r4
90018a4e:	4628      	mov	r0, r5
90018a50:	f7ff ffb7 	bl	900189c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90018a54:	4683      	mov	fp, r0
90018a56:	b168      	cbz	r0, 90018a74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90018a58:	eb0a 0109 	add.w	r1, sl, r9
90018a5c:	463a      	mov	r2, r7
90018a5e:	4628      	mov	r0, r5
90018a60:	4441      	add	r1, r8
90018a62:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90018a66:	4649      	mov	r1, r9
90018a68:	f7ff ff52 	bl	90018910 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90018a6c:	4658      	mov	r0, fp
90018a6e:	b003      	add	sp, #12
90018a70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018a74:	eb07 010a 	add.w	r1, r7, sl
90018a78:	4449      	add	r1, r9
90018a7a:	4441      	add	r1, r8
90018a7c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90018a80:	e7d2      	b.n	90018a28 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90018a82:	f04f 0b00 	mov.w	fp, #0
90018a86:	e7f1      	b.n	90018a6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90018a88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90018a88:	b570      	push	{r4, r5, r6, lr}
90018a8a:	8810      	ldrh	r0, [r2, #0]
90018a8c:	4298      	cmp	r0, r3
90018a8e:	d817      	bhi.n	90018ac0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018a90:	1e48      	subs	r0, r1, #1
90018a92:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90018a96:	4298      	cmp	r0, r3
90018a98:	d312      	bcc.n	90018ac0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018a9a:	2400      	movs	r4, #0
90018a9c:	428c      	cmp	r4, r1
90018a9e:	d20f      	bcs.n	90018ac0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018aa0:	1860      	adds	r0, r4, r1
90018aa2:	1040      	asrs	r0, r0, #1
90018aa4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90018aa8:	0085      	lsls	r5, r0, #2
90018aaa:	42b3      	cmp	r3, r6
90018aac:	d902      	bls.n	90018ab4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90018aae:	3001      	adds	r0, #1
90018ab0:	b284      	uxth	r4, r0
90018ab2:	e7f3      	b.n	90018a9c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90018ab4:	d201      	bcs.n	90018aba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90018ab6:	b281      	uxth	r1, r0
90018ab8:	e7f0      	b.n	90018a9c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90018aba:	442a      	add	r2, r5
90018abc:	8850      	ldrh	r0, [r2, #2]
90018abe:	bd70      	pop	{r4, r5, r6, pc}
90018ac0:	2000      	movs	r0, #0
90018ac2:	e7fc      	b.n	90018abe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90018ac4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90018ac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018ac8:	6c45      	ldr	r5, [r0, #68]	; 0x44
90018aca:	4604      	mov	r4, r0
90018acc:	260b      	movs	r6, #11
90018ace:	886f      	ldrh	r7, [r5, #2]
90018ad0:	087f      	lsrs	r7, r7, #1
90018ad2:	3e01      	subs	r6, #1
90018ad4:	d013      	beq.n	90018afe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90018ad6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90018ad8:	462a      	mov	r2, r5
90018ada:	4639      	mov	r1, r7
90018adc:	4620      	mov	r0, r4
90018ade:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018ae2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018ae6:	4643      	mov	r3, r8
90018ae8:	f7ff ffce 	bl	90018a88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90018aec:	b138      	cbz	r0, 90018afe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90018aee:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90018af2:	4642      	mov	r2, r8
90018af4:	4620      	mov	r0, r4
90018af6:	f7ff ff93 	bl	90018a20 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90018afa:	2800      	cmp	r0, #0
90018afc:	d1e9      	bne.n	90018ad2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90018afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90018b04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90018b04:	b570      	push	{r4, r5, r6, lr}
90018b06:	694a      	ldr	r2, [r1, #20]
90018b08:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90018b0a:	684b      	ldr	r3, [r1, #4]
90018b0c:	1b54      	subs	r4, r2, r5
90018b0e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90018b10:	f000 8106 	beq.w	90018d20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90018b14:	1b9b      	subs	r3, r3, r6
90018b16:	d003      	beq.n	90018b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018b18:	4363      	muls	r3, r4
90018b1a:	2210      	movs	r2, #16
90018b1c:	fb93 f3f2 	sdiv	r3, r3, r2
90018b20:	680c      	ldr	r4, [r1, #0]
90018b22:	698a      	ldr	r2, [r1, #24]
90018b24:	1b65      	subs	r5, r4, r5
90018b26:	f000 80fd 	beq.w	90018d24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90018b2a:	1b92      	subs	r2, r2, r6
90018b2c:	d003      	beq.n	90018b36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018b2e:	436a      	muls	r2, r5
90018b30:	2410      	movs	r4, #16
90018b32:	fb92 f2f4 	sdiv	r2, r2, r4
90018b36:	1a9b      	subs	r3, r3, r2
90018b38:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90018d60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90018b3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018b40:	460a      	mov	r2, r1
90018b42:	ee07 3a90 	vmov	s15, r3
90018b46:	f100 040c 	add.w	r4, r0, #12
90018b4a:	4603      	mov	r3, r0
90018b4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018b50:	ee67 7a84 	vmul.f32	s15, s15, s8
90018b54:	ee87 3a27 	vdiv.f32	s6, s14, s15
90018b58:	eeb1 6a43 	vneg.f32	s12, s6
90018b5c:	edd2 7a02 	vldr	s15, [r2, #8]
90018b60:	3214      	adds	r2, #20
90018b62:	eec7 6a27 	vdiv.f32	s13, s14, s15
90018b66:	ece3 6a01 	vstmia	r3!, {s13}
90018b6a:	429c      	cmp	r4, r3
90018b6c:	ed52 7a02 	vldr	s15, [r2, #-8]
90018b70:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018b74:	edc3 7a02 	vstr	s15, [r3, #8]
90018b78:	ed52 7a01 	vldr	s15, [r2, #-4]
90018b7c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018b80:	edc3 7a05 	vstr	s15, [r3, #20]
90018b84:	d1ea      	bne.n	90018b5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90018b86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018b88:	698b      	ldr	r3, [r1, #24]
90018b8a:	edd0 4a02 	vldr	s9, [r0, #8]
90018b8e:	1a9b      	subs	r3, r3, r2
90018b90:	edd0 3a00 	vldr	s7, [r0]
90018b94:	edd0 6a01 	vldr	s13, [r0, #4]
90018b98:	ee07 3a90 	vmov	s15, r3
90018b9c:	684b      	ldr	r3, [r1, #4]
90018b9e:	ee76 6ae4 	vsub.f32	s13, s13, s9
90018ba2:	ed90 5a05 	vldr	s10, [r0, #20]
90018ba6:	1a9b      	subs	r3, r3, r2
90018ba8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018bac:	ee73 4ae4 	vsub.f32	s9, s7, s9
90018bb0:	ed90 2a03 	vldr	s4, [r0, #12]
90018bb4:	ee07 3a10 	vmov	s14, r3
90018bb8:	edd0 5a04 	vldr	s11, [r0, #16]
90018bbc:	ee67 7a84 	vmul.f32	s15, s15, s8
90018bc0:	ed90 1a07 	vldr	s2, [r0, #28]
90018bc4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018bc8:	edd0 2a06 	vldr	s5, [r0, #24]
90018bcc:	ee75 5ac5 	vsub.f32	s11, s11, s10
90018bd0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90018bd4:	ee27 7a04 	vmul.f32	s14, s14, s8
90018bd8:	ee32 5a45 	vsub.f32	s10, s4, s10
90018bdc:	eee6 7a87 	vfma.f32	s15, s13, s14
90018be0:	ee67 7a83 	vmul.f32	s15, s15, s6
90018be4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90018be8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018bea:	694a      	ldr	r2, [r1, #20]
90018bec:	1b13      	subs	r3, r2, r4
90018bee:	ee07 3a10 	vmov	s14, r3
90018bf2:	680b      	ldr	r3, [r1, #0]
90018bf4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018bf8:	1b1b      	subs	r3, r3, r4
90018bfa:	ee27 7a04 	vmul.f32	s14, s14, s8
90018bfe:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90018c02:	ee07 3a10 	vmov	s14, r3
90018c06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c0a:	ee27 7a04 	vmul.f32	s14, s14, s8
90018c0e:	eee6 4a87 	vfma.f32	s9, s13, s14
90018c12:	ee64 4a86 	vmul.f32	s9, s9, s12
90018c16:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
90018c1a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018c1c:	698b      	ldr	r3, [r1, #24]
90018c1e:	1a9b      	subs	r3, r3, r2
90018c20:	ee06 3a90 	vmov	s13, r3
90018c24:	684b      	ldr	r3, [r1, #4]
90018c26:	1a9b      	subs	r3, r3, r2
90018c28:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018c2c:	ee07 3a10 	vmov	s14, r3
90018c30:	ee66 6a84 	vmul.f32	s13, s13, s8
90018c34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c38:	ee65 6a66 	vnmul.f32	s13, s10, s13
90018c3c:	ee27 7a04 	vmul.f32	s14, s14, s8
90018c40:	eee5 6a87 	vfma.f32	s13, s11, s14
90018c44:	ee66 6a83 	vmul.f32	s13, s13, s6
90018c48:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
90018c4c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018c4e:	694a      	ldr	r2, [r1, #20]
90018c50:	1b13      	subs	r3, r2, r4
90018c52:	ee07 3a10 	vmov	s14, r3
90018c56:	680b      	ldr	r3, [r1, #0]
90018c58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c5c:	1b1b      	subs	r3, r3, r4
90018c5e:	ee27 7a04 	vmul.f32	s14, s14, s8
90018c62:	ee25 5a47 	vnmul.f32	s10, s10, s14
90018c66:	ee07 3a10 	vmov	s14, r3
90018c6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c6e:	ee27 7a04 	vmul.f32	s14, s14, s8
90018c72:	eea5 5a87 	vfma.f32	s10, s11, s14
90018c76:	edd0 5a08 	vldr	s11, [r0, #32]
90018c7a:	ee31 1a65 	vsub.f32	s2, s2, s11
90018c7e:	ee72 5ae5 	vsub.f32	s11, s5, s11
90018c82:	ee25 5a06 	vmul.f32	s10, s10, s12
90018c86:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
90018c8a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018c8c:	698b      	ldr	r3, [r1, #24]
90018c8e:	1a9b      	subs	r3, r3, r2
90018c90:	ee07 3a10 	vmov	s14, r3
90018c94:	684b      	ldr	r3, [r1, #4]
90018c96:	1a9b      	subs	r3, r3, r2
90018c98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c9c:	ee01 3a90 	vmov	s3, r3
90018ca0:	ee27 7a04 	vmul.f32	s14, s14, s8
90018ca4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90018ca8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90018cac:	ee61 1a84 	vmul.f32	s3, s3, s8
90018cb0:	eea1 7a21 	vfma.f32	s14, s2, s3
90018cb4:	ee27 7a03 	vmul.f32	s14, s14, s6
90018cb8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90018cbc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018cbe:	694a      	ldr	r2, [r1, #20]
90018cc0:	1b13      	subs	r3, r2, r4
90018cc2:	ee03 3a10 	vmov	s6, r3
90018cc6:	680b      	ldr	r3, [r1, #0]
90018cc8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018ccc:	1b1b      	subs	r3, r3, r4
90018cce:	ee23 3a04 	vmul.f32	s6, s6, s8
90018cd2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90018cd6:	ee03 3a10 	vmov	s6, r3
90018cda:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018cde:	ee23 4a04 	vmul.f32	s8, s6, s8
90018ce2:	eee1 5a04 	vfma.f32	s11, s2, s8
90018ce6:	ee25 6a86 	vmul.f32	s12, s11, s12
90018cea:	ee62 5a67 	vnmul.f32	s11, s4, s15
90018cee:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90018cf2:	eee3 5aa6 	vfma.f32	s11, s7, s13
90018cf6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90018cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018cfe:	dd13      	ble.n	90018d28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90018d00:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018d04:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90018d08:	63c3      	str	r3, [r0, #60]	; 0x3c
90018d0a:	eee3 7a87 	vfma.f32	s15, s7, s14
90018d0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90018d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018d16:	dd15      	ble.n	90018d44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90018d18:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018d1c:	6403      	str	r3, [r0, #64]	; 0x40
90018d1e:	bd70      	pop	{r4, r5, r6, pc}
90018d20:	4623      	mov	r3, r4
90018d22:	e6fd      	b.n	90018b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018d24:	462a      	mov	r2, r5
90018d26:	e706      	b.n	90018b36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018d28:	d502      	bpl.n	90018d30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90018d2a:	f647 73ff 	movw	r3, #32767	; 0x7fff
90018d2e:	e7e9      	b.n	90018d04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90018d30:	ee22 2a64 	vnmul.f32	s4, s4, s9
90018d34:	eea3 2a85 	vfma.f32	s4, s7, s10
90018d38:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018d3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018d40:	dade      	bge.n	90018d00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90018d42:	e7f2      	b.n	90018d2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90018d44:	d502      	bpl.n	90018d4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90018d46:	f647 73ff 	movw	r3, #32767	; 0x7fff
90018d4a:	e7e7      	b.n	90018d1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90018d4c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90018d50:	eee3 4a86 	vfma.f32	s9, s7, s12
90018d54:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90018d58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018d5c:	dadc      	bge.n	90018d18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
90018d5e:	e7f2      	b.n	90018d46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90018d60:	3d800000 	.word	0x3d800000

90018d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90018d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018d68:	2714      	movs	r7, #20
90018d6a:	435f      	muls	r7, r3
90018d6c:	eb02 0c07 	add.w	ip, r2, r7
90018d70:	f8dc 5004 	ldr.w	r5, [ip, #4]
90018d74:	f115 0e0f 	adds.w	lr, r5, #15
90018d78:	f100 80a2 	bmi.w	90018ec0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90018d7c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90018d80:	9c08      	ldr	r4, [sp, #32]
90018d82:	2614      	movs	r6, #20
90018d84:	f8c0 e014 	str.w	lr, [r0, #20]
90018d88:	4366      	muls	r6, r4
90018d8a:	eb02 0806 	add.w	r8, r2, r6
90018d8e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90018d92:	f115 040f 	adds.w	r4, r5, #15
90018d96:	f100 809f 	bmi.w	90018ed8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
90018d9a:	1124      	asrs	r4, r4, #4
90018d9c:	eba4 040e 	sub.w	r4, r4, lr
90018da0:	6184      	str	r4, [r0, #24]
90018da2:	2c00      	cmp	r4, #0
90018da4:	f000 808a 	beq.w	90018ebc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90018da8:	f8dc 9004 	ldr.w	r9, [ip, #4]
90018dac:	f8d8 4004 	ldr.w	r4, [r8, #4]
90018db0:	5995      	ldr	r5, [r2, r6]
90018db2:	eba4 0809 	sub.w	r8, r4, r9
90018db6:	59d4      	ldr	r4, [r2, r7]
90018db8:	eba5 0a04 	sub.w	sl, r5, r4
90018dbc:	ea4f 1608 	mov.w	r6, r8, lsl #4
90018dc0:	ea4f 150a 	mov.w	r5, sl, lsl #4
90018dc4:	fb0e fe05 	mul.w	lr, lr, r5
90018dc8:	fb0a ee19 	mls	lr, sl, r9, lr
90018dcc:	fb08 e404 	mla	r4, r8, r4, lr
90018dd0:	3c01      	subs	r4, #1
90018dd2:	19a4      	adds	r4, r4, r6
90018dd4:	f100 808c 	bmi.w	90018ef0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90018dd8:	fb94 fef6 	sdiv	lr, r4, r6
90018ddc:	fb06 441e 	mls	r4, r6, lr, r4
90018de0:	f8c0 e000 	str.w	lr, [r0]
90018de4:	6104      	str	r4, [r0, #16]
90018de6:	2d00      	cmp	r5, #0
90018de8:	f2c0 8095 	blt.w	90018f16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90018dec:	fb95 f4f6 	sdiv	r4, r5, r6
90018df0:	fb06 5514 	mls	r5, r6, r4, r5
90018df4:	6044      	str	r4, [r0, #4]
90018df6:	6085      	str	r5, [r0, #8]
90018df8:	60c6      	str	r6, [r0, #12]
90018dfa:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90018dfe:	f8dc 4004 	ldr.w	r4, [ip, #4]
90018e02:	6945      	ldr	r5, [r0, #20]
90018e04:	59d2      	ldr	r2, [r2, r7]
90018e06:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90018e0a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 90018f38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90018e0e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90018e12:	ee07 4a10 	vmov	s14, r4
90018e16:	6804      	ldr	r4, [r0, #0]
90018e18:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018e1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018e20:	ee07 2a90 	vmov	s15, r2
90018e24:	ee27 7a26 	vmul.f32	s14, s14, s13
90018e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018e2c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018e30:	edd3 6a00 	vldr	s13, [r3]
90018e34:	eee6 6a07 	vfma.f32	s13, s12, s14
90018e38:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
90018e3c:	eee6 6a27 	vfma.f32	s13, s12, s15
90018e40:	edc0 6a07 	vstr	s13, [r0, #28]
90018e44:	edd0 6a01 	vldr	s13, [r0, #4]
90018e48:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
90018e4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018e50:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90018e54:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018e58:	ed80 6a08 	vstr	s12, [r0, #32]
90018e5c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
90018e5e:	6242      	str	r2, [r0, #36]	; 0x24
90018e60:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
90018e64:	ed93 6a03 	vldr	s12, [r3, #12]
90018e68:	eea5 6a87 	vfma.f32	s12, s11, s14
90018e6c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90018e70:	eea5 6aa7 	vfma.f32	s12, s11, s15
90018e74:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
90018e78:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90018e7c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90018e80:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018e84:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
90018e88:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018e8a:	6302      	str	r2, [r0, #48]	; 0x30
90018e8c:	ed93 6a06 	vldr	s12, [r3, #24]
90018e90:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90018e94:	eea5 6a87 	vfma.f32	s12, s11, s14
90018e98:	eeb0 7a46 	vmov.f32	s14, s12
90018e9c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90018ea0:	eea6 7a27 	vfma.f32	s14, s12, s15
90018ea4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90018ea8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
90018eac:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90018eb0:	eee6 7a87 	vfma.f32	s15, s13, s14
90018eb4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90018eb8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
90018eba:	63c3      	str	r3, [r0, #60]	; 0x3c
90018ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018ec0:	2410      	movs	r4, #16
90018ec2:	f1c5 0501 	rsb	r5, r5, #1
90018ec6:	fb9e fef4 	sdiv	lr, lr, r4
90018eca:	f015 050f 	ands.w	r5, r5, #15
90018ece:	bf18      	it	ne
90018ed0:	2501      	movne	r5, #1
90018ed2:	ebae 0e05 	sub.w	lr, lr, r5
90018ed6:	e753      	b.n	90018d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90018ed8:	f04f 0910 	mov.w	r9, #16
90018edc:	f1c5 0501 	rsb	r5, r5, #1
90018ee0:	fb94 f4f9 	sdiv	r4, r4, r9
90018ee4:	f015 050f 	ands.w	r5, r5, #15
90018ee8:	bf18      	it	ne
90018eea:	2501      	movne	r5, #1
90018eec:	1b64      	subs	r4, r4, r5
90018eee:	e755      	b.n	90018d9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90018ef0:	4264      	negs	r4, r4
90018ef2:	fb94 fef6 	sdiv	lr, r4, r6
90018ef6:	f1ce 0800 	rsb	r8, lr, #0
90018efa:	fb06 441e 	mls	r4, r6, lr, r4
90018efe:	f8c0 8000 	str.w	r8, [r0]
90018f02:	6104      	str	r4, [r0, #16]
90018f04:	2c00      	cmp	r4, #0
90018f06:	f43f af6e 	beq.w	90018de6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90018f0a:	ea6f 0e0e 	mvn.w	lr, lr
90018f0e:	1b34      	subs	r4, r6, r4
90018f10:	f8c0 e000 	str.w	lr, [r0]
90018f14:	e766      	b.n	90018de4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90018f16:	426d      	negs	r5, r5
90018f18:	fb95 f4f6 	sdiv	r4, r5, r6
90018f1c:	f1c4 0e00 	rsb	lr, r4, #0
90018f20:	fb06 5514 	mls	r5, r6, r4, r5
90018f24:	f8c0 e004 	str.w	lr, [r0, #4]
90018f28:	6085      	str	r5, [r0, #8]
90018f2a:	2d00      	cmp	r5, #0
90018f2c:	f43f af64 	beq.w	90018df8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90018f30:	43e4      	mvns	r4, r4
90018f32:	1b75      	subs	r5, r6, r5
90018f34:	6044      	str	r4, [r0, #4]
90018f36:	e75e      	b.n	90018df6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90018f38:	3d800000 	.word	0x3d800000

90018f3c <_ZN8touchgfx7Unicode6strlenEPKt>:
90018f3c:	4602      	mov	r2, r0
90018f3e:	b148      	cbz	r0, 90018f54 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90018f40:	2300      	movs	r3, #0
90018f42:	b298      	uxth	r0, r3
90018f44:	3301      	adds	r3, #1
90018f46:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90018f4a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
90018f4e:	2900      	cmp	r1, #0
90018f50:	d1f7      	bne.n	90018f42 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90018f52:	4770      	bx	lr
90018f54:	4770      	bx	lr

90018f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90018f56:	b530      	push	{r4, r5, lr}
90018f58:	4604      	mov	r4, r0
90018f5a:	b159      	cbz	r1, 90018f74 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90018f5c:	b148      	cbz	r0, 90018f72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90018f5e:	2300      	movs	r3, #0
90018f60:	b298      	uxth	r0, r3
90018f62:	4282      	cmp	r2, r0
90018f64:	d905      	bls.n	90018f72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90018f66:	5ccd      	ldrb	r5, [r1, r3]
90018f68:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90018f6c:	3301      	adds	r3, #1
90018f6e:	2d00      	cmp	r5, #0
90018f70:	d1f6      	bne.n	90018f60 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90018f72:	bd30      	pop	{r4, r5, pc}
90018f74:	4608      	mov	r0, r1
90018f76:	e7fc      	b.n	90018f72 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90018f78 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90018f78:	b5f0      	push	{r4, r5, r6, r7, lr}
90018f7a:	b08b      	sub	sp, #44	; 0x2c
90018f7c:	468c      	mov	ip, r1
90018f7e:	4604      	mov	r4, r0
90018f80:	2100      	movs	r1, #0
90018f82:	261f      	movs	r6, #31
90018f84:	af01      	add	r7, sp, #4
90018f86:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90018f8a:	1e71      	subs	r1, r6, #1
90018f8c:	fb94 fef3 	sdiv	lr, r4, r3
90018f90:	fb03 441e 	mls	r4, r3, lr, r4
90018f94:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90018f98:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90018f9c:	b2ec      	uxtb	r4, r5
90018f9e:	2d09      	cmp	r5, #9
90018fa0:	bfd4      	ite	le
90018fa2:	3430      	addle	r4, #48	; 0x30
90018fa4:	3457      	addgt	r4, #87	; 0x57
90018fa6:	b2e4      	uxtb	r4, r4
90018fa8:	55bc      	strb	r4, [r7, r6]
90018faa:	4674      	mov	r4, lr
90018fac:	b974      	cbnz	r4, 90018fcc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90018fae:	2800      	cmp	r0, #0
90018fb0:	da05      	bge.n	90018fbe <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90018fb2:	ab0a      	add	r3, sp, #40	; 0x28
90018fb4:	4419      	add	r1, r3
90018fb6:	232d      	movs	r3, #45	; 0x2d
90018fb8:	f801 3c24 	strb.w	r3, [r1, #-36]
90018fbc:	1eb1      	subs	r1, r6, #2
90018fbe:	3101      	adds	r1, #1
90018fc0:	4660      	mov	r0, ip
90018fc2:	4439      	add	r1, r7
90018fc4:	f7ff ffc7 	bl	90018f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90018fc8:	b00b      	add	sp, #44	; 0x2c
90018fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018fcc:	460e      	mov	r6, r1
90018fce:	e7dc      	b.n	90018f8a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90018fd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90018fd0:	b5f0      	push	{r4, r5, r6, r7, lr}
90018fd2:	468c      	mov	ip, r1
90018fd4:	b08b      	sub	sp, #44	; 0x2c
90018fd6:	2100      	movs	r1, #0
90018fd8:	ae01      	add	r6, sp, #4
90018fda:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90018fde:	211f      	movs	r1, #31
90018fe0:	fbb0 f7f3 	udiv	r7, r0, r3
90018fe4:	fb03 0517 	mls	r5, r3, r7, r0
90018fe8:	4638      	mov	r0, r7
90018fea:	b2ec      	uxtb	r4, r5
90018fec:	2d09      	cmp	r5, #9
90018fee:	bfd4      	ite	le
90018ff0:	3430      	addle	r4, #48	; 0x30
90018ff2:	3457      	addgt	r4, #87	; 0x57
90018ff4:	b2e4      	uxtb	r4, r4
90018ff6:	558c      	strb	r4, [r1, r6]
90018ff8:	1e4c      	subs	r4, r1, #1
90018ffa:	b92f      	cbnz	r7, 90019008 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90018ffc:	4431      	add	r1, r6
90018ffe:	4660      	mov	r0, ip
90019000:	f7ff ffa9 	bl	90018f56 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019004:	b00b      	add	sp, #44	; 0x2c
90019006:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019008:	4621      	mov	r1, r4
9001900a:	e7e9      	b.n	90018fe0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001900c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001900c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019010:	b085      	sub	sp, #20
90019012:	4691      	mov	r9, r2
90019014:	6802      	ldr	r2, [r0, #0]
90019016:	4688      	mov	r8, r1
90019018:	461c      	mov	r4, r3
9001901a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001901e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90019022:	4683      	mov	fp, r0
90019024:	4610      	mov	r0, r2
90019026:	9103      	str	r1, [sp, #12]
90019028:	9302      	str	r3, [sp, #8]
9001902a:	9201      	str	r2, [sp, #4]
9001902c:	f7ff ff86 	bl	90018f3c <_ZN8touchgfx7Unicode6strlenEPKt>
90019030:	f1b8 0f00 	cmp.w	r8, #0
90019034:	bf0c      	ite	eq
90019036:	4684      	moveq	ip, r0
90019038:	f100 0c01 	addne.w	ip, r0, #1
9001903c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90019040:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90019044:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90019046:	fa1f fc8c 	uxth.w	ip, ip
9001904a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001904c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90019050:	9903      	ldr	r1, [sp, #12]
90019052:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90019056:	d041      	beq.n	900190dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90019058:	d834      	bhi.n	900190c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001905a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
9001905e:	d059      	beq.n	90019114 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90019060:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90019064:	d03a      	beq.n	900190dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90019066:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001906a:	d034      	beq.n	900190d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001906c:	2400      	movs	r4, #0
9001906e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90019072:	3a01      	subs	r2, #1
90019074:	b169      	cbz	r1, 90019092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019076:	9911      	ldr	r1, [sp, #68]	; 0x44
90019078:	458c      	cmp	ip, r1
9001907a:	da09      	bge.n	90019090 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001907c:	eba1 010c 	sub.w	r1, r1, ip
90019080:	b289      	uxth	r1, r1
90019082:	b933      	cbnz	r3, 90019092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019084:	2e00      	cmp	r6, #0
90019086:	d051      	beq.n	9001912c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019088:	2800      	cmp	r0, #0
9001908a:	d04f      	beq.n	9001912c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001908c:	440c      	add	r4, r1
9001908e:	b2a4      	uxth	r4, r4
90019090:	2100      	movs	r1, #0
90019092:	682b      	ldr	r3, [r5, #0]
90019094:	4293      	cmp	r3, r2
90019096:	da07      	bge.n	900190a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019098:	f1b8 0f00 	cmp.w	r8, #0
9001909c:	d004      	beq.n	900190a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001909e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
900190a2:	682b      	ldr	r3, [r5, #0]
900190a4:	3301      	adds	r3, #1
900190a6:	602b      	str	r3, [r5, #0]
900190a8:	2730      	movs	r7, #48	; 0x30
900190aa:	2c00      	cmp	r4, #0
900190ac:	d04e      	beq.n	9001914c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900190ae:	682e      	ldr	r6, [r5, #0]
900190b0:	3c01      	subs	r4, #1
900190b2:	42b2      	cmp	r2, r6
900190b4:	b2a4      	uxth	r4, r4
900190b6:	dd49      	ble.n	9001914c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900190b8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900190bc:	682b      	ldr	r3, [r5, #0]
900190be:	3301      	adds	r3, #1
900190c0:	602b      	str	r3, [r5, #0]
900190c2:	e7f2      	b.n	900190aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
900190c4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
900190c8:	d01d      	beq.n	90019106 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
900190ca:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
900190ce:	d002      	beq.n	900190d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900190d0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
900190d4:	e7c9      	b.n	9001906a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
900190d6:	4684      	mov	ip, r0
900190d8:	f04f 0800 	mov.w	r8, #0
900190dc:	2c00      	cmp	r4, #0
900190de:	d0c6      	beq.n	9001906e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900190e0:	b947      	cbnz	r7, 900190f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
900190e2:	2801      	cmp	r0, #1
900190e4:	d106      	bne.n	900190f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
900190e6:	8814      	ldrh	r4, [r2, #0]
900190e8:	2c30      	cmp	r4, #48	; 0x30
900190ea:	bf02      	ittt	eq
900190ec:	3202      	addeq	r2, #2
900190ee:	4638      	moveq	r0, r7
900190f0:	f8cb 2000 	streq.w	r2, [fp]
900190f4:	45bc      	cmp	ip, r7
900190f6:	da14      	bge.n	90019122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
900190f8:	b2bf      	uxth	r7, r7
900190fa:	eba7 040c 	sub.w	r4, r7, ip
900190fe:	46bc      	mov	ip, r7
90019100:	b2a4      	uxth	r4, r4
90019102:	2600      	movs	r6, #0
90019104:	e7b3      	b.n	9001906e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019106:	4684      	mov	ip, r0
90019108:	b16c      	cbz	r4, 90019126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001910a:	42b8      	cmp	r0, r7
9001910c:	dd00      	ble.n	90019110 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001910e:	b2b8      	uxth	r0, r7
90019110:	2400      	movs	r4, #0
90019112:	e003      	b.n	9001911c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90019114:	f04f 0c01 	mov.w	ip, #1
90019118:	2400      	movs	r4, #0
9001911a:	4660      	mov	r0, ip
9001911c:	4626      	mov	r6, r4
9001911e:	46a0      	mov	r8, r4
90019120:	e7a5      	b.n	9001906e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019122:	2400      	movs	r4, #0
90019124:	e7ed      	b.n	90019102 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90019126:	4626      	mov	r6, r4
90019128:	46a0      	mov	r8, r4
9001912a:	e7a0      	b.n	9001906e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001912c:	2900      	cmp	r1, #0
9001912e:	d0b0      	beq.n	90019092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019130:	2720      	movs	r7, #32
90019132:	682e      	ldr	r6, [r5, #0]
90019134:	2900      	cmp	r1, #0
90019136:	d0ac      	beq.n	90019092 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019138:	3901      	subs	r1, #1
9001913a:	4296      	cmp	r6, r2
9001913c:	b289      	uxth	r1, r1
9001913e:	daa7      	bge.n	90019090 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019140:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019144:	682b      	ldr	r3, [r5, #0]
90019146:	3301      	adds	r3, #1
90019148:	602b      	str	r3, [r5, #0]
9001914a:	e7f2      	b.n	90019132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001914c:	b188      	cbz	r0, 90019172 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001914e:	682b      	ldr	r3, [r5, #0]
90019150:	3801      	subs	r0, #1
90019152:	429a      	cmp	r2, r3
90019154:	b280      	uxth	r0, r0
90019156:	dd0c      	ble.n	90019172 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90019158:	f8db 3000 	ldr.w	r3, [fp]
9001915c:	1c9c      	adds	r4, r3, #2
9001915e:	f8cb 4000 	str.w	r4, [fp]
90019162:	881c      	ldrh	r4, [r3, #0]
90019164:	682b      	ldr	r3, [r5, #0]
90019166:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001916a:	682b      	ldr	r3, [r5, #0]
9001916c:	3301      	adds	r3, #1
9001916e:	602b      	str	r3, [r5, #0]
90019170:	e7ec      	b.n	9001914c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019172:	2620      	movs	r6, #32
90019174:	b151      	cbz	r1, 9001918c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019176:	6828      	ldr	r0, [r5, #0]
90019178:	3901      	subs	r1, #1
9001917a:	4282      	cmp	r2, r0
9001917c:	b289      	uxth	r1, r1
9001917e:	dd05      	ble.n	9001918c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019180:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90019184:	682b      	ldr	r3, [r5, #0]
90019186:	3301      	adds	r3, #1
90019188:	602b      	str	r3, [r5, #0]
9001918a:	e7f3      	b.n	90019174 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001918c:	b005      	add	sp, #20
9001918e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90019192:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019196:	2400      	movs	r4, #0
90019198:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001919c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
900191a0:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
900191a4:	8014      	strh	r4, [r2, #0]
900191a6:	701c      	strb	r4, [r3, #0]
900191a8:	f888 4000 	strb.w	r4, [r8]
900191ac:	f88c 4000 	strb.w	r4, [ip]
900191b0:	f88e 4000 	strb.w	r4, [lr]
900191b4:	703c      	strb	r4, [r7, #0]
900191b6:	6804      	ldr	r4, [r0, #0]
900191b8:	b1a4      	cbz	r4, 900191e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
900191ba:	8824      	ldrh	r4, [r4, #0]
900191bc:	f04f 0901 	mov.w	r9, #1
900191c0:	b314      	cbz	r4, 90019208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
900191c2:	2c2b      	cmp	r4, #43	; 0x2b
900191c4:	d001      	beq.n	900191ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
900191c6:	2c20      	cmp	r4, #32
900191c8:	d110      	bne.n	900191ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
900191ca:	8014      	strh	r4, [r2, #0]
900191cc:	6804      	ldr	r4, [r0, #0]
900191ce:	b10c      	cbz	r4, 900191d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
900191d0:	3402      	adds	r4, #2
900191d2:	6004      	str	r4, [r0, #0]
900191d4:	680c      	ldr	r4, [r1, #0]
900191d6:	b10c      	cbz	r4, 900191dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
900191d8:	3401      	adds	r4, #1
900191da:	600c      	str	r4, [r1, #0]
900191dc:	6804      	ldr	r4, [r0, #0]
900191de:	b17c      	cbz	r4, 90019200 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
900191e0:	8824      	ldrh	r4, [r4, #0]
900191e2:	e7ed      	b.n	900191c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
900191e4:	680c      	ldr	r4, [r1, #0]
900191e6:	b17c      	cbz	r4, 90019208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
900191e8:	7824      	ldrb	r4, [r4, #0]
900191ea:	e7e7      	b.n	900191bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
900191ec:	2c2d      	cmp	r4, #45	; 0x2d
900191ee:	d102      	bne.n	900191f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
900191f0:	f883 9000 	strb.w	r9, [r3]
900191f4:	e7ea      	b.n	900191cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
900191f6:	2c23      	cmp	r4, #35	; 0x23
900191f8:	d107      	bne.n	9001920a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
900191fa:	f888 9000 	strb.w	r9, [r8]
900191fe:	e7e5      	b.n	900191cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019200:	680c      	ldr	r4, [r1, #0]
90019202:	b10c      	cbz	r4, 90019208 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019204:	7824      	ldrb	r4, [r4, #0]
90019206:	e7db      	b.n	900191c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019208:	2400      	movs	r4, #0
9001920a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001920e:	2b09      	cmp	r3, #9
90019210:	d901      	bls.n	90019216 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90019212:	2c2a      	cmp	r4, #42	; 0x2a
90019214:	d122      	bne.n	9001925c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019216:	2301      	movs	r3, #1
90019218:	2c30      	cmp	r4, #48	; 0x30
9001921a:	f88e 3000 	strb.w	r3, [lr]
9001921e:	d10d      	bne.n	9001923c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019220:	f88c 3000 	strb.w	r3, [ip]
90019224:	6803      	ldr	r3, [r0, #0]
90019226:	b10b      	cbz	r3, 9001922c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90019228:	3302      	adds	r3, #2
9001922a:	6003      	str	r3, [r0, #0]
9001922c:	680b      	ldr	r3, [r1, #0]
9001922e:	b10b      	cbz	r3, 90019234 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90019230:	3301      	adds	r3, #1
90019232:	600b      	str	r3, [r1, #0]
90019234:	6803      	ldr	r3, [r0, #0]
90019236:	2b00      	cmp	r3, #0
90019238:	d02f      	beq.n	9001929a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001923a:	881c      	ldrh	r4, [r3, #0]
9001923c:	2c2a      	cmp	r4, #42	; 0x2a
9001923e:	d135      	bne.n	900192ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019240:	f04f 33ff 	mov.w	r3, #4294967295
90019244:	6033      	str	r3, [r6, #0]
90019246:	6803      	ldr	r3, [r0, #0]
90019248:	b10b      	cbz	r3, 9001924e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001924a:	3302      	adds	r3, #2
9001924c:	6003      	str	r3, [r0, #0]
9001924e:	680b      	ldr	r3, [r1, #0]
90019250:	b10b      	cbz	r3, 90019256 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90019252:	3301      	adds	r3, #1
90019254:	600b      	str	r3, [r1, #0]
90019256:	6803      	ldr	r3, [r0, #0]
90019258:	b31b      	cbz	r3, 900192a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001925a:	881c      	ldrh	r4, [r3, #0]
9001925c:	2c2e      	cmp	r4, #46	; 0x2e
9001925e:	d11a      	bne.n	90019296 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019260:	2301      	movs	r3, #1
90019262:	703b      	strb	r3, [r7, #0]
90019264:	6803      	ldr	r3, [r0, #0]
90019266:	b10b      	cbz	r3, 9001926c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90019268:	3302      	adds	r3, #2
9001926a:	6003      	str	r3, [r0, #0]
9001926c:	680b      	ldr	r3, [r1, #0]
9001926e:	b10b      	cbz	r3, 90019274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90019270:	3301      	adds	r3, #1
90019272:	600b      	str	r3, [r1, #0]
90019274:	6803      	ldr	r3, [r0, #0]
90019276:	2b00      	cmp	r3, #0
90019278:	d036      	beq.n	900192e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001927a:	881b      	ldrh	r3, [r3, #0]
9001927c:	2b2a      	cmp	r3, #42	; 0x2a
9001927e:	d137      	bne.n	900192f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019280:	f04f 33ff 	mov.w	r3, #4294967295
90019284:	602b      	str	r3, [r5, #0]
90019286:	6803      	ldr	r3, [r0, #0]
90019288:	b10b      	cbz	r3, 9001928e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001928a:	3302      	adds	r3, #2
9001928c:	6003      	str	r3, [r0, #0]
9001928e:	680b      	ldr	r3, [r1, #0]
90019290:	b10b      	cbz	r3, 90019296 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019292:	3301      	adds	r3, #1
90019294:	600b      	str	r3, [r1, #0]
90019296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001929a:	680c      	ldr	r4, [r1, #0]
9001929c:	b134      	cbz	r4, 900192ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001929e:	7824      	ldrb	r4, [r4, #0]
900192a0:	e7cc      	b.n	9001923c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
900192a2:	680b      	ldr	r3, [r1, #0]
900192a4:	2b00      	cmp	r3, #0
900192a6:	d0f6      	beq.n	90019296 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900192a8:	781c      	ldrb	r4, [r3, #0]
900192aa:	e7d7      	b.n	9001925c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
900192ac:	2300      	movs	r3, #0
900192ae:	220a      	movs	r2, #10
900192b0:	6033      	str	r3, [r6, #0]
900192b2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
900192b6:	fa1f f38c 	uxth.w	r3, ip
900192ba:	2b09      	cmp	r3, #9
900192bc:	d8ce      	bhi.n	9001925c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
900192be:	6833      	ldr	r3, [r6, #0]
900192c0:	fb02 c303 	mla	r3, r2, r3, ip
900192c4:	6033      	str	r3, [r6, #0]
900192c6:	6803      	ldr	r3, [r0, #0]
900192c8:	b10b      	cbz	r3, 900192ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
900192ca:	3302      	adds	r3, #2
900192cc:	6003      	str	r3, [r0, #0]
900192ce:	680b      	ldr	r3, [r1, #0]
900192d0:	b10b      	cbz	r3, 900192d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
900192d2:	3301      	adds	r3, #1
900192d4:	600b      	str	r3, [r1, #0]
900192d6:	6803      	ldr	r3, [r0, #0]
900192d8:	b10b      	cbz	r3, 900192de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
900192da:	881c      	ldrh	r4, [r3, #0]
900192dc:	e7e9      	b.n	900192b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
900192de:	680c      	ldr	r4, [r1, #0]
900192e0:	2c00      	cmp	r4, #0
900192e2:	d0e6      	beq.n	900192b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
900192e4:	7824      	ldrb	r4, [r4, #0]
900192e6:	e7e4      	b.n	900192b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
900192e8:	680b      	ldr	r3, [r1, #0]
900192ea:	b10b      	cbz	r3, 900192f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900192ec:	781b      	ldrb	r3, [r3, #0]
900192ee:	e7c5      	b.n	9001927c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
900192f0:	2200      	movs	r2, #0
900192f2:	240a      	movs	r4, #10
900192f4:	602a      	str	r2, [r5, #0]
900192f6:	3b30      	subs	r3, #48	; 0x30
900192f8:	682a      	ldr	r2, [r5, #0]
900192fa:	b29e      	uxth	r6, r3
900192fc:	2e09      	cmp	r6, #9
900192fe:	d813      	bhi.n	90019328 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019300:	fb04 3302 	mla	r3, r4, r2, r3
90019304:	602b      	str	r3, [r5, #0]
90019306:	6803      	ldr	r3, [r0, #0]
90019308:	b10b      	cbz	r3, 9001930e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001930a:	3302      	adds	r3, #2
9001930c:	6003      	str	r3, [r0, #0]
9001930e:	680b      	ldr	r3, [r1, #0]
90019310:	b10b      	cbz	r3, 90019316 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90019312:	3301      	adds	r3, #1
90019314:	600b      	str	r3, [r1, #0]
90019316:	6803      	ldr	r3, [r0, #0]
90019318:	b10b      	cbz	r3, 9001931e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001931a:	881b      	ldrh	r3, [r3, #0]
9001931c:	e7eb      	b.n	900192f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001931e:	680b      	ldr	r3, [r1, #0]
90019320:	2b00      	cmp	r3, #0
90019322:	d0e8      	beq.n	900192f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019324:	781b      	ldrb	r3, [r3, #0]
90019326:	e7e6      	b.n	900192f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019328:	2a06      	cmp	r2, #6
9001932a:	bfa8      	it	ge
9001932c:	2206      	movge	r2, #6
9001932e:	602a      	str	r2, [r5, #0]
90019330:	e7b1      	b.n	90019296 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90019332 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90019332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019336:	b0a3      	sub	sp, #140	; 0x8c
90019338:	2600      	movs	r6, #0
9001933a:	4607      	mov	r7, r0
9001933c:	4688      	mov	r8, r1
9001933e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90019342:	4631      	mov	r1, r6
90019344:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90019346:	4648      	mov	r0, r9
90019348:	960d      	str	r6, [sp, #52]	; 0x34
9001934a:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001934e:	2242      	movs	r2, #66	; 0x42
90019350:	f00e fc64 	bl	90027c1c <memset>
90019354:	b15f      	cbz	r7, 9001936e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90019356:	f108 3aff 	add.w	sl, r8, #4294967295
9001935a:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001935c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001935e:	b152      	cbz	r2, 90019376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90019360:	8812      	ldrh	r2, [r2, #0]
90019362:	b10a      	cbz	r2, 90019368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019364:	459a      	cmp	sl, r3
90019366:	dc2e      	bgt.n	900193c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90019368:	2200      	movs	r2, #0
9001936a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001936e:	4638      	mov	r0, r7
90019370:	b023      	add	sp, #140	; 0x8c
90019372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019376:	9a08      	ldr	r2, [sp, #32]
90019378:	2a00      	cmp	r2, #0
9001937a:	d0f5      	beq.n	90019368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001937c:	7812      	ldrb	r2, [r2, #0]
9001937e:	e7f0      	b.n	90019362 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90019380:	2d00      	cmp	r5, #0
90019382:	d0ea      	beq.n	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019384:	782a      	ldrb	r2, [r5, #0]
90019386:	b142      	cbz	r2, 9001939a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90019388:	2a25      	cmp	r2, #37	; 0x25
9001938a:	d001      	beq.n	90019390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001938c:	459a      	cmp	sl, r3
9001938e:	dc08      	bgt.n	900193a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019390:	f1bb 0f00 	cmp.w	fp, #0
90019394:	d121      	bne.n	900193da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019396:	2d00      	cmp	r5, #0
90019398:	d0df      	beq.n	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001939a:	782a      	ldrb	r2, [r5, #0]
9001939c:	f04f 0b00 	mov.w	fp, #0
900193a0:	e01d      	b.n	900193de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
900193a2:	f1bb 0f00 	cmp.w	fp, #0
900193a6:	d077      	beq.n	90019498 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
900193a8:	f8bb 2000 	ldrh.w	r2, [fp]
900193ac:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900193b0:	f1bb 0f00 	cmp.w	fp, #0
900193b4:	d002      	beq.n	900193bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
900193b6:	f10b 0202 	add.w	r2, fp, #2
900193ba:	9209      	str	r2, [sp, #36]	; 0x24
900193bc:	b10d      	cbz	r5, 900193c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
900193be:	3501      	adds	r5, #1
900193c0:	9508      	str	r5, [sp, #32]
900193c2:	3301      	adds	r3, #1
900193c4:	930d      	str	r3, [sp, #52]	; 0x34
900193c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900193c8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
900193cc:	f1bb 0f00 	cmp.w	fp, #0
900193d0:	d0d6      	beq.n	90019380 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
900193d2:	f8bb 2000 	ldrh.w	r2, [fp]
900193d6:	2a00      	cmp	r2, #0
900193d8:	d1d6      	bne.n	90019388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
900193da:	f8bb 2000 	ldrh.w	r2, [fp]
900193de:	2a00      	cmp	r2, #0
900193e0:	d0bb      	beq.n	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900193e2:	459a      	cmp	sl, r3
900193e4:	ddb9      	ble.n	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900193e6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
900193ea:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
900193ee:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
900193f2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
900193f6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
900193fa:	960e      	str	r6, [sp, #56]	; 0x38
900193fc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90019400:	960f      	str	r6, [sp, #60]	; 0x3c
90019402:	f1bb 0f00 	cmp.w	fp, #0
90019406:	d002      	beq.n	9001940e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90019408:	f10b 0302 	add.w	r3, fp, #2
9001940c:	9309      	str	r3, [sp, #36]	; 0x24
9001940e:	b10d      	cbz	r5, 90019414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90019410:	1c6b      	adds	r3, r5, #1
90019412:	9308      	str	r3, [sp, #32]
90019414:	ab0f      	add	r3, sp, #60	; 0x3c
90019416:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001941a:	a908      	add	r1, sp, #32
9001941c:	a809      	add	r0, sp, #36	; 0x24
9001941e:	9305      	str	r3, [sp, #20]
90019420:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90019424:	9304      	str	r3, [sp, #16]
90019426:	ab0e      	add	r3, sp, #56	; 0x38
90019428:	9303      	str	r3, [sp, #12]
9001942a:	ab0c      	add	r3, sp, #48	; 0x30
9001942c:	9302      	str	r3, [sp, #8]
9001942e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90019432:	9301      	str	r3, [sp, #4]
90019434:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90019438:	9300      	str	r3, [sp, #0]
9001943a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
9001943e:	f7ff fea8 	bl	90019192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90019442:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019444:	2b00      	cmp	r3, #0
90019446:	bfbf      	itttt	lt
90019448:	6823      	ldrlt	r3, [r4, #0]
9001944a:	3404      	addlt	r4, #4
9001944c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019450:	930e      	strlt	r3, [sp, #56]	; 0x38
90019452:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019454:	2b00      	cmp	r3, #0
90019456:	bfbe      	ittt	lt
90019458:	6823      	ldrlt	r3, [r4, #0]
9001945a:	3404      	addlt	r4, #4
9001945c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90019460:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90019464:	bfb8      	it	lt
90019466:	930f      	strlt	r3, [sp, #60]	; 0x3c
90019468:	b1d9      	cbz	r1, 900194a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001946a:	880b      	ldrh	r3, [r1, #0]
9001946c:	2b69      	cmp	r3, #105	; 0x69
9001946e:	d01f      	beq.n	900194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019470:	d82f      	bhi.n	900194d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90019472:	2b58      	cmp	r3, #88	; 0x58
90019474:	d01c      	beq.n	900194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019476:	d818      	bhi.n	900194aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90019478:	2b25      	cmp	r3, #37	; 0x25
9001947a:	d034      	beq.n	900194e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001947c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001947e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90019482:	f1bb 0f00 	cmp.w	fp, #0
90019486:	f000 80b7 	beq.w	900195f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001948a:	f8bb 5000 	ldrh.w	r5, [fp]
9001948e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019492:	3301      	adds	r3, #1
90019494:	930d      	str	r3, [sp, #52]	; 0x34
90019496:	e029      	b.n	900194ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019498:	b10d      	cbz	r5, 9001949e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001949a:	782a      	ldrb	r2, [r5, #0]
9001949c:	e786      	b.n	900193ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001949e:	462a      	mov	r2, r5
900194a0:	e784      	b.n	900193ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
900194a2:	2a00      	cmp	r2, #0
900194a4:	d0ea      	beq.n	9001947c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
900194a6:	7813      	ldrb	r3, [r2, #0]
900194a8:	e7e0      	b.n	9001946c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
900194aa:	3b63      	subs	r3, #99	; 0x63
900194ac:	2b01      	cmp	r3, #1
900194ae:	d8e5      	bhi.n	9001947c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
900194b0:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
900194b4:	b329      	cbz	r1, 90019502 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
900194b6:	880b      	ldrh	r3, [r1, #0]
900194b8:	2b69      	cmp	r3, #105	; 0x69
900194ba:	d063      	beq.n	90019584 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
900194bc:	d825      	bhi.n	9001950a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
900194be:	2b63      	cmp	r3, #99	; 0x63
900194c0:	d038      	beq.n	90019534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
900194c2:	2b64      	cmp	r3, #100	; 0x64
900194c4:	d05e      	beq.n	90019584 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
900194c6:	2b58      	cmp	r3, #88	; 0x58
900194c8:	d07a      	beq.n	900195c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
900194ca:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
900194ce:	4625      	mov	r5, r4
900194d0:	e036      	b.n	90019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900194d2:	2b73      	cmp	r3, #115	; 0x73
900194d4:	d0ec      	beq.n	900194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900194d6:	d802      	bhi.n	900194de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
900194d8:	2b6f      	cmp	r3, #111	; 0x6f
900194da:	d1cf      	bne.n	9001947c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
900194dc:	e7e8      	b.n	900194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900194de:	2b75      	cmp	r3, #117	; 0x75
900194e0:	d0e6      	beq.n	900194b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900194e2:	2b78      	cmp	r3, #120	; 0x78
900194e4:	e7f9      	b.n	900194da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
900194e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900194e8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
900194ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
900194ee:	b10b      	cbz	r3, 900194f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
900194f0:	3302      	adds	r3, #2
900194f2:	9309      	str	r3, [sp, #36]	; 0x24
900194f4:	9b08      	ldr	r3, [sp, #32]
900194f6:	2b00      	cmp	r3, #0
900194f8:	f43f af2f 	beq.w	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900194fc:	3301      	adds	r3, #1
900194fe:	9308      	str	r3, [sp, #32]
90019500:	e72b      	b.n	9001935a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019502:	2a00      	cmp	r2, #0
90019504:	d0e1      	beq.n	900194ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019506:	7813      	ldrb	r3, [r2, #0]
90019508:	e7d6      	b.n	900194b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001950a:	2b73      	cmp	r3, #115	; 0x73
9001950c:	d036      	beq.n	9001957c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001950e:	d807      	bhi.n	90019520 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019510:	2b6f      	cmp	r3, #111	; 0x6f
90019512:	d1da      	bne.n	900194ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019514:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019516:	1d25      	adds	r5, r4, #4
90019518:	2308      	movs	r3, #8
9001951a:	eba8 0202 	sub.w	r2, r8, r2
9001951e:	e049      	b.n	900195b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019520:	2b75      	cmp	r3, #117	; 0x75
90019522:	d042      	beq.n	900195aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019524:	2b78      	cmp	r3, #120	; 0x78
90019526:	d1d0      	bne.n	900194ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019528:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001952a:	1d25      	adds	r5, r4, #4
9001952c:	2310      	movs	r3, #16
9001952e:	eba8 0202 	sub.w	r2, r8, r2
90019532:	e03f      	b.n	900195b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019534:	6823      	ldr	r3, [r4, #0]
90019536:	1d25      	adds	r5, r4, #4
90019538:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
9001953c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90019540:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019542:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90019546:	2b00      	cmp	r3, #0
90019548:	d051      	beq.n	900195ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001954a:	881a      	ldrh	r2, [r3, #0]
9001954c:	a80d      	add	r0, sp, #52	; 0x34
9001954e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90019552:	462c      	mov	r4, r5
90019554:	9005      	str	r0, [sp, #20]
90019556:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001955a:	9004      	str	r0, [sp, #16]
9001955c:	980e      	ldr	r0, [sp, #56]	; 0x38
9001955e:	9003      	str	r0, [sp, #12]
90019560:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90019564:	9002      	str	r0, [sp, #8]
90019566:	980f      	ldr	r0, [sp, #60]	; 0x3c
90019568:	9001      	str	r0, [sp, #4]
9001956a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001956e:	e9cd 8706 	strd	r8, r7, [sp, #24]
90019572:	9000      	str	r0, [sp, #0]
90019574:	a810      	add	r0, sp, #64	; 0x40
90019576:	f7ff fd49 	bl	9001900c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001957a:	e7b7      	b.n	900194ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001957c:	1d25      	adds	r5, r4, #4
9001957e:	6823      	ldr	r3, [r4, #0]
90019580:	9310      	str	r3, [sp, #64]	; 0x40
90019582:	e7dd      	b.n	90019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019584:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019586:	230a      	movs	r3, #10
90019588:	4649      	mov	r1, r9
9001958a:	6820      	ldr	r0, [r4, #0]
9001958c:	eba8 0202 	sub.w	r2, r8, r2
90019590:	1d25      	adds	r5, r4, #4
90019592:	b292      	uxth	r2, r2
90019594:	f7ff fcf0 	bl	90018f78 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019598:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001959c:	2b2d      	cmp	r3, #45	; 0x2d
9001959e:	d1cf      	bne.n	90019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900195a0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900195a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
900195a6:	3302      	adds	r3, #2
900195a8:	e7ea      	b.n	90019580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
900195aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900195ac:	1d25      	adds	r5, r4, #4
900195ae:	230a      	movs	r3, #10
900195b0:	eba8 0202 	sub.w	r2, r8, r2
900195b4:	b292      	uxth	r2, r2
900195b6:	4649      	mov	r1, r9
900195b8:	6820      	ldr	r0, [r4, #0]
900195ba:	f7ff fd09 	bl	90018fd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
900195be:	e7bf      	b.n	90019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900195c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900195c2:	2310      	movs	r3, #16
900195c4:	4649      	mov	r1, r9
900195c6:	6820      	ldr	r0, [r4, #0]
900195c8:	eba8 0202 	sub.w	r2, r8, r2
900195cc:	1d25      	adds	r5, r4, #4
900195ce:	b292      	uxth	r2, r2
900195d0:	f7ff fcfe 	bl	90018fd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
900195d4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
900195d8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
900195dc:	2b00      	cmp	r3, #0
900195de:	d0af      	beq.n	90019540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900195e0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
900195e4:	2919      	cmp	r1, #25
900195e6:	d8f7      	bhi.n	900195d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
900195e8:	3b20      	subs	r3, #32
900195ea:	8013      	strh	r3, [r2, #0]
900195ec:	e7f4      	b.n	900195d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
900195ee:	9a08      	ldr	r2, [sp, #32]
900195f0:	2a00      	cmp	r2, #0
900195f2:	d0ab      	beq.n	9001954c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
900195f4:	7812      	ldrb	r2, [r2, #0]
900195f6:	e7a9      	b.n	9001954c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
900195f8:	2d00      	cmp	r5, #0
900195fa:	f43f af48 	beq.w	9001948e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
900195fe:	782d      	ldrb	r5, [r5, #0]
90019600:	e745      	b.n	9001948e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019602 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019602:	b507      	push	{r0, r1, r2, lr}
90019604:	9300      	str	r3, [sp, #0]
90019606:	4613      	mov	r3, r2
90019608:	2200      	movs	r2, #0
9001960a:	f7ff fe92 	bl	90019332 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001960e:	b003      	add	sp, #12
90019610:	f85d fb04 	ldr.w	pc, [sp], #4

90019614 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019614:	b40c      	push	{r2, r3}
90019616:	b507      	push	{r0, r1, r2, lr}
90019618:	ab04      	add	r3, sp, #16
9001961a:	f853 2b04 	ldr.w	r2, [r3], #4
9001961e:	9301      	str	r3, [sp, #4]
90019620:	f7ff ffef 	bl	90019602 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019624:	b003      	add	sp, #12
90019626:	f85d eb04 	ldr.w	lr, [sp], #4
9001962a:	b002      	add	sp, #8
9001962c:	4770      	bx	lr
	...

90019630 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90019630:	4b01      	ldr	r3, [pc, #4]	; (90019638 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90019632:	6018      	str	r0, [r3, #0]
90019634:	4770      	bx	lr
90019636:	bf00      	nop
90019638:	2403976c 	.word	0x2403976c

9001963c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001963c:	4b06      	ldr	r3, [pc, #24]	; (90019658 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001963e:	881a      	ldrh	r2, [r3, #0]
90019640:	4282      	cmp	r2, r0
90019642:	d807      	bhi.n	90019654 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90019644:	4b05      	ldr	r3, [pc, #20]	; (9001965c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90019646:	881b      	ldrh	r3, [r3, #0]
90019648:	4413      	add	r3, r2
9001964a:	4298      	cmp	r0, r3
9001964c:	bfac      	ite	ge
9001964e:	2000      	movge	r0, #0
90019650:	2001      	movlt	r0, #1
90019652:	4770      	bx	lr
90019654:	2000      	movs	r0, #0
90019656:	4770      	bx	lr
90019658:	2403978c 	.word	0x2403978c
9001965c:	24039790 	.word	0x24039790

90019660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90019660:	b508      	push	{r3, lr}
90019662:	4601      	mov	r1, r0
90019664:	f7ff ffea 	bl	9001963c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90019668:	b118      	cbz	r0, 90019672 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001966a:	4b02      	ldr	r3, [pc, #8]	; (90019674 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001966c:	681b      	ldr	r3, [r3, #0]
9001966e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90019672:	bd08      	pop	{r3, pc}
90019674:	24039770 	.word	0x24039770

90019678 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90019678:	b5f0      	push	{r4, r5, r6, r7, lr}
9001967a:	4c24      	ldr	r4, [pc, #144]	; (9001970c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001967c:	6823      	ldr	r3, [r4, #0]
9001967e:	2b00      	cmp	r3, #0
90019680:	d042      	beq.n	90019708 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019682:	4a23      	ldr	r2, [pc, #140]	; (90019710 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90019684:	4d23      	ldr	r5, [pc, #140]	; (90019714 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90019686:	8811      	ldrh	r1, [r2, #0]
90019688:	f8b5 c000 	ldrh.w	ip, [r5]
9001968c:	4822      	ldr	r0, [pc, #136]	; (90019718 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001968e:	4461      	add	r1, ip
90019690:	1c4a      	adds	r2, r1, #1
90019692:	008f      	lsls	r7, r1, #2
90019694:	f022 0201 	bic.w	r2, r2, #1
90019698:	19de      	adds	r6, r3, r7
9001969a:	0412      	lsls	r2, r2, #16
9001969c:	6006      	str	r6, [r0, #0]
9001969e:	4e1f      	ldr	r6, [pc, #124]	; (9001971c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
900196a0:	0c12      	lsrs	r2, r2, #16
900196a2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
900196a6:	19da      	adds	r2, r3, r7
900196a8:	6032      	str	r2, [r6, #0]
900196aa:	220e      	movs	r2, #14
900196ac:	fb02 f20c 	mul.w	r2, r2, ip
900196b0:	3203      	adds	r2, #3
900196b2:	f022 0203 	bic.w	r2, r2, #3
900196b6:	443a      	add	r2, r7
900196b8:	4f19      	ldr	r7, [pc, #100]	; (90019720 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
900196ba:	4413      	add	r3, r2
900196bc:	603b      	str	r3, [r7, #0]
900196be:	2300      	movs	r3, #0
900196c0:	4f18      	ldr	r7, [pc, #96]	; (90019724 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
900196c2:	469c      	mov	ip, r3
900196c4:	803b      	strh	r3, [r7, #0]
900196c6:	4f18      	ldr	r7, [pc, #96]	; (90019728 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
900196c8:	683f      	ldr	r7, [r7, #0]
900196ca:	1aba      	subs	r2, r7, r2
900196cc:	4f17      	ldr	r7, [pc, #92]	; (9001972c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
900196ce:	603a      	str	r2, [r7, #0]
900196d0:	f64f 77ff 	movw	r7, #65535	; 0xffff
900196d4:	4a16      	ldr	r2, [pc, #88]	; (90019730 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
900196d6:	8013      	strh	r3, [r2, #0]
900196d8:	428b      	cmp	r3, r1
900196da:	d10d      	bne.n	900196f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
900196dc:	882d      	ldrh	r5, [r5, #0]
900196de:	2300      	movs	r3, #0
900196e0:	6830      	ldr	r0, [r6, #0]
900196e2:	240e      	movs	r4, #14
900196e4:	429d      	cmp	r5, r3
900196e6:	d90f      	bls.n	90019708 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900196e8:	fb04 0203 	mla	r2, r4, r3, r0
900196ec:	3301      	adds	r3, #1
900196ee:	7b11      	ldrb	r1, [r2, #12]
900196f0:	f36f 1145 	bfc	r1, #5, #1
900196f4:	7311      	strb	r1, [r2, #12]
900196f6:	e7f5      	b.n	900196e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
900196f8:	6822      	ldr	r2, [r4, #0]
900196fa:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
900196fe:	6802      	ldr	r2, [r0, #0]
90019700:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90019704:	3301      	adds	r3, #1
90019706:	e7e7      	b.n	900196d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90019708:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001970a:	bf00      	nop
9001970c:	24039770 	.word	0x24039770
90019710:	2403978c 	.word	0x2403978c
90019714:	24039790 	.word	0x24039790
90019718:	24039784 	.word	0x24039784
9001971c:	24039774 	.word	0x24039774
90019720:	2403977c 	.word	0x2403977c
90019724:	2403978e 	.word	0x2403978e
90019728:	24039778 	.word	0x24039778
9001972c:	24039788 	.word	0x24039788
90019730:	24039780 	.word	0x24039780

90019734 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90019734:	4b06      	ldr	r3, [pc, #24]	; (90019750 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90019736:	681b      	ldr	r3, [r3, #0]
90019738:	b943      	cbnz	r3, 9001974c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001973a:	b139      	cbz	r1, 9001974c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001973c:	4b05      	ldr	r3, [pc, #20]	; (90019754 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001973e:	801a      	strh	r2, [r3, #0]
90019740:	4b05      	ldr	r3, [pc, #20]	; (90019758 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90019742:	6019      	str	r1, [r3, #0]
90019744:	4b05      	ldr	r3, [pc, #20]	; (9001975c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90019746:	6018      	str	r0, [r3, #0]
90019748:	f7ff bf96 	b.w	90019678 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001974c:	4770      	bx	lr
9001974e:	bf00      	nop
90019750:	2403977c 	.word	0x2403977c
90019754:	24039790 	.word	0x24039790
90019758:	24039778 	.word	0x24039778
9001975c:	24039770 	.word	0x24039770

90019760 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90019760:	b470      	push	{r4, r5, r6}
90019762:	4c07      	ldr	r4, [pc, #28]	; (90019780 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90019764:	4605      	mov	r5, r0
90019766:	4610      	mov	r0, r2
90019768:	9a03      	ldr	r2, [sp, #12]
9001976a:	6826      	ldr	r6, [r4, #0]
9001976c:	b936      	cbnz	r6, 9001977c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001976e:	6025      	str	r5, [r4, #0]
90019770:	4c04      	ldr	r4, [pc, #16]	; (90019784 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90019772:	8021      	strh	r1, [r4, #0]
90019774:	4619      	mov	r1, r3
90019776:	bc70      	pop	{r4, r5, r6}
90019778:	f7ff bfdc 	b.w	90019734 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001977c:	bc70      	pop	{r4, r5, r6}
9001977e:	4770      	bx	lr
90019780:	24039794 	.word	0x24039794
90019784:	2403978c 	.word	0x2403978c

90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90019788:	4a12      	ldr	r2, [pc, #72]	; (900197d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001978a:	8803      	ldrh	r3, [r0, #0]
9001978c:	8812      	ldrh	r2, [r2, #0]
9001978e:	4293      	cmp	r3, r2
90019790:	d207      	bcs.n	900197a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90019792:	4a11      	ldr	r2, [pc, #68]	; (900197d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90019794:	2114      	movs	r1, #20
90019796:	6812      	ldr	r2, [r2, #0]
90019798:	fb01 2303 	mla	r3, r1, r3, r2
9001979c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
900197a0:	4770      	bx	lr
900197a2:	490e      	ldr	r1, [pc, #56]	; (900197dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
900197a4:	8809      	ldrh	r1, [r1, #0]
900197a6:	4411      	add	r1, r2
900197a8:	428b      	cmp	r3, r1
900197aa:	da04      	bge.n	900197b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
900197ac:	1a9b      	subs	r3, r3, r2
900197ae:	4a0c      	ldr	r2, [pc, #48]	; (900197e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
900197b0:	210e      	movs	r1, #14
900197b2:	6812      	ldr	r2, [r2, #0]
900197b4:	e7f0      	b.n	90019798 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
900197b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900197ba:	4293      	cmp	r3, r2
900197bc:	d108      	bne.n	900197d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
900197be:	4b09      	ldr	r3, [pc, #36]	; (900197e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
900197c0:	781b      	ldrb	r3, [r3, #0]
900197c2:	b91b      	cbnz	r3, 900197cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
900197c4:	4b08      	ldr	r3, [pc, #32]	; (900197e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
900197c6:	f9b3 0000 	ldrsh.w	r0, [r3]
900197ca:	4770      	bx	lr
900197cc:	4b07      	ldr	r3, [pc, #28]	; (900197ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
900197ce:	e7fa      	b.n	900197c6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
900197d0:	2000      	movs	r0, #0
900197d2:	4770      	bx	lr
900197d4:	2403978c 	.word	0x2403978c
900197d8:	24039794 	.word	0x24039794
900197dc:	24039790 	.word	0x24039790
900197e0:	24039774 	.word	0x24039774
900197e4:	240396fc 	.word	0x240396fc
900197e8:	240396fe 	.word	0x240396fe
900197ec:	24039700 	.word	0x24039700

900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
900197f0:	4a12      	ldr	r2, [pc, #72]	; (9001983c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
900197f2:	8803      	ldrh	r3, [r0, #0]
900197f4:	8812      	ldrh	r2, [r2, #0]
900197f6:	4293      	cmp	r3, r2
900197f8:	d207      	bcs.n	9001980a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
900197fa:	4a11      	ldr	r2, [pc, #68]	; (90019840 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
900197fc:	2114      	movs	r1, #20
900197fe:	6812      	ldr	r2, [r2, #0]
90019800:	fb01 2303 	mla	r3, r1, r3, r2
90019804:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019808:	4770      	bx	lr
9001980a:	490e      	ldr	r1, [pc, #56]	; (90019844 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001980c:	8809      	ldrh	r1, [r1, #0]
9001980e:	4411      	add	r1, r2
90019810:	428b      	cmp	r3, r1
90019812:	da04      	bge.n	9001981e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019814:	1a9b      	subs	r3, r3, r2
90019816:	4a0c      	ldr	r2, [pc, #48]	; (90019848 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019818:	210e      	movs	r1, #14
9001981a:	6812      	ldr	r2, [r2, #0]
9001981c:	e7f0      	b.n	90019800 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001981e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019822:	4293      	cmp	r3, r2
90019824:	d108      	bne.n	90019838 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019826:	4b09      	ldr	r3, [pc, #36]	; (9001984c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019828:	781b      	ldrb	r3, [r3, #0]
9001982a:	b91b      	cbnz	r3, 90019834 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001982c:	4b08      	ldr	r3, [pc, #32]	; (90019850 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001982e:	f9b3 0000 	ldrsh.w	r0, [r3]
90019832:	4770      	bx	lr
90019834:	4b07      	ldr	r3, [pc, #28]	; (90019854 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90019836:	e7fa      	b.n	9001982e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90019838:	2000      	movs	r0, #0
9001983a:	4770      	bx	lr
9001983c:	2403978c 	.word	0x2403978c
90019840:	24039794 	.word	0x24039794
90019844:	24039790 	.word	0x24039790
90019848:	24039774 	.word	0x24039774
9001984c:	240396fc 	.word	0x240396fc
90019850:	24039700 	.word	0x24039700
90019854:	240396fe 	.word	0x240396fe

90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90019858:	4a1f      	ldr	r2, [pc, #124]	; (900198d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001985a:	b510      	push	{r4, lr}
9001985c:	880b      	ldrh	r3, [r1, #0]
9001985e:	8812      	ldrh	r2, [r2, #0]
90019860:	4293      	cmp	r3, r2
90019862:	d213      	bcs.n	9001988c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90019864:	4a1d      	ldr	r2, [pc, #116]	; (900198dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90019866:	2114      	movs	r1, #20
90019868:	6812      	ldr	r2, [r2, #0]
9001986a:	fb01 2303 	mla	r3, r1, r3, r2
9001986e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90019872:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90019876:	8a1a      	ldrh	r2, [r3, #16]
90019878:	8a5b      	ldrh	r3, [r3, #18]
9001987a:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001987e:	8004      	strh	r4, [r0, #0]
90019880:	f3c3 030c 	ubfx	r3, r3, #0, #13
90019884:	8041      	strh	r1, [r0, #2]
90019886:	8082      	strh	r2, [r0, #4]
90019888:	80c3      	strh	r3, [r0, #6]
9001988a:	e00e      	b.n	900198aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001988c:	4914      	ldr	r1, [pc, #80]	; (900198e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001988e:	8809      	ldrh	r1, [r1, #0]
90019890:	4411      	add	r1, r2
90019892:	428b      	cmp	r3, r1
90019894:	da0a      	bge.n	900198ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90019896:	1a9b      	subs	r3, r3, r2
90019898:	4a12      	ldr	r2, [pc, #72]	; (900198e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001989a:	210e      	movs	r1, #14
9001989c:	6812      	ldr	r2, [r2, #0]
9001989e:	fb01 2303 	mla	r3, r1, r3, r2
900198a2:	681a      	ldr	r2, [r3, #0]
900198a4:	6002      	str	r2, [r0, #0]
900198a6:	685a      	ldr	r2, [r3, #4]
900198a8:	6042      	str	r2, [r0, #4]
900198aa:	bd10      	pop	{r4, pc}
900198ac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900198b0:	4293      	cmp	r3, r2
900198b2:	d10b      	bne.n	900198cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
900198b4:	4b0c      	ldr	r3, [pc, #48]	; (900198e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
900198b6:	f9b3 1000 	ldrsh.w	r1, [r3]
900198ba:	4b0c      	ldr	r3, [pc, #48]	; (900198ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
900198bc:	8081      	strh	r1, [r0, #4]
900198be:	f9b3 2000 	ldrsh.w	r2, [r3]
900198c2:	2300      	movs	r3, #0
900198c4:	80c2      	strh	r2, [r0, #6]
900198c6:	8003      	strh	r3, [r0, #0]
900198c8:	8043      	strh	r3, [r0, #2]
900198ca:	e7ee      	b.n	900198aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
900198cc:	2300      	movs	r3, #0
900198ce:	8003      	strh	r3, [r0, #0]
900198d0:	8043      	strh	r3, [r0, #2]
900198d2:	8083      	strh	r3, [r0, #4]
900198d4:	e7d8      	b.n	90019888 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900198d6:	bf00      	nop
900198d8:	2403978c 	.word	0x2403978c
900198dc:	24039794 	.word	0x24039794
900198e0:	24039790 	.word	0x24039790
900198e4:	24039774 	.word	0x24039774
900198e8:	240396f8 	.word	0x240396f8
900198ec:	240396fa 	.word	0x240396fa

900198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
900198f0:	4a17      	ldr	r2, [pc, #92]	; (90019950 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
900198f2:	8803      	ldrh	r3, [r0, #0]
900198f4:	8812      	ldrh	r2, [r2, #0]
900198f6:	4293      	cmp	r3, r2
900198f8:	d213      	bcs.n	90019922 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
900198fa:	4a16      	ldr	r2, [pc, #88]	; (90019954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
900198fc:	2114      	movs	r1, #20
900198fe:	6812      	ldr	r2, [r2, #0]
90019900:	fb01 2303 	mla	r3, r1, r3, r2
90019904:	8a1a      	ldrh	r2, [r3, #16]
90019906:	8919      	ldrh	r1, [r3, #8]
90019908:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001990c:	428a      	cmp	r2, r1
9001990e:	db1d      	blt.n	9001994c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019910:	8a58      	ldrh	r0, [r3, #18]
90019912:	f3c0 000c 	ubfx	r0, r0, #0, #13
90019916:	895b      	ldrh	r3, [r3, #10]
90019918:	4298      	cmp	r0, r3
9001991a:	bfac      	ite	ge
9001991c:	2000      	movge	r0, #0
9001991e:	2001      	movlt	r0, #1
90019920:	4770      	bx	lr
90019922:	490d      	ldr	r1, [pc, #52]	; (90019958 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90019924:	8809      	ldrh	r1, [r1, #0]
90019926:	4411      	add	r1, r2
90019928:	428b      	cmp	r3, r1
9001992a:	da0d      	bge.n	90019948 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001992c:	1a9b      	subs	r3, r3, r2
9001992e:	4a0b      	ldr	r2, [pc, #44]	; (9001995c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90019930:	210e      	movs	r1, #14
90019932:	6812      	ldr	r2, [r2, #0]
90019934:	fb01 2303 	mla	r3, r1, r3, r2
90019938:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001993c:	891a      	ldrh	r2, [r3, #8]
9001993e:	4291      	cmp	r1, r2
90019940:	db04      	blt.n	9001994c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019942:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90019946:	e7e6      	b.n	90019916 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90019948:	2000      	movs	r0, #0
9001994a:	4770      	bx	lr
9001994c:	2001      	movs	r0, #1
9001994e:	4770      	bx	lr
90019950:	2403978c 	.word	0x2403978c
90019954:	24039794 	.word	0x24039794
90019958:	24039790 	.word	0x24039790
9001995c:	24039774 	.word	0x24039774

90019960 <_ZNK8touchgfx6Bitmap7getDataEv>:
90019960:	4a12      	ldr	r2, [pc, #72]	; (900199ac <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90019962:	8803      	ldrh	r3, [r0, #0]
90019964:	8811      	ldrh	r1, [r2, #0]
90019966:	428b      	cmp	r3, r1
90019968:	d20b      	bcs.n	90019982 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001996a:	4a11      	ldr	r2, [pc, #68]	; (900199b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001996c:	6812      	ldr	r2, [r2, #0]
9001996e:	b112      	cbz	r2, 90019976 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90019970:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019974:	b9c0      	cbnz	r0, 900199a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90019976:	4a0f      	ldr	r2, [pc, #60]	; (900199b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90019978:	6811      	ldr	r1, [r2, #0]
9001997a:	2214      	movs	r2, #20
9001997c:	4353      	muls	r3, r2
9001997e:	58c8      	ldr	r0, [r1, r3]
90019980:	4770      	bx	lr
90019982:	4a0d      	ldr	r2, [pc, #52]	; (900199b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90019984:	8812      	ldrh	r2, [r2, #0]
90019986:	440a      	add	r2, r1
90019988:	4293      	cmp	r3, r2
9001998a:	da04      	bge.n	90019996 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001998c:	4a08      	ldr	r2, [pc, #32]	; (900199b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001998e:	6812      	ldr	r2, [r2, #0]
90019990:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019994:	4770      	bx	lr
90019996:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001999a:	4293      	cmp	r3, r2
9001999c:	d103      	bne.n	900199a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001999e:	4b07      	ldr	r3, [pc, #28]	; (900199bc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900199a0:	681b      	ldr	r3, [r3, #0]
900199a2:	6c58      	ldr	r0, [r3, #68]	; 0x44
900199a4:	4770      	bx	lr
900199a6:	2000      	movs	r0, #0
900199a8:	4770      	bx	lr
900199aa:	bf00      	nop
900199ac:	2403978c 	.word	0x2403978c
900199b0:	24039770 	.word	0x24039770
900199b4:	24039794 	.word	0x24039794
900199b8:	24039790 	.word	0x24039790
900199bc:	24039704 	.word	0x24039704

900199c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
900199c0:	4b24      	ldr	r3, [pc, #144]	; (90019a54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
900199c2:	8802      	ldrh	r2, [r0, #0]
900199c4:	8818      	ldrh	r0, [r3, #0]
900199c6:	4282      	cmp	r2, r0
900199c8:	d221      	bcs.n	90019a0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
900199ca:	4b23      	ldr	r3, [pc, #140]	; (90019a58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
900199cc:	6819      	ldr	r1, [r3, #0]
900199ce:	2314      	movs	r3, #20
900199d0:	fb03 1302 	mla	r3, r3, r2, r1
900199d4:	6858      	ldr	r0, [r3, #4]
900199d6:	2800      	cmp	r0, #0
900199d8:	d03a      	beq.n	90019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900199da:	4920      	ldr	r1, [pc, #128]	; (90019a5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900199dc:	6809      	ldr	r1, [r1, #0]
900199de:	2900      	cmp	r1, #0
900199e0:	d036      	beq.n	90019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900199e2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900199e6:	2900      	cmp	r1, #0
900199e8:	d032      	beq.n	90019a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900199ea:	891a      	ldrh	r2, [r3, #8]
900199ec:	8958      	ldrh	r0, [r3, #10]
900199ee:	4350      	muls	r0, r2
900199f0:	7c5a      	ldrb	r2, [r3, #17]
900199f2:	7cdb      	ldrb	r3, [r3, #19]
900199f4:	0952      	lsrs	r2, r2, #5
900199f6:	f3c3 1342 	ubfx	r3, r3, #5, #3
900199fa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
900199fe:	2b0b      	cmp	r3, #11
90019a00:	bf18      	it	ne
90019a02:	0040      	lslne	r0, r0, #1
90019a04:	3003      	adds	r0, #3
90019a06:	f020 0003 	bic.w	r0, r0, #3
90019a0a:	4408      	add	r0, r1
90019a0c:	4770      	bx	lr
90019a0e:	4b14      	ldr	r3, [pc, #80]	; (90019a60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90019a10:	881b      	ldrh	r3, [r3, #0]
90019a12:	4403      	add	r3, r0
90019a14:	429a      	cmp	r2, r3
90019a16:	da1a      	bge.n	90019a4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019a18:	4b12      	ldr	r3, [pc, #72]	; (90019a64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90019a1a:	1a10      	subs	r0, r2, r0
90019a1c:	210e      	movs	r1, #14
90019a1e:	681b      	ldr	r3, [r3, #0]
90019a20:	fb01 3000 	mla	r0, r1, r0, r3
90019a24:	7b03      	ldrb	r3, [r0, #12]
90019a26:	f003 031f 	and.w	r3, r3, #31
90019a2a:	2b0b      	cmp	r3, #11
90019a2c:	d10b      	bne.n	90019a46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90019a2e:	8903      	ldrh	r3, [r0, #8]
90019a30:	8940      	ldrh	r0, [r0, #10]
90019a32:	4358      	muls	r0, r3
90019a34:	4b09      	ldr	r3, [pc, #36]	; (90019a5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90019a36:	3003      	adds	r0, #3
90019a38:	6819      	ldr	r1, [r3, #0]
90019a3a:	f020 0303 	bic.w	r3, r0, #3
90019a3e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90019a42:	4418      	add	r0, r3
90019a44:	4770      	bx	lr
90019a46:	2b0d      	cmp	r3, #13
90019a48:	d101      	bne.n	90019a4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019a4a:	300d      	adds	r0, #13
90019a4c:	4770      	bx	lr
90019a4e:	2000      	movs	r0, #0
90019a50:	4770      	bx	lr
90019a52:	bf00      	nop
90019a54:	2403978c 	.word	0x2403978c
90019a58:	24039794 	.word	0x24039794
90019a5c:	24039770 	.word	0x24039770
90019a60:	24039790 	.word	0x24039790
90019a64:	24039774 	.word	0x24039774

90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90019a68:	4a17      	ldr	r2, [pc, #92]	; (90019ac8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
90019a6a:	b510      	push	{r4, lr}
90019a6c:	8803      	ldrh	r3, [r0, #0]
90019a6e:	8812      	ldrh	r2, [r2, #0]
90019a70:	4293      	cmp	r3, r2
90019a72:	d20c      	bcs.n	90019a8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90019a74:	4a15      	ldr	r2, [pc, #84]	; (90019acc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
90019a76:	2114      	movs	r1, #20
90019a78:	6812      	ldr	r2, [r2, #0]
90019a7a:	fb01 2303 	mla	r3, r1, r3, r2
90019a7e:	7c58      	ldrb	r0, [r3, #17]
90019a80:	0942      	lsrs	r2, r0, #5
90019a82:	7cd8      	ldrb	r0, [r3, #19]
90019a84:	f3c0 1042 	ubfx	r0, r0, #5, #3
90019a88:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
90019a8c:	bd10      	pop	{r4, pc}
90019a8e:	4910      	ldr	r1, [pc, #64]	; (90019ad0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90019a90:	8809      	ldrh	r1, [r1, #0]
90019a92:	4411      	add	r1, r2
90019a94:	428b      	cmp	r3, r1
90019a96:	da09      	bge.n	90019aac <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
90019a98:	1a9b      	subs	r3, r3, r2
90019a9a:	4a0e      	ldr	r2, [pc, #56]	; (90019ad4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
90019a9c:	210e      	movs	r1, #14
90019a9e:	6812      	ldr	r2, [r2, #0]
90019aa0:	fb01 2303 	mla	r3, r1, r3, r2
90019aa4:	7b18      	ldrb	r0, [r3, #12]
90019aa6:	f000 001f 	and.w	r0, r0, #31
90019aaa:	e7ef      	b.n	90019a8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90019aac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019ab0:	4293      	cmp	r3, r2
90019ab2:	d106      	bne.n	90019ac2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90019ab4:	f7f7 fd78 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
90019ab8:	6803      	ldr	r3, [r0, #0]
90019aba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019abe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019ac0:	4718      	bx	r3
90019ac2:	2000      	movs	r0, #0
90019ac4:	e7e2      	b.n	90019a8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90019ac6:	bf00      	nop
90019ac8:	2403978c 	.word	0x2403978c
90019acc:	24039794 	.word	0x24039794
90019ad0:	24039790 	.word	0x24039790
90019ad4:	24039774 	.word	0x24039774

90019ad8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90019ad8:	2010      	movs	r0, #16
90019ada:	4770      	bx	lr

90019adc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90019adc:	4b02      	ldr	r3, [pc, #8]	; (90019ae8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
90019ade:	8818      	ldrh	r0, [r3, #0]
90019ae0:	0040      	lsls	r0, r0, #1
90019ae2:	b280      	uxth	r0, r0
90019ae4:	4770      	bx	lr
90019ae6:	bf00      	nop
90019ae8:	240396fe 	.word	0x240396fe

90019aec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90019aec:	2bff      	cmp	r3, #255	; 0xff
90019aee:	d050      	beq.n	90019b92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90019af0:	2a0b      	cmp	r2, #11
90019af2:	d04a      	beq.n	90019b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90019af4:	d80e      	bhi.n	90019b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90019af6:	2a03      	cmp	r2, #3
90019af8:	d03f      	beq.n	90019b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
90019afa:	d804      	bhi.n	90019b06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90019afc:	2a01      	cmp	r2, #1
90019afe:	d03e      	beq.n	90019b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90019b00:	d93f      	bls.n	90019b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90019b02:	6b80      	ldr	r0, [r0, #56]	; 0x38
90019b04:	4770      	bx	lr
90019b06:	2a09      	cmp	r2, #9
90019b08:	d03f      	beq.n	90019b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90019b0a:	d83c      	bhi.n	90019b86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90019b0c:	2a08      	cmp	r2, #8
90019b0e:	d03a      	beq.n	90019b86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90019b10:	2000      	movs	r0, #0
90019b12:	4770      	bx	lr
90019b14:	2a2f      	cmp	r2, #47	; 0x2f
90019b16:	d024      	beq.n	90019b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90019b18:	d80d      	bhi.n	90019b36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
90019b1a:	2a2d      	cmp	r2, #45	; 0x2d
90019b1c:	d014      	beq.n	90019b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
90019b1e:	d826      	bhi.n	90019b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90019b20:	2a2c      	cmp	r2, #44	; 0x2c
90019b22:	d1f5      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b24:	684b      	ldr	r3, [r1, #4]
90019b26:	781b      	ldrb	r3, [r3, #0]
90019b28:	2b01      	cmp	r3, #1
90019b2a:	d018      	beq.n	90019b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
90019b2c:	d323      	bcc.n	90019b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
90019b2e:	2b02      	cmp	r3, #2
90019b30:	d1ee      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b32:	6880      	ldr	r0, [r0, #8]
90019b34:	4770      	bx	lr
90019b36:	2a31      	cmp	r2, #49	; 0x31
90019b38:	d004      	beq.n	90019b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
90019b3a:	d328      	bcc.n	90019b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90019b3c:	2a32      	cmp	r2, #50	; 0x32
90019b3e:	d026      	beq.n	90019b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90019b40:	2a33      	cmp	r2, #51	; 0x33
90019b42:	d1e5      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b44:	6f00      	ldr	r0, [r0, #112]	; 0x70
90019b46:	4770      	bx	lr
90019b48:	684b      	ldr	r3, [r1, #4]
90019b4a:	781b      	ldrb	r3, [r3, #0]
90019b4c:	2b01      	cmp	r3, #1
90019b4e:	d004      	beq.n	90019b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90019b50:	d30b      	bcc.n	90019b6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019b52:	2b02      	cmp	r3, #2
90019b54:	d1dc      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b56:	6900      	ldr	r0, [r0, #16]
90019b58:	4770      	bx	lr
90019b5a:	6a00      	ldr	r0, [r0, #32]
90019b5c:	4770      	bx	lr
90019b5e:	6980      	ldr	r0, [r0, #24]
90019b60:	4770      	bx	lr
90019b62:	684b      	ldr	r3, [r1, #4]
90019b64:	781b      	ldrb	r3, [r3, #0]
90019b66:	2b00      	cmp	r3, #0
90019b68:	d1d2      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b6a:	6b00      	ldr	r0, [r0, #48]	; 0x30
90019b6c:	4770      	bx	lr
90019b6e:	684b      	ldr	r3, [r1, #4]
90019b70:	781b      	ldrb	r3, [r3, #0]
90019b72:	2b00      	cmp	r3, #0
90019b74:	d1cc      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019b76:	6a80      	ldr	r0, [r0, #40]	; 0x28
90019b78:	4770      	bx	lr
90019b7a:	6c80      	ldr	r0, [r0, #72]	; 0x48
90019b7c:	4770      	bx	lr
90019b7e:	6d00      	ldr	r0, [r0, #80]	; 0x50
90019b80:	4770      	bx	lr
90019b82:	6c00      	ldr	r0, [r0, #64]	; 0x40
90019b84:	4770      	bx	lr
90019b86:	6d80      	ldr	r0, [r0, #88]	; 0x58
90019b88:	4770      	bx	lr
90019b8a:	6e00      	ldr	r0, [r0, #96]	; 0x60
90019b8c:	4770      	bx	lr
90019b8e:	6e80      	ldr	r0, [r0, #104]	; 0x68
90019b90:	4770      	bx	lr
90019b92:	2a0b      	cmp	r2, #11
90019b94:	d049      	beq.n	90019c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90019b96:	d80e      	bhi.n	90019bb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
90019b98:	2a03      	cmp	r2, #3
90019b9a:	d040      	beq.n	90019c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
90019b9c:	d804      	bhi.n	90019ba8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
90019b9e:	2a01      	cmp	r2, #1
90019ba0:	d03f      	beq.n	90019c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
90019ba2:	d940      	bls.n	90019c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
90019ba4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90019ba6:	4770      	bx	lr
90019ba8:	2a09      	cmp	r2, #9
90019baa:	d03e      	beq.n	90019c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90019bac:	d801      	bhi.n	90019bb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
90019bae:	2a08      	cmp	r2, #8
90019bb0:	d1ae      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019bb2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90019bb4:	4770      	bx	lr
90019bb6:	2a2f      	cmp	r2, #47	; 0x2f
90019bb8:	d024      	beq.n	90019c04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
90019bba:	d80d      	bhi.n	90019bd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
90019bbc:	2a2d      	cmp	r2, #45	; 0x2d
90019bbe:	d014      	beq.n	90019bea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90019bc0:	d826      	bhi.n	90019c10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90019bc2:	2a2c      	cmp	r2, #44	; 0x2c
90019bc4:	d1a4      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019bc6:	684b      	ldr	r3, [r1, #4]
90019bc8:	781b      	ldrb	r3, [r3, #0]
90019bca:	2b01      	cmp	r3, #1
90019bcc:	d018      	beq.n	90019c00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
90019bce:	d324      	bcc.n	90019c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90019bd0:	2b02      	cmp	r3, #2
90019bd2:	d19d      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019bd4:	68c0      	ldr	r0, [r0, #12]
90019bd6:	4770      	bx	lr
90019bd8:	2a31      	cmp	r2, #49	; 0x31
90019bda:	d004      	beq.n	90019be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
90019bdc:	d327      	bcc.n	90019c2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90019bde:	2a32      	cmp	r2, #50	; 0x32
90019be0:	d025      	beq.n	90019c2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90019be2:	2a33      	cmp	r2, #51	; 0x33
90019be4:	d194      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019be6:	6f40      	ldr	r0, [r0, #116]	; 0x74
90019be8:	4770      	bx	lr
90019bea:	684b      	ldr	r3, [r1, #4]
90019bec:	781b      	ldrb	r3, [r3, #0]
90019bee:	2b01      	cmp	r3, #1
90019bf0:	d004      	beq.n	90019bfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90019bf2:	d30b      	bcc.n	90019c0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90019bf4:	2b02      	cmp	r3, #2
90019bf6:	d18b      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019bf8:	6940      	ldr	r0, [r0, #20]
90019bfa:	4770      	bx	lr
90019bfc:	6a40      	ldr	r0, [r0, #36]	; 0x24
90019bfe:	4770      	bx	lr
90019c00:	69c0      	ldr	r0, [r0, #28]
90019c02:	4770      	bx	lr
90019c04:	684b      	ldr	r3, [r1, #4]
90019c06:	781b      	ldrb	r3, [r3, #0]
90019c08:	2b00      	cmp	r3, #0
90019c0a:	d181      	bne.n	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019c0c:	6b40      	ldr	r0, [r0, #52]	; 0x34
90019c0e:	4770      	bx	lr
90019c10:	684b      	ldr	r3, [r1, #4]
90019c12:	781b      	ldrb	r3, [r3, #0]
90019c14:	2b00      	cmp	r3, #0
90019c16:	f47f af7b 	bne.w	90019b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019c1a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90019c1c:	4770      	bx	lr
90019c1e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90019c20:	4770      	bx	lr
90019c22:	6d40      	ldr	r0, [r0, #84]	; 0x54
90019c24:	4770      	bx	lr
90019c26:	6c40      	ldr	r0, [r0, #68]	; 0x44
90019c28:	4770      	bx	lr
90019c2a:	6e40      	ldr	r0, [r0, #100]	; 0x64
90019c2c:	4770      	bx	lr
90019c2e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
90019c30:	4770      	bx	lr

90019c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019c32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019c36:	b087      	sub	sp, #28
90019c38:	9815      	ldr	r0, [sp, #84]	; 0x54
90019c3a:	9205      	str	r2, [sp, #20]
90019c3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019c40:	9101      	str	r1, [sp, #4]
90019c42:	9202      	str	r2, [sp, #8]
90019c44:	6841      	ldr	r1, [r0, #4]
90019c46:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
90019c4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90019c4e:	fb01 2404 	mla	r4, r1, r4, r2
90019c52:	6802      	ldr	r2, [r0, #0]
90019c54:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019c58:	f8de 2000 	ldr.w	r2, [lr]
90019c5c:	9203      	str	r2, [sp, #12]
90019c5e:	f8de 2004 	ldr.w	r2, [lr, #4]
90019c62:	3204      	adds	r2, #4
90019c64:	9204      	str	r2, [sp, #16]
90019c66:	9a02      	ldr	r2, [sp, #8]
90019c68:	43d6      	mvns	r6, r2
90019c6a:	b2f6      	uxtb	r6, r6
90019c6c:	9a01      	ldr	r2, [sp, #4]
90019c6e:	2a00      	cmp	r2, #0
90019c70:	dc03      	bgt.n	90019c7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90019c72:	9a05      	ldr	r2, [sp, #20]
90019c74:	2a00      	cmp	r2, #0
90019c76:	f340 8129 	ble.w	90019ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90019c7a:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019c7c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019c80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019c84:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019c86:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019c8a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019c8e:	2b00      	cmp	r3, #0
90019c90:	dd0e      	ble.n	90019cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019c92:	1408      	asrs	r0, r1, #16
90019c94:	d405      	bmi.n	90019ca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019c96:	4560      	cmp	r0, ip
90019c98:	da03      	bge.n	90019ca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019c9a:	1410      	asrs	r0, r2, #16
90019c9c:	d401      	bmi.n	90019ca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019c9e:	42b8      	cmp	r0, r7
90019ca0:	db07      	blt.n	90019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90019ca2:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019ca4:	3b01      	subs	r3, #1
90019ca6:	3402      	adds	r4, #2
90019ca8:	4401      	add	r1, r0
90019caa:	9814      	ldr	r0, [sp, #80]	; 0x50
90019cac:	4402      	add	r2, r0
90019cae:	e7ee      	b.n	90019c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90019cb0:	d071      	beq.n	90019d96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019cb2:	1e58      	subs	r0, r3, #1
90019cb4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90019cb6:	fb05 1500 	mla	r5, r5, r0, r1
90019cba:	142d      	asrs	r5, r5, #16
90019cbc:	d45f      	bmi.n	90019d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019cbe:	4565      	cmp	r5, ip
90019cc0:	da5d      	bge.n	90019d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019cc2:	9d14      	ldr	r5, [sp, #80]	; 0x50
90019cc4:	fb05 2000 	mla	r0, r5, r0, r2
90019cc8:	1400      	asrs	r0, r0, #16
90019cca:	d458      	bmi.n	90019d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019ccc:	42b8      	cmp	r0, r7
90019cce:	da56      	bge.n	90019d7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019cd0:	4699      	mov	r9, r3
90019cd2:	46a2      	mov	sl, r4
90019cd4:	f8bd b008 	ldrh.w	fp, [sp, #8]
90019cd8:	f1b9 0f00 	cmp.w	r9, #0
90019cdc:	dd57      	ble.n	90019d8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
90019cde:	ea4f 4c22 	mov.w	ip, r2, asr #16
90019ce2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019ce6:	9803      	ldr	r0, [sp, #12]
90019ce8:	140d      	asrs	r5, r1, #16
90019cea:	f109 39ff 	add.w	r9, r9, #4294967295
90019cee:	fb07 000c 	mla	r0, r7, ip, r0
90019cf2:	5d40      	ldrb	r0, [r0, r5]
90019cf4:	9d04      	ldr	r5, [sp, #16]
90019cf6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019cfa:	f8ba 5000 	ldrh.w	r5, [sl]
90019cfe:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019d02:	122f      	asrs	r7, r5, #8
90019d04:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019d08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019d0c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019d10:	00ed      	lsls	r5, r5, #3
90019d12:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90019d16:	fb17 f706 	smulbb	r7, r7, r6
90019d1a:	b2ed      	uxtb	r5, r5
90019d1c:	fb18 f806 	smulbb	r8, r8, r6
90019d20:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019d24:	10c7      	asrs	r7, r0, #3
90019d26:	fb15 f506 	smulbb	r5, r5, r6
90019d2a:	00c0      	lsls	r0, r0, #3
90019d2c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019d30:	fa1f fc8c 	uxth.w	ip, ip
90019d34:	b2c0      	uxtb	r0, r0
90019d36:	fb07 870b 	mla	r7, r7, fp, r8
90019d3a:	fb00 500b 	mla	r0, r0, fp, r5
90019d3e:	f10c 0501 	add.w	r5, ip, #1
90019d42:	b2bf      	uxth	r7, r7
90019d44:	b280      	uxth	r0, r0
90019d46:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019d4a:	f107 0801 	add.w	r8, r7, #1
90019d4e:	1c45      	adds	r5, r0, #1
90019d50:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019d54:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019d58:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019d5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019d5e:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019d62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019d66:	4401      	add	r1, r0
90019d68:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90019d6c:	9814      	ldr	r0, [sp, #80]	; 0x50
90019d6e:	ea45 0c0c 	orr.w	ip, r5, ip
90019d72:	4402      	add	r2, r0
90019d74:	ea4c 0c08 	orr.w	ip, ip, r8
90019d78:	f82a cb02 	strh.w	ip, [sl], #2
90019d7c:	e7ac      	b.n	90019cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019d7e:	f04f 0800 	mov.w	r8, #0
90019d82:	f8bd a008 	ldrh.w	sl, [sp, #8]
90019d86:	eb03 0008 	add.w	r0, r3, r8
90019d8a:	2800      	cmp	r0, #0
90019d8c:	dc41      	bgt.n	90019e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90019d8e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019d92:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019d96:	9b01      	ldr	r3, [sp, #4]
90019d98:	2b00      	cmp	r3, #0
90019d9a:	f340 8097 	ble.w	90019ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90019d9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019da2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019da4:	ee30 0a04 	vadd.f32	s0, s0, s8
90019da8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019dac:	eef0 6a62 	vmov.f32	s13, s5
90019db0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019db4:	ee31 1a05 	vadd.f32	s2, s2, s10
90019db8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019dbc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90019dc0:	eef0 6a43 	vmov.f32	s13, s6
90019dc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019dc8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90019dcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019dd0:	ee61 7a27 	vmul.f32	s15, s2, s15
90019dd4:	ee77 2a62 	vsub.f32	s5, s14, s5
90019dd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019ddc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019de0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019de4:	ee12 2a90 	vmov	r2, s5
90019de8:	eef0 2a47 	vmov.f32	s5, s14
90019dec:	fb92 f3f3 	sdiv	r3, r2, r3
90019df0:	ee13 2a10 	vmov	r2, s6
90019df4:	9313      	str	r3, [sp, #76]	; 0x4c
90019df6:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019df8:	eeb0 3a67 	vmov.f32	s6, s15
90019dfc:	fb92 f3f3 	sdiv	r3, r2, r3
90019e00:	9314      	str	r3, [sp, #80]	; 0x50
90019e02:	9b01      	ldr	r3, [sp, #4]
90019e04:	9a05      	ldr	r2, [sp, #20]
90019e06:	3b01      	subs	r3, #1
90019e08:	9301      	str	r3, [sp, #4]
90019e0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019e0c:	bf08      	it	eq
90019e0e:	4613      	moveq	r3, r2
90019e10:	e72c      	b.n	90019c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90019e12:	140f      	asrs	r7, r1, #16
90019e14:	d453      	bmi.n	90019ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019e16:	f8de 5008 	ldr.w	r5, [lr, #8]
90019e1a:	42bd      	cmp	r5, r7
90019e1c:	dd4f      	ble.n	90019ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019e1e:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019e22:	d44c      	bmi.n	90019ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019e24:	f8de 000c 	ldr.w	r0, [lr, #12]
90019e28:	4560      	cmp	r0, ip
90019e2a:	dd48      	ble.n	90019ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019e2c:	9803      	ldr	r0, [sp, #12]
90019e2e:	b22d      	sxth	r5, r5
90019e30:	fb0c 0505 	mla	r5, ip, r5, r0
90019e34:	5de8      	ldrb	r0, [r5, r7]
90019e36:	9d04      	ldr	r5, [sp, #16]
90019e38:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019e3c:	f06f 0501 	mvn.w	r5, #1
90019e40:	fb05 fb08 	mul.w	fp, r5, r8
90019e44:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019e48:	f834 500b 	ldrh.w	r5, [r4, fp]
90019e4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019e50:	122f      	asrs	r7, r5, #8
90019e52:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019e56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019e5a:	00ed      	lsls	r5, r5, #3
90019e5c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019e60:	fb17 f706 	smulbb	r7, r7, r6
90019e64:	b2ed      	uxtb	r5, r5
90019e66:	fb19 f906 	smulbb	r9, r9, r6
90019e6a:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019e6e:	10c7      	asrs	r7, r0, #3
90019e70:	fb15 f506 	smulbb	r5, r5, r6
90019e74:	00c0      	lsls	r0, r0, #3
90019e76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019e7a:	fa1f fc8c 	uxth.w	ip, ip
90019e7e:	b2c0      	uxtb	r0, r0
90019e80:	fb07 970a 	mla	r7, r7, sl, r9
90019e84:	fb00 500a 	mla	r0, r0, sl, r5
90019e88:	f10c 0501 	add.w	r5, ip, #1
90019e8c:	b2bf      	uxth	r7, r7
90019e8e:	b280      	uxth	r0, r0
90019e90:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019e94:	f107 0901 	add.w	r9, r7, #1
90019e98:	1c45      	adds	r5, r0, #1
90019e9a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019e9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019ea2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019ea6:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019eaa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019eae:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90019eb2:	ea45 0c0c 	orr.w	ip, r5, ip
90019eb6:	ea4c 0c09 	orr.w	ip, ip, r9
90019eba:	f824 c00b 	strh.w	ip, [r4, fp]
90019ebe:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019ec0:	f108 38ff 	add.w	r8, r8, #4294967295
90019ec4:	4401      	add	r1, r0
90019ec6:	9814      	ldr	r0, [sp, #80]	; 0x50
90019ec8:	4402      	add	r2, r0
90019eca:	e75c      	b.n	90019d86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90019ecc:	b007      	add	sp, #28
90019ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019ed2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019ed6:	b085      	sub	sp, #20
90019ed8:	4693      	mov	fp, r2
90019eda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019ede:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019ee0:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019ee2:	6870      	ldr	r0, [r6, #4]
90019ee4:	9100      	str	r1, [sp, #0]
90019ee6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019eea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019eee:	fb00 2404 	mla	r4, r0, r4, r2
90019ef2:	6832      	ldr	r2, [r6, #0]
90019ef4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019ef8:	682a      	ldr	r2, [r5, #0]
90019efa:	9201      	str	r2, [sp, #4]
90019efc:	686a      	ldr	r2, [r5, #4]
90019efe:	3204      	adds	r2, #4
90019f00:	9202      	str	r2, [sp, #8]
90019f02:	9a00      	ldr	r2, [sp, #0]
90019f04:	2a00      	cmp	r2, #0
90019f06:	dc03      	bgt.n	90019f10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019f08:	f1bb 0f00 	cmp.w	fp, #0
90019f0c:	f340 80a0 	ble.w	9001a050 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90019f10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019f12:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019f16:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019f1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019f1c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019f20:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019f24:	2b00      	cmp	r3, #0
90019f26:	dd0c      	ble.n	90019f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019f28:	1406      	asrs	r6, r0, #16
90019f2a:	d405      	bmi.n	90019f38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f2c:	454e      	cmp	r6, r9
90019f2e:	da03      	bge.n	90019f38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f30:	1416      	asrs	r6, r2, #16
90019f32:	d401      	bmi.n	90019f38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f34:	4546      	cmp	r6, r8
90019f36:	db05      	blt.n	90019f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019f38:	4470      	add	r0, lr
90019f3a:	4462      	add	r2, ip
90019f3c:	3b01      	subs	r3, #1
90019f3e:	3402      	adds	r4, #2
90019f40:	e7f0      	b.n	90019f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019f42:	d00f      	beq.n	90019f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019f44:	1e5e      	subs	r6, r3, #1
90019f46:	fb0e 0706 	mla	r7, lr, r6, r0
90019f4a:	143f      	asrs	r7, r7, #16
90019f4c:	d541      	bpl.n	90019fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90019f4e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019f52:	4698      	mov	r8, r3
90019f54:	9603      	str	r6, [sp, #12]
90019f56:	f1b8 0f00 	cmp.w	r8, #0
90019f5a:	dc59      	bgt.n	9001a010 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019f5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019f60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019f64:	9b00      	ldr	r3, [sp, #0]
90019f66:	2b00      	cmp	r3, #0
90019f68:	dd72      	ble.n	9001a050 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90019f6a:	ee30 0a04 	vadd.f32	s0, s0, s8
90019f6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019f70:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019f74:	eeb0 6a62 	vmov.f32	s12, s5
90019f78:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019f7c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019f80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f84:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019f88:	eeb0 6a43 	vmov.f32	s12, s6
90019f8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f90:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019f94:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019f98:	ee61 7a27 	vmul.f32	s15, s2, s15
90019f9c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019fa0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019fa4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019fa8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019fac:	ee12 2a90 	vmov	r2, s5
90019fb0:	eef0 2a47 	vmov.f32	s5, s14
90019fb4:	fb92 fef3 	sdiv	lr, r2, r3
90019fb8:	ee13 2a10 	vmov	r2, s6
90019fbc:	eeb0 3a67 	vmov.f32	s6, s15
90019fc0:	fb92 fcf3 	sdiv	ip, r2, r3
90019fc4:	9b00      	ldr	r3, [sp, #0]
90019fc6:	3b01      	subs	r3, #1
90019fc8:	9300      	str	r3, [sp, #0]
90019fca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019fcc:	bf08      	it	eq
90019fce:	465b      	moveq	r3, fp
90019fd0:	e797      	b.n	90019f02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019fd2:	454f      	cmp	r7, r9
90019fd4:	dabb      	bge.n	90019f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019fd6:	fb0c 2606 	mla	r6, ip, r6, r2
90019fda:	1436      	asrs	r6, r6, #16
90019fdc:	d4b7      	bmi.n	90019f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019fde:	4546      	cmp	r6, r8
90019fe0:	dab5      	bge.n	90019f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019fe2:	461e      	mov	r6, r3
90019fe4:	46a0      	mov	r8, r4
90019fe6:	2e00      	cmp	r6, #0
90019fe8:	ddb8      	ble.n	90019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90019fea:	1417      	asrs	r7, r2, #16
90019fec:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019ff0:	9901      	ldr	r1, [sp, #4]
90019ff2:	ea4f 4920 	mov.w	r9, r0, asr #16
90019ff6:	4462      	add	r2, ip
90019ff8:	4470      	add	r0, lr
90019ffa:	fb0a 1707 	mla	r7, sl, r7, r1
90019ffe:	9902      	ldr	r1, [sp, #8]
9001a000:	3e01      	subs	r6, #1
9001a002:	f817 7009 	ldrb.w	r7, [r7, r9]
9001a006:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a00a:	f828 7b02 	strh.w	r7, [r8], #2
9001a00e:	e7ea      	b.n	90019fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001a010:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a014:	d417      	bmi.n	9001a046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a016:	68ae      	ldr	r6, [r5, #8]
9001a018:	454e      	cmp	r6, r9
9001a01a:	dd14      	ble.n	9001a046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a01c:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a020:	d411      	bmi.n	9001a046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a022:	68ef      	ldr	r7, [r5, #12]
9001a024:	4557      	cmp	r7, sl
9001a026:	dd0e      	ble.n	9001a046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a028:	9f01      	ldr	r7, [sp, #4]
9001a02a:	b236      	sxth	r6, r6
9001a02c:	f06f 0101 	mvn.w	r1, #1
9001a030:	fb0a 7606 	mla	r6, sl, r6, r7
9001a034:	9f02      	ldr	r7, [sp, #8]
9001a036:	f816 6009 	ldrb.w	r6, [r6, r9]
9001a03a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a03e:	fb01 f608 	mul.w	r6, r1, r8
9001a042:	9903      	ldr	r1, [sp, #12]
9001a044:	538f      	strh	r7, [r1, r6]
9001a046:	4470      	add	r0, lr
9001a048:	4462      	add	r2, ip
9001a04a:	f108 38ff 	add.w	r8, r8, #4294967295
9001a04e:	e782      	b.n	90019f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a050:	b005      	add	sp, #20
9001a052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a056 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a056:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a05a:	b087      	sub	sp, #28
9001a05c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001a05e:	9205      	str	r2, [sp, #20]
9001a060:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a064:	9102      	str	r1, [sp, #8]
9001a066:	9203      	str	r2, [sp, #12]
9001a068:	6861      	ldr	r1, [r4, #4]
9001a06a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a06e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001a072:	fb01 2000 	mla	r0, r1, r0, r2
9001a076:	6822      	ldr	r2, [r4, #0]
9001a078:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001a07c:	9200      	str	r2, [sp, #0]
9001a07e:	f8dc 2000 	ldr.w	r2, [ip]
9001a082:	9204      	str	r2, [sp, #16]
9001a084:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a088:	3204      	adds	r2, #4
9001a08a:	9201      	str	r2, [sp, #4]
9001a08c:	9a03      	ldr	r2, [sp, #12]
9001a08e:	43d5      	mvns	r5, r2
9001a090:	b2ed      	uxtb	r5, r5
9001a092:	9a02      	ldr	r2, [sp, #8]
9001a094:	2a00      	cmp	r2, #0
9001a096:	dc03      	bgt.n	9001a0a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a098:	9a05      	ldr	r2, [sp, #20]
9001a09a:	2a00      	cmp	r2, #0
9001a09c:	f340 812c 	ble.w	9001a2f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a0a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a0a2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001a0a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a0aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a0ac:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001a0b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a0b4:	2b00      	cmp	r3, #0
9001a0b6:	dd10      	ble.n	9001a0da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a0b8:	140c      	asrs	r4, r1, #16
9001a0ba:	d405      	bmi.n	9001a0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a0bc:	4574      	cmp	r4, lr
9001a0be:	da03      	bge.n	9001a0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a0c0:	1414      	asrs	r4, r2, #16
9001a0c2:	d401      	bmi.n	9001a0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a0c4:	42bc      	cmp	r4, r7
9001a0c6:	db09      	blt.n	9001a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001a0c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a0ca:	3b01      	subs	r3, #1
9001a0cc:	9800      	ldr	r0, [sp, #0]
9001a0ce:	4421      	add	r1, r4
9001a0d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a0d2:	3002      	adds	r0, #2
9001a0d4:	4422      	add	r2, r4
9001a0d6:	9000      	str	r0, [sp, #0]
9001a0d8:	e7ec      	b.n	9001a0b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a0da:	d071      	beq.n	9001a1c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001a0dc:	1e5c      	subs	r4, r3, #1
9001a0de:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a0e0:	fb06 1604 	mla	r6, r6, r4, r1
9001a0e4:	1436      	asrs	r6, r6, #16
9001a0e6:	d45d      	bmi.n	9001a1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a0e8:	4576      	cmp	r6, lr
9001a0ea:	da5b      	bge.n	9001a1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a0ec:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001a0ee:	fb06 2404 	mla	r4, r6, r4, r2
9001a0f2:	1424      	asrs	r4, r4, #16
9001a0f4:	d456      	bmi.n	9001a1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a0f6:	42bc      	cmp	r4, r7
9001a0f8:	da54      	bge.n	9001a1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a0fa:	4698      	mov	r8, r3
9001a0fc:	f8dd 9000 	ldr.w	r9, [sp]
9001a100:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001a104:	f1b8 0f00 	cmp.w	r8, #0
9001a108:	dd54      	ble.n	9001a1b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a10a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a10e:	1414      	asrs	r4, r2, #16
9001a110:	9804      	ldr	r0, [sp, #16]
9001a112:	140e      	asrs	r6, r1, #16
9001a114:	f108 38ff 	add.w	r8, r8, #4294967295
9001a118:	fb07 0404 	mla	r4, r7, r4, r0
9001a11c:	9801      	ldr	r0, [sp, #4]
9001a11e:	f814 e006 	ldrb.w	lr, [r4, r6]
9001a122:	f8b9 4000 	ldrh.w	r4, [r9]
9001a126:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a12a:	1227      	asrs	r7, r4, #8
9001a12c:	eb00 0b0e 	add.w	fp, r0, lr
9001a130:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001a134:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a138:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a13a:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a13e:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a142:	4401      	add	r1, r0
9001a144:	fb16 f60a 	smulbb	r6, r6, sl
9001a148:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a14a:	fb1b fb0a 	smulbb	fp, fp, sl
9001a14e:	fb07 6705 	mla	r7, r7, r5, r6
9001a152:	10e6      	asrs	r6, r4, #3
9001a154:	00e4      	lsls	r4, r4, #3
9001a156:	4402      	add	r2, r0
9001a158:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a15c:	b2bf      	uxth	r7, r7
9001a15e:	b2e4      	uxtb	r4, r4
9001a160:	fb06 b605 	mla	r6, r6, r5, fp
9001a164:	fb14 f405 	smulbb	r4, r4, r5
9001a168:	b2b6      	uxth	r6, r6
9001a16a:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001a16e:	1c7c      	adds	r4, r7, #1
9001a170:	f106 0b01 	add.w	fp, r6, #1
9001a174:	fa1f fe8e 	uxth.w	lr, lr
9001a178:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a17c:	f10e 0401 	add.w	r4, lr, #1
9001a180:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a184:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a188:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001a18c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a190:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a194:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a198:	4327      	orrs	r7, r4
9001a19a:	ea47 070b 	orr.w	r7, r7, fp
9001a19e:	f829 7b02 	strh.w	r7, [r9], #2
9001a1a2:	e7af      	b.n	9001a104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001a1a4:	f04f 0e00 	mov.w	lr, #0
9001a1a8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001a1ac:	eb03 040e 	add.w	r4, r3, lr
9001a1b0:	2c00      	cmp	r4, #0
9001a1b2:	dc43      	bgt.n	9001a23c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001a1b4:	9a00      	ldr	r2, [sp, #0]
9001a1b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a1ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a1be:	9300      	str	r3, [sp, #0]
9001a1c0:	9b02      	ldr	r3, [sp, #8]
9001a1c2:	2b00      	cmp	r3, #0
9001a1c4:	f340 8098 	ble.w	9001a2f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a1c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a1cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a1ce:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a1d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a1d6:	eef0 6a62 	vmov.f32	s13, s5
9001a1da:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a1de:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a1e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a1e6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001a1ea:	eef0 6a43 	vmov.f32	s13, s6
9001a1ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a1f2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001a1f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a1fa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a1fe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a202:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a20a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a20e:	ee12 2a90 	vmov	r2, s5
9001a212:	eef0 2a47 	vmov.f32	s5, s14
9001a216:	fb92 f3f3 	sdiv	r3, r2, r3
9001a21a:	ee13 2a10 	vmov	r2, s6
9001a21e:	9313      	str	r3, [sp, #76]	; 0x4c
9001a220:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a222:	eeb0 3a67 	vmov.f32	s6, s15
9001a226:	fb92 f3f3 	sdiv	r3, r2, r3
9001a22a:	9314      	str	r3, [sp, #80]	; 0x50
9001a22c:	9b02      	ldr	r3, [sp, #8]
9001a22e:	9a05      	ldr	r2, [sp, #20]
9001a230:	3b01      	subs	r3, #1
9001a232:	9302      	str	r3, [sp, #8]
9001a234:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a236:	bf08      	it	eq
9001a238:	4613      	moveq	r3, r2
9001a23a:	e72a      	b.n	9001a092 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a23c:	140f      	asrs	r7, r1, #16
9001a23e:	d454      	bmi.n	9001a2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a240:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001a244:	42be      	cmp	r6, r7
9001a246:	dd50      	ble.n	9001a2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a248:	ea5f 4822 	movs.w	r8, r2, asr #16
9001a24c:	d44d      	bmi.n	9001a2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a24e:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001a252:	4544      	cmp	r4, r8
9001a254:	dd49      	ble.n	9001a2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a256:	9c04      	ldr	r4, [sp, #16]
9001a258:	b236      	sxth	r6, r6
9001a25a:	f06f 0001 	mvn.w	r0, #1
9001a25e:	fb08 4606 	mla	r6, r8, r6, r4
9001a262:	9c01      	ldr	r4, [sp, #4]
9001a264:	fb00 fa0e 	mul.w	sl, r0, lr
9001a268:	9800      	ldr	r0, [sp, #0]
9001a26a:	f816 8007 	ldrb.w	r8, [r6, r7]
9001a26e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001a272:	eb04 0b08 	add.w	fp, r4, r8
9001a276:	f830 400a 	ldrh.w	r4, [r0, sl]
9001a27a:	9801      	ldr	r0, [sp, #4]
9001a27c:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a280:	1227      	asrs	r7, r4, #8
9001a282:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a286:	fb16 f609 	smulbb	r6, r6, r9
9001a28a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a28e:	f810 8008 	ldrb.w	r8, [r0, r8]
9001a292:	fb1b fb09 	smulbb	fp, fp, r9
9001a296:	fb07 6705 	mla	r7, r7, r5, r6
9001a29a:	10e6      	asrs	r6, r4, #3
9001a29c:	00e4      	lsls	r4, r4, #3
9001a29e:	9800      	ldr	r0, [sp, #0]
9001a2a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a2a4:	b2bf      	uxth	r7, r7
9001a2a6:	b2e4      	uxtb	r4, r4
9001a2a8:	fb06 b605 	mla	r6, r6, r5, fp
9001a2ac:	fb14 f405 	smulbb	r4, r4, r5
9001a2b0:	b2b6      	uxth	r6, r6
9001a2b2:	fb08 4809 	mla	r8, r8, r9, r4
9001a2b6:	1c7c      	adds	r4, r7, #1
9001a2b8:	f106 0b01 	add.w	fp, r6, #1
9001a2bc:	fa1f f888 	uxth.w	r8, r8
9001a2c0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a2c4:	f108 0401 	add.w	r4, r8, #1
9001a2c8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a2cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a2d0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001a2d4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a2d8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a2dc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a2e0:	4327      	orrs	r7, r4
9001a2e2:	ea47 070b 	orr.w	r7, r7, fp
9001a2e6:	f820 700a 	strh.w	r7, [r0, sl]
9001a2ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a2ec:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a2f0:	4401      	add	r1, r0
9001a2f2:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a2f4:	4402      	add	r2, r0
9001a2f6:	e759      	b.n	9001a1ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a2f8:	b007      	add	sp, #28
9001a2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a300 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a304:	b085      	sub	sp, #20
9001a306:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a30a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a30c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001a30e:	9203      	str	r2, [sp, #12]
9001a310:	6870      	ldr	r0, [r6, #4]
9001a312:	686f      	ldr	r7, [r5, #4]
9001a314:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001a318:	3704      	adds	r7, #4
9001a31a:	9101      	str	r1, [sp, #4]
9001a31c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a320:	fb00 2404 	mla	r4, r0, r4, r2
9001a324:	6832      	ldr	r2, [r6, #0]
9001a326:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a32a:	682a      	ldr	r2, [r5, #0]
9001a32c:	9202      	str	r2, [sp, #8]
9001a32e:	9a01      	ldr	r2, [sp, #4]
9001a330:	2a00      	cmp	r2, #0
9001a332:	dc03      	bgt.n	9001a33c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a334:	9a03      	ldr	r2, [sp, #12]
9001a336:	2a00      	cmp	r2, #0
9001a338:	f340 80cc 	ble.w	9001a4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a33c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a33e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a342:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a346:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a348:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a34c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a350:	2b00      	cmp	r3, #0
9001a352:	dd0d      	ble.n	9001a370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a354:	1406      	asrs	r6, r0, #16
9001a356:	d405      	bmi.n	9001a364 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a358:	454e      	cmp	r6, r9
9001a35a:	da03      	bge.n	9001a364 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a35c:	1416      	asrs	r6, r2, #16
9001a35e:	d401      	bmi.n	9001a364 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a360:	4546      	cmp	r6, r8
9001a362:	db06      	blt.n	9001a372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a364:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001a366:	4460      	add	r0, ip
9001a368:	3b01      	subs	r3, #1
9001a36a:	3402      	adds	r4, #2
9001a36c:	4432      	add	r2, r6
9001a36e:	e7ef      	b.n	9001a350 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001a370:	d00f      	beq.n	9001a392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a372:	1e5e      	subs	r6, r3, #1
9001a374:	fb0c 0e06 	mla	lr, ip, r6, r0
9001a378:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001a37c:	d543      	bpl.n	9001a406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001a37e:	4698      	mov	r8, r3
9001a380:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001a384:	f1b8 0f00 	cmp.w	r8, #0
9001a388:	dc71      	bgt.n	9001a46e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001a38a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a38e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a392:	9b01      	ldr	r3, [sp, #4]
9001a394:	2b00      	cmp	r3, #0
9001a396:	f340 809d 	ble.w	9001a4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a39a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a39e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a3a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a3a4:	eeb0 6a62 	vmov.f32	s12, s5
9001a3a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a3ac:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a3b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a3b8:	eeb0 6a43 	vmov.f32	s12, s6
9001a3bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3c0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a3c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a3c8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a3cc:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a3d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a3d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a3d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a3dc:	ee12 2a90 	vmov	r2, s5
9001a3e0:	eef0 2a47 	vmov.f32	s5, s14
9001a3e4:	fb92 fcf3 	sdiv	ip, r2, r3
9001a3e8:	ee13 2a10 	vmov	r2, s6
9001a3ec:	eeb0 3a67 	vmov.f32	s6, s15
9001a3f0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a3f4:	9312      	str	r3, [sp, #72]	; 0x48
9001a3f6:	9b01      	ldr	r3, [sp, #4]
9001a3f8:	9a03      	ldr	r2, [sp, #12]
9001a3fa:	3b01      	subs	r3, #1
9001a3fc:	9301      	str	r3, [sp, #4]
9001a3fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a400:	bf08      	it	eq
9001a402:	4613      	moveq	r3, r2
9001a404:	e793      	b.n	9001a32e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001a406:	45ce      	cmp	lr, r9
9001a408:	dab9      	bge.n	9001a37e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a40a:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a40c:	fb01 2606 	mla	r6, r1, r6, r2
9001a410:	1436      	asrs	r6, r6, #16
9001a412:	d4b4      	bmi.n	9001a37e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a414:	4546      	cmp	r6, r8
9001a416:	dab2      	bge.n	9001a37e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a418:	4698      	mov	r8, r3
9001a41a:	46a2      	mov	sl, r4
9001a41c:	f1b8 0f00 	cmp.w	r8, #0
9001a420:	ddb3      	ble.n	9001a38a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a422:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a426:	1416      	asrs	r6, r2, #16
9001a428:	9902      	ldr	r1, [sp, #8]
9001a42a:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001a42e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a432:	4460      	add	r0, ip
9001a434:	fb09 1606 	mla	r6, r9, r6, r1
9001a438:	4928      	ldr	r1, [pc, #160]	; (9001a4dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001a43a:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001a43e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a442:	eb07 0b0e 	add.w	fp, r7, lr
9001a446:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001a44a:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001a44e:	00f6      	lsls	r6, r6, #3
9001a450:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001a454:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a456:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a45a:	440a      	add	r2, r1
9001a45c:	ea49 0606 	orr.w	r6, r9, r6
9001a460:	f817 900e 	ldrb.w	r9, [r7, lr]
9001a464:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001a468:	f82a 6b02 	strh.w	r6, [sl], #2
9001a46c:	e7d6      	b.n	9001a41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a46e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a472:	d429      	bmi.n	9001a4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a474:	68ae      	ldr	r6, [r5, #8]
9001a476:	454e      	cmp	r6, r9
9001a478:	dd26      	ble.n	9001a4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a47a:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001a47e:	d423      	bmi.n	9001a4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a480:	68e9      	ldr	r1, [r5, #12]
9001a482:	4559      	cmp	r1, fp
9001a484:	dd20      	ble.n	9001a4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a486:	fa0f fe86 	sxth.w	lr, r6
9001a48a:	9902      	ldr	r1, [sp, #8]
9001a48c:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001a490:	f06f 0101 	mvn.w	r1, #1
9001a494:	f81e e009 	ldrb.w	lr, [lr, r9]
9001a498:	fb01 f908 	mul.w	r9, r1, r8
9001a49c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001a4a0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a4a4:	eb07 060e 	add.w	r6, r7, lr
9001a4a8:	f896 b002 	ldrb.w	fp, [r6, #2]
9001a4ac:	7876      	ldrb	r6, [r6, #1]
9001a4ae:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001a4b2:	00f6      	lsls	r6, r6, #3
9001a4b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a4b8:	ea4b 0606 	orr.w	r6, fp, r6
9001a4bc:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001a4c0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001a4c4:	f82a 6009 	strh.w	r6, [sl, r9]
9001a4c8:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a4ca:	4460      	add	r0, ip
9001a4cc:	f108 38ff 	add.w	r8, r8, #4294967295
9001a4d0:	440a      	add	r2, r1
9001a4d2:	e757      	b.n	9001a384 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a4d4:	b005      	add	sp, #20
9001a4d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a4da:	bf00      	nop
9001a4dc:	fffff800 	.word	0xfffff800

9001a4e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a4e4:	b087      	sub	sp, #28
9001a4e6:	468b      	mov	fp, r1
9001a4e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a4ec:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a4ee:	9204      	str	r2, [sp, #16]
9001a4f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a4f4:	6841      	ldr	r1, [r0, #4]
9001a4f6:	9205      	str	r2, [sp, #20]
9001a4f8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a4fc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a500:	fb01 2404 	mla	r4, r1, r4, r2
9001a504:	6802      	ldr	r2, [r0, #0]
9001a506:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a50a:	f8dc 2000 	ldr.w	r2, [ip]
9001a50e:	9201      	str	r2, [sp, #4]
9001a510:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a514:	3204      	adds	r2, #4
9001a516:	9202      	str	r2, [sp, #8]
9001a518:	f1bb 0f00 	cmp.w	fp, #0
9001a51c:	dc03      	bgt.n	9001a526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001a51e:	9a04      	ldr	r2, [sp, #16]
9001a520:	2a00      	cmp	r2, #0
9001a522:	f340 8138 	ble.w	9001a796 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001a526:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a528:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a52c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a530:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a532:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001a536:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a53a:	2b00      	cmp	r3, #0
9001a53c:	dd0e      	ble.n	9001a55c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a53e:	1402      	asrs	r2, r0, #16
9001a540:	d405      	bmi.n	9001a54e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a542:	42ba      	cmp	r2, r7
9001a544:	da03      	bge.n	9001a54e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a546:	140a      	asrs	r2, r1, #16
9001a548:	d401      	bmi.n	9001a54e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a54a:	42b2      	cmp	r2, r6
9001a54c:	db07      	blt.n	9001a55e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a54e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a550:	3b01      	subs	r3, #1
9001a552:	3402      	adds	r4, #2
9001a554:	4410      	add	r0, r2
9001a556:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a558:	4411      	add	r1, r2
9001a55a:	e7ee      	b.n	9001a53a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001a55c:	d019      	beq.n	9001a592 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a55e:	1e5a      	subs	r2, r3, #1
9001a560:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a562:	fb05 0502 	mla	r5, r5, r2, r0
9001a566:	142d      	asrs	r5, r5, #16
9001a568:	d409      	bmi.n	9001a57e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a56a:	42bd      	cmp	r5, r7
9001a56c:	da07      	bge.n	9001a57e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a56e:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a570:	fb05 1202 	mla	r2, r5, r2, r1
9001a574:	1412      	asrs	r2, r2, #16
9001a576:	d402      	bmi.n	9001a57e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a578:	42b2      	cmp	r2, r6
9001a57a:	f2c0 80ac 	blt.w	9001a6d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001a57e:	f04f 0e00 	mov.w	lr, #0
9001a582:	eb03 020e 	add.w	r2, r3, lr
9001a586:	2a00      	cmp	r2, #0
9001a588:	dc3e      	bgt.n	9001a608 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a58a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a58e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a592:	f1bb 0f00 	cmp.w	fp, #0
9001a596:	f340 80fe 	ble.w	9001a796 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001a59a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a59e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a5a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a5a4:	f1bb 0b01 	subs.w	fp, fp, #1
9001a5a8:	eeb0 6a62 	vmov.f32	s12, s5
9001a5ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a5b0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a5b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a5b8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a5bc:	eeb0 6a43 	vmov.f32	s12, s6
9001a5c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a5c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a5c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a5cc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a5d0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a5d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a5d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a5dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a5e0:	ee12 2a90 	vmov	r2, s5
9001a5e4:	eef0 2a47 	vmov.f32	s5, s14
9001a5e8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a5ec:	ee13 2a10 	vmov	r2, s6
9001a5f0:	9313      	str	r3, [sp, #76]	; 0x4c
9001a5f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a5f4:	eeb0 3a67 	vmov.f32	s6, s15
9001a5f8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a5fc:	9a04      	ldr	r2, [sp, #16]
9001a5fe:	9314      	str	r3, [sp, #80]	; 0x50
9001a600:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a602:	bf08      	it	eq
9001a604:	4613      	moveq	r3, r2
9001a606:	e787      	b.n	9001a518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a608:	1406      	asrs	r6, r0, #16
9001a60a:	d45d      	bmi.n	9001a6c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a60c:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001a610:	42b5      	cmp	r5, r6
9001a612:	dd59      	ble.n	9001a6c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a614:	140f      	asrs	r7, r1, #16
9001a616:	d457      	bmi.n	9001a6c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a618:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001a61c:	42ba      	cmp	r2, r7
9001a61e:	dd53      	ble.n	9001a6c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a620:	9a01      	ldr	r2, [sp, #4]
9001a622:	b22d      	sxth	r5, r5
9001a624:	fb07 2505 	mla	r5, r7, r5, r2
9001a628:	5daa      	ldrb	r2, [r5, r6]
9001a62a:	9d02      	ldr	r5, [sp, #8]
9001a62c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001a630:	0e2e      	lsrs	r6, r5, #24
9001a632:	d049      	beq.n	9001a6c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a634:	f06f 0201 	mvn.w	r2, #1
9001a638:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a63c:	fb02 f20e 	mul.w	r2, r2, lr
9001a640:	f834 8002 	ldrh.w	r8, [r4, r2]
9001a644:	9203      	str	r2, [sp, #12]
9001a646:	9a05      	ldr	r2, [sp, #20]
9001a648:	ea4f 2728 	mov.w	r7, r8, asr #8
9001a64c:	4356      	muls	r6, r2
9001a64e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a652:	1c72      	adds	r2, r6, #1
9001a654:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001a658:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a65c:	b2ed      	uxtb	r5, r5
9001a65e:	1212      	asrs	r2, r2, #8
9001a660:	fa1f f982 	uxth.w	r9, r2
9001a664:	43d2      	mvns	r2, r2
9001a666:	fb16 f609 	smulbb	r6, r6, r9
9001a66a:	b2d2      	uxtb	r2, r2
9001a66c:	fb15 f509 	smulbb	r5, r5, r9
9001a670:	fb07 6702 	mla	r7, r7, r2, r6
9001a674:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001a678:	fb1a fa09 	smulbb	sl, sl, r9
9001a67c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a680:	b2bf      	uxth	r7, r7
9001a682:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a686:	fa5f f888 	uxtb.w	r8, r8
9001a68a:	fb06 a602 	mla	r6, r6, r2, sl
9001a68e:	fb08 5502 	mla	r5, r8, r2, r5
9001a692:	1c7a      	adds	r2, r7, #1
9001a694:	b2b6      	uxth	r6, r6
9001a696:	b2ad      	uxth	r5, r5
9001a698:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a69c:	9a03      	ldr	r2, [sp, #12]
9001a69e:	f105 0a01 	add.w	sl, r5, #1
9001a6a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a6a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a6aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a6ae:	ea4a 0707 	orr.w	r7, sl, r7
9001a6b2:	f106 0a01 	add.w	sl, r6, #1
9001a6b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a6ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a6be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a6c2:	ea47 070a 	orr.w	r7, r7, sl
9001a6c6:	52a7      	strh	r7, [r4, r2]
9001a6c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a6ca:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a6ce:	4410      	add	r0, r2
9001a6d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a6d2:	4411      	add	r1, r2
9001a6d4:	e755      	b.n	9001a582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a6d6:	f04f 0800 	mov.w	r8, #0
9001a6da:	eba3 0208 	sub.w	r2, r3, r8
9001a6de:	2a00      	cmp	r2, #0
9001a6e0:	f77f af53 	ble.w	9001a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a6e4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001a6e8:	140a      	asrs	r2, r1, #16
9001a6ea:	9f01      	ldr	r7, [sp, #4]
9001a6ec:	1405      	asrs	r5, r0, #16
9001a6ee:	fb06 7202 	mla	r2, r6, r2, r7
9001a6f2:	5d52      	ldrb	r2, [r2, r5]
9001a6f4:	9d02      	ldr	r5, [sp, #8]
9001a6f6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001a6fa:	0e2e      	lsrs	r6, r5, #24
9001a6fc:	d044      	beq.n	9001a788 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001a6fe:	9a05      	ldr	r2, [sp, #20]
9001a700:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a704:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a708:	4356      	muls	r6, r2
9001a70a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a70e:	1c72      	adds	r2, r6, #1
9001a710:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a714:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001a718:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a71c:	b2ed      	uxtb	r5, r5
9001a71e:	1212      	asrs	r2, r2, #8
9001a720:	fa1f f982 	uxth.w	r9, r2
9001a724:	43d2      	mvns	r2, r2
9001a726:	fb16 f609 	smulbb	r6, r6, r9
9001a72a:	b2d2      	uxtb	r2, r2
9001a72c:	fb15 f509 	smulbb	r5, r5, r9
9001a730:	fb07 6702 	mla	r7, r7, r2, r6
9001a734:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a738:	fb1a fa09 	smulbb	sl, sl, r9
9001a73c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a740:	b2bf      	uxth	r7, r7
9001a742:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a746:	fa5f fe8e 	uxtb.w	lr, lr
9001a74a:	fb06 a602 	mla	r6, r6, r2, sl
9001a74e:	fb0e 5502 	mla	r5, lr, r2, r5
9001a752:	1c7a      	adds	r2, r7, #1
9001a754:	b2b6      	uxth	r6, r6
9001a756:	b2ad      	uxth	r5, r5
9001a758:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a75c:	f105 0a01 	add.w	sl, r5, #1
9001a760:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a764:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a768:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a76c:	ea4a 0707 	orr.w	r7, sl, r7
9001a770:	f106 0a01 	add.w	sl, r6, #1
9001a774:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a778:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a77c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a780:	ea47 070a 	orr.w	r7, r7, sl
9001a784:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001a788:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a78a:	f108 0801 	add.w	r8, r8, #1
9001a78e:	4410      	add	r0, r2
9001a790:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a792:	4411      	add	r1, r2
9001a794:	e7a1      	b.n	9001a6da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001a796:	b007      	add	sp, #28
9001a798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a79c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a7a0:	b085      	sub	sp, #20
9001a7a2:	468b      	mov	fp, r1
9001a7a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a7a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a7aa:	9203      	str	r2, [sp, #12]
9001a7ac:	6841      	ldr	r1, [r0, #4]
9001a7ae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001a7b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a7b6:	fb01 2404 	mla	r4, r1, r4, r2
9001a7ba:	6802      	ldr	r2, [r0, #0]
9001a7bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a7c0:	f8de 2000 	ldr.w	r2, [lr]
9001a7c4:	9200      	str	r2, [sp, #0]
9001a7c6:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a7ca:	3204      	adds	r2, #4
9001a7cc:	9201      	str	r2, [sp, #4]
9001a7ce:	f1bb 0f00 	cmp.w	fp, #0
9001a7d2:	dc03      	bgt.n	9001a7dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001a7d4:	9a03      	ldr	r2, [sp, #12]
9001a7d6:	2a00      	cmp	r2, #0
9001a7d8:	f340 8153 	ble.w	9001aa82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a7dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a7de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a7e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a7e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a7e8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001a7ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a7f0:	2b00      	cmp	r3, #0
9001a7f2:	dd0e      	ble.n	9001a812 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a7f4:	1408      	asrs	r0, r1, #16
9001a7f6:	d405      	bmi.n	9001a804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a7f8:	42b8      	cmp	r0, r7
9001a7fa:	da03      	bge.n	9001a804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a7fc:	1410      	asrs	r0, r2, #16
9001a7fe:	d401      	bmi.n	9001a804 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a800:	42b0      	cmp	r0, r6
9001a802:	db07      	blt.n	9001a814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001a804:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a806:	3b01      	subs	r3, #1
9001a808:	3402      	adds	r4, #2
9001a80a:	4401      	add	r1, r0
9001a80c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a80e:	4402      	add	r2, r0
9001a810:	e7ee      	b.n	9001a7f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a812:	d017      	beq.n	9001a844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a814:	1e58      	subs	r0, r3, #1
9001a816:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001a818:	fb05 1500 	mla	r5, r5, r0, r1
9001a81c:	142d      	asrs	r5, r5, #16
9001a81e:	d409      	bmi.n	9001a834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a820:	42bd      	cmp	r5, r7
9001a822:	da07      	bge.n	9001a834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a824:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001a826:	fb05 2000 	mla	r0, r5, r0, r2
9001a82a:	1400      	asrs	r0, r0, #16
9001a82c:	d402      	bmi.n	9001a834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a82e:	42b0      	cmp	r0, r6
9001a830:	f2c0 80bc 	blt.w	9001a9ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001a834:	2600      	movs	r6, #0
9001a836:	1998      	adds	r0, r3, r6
9001a838:	2800      	cmp	r0, #0
9001a83a:	dc3e      	bgt.n	9001a8ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001a83c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a840:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a844:	f1bb 0f00 	cmp.w	fp, #0
9001a848:	f340 811b 	ble.w	9001aa82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a84c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a850:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a852:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a856:	f1bb 0b01 	subs.w	fp, fp, #1
9001a85a:	eeb0 6a62 	vmov.f32	s12, s5
9001a85e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a862:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a866:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a86a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a86e:	eeb0 6a43 	vmov.f32	s12, s6
9001a872:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a876:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a87a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a87e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a882:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a886:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a88a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a88e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a892:	ee12 2a90 	vmov	r2, s5
9001a896:	eef0 2a47 	vmov.f32	s5, s14
9001a89a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a89e:	ee13 2a10 	vmov	r2, s6
9001a8a2:	9311      	str	r3, [sp, #68]	; 0x44
9001a8a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a8a6:	eeb0 3a67 	vmov.f32	s6, s15
9001a8aa:	fb92 f3f3 	sdiv	r3, r2, r3
9001a8ae:	9a03      	ldr	r2, [sp, #12]
9001a8b0:	9312      	str	r3, [sp, #72]	; 0x48
9001a8b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a8b4:	bf08      	it	eq
9001a8b6:	4613      	moveq	r3, r2
9001a8b8:	e789      	b.n	9001a7ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001a8ba:	140f      	asrs	r7, r1, #16
9001a8bc:	d426      	bmi.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a8be:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a8c2:	42bd      	cmp	r5, r7
9001a8c4:	dd22      	ble.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a8c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a8ca:	d41f      	bmi.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a8cc:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a8d0:	4560      	cmp	r0, ip
9001a8d2:	dd1b      	ble.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a8d4:	9800      	ldr	r0, [sp, #0]
9001a8d6:	b22d      	sxth	r5, r5
9001a8d8:	fb0c 0505 	mla	r5, ip, r5, r0
9001a8dc:	5de8      	ldrb	r0, [r5, r7]
9001a8de:	9d01      	ldr	r5, [sp, #4]
9001a8e0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001a8e4:	0e07      	lsrs	r7, r0, #24
9001a8e6:	2fff      	cmp	r7, #255	; 0xff
9001a8e8:	d116      	bne.n	9001a918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a8ea:	f06f 0501 	mvn.w	r5, #1
9001a8ee:	fb05 f706 	mul.w	r7, r5, r6
9001a8f2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001a8f6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a8fa:	0945      	lsrs	r5, r0, #5
9001a8fc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a900:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a904:	ea4c 0505 	orr.w	r5, ip, r5
9001a908:	4305      	orrs	r5, r0
9001a90a:	53e5      	strh	r5, [r4, r7]
9001a90c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a90e:	3e01      	subs	r6, #1
9001a910:	4401      	add	r1, r0
9001a912:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a914:	4402      	add	r2, r0
9001a916:	e78e      	b.n	9001a836 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001a918:	b2fd      	uxtb	r5, r7
9001a91a:	2f00      	cmp	r7, #0
9001a91c:	d0f6      	beq.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a91e:	f06f 0701 	mvn.w	r7, #1
9001a922:	fa1f f985 	uxth.w	r9, r5
9001a926:	43ed      	mvns	r5, r5
9001a928:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a92c:	4377      	muls	r7, r6
9001a92e:	fb1a fa09 	smulbb	sl, sl, r9
9001a932:	b2ed      	uxtb	r5, r5
9001a934:	f834 8007 	ldrh.w	r8, [r4, r7]
9001a938:	9702      	str	r7, [sp, #8]
9001a93a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a93e:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001a942:	fb17 f709 	smulbb	r7, r7, r9
9001a946:	b2c0      	uxtb	r0, r0
9001a948:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a94c:	fb10 f009 	smulbb	r0, r0, r9
9001a950:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a954:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001a958:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a95c:	fa1f fc8c 	uxth.w	ip, ip
9001a960:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a964:	fa5f f888 	uxtb.w	r8, r8
9001a968:	fb07 a705 	mla	r7, r7, r5, sl
9001a96c:	fb08 0005 	mla	r0, r8, r5, r0
9001a970:	f10c 0501 	add.w	r5, ip, #1
9001a974:	b2bf      	uxth	r7, r7
9001a976:	b280      	uxth	r0, r0
9001a978:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a97c:	f100 0a01 	add.w	sl, r0, #1
9001a980:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a984:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a988:	9802      	ldr	r0, [sp, #8]
9001a98a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a98e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a992:	f107 0a01 	add.w	sl, r7, #1
9001a996:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a99a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a99e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a9a2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a9a6:	f824 c000 	strh.w	ip, [r4, r0]
9001a9aa:	e7af      	b.n	9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a9ac:	f04f 0800 	mov.w	r8, #0
9001a9b0:	eba3 0008 	sub.w	r0, r3, r8
9001a9b4:	2800      	cmp	r0, #0
9001a9b6:	f77f af41 	ble.w	9001a83c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a9ba:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001a9be:	1410      	asrs	r0, r2, #16
9001a9c0:	9f00      	ldr	r7, [sp, #0]
9001a9c2:	140d      	asrs	r5, r1, #16
9001a9c4:	fb06 7000 	mla	r0, r6, r0, r7
9001a9c8:	5d40      	ldrb	r0, [r0, r5]
9001a9ca:	9d01      	ldr	r5, [sp, #4]
9001a9cc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a9d0:	0e2e      	lsrs	r6, r5, #24
9001a9d2:	2eff      	cmp	r6, #255	; 0xff
9001a9d4:	d112      	bne.n	9001a9fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001a9d6:	482c      	ldr	r0, [pc, #176]	; (9001aa88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001a9d8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a9dc:	0968      	lsrs	r0, r5, #5
9001a9de:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a9e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a9e6:	4330      	orrs	r0, r6
9001a9e8:	4328      	orrs	r0, r5
9001a9ea:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001a9ee:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a9f0:	f108 0801 	add.w	r8, r8, #1
9001a9f4:	4401      	add	r1, r0
9001a9f6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a9f8:	4402      	add	r2, r0
9001a9fa:	e7d9      	b.n	9001a9b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a9fc:	b2f0      	uxtb	r0, r6
9001a9fe:	2e00      	cmp	r6, #0
9001aa00:	d0f5      	beq.n	9001a9ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001aa02:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001aa06:	fa1f f980 	uxth.w	r9, r0
9001aa0a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001aa0e:	43c0      	mvns	r0, r0
9001aa10:	ea4f 272c 	mov.w	r7, ip, asr #8
9001aa14:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001aa18:	fb16 f609 	smulbb	r6, r6, r9
9001aa1c:	b2c0      	uxtb	r0, r0
9001aa1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001aa22:	b2ed      	uxtb	r5, r5
9001aa24:	fb1a fa09 	smulbb	sl, sl, r9
9001aa28:	fb07 6700 	mla	r7, r7, r0, r6
9001aa2c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001aa30:	fb15 f509 	smulbb	r5, r5, r9
9001aa34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001aa38:	b2bf      	uxth	r7, r7
9001aa3a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001aa3e:	fa5f fc8c 	uxtb.w	ip, ip
9001aa42:	fb06 a600 	mla	r6, r6, r0, sl
9001aa46:	fb0c 5500 	mla	r5, ip, r0, r5
9001aa4a:	1c78      	adds	r0, r7, #1
9001aa4c:	b2b6      	uxth	r6, r6
9001aa4e:	b2ad      	uxth	r5, r5
9001aa50:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001aa54:	f105 0a01 	add.w	sl, r5, #1
9001aa58:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001aa5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001aa60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001aa64:	ea4a 0707 	orr.w	r7, sl, r7
9001aa68:	f106 0a01 	add.w	sl, r6, #1
9001aa6c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001aa70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aa74:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aa78:	ea47 070a 	orr.w	r7, r7, sl
9001aa7c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001aa80:	e7b5      	b.n	9001a9ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001aa82:	b005      	add	sp, #20
9001aa84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aa88:	fffff800 	.word	0xfffff800

9001aa8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aa8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aa90:	b087      	sub	sp, #28
9001aa92:	468b      	mov	fp, r1
9001aa94:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001aa98:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001aa9a:	9204      	str	r2, [sp, #16]
9001aa9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001aaa0:	6861      	ldr	r1, [r4, #4]
9001aaa2:	9205      	str	r2, [sp, #20]
9001aaa4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001aaa8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001aaac:	fb01 2000 	mla	r0, r1, r0, r2
9001aab0:	6822      	ldr	r2, [r4, #0]
9001aab2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001aab6:	f8de 2000 	ldr.w	r2, [lr]
9001aaba:	9201      	str	r2, [sp, #4]
9001aabc:	f8de 2004 	ldr.w	r2, [lr, #4]
9001aac0:	9202      	str	r2, [sp, #8]
9001aac2:	f1bb 0f00 	cmp.w	fp, #0
9001aac6:	dc03      	bgt.n	9001aad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001aac8:	9a04      	ldr	r2, [sp, #16]
9001aaca:	2a00      	cmp	r2, #0
9001aacc:	f340 8142 	ble.w	9001ad54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001aad0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001aad2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001aad6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001aada:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001aadc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001aae0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001aae4:	2b00      	cmp	r3, #0
9001aae6:	dd0e      	ble.n	9001ab06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001aae8:	140c      	asrs	r4, r1, #16
9001aaea:	d405      	bmi.n	9001aaf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001aaec:	42bc      	cmp	r4, r7
9001aaee:	da03      	bge.n	9001aaf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001aaf0:	1414      	asrs	r4, r2, #16
9001aaf2:	d401      	bmi.n	9001aaf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001aaf4:	42b4      	cmp	r4, r6
9001aaf6:	db07      	blt.n	9001ab08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001aaf8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001aafa:	3b01      	subs	r3, #1
9001aafc:	3002      	adds	r0, #2
9001aafe:	4421      	add	r1, r4
9001ab00:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ab02:	4422      	add	r2, r4
9001ab04:	e7ee      	b.n	9001aae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001ab06:	d019      	beq.n	9001ab3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001ab08:	1e5c      	subs	r4, r3, #1
9001ab0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ab0c:	fb05 1504 	mla	r5, r5, r4, r1
9001ab10:	142d      	asrs	r5, r5, #16
9001ab12:	d409      	bmi.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ab14:	42bd      	cmp	r5, r7
9001ab16:	da07      	bge.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ab18:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ab1a:	fb05 2404 	mla	r4, r5, r4, r2
9001ab1e:	1424      	asrs	r4, r4, #16
9001ab20:	d402      	bmi.n	9001ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001ab22:	42b4      	cmp	r4, r6
9001ab24:	f2c0 80b1 	blt.w	9001ac8a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001ab28:	f04f 0800 	mov.w	r8, #0
9001ab2c:	eb03 0408 	add.w	r4, r3, r8
9001ab30:	2c00      	cmp	r4, #0
9001ab32:	dc3e      	bgt.n	9001abb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001ab34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ab38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ab3c:	f1bb 0f00 	cmp.w	fp, #0
9001ab40:	f340 8108 	ble.w	9001ad54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001ab44:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ab48:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ab4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ab4e:	f1bb 0b01 	subs.w	fp, fp, #1
9001ab52:	eeb0 6a62 	vmov.f32	s12, s5
9001ab56:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ab5a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ab5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ab62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001ab66:	eeb0 6a43 	vmov.f32	s12, s6
9001ab6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ab6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001ab72:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ab76:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ab7a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ab7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ab82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ab86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ab8a:	ee12 2a90 	vmov	r2, s5
9001ab8e:	eef0 2a47 	vmov.f32	s5, s14
9001ab92:	fb92 f3f3 	sdiv	r3, r2, r3
9001ab96:	ee13 2a10 	vmov	r2, s6
9001ab9a:	9313      	str	r3, [sp, #76]	; 0x4c
9001ab9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ab9e:	eeb0 3a67 	vmov.f32	s6, s15
9001aba2:	fb92 f3f3 	sdiv	r3, r2, r3
9001aba6:	9a04      	ldr	r2, [sp, #16]
9001aba8:	9314      	str	r3, [sp, #80]	; 0x50
9001abaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001abac:	bf08      	it	eq
9001abae:	4613      	moveq	r3, r2
9001abb0:	e787      	b.n	9001aac2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001abb2:	140e      	asrs	r6, r1, #16
9001abb4:	d462      	bmi.n	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001abb6:	f8de 5008 	ldr.w	r5, [lr, #8]
9001abba:	42b5      	cmp	r5, r6
9001abbc:	dd5e      	ble.n	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001abbe:	1417      	asrs	r7, r2, #16
9001abc0:	d45c      	bmi.n	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001abc2:	f8de 400c 	ldr.w	r4, [lr, #12]
9001abc6:	42bc      	cmp	r4, r7
9001abc8:	dd58      	ble.n	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001abca:	b22d      	sxth	r5, r5
9001abcc:	9c02      	ldr	r4, [sp, #8]
9001abce:	fb07 6505 	mla	r5, r7, r5, r6
9001abd2:	5d66      	ldrb	r6, [r4, r5]
9001abd4:	2e00      	cmp	r6, #0
9001abd6:	d051      	beq.n	9001ac7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001abd8:	9c01      	ldr	r4, [sp, #4]
9001abda:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001abde:	f06f 0401 	mvn.w	r4, #1
9001abe2:	fb04 f408 	mul.w	r4, r4, r8
9001abe6:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001abea:	5b05      	ldrh	r5, [r0, r4]
9001abec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001abf0:	9403      	str	r4, [sp, #12]
9001abf2:	9c05      	ldr	r4, [sp, #20]
9001abf4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001abf8:	4366      	muls	r6, r4
9001abfa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001abfe:	1c74      	adds	r4, r6, #1
9001ac00:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001ac04:	122e      	asrs	r6, r5, #8
9001ac06:	1224      	asrs	r4, r4, #8
9001ac08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ac0c:	00ed      	lsls	r5, r5, #3
9001ac0e:	b2a7      	uxth	r7, r4
9001ac10:	43e4      	mvns	r4, r4
9001ac12:	b2ed      	uxtb	r5, r5
9001ac14:	b2e4      	uxtb	r4, r4
9001ac16:	fb16 f604 	smulbb	r6, r6, r4
9001ac1a:	fb15 f504 	smulbb	r5, r5, r4
9001ac1e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ac22:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001ac26:	fb1a fa04 	smulbb	sl, sl, r4
9001ac2a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001ac2e:	fa1f fc8c 	uxth.w	ip, ip
9001ac32:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ac36:	fa5f f989 	uxtb.w	r9, r9
9001ac3a:	fb06 a607 	mla	r6, r6, r7, sl
9001ac3e:	f10c 0401 	add.w	r4, ip, #1
9001ac42:	fb09 5507 	mla	r5, r9, r7, r5
9001ac46:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ac4a:	9c03      	ldr	r4, [sp, #12]
9001ac4c:	b2ad      	uxth	r5, r5
9001ac4e:	b2b6      	uxth	r6, r6
9001ac50:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ac54:	f105 0a01 	add.w	sl, r5, #1
9001ac58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ac5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ac60:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ac64:	f106 0a01 	add.w	sl, r6, #1
9001ac68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ac6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ac70:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ac74:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ac78:	f820 c004 	strh.w	ip, [r0, r4]
9001ac7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ac7e:	f108 38ff 	add.w	r8, r8, #4294967295
9001ac82:	4421      	add	r1, r4
9001ac84:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ac86:	4422      	add	r2, r4
9001ac88:	e750      	b.n	9001ab2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ac8a:	f04f 0900 	mov.w	r9, #0
9001ac8e:	eba3 0409 	sub.w	r4, r3, r9
9001ac92:	2c00      	cmp	r4, #0
9001ac94:	f77f af4e 	ble.w	9001ab34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ac98:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ac9c:	140d      	asrs	r5, r1, #16
9001ac9e:	1414      	asrs	r4, r2, #16
9001aca0:	fb06 5404 	mla	r4, r6, r4, r5
9001aca4:	9d02      	ldr	r5, [sp, #8]
9001aca6:	5d2e      	ldrb	r6, [r5, r4]
9001aca8:	2e00      	cmp	r6, #0
9001acaa:	d04c      	beq.n	9001ad46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001acac:	9d01      	ldr	r5, [sp, #4]
9001acae:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001acb2:	9c05      	ldr	r4, [sp, #20]
9001acb4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001acb8:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001acbc:	4366      	muls	r6, r4
9001acbe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001acc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001acc6:	1c74      	adds	r4, r6, #1
9001acc8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001accc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001acd0:	122e      	asrs	r6, r5, #8
9001acd2:	1224      	asrs	r4, r4, #8
9001acd4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001acd8:	00ed      	lsls	r5, r5, #3
9001acda:	b2a7      	uxth	r7, r4
9001acdc:	43e4      	mvns	r4, r4
9001acde:	b2ed      	uxtb	r5, r5
9001ace0:	b2e4      	uxtb	r4, r4
9001ace2:	fb16 f604 	smulbb	r6, r6, r4
9001ace6:	fb15 f504 	smulbb	r5, r5, r4
9001acea:	fb0c 6c07 	mla	ip, ip, r7, r6
9001acee:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001acf2:	fb1a fa04 	smulbb	sl, sl, r4
9001acf6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001acfa:	fa1f fc8c 	uxth.w	ip, ip
9001acfe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ad02:	fa5f f888 	uxtb.w	r8, r8
9001ad06:	fb06 a607 	mla	r6, r6, r7, sl
9001ad0a:	f10c 0401 	add.w	r4, ip, #1
9001ad0e:	fb08 5507 	mla	r5, r8, r7, r5
9001ad12:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ad16:	b2ad      	uxth	r5, r5
9001ad18:	b2b6      	uxth	r6, r6
9001ad1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ad1e:	f105 0a01 	add.w	sl, r5, #1
9001ad22:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ad26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ad2a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ad2e:	f106 0a01 	add.w	sl, r6, #1
9001ad32:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ad36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ad3a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ad3e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ad42:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001ad46:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ad48:	f109 0901 	add.w	r9, r9, #1
9001ad4c:	4421      	add	r1, r4
9001ad4e:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ad50:	4422      	add	r2, r4
9001ad52:	e79c      	b.n	9001ac8e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001ad54:	b007      	add	sp, #28
9001ad56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ad5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ad5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ad5e:	b085      	sub	sp, #20
9001ad60:	468b      	mov	fp, r1
9001ad62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ad66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ad68:	9203      	str	r2, [sp, #12]
9001ad6a:	6861      	ldr	r1, [r4, #4]
9001ad6c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001ad70:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001ad74:	fb01 2000 	mla	r0, r1, r0, r2
9001ad78:	6822      	ldr	r2, [r4, #0]
9001ad7a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ad7e:	f8d8 2000 	ldr.w	r2, [r8]
9001ad82:	9200      	str	r2, [sp, #0]
9001ad84:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001ad88:	9201      	str	r2, [sp, #4]
9001ad8a:	f1bb 0f00 	cmp.w	fp, #0
9001ad8e:	dc03      	bgt.n	9001ad98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ad90:	9a03      	ldr	r2, [sp, #12]
9001ad92:	2a00      	cmp	r2, #0
9001ad94:	f340 8146 	ble.w	9001b024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ad98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ad9a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ad9e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ada2:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ada4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ada8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001adac:	2b00      	cmp	r3, #0
9001adae:	dd0e      	ble.n	9001adce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001adb0:	140c      	asrs	r4, r1, #16
9001adb2:	d405      	bmi.n	9001adc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001adb4:	42bc      	cmp	r4, r7
9001adb6:	da03      	bge.n	9001adc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001adb8:	1414      	asrs	r4, r2, #16
9001adba:	d401      	bmi.n	9001adc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001adbc:	42b4      	cmp	r4, r6
9001adbe:	db07      	blt.n	9001add0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001adc0:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001adc2:	3b01      	subs	r3, #1
9001adc4:	3002      	adds	r0, #2
9001adc6:	4421      	add	r1, r4
9001adc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001adca:	4422      	add	r2, r4
9001adcc:	e7ee      	b.n	9001adac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001adce:	d017      	beq.n	9001ae00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001add0:	1e5c      	subs	r4, r3, #1
9001add2:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001add4:	fb05 1504 	mla	r5, r5, r4, r1
9001add8:	142d      	asrs	r5, r5, #16
9001adda:	d409      	bmi.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001addc:	42bd      	cmp	r5, r7
9001adde:	da07      	bge.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ade0:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ade2:	fb05 2404 	mla	r4, r5, r4, r2
9001ade6:	1424      	asrs	r4, r4, #16
9001ade8:	d402      	bmi.n	9001adf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001adea:	42b4      	cmp	r4, r6
9001adec:	f2c0 80b3 	blt.w	9001af56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001adf0:	2600      	movs	r6, #0
9001adf2:	199c      	adds	r4, r3, r6
9001adf4:	2c00      	cmp	r4, #0
9001adf6:	dc3e      	bgt.n	9001ae76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001adf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001adfc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ae00:	f1bb 0f00 	cmp.w	fp, #0
9001ae04:	f340 810e 	ble.w	9001b024 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ae08:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ae0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ae0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ae12:	f1bb 0b01 	subs.w	fp, fp, #1
9001ae16:	eeb0 6a62 	vmov.f32	s12, s5
9001ae1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ae1e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ae22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae26:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001ae2a:	eeb0 6a43 	vmov.f32	s12, s6
9001ae2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae32:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001ae36:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ae3a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ae3e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ae42:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ae46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ae4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ae4e:	ee12 2a90 	vmov	r2, s5
9001ae52:	eef0 2a47 	vmov.f32	s5, s14
9001ae56:	fb92 f3f3 	sdiv	r3, r2, r3
9001ae5a:	ee13 2a10 	vmov	r2, s6
9001ae5e:	9311      	str	r3, [sp, #68]	; 0x44
9001ae60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ae62:	eeb0 3a67 	vmov.f32	s6, s15
9001ae66:	fb92 f3f3 	sdiv	r3, r2, r3
9001ae6a:	9a03      	ldr	r2, [sp, #12]
9001ae6c:	9312      	str	r3, [sp, #72]	; 0x48
9001ae6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ae70:	bf08      	it	eq
9001ae72:	4613      	moveq	r3, r2
9001ae74:	e789      	b.n	9001ad8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ae76:	140f      	asrs	r7, r1, #16
9001ae78:	d418      	bmi.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ae7a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001ae7e:	42bd      	cmp	r5, r7
9001ae80:	dd14      	ble.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ae82:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001ae86:	d411      	bmi.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ae88:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001ae8c:	4564      	cmp	r4, ip
9001ae8e:	dd0d      	ble.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ae90:	b22d      	sxth	r5, r5
9001ae92:	9c01      	ldr	r4, [sp, #4]
9001ae94:	fb0c 7505 	mla	r5, ip, r5, r7
9001ae98:	5d64      	ldrb	r4, [r4, r5]
9001ae9a:	2cff      	cmp	r4, #255	; 0xff
9001ae9c:	d10c      	bne.n	9001aeb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001ae9e:	9c00      	ldr	r4, [sp, #0]
9001aea0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001aea4:	f06f 0401 	mvn.w	r4, #1
9001aea8:	4374      	muls	r4, r6
9001aeaa:	5305      	strh	r5, [r0, r4]
9001aeac:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001aeae:	3e01      	subs	r6, #1
9001aeb0:	4421      	add	r1, r4
9001aeb2:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001aeb4:	4422      	add	r2, r4
9001aeb6:	e79c      	b.n	9001adf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001aeb8:	2c00      	cmp	r4, #0
9001aeba:	d0f7      	beq.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001aebc:	9f00      	ldr	r7, [sp, #0]
9001aebe:	fa1f fc84 	uxth.w	ip, r4
9001aec2:	43e4      	mvns	r4, r4
9001aec4:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001aec8:	f06f 0501 	mvn.w	r5, #1
9001aecc:	b2e4      	uxtb	r4, r4
9001aece:	4375      	muls	r5, r6
9001aed0:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001aed4:	9502      	str	r5, [sp, #8]
9001aed6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001aeda:	5b45      	ldrh	r5, [r0, r5]
9001aedc:	122f      	asrs	r7, r5, #8
9001aede:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001aee2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001aee6:	00ed      	lsls	r5, r5, #3
9001aee8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001aeec:	fb17 f704 	smulbb	r7, r7, r4
9001aef0:	b2ed      	uxtb	r5, r5
9001aef2:	fb1a fa04 	smulbb	sl, sl, r4
9001aef6:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001aefa:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001aefe:	fb15 f504 	smulbb	r5, r5, r4
9001af02:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001af06:	fa1f fe8e 	uxth.w	lr, lr
9001af0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001af0e:	fa5f f989 	uxtb.w	r9, r9
9001af12:	fb07 a70c 	mla	r7, r7, ip, sl
9001af16:	f10e 0401 	add.w	r4, lr, #1
9001af1a:	fb09 550c 	mla	r5, r9, ip, r5
9001af1e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001af22:	9c02      	ldr	r4, [sp, #8]
9001af24:	b2ad      	uxth	r5, r5
9001af26:	b2bf      	uxth	r7, r7
9001af28:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001af2c:	f105 0a01 	add.w	sl, r5, #1
9001af30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001af34:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001af38:	ea4a 0e0e 	orr.w	lr, sl, lr
9001af3c:	f107 0a01 	add.w	sl, r7, #1
9001af40:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001af44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001af48:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001af4c:	ea4e 0e0a 	orr.w	lr, lr, sl
9001af50:	f820 e004 	strh.w	lr, [r0, r4]
9001af54:	e7aa      	b.n	9001aeac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001af56:	f04f 0900 	mov.w	r9, #0
9001af5a:	eba3 0409 	sub.w	r4, r3, r9
9001af5e:	2c00      	cmp	r4, #0
9001af60:	f77f af4a 	ble.w	9001adf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001af64:	1414      	asrs	r4, r2, #16
9001af66:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001af6a:	140d      	asrs	r5, r1, #16
9001af6c:	fb06 5504 	mla	r5, r6, r4, r5
9001af70:	9c01      	ldr	r4, [sp, #4]
9001af72:	5d64      	ldrb	r4, [r4, r5]
9001af74:	2cff      	cmp	r4, #255	; 0xff
9001af76:	d10b      	bne.n	9001af90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001af78:	9c00      	ldr	r4, [sp, #0]
9001af7a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001af7e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001af82:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001af84:	f109 0901 	add.w	r9, r9, #1
9001af88:	4421      	add	r1, r4
9001af8a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001af8c:	4422      	add	r2, r4
9001af8e:	e7e4      	b.n	9001af5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001af90:	2c00      	cmp	r4, #0
9001af92:	d0f6      	beq.n	9001af82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001af94:	9e00      	ldr	r6, [sp, #0]
9001af96:	b2a7      	uxth	r7, r4
9001af98:	43e4      	mvns	r4, r4
9001af9a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001af9e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001afa2:	b2e4      	uxtb	r4, r4
9001afa4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001afa8:	122e      	asrs	r6, r5, #8
9001afaa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001afae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001afb2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001afb6:	00ed      	lsls	r5, r5, #3
9001afb8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001afbc:	fb16 f604 	smulbb	r6, r6, r4
9001afc0:	b2ed      	uxtb	r5, r5
9001afc2:	fb1a fa04 	smulbb	sl, sl, r4
9001afc6:	fb0c 6c07 	mla	ip, ip, r7, r6
9001afca:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001afce:	fb15 f504 	smulbb	r5, r5, r4
9001afd2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001afd6:	fa1f fc8c 	uxth.w	ip, ip
9001afda:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001afde:	fa5f fe8e 	uxtb.w	lr, lr
9001afe2:	fb06 a607 	mla	r6, r6, r7, sl
9001afe6:	f10c 0401 	add.w	r4, ip, #1
9001afea:	fb0e 5507 	mla	r5, lr, r7, r5
9001afee:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001aff2:	b2ad      	uxth	r5, r5
9001aff4:	b2b6      	uxth	r6, r6
9001aff6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001affa:	f105 0a01 	add.w	sl, r5, #1
9001affe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b002:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b006:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b00a:	f106 0a01 	add.w	sl, r6, #1
9001b00e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b012:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b016:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b01a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b01e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b022:	e7ae      	b.n	9001af82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b024:	b005      	add	sp, #20
9001b026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b02a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b02a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b02e:	b085      	sub	sp, #20
9001b030:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b032:	9203      	str	r2, [sp, #12]
9001b034:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001b038:	9100      	str	r1, [sp, #0]
9001b03a:	9201      	str	r2, [sp, #4]
9001b03c:	6841      	ldr	r1, [r0, #4]
9001b03e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001b042:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b046:	fb01 2404 	mla	r4, r1, r4, r2
9001b04a:	6802      	ldr	r2, [r0, #0]
9001b04c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b050:	f8de 2000 	ldr.w	r2, [lr]
9001b054:	9202      	str	r2, [sp, #8]
9001b056:	9a01      	ldr	r2, [sp, #4]
9001b058:	43d6      	mvns	r6, r2
9001b05a:	b2f6      	uxtb	r6, r6
9001b05c:	9a00      	ldr	r2, [sp, #0]
9001b05e:	2a00      	cmp	r2, #0
9001b060:	dc03      	bgt.n	9001b06a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b062:	9a03      	ldr	r2, [sp, #12]
9001b064:	2a00      	cmp	r2, #0
9001b066:	f340 8124 	ble.w	9001b2b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b06a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b06c:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b070:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b074:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b076:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b07a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b07e:	2b00      	cmp	r3, #0
9001b080:	dd0e      	ble.n	9001b0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b082:	1408      	asrs	r0, r1, #16
9001b084:	d405      	bmi.n	9001b092 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b086:	4560      	cmp	r0, ip
9001b088:	da03      	bge.n	9001b092 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b08a:	1410      	asrs	r0, r2, #16
9001b08c:	d401      	bmi.n	9001b092 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b08e:	42b8      	cmp	r0, r7
9001b090:	db07      	blt.n	9001b0a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b092:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b094:	3b01      	subs	r3, #1
9001b096:	3402      	adds	r4, #2
9001b098:	4401      	add	r1, r0
9001b09a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b09c:	4402      	add	r2, r0
9001b09e:	e7ee      	b.n	9001b07e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b0a0:	d06e      	beq.n	9001b180 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b0a2:	1e58      	subs	r0, r3, #1
9001b0a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b0a6:	fb05 1500 	mla	r5, r5, r0, r1
9001b0aa:	142d      	asrs	r5, r5, #16
9001b0ac:	d45c      	bmi.n	9001b168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b0ae:	4565      	cmp	r5, ip
9001b0b0:	da5a      	bge.n	9001b168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b0b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b0b4:	fb05 2000 	mla	r0, r5, r0, r2
9001b0b8:	1400      	asrs	r0, r0, #16
9001b0ba:	d455      	bmi.n	9001b168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b0bc:	42b8      	cmp	r0, r7
9001b0be:	da53      	bge.n	9001b168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b0c0:	4699      	mov	r9, r3
9001b0c2:	46a2      	mov	sl, r4
9001b0c4:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001b0c8:	f1b9 0f00 	cmp.w	r9, #0
9001b0cc:	dd54      	ble.n	9001b178 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b0ce:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b0d2:	140d      	asrs	r5, r1, #16
9001b0d4:	1410      	asrs	r0, r2, #16
9001b0d6:	f109 39ff 	add.w	r9, r9, #4294967295
9001b0da:	fb07 5000 	mla	r0, r7, r0, r5
9001b0de:	9d02      	ldr	r5, [sp, #8]
9001b0e0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b0e4:	f8ba 5000 	ldrh.w	r5, [sl]
9001b0e8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b0ec:	122f      	asrs	r7, r5, #8
9001b0ee:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b0f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b0f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b0fa:	00ed      	lsls	r5, r5, #3
9001b0fc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001b100:	fb17 f706 	smulbb	r7, r7, r6
9001b104:	b2ed      	uxtb	r5, r5
9001b106:	fb18 f806 	smulbb	r8, r8, r6
9001b10a:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b10e:	10c7      	asrs	r7, r0, #3
9001b110:	fb15 f506 	smulbb	r5, r5, r6
9001b114:	00c0      	lsls	r0, r0, #3
9001b116:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b11a:	fa1f fc8c 	uxth.w	ip, ip
9001b11e:	b2c0      	uxtb	r0, r0
9001b120:	fb07 870b 	mla	r7, r7, fp, r8
9001b124:	fb00 500b 	mla	r0, r0, fp, r5
9001b128:	f10c 0501 	add.w	r5, ip, #1
9001b12c:	b2bf      	uxth	r7, r7
9001b12e:	b280      	uxth	r0, r0
9001b130:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b134:	f107 0801 	add.w	r8, r7, #1
9001b138:	1c45      	adds	r5, r0, #1
9001b13a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b13e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b142:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b146:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b148:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b14c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b150:	4401      	add	r1, r0
9001b152:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001b156:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b158:	ea45 0c0c 	orr.w	ip, r5, ip
9001b15c:	4402      	add	r2, r0
9001b15e:	ea4c 0c08 	orr.w	ip, ip, r8
9001b162:	f82a cb02 	strh.w	ip, [sl], #2
9001b166:	e7af      	b.n	9001b0c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b168:	f04f 0800 	mov.w	r8, #0
9001b16c:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001b170:	eb03 0008 	add.w	r0, r3, r8
9001b174:	2800      	cmp	r0, #0
9001b176:	dc41      	bgt.n	9001b1fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001b178:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b17c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b180:	9b00      	ldr	r3, [sp, #0]
9001b182:	2b00      	cmp	r3, #0
9001b184:	f340 8095 	ble.w	9001b2b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b188:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001b18c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b18e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b192:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b196:	eef0 6a62 	vmov.f32	s13, s5
9001b19a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b19e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b1a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1a6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001b1aa:	eef0 6a43 	vmov.f32	s13, s6
9001b1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b1b2:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001b1b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b1ba:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b1be:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b1c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b1c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b1ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b1ce:	ee12 2a90 	vmov	r2, s5
9001b1d2:	eef0 2a47 	vmov.f32	s5, s14
9001b1d6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b1da:	ee13 2a10 	vmov	r2, s6
9001b1de:	9311      	str	r3, [sp, #68]	; 0x44
9001b1e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b1e2:	eeb0 3a67 	vmov.f32	s6, s15
9001b1e6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b1ea:	9312      	str	r3, [sp, #72]	; 0x48
9001b1ec:	9b00      	ldr	r3, [sp, #0]
9001b1ee:	9a03      	ldr	r2, [sp, #12]
9001b1f0:	3b01      	subs	r3, #1
9001b1f2:	9300      	str	r3, [sp, #0]
9001b1f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b1f6:	bf08      	it	eq
9001b1f8:	4613      	moveq	r3, r2
9001b1fa:	e72f      	b.n	9001b05c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b1fc:	140f      	asrs	r7, r1, #16
9001b1fe:	d451      	bmi.n	9001b2a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b200:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b204:	42bd      	cmp	r5, r7
9001b206:	dd4d      	ble.n	9001b2a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b208:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b20c:	d44a      	bmi.n	9001b2a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b20e:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b212:	4560      	cmp	r0, ip
9001b214:	dd46      	ble.n	9001b2a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b216:	b22d      	sxth	r5, r5
9001b218:	9802      	ldr	r0, [sp, #8]
9001b21a:	fb0c 7505 	mla	r5, ip, r5, r7
9001b21e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001b222:	f06f 0501 	mvn.w	r5, #1
9001b226:	fb05 fb08 	mul.w	fp, r5, r8
9001b22a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b22e:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b232:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b236:	122f      	asrs	r7, r5, #8
9001b238:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b23c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b240:	00ed      	lsls	r5, r5, #3
9001b242:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b246:	fb17 f706 	smulbb	r7, r7, r6
9001b24a:	b2ed      	uxtb	r5, r5
9001b24c:	fb19 f906 	smulbb	r9, r9, r6
9001b250:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b254:	10c7      	asrs	r7, r0, #3
9001b256:	fb15 f506 	smulbb	r5, r5, r6
9001b25a:	00c0      	lsls	r0, r0, #3
9001b25c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b260:	fa1f fc8c 	uxth.w	ip, ip
9001b264:	b2c0      	uxtb	r0, r0
9001b266:	fb07 970a 	mla	r7, r7, sl, r9
9001b26a:	fb00 500a 	mla	r0, r0, sl, r5
9001b26e:	f10c 0501 	add.w	r5, ip, #1
9001b272:	b2bf      	uxth	r7, r7
9001b274:	b280      	uxth	r0, r0
9001b276:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b27a:	f107 0901 	add.w	r9, r7, #1
9001b27e:	1c45      	adds	r5, r0, #1
9001b280:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b284:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b288:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b28c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b290:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b294:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b298:	ea45 0c0c 	orr.w	ip, r5, ip
9001b29c:	ea4c 0c09 	orr.w	ip, ip, r9
9001b2a0:	f824 c00b 	strh.w	ip, [r4, fp]
9001b2a4:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b2a6:	f108 38ff 	add.w	r8, r8, #4294967295
9001b2aa:	4401      	add	r1, r0
9001b2ac:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b2ae:	4402      	add	r2, r0
9001b2b0:	e75e      	b.n	9001b170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001b2b2:	b005      	add	sp, #20
9001b2b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b2b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b2bc:	b085      	sub	sp, #20
9001b2be:	4693      	mov	fp, r2
9001b2c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b2c4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b2c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001b2c8:	6870      	ldr	r0, [r6, #4]
9001b2ca:	9101      	str	r1, [sp, #4]
9001b2cc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b2d0:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001b2d4:	fb00 2404 	mla	r4, r0, r4, r2
9001b2d8:	6832      	ldr	r2, [r6, #0]
9001b2da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b2de:	682a      	ldr	r2, [r5, #0]
9001b2e0:	9202      	str	r2, [sp, #8]
9001b2e2:	9a01      	ldr	r2, [sp, #4]
9001b2e4:	2a00      	cmp	r2, #0
9001b2e6:	dc03      	bgt.n	9001b2f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b2e8:	f1bb 0f00 	cmp.w	fp, #0
9001b2ec:	f340 809a 	ble.w	9001b424 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b2f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b2f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b2f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b2fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b2fc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b300:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b304:	2b00      	cmp	r3, #0
9001b306:	dd0c      	ble.n	9001b322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001b308:	1406      	asrs	r6, r0, #16
9001b30a:	d405      	bmi.n	9001b318 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b30c:	454e      	cmp	r6, r9
9001b30e:	da03      	bge.n	9001b318 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b310:	1416      	asrs	r6, r2, #16
9001b312:	d401      	bmi.n	9001b318 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b314:	4546      	cmp	r6, r8
9001b316:	db05      	blt.n	9001b324 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b318:	4470      	add	r0, lr
9001b31a:	4462      	add	r2, ip
9001b31c:	3b01      	subs	r3, #1
9001b31e:	3402      	adds	r4, #2
9001b320:	e7f0      	b.n	9001b304 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b322:	d00f      	beq.n	9001b344 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001b324:	1e5e      	subs	r6, r3, #1
9001b326:	fb0e 0706 	mla	r7, lr, r6, r0
9001b32a:	143f      	asrs	r7, r7, #16
9001b32c:	d541      	bpl.n	9001b3b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001b32e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b332:	4698      	mov	r8, r3
9001b334:	9603      	str	r6, [sp, #12]
9001b336:	f1b8 0f00 	cmp.w	r8, #0
9001b33a:	dc56      	bgt.n	9001b3ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001b33c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b340:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b344:	9b01      	ldr	r3, [sp, #4]
9001b346:	2b00      	cmp	r3, #0
9001b348:	dd6c      	ble.n	9001b424 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b34a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b34e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b350:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b354:	eeb0 6a62 	vmov.f32	s12, s5
9001b358:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b35c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b360:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b364:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b368:	eeb0 6a43 	vmov.f32	s12, s6
9001b36c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b370:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b374:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b378:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b37c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b380:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b384:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b388:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b38c:	ee12 2a90 	vmov	r2, s5
9001b390:	eef0 2a47 	vmov.f32	s5, s14
9001b394:	fb92 fef3 	sdiv	lr, r2, r3
9001b398:	ee13 2a10 	vmov	r2, s6
9001b39c:	eeb0 3a67 	vmov.f32	s6, s15
9001b3a0:	fb92 fcf3 	sdiv	ip, r2, r3
9001b3a4:	9b01      	ldr	r3, [sp, #4]
9001b3a6:	3b01      	subs	r3, #1
9001b3a8:	9301      	str	r3, [sp, #4]
9001b3aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b3ac:	bf08      	it	eq
9001b3ae:	465b      	moveq	r3, fp
9001b3b0:	e797      	b.n	9001b2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b3b2:	454f      	cmp	r7, r9
9001b3b4:	dabb      	bge.n	9001b32e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b3b6:	fb0c 2606 	mla	r6, ip, r6, r2
9001b3ba:	1436      	asrs	r6, r6, #16
9001b3bc:	d4b7      	bmi.n	9001b32e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b3be:	4546      	cmp	r6, r8
9001b3c0:	dab5      	bge.n	9001b32e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b3c2:	461e      	mov	r6, r3
9001b3c4:	46a0      	mov	r8, r4
9001b3c6:	2e00      	cmp	r6, #0
9001b3c8:	ddb8      	ble.n	9001b33c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b3ca:	1417      	asrs	r7, r2, #16
9001b3cc:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b3d0:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b3d4:	9902      	ldr	r1, [sp, #8]
9001b3d6:	4470      	add	r0, lr
9001b3d8:	4462      	add	r2, ip
9001b3da:	fb0a 9707 	mla	r7, sl, r7, r9
9001b3de:	3e01      	subs	r6, #1
9001b3e0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b3e4:	f828 7b02 	strh.w	r7, [r8], #2
9001b3e8:	e7ed      	b.n	9001b3c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001b3ea:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b3ee:	d414      	bmi.n	9001b41a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b3f0:	68ae      	ldr	r6, [r5, #8]
9001b3f2:	454e      	cmp	r6, r9
9001b3f4:	dd11      	ble.n	9001b41a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b3f6:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b3fa:	d40e      	bmi.n	9001b41a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b3fc:	68ef      	ldr	r7, [r5, #12]
9001b3fe:	4557      	cmp	r7, sl
9001b400:	dd0b      	ble.n	9001b41a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b402:	b236      	sxth	r6, r6
9001b404:	f06f 0101 	mvn.w	r1, #1
9001b408:	9f02      	ldr	r7, [sp, #8]
9001b40a:	fb0a 9606 	mla	r6, sl, r6, r9
9001b40e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b412:	fb01 f608 	mul.w	r6, r1, r8
9001b416:	9903      	ldr	r1, [sp, #12]
9001b418:	538f      	strh	r7, [r1, r6]
9001b41a:	4470      	add	r0, lr
9001b41c:	4462      	add	r2, ip
9001b41e:	f108 38ff 	add.w	r8, r8, #4294967295
9001b422:	e788      	b.n	9001b336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b424:	b005      	add	sp, #20
9001b426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b42a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b42a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b42e:	b087      	sub	sp, #28
9001b430:	468b      	mov	fp, r1
9001b432:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b436:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b438:	9203      	str	r2, [sp, #12]
9001b43a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b43e:	6841      	ldr	r1, [r0, #4]
9001b440:	9204      	str	r2, [sp, #16]
9001b442:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001b446:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001b44a:	fb01 2505 	mla	r5, r1, r5, r2
9001b44e:	6802      	ldr	r2, [r0, #0]
9001b450:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001b454:	f8d9 2000 	ldr.w	r2, [r9]
9001b458:	9201      	str	r2, [sp, #4]
9001b45a:	f1bb 0f00 	cmp.w	fp, #0
9001b45e:	dc03      	bgt.n	9001b468 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b460:	9a03      	ldr	r2, [sp, #12]
9001b462:	2a00      	cmp	r2, #0
9001b464:	f340 8158 	ble.w	9001b718 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b468:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b46a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001b46e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b472:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b474:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001b478:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b47c:	2b00      	cmp	r3, #0
9001b47e:	dd0e      	ble.n	9001b49e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b480:	1402      	asrs	r2, r0, #16
9001b482:	d405      	bmi.n	9001b490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b484:	42ba      	cmp	r2, r7
9001b486:	da03      	bge.n	9001b490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b488:	140a      	asrs	r2, r1, #16
9001b48a:	d401      	bmi.n	9001b490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b48c:	42b2      	cmp	r2, r6
9001b48e:	db07      	blt.n	9001b4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b490:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b492:	3b01      	subs	r3, #1
9001b494:	3502      	adds	r5, #2
9001b496:	4410      	add	r0, r2
9001b498:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b49a:	4411      	add	r1, r2
9001b49c:	e7ee      	b.n	9001b47c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b49e:	d017      	beq.n	9001b4d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b4a0:	1e5a      	subs	r2, r3, #1
9001b4a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b4a4:	fb04 0402 	mla	r4, r4, r2, r0
9001b4a8:	1424      	asrs	r4, r4, #16
9001b4aa:	d409      	bmi.n	9001b4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4ac:	42bc      	cmp	r4, r7
9001b4ae:	da07      	bge.n	9001b4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b4b2:	fb04 1202 	mla	r2, r4, r2, r1
9001b4b6:	1412      	asrs	r2, r2, #16
9001b4b8:	d402      	bmi.n	9001b4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b4ba:	42b2      	cmp	r2, r6
9001b4bc:	f2c0 80bf 	blt.w	9001b63e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b4c0:	2700      	movs	r7, #0
9001b4c2:	19da      	adds	r2, r3, r7
9001b4c4:	2a00      	cmp	r2, #0
9001b4c6:	dc3e      	bgt.n	9001b546 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b4c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b4cc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001b4d0:	f1bb 0f00 	cmp.w	fp, #0
9001b4d4:	f340 8120 	ble.w	9001b718 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b4d8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b4dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b4de:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b4e2:	f1bb 0b01 	subs.w	fp, fp, #1
9001b4e6:	eeb0 6a62 	vmov.f32	s12, s5
9001b4ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b4ee:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b4f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b4f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001b4fa:	eeb0 6a43 	vmov.f32	s12, s6
9001b4fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b502:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001b506:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b50a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b50e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b512:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b516:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b51a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b51e:	ee12 2a90 	vmov	r2, s5
9001b522:	eef0 2a47 	vmov.f32	s5, s14
9001b526:	fb92 f3f3 	sdiv	r3, r2, r3
9001b52a:	ee13 2a10 	vmov	r2, s6
9001b52e:	9313      	str	r3, [sp, #76]	; 0x4c
9001b530:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b532:	eeb0 3a67 	vmov.f32	s6, s15
9001b536:	fb92 f3f3 	sdiv	r3, r2, r3
9001b53a:	9a03      	ldr	r2, [sp, #12]
9001b53c:	9314      	str	r3, [sp, #80]	; 0x50
9001b53e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b540:	bf08      	it	eq
9001b542:	4613      	moveq	r3, r2
9001b544:	e789      	b.n	9001b45a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b546:	1406      	asrs	r6, r0, #16
9001b548:	d42d      	bmi.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b54a:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001b54e:	42b4      	cmp	r4, r6
9001b550:	dd29      	ble.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b552:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001b556:	d426      	bmi.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b558:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001b55c:	4562      	cmp	r2, ip
9001b55e:	dd22      	ble.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b560:	b224      	sxth	r4, r4
9001b562:	9a01      	ldr	r2, [sp, #4]
9001b564:	fb0c 6404 	mla	r4, ip, r4, r6
9001b568:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001b56c:	0e22      	lsrs	r2, r4, #24
9001b56e:	d01a      	beq.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b570:	9e04      	ldr	r6, [sp, #16]
9001b572:	4372      	muls	r2, r6
9001b574:	1c56      	adds	r6, r2, #1
9001b576:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001b57a:	0a26      	lsrs	r6, r4, #8
9001b57c:	1212      	asrs	r2, r2, #8
9001b57e:	9605      	str	r6, [sp, #20]
9001b580:	2aff      	cmp	r2, #255	; 0xff
9001b582:	d116      	bne.n	9001b5b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001b584:	f06f 0201 	mvn.w	r2, #1
9001b588:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b58c:	fb02 fc07 	mul.w	ip, r2, r7
9001b590:	0962      	lsrs	r2, r4, #5
9001b592:	f026 0607 	bic.w	r6, r6, #7
9001b596:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001b59a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b59e:	4316      	orrs	r6, r2
9001b5a0:	4326      	orrs	r6, r4
9001b5a2:	f825 600c 	strh.w	r6, [r5, ip]
9001b5a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b5a8:	3f01      	subs	r7, #1
9001b5aa:	4410      	add	r0, r2
9001b5ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b5ae:	4411      	add	r1, r2
9001b5b0:	e787      	b.n	9001b4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b5b2:	f06f 0601 	mvn.w	r6, #1
9001b5b6:	fa1f fa82 	uxth.w	sl, r2
9001b5ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001b5be:	43d2      	mvns	r2, r2
9001b5c0:	437e      	muls	r6, r7
9001b5c2:	b2e4      	uxtb	r4, r4
9001b5c4:	fb1c fc0a 	smulbb	ip, ip, sl
9001b5c8:	b2d2      	uxtb	r2, r2
9001b5ca:	f835 8006 	ldrh.w	r8, [r5, r6]
9001b5ce:	fb14 f40a 	smulbb	r4, r4, sl
9001b5d2:	9602      	str	r6, [sp, #8]
9001b5d4:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001b5d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001b5dc:	fb16 f60a 	smulbb	r6, r6, sl
9001b5e0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b5e4:	fb0e ce02 	mla	lr, lr, r2, ip
9001b5e8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001b5ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b5f0:	fa1f fe8e 	uxth.w	lr, lr
9001b5f4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001b5f8:	fa5f f888 	uxtb.w	r8, r8
9001b5fc:	fb0c 6c02 	mla	ip, ip, r2, r6
9001b600:	fb08 4402 	mla	r4, r8, r2, r4
9001b604:	f10e 0201 	add.w	r2, lr, #1
9001b608:	fa1f fc8c 	uxth.w	ip, ip
9001b60c:	b2a4      	uxth	r4, r4
9001b60e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001b612:	9a02      	ldr	r2, [sp, #8]
9001b614:	1c66      	adds	r6, r4, #1
9001b616:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001b61a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001b61e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b622:	ea46 0e0e 	orr.w	lr, r6, lr
9001b626:	f10c 0601 	add.w	r6, ip, #1
9001b62a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001b62e:	0976      	lsrs	r6, r6, #5
9001b630:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001b634:	ea4e 0e06 	orr.w	lr, lr, r6
9001b638:	f825 e002 	strh.w	lr, [r5, r2]
9001b63c:	e7b3      	b.n	9001b5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b63e:	f04f 0800 	mov.w	r8, #0
9001b642:	eba3 0208 	sub.w	r2, r3, r8
9001b646:	2a00      	cmp	r2, #0
9001b648:	f77f af3e 	ble.w	9001b4c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b64c:	1404      	asrs	r4, r0, #16
9001b64e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001b652:	140a      	asrs	r2, r1, #16
9001b654:	fb06 4202 	mla	r2, r6, r2, r4
9001b658:	9c01      	ldr	r4, [sp, #4]
9001b65a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001b65e:	0e22      	lsrs	r2, r4, #24
9001b660:	d015      	beq.n	9001b68e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001b662:	9e04      	ldr	r6, [sp, #16]
9001b664:	4372      	muls	r2, r6
9001b666:	1c56      	adds	r6, r2, #1
9001b668:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001b66c:	0a26      	lsrs	r6, r4, #8
9001b66e:	1212      	asrs	r2, r2, #8
9001b670:	2aff      	cmp	r2, #255	; 0xff
9001b672:	d113      	bne.n	9001b69c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001b674:	0962      	lsrs	r2, r4, #5
9001b676:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b67a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001b67e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b682:	f026 0607 	bic.w	r6, r6, #7
9001b686:	4316      	orrs	r6, r2
9001b688:	4326      	orrs	r6, r4
9001b68a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001b68e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b690:	f108 0801 	add.w	r8, r8, #1
9001b694:	4410      	add	r0, r2
9001b696:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b698:	4411      	add	r1, r2
9001b69a:	e7d2      	b.n	9001b642 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001b69c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001b6a0:	fa1f fa82 	uxth.w	sl, r2
9001b6a4:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001b6a8:	43d2      	mvns	r2, r2
9001b6aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b6ae:	fb17 f70a 	smulbb	r7, r7, sl
9001b6b2:	b2d2      	uxtb	r2, r2
9001b6b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b6b8:	b2e4      	uxtb	r4, r4
9001b6ba:	b2f6      	uxtb	r6, r6
9001b6bc:	fb0c 7c02 	mla	ip, ip, r2, r7
9001b6c0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b6c4:	fb14 f40a 	smulbb	r4, r4, sl
9001b6c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b6cc:	fa1f fc8c 	uxth.w	ip, ip
9001b6d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b6d4:	fb16 f60a 	smulbb	r6, r6, sl
9001b6d8:	fa5f fe8e 	uxtb.w	lr, lr
9001b6dc:	fb0e 4402 	mla	r4, lr, r2, r4
9001b6e0:	fb07 6702 	mla	r7, r7, r2, r6
9001b6e4:	f10c 0201 	add.w	r2, ip, #1
9001b6e8:	b2a4      	uxth	r4, r4
9001b6ea:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001b6ee:	1c66      	adds	r6, r4, #1
9001b6f0:	b2bf      	uxth	r7, r7
9001b6f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b6f6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001b6fa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b6fe:	ea46 0c0c 	orr.w	ip, r6, ip
9001b702:	1c7e      	adds	r6, r7, #1
9001b704:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001b708:	0976      	lsrs	r6, r6, #5
9001b70a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001b70e:	ea4c 0c06 	orr.w	ip, ip, r6
9001b712:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001b716:	e7ba      	b.n	9001b68e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001b718:	b007      	add	sp, #28
9001b71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001b720 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b724:	b085      	sub	sp, #20
9001b726:	468b      	mov	fp, r1
9001b728:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b72c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b72e:	9203      	str	r2, [sp, #12]
9001b730:	6841      	ldr	r1, [r0, #4]
9001b732:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001b736:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b73a:	fb01 2404 	mla	r4, r1, r4, r2
9001b73e:	6802      	ldr	r2, [r0, #0]
9001b740:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b744:	f8d8 2000 	ldr.w	r2, [r8]
9001b748:	9201      	str	r2, [sp, #4]
9001b74a:	f1bb 0f00 	cmp.w	fp, #0
9001b74e:	dc03      	bgt.n	9001b758 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b750:	9a03      	ldr	r2, [sp, #12]
9001b752:	2a00      	cmp	r2, #0
9001b754:	f340 814f 	ble.w	9001b9f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001b758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b75a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b75e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b762:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b764:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b768:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b76c:	2b00      	cmp	r3, #0
9001b76e:	dd0e      	ble.n	9001b78e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b770:	1408      	asrs	r0, r1, #16
9001b772:	d405      	bmi.n	9001b780 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b774:	42b8      	cmp	r0, r7
9001b776:	da03      	bge.n	9001b780 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b778:	1410      	asrs	r0, r2, #16
9001b77a:	d401      	bmi.n	9001b780 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b77c:	42b0      	cmp	r0, r6
9001b77e:	db07      	blt.n	9001b790 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b780:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b782:	3b01      	subs	r3, #1
9001b784:	3402      	adds	r4, #2
9001b786:	4401      	add	r1, r0
9001b788:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b78a:	4402      	add	r2, r0
9001b78c:	e7ee      	b.n	9001b76c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b78e:	d017      	beq.n	9001b7c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b790:	1e58      	subs	r0, r3, #1
9001b792:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b794:	fb05 1500 	mla	r5, r5, r0, r1
9001b798:	142d      	asrs	r5, r5, #16
9001b79a:	d409      	bmi.n	9001b7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b79c:	42bd      	cmp	r5, r7
9001b79e:	da07      	bge.n	9001b7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b7a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b7a2:	fb05 2000 	mla	r0, r5, r0, r2
9001b7a6:	1400      	asrs	r0, r0, #16
9001b7a8:	d402      	bmi.n	9001b7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b7aa:	42b0      	cmp	r0, r6
9001b7ac:	f2c0 80ba 	blt.w	9001b924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001b7b0:	2600      	movs	r6, #0
9001b7b2:	1998      	adds	r0, r3, r6
9001b7b4:	2800      	cmp	r0, #0
9001b7b6:	dc3e      	bgt.n	9001b836 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001b7b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b7bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b7c0:	f1bb 0f00 	cmp.w	fp, #0
9001b7c4:	f340 8117 	ble.w	9001b9f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001b7c8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b7cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b7ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b7d2:	f1bb 0b01 	subs.w	fp, fp, #1
9001b7d6:	eeb0 6a62 	vmov.f32	s12, s5
9001b7da:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7de:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b7ea:	eeb0 6a43 	vmov.f32	s12, s6
9001b7ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b7f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7fa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7fe:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b802:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b806:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b80a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b80e:	ee12 2a90 	vmov	r2, s5
9001b812:	eef0 2a47 	vmov.f32	s5, s14
9001b816:	fb92 f3f3 	sdiv	r3, r2, r3
9001b81a:	ee13 2a10 	vmov	r2, s6
9001b81e:	9311      	str	r3, [sp, #68]	; 0x44
9001b820:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b822:	eeb0 3a67 	vmov.f32	s6, s15
9001b826:	fb92 f3f3 	sdiv	r3, r2, r3
9001b82a:	9a03      	ldr	r2, [sp, #12]
9001b82c:	9312      	str	r3, [sp, #72]	; 0x48
9001b82e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b830:	bf08      	it	eq
9001b832:	4613      	moveq	r3, r2
9001b834:	e789      	b.n	9001b74a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b836:	140f      	asrs	r7, r1, #16
9001b838:	d424      	bmi.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b83a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b83e:	42bd      	cmp	r5, r7
9001b840:	dd20      	ble.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b842:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b846:	d41d      	bmi.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b848:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001b84c:	4560      	cmp	r0, ip
9001b84e:	dd19      	ble.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b850:	b22d      	sxth	r5, r5
9001b852:	9801      	ldr	r0, [sp, #4]
9001b854:	fb0c 7505 	mla	r5, ip, r5, r7
9001b858:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001b85c:	0e07      	lsrs	r7, r0, #24
9001b85e:	2fff      	cmp	r7, #255	; 0xff
9001b860:	d116      	bne.n	9001b890 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b862:	f06f 0501 	mvn.w	r5, #1
9001b866:	fb05 f706 	mul.w	r7, r5, r6
9001b86a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001b86e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b872:	0945      	lsrs	r5, r0, #5
9001b874:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b87c:	ea4c 0505 	orr.w	r5, ip, r5
9001b880:	4305      	orrs	r5, r0
9001b882:	53e5      	strh	r5, [r4, r7]
9001b884:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b886:	3e01      	subs	r6, #1
9001b888:	4401      	add	r1, r0
9001b88a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b88c:	4402      	add	r2, r0
9001b88e:	e790      	b.n	9001b7b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b890:	b2fd      	uxtb	r5, r7
9001b892:	2f00      	cmp	r7, #0
9001b894:	d0f6      	beq.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b896:	f06f 0701 	mvn.w	r7, #1
9001b89a:	fa1f f985 	uxth.w	r9, r5
9001b89e:	43ed      	mvns	r5, r5
9001b8a0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b8a4:	4377      	muls	r7, r6
9001b8a6:	fb1a fa09 	smulbb	sl, sl, r9
9001b8aa:	b2ed      	uxtb	r5, r5
9001b8ac:	f834 e007 	ldrh.w	lr, [r4, r7]
9001b8b0:	9702      	str	r7, [sp, #8]
9001b8b2:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b8b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b8ba:	fb17 f709 	smulbb	r7, r7, r9
9001b8be:	b2c0      	uxtb	r0, r0
9001b8c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b8c4:	fb10 f009 	smulbb	r0, r0, r9
9001b8c8:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b8cc:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b8d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b8d4:	fa1f fc8c 	uxth.w	ip, ip
9001b8d8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b8dc:	fa5f fe8e 	uxtb.w	lr, lr
9001b8e0:	fb07 a705 	mla	r7, r7, r5, sl
9001b8e4:	fb0e 0005 	mla	r0, lr, r5, r0
9001b8e8:	f10c 0501 	add.w	r5, ip, #1
9001b8ec:	b2bf      	uxth	r7, r7
9001b8ee:	b280      	uxth	r0, r0
9001b8f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b8f4:	f100 0a01 	add.w	sl, r0, #1
9001b8f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b8fc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b900:	9802      	ldr	r0, [sp, #8]
9001b902:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b906:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b90a:	f107 0a01 	add.w	sl, r7, #1
9001b90e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b912:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b916:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b91a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b91e:	f824 c000 	strh.w	ip, [r4, r0]
9001b922:	e7af      	b.n	9001b884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b924:	f04f 0e00 	mov.w	lr, #0
9001b928:	eba3 000e 	sub.w	r0, r3, lr
9001b92c:	2800      	cmp	r0, #0
9001b92e:	f77f af43 	ble.w	9001b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b932:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b936:	140d      	asrs	r5, r1, #16
9001b938:	1410      	asrs	r0, r2, #16
9001b93a:	fb06 5000 	mla	r0, r6, r0, r5
9001b93e:	9d01      	ldr	r5, [sp, #4]
9001b940:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b944:	0e2e      	lsrs	r6, r5, #24
9001b946:	2eff      	cmp	r6, #255	; 0xff
9001b948:	d112      	bne.n	9001b970 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001b94a:	482c      	ldr	r0, [pc, #176]	; (9001b9fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001b94c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b950:	0968      	lsrs	r0, r5, #5
9001b952:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b956:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b95a:	4330      	orrs	r0, r6
9001b95c:	4328      	orrs	r0, r5
9001b95e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001b962:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b964:	f10e 0e01 	add.w	lr, lr, #1
9001b968:	4401      	add	r1, r0
9001b96a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b96c:	4402      	add	r2, r0
9001b96e:	e7db      	b.n	9001b928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001b970:	b2f0      	uxtb	r0, r6
9001b972:	2e00      	cmp	r6, #0
9001b974:	d0f5      	beq.n	9001b962 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b976:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001b97a:	fa1f f980 	uxth.w	r9, r0
9001b97e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b982:	43c0      	mvns	r0, r0
9001b984:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b988:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b98c:	fb16 f609 	smulbb	r6, r6, r9
9001b990:	b2c0      	uxtb	r0, r0
9001b992:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b996:	b2ed      	uxtb	r5, r5
9001b998:	fb1a fa09 	smulbb	sl, sl, r9
9001b99c:	fb07 6700 	mla	r7, r7, r0, r6
9001b9a0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b9a4:	fb15 f509 	smulbb	r5, r5, r9
9001b9a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b9ac:	b2bf      	uxth	r7, r7
9001b9ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b9b2:	fa5f fc8c 	uxtb.w	ip, ip
9001b9b6:	fb06 a600 	mla	r6, r6, r0, sl
9001b9ba:	fb0c 5500 	mla	r5, ip, r0, r5
9001b9be:	1c78      	adds	r0, r7, #1
9001b9c0:	b2b6      	uxth	r6, r6
9001b9c2:	b2ad      	uxth	r5, r5
9001b9c4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b9c8:	f105 0a01 	add.w	sl, r5, #1
9001b9cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001b9d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b9d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b9d8:	ea4a 0707 	orr.w	r7, sl, r7
9001b9dc:	f106 0a01 	add.w	sl, r6, #1
9001b9e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b9e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b9e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b9ec:	ea47 070a 	orr.w	r7, r7, sl
9001b9f0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001b9f4:	e7b5      	b.n	9001b962 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b9f6:	b005      	add	sp, #20
9001b9f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b9fc:	fffff800 	.word	0xfffff800

9001ba00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ba00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba04:	b087      	sub	sp, #28
9001ba06:	468b      	mov	fp, r1
9001ba08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ba0c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001ba0e:	9203      	str	r2, [sp, #12]
9001ba10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001ba14:	6841      	ldr	r1, [r0, #4]
9001ba16:	9204      	str	r2, [sp, #16]
9001ba18:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001ba1c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001ba20:	fb01 2404 	mla	r4, r1, r4, r2
9001ba24:	6802      	ldr	r2, [r0, #0]
9001ba26:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ba2a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001ba2e:	3201      	adds	r2, #1
9001ba30:	f022 0201 	bic.w	r2, r2, #1
9001ba34:	9200      	str	r2, [sp, #0]
9001ba36:	f8d9 2000 	ldr.w	r2, [r9]
9001ba3a:	9201      	str	r2, [sp, #4]
9001ba3c:	f1bb 0f00 	cmp.w	fp, #0
9001ba40:	dc03      	bgt.n	9001ba4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ba42:	9a03      	ldr	r2, [sp, #12]
9001ba44:	2a00      	cmp	r2, #0
9001ba46:	f340 816a 	ble.w	9001bd1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001ba4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001ba4c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001ba50:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001ba54:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ba56:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ba5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ba5e:	2b00      	cmp	r3, #0
9001ba60:	dd0e      	ble.n	9001ba80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ba62:	1402      	asrs	r2, r0, #16
9001ba64:	d405      	bmi.n	9001ba72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ba66:	42ba      	cmp	r2, r7
9001ba68:	da03      	bge.n	9001ba72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ba6a:	140a      	asrs	r2, r1, #16
9001ba6c:	d401      	bmi.n	9001ba72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ba6e:	42b2      	cmp	r2, r6
9001ba70:	db07      	blt.n	9001ba82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001ba72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ba74:	3b01      	subs	r3, #1
9001ba76:	3402      	adds	r4, #2
9001ba78:	4410      	add	r0, r2
9001ba7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ba7c:	4411      	add	r1, r2
9001ba7e:	e7ee      	b.n	9001ba5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001ba80:	d017      	beq.n	9001bab2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ba82:	1e5a      	subs	r2, r3, #1
9001ba84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ba86:	fb05 0502 	mla	r5, r5, r2, r0
9001ba8a:	142d      	asrs	r5, r5, #16
9001ba8c:	d409      	bmi.n	9001baa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ba8e:	42bd      	cmp	r5, r7
9001ba90:	da07      	bge.n	9001baa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ba92:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ba94:	fb05 1202 	mla	r2, r5, r2, r1
9001ba98:	1412      	asrs	r2, r2, #16
9001ba9a:	d402      	bmi.n	9001baa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ba9c:	42b2      	cmp	r2, r6
9001ba9e:	f2c0 80c8 	blt.w	9001bc32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001baa2:	2700      	movs	r7, #0
9001baa4:	19da      	adds	r2, r3, r7
9001baa6:	2a00      	cmp	r2, #0
9001baa8:	dc3e      	bgt.n	9001bb28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001baaa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001baae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bab2:	f1bb 0f00 	cmp.w	fp, #0
9001bab6:	f340 8132 	ble.w	9001bd1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001baba:	ee30 0a04 	vadd.f32	s0, s0, s8
9001babe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bac0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bac4:	f1bb 0b01 	subs.w	fp, fp, #1
9001bac8:	eeb0 6a62 	vmov.f32	s12, s5
9001bacc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bad0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bad4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bad8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001badc:	eeb0 6a43 	vmov.f32	s12, s6
9001bae0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bae4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001bae8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001baec:	ee61 7a27 	vmul.f32	s15, s2, s15
9001baf0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001baf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001baf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bafc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bb00:	ee12 2a90 	vmov	r2, s5
9001bb04:	eef0 2a47 	vmov.f32	s5, s14
9001bb08:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb0c:	ee13 2a10 	vmov	r2, s6
9001bb10:	9313      	str	r3, [sp, #76]	; 0x4c
9001bb12:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bb14:	eeb0 3a67 	vmov.f32	s6, s15
9001bb18:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb1c:	9a03      	ldr	r2, [sp, #12]
9001bb1e:	9314      	str	r3, [sp, #80]	; 0x50
9001bb20:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bb22:	bf08      	it	eq
9001bb24:	4613      	moveq	r3, r2
9001bb26:	e789      	b.n	9001ba3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bb28:	1405      	asrs	r5, r0, #16
9001bb2a:	d436      	bmi.n	9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bb2c:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001bb30:	42aa      	cmp	r2, r5
9001bb32:	dd32      	ble.n	9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bb34:	140e      	asrs	r6, r1, #16
9001bb36:	d430      	bmi.n	9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bb38:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001bb3c:	42b2      	cmp	r2, r6
9001bb3e:	dd2c      	ble.n	9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bb40:	9a00      	ldr	r2, [sp, #0]
9001bb42:	fb06 5502 	mla	r5, r6, r2, r5
9001bb46:	9e01      	ldr	r6, [sp, #4]
9001bb48:	086a      	lsrs	r2, r5, #1
9001bb4a:	5cb2      	ldrb	r2, [r6, r2]
9001bb4c:	07ee      	lsls	r6, r5, #31
9001bb4e:	bf54      	ite	pl
9001bb50:	f002 020f 	andpl.w	r2, r2, #15
9001bb54:	1112      	asrmi	r2, r2, #4
9001bb56:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bb5a:	b2d2      	uxtb	r2, r2
9001bb5c:	b1ea      	cbz	r2, 9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bb5e:	9d04      	ldr	r5, [sp, #16]
9001bb60:	436a      	muls	r2, r5
9001bb62:	1c55      	adds	r5, r2, #1
9001bb64:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001bb68:	4d6e      	ldr	r5, [pc, #440]	; (9001bd24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001bb6a:	1212      	asrs	r2, r2, #8
9001bb6c:	682d      	ldr	r5, [r5, #0]
9001bb6e:	2aff      	cmp	r2, #255	; 0xff
9001bb70:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001bb74:	9605      	str	r6, [sp, #20]
9001bb76:	d116      	bne.n	9001bba6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001bb78:	f06f 0201 	mvn.w	r2, #1
9001bb7c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001bb80:	fb02 fc07 	mul.w	ip, r2, r7
9001bb84:	096a      	lsrs	r2, r5, #5
9001bb86:	f026 0607 	bic.w	r6, r6, #7
9001bb8a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bb8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bb92:	4316      	orrs	r6, r2
9001bb94:	432e      	orrs	r6, r5
9001bb96:	f824 600c 	strh.w	r6, [r4, ip]
9001bb9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bb9c:	3f01      	subs	r7, #1
9001bb9e:	4410      	add	r0, r2
9001bba0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bba2:	4411      	add	r1, r2
9001bba4:	e77e      	b.n	9001baa4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001bba6:	f06f 0601 	mvn.w	r6, #1
9001bbaa:	fa1f fa82 	uxth.w	sl, r2
9001bbae:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001bbb2:	43d2      	mvns	r2, r2
9001bbb4:	437e      	muls	r6, r7
9001bbb6:	b2ed      	uxtb	r5, r5
9001bbb8:	fb1c fc0a 	smulbb	ip, ip, sl
9001bbbc:	b2d2      	uxtb	r2, r2
9001bbbe:	f834 8006 	ldrh.w	r8, [r4, r6]
9001bbc2:	fb15 f50a 	smulbb	r5, r5, sl
9001bbc6:	9602      	str	r6, [sp, #8]
9001bbc8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001bbcc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001bbd0:	fb16 f60a 	smulbb	r6, r6, sl
9001bbd4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001bbd8:	fb0e ce02 	mla	lr, lr, r2, ip
9001bbdc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001bbe0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bbe4:	fa1f fe8e 	uxth.w	lr, lr
9001bbe8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001bbec:	fa5f f888 	uxtb.w	r8, r8
9001bbf0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001bbf4:	fb08 5502 	mla	r5, r8, r2, r5
9001bbf8:	f10e 0201 	add.w	r2, lr, #1
9001bbfc:	fa1f fc8c 	uxth.w	ip, ip
9001bc00:	b2ad      	uxth	r5, r5
9001bc02:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001bc06:	9a02      	ldr	r2, [sp, #8]
9001bc08:	1c6e      	adds	r6, r5, #1
9001bc0a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001bc0e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001bc12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bc16:	ea46 0e0e 	orr.w	lr, r6, lr
9001bc1a:	f10c 0601 	add.w	r6, ip, #1
9001bc1e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001bc22:	0976      	lsrs	r6, r6, #5
9001bc24:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001bc28:	ea4e 0e06 	orr.w	lr, lr, r6
9001bc2c:	f824 e002 	strh.w	lr, [r4, r2]
9001bc30:	e7b3      	b.n	9001bb9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bc32:	f04f 0800 	mov.w	r8, #0
9001bc36:	eba3 0208 	sub.w	r2, r3, r8
9001bc3a:	2a00      	cmp	r2, #0
9001bc3c:	f77f af35 	ble.w	9001baaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001bc40:	1402      	asrs	r2, r0, #16
9001bc42:	9e00      	ldr	r6, [sp, #0]
9001bc44:	140d      	asrs	r5, r1, #16
9001bc46:	fb06 2505 	mla	r5, r6, r5, r2
9001bc4a:	9e01      	ldr	r6, [sp, #4]
9001bc4c:	086a      	lsrs	r2, r5, #1
9001bc4e:	07ed      	lsls	r5, r5, #31
9001bc50:	5cb2      	ldrb	r2, [r6, r2]
9001bc52:	bf54      	ite	pl
9001bc54:	f002 020f 	andpl.w	r2, r2, #15
9001bc58:	1112      	asrmi	r2, r2, #4
9001bc5a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bc5e:	b2d2      	uxtb	r2, r2
9001bc60:	b1c2      	cbz	r2, 9001bc94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bc62:	9d04      	ldr	r5, [sp, #16]
9001bc64:	436a      	muls	r2, r5
9001bc66:	1c55      	adds	r5, r2, #1
9001bc68:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001bc6c:	4d2d      	ldr	r5, [pc, #180]	; (9001bd24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001bc6e:	1212      	asrs	r2, r2, #8
9001bc70:	682e      	ldr	r6, [r5, #0]
9001bc72:	2aff      	cmp	r2, #255	; 0xff
9001bc74:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001bc78:	d113      	bne.n	9001bca2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001bc7a:	0972      	lsrs	r2, r6, #5
9001bc7c:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001bc80:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001bc84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bc88:	f025 0507 	bic.w	r5, r5, #7
9001bc8c:	4315      	orrs	r5, r2
9001bc8e:	4335      	orrs	r5, r6
9001bc90:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001bc94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bc96:	f108 0801 	add.w	r8, r8, #1
9001bc9a:	4410      	add	r0, r2
9001bc9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bc9e:	4411      	add	r1, r2
9001bca0:	e7c9      	b.n	9001bc36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001bca2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001bca6:	fa1f fa82 	uxth.w	sl, r2
9001bcaa:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001bcae:	43d2      	mvns	r2, r2
9001bcb0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bcb4:	fb17 f70a 	smulbb	r7, r7, sl
9001bcb8:	b2d2      	uxtb	r2, r2
9001bcba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bcbe:	b2f6      	uxtb	r6, r6
9001bcc0:	b2ed      	uxtb	r5, r5
9001bcc2:	fb0c 7c02 	mla	ip, ip, r2, r7
9001bcc6:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bcca:	fb16 f60a 	smulbb	r6, r6, sl
9001bcce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bcd2:	fa1f fc8c 	uxth.w	ip, ip
9001bcd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bcda:	fb15 f50a 	smulbb	r5, r5, sl
9001bcde:	fa5f fe8e 	uxtb.w	lr, lr
9001bce2:	fb0e 6602 	mla	r6, lr, r2, r6
9001bce6:	fb07 5702 	mla	r7, r7, r2, r5
9001bcea:	f10c 0201 	add.w	r2, ip, #1
9001bcee:	b2b6      	uxth	r6, r6
9001bcf0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001bcf4:	1c75      	adds	r5, r6, #1
9001bcf6:	b2bf      	uxth	r7, r7
9001bcf8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bcfc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001bd00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bd04:	ea45 0c0c 	orr.w	ip, r5, ip
9001bd08:	1c7d      	adds	r5, r7, #1
9001bd0a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001bd0e:	096d      	lsrs	r5, r5, #5
9001bd10:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bd14:	ea4c 0c05 	orr.w	ip, ip, r5
9001bd18:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001bd1c:	e7ba      	b.n	9001bc94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bd1e:	b007      	add	sp, #28
9001bd20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bd24:	24039714 	.word	0x24039714

9001bd28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bd2c:	b087      	sub	sp, #28
9001bd2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bd32:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001c03c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001bd36:	9815      	ldr	r0, [sp, #84]	; 0x54
9001bd38:	9101      	str	r1, [sp, #4]
9001bd3a:	9205      	str	r2, [sp, #20]
9001bd3c:	6841      	ldr	r1, [r0, #4]
9001bd3e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001bd42:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001bd46:	fb01 2404 	mla	r4, r1, r4, r2
9001bd4a:	6802      	ldr	r2, [r0, #0]
9001bd4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bd50:	f8db 2008 	ldr.w	r2, [fp, #8]
9001bd54:	3201      	adds	r2, #1
9001bd56:	f022 0201 	bic.w	r2, r2, #1
9001bd5a:	9202      	str	r2, [sp, #8]
9001bd5c:	f8db 2000 	ldr.w	r2, [fp]
9001bd60:	9203      	str	r2, [sp, #12]
9001bd62:	9a01      	ldr	r2, [sp, #4]
9001bd64:	2a00      	cmp	r2, #0
9001bd66:	dc03      	bgt.n	9001bd70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001bd68:	9a05      	ldr	r2, [sp, #20]
9001bd6a:	2a00      	cmp	r2, #0
9001bd6c:	f340 8162 	ble.w	9001c034 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001bd70:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bd72:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001bd76:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bd7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bd7c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001bd80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bd84:	2b00      	cmp	r3, #0
9001bd86:	dd0e      	ble.n	9001bda6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bd88:	1402      	asrs	r2, r0, #16
9001bd8a:	d405      	bmi.n	9001bd98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bd8c:	42ba      	cmp	r2, r7
9001bd8e:	da03      	bge.n	9001bd98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bd90:	140a      	asrs	r2, r1, #16
9001bd92:	d401      	bmi.n	9001bd98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bd94:	42b2      	cmp	r2, r6
9001bd96:	db07      	blt.n	9001bda8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001bd98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bd9a:	3b01      	subs	r3, #1
9001bd9c:	3402      	adds	r4, #2
9001bd9e:	4410      	add	r0, r2
9001bda0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bda2:	4411      	add	r1, r2
9001bda4:	e7ee      	b.n	9001bd84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001bda6:	d017      	beq.n	9001bdd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001bda8:	1e5a      	subs	r2, r3, #1
9001bdaa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001bdac:	fb05 0502 	mla	r5, r5, r2, r0
9001bdb0:	142d      	asrs	r5, r5, #16
9001bdb2:	d409      	bmi.n	9001bdc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bdb4:	42bd      	cmp	r5, r7
9001bdb6:	da07      	bge.n	9001bdc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bdb8:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001bdba:	fb05 1202 	mla	r2, r5, r2, r1
9001bdbe:	1412      	asrs	r2, r2, #16
9001bdc0:	d402      	bmi.n	9001bdc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bdc2:	42b2      	cmp	r2, r6
9001bdc4:	f2c0 80c3 	blt.w	9001bf4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001bdc8:	2500      	movs	r5, #0
9001bdca:	195a      	adds	r2, r3, r5
9001bdcc:	2a00      	cmp	r2, #0
9001bdce:	dc3f      	bgt.n	9001be50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001bdd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bdd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bdd8:	9b01      	ldr	r3, [sp, #4]
9001bdda:	2b00      	cmp	r3, #0
9001bddc:	f340 812a 	ble.w	9001c034 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001bde0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bde4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bde6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bdea:	eeb0 6a62 	vmov.f32	s12, s5
9001bdee:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bdf2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bdf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bdfa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001bdfe:	eeb0 6a43 	vmov.f32	s12, s6
9001be02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001be06:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001be0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001be0e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001be12:	ee77 2a62 	vsub.f32	s5, s14, s5
9001be16:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001be1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001be1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001be22:	ee12 2a90 	vmov	r2, s5
9001be26:	eef0 2a47 	vmov.f32	s5, s14
9001be2a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be2e:	ee13 2a10 	vmov	r2, s6
9001be32:	9313      	str	r3, [sp, #76]	; 0x4c
9001be34:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001be36:	eeb0 3a67 	vmov.f32	s6, s15
9001be3a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be3e:	9314      	str	r3, [sp, #80]	; 0x50
9001be40:	9b01      	ldr	r3, [sp, #4]
9001be42:	9a05      	ldr	r2, [sp, #20]
9001be44:	3b01      	subs	r3, #1
9001be46:	9301      	str	r3, [sp, #4]
9001be48:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001be4a:	bf08      	it	eq
9001be4c:	4613      	moveq	r3, r2
9001be4e:	e788      	b.n	9001bd62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001be50:	1406      	asrs	r6, r0, #16
9001be52:	d42c      	bmi.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001be54:	f8db 2008 	ldr.w	r2, [fp, #8]
9001be58:	42b2      	cmp	r2, r6
9001be5a:	dd28      	ble.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001be5c:	140f      	asrs	r7, r1, #16
9001be5e:	d426      	bmi.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001be60:	f8db 200c 	ldr.w	r2, [fp, #12]
9001be64:	42ba      	cmp	r2, r7
9001be66:	dd22      	ble.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001be68:	9a02      	ldr	r2, [sp, #8]
9001be6a:	fb07 6602 	mla	r6, r7, r2, r6
9001be6e:	9f03      	ldr	r7, [sp, #12]
9001be70:	0872      	lsrs	r2, r6, #1
9001be72:	07f6      	lsls	r6, r6, #31
9001be74:	5cba      	ldrb	r2, [r7, r2]
9001be76:	bf54      	ite	pl
9001be78:	f002 020f 	andpl.w	r2, r2, #15
9001be7c:	1112      	asrmi	r2, r2, #4
9001be7e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001be82:	b2d2      	uxtb	r2, r2
9001be84:	2aff      	cmp	r2, #255	; 0xff
9001be86:	d118      	bne.n	9001beba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001be88:	f06f 0601 	mvn.w	r6, #1
9001be8c:	f8d8 2000 	ldr.w	r2, [r8]
9001be90:	fb06 f705 	mul.w	r7, r6, r5
9001be94:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001be98:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001be9c:	0956      	lsrs	r6, r2, #5
9001be9e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001bea2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001bea6:	ea4c 0606 	orr.w	r6, ip, r6
9001beaa:	4316      	orrs	r6, r2
9001beac:	53e6      	strh	r6, [r4, r7]
9001beae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001beb0:	3d01      	subs	r5, #1
9001beb2:	4410      	add	r0, r2
9001beb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001beb6:	4411      	add	r1, r2
9001beb8:	e787      	b.n	9001bdca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001beba:	2a00      	cmp	r2, #0
9001bebc:	d0f7      	beq.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bebe:	f06f 0601 	mvn.w	r6, #1
9001bec2:	f8d8 c000 	ldr.w	ip, [r8]
9001bec6:	fa1f f982 	uxth.w	r9, r2
9001beca:	43d2      	mvns	r2, r2
9001becc:	436e      	muls	r6, r5
9001bece:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001bed2:	b2d2      	uxtb	r2, r2
9001bed4:	f834 e006 	ldrh.w	lr, [r4, r6]
9001bed8:	fb1a fa09 	smulbb	sl, sl, r9
9001bedc:	9604      	str	r6, [sp, #16]
9001bede:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001bee2:	ea4f 272e 	mov.w	r7, lr, asr #8
9001bee6:	fb16 f609 	smulbb	r6, r6, r9
9001beea:	fa5f fc8c 	uxtb.w	ip, ip
9001beee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bef2:	fb1c fc09 	smulbb	ip, ip, r9
9001bef6:	fb07 6702 	mla	r7, r7, r2, r6
9001befa:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001befe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bf02:	b2bf      	uxth	r7, r7
9001bf04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001bf08:	fa5f fe8e 	uxtb.w	lr, lr
9001bf0c:	fb06 a602 	mla	r6, r6, r2, sl
9001bf10:	fb0e cc02 	mla	ip, lr, r2, ip
9001bf14:	1c7a      	adds	r2, r7, #1
9001bf16:	b2b6      	uxth	r6, r6
9001bf18:	fa1f fc8c 	uxth.w	ip, ip
9001bf1c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bf20:	9a04      	ldr	r2, [sp, #16]
9001bf22:	f10c 0a01 	add.w	sl, ip, #1
9001bf26:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bf2a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001bf2e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bf32:	ea4a 0707 	orr.w	r7, sl, r7
9001bf36:	f106 0a01 	add.w	sl, r6, #1
9001bf3a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bf3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bf42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001bf46:	ea47 070a 	orr.w	r7, r7, sl
9001bf4a:	52a7      	strh	r7, [r4, r2]
9001bf4c:	e7af      	b.n	9001beae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bf4e:	f04f 0e00 	mov.w	lr, #0
9001bf52:	eba3 020e 	sub.w	r2, r3, lr
9001bf56:	2a00      	cmp	r2, #0
9001bf58:	f77f af3a 	ble.w	9001bdd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bf5c:	1402      	asrs	r2, r0, #16
9001bf5e:	9e02      	ldr	r6, [sp, #8]
9001bf60:	140d      	asrs	r5, r1, #16
9001bf62:	fb06 2505 	mla	r5, r6, r5, r2
9001bf66:	9e03      	ldr	r6, [sp, #12]
9001bf68:	086a      	lsrs	r2, r5, #1
9001bf6a:	07ed      	lsls	r5, r5, #31
9001bf6c:	5cb2      	ldrb	r2, [r6, r2]
9001bf6e:	bf54      	ite	pl
9001bf70:	f002 020f 	andpl.w	r2, r2, #15
9001bf74:	1112      	asrmi	r2, r2, #4
9001bf76:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bf7a:	b2d2      	uxtb	r2, r2
9001bf7c:	2aff      	cmp	r2, #255	; 0xff
9001bf7e:	d115      	bne.n	9001bfac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001bf80:	f8d8 5000 	ldr.w	r5, [r8]
9001bf84:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001bf88:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001bf8c:	096a      	lsrs	r2, r5, #5
9001bf8e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bf92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bf96:	4332      	orrs	r2, r6
9001bf98:	432a      	orrs	r2, r5
9001bf9a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001bf9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bfa0:	f10e 0e01 	add.w	lr, lr, #1
9001bfa4:	4410      	add	r0, r2
9001bfa6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bfa8:	4411      	add	r1, r2
9001bfaa:	e7d2      	b.n	9001bf52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001bfac:	2a00      	cmp	r2, #0
9001bfae:	d0f6      	beq.n	9001bf9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001bfb0:	f8d8 7000 	ldr.w	r7, [r8]
9001bfb4:	fa1f f982 	uxth.w	r9, r2
9001bfb8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001bfbc:	43d2      	mvns	r2, r2
9001bfbe:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001bfc2:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001bfc6:	ea4f 262c 	mov.w	r6, ip, asr #8
9001bfca:	fb15 f509 	smulbb	r5, r5, r9
9001bfce:	b2d2      	uxtb	r2, r2
9001bfd0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001bfd4:	b2ff      	uxtb	r7, r7
9001bfd6:	fb1a fa09 	smulbb	sl, sl, r9
9001bfda:	fb06 5602 	mla	r6, r6, r2, r5
9001bfde:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001bfe2:	fb17 f709 	smulbb	r7, r7, r9
9001bfe6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bfea:	b2b6      	uxth	r6, r6
9001bfec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001bff0:	fa5f fc8c 	uxtb.w	ip, ip
9001bff4:	fb05 a502 	mla	r5, r5, r2, sl
9001bff8:	fb0c 7702 	mla	r7, ip, r2, r7
9001bffc:	1c72      	adds	r2, r6, #1
9001bffe:	b2ad      	uxth	r5, r5
9001c000:	b2bf      	uxth	r7, r7
9001c002:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001c006:	f107 0a01 	add.w	sl, r7, #1
9001c00a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c00e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c012:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c016:	ea4a 0606 	orr.w	r6, sl, r6
9001c01a:	f105 0a01 	add.w	sl, r5, #1
9001c01e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c022:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c026:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c02a:	ea46 060a 	orr.w	r6, r6, sl
9001c02e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001c032:	e7b4      	b.n	9001bf9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c034:	b007      	add	sp, #28
9001c036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c03a:	bf00      	nop
9001c03c:	24039714 	.word	0x24039714

9001c040 <_ZN8touchgfx8LCD16bppD1Ev>:
9001c040:	4770      	bx	lr

9001c042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001c042:	4770      	bx	lr

9001c044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001c044:	4770      	bx	lr

9001c046 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001c046:	4770      	bx	lr

9001c048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001c048:	4770      	bx	lr

9001c04a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001c04a:	4770      	bx	lr

9001c04c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001c04c:	4770      	bx	lr

9001c04e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001c04e:	4770      	bx	lr

9001c050 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c050:	4770      	bx	lr

9001c052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c052:	4770      	bx	lr

9001c054 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c054:	4770      	bx	lr

9001c056 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c056:	4770      	bx	lr

9001c058 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c058:	4770      	bx	lr

9001c05a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c05a:	4770      	bx	lr

9001c05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c05c:	4770      	bx	lr

9001c05e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c05e:	4770      	bx	lr

9001c060 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c060:	4770      	bx	lr

9001c062 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c062:	4770      	bx	lr

9001c064 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c064:	4770      	bx	lr

9001c066 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c066:	4770      	bx	lr

9001c068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c068:	4770      	bx	lr

9001c06a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c06a:	4770      	bx	lr

9001c06c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c06c:	4770      	bx	lr

9001c06e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c06e:	4770      	bx	lr

9001c070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c070:	4770      	bx	lr

9001c072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001c072:	4770      	bx	lr

9001c074 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c074:	4770      	bx	lr

9001c076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001c076:	4770      	bx	lr

9001c078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c078:	4770      	bx	lr

9001c07a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c07a:	4770      	bx	lr

9001c07c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c07c:	4770      	bx	lr

9001c07e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c07e:	4770      	bx	lr

9001c080 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001c080:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c084:	b088      	sub	sp, #32
9001c086:	4606      	mov	r6, r0
9001c088:	4688      	mov	r8, r1
9001c08a:	4691      	mov	r9, r2
9001c08c:	ac08      	add	r4, sp, #32
9001c08e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001c092:	4620      	mov	r0, r4
9001c094:	f7fd fc64 	bl	90019960 <_ZNK8touchgfx6Bitmap7getDataEv>
9001c098:	6833      	ldr	r3, [r6, #0]
9001c09a:	4605      	mov	r5, r0
9001c09c:	4620      	mov	r0, r4
9001c09e:	699f      	ldr	r7, [r3, #24]
9001c0a0:	f7fd fb72 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001c0a4:	4682      	mov	sl, r0
9001c0a6:	4620      	mov	r0, r4
9001c0a8:	f7fd fba2 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001c0ac:	9500      	str	r5, [sp, #0]
9001c0ae:	464b      	mov	r3, r9
9001c0b0:	4642      	mov	r2, r8
9001c0b2:	4631      	mov	r1, r6
9001c0b4:	e9cd a001 	strd	sl, r0, [sp, #4]
9001c0b8:	a806      	add	r0, sp, #24
9001c0ba:	47b8      	blx	r7
9001c0bc:	4628      	mov	r0, r5
9001c0be:	b008      	add	sp, #32
9001c0c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001c0c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001c0c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001c0c8:	2300      	movs	r3, #0
9001c0ca:	9300      	str	r3, [sp, #0]
9001c0cc:	4b3d      	ldr	r3, [pc, #244]	; (9001c1c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001c0ce:	781b      	ldrb	r3, [r3, #0]
9001c0d0:	2b00      	cmp	r3, #0
9001c0d2:	d137      	bne.n	9001c144 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001c0d4:	4a3c      	ldr	r2, [pc, #240]	; (9001c1c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c0d6:	f9b2 2000 	ldrsh.w	r2, [r2]
9001c0da:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c0de:	2b00      	cmp	r3, #0
9001c0e0:	d132      	bne.n	9001c148 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001c0e2:	4b3a      	ldr	r3, [pc, #232]	; (9001c1cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c0e4:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c0e8:	ac02      	add	r4, sp, #8
9001c0ea:	6808      	ldr	r0, [r1, #0]
9001c0ec:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c0f0:	ab02      	add	r3, sp, #8
9001c0f2:	6849      	ldr	r1, [r1, #4]
9001c0f4:	4d36      	ldr	r5, [pc, #216]	; (9001c1d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001c0f6:	c303      	stmia	r3!, {r0, r1}
9001c0f8:	4669      	mov	r1, sp
9001c0fa:	4620      	mov	r0, r4
9001c0fc:	f7fa f828 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c100:	4668      	mov	r0, sp
9001c102:	f7f9 ffe1 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c106:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c10a:	f8bd 2000 	ldrh.w	r2, [sp]
9001c10e:	462f      	mov	r7, r5
9001c110:	6828      	ldr	r0, [r5, #0]
9001c112:	4413      	add	r3, r2
9001c114:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c118:	f8ad 3008 	strh.w	r3, [sp, #8]
9001c11c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c120:	4413      	add	r3, r2
9001c122:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c126:	6803      	ldr	r3, [r0, #0]
9001c128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c12a:	4798      	blx	r3
9001c12c:	f010 0f01 	tst.w	r0, #1
9001c130:	d00c      	beq.n	9001c14c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001c132:	6828      	ldr	r0, [r5, #0]
9001c134:	6803      	ldr	r3, [r0, #0]
9001c136:	e894 0006 	ldmia.w	r4, {r1, r2}
9001c13a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001c13c:	4798      	blx	r3
9001c13e:	b004      	add	sp, #16
9001c140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c144:	4a21      	ldr	r2, [pc, #132]	; (9001c1cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c146:	e7c6      	b.n	9001c0d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001c148:	4b1f      	ldr	r3, [pc, #124]	; (9001c1c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c14a:	e7cb      	b.n	9001c0e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001c14c:	6838      	ldr	r0, [r7, #0]
9001c14e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001c152:	6803      	ldr	r3, [r0, #0]
9001c154:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001c158:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001c15c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c15e:	4798      	blx	r3
9001c160:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001c164:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c168:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001c16c:	fb16 3602 	smlabb	r6, r6, r2, r3
9001c170:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c174:	6838      	ldr	r0, [r7, #0]
9001c176:	6803      	ldr	r3, [r0, #0]
9001c178:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c17a:	4798      	blx	r3
9001c17c:	4a12      	ldr	r2, [pc, #72]	; (9001c1c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c17e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001c182:	8813      	ldrh	r3, [r2, #0]
9001c184:	4691      	mov	r9, r2
9001c186:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c18a:	435d      	muls	r5, r3
9001c18c:	fb03 1404 	mla	r4, r3, r4, r1
9001c190:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c194:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c198:	6838      	ldr	r0, [r7, #0]
9001c19a:	42ac      	cmp	r4, r5
9001c19c:	6803      	ldr	r3, [r0, #0]
9001c19e:	d20e      	bcs.n	9001c1be <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001c1a0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001c1a4:	4632      	mov	r2, r6
9001c1a6:	4643      	mov	r3, r8
9001c1a8:	4621      	mov	r1, r4
9001c1aa:	47d0      	blx	sl
9001c1ac:	f8b9 3000 	ldrh.w	r3, [r9]
9001c1b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c1b4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001c1b8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c1bc:	e7ec      	b.n	9001c198 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001c1be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c1c0:	4798      	blx	r3
9001c1c2:	e7bc      	b.n	9001c13e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001c1c4:	240396fc 	.word	0x240396fc
9001c1c8:	240396fe 	.word	0x240396fe
9001c1cc:	24039700 	.word	0x24039700
9001c1d0:	24039704 	.word	0x24039704

9001c1d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001c1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c1d8:	b08b      	sub	sp, #44	; 0x2c
9001c1da:	460f      	mov	r7, r1
9001c1dc:	4616      	mov	r6, r2
9001c1de:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001c1e2:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001c1e6:	f1bb 0f00 	cmp.w	fp, #0
9001c1ea:	d04a      	beq.n	9001c282 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c1ec:	6810      	ldr	r0, [r2, #0]
9001c1ee:	ad06      	add	r5, sp, #24
9001c1f0:	6851      	ldr	r1, [r2, #4]
9001c1f2:	c503      	stmia	r5!, {r0, r1}
9001c1f4:	6818      	ldr	r0, [r3, #0]
9001c1f6:	ad08      	add	r5, sp, #32
9001c1f8:	6859      	ldr	r1, [r3, #4]
9001c1fa:	c503      	stmia	r5!, {r0, r1}
9001c1fc:	a806      	add	r0, sp, #24
9001c1fe:	f7f9 ff63 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c202:	4631      	mov	r1, r6
9001c204:	a808      	add	r0, sp, #32
9001c206:	f7f9 ffa3 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c20a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001c20e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001c212:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001c216:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001c21a:	fb16 2103 	smlabb	r1, r6, r3, r2
9001c21e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001c222:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001c226:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001c22a:	4f5f      	ldr	r7, [pc, #380]	; (9001c3a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c22c:	440a      	add	r2, r1
9001c22e:	6838      	ldr	r0, [r7, #0]
9001c230:	46b9      	mov	r9, r7
9001c232:	f8ad 2020 	strh.w	r2, [sp, #32]
9001c236:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001c23a:	4413      	add	r3, r2
9001c23c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001c240:	6803      	ldr	r3, [r0, #0]
9001c242:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c244:	4798      	blx	r3
9001c246:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c24a:	d11d      	bne.n	9001c288 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001c24c:	b9fc      	cbnz	r4, 9001c28e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c24e:	f010 0f01 	tst.w	r0, #1
9001c252:	d01c      	beq.n	9001c28e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c254:	f8d9 0000 	ldr.w	r0, [r9]
9001c258:	2700      	movs	r7, #0
9001c25a:	b2ad      	uxth	r5, r5
9001c25c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001c260:	6801      	ldr	r1, [r0, #0]
9001c262:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001c266:	f8cd b00c 	str.w	fp, [sp, #12]
9001c26a:	9501      	str	r5, [sp, #4]
9001c26c:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001c270:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001c274:	9402      	str	r4, [sp, #8]
9001c276:	fa1f f488 	uxth.w	r4, r8
9001c27a:	9400      	str	r4, [sp, #0]
9001c27c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001c27e:	4631      	mov	r1, r6
9001c280:	47a0      	blx	r4
9001c282:	b00b      	add	sp, #44	; 0x2c
9001c284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c288:	f010 0f04 	tst.w	r0, #4
9001c28c:	e7e1      	b.n	9001c252 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001c28e:	f8d9 0000 	ldr.w	r0, [r9]
9001c292:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001c296:	6803      	ldr	r3, [r0, #0]
9001c298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c29a:	4798      	blx	r3
9001c29c:	4b43      	ldr	r3, [pc, #268]	; (9001c3ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001c29e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001c2a2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c2a6:	881a      	ldrh	r2, [r3, #0]
9001c2a8:	469a      	mov	sl, r3
9001c2aa:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001c2ae:	fb05 f502 	mul.w	r5, r5, r2
9001c2b2:	fb02 1404 	mla	r4, r2, r4, r1
9001c2b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c2ba:	d059      	beq.n	9001c370 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001c2bc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001c2c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c2c4:	fa1f f28b 	uxth.w	r2, fp
9001c2c8:	469e      	mov	lr, r3
9001c2ca:	fa1f f989 	uxth.w	r9, r9
9001c2ce:	42ac      	cmp	r4, r5
9001c2d0:	d264      	bcs.n	9001c39c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c2d2:	eb04 0a07 	add.w	sl, r4, r7
9001c2d6:	4554      	cmp	r4, sl
9001c2d8:	d23d      	bcs.n	9001c356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001c2da:	8821      	ldrh	r1, [r4, #0]
9001c2dc:	f836 3b02 	ldrh.w	r3, [r6], #2
9001c2e0:	1208      	asrs	r0, r1, #8
9001c2e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c2e6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c2ea:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001c2ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c2f2:	00c9      	lsls	r1, r1, #3
9001c2f4:	fb10 f009 	smulbb	r0, r0, r9
9001c2f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001c2fc:	b2c9      	uxtb	r1, r1
9001c2fe:	fb0c 0c02 	mla	ip, ip, r2, r0
9001c302:	10d8      	asrs	r0, r3, #3
9001c304:	fb1b fb09 	smulbb	fp, fp, r9
9001c308:	00db      	lsls	r3, r3, #3
9001c30a:	fa1f fc8c 	uxth.w	ip, ip
9001c30e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001c312:	fb11 f109 	smulbb	r1, r1, r9
9001c316:	b2db      	uxtb	r3, r3
9001c318:	fb00 b002 	mla	r0, r0, r2, fp
9001c31c:	f10c 0b01 	add.w	fp, ip, #1
9001c320:	fb03 1302 	mla	r3, r3, r2, r1
9001c324:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001c328:	b29b      	uxth	r3, r3
9001c32a:	b280      	uxth	r0, r0
9001c32c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001c330:	f103 0c01 	add.w	ip, r3, #1
9001c334:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001c338:	1c43      	adds	r3, r0, #1
9001c33a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001c33e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c342:	0940      	lsrs	r0, r0, #5
9001c344:	ea4c 0c0b 	orr.w	ip, ip, fp
9001c348:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c34c:	ea4c 0c00 	orr.w	ip, ip, r0
9001c350:	f824 cb02 	strh.w	ip, [r4], #2
9001c354:	e7bf      	b.n	9001c2d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001c356:	f8be 3000 	ldrh.w	r3, [lr]
9001c35a:	eba3 0308 	sub.w	r3, r3, r8
9001c35e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c362:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c366:	eba3 0308 	sub.w	r3, r3, r8
9001c36a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c36e:	e7ae      	b.n	9001c2ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001c370:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c374:	f8d9 0000 	ldr.w	r0, [r9]
9001c378:	42ac      	cmp	r4, r5
9001c37a:	6803      	ldr	r3, [r0, #0]
9001c37c:	d20e      	bcs.n	9001c39c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c37e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001c382:	4632      	mov	r2, r6
9001c384:	463b      	mov	r3, r7
9001c386:	4621      	mov	r1, r4
9001c388:	47c0      	blx	r8
9001c38a:	f8ba 3000 	ldrh.w	r3, [sl]
9001c38e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c392:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c396:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c39a:	e7eb      	b.n	9001c374 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001c39c:	4b02      	ldr	r3, [pc, #8]	; (9001c3a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c39e:	6818      	ldr	r0, [r3, #0]
9001c3a0:	6803      	ldr	r3, [r0, #0]
9001c3a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c3a4:	4798      	blx	r3
9001c3a6:	e76c      	b.n	9001c282 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c3a8:	24039704 	.word	0x24039704
9001c3ac:	240396fe 	.word	0x240396fe

9001c3b0 <_ZN8touchgfx8LCD16bppD0Ev>:
9001c3b0:	b510      	push	{r4, lr}
9001c3b2:	4604      	mov	r4, r0
9001c3b4:	2184      	movs	r1, #132	; 0x84
9001c3b6:	f00b f97b 	bl	900276b0 <_ZdlPvj>
9001c3ba:	4620      	mov	r0, r4
9001c3bc:	bd10      	pop	{r4, pc}

9001c3be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001c3be:	b510      	push	{r4, lr}
9001c3c0:	4604      	mov	r4, r0
9001c3c2:	2104      	movs	r1, #4
9001c3c4:	f00b f974 	bl	900276b0 <_ZdlPvj>
9001c3c8:	4620      	mov	r0, r4
9001c3ca:	bd10      	pop	{r4, pc}

9001c3cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001c3cc:	b510      	push	{r4, lr}
9001c3ce:	4604      	mov	r4, r0
9001c3d0:	2104      	movs	r1, #4
9001c3d2:	f00b f96d 	bl	900276b0 <_ZdlPvj>
9001c3d6:	4620      	mov	r0, r4
9001c3d8:	bd10      	pop	{r4, pc}

9001c3da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001c3da:	b510      	push	{r4, lr}
9001c3dc:	4604      	mov	r4, r0
9001c3de:	f640 0144 	movw	r1, #2116	; 0x844
9001c3e2:	f00b f965 	bl	900276b0 <_ZdlPvj>
9001c3e6:	4620      	mov	r0, r4
9001c3e8:	bd10      	pop	{r4, pc}

9001c3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c3ea:	b510      	push	{r4, lr}
9001c3ec:	4604      	mov	r4, r0
9001c3ee:	2104      	movs	r1, #4
9001c3f0:	f00b f95e 	bl	900276b0 <_ZdlPvj>
9001c3f4:	4620      	mov	r0, r4
9001c3f6:	bd10      	pop	{r4, pc}

9001c3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c3f8:	b510      	push	{r4, lr}
9001c3fa:	4604      	mov	r4, r0
9001c3fc:	2104      	movs	r1, #4
9001c3fe:	f00b f957 	bl	900276b0 <_ZdlPvj>
9001c402:	4620      	mov	r0, r4
9001c404:	bd10      	pop	{r4, pc}

9001c406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c406:	b510      	push	{r4, lr}
9001c408:	4604      	mov	r4, r0
9001c40a:	2104      	movs	r1, #4
9001c40c:	f00b f950 	bl	900276b0 <_ZdlPvj>
9001c410:	4620      	mov	r0, r4
9001c412:	bd10      	pop	{r4, pc}

9001c414 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c414:	b510      	push	{r4, lr}
9001c416:	4604      	mov	r4, r0
9001c418:	2104      	movs	r1, #4
9001c41a:	f00b f949 	bl	900276b0 <_ZdlPvj>
9001c41e:	4620      	mov	r0, r4
9001c420:	bd10      	pop	{r4, pc}

9001c422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c422:	b510      	push	{r4, lr}
9001c424:	4604      	mov	r4, r0
9001c426:	2104      	movs	r1, #4
9001c428:	f00b f942 	bl	900276b0 <_ZdlPvj>
9001c42c:	4620      	mov	r0, r4
9001c42e:	bd10      	pop	{r4, pc}

9001c430 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001c430:	b510      	push	{r4, lr}
9001c432:	4604      	mov	r4, r0
9001c434:	2104      	movs	r1, #4
9001c436:	f00b f93b 	bl	900276b0 <_ZdlPvj>
9001c43a:	4620      	mov	r0, r4
9001c43c:	bd10      	pop	{r4, pc}

9001c43e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c43e:	b510      	push	{r4, lr}
9001c440:	4604      	mov	r4, r0
9001c442:	2104      	movs	r1, #4
9001c444:	f00b f934 	bl	900276b0 <_ZdlPvj>
9001c448:	4620      	mov	r0, r4
9001c44a:	bd10      	pop	{r4, pc}

9001c44c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001c44c:	b510      	push	{r4, lr}
9001c44e:	4604      	mov	r4, r0
9001c450:	2104      	movs	r1, #4
9001c452:	f00b f92d 	bl	900276b0 <_ZdlPvj>
9001c456:	4620      	mov	r0, r4
9001c458:	bd10      	pop	{r4, pc}

9001c45a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c45a:	b510      	push	{r4, lr}
9001c45c:	4604      	mov	r4, r0
9001c45e:	2104      	movs	r1, #4
9001c460:	f00b f926 	bl	900276b0 <_ZdlPvj>
9001c464:	4620      	mov	r0, r4
9001c466:	bd10      	pop	{r4, pc}

9001c468 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c468:	b510      	push	{r4, lr}
9001c46a:	4604      	mov	r4, r0
9001c46c:	2104      	movs	r1, #4
9001c46e:	f00b f91f 	bl	900276b0 <_ZdlPvj>
9001c472:	4620      	mov	r0, r4
9001c474:	bd10      	pop	{r4, pc}

9001c476 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c476:	b510      	push	{r4, lr}
9001c478:	4604      	mov	r4, r0
9001c47a:	2104      	movs	r1, #4
9001c47c:	f00b f918 	bl	900276b0 <_ZdlPvj>
9001c480:	4620      	mov	r0, r4
9001c482:	bd10      	pop	{r4, pc}

9001c484 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c484:	b510      	push	{r4, lr}
9001c486:	4604      	mov	r4, r0
9001c488:	2104      	movs	r1, #4
9001c48a:	f00b f911 	bl	900276b0 <_ZdlPvj>
9001c48e:	4620      	mov	r0, r4
9001c490:	bd10      	pop	{r4, pc}

9001c492 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c492:	b510      	push	{r4, lr}
9001c494:	4604      	mov	r4, r0
9001c496:	2104      	movs	r1, #4
9001c498:	f00b f90a 	bl	900276b0 <_ZdlPvj>
9001c49c:	4620      	mov	r0, r4
9001c49e:	bd10      	pop	{r4, pc}

9001c4a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c4a0:	b510      	push	{r4, lr}
9001c4a2:	4604      	mov	r4, r0
9001c4a4:	2104      	movs	r1, #4
9001c4a6:	f00b f903 	bl	900276b0 <_ZdlPvj>
9001c4aa:	4620      	mov	r0, r4
9001c4ac:	bd10      	pop	{r4, pc}

9001c4ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c4ae:	b510      	push	{r4, lr}
9001c4b0:	4604      	mov	r4, r0
9001c4b2:	2104      	movs	r1, #4
9001c4b4:	f00b f8fc 	bl	900276b0 <_ZdlPvj>
9001c4b8:	4620      	mov	r0, r4
9001c4ba:	bd10      	pop	{r4, pc}

9001c4bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c4bc:	b510      	push	{r4, lr}
9001c4be:	4604      	mov	r4, r0
9001c4c0:	2104      	movs	r1, #4
9001c4c2:	f00b f8f5 	bl	900276b0 <_ZdlPvj>
9001c4c6:	4620      	mov	r0, r4
9001c4c8:	bd10      	pop	{r4, pc}

9001c4ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c4ca:	b510      	push	{r4, lr}
9001c4cc:	4604      	mov	r4, r0
9001c4ce:	2104      	movs	r1, #4
9001c4d0:	f00b f8ee 	bl	900276b0 <_ZdlPvj>
9001c4d4:	4620      	mov	r0, r4
9001c4d6:	bd10      	pop	{r4, pc}

9001c4d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c4d8:	b510      	push	{r4, lr}
9001c4da:	4604      	mov	r4, r0
9001c4dc:	2104      	movs	r1, #4
9001c4de:	f00b f8e7 	bl	900276b0 <_ZdlPvj>
9001c4e2:	4620      	mov	r0, r4
9001c4e4:	bd10      	pop	{r4, pc}

9001c4e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c4e6:	b510      	push	{r4, lr}
9001c4e8:	4604      	mov	r4, r0
9001c4ea:	2104      	movs	r1, #4
9001c4ec:	f00b f8e0 	bl	900276b0 <_ZdlPvj>
9001c4f0:	4620      	mov	r0, r4
9001c4f2:	bd10      	pop	{r4, pc}

9001c4f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c4f4:	b510      	push	{r4, lr}
9001c4f6:	4604      	mov	r4, r0
9001c4f8:	2104      	movs	r1, #4
9001c4fa:	f00b f8d9 	bl	900276b0 <_ZdlPvj>
9001c4fe:	4620      	mov	r0, r4
9001c500:	bd10      	pop	{r4, pc}

9001c502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c502:	b510      	push	{r4, lr}
9001c504:	4604      	mov	r4, r0
9001c506:	2104      	movs	r1, #4
9001c508:	f00b f8d2 	bl	900276b0 <_ZdlPvj>
9001c50c:	4620      	mov	r0, r4
9001c50e:	bd10      	pop	{r4, pc}

9001c510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c510:	b510      	push	{r4, lr}
9001c512:	4604      	mov	r4, r0
9001c514:	2104      	movs	r1, #4
9001c516:	f00b f8cb 	bl	900276b0 <_ZdlPvj>
9001c51a:	4620      	mov	r0, r4
9001c51c:	bd10      	pop	{r4, pc}

9001c51e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c51e:	b510      	push	{r4, lr}
9001c520:	4604      	mov	r4, r0
9001c522:	2104      	movs	r1, #4
9001c524:	f00b f8c4 	bl	900276b0 <_ZdlPvj>
9001c528:	4620      	mov	r0, r4
9001c52a:	bd10      	pop	{r4, pc}

9001c52c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c52c:	b510      	push	{r4, lr}
9001c52e:	4604      	mov	r4, r0
9001c530:	2104      	movs	r1, #4
9001c532:	f00b f8bd 	bl	900276b0 <_ZdlPvj>
9001c536:	4620      	mov	r0, r4
9001c538:	bd10      	pop	{r4, pc}

9001c53a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001c53a:	b510      	push	{r4, lr}
9001c53c:	4604      	mov	r4, r0
9001c53e:	2104      	movs	r1, #4
9001c540:	f00b f8b6 	bl	900276b0 <_ZdlPvj>
9001c544:	4620      	mov	r0, r4
9001c546:	bd10      	pop	{r4, pc}

9001c548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001c548:	b510      	push	{r4, lr}
9001c54a:	4604      	mov	r4, r0
9001c54c:	2104      	movs	r1, #4
9001c54e:	f00b f8af 	bl	900276b0 <_ZdlPvj>
9001c552:	4620      	mov	r0, r4
9001c554:	bd10      	pop	{r4, pc}

9001c556 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001c556:	b510      	push	{r4, lr}
9001c558:	4604      	mov	r4, r0
9001c55a:	2104      	movs	r1, #4
9001c55c:	f00b f8a8 	bl	900276b0 <_ZdlPvj>
9001c560:	4620      	mov	r0, r4
9001c562:	bd10      	pop	{r4, pc}

9001c564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001c564:	b510      	push	{r4, lr}
9001c566:	4604      	mov	r4, r0
9001c568:	2104      	movs	r1, #4
9001c56a:	f00b f8a1 	bl	900276b0 <_ZdlPvj>
9001c56e:	4620      	mov	r0, r4
9001c570:	bd10      	pop	{r4, pc}
	...

9001c574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c578:	b08f      	sub	sp, #60	; 0x3c
9001c57a:	461c      	mov	r4, r3
9001c57c:	9205      	str	r2, [sp, #20]
9001c57e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c582:	9100      	str	r1, [sp, #0]
9001c584:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001c586:	9201      	str	r2, [sp, #4]
9001c588:	2a00      	cmp	r2, #0
9001c58a:	f000 8116 	beq.w	9001c7ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001c58e:	6820      	ldr	r0, [r4, #0]
9001c590:	aa0a      	add	r2, sp, #40	; 0x28
9001c592:	6861      	ldr	r1, [r4, #4]
9001c594:	c203      	stmia	r2!, {r0, r1}
9001c596:	6818      	ldr	r0, [r3, #0]
9001c598:	aa0c      	add	r2, sp, #48	; 0x30
9001c59a:	6859      	ldr	r1, [r3, #4]
9001c59c:	c203      	stmia	r2!, {r0, r1}
9001c59e:	a80a      	add	r0, sp, #40	; 0x28
9001c5a0:	f7f9 fd92 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c5a4:	4621      	mov	r1, r4
9001c5a6:	a80c      	add	r0, sp, #48	; 0x30
9001c5a8:	f7f9 fdd2 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c5ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c5b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001c5b4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001c5b8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001c5bc:	bfdb      	ittet	le
9001c5be:	b2b3      	uxthle	r3, r6
9001c5c0:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001c5c4:	2301      	movgt	r3, #1
9001c5c6:	fb92 f3f3 	sdivle	r3, r2, r3
9001c5ca:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c5ce:	441d      	add	r5, r3
9001c5d0:	fb92 f1f3 	sdiv	r1, r2, r3
9001c5d4:	fa1f fc81 	uxth.w	ip, r1
9001c5d8:	3d01      	subs	r5, #1
9001c5da:	fb0c 2413 	mls	r4, ip, r3, r2
9001c5de:	4661      	mov	r1, ip
9001c5e0:	fb14 f406 	smulbb	r4, r4, r6
9001c5e4:	4404      	add	r4, r0
9001c5e6:	fb95 f5f3 	sdiv	r5, r5, r3
9001c5ea:	b2a4      	uxth	r4, r4
9001c5ec:	b131      	cbz	r1, 9001c5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001c5ee:	9b05      	ldr	r3, [sp, #20]
9001c5f0:	9900      	ldr	r1, [sp, #0]
9001c5f2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c5f6:	ba1b      	rev	r3, r3
9001c5f8:	4419      	add	r1, r3
9001c5fa:	9100      	str	r1, [sp, #0]
9001c5fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001c600:	b2ad      	uxth	r5, r5
9001c602:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001c606:	4418      	add	r0, r3
9001c608:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c60c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001c610:	00ad      	lsls	r5, r5, #2
9001c612:	441a      	add	r2, r3
9001c614:	4b6a      	ldr	r3, [pc, #424]	; (9001c7c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c616:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001c61a:	6818      	ldr	r0, [r3, #0]
9001c61c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001c620:	6803      	ldr	r3, [r0, #0]
9001c622:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c624:	4798      	blx	r3
9001c626:	4967      	ldr	r1, [pc, #412]	; (9001c7c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001c628:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c62c:	2c00      	cmp	r4, #0
9001c62e:	880b      	ldrh	r3, [r1, #0]
9001c630:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001c634:	bf0c      	ite	eq
9001c636:	46c6      	moveq	lr, r8
9001c638:	f04f 0e00 	movne.w	lr, #0
9001c63c:	9109      	str	r1, [sp, #36]	; 0x24
9001c63e:	fb03 c202 	mla	r2, r3, r2, ip
9001c642:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c646:	4373      	muls	r3, r6
9001c648:	fa1f fe8e 	uxth.w	lr, lr
9001c64c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c650:	9103      	str	r1, [sp, #12]
9001c652:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c656:	9306      	str	r3, [sp, #24]
9001c658:	1d2b      	adds	r3, r5, #4
9001c65a:	9307      	str	r3, [sp, #28]
9001c65c:	9b01      	ldr	r3, [sp, #4]
9001c65e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001c662:	2300      	movs	r3, #0
9001c664:	b292      	uxth	r2, r2
9001c666:	9302      	str	r3, [sp, #8]
9001c668:	9204      	str	r2, [sp, #16]
9001c66a:	9a06      	ldr	r2, [sp, #24]
9001c66c:	4282      	cmp	r2, r0
9001c66e:	f240 809f 	bls.w	9001c7b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001c672:	b963      	cbnz	r3, 9001c68e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c674:	9b00      	ldr	r3, [sp, #0]
9001c676:	781a      	ldrb	r2, [r3, #0]
9001c678:	0993      	lsrs	r3, r2, #6
9001c67a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001c67e:	9202      	str	r2, [sp, #8]
9001c680:	1e5a      	subs	r2, r3, #1
9001c682:	2a02      	cmp	r2, #2
9001c684:	d815      	bhi.n	9001c6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001c686:	9a00      	ldr	r2, [sp, #0]
9001c688:	b29b      	uxth	r3, r3
9001c68a:	3201      	adds	r2, #1
9001c68c:	9200      	str	r2, [sp, #0]
9001c68e:	b1b4      	cbz	r4, 9001c6be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001c690:	429c      	cmp	r4, r3
9001c692:	bf91      	iteee	ls
9001c694:	1b1c      	subls	r4, r3, r4
9001c696:	1ae4      	subhi	r4, r4, r3
9001c698:	4671      	movhi	r1, lr
9001c69a:	f04f 0a00 	movhi.w	sl, #0
9001c69e:	bf9b      	ittet	ls
9001c6a0:	fa1f fa84 	uxthls.w	sl, r4
9001c6a4:	2400      	movls	r4, #0
9001c6a6:	b2a4      	uxthhi	r4, r4
9001c6a8:	fa1f f188 	uxthls.w	r1, r8
9001c6ac:	4653      	mov	r3, sl
9001c6ae:	468e      	mov	lr, r1
9001c6b0:	e7db      	b.n	9001c66a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001c6b2:	9a00      	ldr	r2, [sp, #0]
9001c6b4:	9b00      	ldr	r3, [sp, #0]
9001c6b6:	3202      	adds	r2, #2
9001c6b8:	785b      	ldrb	r3, [r3, #1]
9001c6ba:	9200      	str	r2, [sp, #0]
9001c6bc:	e7e7      	b.n	9001c68e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c6be:	2202      	movs	r2, #2
9001c6c0:	9907      	ldr	r1, [sp, #28]
9001c6c2:	4573      	cmp	r3, lr
9001c6c4:	4615      	mov	r5, r2
9001c6c6:	9a02      	ldr	r2, [sp, #8]
9001c6c8:	bf24      	itt	cs
9001c6ca:	eba3 0a0e 	subcs.w	sl, r3, lr
9001c6ce:	46f1      	movcs	r9, lr
9001c6d0:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c6d4:	9905      	ldr	r1, [sp, #20]
9001c6d6:	bf34      	ite	cc
9001c6d8:	4699      	movcc	r9, r3
9001c6da:	fa1f fa8a 	uxthcs.w	sl, sl
9001c6de:	f831 c002 	ldrh.w	ip, [r1, r2]
9001c6e2:	bf38      	it	cc
9001c6e4:	ebae 0103 	subcc.w	r1, lr, r3
9001c6e8:	9a01      	ldr	r2, [sp, #4]
9001c6ea:	bf2e      	itee	cs
9001c6ec:	4621      	movcs	r1, r4
9001c6ee:	b289      	uxthcc	r1, r1
9001c6f0:	46a2      	movcc	sl, r4
9001c6f2:	2aff      	cmp	r2, #255	; 0xff
9001c6f4:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001c6f8:	d105      	bne.n	9001c706 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001c6fa:	4481      	add	r9, r0
9001c6fc:	4581      	cmp	r9, r0
9001c6fe:	d045      	beq.n	9001c78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c700:	f820 cb02 	strh.w	ip, [r0], #2
9001c704:	e7fa      	b.n	9001c6fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001c706:	ea4f 222c 	mov.w	r2, ip, asr #8
9001c70a:	9d03      	ldr	r5, [sp, #12]
9001c70c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001c710:	4481      	add	r9, r0
9001c712:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c716:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001c71a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001c71e:	fa5f fc8c 	uxtb.w	ip, ip
9001c722:	436a      	muls	r2, r5
9001c724:	fb0b fb05 	mul.w	fp, fp, r5
9001c728:	fb0c fc05 	mul.w	ip, ip, r5
9001c72c:	9208      	str	r2, [sp, #32]
9001c72e:	4581      	cmp	r9, r0
9001c730:	d02c      	beq.n	9001c78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c732:	8802      	ldrh	r2, [r0, #0]
9001c734:	9d04      	ldr	r5, [sp, #16]
9001c736:	1216      	asrs	r6, r2, #8
9001c738:	9f04      	ldr	r7, [sp, #16]
9001c73a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c73e:	fb16 f605 	smulbb	r6, r6, r5
9001c742:	9d08      	ldr	r5, [sp, #32]
9001c744:	442e      	add	r6, r5
9001c746:	10d5      	asrs	r5, r2, #3
9001c748:	00d2      	lsls	r2, r2, #3
9001c74a:	b2b6      	uxth	r6, r6
9001c74c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c750:	b2d2      	uxtb	r2, r2
9001c752:	fb15 f507 	smulbb	r5, r5, r7
9001c756:	fb12 f207 	smulbb	r2, r2, r7
9001c75a:	1c77      	adds	r7, r6, #1
9001c75c:	445d      	add	r5, fp
9001c75e:	4462      	add	r2, ip
9001c760:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001c764:	b2ad      	uxth	r5, r5
9001c766:	b292      	uxth	r2, r2
9001c768:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c76c:	1c57      	adds	r7, r2, #1
9001c76e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001c772:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c776:	4316      	orrs	r6, r2
9001c778:	1c6a      	adds	r2, r5, #1
9001c77a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001c77e:	096d      	lsrs	r5, r5, #5
9001c780:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c784:	432e      	orrs	r6, r5
9001c786:	f820 6b02 	strh.w	r6, [r0], #2
9001c78a:	e7d0      	b.n	9001c72e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001c78c:	4573      	cmp	r3, lr
9001c78e:	d38d      	bcc.n	9001c6ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c790:	fa1f f188 	uxth.w	r1, r8
9001c794:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001c798:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001c79a:	1a64      	subs	r4, r4, r1
9001c79c:	881b      	ldrh	r3, [r3, #0]
9001c79e:	b2a4      	uxth	r4, r4
9001c7a0:	eba3 0308 	sub.w	r3, r3, r8
9001c7a4:	2c00      	cmp	r4, #0
9001c7a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c7aa:	bf18      	it	ne
9001c7ac:	2100      	movne	r1, #0
9001c7ae:	e77d      	b.n	9001c6ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c7b0:	4b03      	ldr	r3, [pc, #12]	; (9001c7c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c7b2:	6818      	ldr	r0, [r3, #0]
9001c7b4:	6803      	ldr	r3, [r0, #0]
9001c7b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c7b8:	4798      	blx	r3
9001c7ba:	b00f      	add	sp, #60	; 0x3c
9001c7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c7c0:	24039704 	.word	0x24039704
9001c7c4:	240396fe 	.word	0x240396fe

9001c7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c7cc:	b09f      	sub	sp, #124	; 0x7c
9001c7ce:	461d      	mov	r5, r3
9001c7d0:	4604      	mov	r4, r0
9001c7d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c7d4:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001c7d8:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001c7dc:	9209      	str	r2, [sp, #36]	; 0x24
9001c7de:	2a00      	cmp	r2, #0
9001c7e0:	f000 81ed 	beq.w	9001cbbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001c7e4:	6828      	ldr	r0, [r5, #0]
9001c7e6:	aa1a      	add	r2, sp, #104	; 0x68
9001c7e8:	6869      	ldr	r1, [r5, #4]
9001c7ea:	c203      	stmia	r2!, {r0, r1}
9001c7ec:	6818      	ldr	r0, [r3, #0]
9001c7ee:	aa1c      	add	r2, sp, #112	; 0x70
9001c7f0:	6859      	ldr	r1, [r3, #4]
9001c7f2:	c203      	stmia	r2!, {r0, r1}
9001c7f4:	a81a      	add	r0, sp, #104	; 0x68
9001c7f6:	f7f9 fc67 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c7fa:	4629      	mov	r1, r5
9001c7fc:	a81c      	add	r0, sp, #112	; 0x70
9001c7fe:	f7f9 fca7 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c802:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001c806:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001c80a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001c80e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001c812:	bfdb      	ittet	le
9001c814:	b29a      	uxthle	r2, r3
9001c816:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001c81a:	2201      	movgt	r2, #1
9001c81c:	fb91 f2f2 	sdivle	r2, r1, r2
9001c820:	9202      	str	r2, [sp, #8]
9001c822:	9802      	ldr	r0, [sp, #8]
9001c824:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001c828:	9902      	ldr	r1, [sp, #8]
9001c82a:	fb92 f0f0 	sdiv	r0, r2, r0
9001c82e:	b280      	uxth	r0, r0
9001c830:	4488      	add	r8, r1
9001c832:	9010      	str	r0, [sp, #64]	; 0x40
9001c834:	f108 38ff 	add.w	r8, r8, #4294967295
9001c838:	9802      	ldr	r0, [sp, #8]
9001c83a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001c83c:	fb05 2510 	mls	r5, r5, r0, r2
9001c840:	fb98 f8f1 	sdiv	r8, r8, r1
9001c844:	fb15 f503 	smulbb	r5, r5, r3
9001c848:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001c84c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001c850:	f108 0801 	add.w	r8, r8, #1
9001c854:	440d      	add	r5, r1
9001c856:	4419      	add	r1, r3
9001c858:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001c85c:	fa1f f888 	uxth.w	r8, r8
9001c860:	441a      	add	r2, r3
9001c862:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001c866:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001c86a:	b2ad      	uxth	r5, r5
9001c86c:	9304      	str	r3, [sp, #16]
9001c86e:	4b94      	ldr	r3, [pc, #592]	; (9001cac0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001c870:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001c874:	6818      	ldr	r0, [r3, #0]
9001c876:	6803      	ldr	r3, [r0, #0]
9001c878:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c87a:	4798      	blx	r3
9001c87c:	4b91      	ldr	r3, [pc, #580]	; (9001cac4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c87e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001c882:	2d00      	cmp	r5, #0
9001c884:	881a      	ldrh	r2, [r3, #0]
9001c886:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c88a:	fb02 f606 	mul.w	r6, r2, r6
9001c88e:	fb02 7101 	mla	r1, r2, r1, r7
9001c892:	9318      	str	r3, [sp, #96]	; 0x60
9001c894:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c898:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001c89c:	f04f 0100 	mov.w	r1, #0
9001c8a0:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001c8a4:	930f      	str	r3, [sp, #60]	; 0x3c
9001c8a6:	4b88      	ldr	r3, [pc, #544]	; (9001cac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001c8a8:	920a      	str	r2, [sp, #40]	; 0x28
9001c8aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c8ac:	eba3 0304 	sub.w	r3, r3, r4
9001c8b0:	910d      	str	r1, [sp, #52]	; 0x34
9001c8b2:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001c8b6:	9319      	str	r3, [sp, #100]	; 0x64
9001c8b8:	f108 0204 	add.w	r2, r8, #4
9001c8bc:	9211      	str	r2, [sp, #68]	; 0x44
9001c8be:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c8c0:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001c8c4:	9215      	str	r2, [sp, #84]	; 0x54
9001c8c6:	9a04      	ldr	r2, [sp, #16]
9001c8c8:	bf18      	it	ne
9001c8ca:	2200      	movne	r2, #0
9001c8cc:	b292      	uxth	r2, r2
9001c8ce:	9910      	ldr	r1, [sp, #64]	; 0x40
9001c8d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c8d2:	fa11 f383 	uxtah	r3, r1, r3
9001c8d6:	9914      	ldr	r1, [sp, #80]	; 0x50
9001c8d8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c8dc:	3304      	adds	r3, #4
9001c8de:	9306      	str	r3, [sp, #24]
9001c8e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c8e2:	4283      	cmp	r3, r0
9001c8e4:	f240 8166 	bls.w	9001cbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001c8e8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001c8ec:	f04f 0a01 	mov.w	sl, #1
9001c8f0:	9902      	ldr	r1, [sp, #8]
9001c8f2:	9e06      	ldr	r6, [sp, #24]
9001c8f4:	46d3      	mov	fp, sl
9001c8f6:	4657      	mov	r7, sl
9001c8f8:	7836      	ldrb	r6, [r6, #0]
9001c8fa:	fbb5 f3f3 	udiv	r3, r5, r3
9001c8fe:	1acb      	subs	r3, r1, r3
9001c900:	9612      	str	r6, [sp, #72]	; 0x48
9001c902:	3601      	adds	r6, #1
9001c904:	b29b      	uxth	r3, r3
9001c906:	9605      	str	r6, [sp, #20]
9001c908:	9316      	str	r3, [sp, #88]	; 0x58
9001c90a:	9b06      	ldr	r3, [sp, #24]
9001c90c:	7859      	ldrb	r1, [r3, #1]
9001c90e:	789b      	ldrb	r3, [r3, #2]
9001c910:	021b      	lsls	r3, r3, #8
9001c912:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001c916:	9906      	ldr	r1, [sp, #24]
9001c918:	78c9      	ldrb	r1, [r1, #3]
9001c91a:	430b      	orrs	r3, r1
9001c91c:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001c91e:	4419      	add	r1, r3
9001c920:	1c4e      	adds	r6, r1, #1
9001c922:	7849      	ldrb	r1, [r1, #1]
9001c924:	9603      	str	r6, [sp, #12]
9001c926:	0209      	lsls	r1, r1, #8
9001c928:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c92a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001c92e:	5cf3      	ldrb	r3, [r6, r3]
9001c930:	4319      	orrs	r1, r3
9001c932:	b28b      	uxth	r3, r1
9001c934:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001c938:	930c      	str	r3, [sp, #48]	; 0x30
9001c93a:	2300      	movs	r3, #0
9001c93c:	9307      	str	r3, [sp, #28]
9001c93e:	469c      	mov	ip, r3
9001c940:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001c944:	930e      	str	r3, [sp, #56]	; 0x38
9001c946:	2d00      	cmp	r5, #0
9001c948:	d07e      	beq.n	9001ca48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001c94a:	42af      	cmp	r7, r5
9001c94c:	d26e      	bcs.n	9001ca2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001c94e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c950:	1bed      	subs	r5, r5, r7
9001c952:	9201      	str	r2, [sp, #4]
9001c954:	4283      	cmp	r3, r0
9001c956:	b2ad      	uxth	r5, r5
9001c958:	d802      	bhi.n	9001c960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001c95a:	e073      	b.n	9001ca44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001c95c:	2b00      	cmp	r3, #0
9001c95e:	d15f      	bne.n	9001ca20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001c960:	9b03      	ldr	r3, [sp, #12]
9001c962:	f1cb 0207 	rsb	r2, fp, #7
9001c966:	785b      	ldrb	r3, [r3, #1]
9001c968:	4093      	lsls	r3, r2
9001c96a:	005b      	lsls	r3, r3, #1
9001c96c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001c970:	9b03      	ldr	r3, [sp, #12]
9001c972:	781b      	ldrb	r3, [r3, #0]
9001c974:	fa43 f30b 	asr.w	r3, r3, fp
9001c978:	b2db      	uxtb	r3, r3
9001c97a:	4313      	orrs	r3, r2
9001c97c:	f10b 0201 	add.w	r2, fp, #1
9001c980:	fa5f fb82 	uxtb.w	fp, r2
9001c984:	9a03      	ldr	r2, [sp, #12]
9001c986:	b29f      	uxth	r7, r3
9001c988:	f1bb 0f08 	cmp.w	fp, #8
9001c98c:	bf13      	iteet	ne
9001c98e:	3201      	addne	r2, #1
9001c990:	3202      	addeq	r2, #2
9001c992:	f04f 0b00 	moveq.w	fp, #0
9001c996:	9203      	strne	r2, [sp, #12]
9001c998:	bf08      	it	eq
9001c99a:	9203      	streq	r2, [sp, #12]
9001c99c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c99e:	42ba      	cmp	r2, r7
9001c9a0:	d309      	bcc.n	9001c9b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001c9a2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001c9a6:	2301      	movs	r3, #1
9001c9a8:	9a05      	ldr	r2, [sp, #20]
9001c9aa:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001c9ae:	d30e      	bcc.n	9001c9ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001c9b0:	469a      	mov	sl, r3
9001c9b2:	2600      	movs	r6, #0
9001c9b4:	e035      	b.n	9001ca22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001c9b6:	9b05      	ldr	r3, [sp, #20]
9001c9b8:	429f      	cmp	r7, r3
9001c9ba:	d318      	bcc.n	9001c9ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001c9bc:	eb04 030a 	add.w	r3, r4, sl
9001c9c0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001c9c4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001c9c8:	f10a 0301 	add.w	r3, sl, #1
9001c9cc:	b29b      	uxth	r3, r3
9001c9ce:	9a05      	ldr	r2, [sp, #20]
9001c9d0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001c9d4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c9d8:	990c      	ldr	r1, [sp, #48]	; 0x30
9001c9da:	7116      	strb	r6, [r2, #4]
9001c9dc:	f10a 0601 	add.w	r6, sl, #1
9001c9e0:	80d1      	strh	r1, [r2, #6]
9001c9e2:	7156      	strb	r6, [r2, #5]
9001c9e4:	9a05      	ldr	r2, [sp, #20]
9001c9e6:	3201      	adds	r2, #1
9001c9e8:	b292      	uxth	r2, r2
9001c9ea:	9205      	str	r2, [sp, #20]
9001c9ec:	e7e0      	b.n	9001c9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001c9ee:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001c9f2:	463a      	mov	r2, r7
9001c9f4:	795b      	ldrb	r3, [r3, #5]
9001c9f6:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001c9fa:	4426      	add	r6, r4
9001c9fc:	9919      	ldr	r1, [sp, #100]	; 0x64
9001c9fe:	eb01 0c06 	add.w	ip, r1, r6
9001ca02:	f1bc 0f00 	cmp.w	ip, #0
9001ca06:	dd07      	ble.n	9001ca18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001ca08:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ca0c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001ca10:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001ca14:	88d2      	ldrh	r2, [r2, #6]
9001ca16:	e7f1      	b.n	9001c9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001ca18:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001ca1c:	b29b      	uxth	r3, r3
9001ca1e:	e7c3      	b.n	9001c9a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001ca20:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ca22:	970c      	str	r7, [sp, #48]	; 0x30
9001ca24:	46b4      	mov	ip, r6
9001ca26:	9a01      	ldr	r2, [sp, #4]
9001ca28:	461f      	mov	r7, r3
9001ca2a:	e78c      	b.n	9001c946 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001ca2c:	1b7b      	subs	r3, r7, r5
9001ca2e:	eb0c 0605 	add.w	r6, ip, r5
9001ca32:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ca36:	b29b      	uxth	r3, r3
9001ca38:	b2b6      	uxth	r6, r6
9001ca3a:	9201      	str	r2, [sp, #4]
9001ca3c:	2500      	movs	r5, #0
9001ca3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001ca40:	4282      	cmp	r2, r0
9001ca42:	d88b      	bhi.n	9001c95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001ca44:	9a01      	ldr	r2, [sp, #4]
9001ca46:	e74b      	b.n	9001c8e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001ca48:	4297      	cmp	r7, r2
9001ca4a:	d332      	bcc.n	9001cab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001ca4c:	1abb      	subs	r3, r7, r2
9001ca4e:	9208      	str	r2, [sp, #32]
9001ca50:	9501      	str	r5, [sp, #4]
9001ca52:	b29b      	uxth	r3, r3
9001ca54:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ca56:	29ff      	cmp	r1, #255	; 0xff
9001ca58:	9908      	ldr	r1, [sp, #32]
9001ca5a:	eb0c 0601 	add.w	r6, ip, r1
9001ca5e:	d135      	bne.n	9001cacc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001ca60:	f1a0 0e02 	sub.w	lr, r0, #2
9001ca64:	b2b6      	uxth	r6, r6
9001ca66:	45b4      	cmp	ip, r6
9001ca68:	f040 808c 	bne.w	9001cb84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001ca6c:	9908      	ldr	r1, [sp, #32]
9001ca6e:	4297      	cmp	r7, r2
9001ca70:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ca74:	d3e2      	bcc.n	9001ca3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001ca76:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001ca78:	9904      	ldr	r1, [sp, #16]
9001ca7a:	8812      	ldrh	r2, [r2, #0]
9001ca7c:	1a52      	subs	r2, r2, r1
9001ca7e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001ca80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ca84:	9a07      	ldr	r2, [sp, #28]
9001ca86:	3201      	adds	r2, #1
9001ca88:	428a      	cmp	r2, r1
9001ca8a:	9207      	str	r2, [sp, #28]
9001ca8c:	f040 8087 	bne.w	9001cb9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001ca90:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001ca94:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001ca98:	9b04      	ldr	r3, [sp, #16]
9001ca9a:	1bed      	subs	r5, r5, r7
9001ca9c:	b2ad      	uxth	r5, r5
9001ca9e:	2d00      	cmp	r5, #0
9001caa0:	bf08      	it	eq
9001caa2:	461a      	moveq	r2, r3
9001caa4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001caa6:	bf18      	it	ne
9001caa8:	2200      	movne	r2, #0
9001caaa:	3301      	adds	r3, #1
9001caac:	b292      	uxth	r2, r2
9001caae:	930d      	str	r3, [sp, #52]	; 0x34
9001cab0:	e70d      	b.n	9001c8ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001cab2:	1bd1      	subs	r1, r2, r7
9001cab4:	9708      	str	r7, [sp, #32]
9001cab6:	b28b      	uxth	r3, r1
9001cab8:	9301      	str	r3, [sp, #4]
9001caba:	462b      	mov	r3, r5
9001cabc:	e7ca      	b.n	9001ca54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001cabe:	bf00      	nop
9001cac0:	24039704 	.word	0x24039704
9001cac4:	240396fe 	.word	0x240396fe
9001cac8:	fffff7fb 	.word	0xfffff7fb
9001cacc:	b2b6      	uxth	r6, r6
9001cace:	900b      	str	r0, [sp, #44]	; 0x2c
9001cad0:	45b4      	cmp	ip, r6
9001cad2:	d0cb      	beq.n	9001ca6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001cad4:	f10c 0101 	add.w	r1, ip, #1
9001cad8:	44a4      	add	ip, r4
9001cada:	9117      	str	r1, [sp, #92]	; 0x5c
9001cadc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001cae0:	9911      	ldr	r1, [sp, #68]	; 0x44
9001cae2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001cae6:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001cae8:	ea4f 2825 	mov.w	r8, r5, asr #8
9001caec:	f8b1 c000 	ldrh.w	ip, [r1]
9001caf0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001caf2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001caf6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001cafa:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001cafe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001cb02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cb06:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cb0a:	fb1e fe01 	smulbb	lr, lr, r1
9001cb0e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cb10:	fa5f fc8c 	uxtb.w	ip, ip
9001cb14:	fb08 e801 	mla	r8, r8, r1, lr
9001cb18:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001cb1c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001cb1e:	00ed      	lsls	r5, r5, #3
9001cb20:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001cb24:	fa1f f888 	uxth.w	r8, r8
9001cb28:	fb19 f901 	smulbb	r9, r9, r1
9001cb2c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cb2e:	b2ed      	uxtb	r5, r5
9001cb30:	fb0e 9e01 	mla	lr, lr, r1, r9
9001cb34:	990e      	ldr	r1, [sp, #56]	; 0x38
9001cb36:	fb1c fc01 	smulbb	ip, ip, r1
9001cb3a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cb3c:	fa1f fe8e 	uxth.w	lr, lr
9001cb40:	fb05 c501 	mla	r5, r5, r1, ip
9001cb44:	f108 0c01 	add.w	ip, r8, #1
9001cb48:	f10e 0901 	add.w	r9, lr, #1
9001cb4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001cb4e:	b2ad      	uxth	r5, r5
9001cb50:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001cb54:	f105 0c01 	add.w	ip, r5, #1
9001cb58:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001cb5c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001cb60:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001cb64:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cb68:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cb6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001cb70:	ea4c 0808 	orr.w	r8, ip, r8
9001cb74:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001cb78:	ea48 0809 	orr.w	r8, r8, r9
9001cb7c:	f821 8b02 	strh.w	r8, [r1], #2
9001cb80:	910b      	str	r1, [sp, #44]	; 0x2c
9001cb82:	e7a5      	b.n	9001cad0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001cb84:	f10c 0801 	add.w	r8, ip, #1
9001cb88:	44a4      	add	ip, r4
9001cb8a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001cb8c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001cb90:	fa1f fc88 	uxth.w	ip, r8
9001cb94:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001cb98:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001cb9c:	e763      	b.n	9001ca66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001cb9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001cba2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001cba6:	1aad      	subs	r5, r5, r2
9001cba8:	b2ad      	uxth	r5, r5
9001cbaa:	2d00      	cmp	r5, #0
9001cbac:	bf18      	it	ne
9001cbae:	2200      	movne	r2, #0
9001cbb0:	9201      	str	r2, [sp, #4]
9001cbb2:	e744      	b.n	9001ca3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001cbb4:	4b03      	ldr	r3, [pc, #12]	; (9001cbc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001cbb6:	6818      	ldr	r0, [r3, #0]
9001cbb8:	6803      	ldr	r3, [r0, #0]
9001cbba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cbbc:	4798      	blx	r3
9001cbbe:	b01f      	add	sp, #124	; 0x7c
9001cbc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cbc4:	24039704 	.word	0x24039704

9001cbc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001cbc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cbcc:	b08f      	sub	sp, #60	; 0x3c
9001cbce:	461c      	mov	r4, r3
9001cbd0:	460f      	mov	r7, r1
9001cbd2:	9203      	str	r2, [sp, #12]
9001cbd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001cbd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001cbda:	9202      	str	r2, [sp, #8]
9001cbdc:	2a00      	cmp	r2, #0
9001cbde:	f000 8128 	beq.w	9001ce32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001cbe2:	6820      	ldr	r0, [r4, #0]
9001cbe4:	aa0a      	add	r2, sp, #40	; 0x28
9001cbe6:	6861      	ldr	r1, [r4, #4]
9001cbe8:	c203      	stmia	r2!, {r0, r1}
9001cbea:	6818      	ldr	r0, [r3, #0]
9001cbec:	aa0c      	add	r2, sp, #48	; 0x30
9001cbee:	6859      	ldr	r1, [r3, #4]
9001cbf0:	c203      	stmia	r2!, {r0, r1}
9001cbf2:	a80a      	add	r0, sp, #40	; 0x28
9001cbf4:	f7f9 fa68 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cbf8:	4621      	mov	r1, r4
9001cbfa:	a80c      	add	r0, sp, #48	; 0x30
9001cbfc:	f7f9 faa8 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cc00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001cc04:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001cc08:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001cc0c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001cc10:	bfdb      	ittet	le
9001cc12:	b2b3      	uxthle	r3, r6
9001cc14:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001cc18:	2301      	movgt	r3, #1
9001cc1a:	fb92 f3f3 	sdivle	r3, r2, r3
9001cc1e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001cc22:	441d      	add	r5, r3
9001cc24:	fb92 f1f3 	sdiv	r1, r2, r3
9001cc28:	fa1f fc81 	uxth.w	ip, r1
9001cc2c:	3d01      	subs	r5, #1
9001cc2e:	fb0c 2413 	mls	r4, ip, r3, r2
9001cc32:	4661      	mov	r1, ip
9001cc34:	fb14 f406 	smulbb	r4, r4, r6
9001cc38:	4404      	add	r4, r0
9001cc3a:	fb95 f5f3 	sdiv	r5, r5, r3
9001cc3e:	b2a4      	uxth	r4, r4
9001cc40:	b121      	cbz	r1, 9001cc4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001cc42:	9b03      	ldr	r3, [sp, #12]
9001cc44:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cc48:	ba1b      	rev	r3, r3
9001cc4a:	441f      	add	r7, r3
9001cc4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001cc50:	b2ad      	uxth	r5, r5
9001cc52:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001cc56:	4418      	add	r0, r3
9001cc58:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001cc5c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001cc60:	00ad      	lsls	r5, r5, #2
9001cc62:	441a      	add	r2, r3
9001cc64:	4b74      	ldr	r3, [pc, #464]	; (9001ce38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001cc66:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001cc6a:	6818      	ldr	r0, [r3, #0]
9001cc6c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001cc70:	6803      	ldr	r3, [r0, #0]
9001cc72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cc74:	4798      	blx	r3
9001cc76:	4a71      	ldr	r2, [pc, #452]	; (9001ce3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001cc78:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001cc7c:	2c00      	cmp	r4, #0
9001cc7e:	8813      	ldrh	r3, [r2, #0]
9001cc80:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001cc84:	bf0c      	ite	eq
9001cc86:	46c8      	moveq	r8, r9
9001cc88:	f04f 0800 	movne.w	r8, #0
9001cc8c:	9209      	str	r2, [sp, #36]	; 0x24
9001cc8e:	fb03 c101 	mla	r1, r3, r1, ip
9001cc92:	4373      	muls	r3, r6
9001cc94:	fa1f f888 	uxth.w	r8, r8
9001cc98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cc9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cca0:	9304      	str	r3, [sp, #16]
9001cca2:	1d2b      	adds	r3, r5, #4
9001cca4:	9305      	str	r3, [sp, #20]
9001cca6:	2300      	movs	r3, #0
9001cca8:	9301      	str	r3, [sp, #4]
9001ccaa:	9a04      	ldr	r2, [sp, #16]
9001ccac:	4282      	cmp	r2, r0
9001ccae:	f240 80bb 	bls.w	9001ce28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001ccb2:	b95b      	cbnz	r3, 9001cccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001ccb4:	783a      	ldrb	r2, [r7, #0]
9001ccb6:	0993      	lsrs	r3, r2, #6
9001ccb8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ccbc:	9201      	str	r2, [sp, #4]
9001ccbe:	1e5a      	subs	r2, r3, #1
9001ccc0:	2a02      	cmp	r2, #2
9001ccc2:	bf8d      	iteet	hi
9001ccc4:	787b      	ldrbhi	r3, [r7, #1]
9001ccc6:	3701      	addls	r7, #1
9001ccc8:	b29b      	uxthls	r3, r3
9001ccca:	3702      	addhi	r7, #2
9001cccc:	b184      	cbz	r4, 9001ccf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ccce:	429c      	cmp	r4, r3
9001ccd0:	bf91      	iteee	ls
9001ccd2:	1b1c      	subls	r4, r3, r4
9001ccd4:	1ae4      	subhi	r4, r4, r3
9001ccd6:	46c4      	movhi	ip, r8
9001ccd8:	f04f 0a00 	movhi.w	sl, #0
9001ccdc:	bf9b      	ittet	ls
9001ccde:	fa1f fa84 	uxthls.w	sl, r4
9001cce2:	2400      	movls	r4, #0
9001cce4:	b2a4      	uxthhi	r4, r4
9001cce6:	fa1f fc89 	uxthls.w	ip, r9
9001ccea:	4653      	mov	r3, sl
9001ccec:	46e0      	mov	r8, ip
9001ccee:	e7dc      	b.n	9001ccaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001ccf0:	2204      	movs	r2, #4
9001ccf2:	9905      	ldr	r1, [sp, #20]
9001ccf4:	4543      	cmp	r3, r8
9001ccf6:	4615      	mov	r5, r2
9001ccf8:	9a01      	ldr	r2, [sp, #4]
9001ccfa:	bf24      	itt	cs
9001ccfc:	eba3 0a08 	subcs.w	sl, r3, r8
9001cd00:	46c6      	movcs	lr, r8
9001cd02:	fb15 1202 	smlabb	r2, r5, r2, r1
9001cd06:	9903      	ldr	r1, [sp, #12]
9001cd08:	bf3c      	itt	cc
9001cd0a:	eba8 0c03 	subcc.w	ip, r8, r3
9001cd0e:	469e      	movcc	lr, r3
9001cd10:	588a      	ldr	r2, [r1, r2]
9001cd12:	bf26      	itte	cs
9001cd14:	fa1f fa8a 	uxthcs.w	sl, sl
9001cd18:	46a4      	movcs	ip, r4
9001cd1a:	fa1f fc8c 	uxthcc.w	ip, ip
9001cd1e:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001cd22:	bf38      	it	cc
9001cd24:	46a2      	movcc	sl, r4
9001cd26:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001cd2a:	2900      	cmp	r1, #0
9001cd2c:	d066      	beq.n	9001cdfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001cd2e:	29ff      	cmp	r1, #255	; 0xff
9001cd30:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001cd34:	d114      	bne.n	9001cd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001cd36:	9d02      	ldr	r5, [sp, #8]
9001cd38:	2dff      	cmp	r5, #255	; 0xff
9001cd3a:	d111      	bne.n	9001cd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001cd3c:	0951      	lsrs	r1, r2, #5
9001cd3e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001cd42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cd46:	4486      	add	lr, r0
9001cd48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001cd4c:	f026 0607 	bic.w	r6, r6, #7
9001cd50:	430e      	orrs	r6, r1
9001cd52:	4316      	orrs	r6, r2
9001cd54:	b2b6      	uxth	r6, r6
9001cd56:	4586      	cmp	lr, r0
9001cd58:	d051      	beq.n	9001cdfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001cd5a:	f820 6b02 	strh.w	r6, [r0], #2
9001cd5e:	e7fa      	b.n	9001cd56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001cd60:	9d02      	ldr	r5, [sp, #8]
9001cd62:	b2f6      	uxtb	r6, r6
9001cd64:	4486      	add	lr, r0
9001cd66:	4369      	muls	r1, r5
9001cd68:	1c4d      	adds	r5, r1, #1
9001cd6a:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001cd6e:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001cd72:	b2d2      	uxtb	r2, r2
9001cd74:	122d      	asrs	r5, r5, #8
9001cd76:	ea6f 0b05 	mvn.w	fp, r5
9001cd7a:	b2ad      	uxth	r5, r5
9001cd7c:	fb11 f105 	smulbb	r1, r1, r5
9001cd80:	fa5f fb8b 	uxtb.w	fp, fp
9001cd84:	fb16 f605 	smulbb	r6, r6, r5
9001cd88:	fb12 f205 	smulbb	r2, r2, r5
9001cd8c:	b289      	uxth	r1, r1
9001cd8e:	b2b6      	uxth	r6, r6
9001cd90:	b292      	uxth	r2, r2
9001cd92:	9106      	str	r1, [sp, #24]
9001cd94:	9607      	str	r6, [sp, #28]
9001cd96:	9208      	str	r2, [sp, #32]
9001cd98:	4586      	cmp	lr, r0
9001cd9a:	d030      	beq.n	9001cdfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001cd9c:	8802      	ldrh	r2, [r0, #0]
9001cd9e:	9906      	ldr	r1, [sp, #24]
9001cda0:	1216      	asrs	r6, r2, #8
9001cda2:	10d5      	asrs	r5, r2, #3
9001cda4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cda8:	00d2      	lsls	r2, r2, #3
9001cdaa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001cdae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cdb2:	b2d2      	uxtb	r2, r2
9001cdb4:	fb06 160b 	mla	r6, r6, fp, r1
9001cdb8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cdbc:	9907      	ldr	r1, [sp, #28]
9001cdbe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001cdc2:	b2b6      	uxth	r6, r6
9001cdc4:	fb05 150b 	mla	r5, r5, fp, r1
9001cdc8:	9908      	ldr	r1, [sp, #32]
9001cdca:	fb02 120b 	mla	r2, r2, fp, r1
9001cdce:	1c71      	adds	r1, r6, #1
9001cdd0:	b2ad      	uxth	r5, r5
9001cdd2:	b292      	uxth	r2, r2
9001cdd4:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001cdd8:	1c51      	adds	r1, r2, #1
9001cdda:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001cdde:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cde2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cde6:	4316      	orrs	r6, r2
9001cde8:	1c6a      	adds	r2, r5, #1
9001cdea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001cdee:	096d      	lsrs	r5, r5, #5
9001cdf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cdf4:	432e      	orrs	r6, r5
9001cdf6:	f820 6b02 	strh.w	r6, [r0], #2
9001cdfa:	e7cd      	b.n	9001cd98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001cdfc:	4470      	add	r0, lr
9001cdfe:	4543      	cmp	r3, r8
9001ce00:	f4ff af73 	bcc.w	9001ccea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ce04:	fa1f fc89 	uxth.w	ip, r9
9001ce08:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001ce0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ce0e:	eba4 040c 	sub.w	r4, r4, ip
9001ce12:	881b      	ldrh	r3, [r3, #0]
9001ce14:	b2a4      	uxth	r4, r4
9001ce16:	eba3 0309 	sub.w	r3, r3, r9
9001ce1a:	2c00      	cmp	r4, #0
9001ce1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ce20:	bf18      	it	ne
9001ce22:	f04f 0c00 	movne.w	ip, #0
9001ce26:	e760      	b.n	9001ccea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ce28:	4b03      	ldr	r3, [pc, #12]	; (9001ce38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ce2a:	6818      	ldr	r0, [r3, #0]
9001ce2c:	6803      	ldr	r3, [r0, #0]
9001ce2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ce30:	4798      	blx	r3
9001ce32:	b00f      	add	sp, #60	; 0x3c
9001ce34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ce38:	24039704 	.word	0x24039704
9001ce3c:	240396fe 	.word	0x240396fe

9001ce40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ce40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce44:	b093      	sub	sp, #76	; 0x4c
9001ce46:	461c      	mov	r4, r3
9001ce48:	9205      	str	r2, [sp, #20]
9001ce4a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001ce4e:	9101      	str	r1, [sp, #4]
9001ce50:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ce52:	9202      	str	r2, [sp, #8]
9001ce54:	2a00      	cmp	r2, #0
9001ce56:	f000 812e 	beq.w	9001d0b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ce5a:	6820      	ldr	r0, [r4, #0]
9001ce5c:	aa0e      	add	r2, sp, #56	; 0x38
9001ce5e:	6861      	ldr	r1, [r4, #4]
9001ce60:	c203      	stmia	r2!, {r0, r1}
9001ce62:	6818      	ldr	r0, [r3, #0]
9001ce64:	aa10      	add	r2, sp, #64	; 0x40
9001ce66:	6859      	ldr	r1, [r3, #4]
9001ce68:	c203      	stmia	r2!, {r0, r1}
9001ce6a:	a80e      	add	r0, sp, #56	; 0x38
9001ce6c:	f7f9 f92c 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ce70:	4621      	mov	r1, r4
9001ce72:	a810      	add	r0, sp, #64	; 0x40
9001ce74:	f7f9 f96c 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ce78:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ce7c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001ce80:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ce84:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001ce88:	bfdb      	ittet	le
9001ce8a:	b2b3      	uxthle	r3, r6
9001ce8c:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ce90:	2301      	movgt	r3, #1
9001ce92:	fb92 f3f3 	sdivle	r3, r2, r3
9001ce96:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ce9a:	441d      	add	r5, r3
9001ce9c:	fb92 f1f3 	sdiv	r1, r2, r3
9001cea0:	fa1f fc81 	uxth.w	ip, r1
9001cea4:	3d01      	subs	r5, #1
9001cea6:	fb0c 2413 	mls	r4, ip, r3, r2
9001ceaa:	4661      	mov	r1, ip
9001ceac:	fb14 f406 	smulbb	r4, r4, r6
9001ceb0:	4404      	add	r4, r0
9001ceb2:	fb95 f5f3 	sdiv	r5, r5, r3
9001ceb6:	b2a4      	uxth	r4, r4
9001ceb8:	b131      	cbz	r1, 9001cec8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001ceba:	9b05      	ldr	r3, [sp, #20]
9001cebc:	9901      	ldr	r1, [sp, #4]
9001cebe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cec2:	ba1b      	rev	r3, r3
9001cec4:	4419      	add	r1, r3
9001cec6:	9101      	str	r1, [sp, #4]
9001cec8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001cecc:	b2ad      	uxth	r5, r5
9001cece:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001ced2:	4418      	add	r0, r3
9001ced4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001ced8:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001cedc:	00ad      	lsls	r5, r5, #2
9001cede:	441a      	add	r2, r3
9001cee0:	4b76      	ldr	r3, [pc, #472]	; (9001d0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001cee2:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001cee6:	6818      	ldr	r0, [r3, #0]
9001cee8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001ceec:	6803      	ldr	r3, [r0, #0]
9001ceee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cef0:	4798      	blx	r3
9001cef2:	4973      	ldr	r1, [pc, #460]	; (9001d0c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001cef4:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001cef8:	2c00      	cmp	r4, #0
9001cefa:	880b      	ldrh	r3, [r1, #0]
9001cefc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cf00:	910d      	str	r1, [sp, #52]	; 0x34
9001cf02:	fb03 c202 	mla	r2, r3, r2, ip
9001cf06:	bf08      	it	eq
9001cf08:	46dc      	moveq	ip, fp
9001cf0a:	fb03 f306 	mul.w	r3, r3, r6
9001cf0e:	bf18      	it	ne
9001cf10:	f04f 0c00 	movne.w	ip, #0
9001cf14:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cf18:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cf1c:	fa1f fc8c 	uxth.w	ip, ip
9001cf20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cf24:	9106      	str	r1, [sp, #24]
9001cf26:	9308      	str	r3, [sp, #32]
9001cf28:	1d2b      	adds	r3, r5, #4
9001cf2a:	9309      	str	r3, [sp, #36]	; 0x24
9001cf2c:	9b02      	ldr	r3, [sp, #8]
9001cf2e:	43da      	mvns	r2, r3
9001cf30:	2300      	movs	r3, #0
9001cf32:	b2d2      	uxtb	r2, r2
9001cf34:	9303      	str	r3, [sp, #12]
9001cf36:	9207      	str	r2, [sp, #28]
9001cf38:	9a08      	ldr	r2, [sp, #32]
9001cf3a:	4282      	cmp	r2, r0
9001cf3c:	f240 80b6 	bls.w	9001d0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001cf40:	b963      	cbnz	r3, 9001cf5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001cf42:	9b01      	ldr	r3, [sp, #4]
9001cf44:	781a      	ldrb	r2, [r3, #0]
9001cf46:	0993      	lsrs	r3, r2, #6
9001cf48:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001cf4c:	9203      	str	r2, [sp, #12]
9001cf4e:	1e5a      	subs	r2, r3, #1
9001cf50:	2a02      	cmp	r2, #2
9001cf52:	d815      	bhi.n	9001cf80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001cf54:	9a01      	ldr	r2, [sp, #4]
9001cf56:	b29b      	uxth	r3, r3
9001cf58:	3201      	adds	r2, #1
9001cf5a:	9201      	str	r2, [sp, #4]
9001cf5c:	b1b4      	cbz	r4, 9001cf8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001cf5e:	429c      	cmp	r4, r3
9001cf60:	bf91      	iteee	ls
9001cf62:	1b1c      	subls	r4, r3, r4
9001cf64:	1ae4      	subhi	r4, r4, r3
9001cf66:	4666      	movhi	r6, ip
9001cf68:	f04f 0800 	movhi.w	r8, #0
9001cf6c:	bf9b      	ittet	ls
9001cf6e:	fa1f f884 	uxthls.w	r8, r4
9001cf72:	2400      	movls	r4, #0
9001cf74:	b2a4      	uxthhi	r4, r4
9001cf76:	fa1f f68b 	uxthls.w	r6, fp
9001cf7a:	4643      	mov	r3, r8
9001cf7c:	46b4      	mov	ip, r6
9001cf7e:	e7db      	b.n	9001cf38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001cf80:	9a01      	ldr	r2, [sp, #4]
9001cf82:	9b01      	ldr	r3, [sp, #4]
9001cf84:	3202      	adds	r2, #2
9001cf86:	785b      	ldrb	r3, [r3, #1]
9001cf88:	9201      	str	r2, [sp, #4]
9001cf8a:	e7e7      	b.n	9001cf5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001cf8c:	2203      	movs	r2, #3
9001cf8e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001cf90:	4563      	cmp	r3, ip
9001cf92:	4615      	mov	r5, r2
9001cf94:	9a03      	ldr	r2, [sp, #12]
9001cf96:	bf2c      	ite	cs
9001cf98:	eba3 080c 	subcs.w	r8, r3, ip
9001cf9c:	ebac 0603 	subcc.w	r6, ip, r3
9001cfa0:	fb15 1202 	smlabb	r2, r5, r2, r1
9001cfa4:	9905      	ldr	r1, [sp, #20]
9001cfa6:	bf24      	itt	cs
9001cfa8:	fa1f f888 	uxthcs.w	r8, r8
9001cfac:	46e1      	movcs	r9, ip
9001cfae:	eb01 0502 	add.w	r5, r1, r2
9001cfb2:	9902      	ldr	r1, [sp, #8]
9001cfb4:	bf2f      	iteee	cs
9001cfb6:	4626      	movcs	r6, r4
9001cfb8:	b2b6      	uxthcc	r6, r6
9001cfba:	4699      	movcc	r9, r3
9001cfbc:	46a0      	movcc	r8, r4
9001cfbe:	29ff      	cmp	r1, #255	; 0xff
9001cfc0:	d04a      	beq.n	9001d058 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001cfc2:	9f06      	ldr	r7, [sp, #24]
9001cfc4:	46ca      	mov	sl, r9
9001cfc6:	78a9      	ldrb	r1, [r5, #2]
9001cfc8:	9004      	str	r0, [sp, #16]
9001cfca:	4379      	muls	r1, r7
9001cfcc:	910a      	str	r1, [sp, #40]	; 0x28
9001cfce:	7869      	ldrb	r1, [r5, #1]
9001cfd0:	4379      	muls	r1, r7
9001cfd2:	910b      	str	r1, [sp, #44]	; 0x2c
9001cfd4:	9905      	ldr	r1, [sp, #20]
9001cfd6:	5c8a      	ldrb	r2, [r1, r2]
9001cfd8:	437a      	muls	r2, r7
9001cfda:	920c      	str	r2, [sp, #48]	; 0x30
9001cfdc:	f1ba 0f00 	cmp.w	sl, #0
9001cfe0:	d03d      	beq.n	9001d05e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001cfe2:	9a04      	ldr	r2, [sp, #16]
9001cfe4:	f10a 3aff 	add.w	sl, sl, #4294967295
9001cfe8:	9f07      	ldr	r7, [sp, #28]
9001cfea:	8812      	ldrh	r2, [r2, #0]
9001cfec:	fa1f fa8a 	uxth.w	sl, sl
9001cff0:	46be      	mov	lr, r7
9001cff2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001cff4:	1215      	asrs	r5, r2, #8
9001cff6:	10d1      	asrs	r1, r2, #3
9001cff8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001cffc:	00d2      	lsls	r2, r2, #3
9001cffe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001d002:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001d006:	b2d2      	uxtb	r2, r2
9001d008:	fb05 750e 	mla	r5, r5, lr, r7
9001d00c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d010:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001d012:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d016:	b2ad      	uxth	r5, r5
9001d018:	fb01 710e 	mla	r1, r1, lr, r7
9001d01c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001d01e:	fb02 720e 	mla	r2, r2, lr, r7
9001d022:	f105 0e01 	add.w	lr, r5, #1
9001d026:	b289      	uxth	r1, r1
9001d028:	b292      	uxth	r2, r2
9001d02a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d02e:	f102 0e01 	add.w	lr, r2, #1
9001d032:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001d036:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001d03a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d03e:	4315      	orrs	r5, r2
9001d040:	1c4a      	adds	r2, r1, #1
9001d042:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001d046:	9a04      	ldr	r2, [sp, #16]
9001d048:	0949      	lsrs	r1, r1, #5
9001d04a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001d04e:	430d      	orrs	r5, r1
9001d050:	f822 5b02 	strh.w	r5, [r2], #2
9001d054:	9204      	str	r2, [sp, #16]
9001d056:	e7c1      	b.n	9001cfdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001d058:	4649      	mov	r1, r9
9001d05a:	4686      	mov	lr, r0
9001d05c:	b999      	cbnz	r1, 9001d086 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001d05e:	4563      	cmp	r3, ip
9001d060:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001d064:	d389      	bcc.n	9001cf7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d066:	fa1f f68b 	uxth.w	r6, fp
9001d06a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001d06e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d070:	1ba4      	subs	r4, r4, r6
9001d072:	881b      	ldrh	r3, [r3, #0]
9001d074:	b2a4      	uxth	r4, r4
9001d076:	eba3 030b 	sub.w	r3, r3, fp
9001d07a:	2c00      	cmp	r4, #0
9001d07c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d080:	bf18      	it	ne
9001d082:	2600      	movne	r6, #0
9001d084:	e779      	b.n	9001cf7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d086:	78aa      	ldrb	r2, [r5, #2]
9001d088:	3901      	subs	r1, #1
9001d08a:	4f0e      	ldr	r7, [pc, #56]	; (9001d0c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001d08c:	b289      	uxth	r1, r1
9001d08e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001d092:	786a      	ldrb	r2, [r5, #1]
9001d094:	00d2      	lsls	r2, r2, #3
9001d096:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d09a:	ea4a 0202 	orr.w	r2, sl, r2
9001d09e:	f895 a000 	ldrb.w	sl, [r5]
9001d0a2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001d0a6:	f82e 2b02 	strh.w	r2, [lr], #2
9001d0aa:	e7d7      	b.n	9001d05c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001d0ac:	4b03      	ldr	r3, [pc, #12]	; (9001d0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d0ae:	6818      	ldr	r0, [r3, #0]
9001d0b0:	6803      	ldr	r3, [r0, #0]
9001d0b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d0b4:	4798      	blx	r3
9001d0b6:	b013      	add	sp, #76	; 0x4c
9001d0b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d0bc:	24039704 	.word	0x24039704
9001d0c0:	240396fe 	.word	0x240396fe
9001d0c4:	fffff800 	.word	0xfffff800

9001d0c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d0c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d0cc:	b09d      	sub	sp, #116	; 0x74
9001d0ce:	461c      	mov	r4, r3
9001d0d0:	4683      	mov	fp, r0
9001d0d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001d0d4:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001d0d8:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001d0dc:	920e      	str	r2, [sp, #56]	; 0x38
9001d0de:	2a00      	cmp	r2, #0
9001d0e0:	f000 81e4 	beq.w	9001d4ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001d0e4:	6820      	ldr	r0, [r4, #0]
9001d0e6:	aa18      	add	r2, sp, #96	; 0x60
9001d0e8:	6861      	ldr	r1, [r4, #4]
9001d0ea:	c203      	stmia	r2!, {r0, r1}
9001d0ec:	6818      	ldr	r0, [r3, #0]
9001d0ee:	aa1a      	add	r2, sp, #104	; 0x68
9001d0f0:	6859      	ldr	r1, [r3, #4]
9001d0f2:	c203      	stmia	r2!, {r0, r1}
9001d0f4:	a818      	add	r0, sp, #96	; 0x60
9001d0f6:	f7f8 ffe7 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d0fa:	4621      	mov	r1, r4
9001d0fc:	a81a      	add	r0, sp, #104	; 0x68
9001d0fe:	f7f9 f827 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d102:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001d106:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001d10a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d10e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001d112:	bfdb      	ittet	le
9001d114:	b29a      	uxthle	r2, r3
9001d116:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d11a:	2201      	movgt	r2, #1
9001d11c:	fb91 f2f2 	sdivle	r2, r1, r2
9001d120:	9202      	str	r2, [sp, #8]
9001d122:	9802      	ldr	r0, [sp, #8]
9001d124:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001d128:	9902      	ldr	r1, [sp, #8]
9001d12a:	fb92 f0f0 	sdiv	r0, r2, r0
9001d12e:	b280      	uxth	r0, r0
9001d130:	440c      	add	r4, r1
9001d132:	900f      	str	r0, [sp, #60]	; 0x3c
9001d134:	3c01      	subs	r4, #1
9001d136:	9802      	ldr	r0, [sp, #8]
9001d138:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001d13a:	fb05 2510 	mls	r5, r5, r0, r2
9001d13e:	fb94 f4f1 	sdiv	r4, r4, r1
9001d142:	fb15 f503 	smulbb	r5, r5, r3
9001d146:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001d14a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001d14e:	3401      	adds	r4, #1
9001d150:	440d      	add	r5, r1
9001d152:	4419      	add	r1, r3
9001d154:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001d158:	b2a4      	uxth	r4, r4
9001d15a:	441a      	add	r2, r3
9001d15c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d160:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001d164:	00a4      	lsls	r4, r4, #2
9001d166:	9306      	str	r3, [sp, #24]
9001d168:	b2ad      	uxth	r5, r5
9001d16a:	4bb3      	ldr	r3, [pc, #716]	; (9001d438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001d16c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001d170:	6818      	ldr	r0, [r3, #0]
9001d172:	6803      	ldr	r3, [r0, #0]
9001d174:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d176:	4798      	blx	r3
9001d178:	4bb0      	ldr	r3, [pc, #704]	; (9001d43c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001d17a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001d17e:	2d00      	cmp	r5, #0
9001d180:	881a      	ldrh	r2, [r3, #0]
9001d182:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001d186:	fb02 f606 	mul.w	r6, r2, r6
9001d18a:	fb02 7101 	mla	r1, r2, r1, r7
9001d18e:	9316      	str	r3, [sp, #88]	; 0x58
9001d190:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001d194:	4baa      	ldr	r3, [pc, #680]	; (9001d440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001d196:	bf18      	it	ne
9001d198:	2100      	movne	r1, #0
9001d19a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001d19e:	eba3 030b 	sub.w	r3, r3, fp
9001d1a2:	920a      	str	r2, [sp, #40]	; 0x28
9001d1a4:	f104 0204 	add.w	r2, r4, #4
9001d1a8:	9317      	str	r3, [sp, #92]	; 0x5c
9001d1aa:	9213      	str	r2, [sp, #76]	; 0x4c
9001d1ac:	9a06      	ldr	r2, [sp, #24]
9001d1ae:	bf08      	it	eq
9001d1b0:	4611      	moveq	r1, r2
9001d1b2:	2200      	movs	r2, #0
9001d1b4:	b289      	uxth	r1, r1
9001d1b6:	920d      	str	r2, [sp, #52]	; 0x34
9001d1b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d1ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d1bc:	fa12 f383 	uxtah	r3, r2, r3
9001d1c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d1c2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d1c6:	3304      	adds	r3, #4
9001d1c8:	9308      	str	r3, [sp, #32]
9001d1ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d1cc:	4543      	cmp	r3, r8
9001d1ce:	f240 8168 	bls.w	9001d4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001d1d2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001d1d6:	f04f 0e01 	mov.w	lr, #1
9001d1da:	9a02      	ldr	r2, [sp, #8]
9001d1dc:	9808      	ldr	r0, [sp, #32]
9001d1de:	fbb5 f3f3 	udiv	r3, r5, r3
9001d1e2:	1ad3      	subs	r3, r2, r3
9001d1e4:	7800      	ldrb	r0, [r0, #0]
9001d1e6:	b29b      	uxth	r3, r3
9001d1e8:	9010      	str	r0, [sp, #64]	; 0x40
9001d1ea:	3001      	adds	r0, #1
9001d1ec:	9314      	str	r3, [sp, #80]	; 0x50
9001d1ee:	9b08      	ldr	r3, [sp, #32]
9001d1f0:	9007      	str	r0, [sp, #28]
9001d1f2:	785a      	ldrb	r2, [r3, #1]
9001d1f4:	789b      	ldrb	r3, [r3, #2]
9001d1f6:	021b      	lsls	r3, r3, #8
9001d1f8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d1fc:	9a08      	ldr	r2, [sp, #32]
9001d1fe:	78d2      	ldrb	r2, [r2, #3]
9001d200:	4313      	orrs	r3, r2
9001d202:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d204:	441a      	add	r2, r3
9001d206:	1c50      	adds	r0, r2, #1
9001d208:	7852      	ldrb	r2, [r2, #1]
9001d20a:	9005      	str	r0, [sp, #20]
9001d20c:	0212      	lsls	r2, r2, #8
9001d20e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d210:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001d214:	5cc3      	ldrb	r3, [r0, r3]
9001d216:	431a      	orrs	r2, r3
9001d218:	b293      	uxth	r3, r2
9001d21a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001d21e:	930b      	str	r3, [sp, #44]	; 0x2c
9001d220:	2300      	movs	r3, #0
9001d222:	9309      	str	r3, [sp, #36]	; 0x24
9001d224:	2301      	movs	r3, #1
9001d226:	9301      	str	r3, [sp, #4]
9001d228:	9304      	str	r3, [sp, #16]
9001d22a:	2300      	movs	r3, #0
9001d22c:	9303      	str	r3, [sp, #12]
9001d22e:	2d00      	cmp	r5, #0
9001d230:	d07d      	beq.n	9001d32e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001d232:	45ae      	cmp	lr, r5
9001d234:	d26c      	bcs.n	9001d310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001d236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d238:	eba5 050e 	sub.w	r5, r5, lr
9001d23c:	460c      	mov	r4, r1
9001d23e:	4543      	cmp	r3, r8
9001d240:	b2ad      	uxth	r5, r5
9001d242:	d802      	bhi.n	9001d24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001d244:	e071      	b.n	9001d32a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001d246:	2b00      	cmp	r3, #0
9001d248:	d15d      	bne.n	9001d306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001d24a:	9b05      	ldr	r3, [sp, #20]
9001d24c:	9a04      	ldr	r2, [sp, #16]
9001d24e:	785b      	ldrb	r3, [r3, #1]
9001d250:	f1c2 0207 	rsb	r2, r2, #7
9001d254:	9904      	ldr	r1, [sp, #16]
9001d256:	4093      	lsls	r3, r2
9001d258:	005b      	lsls	r3, r3, #1
9001d25a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d25e:	9b05      	ldr	r3, [sp, #20]
9001d260:	781b      	ldrb	r3, [r3, #0]
9001d262:	410b      	asrs	r3, r1
9001d264:	3101      	adds	r1, #1
9001d266:	b2c9      	uxtb	r1, r1
9001d268:	b2db      	uxtb	r3, r3
9001d26a:	2908      	cmp	r1, #8
9001d26c:	9104      	str	r1, [sp, #16]
9001d26e:	9905      	ldr	r1, [sp, #20]
9001d270:	ea43 0302 	orr.w	r3, r3, r2
9001d274:	bf0c      	ite	eq
9001d276:	3102      	addeq	r1, #2
9001d278:	3101      	addne	r1, #1
9001d27a:	b29a      	uxth	r2, r3
9001d27c:	bf05      	ittet	eq
9001d27e:	9105      	streq	r1, [sp, #20]
9001d280:	2100      	moveq	r1, #0
9001d282:	9105      	strne	r1, [sp, #20]
9001d284:	9104      	streq	r1, [sp, #16]
9001d286:	9910      	ldr	r1, [sp, #64]	; 0x40
9001d288:	4291      	cmp	r1, r2
9001d28a:	d30a      	bcc.n	9001d2a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001d28c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001d290:	2301      	movs	r3, #1
9001d292:	9907      	ldr	r1, [sp, #28]
9001d294:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001d298:	d30f      	bcc.n	9001d2ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d29a:	2100      	movs	r1, #0
9001d29c:	9301      	str	r3, [sp, #4]
9001d29e:	9103      	str	r1, [sp, #12]
9001d2a0:	e032      	b.n	9001d308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001d2a2:	9b07      	ldr	r3, [sp, #28]
9001d2a4:	429a      	cmp	r2, r3
9001d2a6:	d318      	bcc.n	9001d2da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001d2a8:	9b01      	ldr	r3, [sp, #4]
9001d2aa:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001d2ae:	445b      	add	r3, fp
9001d2b0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001d2b4:	9b01      	ldr	r3, [sp, #4]
9001d2b6:	3301      	adds	r3, #1
9001d2b8:	b29b      	uxth	r3, r3
9001d2ba:	9907      	ldr	r1, [sp, #28]
9001d2bc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001d2c0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d2c4:	7108      	strb	r0, [r1, #4]
9001d2c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001d2c8:	80c8      	strh	r0, [r1, #6]
9001d2ca:	9801      	ldr	r0, [sp, #4]
9001d2cc:	3001      	adds	r0, #1
9001d2ce:	7148      	strb	r0, [r1, #5]
9001d2d0:	9907      	ldr	r1, [sp, #28]
9001d2d2:	3101      	adds	r1, #1
9001d2d4:	b289      	uxth	r1, r1
9001d2d6:	9107      	str	r1, [sp, #28]
9001d2d8:	e7df      	b.n	9001d29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001d2da:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001d2de:	4611      	mov	r1, r2
9001d2e0:	795b      	ldrb	r3, [r3, #5]
9001d2e2:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001d2e6:	4458      	add	r0, fp
9001d2e8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001d2ea:	4406      	add	r6, r0
9001d2ec:	2e00      	cmp	r6, #0
9001d2ee:	dd06      	ble.n	9001d2fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d2f0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d2f4:	790e      	ldrb	r6, [r1, #4]
9001d2f6:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001d2fa:	88c9      	ldrh	r1, [r1, #6]
9001d2fc:	e7f4      	b.n	9001d2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001d2fe:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001d302:	b29b      	uxth	r3, r3
9001d304:	e7c5      	b.n	9001d292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001d306:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d308:	4621      	mov	r1, r4
9001d30a:	920b      	str	r2, [sp, #44]	; 0x2c
9001d30c:	469e      	mov	lr, r3
9001d30e:	e78e      	b.n	9001d22e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001d310:	9a03      	ldr	r2, [sp, #12]
9001d312:	ebae 0305 	sub.w	r3, lr, r5
9001d316:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d31a:	442a      	add	r2, r5
9001d31c:	b29b      	uxth	r3, r3
9001d31e:	b292      	uxth	r2, r2
9001d320:	9203      	str	r2, [sp, #12]
9001d322:	2500      	movs	r5, #0
9001d324:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d326:	4542      	cmp	r2, r8
9001d328:	d88d      	bhi.n	9001d246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d32a:	4621      	mov	r1, r4
9001d32c:	e74d      	b.n	9001d1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001d32e:	458e      	cmp	lr, r1
9001d330:	f04f 0900 	mov.w	r9, #0
9001d334:	bf2b      	itete	cs
9001d336:	ebae 0301 	subcs.w	r3, lr, r1
9001d33a:	eba1 040e 	subcc.w	r4, r1, lr
9001d33e:	462c      	movcs	r4, r5
9001d340:	462b      	movcc	r3, r5
9001d342:	bf27      	ittee	cs
9001d344:	b29b      	uxthcs	r3, r3
9001d346:	910c      	strcs	r1, [sp, #48]	; 0x30
9001d348:	b2a4      	uxthcc	r4, r4
9001d34a:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001d34e:	9a03      	ldr	r2, [sp, #12]
9001d350:	980c      	ldr	r0, [sp, #48]	; 0x30
9001d352:	444a      	add	r2, r9
9001d354:	4548      	cmp	r0, r9
9001d356:	b292      	uxth	r2, r2
9001d358:	d074      	beq.n	9001d444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001d35a:	2004      	movs	r0, #4
9001d35c:	445a      	add	r2, fp
9001d35e:	4605      	mov	r5, r0
9001d360:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001d364:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d366:	fb15 0202 	smlabb	r2, r5, r2, r0
9001d36a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d36c:	5880      	ldr	r0, [r0, r2]
9001d36e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001d372:	d014      	beq.n	9001d39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d374:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d378:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001d37c:	d112      	bne.n	9001d3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d37e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d380:	2aff      	cmp	r2, #255	; 0xff
9001d382:	d10f      	bne.n	9001d3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d384:	0942      	lsrs	r2, r0, #5
9001d386:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001d38a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d38e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d392:	f025 0507 	bic.w	r5, r5, #7
9001d396:	4315      	orrs	r5, r2
9001d398:	4305      	orrs	r5, r0
9001d39a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001d39e:	f109 0901 	add.w	r9, r9, #1
9001d3a2:	e7d4      	b.n	9001d34e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001d3a4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001d3a8:	b2ed      	uxtb	r5, r5
9001d3aa:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d3ae:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d3b2:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001d3b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d3ba:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001d3be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d3c2:	9215      	str	r2, [sp, #84]	; 0x54
9001d3c4:	fa5f fc8c 	uxtb.w	ip, ip
9001d3c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d3ca:	b2c0      	uxtb	r0, r0
9001d3cc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d3d0:	fb02 fa0a 	mul.w	sl, r2, sl
9001d3d4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001d3d8:	f10a 0201 	add.w	r2, sl, #1
9001d3dc:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001d3e0:	1212      	asrs	r2, r2, #8
9001d3e2:	fa1f fa82 	uxth.w	sl, r2
9001d3e6:	43d2      	mvns	r2, r2
9001d3e8:	fb16 f60a 	smulbb	r6, r6, sl
9001d3ec:	b2d2      	uxtb	r2, r2
9001d3ee:	fb10 f00a 	smulbb	r0, r0, sl
9001d3f2:	fb07 6702 	mla	r7, r7, r2, r6
9001d3f6:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001d3f8:	fb0c 0002 	mla	r0, ip, r2, r0
9001d3fc:	fb15 f50a 	smulbb	r5, r5, sl
9001d400:	b2bf      	uxth	r7, r7
9001d402:	b280      	uxth	r0, r0
9001d404:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d408:	fb06 5602 	mla	r6, r6, r2, r5
9001d40c:	1c7a      	adds	r2, r7, #1
9001d40e:	1c45      	adds	r5, r0, #1
9001d410:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d414:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d418:	b2b6      	uxth	r6, r6
9001d41a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d41e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d422:	432f      	orrs	r7, r5
9001d424:	1c75      	adds	r5, r6, #1
9001d426:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d42a:	096d      	lsrs	r5, r5, #5
9001d42c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d430:	432f      	orrs	r7, r5
9001d432:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001d436:	e7b2      	b.n	9001d39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d438:	24039704 	.word	0x24039704
9001d43c:	240396fe 	.word	0x240396fe
9001d440:	fffff7fb 	.word	0xfffff7fb
9001d444:	9203      	str	r2, [sp, #12]
9001d446:	458e      	cmp	lr, r1
9001d448:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001d44a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d44e:	f4ff af68 	bcc.w	9001d322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001d452:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001d454:	9906      	ldr	r1, [sp, #24]
9001d456:	8812      	ldrh	r2, [r2, #0]
9001d458:	1a52      	subs	r2, r2, r1
9001d45a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001d45c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d460:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d462:	3201      	adds	r2, #1
9001d464:	428a      	cmp	r2, r1
9001d466:	9209      	str	r2, [sp, #36]	; 0x24
9001d468:	d111      	bne.n	9001d48e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001d46a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001d46e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001d472:	9b06      	ldr	r3, [sp, #24]
9001d474:	eba5 0509 	sub.w	r5, r5, r9
9001d478:	b2ad      	uxth	r5, r5
9001d47a:	2d00      	cmp	r5, #0
9001d47c:	bf08      	it	eq
9001d47e:	4619      	moveq	r1, r3
9001d480:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d482:	bf18      	it	ne
9001d484:	2100      	movne	r1, #0
9001d486:	3301      	adds	r3, #1
9001d488:	b289      	uxth	r1, r1
9001d48a:	930d      	str	r3, [sp, #52]	; 0x34
9001d48c:	e694      	b.n	9001d1b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001d48e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d492:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001d496:	1b2d      	subs	r5, r5, r4
9001d498:	b2ad      	uxth	r5, r5
9001d49a:	2d00      	cmp	r5, #0
9001d49c:	bf18      	it	ne
9001d49e:	2400      	movne	r4, #0
9001d4a0:	e740      	b.n	9001d324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001d4a2:	4b04      	ldr	r3, [pc, #16]	; (9001d4b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001d4a4:	6818      	ldr	r0, [r3, #0]
9001d4a6:	6803      	ldr	r3, [r0, #0]
9001d4a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d4aa:	4798      	blx	r3
9001d4ac:	b01d      	add	sp, #116	; 0x74
9001d4ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d4b2:	bf00      	nop
9001d4b4:	24039704 	.word	0x24039704

9001d4b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d4bc:	b09f      	sub	sp, #124	; 0x7c
9001d4be:	461d      	mov	r5, r3
9001d4c0:	4604      	mov	r4, r0
9001d4c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d4c4:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001d4c8:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001d4cc:	920a      	str	r2, [sp, #40]	; 0x28
9001d4ce:	2a00      	cmp	r2, #0
9001d4d0:	f000 81fe 	beq.w	9001d8d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001d4d4:	6828      	ldr	r0, [r5, #0]
9001d4d6:	aa1a      	add	r2, sp, #104	; 0x68
9001d4d8:	6869      	ldr	r1, [r5, #4]
9001d4da:	c203      	stmia	r2!, {r0, r1}
9001d4dc:	6818      	ldr	r0, [r3, #0]
9001d4de:	aa1c      	add	r2, sp, #112	; 0x70
9001d4e0:	6859      	ldr	r1, [r3, #4]
9001d4e2:	c203      	stmia	r2!, {r0, r1}
9001d4e4:	a81a      	add	r0, sp, #104	; 0x68
9001d4e6:	f7f8 fdef 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d4ea:	4629      	mov	r1, r5
9001d4ec:	a81c      	add	r0, sp, #112	; 0x70
9001d4ee:	f7f8 fe2f 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d4f2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d4f6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001d4fa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d4fe:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001d502:	bfdb      	ittet	le
9001d504:	b29a      	uxthle	r2, r3
9001d506:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d50a:	2201      	movgt	r2, #1
9001d50c:	fb91 f2f2 	sdivle	r2, r1, r2
9001d510:	9201      	str	r2, [sp, #4]
9001d512:	9801      	ldr	r0, [sp, #4]
9001d514:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001d518:	9901      	ldr	r1, [sp, #4]
9001d51a:	fb92 f0f0 	sdiv	r0, r2, r0
9001d51e:	b280      	uxth	r0, r0
9001d520:	440e      	add	r6, r1
9001d522:	9010      	str	r0, [sp, #64]	; 0x40
9001d524:	3e01      	subs	r6, #1
9001d526:	9801      	ldr	r0, [sp, #4]
9001d528:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d52a:	fb05 2510 	mls	r5, r5, r0, r2
9001d52e:	fb96 f6f1 	sdiv	r6, r6, r1
9001d532:	fb15 f503 	smulbb	r5, r5, r3
9001d536:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001d53a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001d53e:	3601      	adds	r6, #1
9001d540:	440d      	add	r5, r1
9001d542:	4419      	add	r1, r3
9001d544:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001d548:	b2b6      	uxth	r6, r6
9001d54a:	441a      	add	r2, r3
9001d54c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001d550:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001d554:	b2ad      	uxth	r5, r5
9001d556:	9304      	str	r3, [sp, #16]
9001d558:	4b96      	ldr	r3, [pc, #600]	; (9001d7b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d55a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001d55e:	6818      	ldr	r0, [r3, #0]
9001d560:	6803      	ldr	r3, [r0, #0]
9001d562:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d564:	4798      	blx	r3
9001d566:	4b94      	ldr	r3, [pc, #592]	; (9001d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001d568:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001d56c:	2d00      	cmp	r5, #0
9001d56e:	881a      	ldrh	r2, [r3, #0]
9001d570:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001d574:	fb02 f707 	mul.w	r7, r2, r7
9001d578:	fb02 c101 	mla	r1, r2, r1, ip
9001d57c:	9318      	str	r3, [sp, #96]	; 0x60
9001d57e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001d582:	4b8e      	ldr	r3, [pc, #568]	; (9001d7bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001d584:	bf18      	it	ne
9001d586:	2100      	movne	r1, #0
9001d588:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001d58c:	eba3 0304 	sub.w	r3, r3, r4
9001d590:	920b      	str	r2, [sp, #44]	; 0x2c
9001d592:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d594:	9319      	str	r3, [sp, #100]	; 0x64
9001d596:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001d59a:	f106 0204 	add.w	r2, r6, #4
9001d59e:	9206      	str	r2, [sp, #24]
9001d5a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d5a2:	ea6f 0202 	mvn.w	r2, r2
9001d5a6:	b2d2      	uxtb	r2, r2
9001d5a8:	9215      	str	r2, [sp, #84]	; 0x54
9001d5aa:	9a04      	ldr	r2, [sp, #16]
9001d5ac:	bf08      	it	eq
9001d5ae:	4611      	moveq	r1, r2
9001d5b0:	2200      	movs	r2, #0
9001d5b2:	b289      	uxth	r1, r1
9001d5b4:	920d      	str	r2, [sp, #52]	; 0x34
9001d5b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d5b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d5ba:	fa12 f383 	uxtah	r3, r2, r3
9001d5be:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d5c0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d5c4:	3304      	adds	r3, #4
9001d5c6:	9307      	str	r3, [sp, #28]
9001d5c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d5ca:	455b      	cmp	r3, fp
9001d5cc:	f240 817b 	bls.w	9001d8c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001d5d0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001d5d4:	f04f 0801 	mov.w	r8, #1
9001d5d8:	9a01      	ldr	r2, [sp, #4]
9001d5da:	9807      	ldr	r0, [sp, #28]
9001d5dc:	46c4      	mov	ip, r8
9001d5de:	f8cd 8008 	str.w	r8, [sp, #8]
9001d5e2:	7800      	ldrb	r0, [r0, #0]
9001d5e4:	fbb5 f3f3 	udiv	r3, r5, r3
9001d5e8:	1ad3      	subs	r3, r2, r3
9001d5ea:	9011      	str	r0, [sp, #68]	; 0x44
9001d5ec:	3001      	adds	r0, #1
9001d5ee:	b29b      	uxth	r3, r3
9001d5f0:	9005      	str	r0, [sp, #20]
9001d5f2:	9316      	str	r3, [sp, #88]	; 0x58
9001d5f4:	9b07      	ldr	r3, [sp, #28]
9001d5f6:	785a      	ldrb	r2, [r3, #1]
9001d5f8:	789b      	ldrb	r3, [r3, #2]
9001d5fa:	021b      	lsls	r3, r3, #8
9001d5fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d600:	9a07      	ldr	r2, [sp, #28]
9001d602:	78d2      	ldrb	r2, [r2, #3]
9001d604:	4313      	orrs	r3, r2
9001d606:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d608:	441a      	add	r2, r3
9001d60a:	1c50      	adds	r0, r2, #1
9001d60c:	7852      	ldrb	r2, [r2, #1]
9001d60e:	9003      	str	r0, [sp, #12]
9001d610:	0212      	lsls	r2, r2, #8
9001d612:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d614:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001d618:	5cc3      	ldrb	r3, [r0, r3]
9001d61a:	431a      	orrs	r2, r3
9001d61c:	b293      	uxth	r3, r2
9001d61e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001d622:	930c      	str	r3, [sp, #48]	; 0x30
9001d624:	2300      	movs	r3, #0
9001d626:	9308      	str	r3, [sp, #32]
9001d628:	461a      	mov	r2, r3
9001d62a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001d62e:	930e      	str	r3, [sp, #56]	; 0x38
9001d630:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001d634:	930f      	str	r3, [sp, #60]	; 0x3c
9001d636:	2d00      	cmp	r5, #0
9001d638:	d07d      	beq.n	9001d736 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001d63a:	45ac      	cmp	ip, r5
9001d63c:	d26d      	bcs.n	9001d71a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001d63e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d640:	eba5 050c 	sub.w	r5, r5, ip
9001d644:	4608      	mov	r0, r1
9001d646:	455b      	cmp	r3, fp
9001d648:	b2ad      	uxth	r5, r5
9001d64a:	d802      	bhi.n	9001d652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001d64c:	e071      	b.n	9001d732 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001d64e:	2b00      	cmp	r3, #0
9001d650:	d15d      	bne.n	9001d70e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001d652:	9b03      	ldr	r3, [sp, #12]
9001d654:	9a02      	ldr	r2, [sp, #8]
9001d656:	785b      	ldrb	r3, [r3, #1]
9001d658:	f1c2 0207 	rsb	r2, r2, #7
9001d65c:	9902      	ldr	r1, [sp, #8]
9001d65e:	4093      	lsls	r3, r2
9001d660:	005b      	lsls	r3, r3, #1
9001d662:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d666:	9b03      	ldr	r3, [sp, #12]
9001d668:	781b      	ldrb	r3, [r3, #0]
9001d66a:	410b      	asrs	r3, r1
9001d66c:	3101      	adds	r1, #1
9001d66e:	b2c9      	uxtb	r1, r1
9001d670:	b2db      	uxtb	r3, r3
9001d672:	2908      	cmp	r1, #8
9001d674:	9102      	str	r1, [sp, #8]
9001d676:	9903      	ldr	r1, [sp, #12]
9001d678:	ea43 0302 	orr.w	r3, r3, r2
9001d67c:	bf0c      	ite	eq
9001d67e:	3102      	addeq	r1, #2
9001d680:	3101      	addne	r1, #1
9001d682:	b29a      	uxth	r2, r3
9001d684:	bf05      	ittet	eq
9001d686:	9103      	streq	r1, [sp, #12]
9001d688:	2100      	moveq	r1, #0
9001d68a:	9103      	strne	r1, [sp, #12]
9001d68c:	9102      	streq	r1, [sp, #8]
9001d68e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001d690:	4291      	cmp	r1, r2
9001d692:	d30a      	bcc.n	9001d6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d694:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001d698:	2301      	movs	r3, #1
9001d69a:	9905      	ldr	r1, [sp, #20]
9001d69c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001d6a0:	d30f      	bcc.n	9001d6c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001d6a2:	2100      	movs	r1, #0
9001d6a4:	4698      	mov	r8, r3
9001d6a6:	9100      	str	r1, [sp, #0]
9001d6a8:	e032      	b.n	9001d710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001d6aa:	9b05      	ldr	r3, [sp, #20]
9001d6ac:	429a      	cmp	r2, r3
9001d6ae:	d318      	bcc.n	9001d6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001d6b0:	eb04 0308 	add.w	r3, r4, r8
9001d6b4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001d6b8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001d6bc:	f108 0301 	add.w	r3, r8, #1
9001d6c0:	b29b      	uxth	r3, r3
9001d6c2:	9905      	ldr	r1, [sp, #20]
9001d6c4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001d6c8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d6cc:	710e      	strb	r6, [r1, #4]
9001d6ce:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001d6d0:	80ce      	strh	r6, [r1, #6]
9001d6d2:	f108 0601 	add.w	r6, r8, #1
9001d6d6:	714e      	strb	r6, [r1, #5]
9001d6d8:	9905      	ldr	r1, [sp, #20]
9001d6da:	3101      	adds	r1, #1
9001d6dc:	b289      	uxth	r1, r1
9001d6de:	9105      	str	r1, [sp, #20]
9001d6e0:	e7df      	b.n	9001d6a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001d6e2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001d6e6:	4611      	mov	r1, r2
9001d6e8:	795b      	ldrb	r3, [r3, #5]
9001d6ea:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001d6ee:	4426      	add	r6, r4
9001d6f0:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001d6f2:	4437      	add	r7, r6
9001d6f4:	2f00      	cmp	r7, #0
9001d6f6:	dd06      	ble.n	9001d706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001d6f8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d6fc:	790f      	ldrb	r7, [r1, #4]
9001d6fe:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001d702:	88c9      	ldrh	r1, [r1, #6]
9001d704:	e7f4      	b.n	9001d6f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001d706:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001d70a:	b29b      	uxth	r3, r3
9001d70c:	e7c5      	b.n	9001d69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001d70e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001d710:	920c      	str	r2, [sp, #48]	; 0x30
9001d712:	4601      	mov	r1, r0
9001d714:	9a00      	ldr	r2, [sp, #0]
9001d716:	469c      	mov	ip, r3
9001d718:	e78d      	b.n	9001d636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d71a:	ebac 0305 	sub.w	r3, ip, r5
9001d71e:	1957      	adds	r7, r2, r5
9001d720:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d724:	b2ba      	uxth	r2, r7
9001d726:	b29b      	uxth	r3, r3
9001d728:	9200      	str	r2, [sp, #0]
9001d72a:	2500      	movs	r5, #0
9001d72c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d72e:	455a      	cmp	r2, fp
9001d730:	d88d      	bhi.n	9001d64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001d732:	4601      	mov	r1, r0
9001d734:	e748      	b.n	9001d5c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001d736:	458c      	cmp	ip, r1
9001d738:	bf27      	ittee	cs
9001d73a:	ebac 0301 	subcs.w	r3, ip, r1
9001d73e:	4628      	movcs	r0, r5
9001d740:	eba1 000c 	subcc.w	r0, r1, ip
9001d744:	462b      	movcc	r3, r5
9001d746:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001d748:	bf27      	ittee	cs
9001d74a:	b29b      	uxthcs	r3, r3
9001d74c:	9109      	strcs	r1, [sp, #36]	; 0x24
9001d74e:	b280      	uxthcc	r0, r0
9001d750:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001d754:	2dff      	cmp	r5, #255	; 0xff
9001d756:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001d758:	eb02 0705 	add.w	r7, r2, r5
9001d75c:	b2bd      	uxth	r5, r7
9001d75e:	9500      	str	r5, [sp, #0]
9001d760:	d12e      	bne.n	9001d7c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001d762:	465e      	mov	r6, fp
9001d764:	9d00      	ldr	r5, [sp, #0]
9001d766:	42aa      	cmp	r2, r5
9001d768:	f040 8083 	bne.w	9001d872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001d76c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d76e:	458c      	cmp	ip, r1
9001d770:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d774:	d3d9      	bcc.n	9001d72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001d776:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001d778:	9904      	ldr	r1, [sp, #16]
9001d77a:	8812      	ldrh	r2, [r2, #0]
9001d77c:	1a52      	subs	r2, r2, r1
9001d77e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001d780:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d784:	9a08      	ldr	r2, [sp, #32]
9001d786:	3201      	adds	r2, #1
9001d788:	428a      	cmp	r2, r1
9001d78a:	9208      	str	r2, [sp, #32]
9001d78c:	f040 8091 	bne.w	9001d8b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001d790:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001d794:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001d798:	9b04      	ldr	r3, [sp, #16]
9001d79a:	eba5 050c 	sub.w	r5, r5, ip
9001d79e:	b2ad      	uxth	r5, r5
9001d7a0:	2d00      	cmp	r5, #0
9001d7a2:	bf08      	it	eq
9001d7a4:	4619      	moveq	r1, r3
9001d7a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d7a8:	bf18      	it	ne
9001d7aa:	2100      	movne	r1, #0
9001d7ac:	3301      	adds	r3, #1
9001d7ae:	b289      	uxth	r1, r1
9001d7b0:	930d      	str	r3, [sp, #52]	; 0x34
9001d7b2:	e700      	b.n	9001d5b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001d7b4:	24039704 	.word	0x24039704
9001d7b8:	240396fe 	.word	0x240396fe
9001d7bc:	fffff7fb 	.word	0xfffff7fb
9001d7c0:	46d9      	mov	r9, fp
9001d7c2:	9d00      	ldr	r5, [sp, #0]
9001d7c4:	42aa      	cmp	r2, r5
9001d7c6:	d0d1      	beq.n	9001d76c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001d7c8:	1c55      	adds	r5, r2, #1
9001d7ca:	4422      	add	r2, r4
9001d7cc:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001d7d0:	9a06      	ldr	r2, [sp, #24]
9001d7d2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d7d6:	9517      	str	r5, [sp, #92]	; 0x5c
9001d7d8:	4472      	add	r2, lr
9001d7da:	9212      	str	r2, [sp, #72]	; 0x48
9001d7dc:	f8b9 2000 	ldrh.w	r2, [r9]
9001d7e0:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001d7e2:	1216      	asrs	r6, r2, #8
9001d7e4:	f897 a002 	ldrb.w	sl, [r7, #2]
9001d7e8:	10d5      	asrs	r5, r2, #3
9001d7ea:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d7ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d7f0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d7f4:	00d2      	lsls	r2, r2, #3
9001d7f6:	fb1a fa07 	smulbb	sl, sl, r7
9001d7fa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d7fe:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d800:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d804:	b2d2      	uxtb	r2, r2
9001d806:	fb06 a607 	mla	r6, r6, r7, sl
9001d80a:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001d80c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d810:	f897 a001 	ldrb.w	sl, [r7, #1]
9001d814:	b2b6      	uxth	r6, r6
9001d816:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d818:	fb1a fa07 	smulbb	sl, sl, r7
9001d81c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d81e:	fb05 a507 	mla	r5, r5, r7, sl
9001d822:	9f06      	ldr	r7, [sp, #24]
9001d824:	f106 0a01 	add.w	sl, r6, #1
9001d828:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d82c:	b2ad      	uxth	r5, r5
9001d82e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d830:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d834:	f105 0a01 	add.w	sl, r5, #1
9001d838:	fb1e fe07 	smulbb	lr, lr, r7
9001d83c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d83e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d842:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001d846:	fb02 e207 	mla	r2, r2, r7, lr
9001d84a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d84e:	b292      	uxth	r2, r2
9001d850:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d854:	f102 0e01 	add.w	lr, r2, #1
9001d858:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001d85c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001d860:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d864:	ea4e 0606 	orr.w	r6, lr, r6
9001d868:	ea46 060a 	orr.w	r6, r6, sl
9001d86c:	f829 6b02 	strh.w	r6, [r9], #2
9001d870:	e7a7      	b.n	9001d7c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001d872:	f102 0e01 	add.w	lr, r2, #1
9001d876:	4422      	add	r2, r4
9001d878:	9f06      	ldr	r7, [sp, #24]
9001d87a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001d87e:	9a06      	ldr	r2, [sp, #24]
9001d880:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001d884:	eb02 0a05 	add.w	sl, r2, r5
9001d888:	4a13      	ldr	r2, [pc, #76]	; (9001d8d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001d88a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001d88e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001d892:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001d896:	00d2      	lsls	r2, r2, #3
9001d898:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d89c:	ea49 0202 	orr.w	r2, r9, r2
9001d8a0:	f817 9005 	ldrb.w	r9, [r7, r5]
9001d8a4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001d8a8:	f826 2b02 	strh.w	r2, [r6], #2
9001d8ac:	fa1f f28e 	uxth.w	r2, lr
9001d8b0:	e758      	b.n	9001d764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001d8b2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d8b6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001d8ba:	1a2d      	subs	r5, r5, r0
9001d8bc:	b2ad      	uxth	r5, r5
9001d8be:	2d00      	cmp	r5, #0
9001d8c0:	bf18      	it	ne
9001d8c2:	2000      	movne	r0, #0
9001d8c4:	e732      	b.n	9001d72c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001d8c6:	4b05      	ldr	r3, [pc, #20]	; (9001d8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001d8c8:	6818      	ldr	r0, [r3, #0]
9001d8ca:	6803      	ldr	r3, [r0, #0]
9001d8cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d8ce:	4798      	blx	r3
9001d8d0:	b01f      	add	sp, #124	; 0x7c
9001d8d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d8d6:	bf00      	nop
9001d8d8:	fffff800 	.word	0xfffff800
9001d8dc:	24039704 	.word	0x24039704

9001d8e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001d8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8e4:	b091      	sub	sp, #68	; 0x44
9001d8e6:	469b      	mov	fp, r3
9001d8e8:	4616      	mov	r6, r2
9001d8ea:	f9b3 2000 	ldrsh.w	r2, [r3]
9001d8ee:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001d8f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001d8f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001d8fa:	4604      	mov	r4, r0
9001d8fc:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001d900:	4640      	mov	r0, r8
9001d902:	460d      	mov	r5, r1
9001d904:	4659      	mov	r1, fp
9001d906:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001d90a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001d90e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001d912:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001d916:	f7f3 fb63 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001d91a:	4631      	mov	r1, r6
9001d91c:	4640      	mov	r0, r8
9001d91e:	f7f3 fb5f 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001d922:	4b74      	ldr	r3, [pc, #464]	; (9001daf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001d924:	8818      	ldrh	r0, [r3, #0]
9001d926:	4b74      	ldr	r3, [pc, #464]	; (9001daf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001d928:	b202      	sxth	r2, r0
9001d92a:	8819      	ldrh	r1, [r3, #0]
9001d92c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001d930:	b20e      	sxth	r6, r1
9001d932:	2b00      	cmp	r3, #0
9001d934:	da07      	bge.n	9001d946 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001d936:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001d93a:	4463      	add	r3, ip
9001d93c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001d940:	2300      	movs	r3, #0
9001d942:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001d946:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001d94a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001d94e:	1ad2      	subs	r2, r2, r3
9001d950:	4594      	cmp	ip, r2
9001d952:	bfc4      	itt	gt
9001d954:	1ac2      	subgt	r2, r0, r3
9001d956:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001d95a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001d95e:	2a00      	cmp	r2, #0
9001d960:	da07      	bge.n	9001d972 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001d962:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001d966:	4462      	add	r2, ip
9001d968:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001d96c:	2200      	movs	r2, #0
9001d96e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001d972:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001d976:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001d97a:	eba6 060a 	sub.w	r6, r6, sl
9001d97e:	42b2      	cmp	r2, r6
9001d980:	bfc4      	itt	gt
9001d982:	eba1 020a 	subgt.w	r2, r1, sl
9001d986:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001d98a:	4a5c      	ldr	r2, [pc, #368]	; (9001dafc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001d98c:	7812      	ldrb	r2, [r2, #0]
9001d98e:	b9a2      	cbnz	r2, 9001d9ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001d990:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001d994:	4286      	cmp	r6, r0
9001d996:	4640      	mov	r0, r8
9001d998:	9303      	str	r3, [sp, #12]
9001d99a:	bf14      	ite	ne
9001d99c:	2600      	movne	r6, #0
9001d99e:	2601      	moveq	r6, #1
9001d9a0:	f7f3 fb61 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001d9a4:	9b03      	ldr	r3, [sp, #12]
9001d9a6:	b160      	cbz	r0, 9001d9c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001d9a8:	2300      	movs	r3, #0
9001d9aa:	8023      	strh	r3, [r4, #0]
9001d9ac:	8063      	strh	r3, [r4, #2]
9001d9ae:	80a3      	strh	r3, [r4, #4]
9001d9b0:	4620      	mov	r0, r4
9001d9b2:	80e3      	strh	r3, [r4, #6]
9001d9b4:	b011      	add	sp, #68	; 0x44
9001d9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d9ba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001d9be:	428e      	cmp	r6, r1
9001d9c0:	e7e9      	b.n	9001d996 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001d9c2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001d9c6:	a90e      	add	r1, sp, #56	; 0x38
9001d9c8:	900e      	str	r0, [sp, #56]	; 0x38
9001d9ca:	a80c      	add	r0, sp, #48	; 0x30
9001d9cc:	9205      	str	r2, [sp, #20]
9001d9ce:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001d9d2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001d9d6:	9206      	str	r2, [sp, #24]
9001d9d8:	f8bb 2000 	ldrh.w	r2, [fp]
9001d9dc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001d9e0:	1a9b      	subs	r3, r3, r2
9001d9e2:	b21b      	sxth	r3, r3
9001d9e4:	9303      	str	r3, [sp, #12]
9001d9e6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001d9ea:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001db04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001d9ee:	ebaa 0a03 	sub.w	sl, sl, r3
9001d9f2:	fa0f f38a 	sxth.w	r3, sl
9001d9f6:	9304      	str	r3, [sp, #16]
9001d9f8:	9b03      	ldr	r3, [sp, #12]
9001d9fa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001d9fe:	9b04      	ldr	r3, [sp, #16]
9001da00:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001da04:	9b05      	ldr	r3, [sp, #20]
9001da06:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001da0a:	9b06      	ldr	r3, [sp, #24]
9001da0c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001da10:	f7f8 fb9e 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001da14:	4640      	mov	r0, r8
9001da16:	f7f8 fb57 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001da1a:	a80e      	add	r0, sp, #56	; 0x38
9001da1c:	f7f8 fb54 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001da20:	4b37      	ldr	r3, [pc, #220]	; (9001db00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001da22:	4628      	mov	r0, r5
9001da24:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001da28:	881b      	ldrh	r3, [r3, #0]
9001da2a:	9307      	str	r3, [sp, #28]
9001da2c:	682b      	ldr	r3, [r5, #0]
9001da2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001da30:	4798      	blx	r3
9001da32:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001da36:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001da3a:	4681      	mov	r9, r0
9001da3c:	f8db 0000 	ldr.w	r0, [fp]
9001da40:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001da44:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001da46:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001da4a:	6803      	ldr	r3, [r0, #0]
9001da4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001da4e:	4798      	blx	r3
9001da50:	4607      	mov	r7, r0
9001da52:	f8db 0000 	ldr.w	r0, [fp]
9001da56:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001da5a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001da5e:	6803      	ldr	r3, [r0, #0]
9001da60:	9109      	str	r1, [sp, #36]	; 0x24
9001da62:	9208      	str	r2, [sp, #32]
9001da64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001da66:	4798      	blx	r3
9001da68:	f010 0f01 	tst.w	r0, #1
9001da6c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001da70:	d012      	beq.n	9001da98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001da72:	f8db 0000 	ldr.w	r0, [fp]
9001da76:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001da7a:	6803      	ldr	r3, [r0, #0]
9001da7c:	9200      	str	r2, [sp, #0]
9001da7e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001da80:	462b      	mov	r3, r5
9001da82:	e898 0006 	ldmia.w	r8, {r1, r2}
9001da86:	47b0      	blx	r6
9001da88:	9b03      	ldr	r3, [sp, #12]
9001da8a:	8023      	strh	r3, [r4, #0]
9001da8c:	9b04      	ldr	r3, [sp, #16]
9001da8e:	8063      	strh	r3, [r4, #2]
9001da90:	9b05      	ldr	r3, [sp, #20]
9001da92:	80a3      	strh	r3, [r4, #4]
9001da94:	9b06      	ldr	r3, [sp, #24]
9001da96:	e78b      	b.n	9001d9b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001da98:	fb09 f202 	mul.w	r2, r9, r2
9001da9c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001daa0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001daa4:	440f      	add	r7, r1
9001daa6:	b166      	cbz	r6, 9001dac2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001daa8:	9a07      	ldr	r2, [sp, #28]
9001daaa:	4592      	cmp	sl, r2
9001daac:	d109      	bne.n	9001dac2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001daae:	f8db 0000 	ldr.w	r0, [fp]
9001dab2:	fb09 f303 	mul.w	r3, r9, r3
9001dab6:	4629      	mov	r1, r5
9001dab8:	6802      	ldr	r2, [r0, #0]
9001daba:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001dabc:	463a      	mov	r2, r7
9001dabe:	47b0      	blx	r6
9001dac0:	e7e2      	b.n	9001da88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001dac2:	fb0a f303 	mul.w	r3, sl, r3
9001dac6:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001daca:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001db04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001dace:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001dad2:	4545      	cmp	r5, r8
9001dad4:	d2d8      	bcs.n	9001da88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001dad6:	f8db 0000 	ldr.w	r0, [fp]
9001dada:	4629      	mov	r1, r5
9001dadc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001dae0:	4435      	add	r5, r6
9001dae2:	6802      	ldr	r2, [r0, #0]
9001dae4:	005b      	lsls	r3, r3, #1
9001dae6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001daea:	463a      	mov	r2, r7
9001daec:	47d0      	blx	sl
9001daee:	444f      	add	r7, r9
9001daf0:	e7ef      	b.n	9001dad2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001daf2:	bf00      	nop
9001daf4:	240396f8 	.word	0x240396f8
9001daf8:	240396fa 	.word	0x240396fa
9001dafc:	240396fc 	.word	0x240396fc
9001db00:	240396fe 	.word	0x240396fe
9001db04:	24039704 	.word	0x24039704

9001db08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001db08:	b5f0      	push	{r4, r5, r6, r7, lr}
9001db0a:	4606      	mov	r6, r0
9001db0c:	b087      	sub	sp, #28
9001db0e:	460c      	mov	r4, r1
9001db10:	4617      	mov	r7, r2
9001db12:	461d      	mov	r5, r3
9001db14:	b333      	cbz	r3, 9001db64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001db16:	4608      	mov	r0, r1
9001db18:	f7f3 faa5 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001db1c:	bb10      	cbnz	r0, 9001db64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001db1e:	6820      	ldr	r0, [r4, #0]
9001db20:	ab04      	add	r3, sp, #16
9001db22:	6861      	ldr	r1, [r4, #4]
9001db24:	4c1b      	ldr	r4, [pc, #108]	; (9001db94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001db26:	c303      	stmia	r3!, {r0, r1}
9001db28:	a804      	add	r0, sp, #16
9001db2a:	f7f8 facd 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001db2e:	6820      	ldr	r0, [r4, #0]
9001db30:	6803      	ldr	r3, [r0, #0]
9001db32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001db34:	4798      	blx	r3
9001db36:	2dff      	cmp	r5, #255	; 0xff
9001db38:	d016      	beq.n	9001db68 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001db3a:	f010 0f08 	tst.w	r0, #8
9001db3e:	6820      	ldr	r0, [r4, #0]
9001db40:	d015      	beq.n	9001db6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001db42:	2400      	movs	r4, #0
9001db44:	6801      	ldr	r1, [r0, #0]
9001db46:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001db4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001db4e:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001db52:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001db56:	9401      	str	r4, [sp, #4]
9001db58:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001db5c:	9400      	str	r4, [sp, #0]
9001db5e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001db60:	4639      	mov	r1, r7
9001db62:	47a0      	blx	r4
9001db64:	b007      	add	sp, #28
9001db66:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001db68:	f010 0f02 	tst.w	r0, #2
9001db6c:	e7e7      	b.n	9001db3e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001db6e:	6803      	ldr	r3, [r0, #0]
9001db70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001db72:	4798      	blx	r3
9001db74:	4b08      	ldr	r3, [pc, #32]	; (9001db98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001db76:	4601      	mov	r1, r0
9001db78:	4630      	mov	r0, r6
9001db7a:	881a      	ldrh	r2, [r3, #0]
9001db7c:	6833      	ldr	r3, [r6, #0]
9001db7e:	e9cd 7500 	strd	r7, r5, [sp]
9001db82:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001db84:	ab04      	add	r3, sp, #16
9001db86:	47a8      	blx	r5
9001db88:	6820      	ldr	r0, [r4, #0]
9001db8a:	6803      	ldr	r3, [r0, #0]
9001db8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001db8e:	4798      	blx	r3
9001db90:	e7e8      	b.n	9001db64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001db92:	bf00      	nop
9001db94:	24039704 	.word	0x24039704
9001db98:	240396fe 	.word	0x240396fe

9001db9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001db9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001dba0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001dba4:	4688      	mov	r8, r1
9001dba6:	4614      	mov	r4, r2
9001dba8:	461d      	mov	r5, r3
9001dbaa:	9e08      	ldr	r6, [sp, #32]
9001dbac:	2f00      	cmp	r7, #0
9001dbae:	f000 80ab 	beq.w	9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dbb2:	4618      	mov	r0, r3
9001dbb4:	f7f3 fa57 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001dbb8:	2800      	cmp	r0, #0
9001dbba:	f040 80a5 	bne.w	9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dbbe:	f9b5 1000 	ldrsh.w	r1, [r5]
9001dbc2:	2fff      	cmp	r7, #255	; 0xff
9001dbc4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001dbc8:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001dbcc:	fb04 1303 	mla	r3, r4, r3, r1
9001dbd0:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001dbd4:	eba4 0200 	sub.w	r2, r4, r0
9001dbd8:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001dbdc:	fb04 f505 	mul.w	r5, r4, r5
9001dbe0:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001dbe4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001dbe8:	d04a      	beq.n	9001dc80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001dbea:	b2bc      	uxth	r4, r7
9001dbec:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001dbf0:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001dbf4:	fa5f f788 	uxtb.w	r7, r8
9001dbf8:	b2f3      	uxtb	r3, r6
9001dbfa:	0040      	lsls	r0, r0, #1
9001dbfc:	fb0e fe04 	mul.w	lr, lr, r4
9001dc00:	4367      	muls	r7, r4
9001dc02:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001dc06:	4363      	muls	r3, r4
9001dc08:	fa1f fc8c 	uxth.w	ip, ip
9001dc0c:	42a9      	cmp	r1, r5
9001dc0e:	d27b      	bcs.n	9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dc10:	eb01 0900 	add.w	r9, r1, r0
9001dc14:	4549      	cmp	r1, r9
9001dc16:	d231      	bcs.n	9001dc7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001dc18:	880a      	ldrh	r2, [r1, #0]
9001dc1a:	1214      	asrs	r4, r2, #8
9001dc1c:	10d6      	asrs	r6, r2, #3
9001dc1e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001dc22:	00d2      	lsls	r2, r2, #3
9001dc24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001dc28:	b2d2      	uxtb	r2, r2
9001dc2a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001dc2e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dc32:	fb14 f40c 	smulbb	r4, r4, ip
9001dc36:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001dc3a:	fb12 f20c 	smulbb	r2, r2, ip
9001dc3e:	fb16 f60c 	smulbb	r6, r6, ip
9001dc42:	4474      	add	r4, lr
9001dc44:	441a      	add	r2, r3
9001dc46:	b2a4      	uxth	r4, r4
9001dc48:	443e      	add	r6, r7
9001dc4a:	b292      	uxth	r2, r2
9001dc4c:	f104 0a01 	add.w	sl, r4, #1
9001dc50:	b2b6      	uxth	r6, r6
9001dc52:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001dc56:	f102 0a01 	add.w	sl, r2, #1
9001dc5a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001dc5e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001dc62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dc66:	4322      	orrs	r2, r4
9001dc68:	1c74      	adds	r4, r6, #1
9001dc6a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001dc6e:	0976      	lsrs	r6, r6, #5
9001dc70:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001dc74:	4332      	orrs	r2, r6
9001dc76:	f821 2b02 	strh.w	r2, [r1], #2
9001dc7a:	e7cb      	b.n	9001dc14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001dc7c:	4441      	add	r1, r8
9001dc7e:	e7c5      	b.n	9001dc0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001dc80:	0973      	lsrs	r3, r6, #5
9001dc82:	4f22      	ldr	r7, [pc, #136]	; (9001dd0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001dc84:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001dc88:	ea08 0707 	and.w	r7, r8, r7
9001dc8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001dc90:	433b      	orrs	r3, r7
9001dc92:	07e7      	lsls	r7, r4, #31
9001dc94:	ea43 0306 	orr.w	r3, r3, r6
9001dc98:	b29b      	uxth	r3, r3
9001dc9a:	d50b      	bpl.n	9001dcb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001dc9c:	0040      	lsls	r0, r0, #1
9001dc9e:	0052      	lsls	r2, r2, #1
9001dca0:	42a9      	cmp	r1, r5
9001dca2:	d231      	bcs.n	9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dca4:	180c      	adds	r4, r1, r0
9001dca6:	42a1      	cmp	r1, r4
9001dca8:	d202      	bcs.n	9001dcb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001dcaa:	f821 3b02 	strh.w	r3, [r1], #2
9001dcae:	e7fa      	b.n	9001dca6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001dcb0:	4411      	add	r1, r2
9001dcb2:	e7f5      	b.n	9001dca0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001dcb4:	078e      	lsls	r6, r1, #30
9001dcb6:	d008      	beq.n	9001dcca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001dcb8:	0066      	lsls	r6, r4, #1
9001dcba:	460a      	mov	r2, r1
9001dcbc:	42aa      	cmp	r2, r5
9001dcbe:	d202      	bcs.n	9001dcc6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001dcc0:	8013      	strh	r3, [r2, #0]
9001dcc2:	4432      	add	r2, r6
9001dcc4:	e7fa      	b.n	9001dcbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001dcc6:	3102      	adds	r1, #2
9001dcc8:	3801      	subs	r0, #1
9001dcca:	07c2      	lsls	r2, r0, #31
9001dccc:	d50b      	bpl.n	9001dce6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001dcce:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001dcd2:	0066      	lsls	r6, r4, #1
9001dcd4:	3a01      	subs	r2, #1
9001dcd6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001dcda:	42aa      	cmp	r2, r5
9001dcdc:	d202      	bcs.n	9001dce4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001dcde:	8013      	strh	r3, [r2, #0]
9001dce0:	4432      	add	r2, r6
9001dce2:	e7fa      	b.n	9001dcda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001dce4:	3801      	subs	r0, #1
9001dce6:	b178      	cbz	r0, 9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dce8:	1040      	asrs	r0, r0, #1
9001dcea:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001dcee:	0080      	lsls	r0, r0, #2
9001dcf0:	0064      	lsls	r4, r4, #1
9001dcf2:	42a9      	cmp	r1, r5
9001dcf4:	d208      	bcs.n	9001dd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001dcf6:	180e      	adds	r6, r1, r0
9001dcf8:	460a      	mov	r2, r1
9001dcfa:	42b2      	cmp	r2, r6
9001dcfc:	d202      	bcs.n	9001dd04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001dcfe:	f842 3b04 	str.w	r3, [r2], #4
9001dd02:	e7fa      	b.n	9001dcfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001dd04:	4421      	add	r1, r4
9001dd06:	e7f4      	b.n	9001dcf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001dd08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001dd0c:	00fff800 	.word	0x00fff800

9001dd10 <_ZN8touchgfx8LCD16bppC1Ev>:
9001dd10:	2200      	movs	r2, #0
9001dd12:	4912      	ldr	r1, [pc, #72]	; (9001dd5c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001dd14:	6042      	str	r2, [r0, #4]
9001dd16:	6001      	str	r1, [r0, #0]
9001dd18:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001dd1c:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001dd20:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001dd24:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001dd28:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001dd2c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001dd30:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001dd34:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001dd38:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001dd3c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001dd40:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001dd44:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001dd48:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001dd4c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001dd50:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001dd54:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001dd58:	4770      	bx	lr
9001dd5a:	bf00      	nop
9001dd5c:	9002be68 	.word	0x9002be68

9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001dd60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dd64:	b08d      	sub	sp, #52	; 0x34
9001dd66:	460d      	mov	r5, r1
9001dd68:	4604      	mov	r4, r0
9001dd6a:	4699      	mov	r9, r3
9001dd6c:	6808      	ldr	r0, [r1, #0]
9001dd6e:	ab08      	add	r3, sp, #32
9001dd70:	6849      	ldr	r1, [r1, #4]
9001dd72:	c303      	stmia	r3!, {r0, r1}
9001dd74:	6810      	ldr	r0, [r2, #0]
9001dd76:	ab0a      	add	r3, sp, #40	; 0x28
9001dd78:	6851      	ldr	r1, [r2, #4]
9001dd7a:	c303      	stmia	r3!, {r0, r1}
9001dd7c:	a808      	add	r0, sp, #32
9001dd7e:	f7f8 f9a3 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dd82:	4629      	mov	r1, r5
9001dd84:	a80a      	add	r0, sp, #40	; 0x28
9001dd86:	4d67      	ldr	r5, [pc, #412]	; (9001df24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001dd88:	f7f8 f9e2 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dd8c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001dd90:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001dd94:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001dd98:	6828      	ldr	r0, [r5, #0]
9001dd9a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001dd9e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001dda2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001dda6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001ddaa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001ddae:	440a      	add	r2, r1
9001ddb0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001ddb4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001ddb8:	4413      	add	r3, r2
9001ddba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001ddbe:	6803      	ldr	r3, [r0, #0]
9001ddc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ddc2:	4798      	blx	r3
9001ddc4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001ddc8:	d119      	bne.n	9001ddfe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001ddca:	f010 0f20 	tst.w	r0, #32
9001ddce:	6828      	ldr	r0, [r5, #0]
9001ddd0:	d018      	beq.n	9001de04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001ddd2:	2500      	movs	r5, #0
9001ddd4:	6801      	ldr	r1, [r0, #0]
9001ddd6:	b2b6      	uxth	r6, r6
9001ddd8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001dddc:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001dde0:	9601      	str	r6, [sp, #4]
9001dde2:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001dde6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001ddea:	9502      	str	r5, [sp, #8]
9001ddec:	fa1f f588 	uxth.w	r5, r8
9001ddf0:	9500      	str	r5, [sp, #0]
9001ddf2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001ddf4:	4621      	mov	r1, r4
9001ddf6:	47a8      	blx	r5
9001ddf8:	b00d      	add	sp, #52	; 0x34
9001ddfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ddfe:	f010 0f40 	tst.w	r0, #64	; 0x40
9001de02:	e7e4      	b.n	9001ddce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001de04:	6803      	ldr	r3, [r0, #0]
9001de06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001de08:	4798      	blx	r3
9001de0a:	4947      	ldr	r1, [pc, #284]	; (9001df28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001de0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001de10:	880b      	ldrh	r3, [r1, #0]
9001de12:	468a      	mov	sl, r1
9001de14:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001de18:	fb03 5202 	mla	r2, r3, r2, r5
9001de1c:	4373      	muls	r3, r6
9001de1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001de22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001de26:	9307      	str	r3, [sp, #28]
9001de28:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001de2c:	9306      	str	r3, [sp, #24]
9001de2e:	9b07      	ldr	r3, [sp, #28]
9001de30:	4298      	cmp	r0, r3
9001de32:	d270      	bcs.n	9001df16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001de34:	9b06      	ldr	r3, [sp, #24]
9001de36:	4621      	mov	r1, r4
9001de38:	eb00 0b03 	add.w	fp, r0, r3
9001de3c:	4558      	cmp	r0, fp
9001de3e:	d25d      	bcs.n	9001defc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001de40:	f851 4b04 	ldr.w	r4, [r1], #4
9001de44:	0e23      	lsrs	r3, r4, #24
9001de46:	d014      	beq.n	9001de72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001de48:	2bff      	cmp	r3, #255	; 0xff
9001de4a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001de4e:	d112      	bne.n	9001de76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001de50:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001de54:	d10f      	bne.n	9001de76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001de56:	0963      	lsrs	r3, r4, #5
9001de58:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001de5c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001de60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001de64:	f02c 0c07 	bic.w	ip, ip, #7
9001de68:	ea43 0c0c 	orr.w	ip, r3, ip
9001de6c:	ea4c 0404 	orr.w	r4, ip, r4
9001de70:	8004      	strh	r4, [r0, #0]
9001de72:	3002      	adds	r0, #2
9001de74:	e7e2      	b.n	9001de3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001de76:	fb09 f303 	mul.w	r3, r9, r3
9001de7a:	8807      	ldrh	r7, [r0, #0]
9001de7c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001de80:	fa5f fc8c 	uxtb.w	ip, ip
9001de84:	1c5a      	adds	r2, r3, #1
9001de86:	123e      	asrs	r6, r7, #8
9001de88:	10fd      	asrs	r5, r7, #3
9001de8a:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001de8e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001de92:	00ff      	lsls	r7, r7, #3
9001de94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001de98:	1212      	asrs	r2, r2, #8
9001de9a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001de9e:	b293      	uxth	r3, r2
9001dea0:	43d2      	mvns	r2, r2
9001dea2:	b2ff      	uxtb	r7, r7
9001dea4:	fb1e fe03 	smulbb	lr, lr, r3
9001dea8:	b2d2      	uxtb	r2, r2
9001deaa:	fb1c fc03 	smulbb	ip, ip, r3
9001deae:	b2e4      	uxtb	r4, r4
9001deb0:	fb06 e602 	mla	r6, r6, r2, lr
9001deb4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001deb8:	fb14 f403 	smulbb	r4, r4, r3
9001debc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001dec0:	b2b6      	uxth	r6, r6
9001dec2:	fb05 c502 	mla	r5, r5, r2, ip
9001dec6:	fb07 4702 	mla	r7, r7, r2, r4
9001deca:	f106 0e01 	add.w	lr, r6, #1
9001dece:	b2ad      	uxth	r5, r5
9001ded0:	b2bf      	uxth	r7, r7
9001ded2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001ded6:	f105 0c01 	add.w	ip, r5, #1
9001deda:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001dede:	1c7e      	adds	r6, r7, #1
9001dee0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001dee4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001dee8:	096d      	lsrs	r5, r5, #5
9001deea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001deee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001def2:	ea46 060e 	orr.w	r6, r6, lr
9001def6:	432e      	orrs	r6, r5
9001def8:	8006      	strh	r6, [r0, #0]
9001defa:	e7ba      	b.n	9001de72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001defc:	f8ba 3000 	ldrh.w	r3, [sl]
9001df00:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001df04:	eba3 0308 	sub.w	r3, r3, r8
9001df08:	eba4 0408 	sub.w	r4, r4, r8
9001df0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001df10:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001df14:	e78b      	b.n	9001de2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001df16:	4b03      	ldr	r3, [pc, #12]	; (9001df24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001df18:	6818      	ldr	r0, [r3, #0]
9001df1a:	6803      	ldr	r3, [r0, #0]
9001df1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001df1e:	4798      	blx	r3
9001df20:	e76a      	b.n	9001ddf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001df22:	bf00      	nop
9001df24:	24039704 	.word	0x24039704
9001df28:	240396fe 	.word	0x240396fe

9001df2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001df2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001df30:	b085      	sub	sp, #20
9001df32:	6810      	ldr	r0, [r2, #0]
9001df34:	460c      	mov	r4, r1
9001df36:	6851      	ldr	r1, [r2, #4]
9001df38:	466d      	mov	r5, sp
9001df3a:	4616      	mov	r6, r2
9001df3c:	c503      	stmia	r5!, {r0, r1}
9001df3e:	6818      	ldr	r0, [r3, #0]
9001df40:	6859      	ldr	r1, [r3, #4]
9001df42:	c503      	stmia	r5!, {r0, r1}
9001df44:	4668      	mov	r0, sp
9001df46:	4d2e      	ldr	r5, [pc, #184]	; (9001e000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001df48:	f7f8 f8be 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001df4c:	4631      	mov	r1, r6
9001df4e:	a802      	add	r0, sp, #8
9001df50:	4e2c      	ldr	r6, [pc, #176]	; (9001e004 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001df52:	f7f8 f8fd 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001df56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001df5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001df5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001df62:	6828      	ldr	r0, [r5, #0]
9001df64:	fb11 2103 	smlabb	r1, r1, r3, r2
9001df68:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001df6c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001df70:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001df74:	f8bd 1000 	ldrh.w	r1, [sp]
9001df78:	440a      	add	r2, r1
9001df7a:	f8ad 2008 	strh.w	r2, [sp, #8]
9001df7e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001df82:	4413      	add	r3, r2
9001df84:	f8ad 300a 	strh.w	r3, [sp, #10]
9001df88:	6803      	ldr	r3, [r0, #0]
9001df8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001df8c:	4798      	blx	r3
9001df8e:	8833      	ldrh	r3, [r6, #0]
9001df90:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001df94:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001df98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001df9c:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001e008 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001dfa0:	fb03 1202 	mla	r2, r3, r2, r1
9001dfa4:	fb08 f303 	mul.w	r3, r8, r3
9001dfa8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dfac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dfb0:	4298      	cmp	r0, r3
9001dfb2:	d21d      	bcs.n	9001dff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001dfb4:	eb00 080c 	add.w	r8, r0, ip
9001dfb8:	4540      	cmp	r0, r8
9001dfba:	d20f      	bcs.n	9001dfdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001dfbc:	f854 1b04 	ldr.w	r1, [r4], #4
9001dfc0:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001dfc4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001dfc8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001dfcc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001dfd0:	ea42 0209 	orr.w	r2, r2, r9
9001dfd4:	430a      	orrs	r2, r1
9001dfd6:	f820 2b02 	strh.w	r2, [r0], #2
9001dfda:	e7ed      	b.n	9001dfb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001dfdc:	8832      	ldrh	r2, [r6, #0]
9001dfde:	1bd2      	subs	r2, r2, r7
9001dfe0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dfe4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001dfe8:	1bd2      	subs	r2, r2, r7
9001dfea:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001dfee:	e7df      	b.n	9001dfb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001dff0:	6828      	ldr	r0, [r5, #0]
9001dff2:	6803      	ldr	r3, [r0, #0]
9001dff4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dff6:	4798      	blx	r3
9001dff8:	b005      	add	sp, #20
9001dffa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001dffe:	bf00      	nop
9001e000:	24039704 	.word	0x24039704
9001e004:	240396fe 	.word	0x240396fe
9001e008:	fffff800 	.word	0xfffff800

9001e00c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001e00c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e010:	b08e      	sub	sp, #56	; 0x38
9001e012:	460e      	mov	r6, r1
9001e014:	4604      	mov	r4, r0
9001e016:	461d      	mov	r5, r3
9001e018:	6808      	ldr	r0, [r1, #0]
9001e01a:	ab0a      	add	r3, sp, #40	; 0x28
9001e01c:	6849      	ldr	r1, [r1, #4]
9001e01e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001e1f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001e022:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001e1f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001e026:	c303      	stmia	r3!, {r0, r1}
9001e028:	6810      	ldr	r0, [r2, #0]
9001e02a:	ab0c      	add	r3, sp, #48	; 0x30
9001e02c:	6851      	ldr	r1, [r2, #4]
9001e02e:	c303      	stmia	r3!, {r0, r1}
9001e030:	a80a      	add	r0, sp, #40	; 0x28
9001e032:	f7f8 f849 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e036:	4631      	mov	r1, r6
9001e038:	a80c      	add	r0, sp, #48	; 0x30
9001e03a:	f7f8 f889 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e03e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001e042:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001e046:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001e04a:	f8d8 0000 	ldr.w	r0, [r8]
9001e04e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e052:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001e056:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e05a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001e05e:	440c      	add	r4, r1
9001e060:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001e064:	440a      	add	r2, r1
9001e066:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001e06a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001e06e:	4413      	add	r3, r2
9001e070:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001e074:	6803      	ldr	r3, [r0, #0]
9001e076:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e078:	4798      	blx	r3
9001e07a:	2dff      	cmp	r5, #255	; 0xff
9001e07c:	d124      	bne.n	9001e0c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001e07e:	f010 0f01 	tst.w	r0, #1
9001e082:	f8d8 0000 	ldr.w	r0, [r8]
9001e086:	d022      	beq.n	9001e0ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001e088:	2100      	movs	r1, #0
9001e08a:	f04f 0e01 	mov.w	lr, #1
9001e08e:	f8d0 c000 	ldr.w	ip, [r0]
9001e092:	b2b6      	uxth	r6, r6
9001e094:	f8cd e018 	str.w	lr, [sp, #24]
9001e098:	b2bf      	uxth	r7, r7
9001e09a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001e09e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001e0a2:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001e0a6:	f8b9 e000 	ldrh.w	lr, [r9]
9001e0aa:	9503      	str	r5, [sp, #12]
9001e0ac:	9601      	str	r6, [sp, #4]
9001e0ae:	9700      	str	r7, [sp, #0]
9001e0b0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001e0b4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001e0b8:	9102      	str	r1, [sp, #8]
9001e0ba:	4621      	mov	r1, r4
9001e0bc:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001e0c0:	47a8      	blx	r5
9001e0c2:	b00e      	add	sp, #56	; 0x38
9001e0c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e0c8:	f010 0f04 	tst.w	r0, #4
9001e0cc:	e7d9      	b.n	9001e082 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001e0ce:	6803      	ldr	r3, [r0, #0]
9001e0d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e0d2:	4798      	blx	r3
9001e0d4:	f8b9 3000 	ldrh.w	r3, [r9]
9001e0d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e0dc:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001e0e0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001e0e4:	435e      	muls	r6, r3
9001e0e6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001e0ea:	2dff      	cmp	r5, #255	; 0xff
9001e0ec:	fb03 1202 	mla	r2, r3, r2, r1
9001e0f0:	ebac 0c07 	sub.w	ip, ip, r7
9001e0f4:	eba3 0707 	sub.w	r7, r3, r7
9001e0f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e0fc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001e100:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e104:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001e108:	d049      	beq.n	9001e19e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001e10a:	43eb      	mvns	r3, r5
9001e10c:	fa1f f985 	uxth.w	r9, r5
9001e110:	b2db      	uxtb	r3, r3
9001e112:	42b0      	cmp	r0, r6
9001e114:	d266      	bcs.n	9001e1e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e116:	eb00 0a0e 	add.w	sl, r0, lr
9001e11a:	4550      	cmp	r0, sl
9001e11c:	4621      	mov	r1, r4
9001e11e:	f104 0403 	add.w	r4, r4, #3
9001e122:	d25b      	bcs.n	9001e1dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001e124:	8802      	ldrh	r2, [r0, #0]
9001e126:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e12a:	ea4f 2822 	mov.w	r8, r2, asr #8
9001e12e:	fb11 f109 	smulbb	r1, r1, r9
9001e132:	10d5      	asrs	r5, r2, #3
9001e134:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001e138:	00d2      	lsls	r2, r2, #3
9001e13a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e13e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001e142:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e146:	fb08 1803 	mla	r8, r8, r3, r1
9001e14a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001e14e:	b2d2      	uxtb	r2, r2
9001e150:	fb11 f109 	smulbb	r1, r1, r9
9001e154:	fa1f f888 	uxth.w	r8, r8
9001e158:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e15c:	fb05 1503 	mla	r5, r5, r3, r1
9001e160:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e164:	fb11 f109 	smulbb	r1, r1, r9
9001e168:	b2ad      	uxth	r5, r5
9001e16a:	fb02 1203 	mla	r2, r2, r3, r1
9001e16e:	f108 0101 	add.w	r1, r8, #1
9001e172:	b292      	uxth	r2, r2
9001e174:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001e178:	1c51      	adds	r1, r2, #1
9001e17a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001e17e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e182:	1c69      	adds	r1, r5, #1
9001e184:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001e188:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e18c:	096d      	lsrs	r5, r5, #5
9001e18e:	ea42 0208 	orr.w	r2, r2, r8
9001e192:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e196:	432a      	orrs	r2, r5
9001e198:	f820 2b02 	strh.w	r2, [r0], #2
9001e19c:	e7bd      	b.n	9001e11a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001e19e:	4a14      	ldr	r2, [pc, #80]	; (9001e1f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001e1a0:	42b0      	cmp	r0, r6
9001e1a2:	d21f      	bcs.n	9001e1e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e1a4:	eb00 050e 	add.w	r5, r0, lr
9001e1a8:	42a8      	cmp	r0, r5
9001e1aa:	4621      	mov	r1, r4
9001e1ac:	f104 0403 	add.w	r4, r4, #3
9001e1b0:	d210      	bcs.n	9001e1d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001e1b2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001e1b6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e1ba:	00db      	lsls	r3, r3, #3
9001e1bc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001e1c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e1c4:	430b      	orrs	r3, r1
9001e1c6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e1ca:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001e1ce:	f820 3b02 	strh.w	r3, [r0], #2
9001e1d2:	e7e9      	b.n	9001e1a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001e1d4:	4438      	add	r0, r7
9001e1d6:	eb01 040c 	add.w	r4, r1, ip
9001e1da:	e7e1      	b.n	9001e1a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001e1dc:	4438      	add	r0, r7
9001e1de:	eb01 040c 	add.w	r4, r1, ip
9001e1e2:	e796      	b.n	9001e112 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001e1e4:	4b03      	ldr	r3, [pc, #12]	; (9001e1f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001e1e6:	6818      	ldr	r0, [r3, #0]
9001e1e8:	6803      	ldr	r3, [r0, #0]
9001e1ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e1ec:	4798      	blx	r3
9001e1ee:	e768      	b.n	9001e0c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001e1f0:	fffff800 	.word	0xfffff800
9001e1f4:	24039704 	.word	0x24039704
9001e1f8:	240396fe 	.word	0x240396fe

9001e1fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001e1fc:	b4f0      	push	{r4, r5, r6, r7}
9001e1fe:	4616      	mov	r6, r2
9001e200:	461c      	mov	r4, r3
9001e202:	460d      	mov	r5, r1
9001e204:	9a04      	ldr	r2, [sp, #16]
9001e206:	2e01      	cmp	r6, #1
9001e208:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001e20c:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001e210:	d012      	beq.n	9001e238 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001e212:	d303      	bcc.n	9001e21c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001e214:	2e02      	cmp	r6, #2
9001e216:	d00a      	beq.n	9001e22e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001e218:	bcf0      	pop	{r4, r5, r6, r7}
9001e21a:	4770      	bx	lr
9001e21c:	6805      	ldr	r5, [r0, #0]
9001e21e:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001e222:	68ed      	ldr	r5, [r5, #12]
9001e224:	4613      	mov	r3, r2
9001e226:	4622      	mov	r2, r4
9001e228:	46ac      	mov	ip, r5
9001e22a:	bcf0      	pop	{r4, r5, r6, r7}
9001e22c:	4760      	bx	ip
9001e22e:	4621      	mov	r1, r4
9001e230:	4628      	mov	r0, r5
9001e232:	bcf0      	pop	{r4, r5, r6, r7}
9001e234:	f7ff bd94 	b.w	9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e238:	4621      	mov	r1, r4
9001e23a:	4628      	mov	r0, r5
9001e23c:	bcf0      	pop	{r4, r5, r6, r7}
9001e23e:	f7ff bee5 	b.w	9001e00c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001e244 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001e244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e248:	b093      	sub	sp, #76	; 0x4c
9001e24a:	4681      	mov	r9, r0
9001e24c:	4688      	mov	r8, r1
9001e24e:	6810      	ldr	r0, [r2, #0]
9001e250:	6851      	ldr	r1, [r2, #4]
9001e252:	ac0e      	add	r4, sp, #56	; 0x38
9001e254:	4616      	mov	r6, r2
9001e256:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001e25a:	4f6b      	ldr	r7, [pc, #428]	; (9001e408 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001e25c:	c403      	stmia	r4!, {r0, r1}
9001e25e:	6818      	ldr	r0, [r3, #0]
9001e260:	ac10      	add	r4, sp, #64	; 0x40
9001e262:	6859      	ldr	r1, [r3, #4]
9001e264:	c403      	stmia	r4!, {r0, r1}
9001e266:	a80e      	add	r0, sp, #56	; 0x38
9001e268:	f7f7 ff2e 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e26c:	4631      	mov	r1, r6
9001e26e:	a810      	add	r0, sp, #64	; 0x40
9001e270:	4e66      	ldr	r6, [pc, #408]	; (9001e40c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e272:	f7f7 ff6d 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e276:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001e27a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001e27e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001e282:	6830      	ldr	r0, [r6, #0]
9001e284:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e288:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001e28c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001e290:	4489      	add	r9, r1
9001e292:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001e296:	440a      	add	r2, r1
9001e298:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001e29c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001e2a0:	4413      	add	r3, r2
9001e2a2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001e2a6:	6803      	ldr	r3, [r0, #0]
9001e2a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e2aa:	4798      	blx	r3
9001e2ac:	f010 0f80 	tst.w	r0, #128	; 0x80
9001e2b0:	6830      	ldr	r0, [r6, #0]
9001e2b2:	d01d      	beq.n	9001e2f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001e2b4:	2200      	movs	r2, #0
9001e2b6:	6801      	ldr	r1, [r0, #0]
9001e2b8:	b2a4      	uxth	r4, r4
9001e2ba:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001e2be:	b2ad      	uxth	r5, r5
9001e2c0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e2c4:	220b      	movs	r2, #11
9001e2c6:	9207      	str	r2, [sp, #28]
9001e2c8:	883a      	ldrh	r2, [r7, #0]
9001e2ca:	9502      	str	r5, [sp, #8]
9001e2cc:	9206      	str	r2, [sp, #24]
9001e2ce:	2201      	movs	r2, #1
9001e2d0:	9401      	str	r4, [sp, #4]
9001e2d2:	e9cd a204 	strd	sl, r2, [sp, #16]
9001e2d6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001e2da:	9203      	str	r2, [sp, #12]
9001e2dc:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001e2e0:	9200      	str	r2, [sp, #0]
9001e2e2:	4642      	mov	r2, r8
9001e2e4:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001e2e6:	4649      	mov	r1, r9
9001e2e8:	47a0      	blx	r4
9001e2ea:	b013      	add	sp, #76	; 0x4c
9001e2ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e2f0:	6803      	ldr	r3, [r0, #0]
9001e2f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e2f4:	4798      	blx	r3
9001e2f6:	883b      	ldrh	r3, [r7, #0]
9001e2f8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001e2fc:	f04f 0e04 	mov.w	lr, #4
9001e300:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001e304:	435d      	muls	r5, r3
9001e306:	fb03 1202 	mla	r2, r3, r2, r1
9001e30a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e30e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001e312:	920c      	str	r2, [sp, #48]	; 0x30
9001e314:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001e318:	1b12      	subs	r2, r2, r4
9001e31a:	920d      	str	r2, [sp, #52]	; 0x34
9001e31c:	0062      	lsls	r2, r4, #1
9001e31e:	1b1c      	subs	r4, r3, r4
9001e320:	920a      	str	r2, [sp, #40]	; 0x28
9001e322:	0063      	lsls	r3, r4, #1
9001e324:	930b      	str	r3, [sp, #44]	; 0x2c
9001e326:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e328:	4298      	cmp	r0, r3
9001e32a:	d266      	bcs.n	9001e3fa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001e32c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e32e:	eb00 0b03 	add.w	fp, r0, r3
9001e332:	4558      	cmp	r0, fp
9001e334:	d25c      	bcs.n	9001e3f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001e336:	f819 3b01 	ldrb.w	r3, [r9], #1
9001e33a:	fb1e e303 	smlabb	r3, lr, r3, lr
9001e33e:	f858 2003 	ldr.w	r2, [r8, r3]
9001e342:	0e11      	lsrs	r1, r2, #24
9001e344:	d012      	beq.n	9001e36c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e346:	29ff      	cmp	r1, #255	; 0xff
9001e348:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001e34c:	d110      	bne.n	9001e370 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e34e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001e352:	d10d      	bne.n	9001e370 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e354:	0953      	lsrs	r3, r2, #5
9001e356:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001e35a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e35e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e362:	f027 0707 	bic.w	r7, r7, #7
9001e366:	431f      	orrs	r7, r3
9001e368:	433a      	orrs	r2, r7
9001e36a:	8002      	strh	r2, [r0, #0]
9001e36c:	3002      	adds	r0, #2
9001e36e:	e7e0      	b.n	9001e332 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001e370:	fb0a f101 	mul.w	r1, sl, r1
9001e374:	8806      	ldrh	r6, [r0, #0]
9001e376:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001e37a:	b2d2      	uxtb	r2, r2
9001e37c:	1c4b      	adds	r3, r1, #1
9001e37e:	1235      	asrs	r5, r6, #8
9001e380:	10f4      	asrs	r4, r6, #3
9001e382:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001e386:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e38a:	00f6      	lsls	r6, r6, #3
9001e38c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001e390:	121b      	asrs	r3, r3, #8
9001e392:	b2f6      	uxtb	r6, r6
9001e394:	b299      	uxth	r1, r3
9001e396:	43db      	mvns	r3, r3
9001e398:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e39c:	fb1c fc01 	smulbb	ip, ip, r1
9001e3a0:	b2db      	uxtb	r3, r3
9001e3a2:	fb12 f201 	smulbb	r2, r2, r1
9001e3a6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e3aa:	fb05 c503 	mla	r5, r5, r3, ip
9001e3ae:	b2ff      	uxtb	r7, r7
9001e3b0:	fb06 2203 	mla	r2, r6, r3, r2
9001e3b4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001e3b8:	fb17 f701 	smulbb	r7, r7, r1
9001e3bc:	b2ad      	uxth	r5, r5
9001e3be:	b292      	uxth	r2, r2
9001e3c0:	fb04 7403 	mla	r4, r4, r3, r7
9001e3c4:	f105 0c01 	add.w	ip, r5, #1
9001e3c8:	1c57      	adds	r7, r2, #1
9001e3ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e3ce:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e3d2:	b2a4      	uxth	r4, r4
9001e3d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e3d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e3dc:	433d      	orrs	r5, r7
9001e3de:	1c67      	adds	r7, r4, #1
9001e3e0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001e3e4:	0964      	lsrs	r4, r4, #5
9001e3e6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001e3ea:	4325      	orrs	r5, r4
9001e3ec:	8005      	strh	r5, [r0, #0]
9001e3ee:	e7bd      	b.n	9001e36c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e3f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001e3f2:	4418      	add	r0, r3
9001e3f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e3f6:	4499      	add	r9, r3
9001e3f8:	e795      	b.n	9001e326 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001e3fa:	4b04      	ldr	r3, [pc, #16]	; (9001e40c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e3fc:	6818      	ldr	r0, [r3, #0]
9001e3fe:	6803      	ldr	r3, [r0, #0]
9001e400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e402:	4798      	blx	r3
9001e404:	e771      	b.n	9001e2ea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001e406:	bf00      	nop
9001e408:	240396fe 	.word	0x240396fe
9001e40c:	24039704 	.word	0x24039704

9001e410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001e410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e414:	b087      	sub	sp, #28
9001e416:	4680      	mov	r8, r0
9001e418:	460d      	mov	r5, r1
9001e41a:	4614      	mov	r4, r2
9001e41c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001e420:	2e00      	cmp	r6, #0
9001e422:	f000 80b9 	beq.w	9001e598 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001e426:	6810      	ldr	r0, [r2, #0]
9001e428:	af02      	add	r7, sp, #8
9001e42a:	6851      	ldr	r1, [r2, #4]
9001e42c:	c703      	stmia	r7!, {r0, r1}
9001e42e:	6818      	ldr	r0, [r3, #0]
9001e430:	af04      	add	r7, sp, #16
9001e432:	6859      	ldr	r1, [r3, #4]
9001e434:	c703      	stmia	r7!, {r0, r1}
9001e436:	a802      	add	r0, sp, #8
9001e438:	f7f7 fe46 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e43c:	4621      	mov	r1, r4
9001e43e:	a804      	add	r0, sp, #16
9001e440:	f7f7 fe86 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e444:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e448:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e44c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001e450:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001e454:	fb14 2103 	smlabb	r1, r4, r3, r2
9001e458:	eb08 0401 	add.w	r4, r8, r1
9001e45c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e460:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e464:	440a      	add	r2, r1
9001e466:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001e46a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e46e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e472:	4413      	add	r3, r2
9001e474:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e478:	4b49      	ldr	r3, [pc, #292]	; (9001e5a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e47a:	6818      	ldr	r0, [r3, #0]
9001e47c:	6803      	ldr	r3, [r0, #0]
9001e47e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e480:	4798      	blx	r3
9001e482:	4b48      	ldr	r3, [pc, #288]	; (9001e5a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001e484:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001e488:	2eff      	cmp	r6, #255	; 0xff
9001e48a:	881a      	ldrh	r2, [r3, #0]
9001e48c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001e490:	fb02 c101 	mla	r1, r2, r1, ip
9001e494:	fb02 f207 	mul.w	r2, r2, r7
9001e498:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e49c:	f105 0104 	add.w	r1, r5, #4
9001e4a0:	461d      	mov	r5, r3
9001e4a2:	d05a      	beq.n	9001e55a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001e4a4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001e4a8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e4ac:	b2b6      	uxth	r6, r6
9001e4ae:	9301      	str	r3, [sp, #4]
9001e4b0:	fa1f fe8e 	uxth.w	lr, lr
9001e4b4:	4282      	cmp	r2, r0
9001e4b6:	d96a      	bls.n	9001e58e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e4b8:	eb00 0b0a 	add.w	fp, r0, sl
9001e4bc:	4583      	cmp	fp, r0
9001e4be:	d940      	bls.n	9001e542 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001e4c0:	8805      	ldrh	r5, [r0, #0]
9001e4c2:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e4c6:	122f      	asrs	r7, r5, #8
9001e4c8:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e4cc:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e4d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e4d4:	00ed      	lsls	r5, r5, #3
9001e4d6:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e4da:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e4de:	fb17 f70e 	smulbb	r7, r7, lr
9001e4e2:	b2ed      	uxtb	r5, r5
9001e4e4:	fb19 f90e 	smulbb	r9, r9, lr
9001e4e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e4ec:	fb15 f50e 	smulbb	r5, r5, lr
9001e4f0:	fb0c 7c06 	mla	ip, ip, r6, r7
9001e4f4:	10df      	asrs	r7, r3, #3
9001e4f6:	00db      	lsls	r3, r3, #3
9001e4f8:	fa1f fc8c 	uxth.w	ip, ip
9001e4fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e500:	b2db      	uxtb	r3, r3
9001e502:	fb07 9706 	mla	r7, r7, r6, r9
9001e506:	f10c 0901 	add.w	r9, ip, #1
9001e50a:	fb03 5306 	mla	r3, r3, r6, r5
9001e50e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001e512:	b29b      	uxth	r3, r3
9001e514:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001e518:	b2bf      	uxth	r7, r7
9001e51a:	f103 0c01 	add.w	ip, r3, #1
9001e51e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e522:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e526:	ea4c 0c09 	orr.w	ip, ip, r9
9001e52a:	f107 0901 	add.w	r9, r7, #1
9001e52e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001e532:	097f      	lsrs	r7, r7, #5
9001e534:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001e538:	ea4c 0c07 	orr.w	ip, ip, r7
9001e53c:	f820 cb02 	strh.w	ip, [r0], #2
9001e540:	e7bc      	b.n	9001e4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001e542:	9b01      	ldr	r3, [sp, #4]
9001e544:	881b      	ldrh	r3, [r3, #0]
9001e546:	eba3 0308 	sub.w	r3, r3, r8
9001e54a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e54e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e552:	eba3 0308 	sub.w	r3, r3, r8
9001e556:	441c      	add	r4, r3
9001e558:	e7ac      	b.n	9001e4b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001e55a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e55e:	4282      	cmp	r2, r0
9001e560:	d915      	bls.n	9001e58e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e562:	eb00 060a 	add.w	r6, r0, sl
9001e566:	4286      	cmp	r6, r0
9001e568:	d906      	bls.n	9001e578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001e56a:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e56e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e572:	f820 3b02 	strh.w	r3, [r0], #2
9001e576:	e7f6      	b.n	9001e566 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001e578:	882b      	ldrh	r3, [r5, #0]
9001e57a:	eba3 0308 	sub.w	r3, r3, r8
9001e57e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e582:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e586:	eba3 0308 	sub.w	r3, r3, r8
9001e58a:	441c      	add	r4, r3
9001e58c:	e7e7      	b.n	9001e55e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001e58e:	4b04      	ldr	r3, [pc, #16]	; (9001e5a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e590:	6818      	ldr	r0, [r3, #0]
9001e592:	6803      	ldr	r3, [r0, #0]
9001e594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e596:	4798      	blx	r3
9001e598:	b007      	add	sp, #28
9001e59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e59e:	bf00      	nop
9001e5a0:	24039704 	.word	0x24039704
9001e5a4:	240396fe 	.word	0x240396fe

9001e5a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001e5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e5ac:	b091      	sub	sp, #68	; 0x44
9001e5ae:	4680      	mov	r8, r0
9001e5b0:	460f      	mov	r7, r1
9001e5b2:	4614      	mov	r4, r2
9001e5b4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001e5b8:	2d00      	cmp	r5, #0
9001e5ba:	d051      	beq.n	9001e660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e5bc:	6810      	ldr	r0, [r2, #0]
9001e5be:	ae0c      	add	r6, sp, #48	; 0x30
9001e5c0:	6851      	ldr	r1, [r2, #4]
9001e5c2:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001e7c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001e5c6:	c603      	stmia	r6!, {r0, r1}
9001e5c8:	6818      	ldr	r0, [r3, #0]
9001e5ca:	ae0e      	add	r6, sp, #56	; 0x38
9001e5cc:	6859      	ldr	r1, [r3, #4]
9001e5ce:	c603      	stmia	r6!, {r0, r1}
9001e5d0:	a80c      	add	r0, sp, #48	; 0x30
9001e5d2:	f7f7 fd79 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e5d6:	4621      	mov	r1, r4
9001e5d8:	a80e      	add	r0, sp, #56	; 0x38
9001e5da:	f7f7 fdb9 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e5de:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001e5e2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001e5e6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001e5ea:	f8d9 0000 	ldr.w	r0, [r9]
9001e5ee:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e5f2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001e5f6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001e5fa:	eb08 0401 	add.w	r4, r8, r1
9001e5fe:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001e602:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001e7c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001e606:	440a      	add	r2, r1
9001e608:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001e60c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001e610:	4413      	add	r3, r2
9001e612:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001e616:	6803      	ldr	r3, [r0, #0]
9001e618:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e61a:	4798      	blx	r3
9001e61c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001e620:	f8d9 0000 	ldr.w	r0, [r9]
9001e624:	d01f      	beq.n	9001e666 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001e626:	2200      	movs	r2, #0
9001e628:	6801      	ldr	r1, [r0, #0]
9001e62a:	b2b6      	uxth	r6, r6
9001e62c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001e630:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e634:	220b      	movs	r2, #11
9001e636:	9207      	str	r2, [sp, #28]
9001e638:	f8b8 2000 	ldrh.w	r2, [r8]
9001e63c:	9601      	str	r6, [sp, #4]
9001e63e:	9206      	str	r2, [sp, #24]
9001e640:	2201      	movs	r2, #1
9001e642:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001e646:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001e64a:	9203      	str	r2, [sp, #12]
9001e64c:	fa1f f28a 	uxth.w	r2, sl
9001e650:	9202      	str	r2, [sp, #8]
9001e652:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001e656:	9200      	str	r2, [sp, #0]
9001e658:	463a      	mov	r2, r7
9001e65a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001e65c:	4621      	mov	r1, r4
9001e65e:	47a8      	blx	r5
9001e660:	b011      	add	sp, #68	; 0x44
9001e662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e666:	6803      	ldr	r3, [r0, #0]
9001e668:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001e66c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e66e:	4798      	blx	r3
9001e670:	f8b8 2000 	ldrh.w	r2, [r8]
9001e674:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001e678:	2dff      	cmp	r5, #255	; 0xff
9001e67a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001e67e:	fb0a fa02 	mul.w	sl, sl, r2
9001e682:	fb02 1303 	mla	r3, r2, r3, r1
9001e686:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e68a:	d062      	beq.n	9001e752 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001e68c:	ea6f 0c05 	mvn.w	ip, r5
9001e690:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001e694:	b2ad      	uxth	r5, r5
9001e696:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001e69a:	fa5f fc8c 	uxtb.w	ip, ip
9001e69e:	930a      	str	r3, [sp, #40]	; 0x28
9001e6a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e6a2:	4298      	cmp	r0, r3
9001e6a4:	f080 8085 	bcs.w	9001e7b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e6a8:	eb00 0b09 	add.w	fp, r0, r9
9001e6ac:	4558      	cmp	r0, fp
9001e6ae:	d246      	bcs.n	9001e73e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001e6b0:	f814 eb01 	ldrb.w	lr, [r4], #1
9001e6b4:	2303      	movs	r3, #3
9001e6b6:	2204      	movs	r2, #4
9001e6b8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001e6bc:	8803      	ldrh	r3, [r0, #0]
9001e6be:	eb07 0a0e 	add.w	sl, r7, lr
9001e6c2:	1219      	asrs	r1, r3, #8
9001e6c4:	10da      	asrs	r2, r3, #3
9001e6c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e6ca:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001e6ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e6d2:	00db      	lsls	r3, r3, #3
9001e6d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e6d8:	fb18 f805 	smulbb	r8, r8, r5
9001e6dc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001e6e0:	fb1e fe05 	smulbb	lr, lr, r5
9001e6e4:	b2db      	uxtb	r3, r3
9001e6e6:	fb01 810c 	mla	r1, r1, ip, r8
9001e6ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001e6ee:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001e6f2:	fb18 f805 	smulbb	r8, r8, r5
9001e6f6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001e6fa:	b289      	uxth	r1, r1
9001e6fc:	fb02 820c 	mla	r2, r2, ip, r8
9001e700:	fb03 e30c 	mla	r3, r3, ip, lr
9001e704:	f101 0801 	add.w	r8, r1, #1
9001e708:	b292      	uxth	r2, r2
9001e70a:	b29b      	uxth	r3, r3
9001e70c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001e710:	f102 0801 	add.w	r8, r2, #1
9001e714:	f103 0e01 	add.w	lr, r3, #1
9001e718:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001e71c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001e720:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001e724:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e728:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001e72c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001e730:	ea4e 0101 	orr.w	r1, lr, r1
9001e734:	ea41 0108 	orr.w	r1, r1, r8
9001e738:	f820 1b02 	strh.w	r1, [r0], #2
9001e73c:	e7b6      	b.n	9001e6ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001e73e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001e740:	881b      	ldrh	r3, [r3, #0]
9001e742:	1b9b      	subs	r3, r3, r6
9001e744:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e748:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001e74c:	1b9b      	subs	r3, r3, r6
9001e74e:	441c      	add	r4, r3
9001e750:	e7a6      	b.n	9001e6a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001e752:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001e756:	2203      	movs	r2, #3
9001e758:	2504      	movs	r5, #4
9001e75a:	4919      	ldr	r1, [pc, #100]	; (9001e7c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001e75c:	4550      	cmp	r0, sl
9001e75e:	d228      	bcs.n	9001e7b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e760:	eb00 0c09 	add.w	ip, r0, r9
9001e764:	4560      	cmp	r0, ip
9001e766:	4623      	mov	r3, r4
9001e768:	d219      	bcs.n	9001e79e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001e76a:	f893 e000 	ldrb.w	lr, [r3]
9001e76e:	3401      	adds	r4, #1
9001e770:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001e774:	eb07 0b0e 	add.w	fp, r7, lr
9001e778:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e77c:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001e780:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e784:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001e788:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001e78c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001e790:	ea43 030b 	orr.w	r3, r3, fp
9001e794:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001e798:	f820 3b02 	strh.w	r3, [r0], #2
9001e79c:	e7e2      	b.n	9001e764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001e79e:	f8b8 3000 	ldrh.w	r3, [r8]
9001e7a2:	1b9b      	subs	r3, r3, r6
9001e7a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e7a8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001e7ac:	1b9b      	subs	r3, r3, r6
9001e7ae:	441c      	add	r4, r3
9001e7b0:	e7d4      	b.n	9001e75c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001e7b2:	4b04      	ldr	r3, [pc, #16]	; (9001e7c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001e7b4:	6818      	ldr	r0, [r3, #0]
9001e7b6:	6803      	ldr	r3, [r0, #0]
9001e7b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e7ba:	4798      	blx	r3
9001e7bc:	e750      	b.n	9001e660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e7be:	bf00      	nop
9001e7c0:	fffff800 	.word	0xfffff800
9001e7c4:	24039704 	.word	0x24039704
9001e7c8:	240396fe 	.word	0x240396fe

9001e7cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001e7cc:	b4f0      	push	{r4, r5, r6, r7}
9001e7ce:	460c      	mov	r4, r1
9001e7d0:	4611      	mov	r1, r2
9001e7d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001e7d6:	461a      	mov	r2, r3
9001e7d8:	780f      	ldrb	r7, [r1, #0]
9001e7da:	9b04      	ldr	r3, [sp, #16]
9001e7dc:	2f01      	cmp	r7, #1
9001e7de:	784e      	ldrb	r6, [r1, #1]
9001e7e0:	d036      	beq.n	9001e850 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
9001e7e2:	d31e      	bcc.n	9001e822 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
9001e7e4:	2f02      	cmp	r7, #2
9001e7e6:	d14a      	bne.n	9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e7e8:	2e03      	cmp	r6, #3
9001e7ea:	d848      	bhi.n	9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e7ec:	e8df f006 	tbb	[pc, r6]
9001e7f0:	16140702 	.word	0x16140702
9001e7f4:	9504      	str	r5, [sp, #16]
9001e7f6:	4620      	mov	r0, r4
9001e7f8:	bcf0      	pop	{r4, r5, r6, r7}
9001e7fa:	f7ff be09 	b.w	9001e410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001e7fe:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e800:	2800      	cmp	r0, #0
9001e802:	d03c      	beq.n	9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e804:	6806      	ldr	r6, [r0, #0]
9001e806:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e80a:	68b5      	ldr	r5, [r6, #8]
9001e80c:	4613      	mov	r3, r2
9001e80e:	46ac      	mov	ip, r5
9001e810:	460a      	mov	r2, r1
9001e812:	4621      	mov	r1, r4
9001e814:	bcf0      	pop	{r4, r5, r6, r7}
9001e816:	4760      	bx	ip
9001e818:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e81a:	e7f1      	b.n	9001e800 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e81c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e820:	e7ee      	b.n	9001e800 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e822:	2e03      	cmp	r6, #3
9001e824:	d82b      	bhi.n	9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e826:	e8df f006 	tbb	[pc, r6]
9001e82a:	0702      	.short	0x0702
9001e82c:	100e      	.short	0x100e
9001e82e:	9504      	str	r5, [sp, #16]
9001e830:	4620      	mov	r0, r4
9001e832:	bcf0      	pop	{r4, r5, r6, r7}
9001e834:	f7ff bd06 	b.w	9001e244 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001e838:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e83a:	b300      	cbz	r0, 9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e83c:	6806      	ldr	r6, [r0, #0]
9001e83e:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e842:	68f5      	ldr	r5, [r6, #12]
9001e844:	e7e2      	b.n	9001e80c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e846:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e848:	e7f7      	b.n	9001e83a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001e84a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e84e:	e7f4      	b.n	9001e83a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001e850:	2e03      	cmp	r6, #3
9001e852:	d814      	bhi.n	9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e854:	e8df f006 	tbb	[pc, r6]
9001e858:	100e0702 	.word	0x100e0702
9001e85c:	9504      	str	r5, [sp, #16]
9001e85e:	4620      	mov	r0, r4
9001e860:	bcf0      	pop	{r4, r5, r6, r7}
9001e862:	f7ff bea1 	b.w	9001e5a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001e866:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e868:	b148      	cbz	r0, 9001e87e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e86a:	6806      	ldr	r6, [r0, #0]
9001e86c:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e870:	6935      	ldr	r5, [r6, #16]
9001e872:	e7cb      	b.n	9001e80c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e874:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e876:	e7f7      	b.n	9001e868 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001e878:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e87c:	e7f4      	b.n	9001e868 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001e87e:	bcf0      	pop	{r4, r5, r6, r7}
9001e880:	4770      	bx	lr
	...

9001e884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001e884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e888:	b087      	sub	sp, #28
9001e88a:	4604      	mov	r4, r0
9001e88c:	460e      	mov	r6, r1
9001e88e:	6810      	ldr	r0, [r2, #0]
9001e890:	6851      	ldr	r1, [r2, #4]
9001e892:	ad02      	add	r5, sp, #8
9001e894:	4617      	mov	r7, r2
9001e896:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001e89a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001eacc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001e89e:	c503      	stmia	r5!, {r0, r1}
9001e8a0:	6818      	ldr	r0, [r3, #0]
9001e8a2:	ad04      	add	r5, sp, #16
9001e8a4:	6859      	ldr	r1, [r3, #4]
9001e8a6:	c503      	stmia	r5!, {r0, r1}
9001e8a8:	a802      	add	r0, sp, #8
9001e8aa:	f7f7 fc0d 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e8ae:	4639      	mov	r1, r7
9001e8b0:	a804      	add	r0, sp, #16
9001e8b2:	f7f7 fc4d 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e8b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e8ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e8be:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001e8c2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e8c6:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e8ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001e8ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001e8d2:	440e      	add	r6, r1
9001e8d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e8d8:	440a      	add	r2, r1
9001e8da:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e8de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e8e2:	4413      	add	r3, r2
9001e8e4:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e8e8:	4b77      	ldr	r3, [pc, #476]	; (9001eac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e8ea:	6818      	ldr	r0, [r3, #0]
9001e8ec:	6803      	ldr	r3, [r0, #0]
9001e8ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e8f0:	4798      	blx	r3
9001e8f2:	f8b9 b000 	ldrh.w	fp, [r9]
9001e8f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e8fa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001e8fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e902:	fb05 f50b 	mul.w	r5, r5, fp
9001e906:	fb0b 2303 	mla	r3, fp, r3, r2
9001e90a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e90e:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e912:	9300      	str	r3, [sp, #0]
9001e914:	d069      	beq.n	9001e9ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001e916:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001e91a:	4558      	cmp	r0, fp
9001e91c:	f080 80cc 	bcs.w	9001eab8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e920:	9b00      	ldr	r3, [sp, #0]
9001e922:	4631      	mov	r1, r6
9001e924:	18c3      	adds	r3, r0, r3
9001e926:	9301      	str	r3, [sp, #4]
9001e928:	9b01      	ldr	r3, [sp, #4]
9001e92a:	4298      	cmp	r0, r3
9001e92c:	d24f      	bcs.n	9001e9ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001e92e:	f811 2b01 	ldrb.w	r2, [r1], #1
9001e932:	2a00      	cmp	r2, #0
9001e934:	d048      	beq.n	9001e9c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e936:	fb0a f202 	mul.w	r2, sl, r2
9001e93a:	1c53      	adds	r3, r2, #1
9001e93c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e940:	121b      	asrs	r3, r3, #8
9001e942:	d041      	beq.n	9001e9c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e944:	8802      	ldrh	r2, [r0, #0]
9001e946:	b29e      	uxth	r6, r3
9001e948:	f8b4 c000 	ldrh.w	ip, [r4]
9001e94c:	43db      	mvns	r3, r3
9001e94e:	1215      	asrs	r5, r2, #8
9001e950:	b2db      	uxtb	r3, r3
9001e952:	ea4f 272c 	mov.w	r7, ip, asr #8
9001e956:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e95a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e95e:	fb15 f503 	smulbb	r5, r5, r3
9001e962:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e966:	00d2      	lsls	r2, r2, #3
9001e968:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e96c:	fb07 5706 	mla	r7, r7, r6, r5
9001e970:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e974:	b2d2      	uxtb	r2, r2
9001e976:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e97a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e97e:	fb1e fe03 	smulbb	lr, lr, r3
9001e982:	b2bf      	uxth	r7, r7
9001e984:	fb12 f203 	smulbb	r2, r2, r3
9001e988:	fa5f fc8c 	uxtb.w	ip, ip
9001e98c:	fb05 e506 	mla	r5, r5, r6, lr
9001e990:	f107 0e01 	add.w	lr, r7, #1
9001e994:	fb0c 2c06 	mla	ip, ip, r6, r2
9001e998:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001e99c:	fa1f fc8c 	uxth.w	ip, ip
9001e9a0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001e9a4:	b2ad      	uxth	r5, r5
9001e9a6:	f10c 0701 	add.w	r7, ip, #1
9001e9aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001e9ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e9b2:	ea47 070e 	orr.w	r7, r7, lr
9001e9b6:	f105 0e01 	add.w	lr, r5, #1
9001e9ba:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e9be:	096d      	lsrs	r5, r5, #5
9001e9c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e9c4:	432f      	orrs	r7, r5
9001e9c6:	8007      	strh	r7, [r0, #0]
9001e9c8:	3002      	adds	r0, #2
9001e9ca:	3402      	adds	r4, #2
9001e9cc:	e7ac      	b.n	9001e928 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001e9ce:	f8b9 3000 	ldrh.w	r3, [r9]
9001e9d2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001e9d6:	eba3 0308 	sub.w	r3, r3, r8
9001e9da:	eba6 0608 	sub.w	r6, r6, r8
9001e9de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001e9e6:	440e      	add	r6, r1
9001e9e8:	e797      	b.n	9001e91a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001e9ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001e9ee:	42a8      	cmp	r0, r5
9001e9f0:	d262      	bcs.n	9001eab8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e9f2:	9b00      	ldr	r3, [sp, #0]
9001e9f4:	4631      	mov	r1, r6
9001e9f6:	eb00 0b03 	add.w	fp, r0, r3
9001e9fa:	4558      	cmp	r0, fp
9001e9fc:	d24e      	bcs.n	9001ea9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001e9fe:	f811 3b01 	ldrb.w	r3, [r1], #1
9001ea02:	b12b      	cbz	r3, 9001ea10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ea04:	2bff      	cmp	r3, #255	; 0xff
9001ea06:	f8b4 e000 	ldrh.w	lr, [r4]
9001ea0a:	d104      	bne.n	9001ea16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001ea0c:	f8a0 e000 	strh.w	lr, [r0]
9001ea10:	3002      	adds	r0, #2
9001ea12:	3402      	adds	r4, #2
9001ea14:	e7f1      	b.n	9001e9fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001ea16:	8802      	ldrh	r2, [r0, #0]
9001ea18:	b29f      	uxth	r7, r3
9001ea1a:	43db      	mvns	r3, r3
9001ea1c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ea20:	1216      	asrs	r6, r2, #8
9001ea22:	b2db      	uxtb	r3, r3
9001ea24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ea28:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ea2c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001ea30:	00d2      	lsls	r2, r2, #3
9001ea32:	fb16 f603 	smulbb	r6, r6, r3
9001ea36:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ea3a:	b2d2      	uxtb	r2, r2
9001ea3c:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ea40:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ea44:	fb1a fa03 	smulbb	sl, sl, r3
9001ea48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ea4c:	fa1f fc8c 	uxth.w	ip, ip
9001ea50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ea54:	fb12 f303 	smulbb	r3, r2, r3
9001ea58:	fa5f fe8e 	uxtb.w	lr, lr
9001ea5c:	fb06 a607 	mla	r6, r6, r7, sl
9001ea60:	f10c 0201 	add.w	r2, ip, #1
9001ea64:	fb0e 3307 	mla	r3, lr, r7, r3
9001ea68:	b2b6      	uxth	r6, r6
9001ea6a:	b29b      	uxth	r3, r3
9001ea6c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001ea70:	f106 0a01 	add.w	sl, r6, #1
9001ea74:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001ea78:	f103 0c01 	add.w	ip, r3, #1
9001ea7c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001ea80:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ea84:	0976      	lsrs	r6, r6, #5
9001ea86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ea8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ea8e:	ea4c 0c02 	orr.w	ip, ip, r2
9001ea92:	ea4c 0c06 	orr.w	ip, ip, r6
9001ea96:	f8a0 c000 	strh.w	ip, [r0]
9001ea9a:	e7b9      	b.n	9001ea10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ea9c:	f8b9 3000 	ldrh.w	r3, [r9]
9001eaa0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001eaa4:	eba3 0308 	sub.w	r3, r3, r8
9001eaa8:	eba6 0608 	sub.w	r6, r6, r8
9001eaac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eab0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001eab4:	440e      	add	r6, r1
9001eab6:	e79a      	b.n	9001e9ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001eab8:	4b03      	ldr	r3, [pc, #12]	; (9001eac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001eaba:	6818      	ldr	r0, [r3, #0]
9001eabc:	6803      	ldr	r3, [r0, #0]
9001eabe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001eac0:	4798      	blx	r3
9001eac2:	b007      	add	sp, #28
9001eac4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eac8:	24039704 	.word	0x24039704
9001eacc:	240396fe 	.word	0x240396fe

9001ead0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001ead0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ead4:	b089      	sub	sp, #36	; 0x24
9001ead6:	4682      	mov	sl, r0
9001ead8:	460f      	mov	r7, r1
9001eada:	4691      	mov	r9, r2
9001eadc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001eae0:	4698      	mov	r8, r3
9001eae2:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001eae4:	2e00      	cmp	r6, #0
9001eae6:	d03d      	beq.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eae8:	4608      	mov	r0, r1
9001eaea:	f7fa fe4d 	bl	90019788 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001eaee:	4605      	mov	r5, r0
9001eaf0:	4638      	mov	r0, r7
9001eaf2:	f7fa fe7d 	bl	900197f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001eaf6:	f8ad 000e 	strh.w	r0, [sp, #14]
9001eafa:	4638      	mov	r0, r7
9001eafc:	f8ad 9008 	strh.w	r9, [sp, #8]
9001eb00:	f8ad 500c 	strh.w	r5, [sp, #12]
9001eb04:	f8ad 800a 	strh.w	r8, [sp, #10]
9001eb08:	f7fa ff2a 	bl	90019960 <_ZNK8touchgfx6Bitmap7getDataEv>
9001eb0c:	4605      	mov	r5, r0
9001eb0e:	4638      	mov	r0, r7
9001eb10:	f7fa ff56 	bl	900199c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001eb14:	4681      	mov	r9, r0
9001eb16:	4638      	mov	r0, r7
9001eb18:	f7fa ffa6 	bl	90019a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001eb1c:	280b      	cmp	r0, #11
9001eb1e:	d821      	bhi.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eb20:	e8df f000 	tbb	[pc, r0]
9001eb24:	2006aebe 	.word	0x2006aebe
9001eb28:	20202020 	.word	0x20202020
9001eb2c:	b5202020 	.word	0xb5202020
9001eb30:	4bb0      	ldr	r3, [pc, #704]	; (9001edf4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001eb32:	6818      	ldr	r0, [r3, #0]
9001eb34:	6803      	ldr	r3, [r0, #0]
9001eb36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001eb38:	4798      	blx	r3
9001eb3a:	2eff      	cmp	r6, #255	; 0xff
9001eb3c:	d101      	bne.n	9001eb42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001eb3e:	0683      	lsls	r3, r0, #26
9001eb40:	d506      	bpl.n	9001eb50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001eb42:	4633      	mov	r3, r6
9001eb44:	4622      	mov	r2, r4
9001eb46:	a902      	add	r1, sp, #8
9001eb48:	4628      	mov	r0, r5
9001eb4a:	f7ff f909 	bl	9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001eb4e:	e009      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eb50:	4638      	mov	r0, r7
9001eb52:	f7fa fecd 	bl	900198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001eb56:	b940      	cbnz	r0, 9001eb6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001eb58:	4623      	mov	r3, r4
9001eb5a:	aa02      	add	r2, sp, #8
9001eb5c:	4629      	mov	r1, r5
9001eb5e:	4650      	mov	r0, sl
9001eb60:	f7ff f9e4 	bl	9001df2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001eb64:	b009      	add	sp, #36	; 0x24
9001eb66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb6a:	f10d 0818 	add.w	r8, sp, #24
9001eb6e:	4639      	mov	r1, r7
9001eb70:	af04      	add	r7, sp, #16
9001eb72:	4640      	mov	r0, r8
9001eb74:	f7fa fe70 	bl	90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001eb78:	e898 0003 	ldmia.w	r8, {r0, r1}
9001eb7c:	e887 0003 	stmia.w	r7, {r0, r1}
9001eb80:	4638      	mov	r0, r7
9001eb82:	4621      	mov	r1, r4
9001eb84:	f7f2 fa2c 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001eb88:	4638      	mov	r0, r7
9001eb8a:	f7f2 fa6c 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001eb8e:	2800      	cmp	r0, #0
9001eb90:	d1d7      	bne.n	9001eb42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001eb92:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001eb96:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001eb9a:	4293      	cmp	r3, r2
9001eb9c:	dd12      	ble.n	9001ebc4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001eb9e:	1a9b      	subs	r3, r3, r2
9001eba0:	f9b4 0000 	ldrsh.w	r0, [r4]
9001eba4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001eba8:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ebac:	4628      	mov	r0, r5
9001ebae:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ebb2:	4642      	mov	r2, r8
9001ebb4:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ebb8:	a902      	add	r1, sp, #8
9001ebba:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ebbe:	4633      	mov	r3, r6
9001ebc0:	f7ff f8ce 	bl	9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ebc4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ebc8:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ebcc:	4293      	cmp	r3, r2
9001ebce:	dd12      	ble.n	9001ebf6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001ebd0:	1a9b      	subs	r3, r3, r2
9001ebd2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ebd6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ebda:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ebde:	4642      	mov	r2, r8
9001ebe0:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ebe4:	4628      	mov	r0, r5
9001ebe6:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ebea:	23ff      	movs	r3, #255	; 0xff
9001ebec:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ebf0:	a902      	add	r1, sp, #8
9001ebf2:	f7ff f8b5 	bl	9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ebf6:	463b      	mov	r3, r7
9001ebf8:	aa02      	add	r2, sp, #8
9001ebfa:	4629      	mov	r1, r5
9001ebfc:	4650      	mov	r0, sl
9001ebfe:	f7ff f995 	bl	9001df2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001ec02:	88a2      	ldrh	r2, [r4, #4]
9001ec04:	8823      	ldrh	r3, [r4, #0]
9001ec06:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ec0a:	4413      	add	r3, r2
9001ec0c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ec10:	440a      	add	r2, r1
9001ec12:	b29b      	uxth	r3, r3
9001ec14:	b292      	uxth	r2, r2
9001ec16:	b218      	sxth	r0, r3
9001ec18:	b211      	sxth	r1, r2
9001ec1a:	4288      	cmp	r0, r1
9001ec1c:	dd12      	ble.n	9001ec44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001ec1e:	1a9b      	subs	r3, r3, r2
9001ec20:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ec24:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001ec28:	4642      	mov	r2, r8
9001ec2a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ec2e:	a902      	add	r1, sp, #8
9001ec30:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ec34:	23ff      	movs	r3, #255	; 0xff
9001ec36:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ec3a:	4628      	mov	r0, r5
9001ec3c:	f8ad 601a 	strh.w	r6, [sp, #26]
9001ec40:	f7ff f88e 	bl	9001dd60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ec44:	88e2      	ldrh	r2, [r4, #6]
9001ec46:	8863      	ldrh	r3, [r4, #2]
9001ec48:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ec4c:	4413      	add	r3, r2
9001ec4e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001ec52:	440a      	add	r2, r1
9001ec54:	b29b      	uxth	r3, r3
9001ec56:	b292      	uxth	r2, r2
9001ec58:	b218      	sxth	r0, r3
9001ec5a:	b211      	sxth	r1, r2
9001ec5c:	4288      	cmp	r0, r1
9001ec5e:	dd81      	ble.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ec60:	1a9b      	subs	r3, r3, r2
9001ec62:	f9b4 6000 	ldrsh.w	r6, [r4]
9001ec66:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001ec6a:	4642      	mov	r2, r8
9001ec6c:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ec70:	23ff      	movs	r3, #255	; 0xff
9001ec72:	f8ad 6018 	strh.w	r6, [sp, #24]
9001ec76:	f8ad 101a 	strh.w	r1, [sp, #26]
9001ec7a:	f8ad 001c 	strh.w	r0, [sp, #28]
9001ec7e:	e762      	b.n	9001eb46 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001ec80:	4633      	mov	r3, r6
9001ec82:	4622      	mov	r2, r4
9001ec84:	a902      	add	r1, sp, #8
9001ec86:	4628      	mov	r0, r5
9001ec88:	f7ff f9c0 	bl	9001e00c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001ec8c:	e76a      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ec8e:	e9cd 4600 	strd	r4, r6, [sp]
9001ec92:	ab02      	add	r3, sp, #8
9001ec94:	464a      	mov	r2, r9
9001ec96:	4629      	mov	r1, r5
9001ec98:	4650      	mov	r0, sl
9001ec9a:	f7ff fd97 	bl	9001e7cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001ec9e:	e761      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eca0:	4638      	mov	r0, r7
9001eca2:	f7fa fe25 	bl	900198f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001eca6:	b950      	cbnz	r0, 9001ecbe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001eca8:	f8da 3000 	ldr.w	r3, [sl]
9001ecac:	aa02      	add	r2, sp, #8
9001ecae:	4629      	mov	r1, r5
9001ecb0:	e9cd 6000 	strd	r6, r0, [sp]
9001ecb4:	4650      	mov	r0, sl
9001ecb6:	68de      	ldr	r6, [r3, #12]
9001ecb8:	4623      	mov	r3, r4
9001ecba:	47b0      	blx	r6
9001ecbc:	e752      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ecbe:	f10d 0818 	add.w	r8, sp, #24
9001ecc2:	4639      	mov	r1, r7
9001ecc4:	af04      	add	r7, sp, #16
9001ecc6:	4640      	mov	r0, r8
9001ecc8:	f7fa fdc6 	bl	90019858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001eccc:	e898 0003 	ldmia.w	r8, {r0, r1}
9001ecd0:	e887 0003 	stmia.w	r7, {r0, r1}
9001ecd4:	4638      	mov	r0, r7
9001ecd6:	4621      	mov	r1, r4
9001ecd8:	f7f2 f982 	bl	90010fe0 <_ZN8touchgfx4RectaNERKS0_>
9001ecdc:	4638      	mov	r0, r7
9001ecde:	f7f2 f9c2 	bl	90011066 <_ZNK8touchgfx4Rect7isEmptyEv>
9001ece2:	b138      	cbz	r0, 9001ecf4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001ece4:	4623      	mov	r3, r4
9001ece6:	9600      	str	r6, [sp, #0]
9001ece8:	aa02      	add	r2, sp, #8
9001ecea:	4649      	mov	r1, r9
9001ecec:	4628      	mov	r0, r5
9001ecee:	f7ff fdc9 	bl	9001e884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ecf2:	e737      	b.n	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ecf4:	f8da 3000 	ldr.w	r3, [sl]
9001ecf8:	aa02      	add	r2, sp, #8
9001ecfa:	4629      	mov	r1, r5
9001ecfc:	e9cd 6000 	strd	r6, r0, [sp]
9001ed00:	4650      	mov	r0, sl
9001ed02:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001ed06:	463b      	mov	r3, r7
9001ed08:	47d8      	blx	fp
9001ed0a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ed0e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001ed12:	4293      	cmp	r3, r2
9001ed14:	dd13      	ble.n	9001ed3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001ed16:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ed1a:	1a9b      	subs	r3, r3, r2
9001ed1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001ed20:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ed24:	4628      	mov	r0, r5
9001ed26:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ed2a:	aa02      	add	r2, sp, #8
9001ed2c:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ed30:	4649      	mov	r1, r9
9001ed32:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ed36:	4643      	mov	r3, r8
9001ed38:	9600      	str	r6, [sp, #0]
9001ed3a:	f7ff fda3 	bl	9001e884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ed3e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ed42:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ed46:	4293      	cmp	r3, r2
9001ed48:	dd13      	ble.n	9001ed72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001ed4a:	1a9b      	subs	r3, r3, r2
9001ed4c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ed50:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ed54:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ed58:	aa02      	add	r2, sp, #8
9001ed5a:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ed5e:	4628      	mov	r0, r5
9001ed60:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ed64:	4643      	mov	r3, r8
9001ed66:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ed6a:	4649      	mov	r1, r9
9001ed6c:	9600      	str	r6, [sp, #0]
9001ed6e:	f7ff fd89 	bl	9001e884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ed72:	88a2      	ldrh	r2, [r4, #4]
9001ed74:	8823      	ldrh	r3, [r4, #0]
9001ed76:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ed7a:	4413      	add	r3, r2
9001ed7c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ed80:	440a      	add	r2, r1
9001ed82:	b29b      	uxth	r3, r3
9001ed84:	b292      	uxth	r2, r2
9001ed86:	b218      	sxth	r0, r3
9001ed88:	b211      	sxth	r1, r2
9001ed8a:	4288      	cmp	r0, r1
9001ed8c:	dd13      	ble.n	9001edb6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001ed8e:	1a9b      	subs	r3, r3, r2
9001ed90:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ed94:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001ed98:	aa02      	add	r2, sp, #8
9001ed9a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ed9e:	4649      	mov	r1, r9
9001eda0:	f8ad 301c 	strh.w	r3, [sp, #28]
9001eda4:	4643      	mov	r3, r8
9001eda6:	f8ad 001e 	strh.w	r0, [sp, #30]
9001edaa:	4628      	mov	r0, r5
9001edac:	9600      	str	r6, [sp, #0]
9001edae:	f8ad 701a 	strh.w	r7, [sp, #26]
9001edb2:	f7ff fd67 	bl	9001e884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001edb6:	88e2      	ldrh	r2, [r4, #6]
9001edb8:	8863      	ldrh	r3, [r4, #2]
9001edba:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001edbe:	4413      	add	r3, r2
9001edc0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001edc4:	440a      	add	r2, r1
9001edc6:	b29b      	uxth	r3, r3
9001edc8:	b292      	uxth	r2, r2
9001edca:	b218      	sxth	r0, r3
9001edcc:	b211      	sxth	r1, r2
9001edce:	4288      	cmp	r0, r1
9001edd0:	f77f aec8 	ble.w	9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001edd4:	f9b4 7000 	ldrsh.w	r7, [r4]
9001edd8:	1a9b      	subs	r3, r3, r2
9001edda:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001edde:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ede2:	4643      	mov	r3, r8
9001ede4:	f8ad 7018 	strh.w	r7, [sp, #24]
9001ede8:	f8ad 101a 	strh.w	r1, [sp, #26]
9001edec:	f8ad 001c 	strh.w	r0, [sp, #28]
9001edf0:	9600      	str	r6, [sp, #0]
9001edf2:	e779      	b.n	9001ece8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001edf4:	24039704 	.word	0x24039704

9001edf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001edf8:	b180      	cbz	r0, 9001ee1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001edfa:	2903      	cmp	r1, #3
9001edfc:	d81c      	bhi.n	9001ee38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001edfe:	e8df f001 	tbb	[pc, r1]
9001ee02:	1d02      	.short	0x1d02
9001ee04:	1f08      	.short	0x1f08
9001ee06:	4b10      	ldr	r3, [pc, #64]	; (9001ee48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ee08:	8818      	ldrh	r0, [r3, #0]
9001ee0a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ee0e:	4240      	negs	r0, r0
9001ee10:	4770      	bx	lr
9001ee12:	4b0d      	ldr	r3, [pc, #52]	; (9001ee48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ee14:	8818      	ldrh	r0, [r3, #0]
9001ee16:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ee1a:	4770      	bx	lr
9001ee1c:	2903      	cmp	r1, #3
9001ee1e:	d80b      	bhi.n	9001ee38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001ee20:	a301      	add	r3, pc, #4	; (adr r3, 9001ee28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001ee22:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ee26:	bf00      	nop
9001ee28:	9001ee3d 	.word	0x9001ee3d
9001ee2c:	9001ee13 	.word	0x9001ee13
9001ee30:	9001ee41 	.word	0x9001ee41
9001ee34:	9001ee07 	.word	0x9001ee07
9001ee38:	2000      	movs	r0, #0
9001ee3a:	4770      	bx	lr
9001ee3c:	2001      	movs	r0, #1
9001ee3e:	4770      	bx	lr
9001ee40:	f04f 30ff 	mov.w	r0, #4294967295
9001ee44:	4770      	bx	lr
9001ee46:	bf00      	nop
9001ee48:	240396fe 	.word	0x240396fe

9001ee4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001ee4c:	b180      	cbz	r0, 9001ee70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001ee4e:	2903      	cmp	r1, #3
9001ee50:	d81c      	bhi.n	9001ee8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ee52:	e8df f001 	tbb	[pc, r1]
9001ee56:	021d      	.short	0x021d
9001ee58:	071f      	.short	0x071f
9001ee5a:	4b10      	ldr	r3, [pc, #64]	; (9001ee9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001ee5c:	8818      	ldrh	r0, [r3, #0]
9001ee5e:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ee62:	4770      	bx	lr
9001ee64:	4b0d      	ldr	r3, [pc, #52]	; (9001ee9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001ee66:	8818      	ldrh	r0, [r3, #0]
9001ee68:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ee6c:	4240      	negs	r0, r0
9001ee6e:	4770      	bx	lr
9001ee70:	2903      	cmp	r1, #3
9001ee72:	d80b      	bhi.n	9001ee8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ee74:	a301      	add	r3, pc, #4	; (adr r3, 9001ee7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001ee76:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ee7a:	bf00      	nop
9001ee7c:	9001ee5b 	.word	0x9001ee5b
9001ee80:	9001ee95 	.word	0x9001ee95
9001ee84:	9001ee65 	.word	0x9001ee65
9001ee88:	9001ee91 	.word	0x9001ee91
9001ee8c:	2000      	movs	r0, #0
9001ee8e:	4770      	bx	lr
9001ee90:	2001      	movs	r0, #1
9001ee92:	4770      	bx	lr
9001ee94:	f04f 30ff 	mov.w	r0, #4294967295
9001ee98:	4770      	bx	lr
9001ee9a:	bf00      	nop
9001ee9c:	240396fe 	.word	0x240396fe

9001eea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001eea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eea4:	b099      	sub	sp, #100	; 0x64
9001eea6:	910b      	str	r1, [sp, #44]	; 0x2c
9001eea8:	a914      	add	r1, sp, #80	; 0x50
9001eeaa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001eeae:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001eeb2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001eeb6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001eeba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001eebe:	e881 000c 	stmia.w	r1, {r2, r3}
9001eec2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001eec6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001eeca:	9309      	str	r3, [sp, #36]	; 0x24
9001eecc:	f891 900d 	ldrb.w	r9, [r1, #13]
9001eed0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001eed4:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001eed8:	9310      	str	r3, [sp, #64]	; 0x40
9001eeda:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001eede:	930c      	str	r3, [sp, #48]	; 0x30
9001eee0:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001eee4:	798f      	ldrb	r7, [r1, #6]
9001eee6:	431f      	orrs	r7, r3
9001eee8:	f000 8195 	beq.w	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001eeec:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001eef0:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001eef4:	f891 9007 	ldrb.w	r9, [r1, #7]
9001eef8:	ea59 0903 	orrs.w	r9, r9, r3
9001eefc:	f000 818b 	beq.w	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ef00:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001ef04:	b29b      	uxth	r3, r3
9001ef06:	2d00      	cmp	r5, #0
9001ef08:	f000 812e 	beq.w	9001f168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001ef0c:	1aed      	subs	r5, r5, r3
9001ef0e:	b2ad      	uxth	r5, r5
9001ef10:	042b      	lsls	r3, r5, #16
9001ef12:	d502      	bpl.n	9001ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001ef14:	1b64      	subs	r4, r4, r5
9001ef16:	2500      	movs	r5, #0
9001ef18:	b224      	sxth	r4, r4
9001ef1a:	f9b2 1000 	ldrsh.w	r1, [r2]
9001ef1e:	a814      	add	r0, sp, #80	; 0x50
9001ef20:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001ef24:	428c      	cmp	r4, r1
9001ef26:	b28b      	uxth	r3, r1
9001ef28:	bfbf      	itttt	lt
9001ef2a:	18ed      	addlt	r5, r5, r3
9001ef2c:	1b2c      	sublt	r4, r5, r4
9001ef2e:	b2a5      	uxthlt	r5, r4
9001ef30:	460c      	movlt	r4, r1
9001ef32:	8891      	ldrh	r1, [r2, #4]
9001ef34:	440b      	add	r3, r1
9001ef36:	4621      	mov	r1, r4
9001ef38:	b21b      	sxth	r3, r3
9001ef3a:	930f      	str	r3, [sp, #60]	; 0x3c
9001ef3c:	88d3      	ldrh	r3, [r2, #6]
9001ef3e:	8852      	ldrh	r2, [r2, #2]
9001ef40:	4413      	add	r3, r2
9001ef42:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001ef44:	b21b      	sxth	r3, r3
9001ef46:	930d      	str	r3, [sp, #52]	; 0x34
9001ef48:	4bbd      	ldr	r3, [pc, #756]	; (9001f240 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001ef4a:	f893 b000 	ldrb.w	fp, [r3]
9001ef4e:	f10b 3cff 	add.w	ip, fp, #4294967295
9001ef52:	f1dc 0300 	rsbs	r3, ip, #0
9001ef56:	eb43 030c 	adc.w	r3, r3, ip
9001ef5a:	930e      	str	r3, [sp, #56]	; 0x38
9001ef5c:	4653      	mov	r3, sl
9001ef5e:	f7f6 ff28 	bl	90015db2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001ef62:	4621      	mov	r1, r4
9001ef64:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001ef68:	4653      	mov	r3, sl
9001ef6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001ef6c:	a814      	add	r0, sp, #80	; 0x50
9001ef6e:	f7f6 ff3d 	bl	90015dec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001ef72:	a918      	add	r1, sp, #96	; 0x60
9001ef74:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001ef78:	a817      	add	r0, sp, #92	; 0x5c
9001ef7a:	f7f7 f863 	bl	90016044 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001ef7e:	f1ba 0f00 	cmp.w	sl, #0
9001ef82:	f040 80f4 	bne.w	9001f16e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001ef86:	f1bb 0f01 	cmp.w	fp, #1
9001ef8a:	f040 80f8 	bne.w	9001f17e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001ef8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ef90:	2b00      	cmp	r3, #0
9001ef92:	f040 8145 	bne.w	9001f220 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001ef96:	b2ba      	uxth	r2, r7
9001ef98:	b905      	cbnz	r5, 9001ef9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001ef9a:	b16e      	cbz	r6, 9001efb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001ef9c:	fb06 5302 	mla	r3, r6, r2, r5
9001efa0:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001efa2:	4631      	mov	r1, r6
9001efa4:	fb08 f303 	mul.w	r3, r8, r3
9001efa8:	f003 0607 	and.w	r6, r3, #7
9001efac:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001efb0:	9328      	str	r3, [sp, #160]	; 0xa0
9001efb2:	eba9 0301 	sub.w	r3, r9, r1
9001efb6:	930a      	str	r3, [sp, #40]	; 0x28
9001efb8:	4651      	mov	r1, sl
9001efba:	980e      	ldr	r0, [sp, #56]	; 0x38
9001efbc:	f7ff ff1c 	bl	9001edf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001efc0:	4681      	mov	r9, r0
9001efc2:	980e      	ldr	r0, [sp, #56]	; 0x38
9001efc4:	f7ff ff42 	bl	9001ee4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001efc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001efca:	9909      	ldr	r1, [sp, #36]	; 0x24
9001efcc:	4683      	mov	fp, r0
9001efce:	eba3 0a01 	sub.w	sl, r3, r1
9001efd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001efd4:	459a      	cmp	sl, r3
9001efd6:	bfa8      	it	ge
9001efd8:	469a      	movge	sl, r3
9001efda:	f1ba 0f00 	cmp.w	sl, #0
9001efde:	f340 811a 	ble.w	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001efe2:	1b64      	subs	r4, r4, r5
9001efe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001efe6:	1b1c      	subs	r4, r3, r4
9001efe8:	42bc      	cmp	r4, r7
9001efea:	bfd4      	ite	le
9001efec:	ebc5 0504 	rsble	r5, r5, r4
9001eff0:	ebc5 0507 	rsbgt	r5, r5, r7
9001eff4:	2d00      	cmp	r5, #0
9001eff6:	f340 810e 	ble.w	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001effa:	1b52      	subs	r2, r2, r5
9001effc:	fb08 f302 	mul.w	r3, r8, r2
9001f000:	930f      	str	r3, [sp, #60]	; 0x3c
9001f002:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f004:	2b00      	cmp	r3, #0
9001f006:	f040 8116 	bne.w	9001f236 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001f00a:	4b8e      	ldr	r3, [pc, #568]	; (9001f244 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001f00c:	6818      	ldr	r0, [r3, #0]
9001f00e:	6803      	ldr	r3, [r0, #0]
9001f010:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f012:	4798      	blx	r3
9001f014:	2301      	movs	r3, #1
9001f016:	4a8c      	ldr	r2, [pc, #560]	; (9001f248 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001f018:	fa03 f308 	lsl.w	r3, r3, r8
9001f01c:	8811      	ldrh	r1, [r2, #0]
9001f01e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001f022:	3b01      	subs	r3, #1
9001f024:	b2db      	uxtb	r3, r3
9001f026:	930e      	str	r3, [sp, #56]	; 0x38
9001f028:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001f02c:	fb01 2303 	mla	r3, r1, r3, r2
9001f030:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f034:	930a      	str	r3, [sp, #40]	; 0x28
9001f036:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f038:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001f03c:	9313      	str	r3, [sp, #76]	; 0x4c
9001f03e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f040:	0a19      	lsrs	r1, r3, #8
9001f042:	b2cb      	uxtb	r3, r1
9001f044:	9312      	str	r3, [sp, #72]	; 0x48
9001f046:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f048:	b2db      	uxtb	r3, r3
9001f04a:	9311      	str	r3, [sp, #68]	; 0x44
9001f04c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f04e:	095a      	lsrs	r2, r3, #5
9001f050:	4b7e      	ldr	r3, [pc, #504]	; (9001f24c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001f052:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f056:	400b      	ands	r3, r1
9001f058:	4313      	orrs	r3, r2
9001f05a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001f05c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f060:	4313      	orrs	r3, r2
9001f062:	b29b      	uxth	r3, r3
9001f064:	9310      	str	r3, [sp, #64]	; 0x40
9001f066:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f068:	781a      	ldrb	r2, [r3, #0]
9001f06a:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001f06e:	fb05 b919 	mls	r9, r5, r9, fp
9001f072:	4132      	asrs	r2, r6
9001f074:	fb03 fb05 	mul.w	fp, r3, r5
9001f078:	930d      	str	r3, [sp, #52]	; 0x34
9001f07a:	b2d2      	uxtb	r2, r2
9001f07c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001f080:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001f084:	f0c0 80f5 	bcc.w	9001f272 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001f088:	46ae      	mov	lr, r5
9001f08a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001f08e:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001f092:	f0c0 80dd 	bcc.w	9001f250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001f096:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f098:	4013      	ands	r3, r2
9001f09a:	d055      	beq.n	9001f148 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001f09c:	20ff      	movs	r0, #255	; 0xff
9001f09e:	990e      	ldr	r1, [sp, #56]	; 0x38
9001f0a0:	fb90 f1f1 	sdiv	r1, r0, r1
9001f0a4:	434b      	muls	r3, r1
9001f0a6:	2bfe      	cmp	r3, #254	; 0xfe
9001f0a8:	dd03      	ble.n	9001f0b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001f0aa:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f0ac:	4281      	cmp	r1, r0
9001f0ae:	f000 80c4 	beq.w	9001f23a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001f0b2:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f0b4:	f8bc 4000 	ldrh.w	r4, [ip]
9001f0b8:	fb11 f303 	smulbb	r3, r1, r3
9001f0bc:	1220      	asrs	r0, r4, #8
9001f0be:	b29b      	uxth	r3, r3
9001f0c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001f0c4:	1c59      	adds	r1, r3, #1
9001f0c6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001f0ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001f0ce:	10e1      	asrs	r1, r4, #3
9001f0d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001f0d4:	00e4      	lsls	r4, r4, #3
9001f0d6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001f0da:	b29f      	uxth	r7, r3
9001f0dc:	43db      	mvns	r3, r3
9001f0de:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f0e2:	b2db      	uxtb	r3, r3
9001f0e4:	b2e4      	uxtb	r4, r4
9001f0e6:	9309      	str	r3, [sp, #36]	; 0x24
9001f0e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001f0ea:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f0ee:	fb13 f907 	smulbb	r9, r3, r7
9001f0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f0f4:	fb00 9003 	mla	r0, r0, r3, r9
9001f0f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001f0fa:	fb13 f907 	smulbb	r9, r3, r7
9001f0fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f100:	b280      	uxth	r0, r0
9001f102:	fb01 9103 	mla	r1, r1, r3, r9
9001f106:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f108:	fb13 f707 	smulbb	r7, r3, r7
9001f10c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f10e:	b289      	uxth	r1, r1
9001f110:	fb04 7403 	mla	r4, r4, r3, r7
9001f114:	1c43      	adds	r3, r0, #1
9001f116:	b2a4      	uxth	r4, r4
9001f118:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f11c:	f104 0901 	add.w	r9, r4, #1
9001f120:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001f124:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001f128:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001f12c:	ea49 0000 	orr.w	r0, r9, r0
9001f130:	f101 0901 	add.w	r9, r1, #1
9001f134:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001f138:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f13c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001f140:	ea40 0009 	orr.w	r0, r0, r9
9001f144:	f8ac 0000 	strh.w	r0, [ip]
9001f148:	4446      	add	r6, r8
9001f14a:	b2b6      	uxth	r6, r6
9001f14c:	2e07      	cmp	r6, #7
9001f14e:	bf89      	itett	hi
9001f150:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001f152:	fa42 f208 	asrls.w	r2, r2, r8
9001f156:	2600      	movhi	r6, #0
9001f158:	785a      	ldrbhi	r2, [r3, #1]
9001f15a:	bf8a      	itet	hi
9001f15c:	3301      	addhi	r3, #1
9001f15e:	b2d2      	uxtbls	r2, r2
9001f160:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001f162:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f164:	449c      	add	ip, r3
9001f166:	e792      	b.n	9001f08e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001f168:	441c      	add	r4, r3
9001f16a:	b224      	sxth	r4, r4
9001f16c:	e6d5      	b.n	9001ef1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f16e:	f1ba 0f01 	cmp.w	sl, #1
9001f172:	f47f af0c 	bne.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f176:	f1bb 0f01 	cmp.w	fp, #1
9001f17a:	f47f af08 	bne.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f17e:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001f244 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001f182:	f8db 0000 	ldr.w	r0, [fp]
9001f186:	6803      	ldr	r3, [r0, #0]
9001f188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f18a:	4798      	blx	r3
9001f18c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001f190:	465a      	mov	r2, fp
9001f192:	d006      	beq.n	9001f1a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f194:	f1b8 0f04 	cmp.w	r8, #4
9001f198:	d140      	bne.n	9001f21c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001f19a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f19c:	3300      	adds	r3, #0
9001f19e:	bf18      	it	ne
9001f1a0:	2301      	movne	r3, #1
9001f1a2:	0580      	lsls	r0, r0, #22
9001f1a4:	d56e      	bpl.n	9001f284 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f1a6:	f1b8 0f08 	cmp.w	r8, #8
9001f1aa:	d16b      	bne.n	9001f284 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f1ac:	2b00      	cmp	r3, #0
9001f1ae:	bf0c      	ite	eq
9001f1b0:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001f1b4:	f44f 7180 	movne.w	r1, #256	; 0x100
9001f1b8:	2d00      	cmp	r5, #0
9001f1ba:	f47f aee8 	bne.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f1be:	2e00      	cmp	r6, #0
9001f1c0:	f47f aee5 	bne.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f1c4:	19e3      	adds	r3, r4, r7
9001f1c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001f1c8:	4283      	cmp	r3, r0
9001f1ca:	f73f aee0 	bgt.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f1ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f1d0:	980d      	ldr	r0, [sp, #52]	; 0x34
9001f1d2:	444b      	add	r3, r9
9001f1d4:	4283      	cmp	r3, r0
9001f1d6:	f73f aeda 	bgt.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f1da:	b2bf      	uxth	r7, r7
9001f1dc:	f1b8 0f08 	cmp.w	r8, #8
9001f1e0:	6810      	ldr	r0, [r2, #0]
9001f1e2:	f04f 0500 	mov.w	r5, #0
9001f1e6:	bf18      	it	ne
9001f1e8:	3701      	addne	r7, #1
9001f1ea:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001f1ee:	6804      	ldr	r4, [r0, #0]
9001f1f0:	bf18      	it	ne
9001f1f2:	f027 0701 	bicne.w	r7, r7, #1
9001f1f6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f1fa:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001f1fe:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f200:	bf18      	it	ne
9001f202:	b2bf      	uxthne	r7, r7
9001f204:	9104      	str	r1, [sp, #16]
9001f206:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001f208:	e9cd 7900 	strd	r7, r9, [sp]
9001f20c:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001f210:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001f212:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001f214:	47a0      	blx	r4
9001f216:	b019      	add	sp, #100	; 0x64
9001f218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f21c:	2300      	movs	r3, #0
9001f21e:	e7c0      	b.n	9001f1a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f220:	2208      	movs	r2, #8
9001f222:	fb92 f3f8 	sdiv	r3, r2, r8
9001f226:	1e5a      	subs	r2, r3, #1
9001f228:	443a      	add	r2, r7
9001f22a:	fb92 f2f3 	sdiv	r2, r2, r3
9001f22e:	fb12 f203 	smulbb	r2, r2, r3
9001f232:	b292      	uxth	r2, r2
9001f234:	e6b0      	b.n	9001ef98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001f236:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f238:	e6ec      	b.n	9001f014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001f23a:	9810      	ldr	r0, [sp, #64]	; 0x40
9001f23c:	e782      	b.n	9001f144 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001f23e:	bf00      	nop
9001f240:	240396fc 	.word	0x240396fc
9001f244:	24039704 	.word	0x24039704
9001f248:	240396fe 	.word	0x240396fe
9001f24c:	00fff800 	.word	0x00fff800
9001f250:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f252:	b153      	cbz	r3, 9001f26a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001f254:	441e      	add	r6, r3
9001f256:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f258:	b2b6      	uxth	r6, r6
9001f25a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001f25e:	f006 0607 	and.w	r6, r6, #7
9001f262:	781a      	ldrb	r2, [r3, #0]
9001f264:	9328      	str	r3, [sp, #160]	; 0xa0
9001f266:	4132      	asrs	r2, r6
9001f268:	b2d2      	uxtb	r2, r2
9001f26a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f26c:	445b      	add	r3, fp
9001f26e:	930a      	str	r3, [sp, #40]	; 0x28
9001f270:	e706      	b.n	9001f080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001f272:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f274:	2b00      	cmp	r3, #0
9001f276:	d1ce      	bne.n	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f278:	4b05      	ldr	r3, [pc, #20]	; (9001f290 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001f27a:	6818      	ldr	r0, [r3, #0]
9001f27c:	6803      	ldr	r3, [r0, #0]
9001f27e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f280:	4798      	blx	r3
9001f282:	e7c8      	b.n	9001f216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f284:	2b00      	cmp	r3, #0
9001f286:	f43f ae82 	beq.w	9001ef8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f28a:	f44f 7180 	mov.w	r1, #256	; 0x100
9001f28e:	e793      	b.n	9001f1b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001f290:	24039704 	.word	0x24039704

9001f294 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001f294:	b538      	push	{r3, r4, r5, lr}
9001f296:	4c15      	ldr	r4, [pc, #84]	; (9001f2ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001f298:	4605      	mov	r5, r0
9001f29a:	7823      	ldrb	r3, [r4, #0]
9001f29c:	f3bf 8f5b 	dmb	ish
9001f2a0:	07da      	lsls	r2, r3, #31
9001f2a2:	d40b      	bmi.n	9001f2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f2a4:	4620      	mov	r0, r4
9001f2a6:	f008 fa05 	bl	900276b4 <__cxa_guard_acquire>
9001f2aa:	b138      	cbz	r0, 9001f2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f2ac:	4620      	mov	r0, r4
9001f2ae:	f008 fa0d 	bl	900276cc <__cxa_guard_release>
9001f2b2:	4a0f      	ldr	r2, [pc, #60]	; (9001f2f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f2b4:	490f      	ldr	r1, [pc, #60]	; (9001f2f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001f2b6:	4810      	ldr	r0, [pc, #64]	; (9001f2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f2b8:	f008 f9f5 	bl	900276a6 <__aeabi_atexit>
9001f2bc:	4c0f      	ldr	r4, [pc, #60]	; (9001f2fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001f2be:	7823      	ldrb	r3, [r4, #0]
9001f2c0:	f3bf 8f5b 	dmb	ish
9001f2c4:	07db      	lsls	r3, r3, #31
9001f2c6:	d40b      	bmi.n	9001f2e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f2c8:	4620      	mov	r0, r4
9001f2ca:	f008 f9f3 	bl	900276b4 <__cxa_guard_acquire>
9001f2ce:	b138      	cbz	r0, 9001f2e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f2d0:	4620      	mov	r0, r4
9001f2d2:	f008 f9fb 	bl	900276cc <__cxa_guard_release>
9001f2d6:	4a06      	ldr	r2, [pc, #24]	; (9001f2f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f2d8:	4909      	ldr	r1, [pc, #36]	; (9001f300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001f2da:	480a      	ldr	r0, [pc, #40]	; (9001f304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f2dc:	f008 f9e3 	bl	900276a6 <__aeabi_atexit>
9001f2e0:	4b05      	ldr	r3, [pc, #20]	; (9001f2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f2e2:	612b      	str	r3, [r5, #16]
9001f2e4:	4b07      	ldr	r3, [pc, #28]	; (9001f304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f2e6:	616b      	str	r3, [r5, #20]
9001f2e8:	bd38      	pop	{r3, r4, r5, pc}
9001f2ea:	bf00      	nop
9001f2ec:	240397e4 	.word	0x240397e4
9001f2f0:	24000000 	.word	0x24000000
9001f2f4:	9001c07b 	.word	0x9001c07b
9001f2f8:	240000cc 	.word	0x240000cc
9001f2fc:	240397e8 	.word	0x240397e8
9001f300:	9001c079 	.word	0x9001c079
9001f304:	240000d0 	.word	0x240000d0

9001f308 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001f308:	b538      	push	{r3, r4, r5, lr}
9001f30a:	4c15      	ldr	r4, [pc, #84]	; (9001f360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001f30c:	4605      	mov	r5, r0
9001f30e:	7823      	ldrb	r3, [r4, #0]
9001f310:	f3bf 8f5b 	dmb	ish
9001f314:	07da      	lsls	r2, r3, #31
9001f316:	d40b      	bmi.n	9001f330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f318:	4620      	mov	r0, r4
9001f31a:	f008 f9cb 	bl	900276b4 <__cxa_guard_acquire>
9001f31e:	b138      	cbz	r0, 9001f330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f320:	4620      	mov	r0, r4
9001f322:	f008 f9d3 	bl	900276cc <__cxa_guard_release>
9001f326:	4a0f      	ldr	r2, [pc, #60]	; (9001f364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f328:	490f      	ldr	r1, [pc, #60]	; (9001f368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001f32a:	4810      	ldr	r0, [pc, #64]	; (9001f36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f32c:	f008 f9bb 	bl	900276a6 <__aeabi_atexit>
9001f330:	4c0f      	ldr	r4, [pc, #60]	; (9001f370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001f332:	7823      	ldrb	r3, [r4, #0]
9001f334:	f3bf 8f5b 	dmb	ish
9001f338:	07db      	lsls	r3, r3, #31
9001f33a:	d40b      	bmi.n	9001f354 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f33c:	4620      	mov	r0, r4
9001f33e:	f008 f9b9 	bl	900276b4 <__cxa_guard_acquire>
9001f342:	b138      	cbz	r0, 9001f354 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f344:	4620      	mov	r0, r4
9001f346:	f008 f9c1 	bl	900276cc <__cxa_guard_release>
9001f34a:	4a06      	ldr	r2, [pc, #24]	; (9001f364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f34c:	4909      	ldr	r1, [pc, #36]	; (9001f374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001f34e:	480a      	ldr	r0, [pc, #40]	; (9001f378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f350:	f008 f9a9 	bl	900276a6 <__aeabi_atexit>
9001f354:	4b05      	ldr	r3, [pc, #20]	; (9001f36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f356:	60ab      	str	r3, [r5, #8]
9001f358:	4b07      	ldr	r3, [pc, #28]	; (9001f378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f35a:	60eb      	str	r3, [r5, #12]
9001f35c:	bd38      	pop	{r3, r4, r5, pc}
9001f35e:	bf00      	nop
9001f360:	240397bc 	.word	0x240397bc
9001f364:	24000000 	.word	0x24000000
9001f368:	9001c07f 	.word	0x9001c07f
9001f36c:	240000a4 	.word	0x240000a4
9001f370:	240397c0 	.word	0x240397c0
9001f374:	9001c07d 	.word	0x9001c07d
9001f378:	240000a8 	.word	0x240000a8

9001f37c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001f37c:	b510      	push	{r4, lr}
9001f37e:	4604      	mov	r4, r0
9001f380:	f7ff ff88 	bl	9001f294 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001f384:	4620      	mov	r0, r4
9001f386:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f38a:	f7ff bfbd 	b.w	9001f308 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001f390 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001f390:	b538      	push	{r3, r4, r5, lr}
9001f392:	4c15      	ldr	r4, [pc, #84]	; (9001f3e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001f394:	4605      	mov	r5, r0
9001f396:	7823      	ldrb	r3, [r4, #0]
9001f398:	f3bf 8f5b 	dmb	ish
9001f39c:	07da      	lsls	r2, r3, #31
9001f39e:	d40b      	bmi.n	9001f3b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f3a0:	4620      	mov	r0, r4
9001f3a2:	f008 f987 	bl	900276b4 <__cxa_guard_acquire>
9001f3a6:	b138      	cbz	r0, 9001f3b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f3a8:	4620      	mov	r0, r4
9001f3aa:	f008 f98f 	bl	900276cc <__cxa_guard_release>
9001f3ae:	4a0f      	ldr	r2, [pc, #60]	; (9001f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f3b0:	490f      	ldr	r1, [pc, #60]	; (9001f3f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001f3b2:	4810      	ldr	r0, [pc, #64]	; (9001f3f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f3b4:	f008 f977 	bl	900276a6 <__aeabi_atexit>
9001f3b8:	4c0f      	ldr	r4, [pc, #60]	; (9001f3f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001f3ba:	7823      	ldrb	r3, [r4, #0]
9001f3bc:	f3bf 8f5b 	dmb	ish
9001f3c0:	07db      	lsls	r3, r3, #31
9001f3c2:	d40b      	bmi.n	9001f3dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f3c4:	4620      	mov	r0, r4
9001f3c6:	f008 f975 	bl	900276b4 <__cxa_guard_acquire>
9001f3ca:	b138      	cbz	r0, 9001f3dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f3cc:	4620      	mov	r0, r4
9001f3ce:	f008 f97d 	bl	900276cc <__cxa_guard_release>
9001f3d2:	4a06      	ldr	r2, [pc, #24]	; (9001f3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f3d4:	4909      	ldr	r1, [pc, #36]	; (9001f3fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001f3d6:	480a      	ldr	r0, [pc, #40]	; (9001f400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f3d8:	f008 f965 	bl	900276a6 <__aeabi_atexit>
9001f3dc:	4b05      	ldr	r3, [pc, #20]	; (9001f3f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f3de:	622b      	str	r3, [r5, #32]
9001f3e0:	4b07      	ldr	r3, [pc, #28]	; (9001f400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f3e2:	626b      	str	r3, [r5, #36]	; 0x24
9001f3e4:	bd38      	pop	{r3, r4, r5, pc}
9001f3e6:	bf00      	nop
9001f3e8:	240397ec 	.word	0x240397ec
9001f3ec:	24000000 	.word	0x24000000
9001f3f0:	9001c073 	.word	0x9001c073
9001f3f4:	240000d4 	.word	0x240000d4
9001f3f8:	240397f0 	.word	0x240397f0
9001f3fc:	9001c071 	.word	0x9001c071
9001f400:	240000d8 	.word	0x240000d8

9001f404 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001f404:	b538      	push	{r3, r4, r5, lr}
9001f406:	4c15      	ldr	r4, [pc, #84]	; (9001f45c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001f408:	4605      	mov	r5, r0
9001f40a:	7823      	ldrb	r3, [r4, #0]
9001f40c:	f3bf 8f5b 	dmb	ish
9001f410:	07da      	lsls	r2, r3, #31
9001f412:	d40b      	bmi.n	9001f42c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f414:	4620      	mov	r0, r4
9001f416:	f008 f94d 	bl	900276b4 <__cxa_guard_acquire>
9001f41a:	b138      	cbz	r0, 9001f42c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f41c:	4620      	mov	r0, r4
9001f41e:	f008 f955 	bl	900276cc <__cxa_guard_release>
9001f422:	4a0f      	ldr	r2, [pc, #60]	; (9001f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f424:	490f      	ldr	r1, [pc, #60]	; (9001f464 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001f426:	4810      	ldr	r0, [pc, #64]	; (9001f468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f428:	f008 f93d 	bl	900276a6 <__aeabi_atexit>
9001f42c:	4c0f      	ldr	r4, [pc, #60]	; (9001f46c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001f42e:	7823      	ldrb	r3, [r4, #0]
9001f430:	f3bf 8f5b 	dmb	ish
9001f434:	07db      	lsls	r3, r3, #31
9001f436:	d40b      	bmi.n	9001f450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f438:	4620      	mov	r0, r4
9001f43a:	f008 f93b 	bl	900276b4 <__cxa_guard_acquire>
9001f43e:	b138      	cbz	r0, 9001f450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f440:	4620      	mov	r0, r4
9001f442:	f008 f943 	bl	900276cc <__cxa_guard_release>
9001f446:	4a06      	ldr	r2, [pc, #24]	; (9001f460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f448:	4909      	ldr	r1, [pc, #36]	; (9001f470 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001f44a:	480a      	ldr	r0, [pc, #40]	; (9001f474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f44c:	f008 f92b 	bl	900276a6 <__aeabi_atexit>
9001f450:	4b05      	ldr	r3, [pc, #20]	; (9001f468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f452:	61ab      	str	r3, [r5, #24]
9001f454:	4b07      	ldr	r3, [pc, #28]	; (9001f474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f456:	61eb      	str	r3, [r5, #28]
9001f458:	bd38      	pop	{r3, r4, r5, pc}
9001f45a:	bf00      	nop
9001f45c:	240397c4 	.word	0x240397c4
9001f460:	24000000 	.word	0x24000000
9001f464:	9001c077 	.word	0x9001c077
9001f468:	240000ac 	.word	0x240000ac
9001f46c:	240397c8 	.word	0x240397c8
9001f470:	9001c075 	.word	0x9001c075
9001f474:	240000b0 	.word	0x240000b0

9001f478 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001f478:	b510      	push	{r4, lr}
9001f47a:	4604      	mov	r4, r0
9001f47c:	f7ff ff88 	bl	9001f390 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001f480:	4620      	mov	r0, r4
9001f482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f486:	f7ff bfbd 	b.w	9001f404 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001f48c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001f48c:	b538      	push	{r3, r4, r5, lr}
9001f48e:	4c15      	ldr	r4, [pc, #84]	; (9001f4e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001f490:	4605      	mov	r5, r0
9001f492:	7823      	ldrb	r3, [r4, #0]
9001f494:	f3bf 8f5b 	dmb	ish
9001f498:	07da      	lsls	r2, r3, #31
9001f49a:	d40b      	bmi.n	9001f4b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f49c:	4620      	mov	r0, r4
9001f49e:	f008 f909 	bl	900276b4 <__cxa_guard_acquire>
9001f4a2:	b138      	cbz	r0, 9001f4b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f4a4:	4620      	mov	r0, r4
9001f4a6:	f008 f911 	bl	900276cc <__cxa_guard_release>
9001f4aa:	4a0f      	ldr	r2, [pc, #60]	; (9001f4e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f4ac:	490f      	ldr	r1, [pc, #60]	; (9001f4ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001f4ae:	4810      	ldr	r0, [pc, #64]	; (9001f4f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f4b0:	f008 f8f9 	bl	900276a6 <__aeabi_atexit>
9001f4b4:	4c0f      	ldr	r4, [pc, #60]	; (9001f4f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001f4b6:	7823      	ldrb	r3, [r4, #0]
9001f4b8:	f3bf 8f5b 	dmb	ish
9001f4bc:	07db      	lsls	r3, r3, #31
9001f4be:	d40b      	bmi.n	9001f4d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f4c0:	4620      	mov	r0, r4
9001f4c2:	f008 f8f7 	bl	900276b4 <__cxa_guard_acquire>
9001f4c6:	b138      	cbz	r0, 9001f4d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f4c8:	4620      	mov	r0, r4
9001f4ca:	f008 f8ff 	bl	900276cc <__cxa_guard_release>
9001f4ce:	4a06      	ldr	r2, [pc, #24]	; (9001f4e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f4d0:	4909      	ldr	r1, [pc, #36]	; (9001f4f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001f4d2:	480a      	ldr	r0, [pc, #40]	; (9001f4fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f4d4:	f008 f8e7 	bl	900276a6 <__aeabi_atexit>
9001f4d8:	4b05      	ldr	r3, [pc, #20]	; (9001f4f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f4da:	632b      	str	r3, [r5, #48]	; 0x30
9001f4dc:	4b07      	ldr	r3, [pc, #28]	; (9001f4fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f4de:	636b      	str	r3, [r5, #52]	; 0x34
9001f4e0:	bd38      	pop	{r3, r4, r5, pc}
9001f4e2:	bf00      	nop
9001f4e4:	240397fc 	.word	0x240397fc
9001f4e8:	24000000 	.word	0x24000000
9001f4ec:	9001c06b 	.word	0x9001c06b
9001f4f0:	240000e4 	.word	0x240000e4
9001f4f4:	24039800 	.word	0x24039800
9001f4f8:	9001c069 	.word	0x9001c069
9001f4fc:	240000e8 	.word	0x240000e8

9001f500 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001f500:	b538      	push	{r3, r4, r5, lr}
9001f502:	4c15      	ldr	r4, [pc, #84]	; (9001f558 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001f504:	4605      	mov	r5, r0
9001f506:	7823      	ldrb	r3, [r4, #0]
9001f508:	f3bf 8f5b 	dmb	ish
9001f50c:	07da      	lsls	r2, r3, #31
9001f50e:	d40b      	bmi.n	9001f528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f510:	4620      	mov	r0, r4
9001f512:	f008 f8cf 	bl	900276b4 <__cxa_guard_acquire>
9001f516:	b138      	cbz	r0, 9001f528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f518:	4620      	mov	r0, r4
9001f51a:	f008 f8d7 	bl	900276cc <__cxa_guard_release>
9001f51e:	4a0f      	ldr	r2, [pc, #60]	; (9001f55c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f520:	490f      	ldr	r1, [pc, #60]	; (9001f560 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001f522:	4810      	ldr	r0, [pc, #64]	; (9001f564 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f524:	f008 f8bf 	bl	900276a6 <__aeabi_atexit>
9001f528:	4c0f      	ldr	r4, [pc, #60]	; (9001f568 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001f52a:	7823      	ldrb	r3, [r4, #0]
9001f52c:	f3bf 8f5b 	dmb	ish
9001f530:	07db      	lsls	r3, r3, #31
9001f532:	d40b      	bmi.n	9001f54c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f534:	4620      	mov	r0, r4
9001f536:	f008 f8bd 	bl	900276b4 <__cxa_guard_acquire>
9001f53a:	b138      	cbz	r0, 9001f54c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f53c:	4620      	mov	r0, r4
9001f53e:	f008 f8c5 	bl	900276cc <__cxa_guard_release>
9001f542:	4a06      	ldr	r2, [pc, #24]	; (9001f55c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f544:	4909      	ldr	r1, [pc, #36]	; (9001f56c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001f546:	480a      	ldr	r0, [pc, #40]	; (9001f570 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f548:	f008 f8ad 	bl	900276a6 <__aeabi_atexit>
9001f54c:	4b05      	ldr	r3, [pc, #20]	; (9001f564 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f54e:	62ab      	str	r3, [r5, #40]	; 0x28
9001f550:	4b07      	ldr	r3, [pc, #28]	; (9001f570 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f552:	62eb      	str	r3, [r5, #44]	; 0x2c
9001f554:	bd38      	pop	{r3, r4, r5, pc}
9001f556:	bf00      	nop
9001f558:	240397cc 	.word	0x240397cc
9001f55c:	24000000 	.word	0x24000000
9001f560:	9001c06f 	.word	0x9001c06f
9001f564:	240000b4 	.word	0x240000b4
9001f568:	240397d0 	.word	0x240397d0
9001f56c:	9001c06d 	.word	0x9001c06d
9001f570:	240000b8 	.word	0x240000b8

9001f574 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001f574:	b510      	push	{r4, lr}
9001f576:	4604      	mov	r4, r0
9001f578:	f7ff ff88 	bl	9001f48c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001f57c:	4620      	mov	r0, r4
9001f57e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f582:	f7ff bfbd 	b.w	9001f500 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001f588 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001f588:	b538      	push	{r3, r4, r5, lr}
9001f58a:	4c15      	ldr	r4, [pc, #84]	; (9001f5e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001f58c:	4605      	mov	r5, r0
9001f58e:	7823      	ldrb	r3, [r4, #0]
9001f590:	f3bf 8f5b 	dmb	ish
9001f594:	07da      	lsls	r2, r3, #31
9001f596:	d40b      	bmi.n	9001f5b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f598:	4620      	mov	r0, r4
9001f59a:	f008 f88b 	bl	900276b4 <__cxa_guard_acquire>
9001f59e:	b138      	cbz	r0, 9001f5b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f5a0:	4620      	mov	r0, r4
9001f5a2:	f008 f893 	bl	900276cc <__cxa_guard_release>
9001f5a6:	4a0f      	ldr	r2, [pc, #60]	; (9001f5e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f5a8:	490f      	ldr	r1, [pc, #60]	; (9001f5e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001f5aa:	4810      	ldr	r0, [pc, #64]	; (9001f5ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f5ac:	f008 f87b 	bl	900276a6 <__aeabi_atexit>
9001f5b0:	4c0f      	ldr	r4, [pc, #60]	; (9001f5f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001f5b2:	7823      	ldrb	r3, [r4, #0]
9001f5b4:	f3bf 8f5b 	dmb	ish
9001f5b8:	07db      	lsls	r3, r3, #31
9001f5ba:	d40b      	bmi.n	9001f5d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f5bc:	4620      	mov	r0, r4
9001f5be:	f008 f879 	bl	900276b4 <__cxa_guard_acquire>
9001f5c2:	b138      	cbz	r0, 9001f5d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f5c4:	4620      	mov	r0, r4
9001f5c6:	f008 f881 	bl	900276cc <__cxa_guard_release>
9001f5ca:	4a06      	ldr	r2, [pc, #24]	; (9001f5e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f5cc:	4909      	ldr	r1, [pc, #36]	; (9001f5f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001f5ce:	480a      	ldr	r0, [pc, #40]	; (9001f5f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f5d0:	f008 f869 	bl	900276a6 <__aeabi_atexit>
9001f5d4:	4b05      	ldr	r3, [pc, #20]	; (9001f5ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f5d6:	652b      	str	r3, [r5, #80]	; 0x50
9001f5d8:	4b07      	ldr	r3, [pc, #28]	; (9001f5f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f5da:	656b      	str	r3, [r5, #84]	; 0x54
9001f5dc:	bd38      	pop	{r3, r4, r5, pc}
9001f5de:	bf00      	nop
9001f5e0:	24039804 	.word	0x24039804
9001f5e4:	24000000 	.word	0x24000000
9001f5e8:	9001c05b 	.word	0x9001c05b
9001f5ec:	240000ec 	.word	0x240000ec
9001f5f0:	24039808 	.word	0x24039808
9001f5f4:	9001c059 	.word	0x9001c059
9001f5f8:	240000f0 	.word	0x240000f0

9001f5fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001f5fc:	b538      	push	{r3, r4, r5, lr}
9001f5fe:	4c15      	ldr	r4, [pc, #84]	; (9001f654 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001f600:	4605      	mov	r5, r0
9001f602:	7823      	ldrb	r3, [r4, #0]
9001f604:	f3bf 8f5b 	dmb	ish
9001f608:	07da      	lsls	r2, r3, #31
9001f60a:	d40b      	bmi.n	9001f624 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f60c:	4620      	mov	r0, r4
9001f60e:	f008 f851 	bl	900276b4 <__cxa_guard_acquire>
9001f612:	b138      	cbz	r0, 9001f624 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f614:	4620      	mov	r0, r4
9001f616:	f008 f859 	bl	900276cc <__cxa_guard_release>
9001f61a:	4a0f      	ldr	r2, [pc, #60]	; (9001f658 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f61c:	490f      	ldr	r1, [pc, #60]	; (9001f65c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001f61e:	4810      	ldr	r0, [pc, #64]	; (9001f660 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f620:	f008 f841 	bl	900276a6 <__aeabi_atexit>
9001f624:	4c0f      	ldr	r4, [pc, #60]	; (9001f664 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001f626:	7823      	ldrb	r3, [r4, #0]
9001f628:	f3bf 8f5b 	dmb	ish
9001f62c:	07db      	lsls	r3, r3, #31
9001f62e:	d40b      	bmi.n	9001f648 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f630:	4620      	mov	r0, r4
9001f632:	f008 f83f 	bl	900276b4 <__cxa_guard_acquire>
9001f636:	b138      	cbz	r0, 9001f648 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f638:	4620      	mov	r0, r4
9001f63a:	f008 f847 	bl	900276cc <__cxa_guard_release>
9001f63e:	4a06      	ldr	r2, [pc, #24]	; (9001f658 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f640:	4909      	ldr	r1, [pc, #36]	; (9001f668 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001f642:	480a      	ldr	r0, [pc, #40]	; (9001f66c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f644:	f008 f82f 	bl	900276a6 <__aeabi_atexit>
9001f648:	4b05      	ldr	r3, [pc, #20]	; (9001f660 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f64a:	64ab      	str	r3, [r5, #72]	; 0x48
9001f64c:	4b07      	ldr	r3, [pc, #28]	; (9001f66c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f64e:	64eb      	str	r3, [r5, #76]	; 0x4c
9001f650:	bd38      	pop	{r3, r4, r5, pc}
9001f652:	bf00      	nop
9001f654:	2403980c 	.word	0x2403980c
9001f658:	24000000 	.word	0x24000000
9001f65c:	9001c05f 	.word	0x9001c05f
9001f660:	240000f4 	.word	0x240000f4
9001f664:	24039810 	.word	0x24039810
9001f668:	9001c05d 	.word	0x9001c05d
9001f66c:	240000f8 	.word	0x240000f8

9001f670 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001f670:	b538      	push	{r3, r4, r5, lr}
9001f672:	4c15      	ldr	r4, [pc, #84]	; (9001f6c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001f674:	4605      	mov	r5, r0
9001f676:	7823      	ldrb	r3, [r4, #0]
9001f678:	f3bf 8f5b 	dmb	ish
9001f67c:	07da      	lsls	r2, r3, #31
9001f67e:	d40b      	bmi.n	9001f698 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f680:	4620      	mov	r0, r4
9001f682:	f008 f817 	bl	900276b4 <__cxa_guard_acquire>
9001f686:	b138      	cbz	r0, 9001f698 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f688:	4620      	mov	r0, r4
9001f68a:	f008 f81f 	bl	900276cc <__cxa_guard_release>
9001f68e:	4a0f      	ldr	r2, [pc, #60]	; (9001f6cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f690:	490f      	ldr	r1, [pc, #60]	; (9001f6d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001f692:	4810      	ldr	r0, [pc, #64]	; (9001f6d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f694:	f008 f807 	bl	900276a6 <__aeabi_atexit>
9001f698:	4c0f      	ldr	r4, [pc, #60]	; (9001f6d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001f69a:	7823      	ldrb	r3, [r4, #0]
9001f69c:	f3bf 8f5b 	dmb	ish
9001f6a0:	07db      	lsls	r3, r3, #31
9001f6a2:	d40b      	bmi.n	9001f6bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f6a4:	4620      	mov	r0, r4
9001f6a6:	f008 f805 	bl	900276b4 <__cxa_guard_acquire>
9001f6aa:	b138      	cbz	r0, 9001f6bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f6ac:	4620      	mov	r0, r4
9001f6ae:	f008 f80d 	bl	900276cc <__cxa_guard_release>
9001f6b2:	4a06      	ldr	r2, [pc, #24]	; (9001f6cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f6b4:	4909      	ldr	r1, [pc, #36]	; (9001f6dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001f6b6:	480a      	ldr	r0, [pc, #40]	; (9001f6e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f6b8:	f007 fff5 	bl	900276a6 <__aeabi_atexit>
9001f6bc:	4b05      	ldr	r3, [pc, #20]	; (9001f6d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f6be:	642b      	str	r3, [r5, #64]	; 0x40
9001f6c0:	4b07      	ldr	r3, [pc, #28]	; (9001f6e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f6c2:	646b      	str	r3, [r5, #68]	; 0x44
9001f6c4:	bd38      	pop	{r3, r4, r5, pc}
9001f6c6:	bf00      	nop
9001f6c8:	240397d4 	.word	0x240397d4
9001f6cc:	24000000 	.word	0x24000000
9001f6d0:	9001c063 	.word	0x9001c063
9001f6d4:	240000bc 	.word	0x240000bc
9001f6d8:	240397d8 	.word	0x240397d8
9001f6dc:	9001c061 	.word	0x9001c061
9001f6e0:	240000c0 	.word	0x240000c0

9001f6e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001f6e4:	b538      	push	{r3, r4, r5, lr}
9001f6e6:	4c15      	ldr	r4, [pc, #84]	; (9001f73c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001f6e8:	4605      	mov	r5, r0
9001f6ea:	7823      	ldrb	r3, [r4, #0]
9001f6ec:	f3bf 8f5b 	dmb	ish
9001f6f0:	07da      	lsls	r2, r3, #31
9001f6f2:	d40b      	bmi.n	9001f70c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f6f4:	4620      	mov	r0, r4
9001f6f6:	f007 ffdd 	bl	900276b4 <__cxa_guard_acquire>
9001f6fa:	b138      	cbz	r0, 9001f70c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f6fc:	4620      	mov	r0, r4
9001f6fe:	f007 ffe5 	bl	900276cc <__cxa_guard_release>
9001f702:	4a0f      	ldr	r2, [pc, #60]	; (9001f740 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f704:	490f      	ldr	r1, [pc, #60]	; (9001f744 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001f706:	4810      	ldr	r0, [pc, #64]	; (9001f748 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f708:	f007 ffcd 	bl	900276a6 <__aeabi_atexit>
9001f70c:	4c0f      	ldr	r4, [pc, #60]	; (9001f74c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001f70e:	7823      	ldrb	r3, [r4, #0]
9001f710:	f3bf 8f5b 	dmb	ish
9001f714:	07db      	lsls	r3, r3, #31
9001f716:	d40b      	bmi.n	9001f730 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f718:	4620      	mov	r0, r4
9001f71a:	f007 ffcb 	bl	900276b4 <__cxa_guard_acquire>
9001f71e:	b138      	cbz	r0, 9001f730 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f720:	4620      	mov	r0, r4
9001f722:	f007 ffd3 	bl	900276cc <__cxa_guard_release>
9001f726:	4a06      	ldr	r2, [pc, #24]	; (9001f740 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f728:	4909      	ldr	r1, [pc, #36]	; (9001f750 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001f72a:	480a      	ldr	r0, [pc, #40]	; (9001f754 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f72c:	f007 ffbb 	bl	900276a6 <__aeabi_atexit>
9001f730:	4b05      	ldr	r3, [pc, #20]	; (9001f748 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f732:	63ab      	str	r3, [r5, #56]	; 0x38
9001f734:	4b07      	ldr	r3, [pc, #28]	; (9001f754 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f736:	63eb      	str	r3, [r5, #60]	; 0x3c
9001f738:	bd38      	pop	{r3, r4, r5, pc}
9001f73a:	bf00      	nop
9001f73c:	240397f4 	.word	0x240397f4
9001f740:	24000000 	.word	0x24000000
9001f744:	9001c067 	.word	0x9001c067
9001f748:	240000dc 	.word	0x240000dc
9001f74c:	240397f8 	.word	0x240397f8
9001f750:	9001c065 	.word	0x9001c065
9001f754:	240000e0 	.word	0x240000e0

9001f758 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001f758:	b510      	push	{r4, lr}
9001f75a:	4604      	mov	r4, r0
9001f75c:	f7ff ff14 	bl	9001f588 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001f760:	4620      	mov	r0, r4
9001f762:	f7ff ff85 	bl	9001f670 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001f766:	4620      	mov	r0, r4
9001f768:	f7ff ff48 	bl	9001f5fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001f76c:	4620      	mov	r0, r4
9001f76e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f772:	f7ff bfb7 	b.w	9001f6e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001f778 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001f778:	b538      	push	{r3, r4, r5, lr}
9001f77a:	4c15      	ldr	r4, [pc, #84]	; (9001f7d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001f77c:	4605      	mov	r5, r0
9001f77e:	7823      	ldrb	r3, [r4, #0]
9001f780:	f3bf 8f5b 	dmb	ish
9001f784:	07da      	lsls	r2, r3, #31
9001f786:	d40b      	bmi.n	9001f7a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f788:	4620      	mov	r0, r4
9001f78a:	f007 ff93 	bl	900276b4 <__cxa_guard_acquire>
9001f78e:	b138      	cbz	r0, 9001f7a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f790:	4620      	mov	r0, r4
9001f792:	f007 ff9b 	bl	900276cc <__cxa_guard_release>
9001f796:	4a0f      	ldr	r2, [pc, #60]	; (9001f7d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f798:	490f      	ldr	r1, [pc, #60]	; (9001f7d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001f79a:	4810      	ldr	r0, [pc, #64]	; (9001f7dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f79c:	f007 ff83 	bl	900276a6 <__aeabi_atexit>
9001f7a0:	4c0f      	ldr	r4, [pc, #60]	; (9001f7e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001f7a2:	7823      	ldrb	r3, [r4, #0]
9001f7a4:	f3bf 8f5b 	dmb	ish
9001f7a8:	07db      	lsls	r3, r3, #31
9001f7aa:	d40b      	bmi.n	9001f7c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f7ac:	4620      	mov	r0, r4
9001f7ae:	f007 ff81 	bl	900276b4 <__cxa_guard_acquire>
9001f7b2:	b138      	cbz	r0, 9001f7c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f7b4:	4620      	mov	r0, r4
9001f7b6:	f007 ff89 	bl	900276cc <__cxa_guard_release>
9001f7ba:	4a06      	ldr	r2, [pc, #24]	; (9001f7d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f7bc:	4909      	ldr	r1, [pc, #36]	; (9001f7e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001f7be:	480a      	ldr	r0, [pc, #40]	; (9001f7e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f7c0:	f007 ff71 	bl	900276a6 <__aeabi_atexit>
9001f7c4:	4b05      	ldr	r3, [pc, #20]	; (9001f7dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f7c6:	662b      	str	r3, [r5, #96]	; 0x60
9001f7c8:	4b07      	ldr	r3, [pc, #28]	; (9001f7e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f7ca:	666b      	str	r3, [r5, #100]	; 0x64
9001f7cc:	bd38      	pop	{r3, r4, r5, pc}
9001f7ce:	bf00      	nop
9001f7d0:	240397dc 	.word	0x240397dc
9001f7d4:	24000000 	.word	0x24000000
9001f7d8:	9001c053 	.word	0x9001c053
9001f7dc:	240000c4 	.word	0x240000c4
9001f7e0:	240397e0 	.word	0x240397e0
9001f7e4:	9001c051 	.word	0x9001c051
9001f7e8:	240000c8 	.word	0x240000c8

9001f7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001f7ec:	b538      	push	{r3, r4, r5, lr}
9001f7ee:	4c15      	ldr	r4, [pc, #84]	; (9001f844 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001f7f0:	4605      	mov	r5, r0
9001f7f2:	7823      	ldrb	r3, [r4, #0]
9001f7f4:	f3bf 8f5b 	dmb	ish
9001f7f8:	07da      	lsls	r2, r3, #31
9001f7fa:	d40b      	bmi.n	9001f814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f7fc:	4620      	mov	r0, r4
9001f7fe:	f007 ff59 	bl	900276b4 <__cxa_guard_acquire>
9001f802:	b138      	cbz	r0, 9001f814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f804:	4620      	mov	r0, r4
9001f806:	f007 ff61 	bl	900276cc <__cxa_guard_release>
9001f80a:	4a0f      	ldr	r2, [pc, #60]	; (9001f848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f80c:	490f      	ldr	r1, [pc, #60]	; (9001f84c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001f80e:	4810      	ldr	r0, [pc, #64]	; (9001f850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f810:	f007 ff49 	bl	900276a6 <__aeabi_atexit>
9001f814:	4c0f      	ldr	r4, [pc, #60]	; (9001f854 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001f816:	7823      	ldrb	r3, [r4, #0]
9001f818:	f3bf 8f5b 	dmb	ish
9001f81c:	07db      	lsls	r3, r3, #31
9001f81e:	d40b      	bmi.n	9001f838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f820:	4620      	mov	r0, r4
9001f822:	f007 ff47 	bl	900276b4 <__cxa_guard_acquire>
9001f826:	b138      	cbz	r0, 9001f838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f828:	4620      	mov	r0, r4
9001f82a:	f007 ff4f 	bl	900276cc <__cxa_guard_release>
9001f82e:	4a06      	ldr	r2, [pc, #24]	; (9001f848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f830:	4909      	ldr	r1, [pc, #36]	; (9001f858 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001f832:	480a      	ldr	r0, [pc, #40]	; (9001f85c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f834:	f007 ff37 	bl	900276a6 <__aeabi_atexit>
9001f838:	4b05      	ldr	r3, [pc, #20]	; (9001f850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f83a:	65ab      	str	r3, [r5, #88]	; 0x58
9001f83c:	4b07      	ldr	r3, [pc, #28]	; (9001f85c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f83e:	65eb      	str	r3, [r5, #92]	; 0x5c
9001f840:	bd38      	pop	{r3, r4, r5, pc}
9001f842:	bf00      	nop
9001f844:	240397b4 	.word	0x240397b4
9001f848:	24000000 	.word	0x24000000
9001f84c:	9001c057 	.word	0x9001c057
9001f850:	2400009c 	.word	0x2400009c
9001f854:	240397b8 	.word	0x240397b8
9001f858:	9001c055 	.word	0x9001c055
9001f85c:	240000a0 	.word	0x240000a0

9001f860 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001f860:	b510      	push	{r4, lr}
9001f862:	4604      	mov	r4, r0
9001f864:	f7ff ff88 	bl	9001f778 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001f868:	4620      	mov	r0, r4
9001f86a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f86e:	f7ff bfbd 	b.w	9001f7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001f874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001f874:	b538      	push	{r3, r4, r5, lr}
9001f876:	4c15      	ldr	r4, [pc, #84]	; (9001f8cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001f878:	4605      	mov	r5, r0
9001f87a:	7823      	ldrb	r3, [r4, #0]
9001f87c:	f3bf 8f5b 	dmb	ish
9001f880:	07da      	lsls	r2, r3, #31
9001f882:	d40b      	bmi.n	9001f89c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f884:	4620      	mov	r0, r4
9001f886:	f007 ff15 	bl	900276b4 <__cxa_guard_acquire>
9001f88a:	b138      	cbz	r0, 9001f89c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f88c:	4620      	mov	r0, r4
9001f88e:	f007 ff1d 	bl	900276cc <__cxa_guard_release>
9001f892:	4a0f      	ldr	r2, [pc, #60]	; (9001f8d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f894:	490f      	ldr	r1, [pc, #60]	; (9001f8d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001f896:	4810      	ldr	r0, [pc, #64]	; (9001f8d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f898:	f007 ff05 	bl	900276a6 <__aeabi_atexit>
9001f89c:	4c0f      	ldr	r4, [pc, #60]	; (9001f8dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001f89e:	7823      	ldrb	r3, [r4, #0]
9001f8a0:	f3bf 8f5b 	dmb	ish
9001f8a4:	07db      	lsls	r3, r3, #31
9001f8a6:	d40b      	bmi.n	9001f8c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f8a8:	4620      	mov	r0, r4
9001f8aa:	f007 ff03 	bl	900276b4 <__cxa_guard_acquire>
9001f8ae:	b138      	cbz	r0, 9001f8c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f8b0:	4620      	mov	r0, r4
9001f8b2:	f007 ff0b 	bl	900276cc <__cxa_guard_release>
9001f8b6:	4a06      	ldr	r2, [pc, #24]	; (9001f8d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f8b8:	4909      	ldr	r1, [pc, #36]	; (9001f8e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001f8ba:	480a      	ldr	r0, [pc, #40]	; (9001f8e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f8bc:	f007 fef3 	bl	900276a6 <__aeabi_atexit>
9001f8c0:	4b05      	ldr	r3, [pc, #20]	; (9001f8d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f8c2:	672b      	str	r3, [r5, #112]	; 0x70
9001f8c4:	4b07      	ldr	r3, [pc, #28]	; (9001f8e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f8c6:	676b      	str	r3, [r5, #116]	; 0x74
9001f8c8:	bd38      	pop	{r3, r4, r5, pc}
9001f8ca:	bf00      	nop
9001f8cc:	240397ac 	.word	0x240397ac
9001f8d0:	24000000 	.word	0x24000000
9001f8d4:	9001c04b 	.word	0x9001c04b
9001f8d8:	24000094 	.word	0x24000094
9001f8dc:	240397b0 	.word	0x240397b0
9001f8e0:	9001c049 	.word	0x9001c049
9001f8e4:	24000098 	.word	0x24000098

9001f8e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001f8e8:	b538      	push	{r3, r4, r5, lr}
9001f8ea:	4c15      	ldr	r4, [pc, #84]	; (9001f940 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001f8ec:	4605      	mov	r5, r0
9001f8ee:	7823      	ldrb	r3, [r4, #0]
9001f8f0:	f3bf 8f5b 	dmb	ish
9001f8f4:	07da      	lsls	r2, r3, #31
9001f8f6:	d40b      	bmi.n	9001f910 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f8f8:	4620      	mov	r0, r4
9001f8fa:	f007 fedb 	bl	900276b4 <__cxa_guard_acquire>
9001f8fe:	b138      	cbz	r0, 9001f910 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f900:	4620      	mov	r0, r4
9001f902:	f007 fee3 	bl	900276cc <__cxa_guard_release>
9001f906:	4a0f      	ldr	r2, [pc, #60]	; (9001f944 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f908:	490f      	ldr	r1, [pc, #60]	; (9001f948 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001f90a:	4810      	ldr	r0, [pc, #64]	; (9001f94c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f90c:	f007 fecb 	bl	900276a6 <__aeabi_atexit>
9001f910:	4c0f      	ldr	r4, [pc, #60]	; (9001f950 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001f912:	7823      	ldrb	r3, [r4, #0]
9001f914:	f3bf 8f5b 	dmb	ish
9001f918:	07db      	lsls	r3, r3, #31
9001f91a:	d40b      	bmi.n	9001f934 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f91c:	4620      	mov	r0, r4
9001f91e:	f007 fec9 	bl	900276b4 <__cxa_guard_acquire>
9001f922:	b138      	cbz	r0, 9001f934 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f924:	4620      	mov	r0, r4
9001f926:	f007 fed1 	bl	900276cc <__cxa_guard_release>
9001f92a:	4a06      	ldr	r2, [pc, #24]	; (9001f944 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f92c:	4909      	ldr	r1, [pc, #36]	; (9001f954 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001f92e:	480a      	ldr	r0, [pc, #40]	; (9001f958 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f930:	f007 feb9 	bl	900276a6 <__aeabi_atexit>
9001f934:	4b05      	ldr	r3, [pc, #20]	; (9001f94c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f936:	66ab      	str	r3, [r5, #104]	; 0x68
9001f938:	4b07      	ldr	r3, [pc, #28]	; (9001f958 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f93a:	66eb      	str	r3, [r5, #108]	; 0x6c
9001f93c:	bd38      	pop	{r3, r4, r5, pc}
9001f93e:	bf00      	nop
9001f940:	240397a4 	.word	0x240397a4
9001f944:	24000000 	.word	0x24000000
9001f948:	9001c04f 	.word	0x9001c04f
9001f94c:	2400008c 	.word	0x2400008c
9001f950:	240397a8 	.word	0x240397a8
9001f954:	9001c04d 	.word	0x9001c04d
9001f958:	24000090 	.word	0x24000090

9001f95c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001f95c:	b510      	push	{r4, lr}
9001f95e:	4604      	mov	r4, r0
9001f960:	f7ff ff88 	bl	9001f874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001f964:	4620      	mov	r0, r4
9001f966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f96a:	f7ff bfbd 	b.w	9001f8e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001f96e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001f96e:	b510      	push	{r4, lr}
9001f970:	4604      	mov	r4, r0
9001f972:	f7ff fff3 	bl	9001f95c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001f976:	4620      	mov	r0, r4
9001f978:	f7ff ff72 	bl	9001f860 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001f97c:	4620      	mov	r0, r4
9001f97e:	f7ff fdf9 	bl	9001f574 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001f982:	4620      	mov	r0, r4
9001f984:	f7ff fcfa 	bl	9001f37c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001f988:	4620      	mov	r0, r4
9001f98a:	f7ff fd75 	bl	9001f478 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001f98e:	4620      	mov	r0, r4
9001f990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f994:	f7ff bee0 	b.w	9001f758 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001f998 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001f998:	b538      	push	{r3, r4, r5, lr}
9001f99a:	4c0b      	ldr	r4, [pc, #44]	; (9001f9c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001f99c:	4605      	mov	r5, r0
9001f99e:	7823      	ldrb	r3, [r4, #0]
9001f9a0:	f3bf 8f5b 	dmb	ish
9001f9a4:	07db      	lsls	r3, r3, #31
9001f9a6:	d40b      	bmi.n	9001f9c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f9a8:	4620      	mov	r0, r4
9001f9aa:	f007 fe83 	bl	900276b4 <__cxa_guard_acquire>
9001f9ae:	b138      	cbz	r0, 9001f9c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f9b0:	4620      	mov	r0, r4
9001f9b2:	f007 fe8b 	bl	900276cc <__cxa_guard_release>
9001f9b6:	4a05      	ldr	r2, [pc, #20]	; (9001f9cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001f9b8:	4905      	ldr	r1, [pc, #20]	; (9001f9d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001f9ba:	4806      	ldr	r0, [pc, #24]	; (9001f9d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f9bc:	f007 fe73 	bl	900276a6 <__aeabi_atexit>
9001f9c0:	4b04      	ldr	r3, [pc, #16]	; (9001f9d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f9c2:	67ab      	str	r3, [r5, #120]	; 0x78
9001f9c4:	bd38      	pop	{r3, r4, r5, pc}
9001f9c6:	bf00      	nop
9001f9c8:	24039798 	.word	0x24039798
9001f9cc:	24000000 	.word	0x24000000
9001f9d0:	9001c047 	.word	0x9001c047
9001f9d4:	24000084 	.word	0x24000084

9001f9d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001f9d8:	b538      	push	{r3, r4, r5, lr}
9001f9da:	4c0b      	ldr	r4, [pc, #44]	; (9001fa08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001f9dc:	4605      	mov	r5, r0
9001f9de:	7823      	ldrb	r3, [r4, #0]
9001f9e0:	f3bf 8f5b 	dmb	ish
9001f9e4:	07db      	lsls	r3, r3, #31
9001f9e6:	d40b      	bmi.n	9001fa00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f9e8:	4620      	mov	r0, r4
9001f9ea:	f007 fe63 	bl	900276b4 <__cxa_guard_acquire>
9001f9ee:	b138      	cbz	r0, 9001fa00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f9f0:	4620      	mov	r0, r4
9001f9f2:	f007 fe6b 	bl	900276cc <__cxa_guard_release>
9001f9f6:	4a05      	ldr	r2, [pc, #20]	; (9001fa0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001f9f8:	4905      	ldr	r1, [pc, #20]	; (9001fa10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001f9fa:	4806      	ldr	r0, [pc, #24]	; (9001fa14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001f9fc:	f007 fe53 	bl	900276a6 <__aeabi_atexit>
9001fa00:	4b04      	ldr	r3, [pc, #16]	; (9001fa14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001fa02:	67eb      	str	r3, [r5, #124]	; 0x7c
9001fa04:	bd38      	pop	{r3, r4, r5, pc}
9001fa06:	bf00      	nop
9001fa08:	2403979c 	.word	0x2403979c
9001fa0c:	24000000 	.word	0x24000000
9001fa10:	9001c045 	.word	0x9001c045
9001fa14:	24000088 	.word	0x24000088

9001fa18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001fa18:	b570      	push	{r4, r5, r6, lr}
9001fa1a:	4d0d      	ldr	r5, [pc, #52]	; (9001fa50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001fa1c:	4606      	mov	r6, r0
9001fa1e:	4c0d      	ldr	r4, [pc, #52]	; (9001fa54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001fa20:	782b      	ldrb	r3, [r5, #0]
9001fa22:	f3bf 8f5b 	dmb	ish
9001fa26:	f013 0f01 	tst.w	r3, #1
9001fa2a:	d10d      	bne.n	9001fa48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fa2c:	4628      	mov	r0, r5
9001fa2e:	f007 fe41 	bl	900276b4 <__cxa_guard_acquire>
9001fa32:	b148      	cbz	r0, 9001fa48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fa34:	4b08      	ldr	r3, [pc, #32]	; (9001fa58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001fa36:	4628      	mov	r0, r5
9001fa38:	6023      	str	r3, [r4, #0]
9001fa3a:	f007 fe47 	bl	900276cc <__cxa_guard_release>
9001fa3e:	4a07      	ldr	r2, [pc, #28]	; (9001fa5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001fa40:	4620      	mov	r0, r4
9001fa42:	4907      	ldr	r1, [pc, #28]	; (9001fa60 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001fa44:	f007 fe2f 	bl	900276a6 <__aeabi_atexit>
9001fa48:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
9001fa4c:	bd70      	pop	{r4, r5, r6, pc}
9001fa4e:	bf00      	nop
9001fa50:	240397a0 	.word	0x240397a0
9001fa54:	24039814 	.word	0x24039814
9001fa58:	9002bc1c 	.word	0x9002bc1c
9001fa5c:	24000000 	.word	0x24000000
9001fa60:	9001c043 	.word	0x9001c043

9001fa64 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001fa64:	b510      	push	{r4, lr}
9001fa66:	4604      	mov	r4, r0
9001fa68:	f7ff ff96 	bl	9001f998 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001fa6c:	4620      	mov	r0, r4
9001fa6e:	f7ff ffb3 	bl	9001f9d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001fa72:	4620      	mov	r0, r4
9001fa74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fa78:	f7ff bfce 	b.w	9001fa18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001fa7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001fa7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa80:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001fa84:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001fa88:	2d00      	cmp	r5, #0
9001fa8a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001fa8e:	fb05 4c0e 	mla	ip, r5, lr, r4
9001fa92:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001fa96:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001fa9a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001fa9e:	eb02 0a0c 	add.w	sl, r2, ip
9001faa2:	8808      	ldrh	r0, [r1, #0]
9001faa4:	f2c0 80b0 	blt.w	9001fc08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001faa8:	45ab      	cmp	fp, r5
9001faaa:	f340 80ad 	ble.w	9001fc08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001faae:	2c00      	cmp	r4, #0
9001fab0:	f2c0 80a8 	blt.w	9001fc04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001fab4:	45a6      	cmp	lr, r4
9001fab6:	f340 80a5 	ble.w	9001fc04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001faba:	f812 200c 	ldrb.w	r2, [r2, ip]
9001fabe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001fac2:	1c62      	adds	r2, r4, #1
9001fac4:	f100 80a3 	bmi.w	9001fc0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001fac8:	4596      	cmp	lr, r2
9001faca:	f340 80a0 	ble.w	9001fc0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001face:	f1b9 0f00 	cmp.w	r9, #0
9001fad2:	f000 809c 	beq.w	9001fc0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001fad6:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001fada:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001fade:	3501      	adds	r5, #1
9001fae0:	f100 8099 	bmi.w	9001fc16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001fae4:	45ab      	cmp	fp, r5
9001fae6:	f340 8096 	ble.w	9001fc16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001faea:	2f00      	cmp	r7, #0
9001faec:	f000 8093 	beq.w	9001fc16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001faf0:	2c00      	cmp	r4, #0
9001faf2:	f2c0 808e 	blt.w	9001fc12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001faf6:	45a6      	cmp	lr, r4
9001faf8:	f340 808b 	ble.w	9001fc12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001fafc:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001fb00:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001fb04:	3401      	adds	r4, #1
9001fb06:	f100 8089 	bmi.w	9001fc1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fb0a:	45a6      	cmp	lr, r4
9001fb0c:	f340 8086 	ble.w	9001fc1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fb10:	f1b9 0f00 	cmp.w	r9, #0
9001fb14:	f000 8082 	beq.w	9001fc1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001fb18:	44d6      	add	lr, sl
9001fb1a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fb1e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001fb22:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001fb26:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001fb2a:	fb19 fe07 	smulbb	lr, r9, r7
9001fb2e:	f1c7 0210 	rsb	r2, r7, #16
9001fb32:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001fb36:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001fb3a:	eba2 0209 	sub.w	r2, r2, r9
9001fb3e:	ea44 0808 	orr.w	r8, r4, r8
9001fb42:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001fb46:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001fb4a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001fb4e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001fb52:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001fb56:	ea44 0c0c 	orr.w	ip, r4, ip
9001fb5a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001fb5e:	fb04 f40c 	mul.w	r4, r4, ip
9001fb62:	fb02 4808 	mla	r8, r2, r8, r4
9001fb66:	041a      	lsls	r2, r3, #16
9001fb68:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fb6c:	b2b4      	uxth	r4, r6
9001fb6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001fb72:	43f6      	mvns	r6, r6
9001fb74:	4313      	orrs	r3, r2
9001fb76:	042a      	lsls	r2, r5, #16
9001fb78:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001fb7c:	b2f6      	uxtb	r6, r6
9001fb7e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001fb82:	fb0e 8303 	mla	r3, lr, r3, r8
9001fb86:	432a      	orrs	r2, r5
9001fb88:	fb07 3202 	mla	r2, r7, r2, r3
9001fb8c:	10c7      	asrs	r7, r0, #3
9001fb8e:	0d53      	lsrs	r3, r2, #21
9001fb90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001fb94:	0952      	lsrs	r2, r2, #5
9001fb96:	fb17 f706 	smulbb	r7, r7, r6
9001fb9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fb9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001fba2:	431a      	orrs	r2, r3
9001fba4:	b293      	uxth	r3, r2
9001fba6:	1202      	asrs	r2, r0, #8
9001fba8:	121d      	asrs	r5, r3, #8
9001fbaa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001fbae:	00c0      	lsls	r0, r0, #3
9001fbb0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fbb4:	fb12 f206 	smulbb	r2, r2, r6
9001fbb8:	b2c0      	uxtb	r0, r0
9001fbba:	fb05 2504 	mla	r5, r5, r4, r2
9001fbbe:	10da      	asrs	r2, r3, #3
9001fbc0:	fb10 f006 	smulbb	r0, r0, r6
9001fbc4:	00db      	lsls	r3, r3, #3
9001fbc6:	b2ad      	uxth	r5, r5
9001fbc8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fbcc:	b2db      	uxtb	r3, r3
9001fbce:	fb02 7204 	mla	r2, r2, r4, r7
9001fbd2:	fb03 0004 	mla	r0, r3, r4, r0
9001fbd6:	1c6b      	adds	r3, r5, #1
9001fbd8:	b292      	uxth	r2, r2
9001fbda:	b280      	uxth	r0, r0
9001fbdc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fbe0:	1c43      	adds	r3, r0, #1
9001fbe2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fbe6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001fbea:	1c50      	adds	r0, r2, #1
9001fbec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001fbf0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fbf4:	0952      	lsrs	r2, r2, #5
9001fbf6:	432b      	orrs	r3, r5
9001fbf8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fbfc:	4313      	orrs	r3, r2
9001fbfe:	800b      	strh	r3, [r1, #0]
9001fc00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fc04:	4680      	mov	r8, r0
9001fc06:	e75c      	b.n	9001fac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001fc08:	4684      	mov	ip, r0
9001fc0a:	4680      	mov	r8, r0
9001fc0c:	e767      	b.n	9001fade <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fc0e:	4684      	mov	ip, r0
9001fc10:	e765      	b.n	9001fade <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fc12:	4605      	mov	r5, r0
9001fc14:	e776      	b.n	9001fb04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001fc16:	4603      	mov	r3, r0
9001fc18:	4605      	mov	r5, r0
9001fc1a:	e782      	b.n	9001fb22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001fc1c:	4603      	mov	r3, r0
9001fc1e:	e780      	b.n	9001fb22 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001fc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fc20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fc24:	b099      	sub	sp, #100	; 0x64
9001fc26:	9215      	str	r2, [sp, #84]	; 0x54
9001fc28:	9309      	str	r3, [sp, #36]	; 0x24
9001fc2a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001fc2c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001fc30:	9016      	str	r0, [sp, #88]	; 0x58
9001fc32:	930d      	str	r3, [sp, #52]	; 0x34
9001fc34:	6850      	ldr	r0, [r2, #4]
9001fc36:	910c      	str	r1, [sp, #48]	; 0x30
9001fc38:	6812      	ldr	r2, [r2, #0]
9001fc3a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001fc3e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001fc42:	fb00 1303 	mla	r3, r0, r3, r1
9001fc46:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001fc4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fc4c:	681b      	ldr	r3, [r3, #0]
9001fc4e:	930b      	str	r3, [sp, #44]	; 0x2c
9001fc50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fc52:	685e      	ldr	r6, [r3, #4]
9001fc54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001fc56:	3604      	adds	r6, #4
9001fc58:	43db      	mvns	r3, r3
9001fc5a:	b2db      	uxtb	r3, r3
9001fc5c:	930a      	str	r3, [sp, #40]	; 0x28
9001fc5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fc60:	2b00      	cmp	r3, #0
9001fc62:	dc03      	bgt.n	9001fc6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001fc64:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001fc66:	2b00      	cmp	r3, #0
9001fc68:	f340 8225 	ble.w	900200b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fc6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fc6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fc72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fc76:	1e48      	subs	r0, r1, #1
9001fc78:	1e57      	subs	r7, r2, #1
9001fc7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fc7c:	2b00      	cmp	r3, #0
9001fc7e:	f340 80e3 	ble.w	9001fe48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001fc82:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001fc86:	ea4f 4325 	mov.w	r3, r5, asr #16
9001fc8a:	d406      	bmi.n	9001fc9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fc8c:	4584      	cmp	ip, r0
9001fc8e:	da04      	bge.n	9001fc9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fc90:	2b00      	cmp	r3, #0
9001fc92:	db02      	blt.n	9001fc9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fc94:	42bb      	cmp	r3, r7
9001fc96:	f2c0 80d8 	blt.w	9001fe4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001fc9a:	f11c 0c01 	adds.w	ip, ip, #1
9001fc9e:	f100 80c9 	bmi.w	9001fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fca2:	4561      	cmp	r1, ip
9001fca4:	f2c0 80c6 	blt.w	9001fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fca8:	3301      	adds	r3, #1
9001fcaa:	f100 80c3 	bmi.w	9001fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fcae:	429a      	cmp	r2, r3
9001fcb0:	f2c0 80c0 	blt.w	9001fe34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fcb4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001fcb8:	4647      	mov	r7, r8
9001fcba:	f1bb 0f00 	cmp.w	fp, #0
9001fcbe:	f340 80e3 	ble.w	9001fe88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001fcc2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001fcc4:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fcc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fcca:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001fcce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001fcd2:	ea5f 422a 	movs.w	r2, sl, asr #16
9001fcd6:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fcda:	689b      	ldr	r3, [r3, #8]
9001fcdc:	f100 8121 	bmi.w	9001ff22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fce0:	f103 39ff 	add.w	r9, r3, #4294967295
9001fce4:	454a      	cmp	r2, r9
9001fce6:	f280 811c 	bge.w	9001ff22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fcea:	f1bc 0f00 	cmp.w	ip, #0
9001fcee:	f2c0 8118 	blt.w	9001ff22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fcf2:	f10e 39ff 	add.w	r9, lr, #4294967295
9001fcf6:	45cc      	cmp	ip, r9
9001fcf8:	f280 8113 	bge.w	9001ff22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fcfc:	b21b      	sxth	r3, r3
9001fcfe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001fd00:	fb0c 2203 	mla	r2, ip, r3, r2
9001fd04:	eb04 0902 	add.w	r9, r4, r2
9001fd08:	5ca2      	ldrb	r2, [r4, r2]
9001fd0a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001fd0e:	2800      	cmp	r0, #0
9001fd10:	f000 80fe 	beq.w	9001ff10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001fd14:	f899 2001 	ldrb.w	r2, [r9, #1]
9001fd18:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001fd1c:	9211      	str	r2, [sp, #68]	; 0x44
9001fd1e:	b151      	cbz	r1, 9001fd36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fd20:	eb09 0203 	add.w	r2, r9, r3
9001fd24:	f819 3003 	ldrb.w	r3, [r9, r3]
9001fd28:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fd2c:	930f      	str	r3, [sp, #60]	; 0x3c
9001fd2e:	7853      	ldrb	r3, [r2, #1]
9001fd30:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fd34:	9312      	str	r3, [sp, #72]	; 0x48
9001fd36:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001fd38:	fb10 f201 	smulbb	r2, r0, r1
9001fd3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001fd3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fd42:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fd46:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001fd4a:	10d2      	asrs	r2, r2, #3
9001fd4c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001fd50:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001fd54:	ea4c 0c03 	orr.w	ip, ip, r3
9001fd58:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001fd5a:	041b      	lsls	r3, r3, #16
9001fd5c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001fd60:	4323      	orrs	r3, r4
9001fd62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fd64:	4353      	muls	r3, r2
9001fd66:	fb09 330c 	mla	r3, r9, ip, r3
9001fd6a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001fd6e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001fd72:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001fd76:	ea4c 0e0e 	orr.w	lr, ip, lr
9001fd7a:	f1c1 0c10 	rsb	ip, r1, #16
9001fd7e:	ebac 0c00 	sub.w	ip, ip, r0
9001fd82:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001fd86:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001fd8a:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001fd8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001fd90:	0418      	lsls	r0, r3, #16
9001fd92:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fd96:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001fd9a:	4318      	orrs	r0, r3
9001fd9c:	fb02 c200 	mla	r2, r2, r0, ip
9001fda0:	8838      	ldrh	r0, [r7, #0]
9001fda2:	0d53      	lsrs	r3, r2, #21
9001fda4:	0952      	lsrs	r2, r2, #5
9001fda6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fdaa:	1201      	asrs	r1, r0, #8
9001fdac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001fdb0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001fdb4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001fdb8:	00c0      	lsls	r0, r0, #3
9001fdba:	431a      	orrs	r2, r3
9001fdbc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001fdc0:	fb11 f104 	smulbb	r1, r1, r4
9001fdc4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001fdc8:	b292      	uxth	r2, r2
9001fdca:	fb1e fe04 	smulbb	lr, lr, r4
9001fdce:	b2c0      	uxtb	r0, r0
9001fdd0:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001fdd4:	fb10 f004 	smulbb	r0, r0, r4
9001fdd8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001fddc:	fb0c 1c03 	mla	ip, ip, r3, r1
9001fde0:	10d1      	asrs	r1, r2, #3
9001fde2:	00d2      	lsls	r2, r2, #3
9001fde4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001fde8:	fa1f fc8c 	uxth.w	ip, ip
9001fdec:	b2d2      	uxtb	r2, r2
9001fdee:	fb01 e103 	mla	r1, r1, r3, lr
9001fdf2:	fb02 0303 	mla	r3, r2, r3, r0
9001fdf6:	b289      	uxth	r1, r1
9001fdf8:	b29a      	uxth	r2, r3
9001fdfa:	f10c 0301 	add.w	r3, ip, #1
9001fdfe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001fe02:	1c53      	adds	r3, r2, #1
9001fe04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fe08:	1c4a      	adds	r2, r1, #1
9001fe0a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001fe0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001fe12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fe16:	0949      	lsrs	r1, r1, #5
9001fe18:	ea43 030c 	orr.w	r3, r3, ip
9001fe1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001fe20:	430b      	orrs	r3, r1
9001fe22:	803b      	strh	r3, [r7, #0]
9001fe24:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001fe26:	3702      	adds	r7, #2
9001fe28:	f10b 3bff 	add.w	fp, fp, #4294967295
9001fe2c:	449a      	add	sl, r3
9001fe2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001fe30:	441d      	add	r5, r3
9001fe32:	e742      	b.n	9001fcba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001fe34:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001fe36:	f108 0802 	add.w	r8, r8, #2
9001fe3a:	449a      	add	sl, r3
9001fe3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001fe3e:	441d      	add	r5, r3
9001fe40:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fe42:	3b01      	subs	r3, #1
9001fe44:	9309      	str	r3, [sp, #36]	; 0x24
9001fe46:	e718      	b.n	9001fc7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001fe48:	d023      	beq.n	9001fe92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001fe4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fe4c:	9825      	ldr	r0, [sp, #148]	; 0x94
9001fe4e:	3b01      	subs	r3, #1
9001fe50:	fb00 a003 	mla	r0, r0, r3, sl
9001fe54:	1400      	asrs	r0, r0, #16
9001fe56:	f53f af2d 	bmi.w	9001fcb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fe5a:	3901      	subs	r1, #1
9001fe5c:	4288      	cmp	r0, r1
9001fe5e:	f6bf af29 	bge.w	9001fcb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fe62:	9926      	ldr	r1, [sp, #152]	; 0x98
9001fe64:	fb01 5303 	mla	r3, r1, r3, r5
9001fe68:	141b      	asrs	r3, r3, #16
9001fe6a:	f53f af23 	bmi.w	9001fcb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fe6e:	3a01      	subs	r2, #1
9001fe70:	4293      	cmp	r3, r2
9001fe72:	f6bf af1f 	bge.w	9001fcb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fe76:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001fe7a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001fe7e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001fe82:	f1be 0f00 	cmp.w	lr, #0
9001fe86:	dc6c      	bgt.n	9001ff62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001fe88:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fe8a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001fe8e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fe92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fe94:	2b00      	cmp	r3, #0
9001fe96:	f340 810e 	ble.w	900200b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fe9a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001fe9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001fea0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fea8:	eef0 6a62 	vmov.f32	s13, s5
9001feac:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001feb0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001feb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001feb8:	ee16 aa90 	vmov	sl, s13
9001febc:	eef0 6a43 	vmov.f32	s13, s6
9001fec0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fec4:	ee16 5a90 	vmov	r5, s13
9001fec8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fecc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fed0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fed4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fed8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fedc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fee0:	ee12 2a90 	vmov	r2, s5
9001fee4:	eef0 2a47 	vmov.f32	s5, s14
9001fee8:	fb92 f3f3 	sdiv	r3, r2, r3
9001feec:	ee13 2a10 	vmov	r2, s6
9001fef0:	9325      	str	r3, [sp, #148]	; 0x94
9001fef2:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001fef4:	eeb0 3a67 	vmov.f32	s6, s15
9001fef8:	fb92 f3f3 	sdiv	r3, r2, r3
9001fefc:	9326      	str	r3, [sp, #152]	; 0x98
9001fefe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ff00:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001ff02:	3b01      	subs	r3, #1
9001ff04:	930c      	str	r3, [sp, #48]	; 0x30
9001ff06:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001ff08:	bf08      	it	eq
9001ff0a:	4613      	moveq	r3, r2
9001ff0c:	9309      	str	r3, [sp, #36]	; 0x24
9001ff0e:	e6a6      	b.n	9001fc5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ff10:	2900      	cmp	r1, #0
9001ff12:	f43f af10 	beq.w	9001fd36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001ff16:	f819 3003 	ldrb.w	r3, [r9, r3]
9001ff1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ff1e:	930f      	str	r3, [sp, #60]	; 0x3c
9001ff20:	e709      	b.n	9001fd36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001ff22:	f112 0901 	adds.w	r9, r2, #1
9001ff26:	f53f af7d 	bmi.w	9001fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ff2a:	454b      	cmp	r3, r9
9001ff2c:	f6ff af7a 	blt.w	9001fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ff30:	f11c 0901 	adds.w	r9, ip, #1
9001ff34:	f53f af76 	bmi.w	9001fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ff38:	45ce      	cmp	lr, r9
9001ff3a:	f6ff af73 	blt.w	9001fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ff3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001ff40:	b21b      	sxth	r3, r3
9001ff42:	9202      	str	r2, [sp, #8]
9001ff44:	fa0f f28e 	sxth.w	r2, lr
9001ff48:	9300      	str	r3, [sp, #0]
9001ff4a:	4633      	mov	r3, r6
9001ff4c:	9201      	str	r2, [sp, #4]
9001ff4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001ff50:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001ff54:	e9cd c003 	strd	ip, r0, [sp, #12]
9001ff58:	4639      	mov	r1, r7
9001ff5a:	9816      	ldr	r0, [sp, #88]	; 0x58
9001ff5c:	f7ff fd8e 	bl	9001fa7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001ff60:	e760      	b.n	9001fe24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ff62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001ff64:	ea4f 422a 	mov.w	r2, sl, asr #16
9001ff68:	1429      	asrs	r1, r5, #16
9001ff6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001ff6c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ff70:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001ff74:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001ff78:	fb03 2101 	mla	r1, r3, r1, r2
9001ff7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001ff7e:	440a      	add	r2, r1
9001ff80:	5c61      	ldrb	r1, [r4, r1]
9001ff82:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001ff86:	f1bc 0f00 	cmp.w	ip, #0
9001ff8a:	f000 808c 	beq.w	900200a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001ff8e:	7857      	ldrb	r7, [r2, #1]
9001ff90:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001ff94:	9413      	str	r4, [sp, #76]	; 0x4c
9001ff96:	b140      	cbz	r0, 9001ffaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ff98:	18d7      	adds	r7, r2, r3
9001ff9a:	5cd3      	ldrb	r3, [r2, r3]
9001ff9c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ffa0:	9310      	str	r3, [sp, #64]	; 0x40
9001ffa2:	787b      	ldrb	r3, [r7, #1]
9001ffa4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ffa8:	9314      	str	r3, [sp, #80]	; 0x50
9001ffaa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001ffac:	fb1c f200 	smulbb	r2, ip, r0
9001ffb0:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ffb2:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ffb6:	041f      	lsls	r7, r3, #16
9001ffb8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ffbc:	10d2      	asrs	r2, r2, #3
9001ffbe:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001ffc2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001ffc6:	431f      	orrs	r7, r3
9001ffc8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001ffcc:	9317      	str	r3, [sp, #92]	; 0x5c
9001ffce:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001ffd0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001ffd2:	041b      	lsls	r3, r3, #16
9001ffd4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ffd8:	ea43 030b 	orr.w	r3, r3, fp
9001ffdc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001ffe0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001ffe4:	4353      	muls	r3, r2
9001ffe6:	fb04 3707 	mla	r7, r4, r7, r3
9001ffea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001ffee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fff0:	ea43 0b01 	orr.w	fp, r3, r1
9001fff4:	f1c0 0110 	rsb	r1, r0, #16
9001fff8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fffa:	eba1 0c0c 	sub.w	ip, r1, ip
9001fffe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020002:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020006:	fb0c 770b 	mla	r7, ip, fp, r7
9002000a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002000e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90020012:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020016:	ea4c 0c0b 	orr.w	ip, ip, fp
9002001a:	fb02 770c 	mla	r7, r2, ip, r7
9002001e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90020020:	0d79      	lsrs	r1, r7, #21
90020022:	8812      	ldrh	r2, [r2, #0]
90020024:	097f      	lsrs	r7, r7, #5
90020026:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002002a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002002e:	430f      	orrs	r7, r1
90020030:	1211      	asrs	r1, r2, #8
90020032:	b2bb      	uxth	r3, r7
90020034:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020038:	10d7      	asrs	r7, r2, #3
9002003a:	fb11 f104 	smulbb	r1, r1, r4
9002003e:	1218      	asrs	r0, r3, #8
90020040:	00d2      	lsls	r2, r2, #3
90020042:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020046:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002004a:	fb17 f704 	smulbb	r7, r7, r4
9002004e:	b2d2      	uxtb	r2, r2
90020050:	fb00 1009 	mla	r0, r0, r9, r1
90020054:	10d9      	asrs	r1, r3, #3
90020056:	fb12 f204 	smulbb	r2, r2, r4
9002005a:	00db      	lsls	r3, r3, #3
9002005c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020060:	b280      	uxth	r0, r0
90020062:	b2db      	uxtb	r3, r3
90020064:	fb01 7109 	mla	r1, r1, r9, r7
90020068:	fb03 2309 	mla	r3, r3, r9, r2
9002006c:	1c42      	adds	r2, r0, #1
9002006e:	b289      	uxth	r1, r1
90020070:	b29b      	uxth	r3, r3
90020072:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020076:	1c4f      	adds	r7, r1, #1
90020078:	1c5a      	adds	r2, r3, #1
9002007a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002007e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90020082:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90020086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020088:	0949      	lsrs	r1, r1, #5
9002008a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002008e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020092:	4310      	orrs	r0, r2
90020094:	4308      	orrs	r0, r1
90020096:	f823 0b02 	strh.w	r0, [r3], #2
9002009a:	930e      	str	r3, [sp, #56]	; 0x38
9002009c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002009e:	449a      	add	sl, r3
900200a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900200a2:	441d      	add	r5, r3
900200a4:	e6ed      	b.n	9001fe82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900200a6:	2800      	cmp	r0, #0
900200a8:	f43f af7f 	beq.w	9001ffaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900200ac:	5cd3      	ldrb	r3, [r2, r3]
900200ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900200b2:	9310      	str	r3, [sp, #64]	; 0x40
900200b4:	e779      	b.n	9001ffaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900200b6:	b019      	add	sp, #100	; 0x64
900200b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900200bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900200bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900200c0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
900200c4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
900200c8:	f1b8 0f00 	cmp.w	r8, #0
900200cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
900200d0:	fb08 470e 	mla	r7, r8, lr, r4
900200d4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
900200d8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
900200dc:	eb02 0907 	add.w	r9, r2, r7
900200e0:	8808      	ldrh	r0, [r1, #0]
900200e2:	db67      	blt.n	900201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900200e4:	45c2      	cmp	sl, r8
900200e6:	dd65      	ble.n	900201b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
900200e8:	2c00      	cmp	r4, #0
900200ea:	db61      	blt.n	900201b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900200ec:	45a6      	cmp	lr, r4
900200ee:	dd5f      	ble.n	900201b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
900200f0:	5dd2      	ldrb	r2, [r2, r7]
900200f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
900200f6:	1c62      	adds	r2, r4, #1
900200f8:	d45f      	bmi.n	900201ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900200fa:	4596      	cmp	lr, r2
900200fc:	dd5d      	ble.n	900201ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
900200fe:	2d00      	cmp	r5, #0
90020100:	d05b      	beq.n	900201ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020102:	f899 2001 	ldrb.w	r2, [r9, #1]
90020106:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002010a:	f118 0801 	adds.w	r8, r8, #1
9002010e:	d458      	bmi.n	900201c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020110:	45c2      	cmp	sl, r8
90020112:	dd56      	ble.n	900201c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020114:	2e00      	cmp	r6, #0
90020116:	d054      	beq.n	900201c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020118:	2c00      	cmp	r4, #0
9002011a:	db50      	blt.n	900201be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002011c:	45a6      	cmp	lr, r4
9002011e:	dd4e      	ble.n	900201be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020120:	f819 200e 	ldrb.w	r2, [r9, lr]
90020124:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90020128:	3401      	adds	r4, #1
9002012a:	d407      	bmi.n	9002013c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002012c:	45a6      	cmp	lr, r4
9002012e:	dd05      	ble.n	9002013c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020130:	b125      	cbz	r5, 9002013c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90020132:	44ce      	add	lr, r9
90020134:	f89e 0001 	ldrb.w	r0, [lr, #1]
90020138:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9002013c:	fb15 f406 	smulbb	r4, r5, r6
90020140:	ea4f 430c 	mov.w	r3, ip, lsl #16
90020144:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90020148:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002014c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020150:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90020154:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90020158:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002015c:	ea43 0c0c 	orr.w	ip, r3, ip
90020160:	f1c6 0310 	rsb	r3, r6, #16
90020164:	ea4e 0707 	orr.w	r7, lr, r7
90020168:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9002016c:	1b5b      	subs	r3, r3, r5
9002016e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90020172:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020176:	437d      	muls	r5, r7
90020178:	fb03 5c0c 	mla	ip, r3, ip, r5
9002017c:	0403      	lsls	r3, r0, #16
9002017e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020182:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020186:	4318      	orrs	r0, r3
90020188:	0413      	lsls	r3, r2, #16
9002018a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002018e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020192:	fb04 c000 	mla	r0, r4, r0, ip
90020196:	4313      	orrs	r3, r2
90020198:	fb06 0003 	mla	r0, r6, r3, r0
9002019c:	0d43      	lsrs	r3, r0, #21
9002019e:	0940      	lsrs	r0, r0, #5
900201a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900201a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900201a8:	4318      	orrs	r0, r3
900201aa:	8008      	strh	r0, [r1, #0]
900201ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900201b0:	4684      	mov	ip, r0
900201b2:	e7a0      	b.n	900200f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
900201b4:	4607      	mov	r7, r0
900201b6:	4684      	mov	ip, r0
900201b8:	e7a7      	b.n	9002010a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900201ba:	4607      	mov	r7, r0
900201bc:	e7a5      	b.n	9002010a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
900201be:	4602      	mov	r2, r0
900201c0:	e7b2      	b.n	90020128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
900201c2:	4602      	mov	r2, r0
900201c4:	e7ba      	b.n	9002013c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

900201c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900201c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900201ca:	b093      	sub	sp, #76	; 0x4c
900201cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900201d0:	920f      	str	r2, [sp, #60]	; 0x3c
900201d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
900201d4:	9010      	str	r0, [sp, #64]	; 0x40
900201d6:	9108      	str	r1, [sp, #32]
900201d8:	6850      	ldr	r0, [r2, #4]
900201da:	9306      	str	r3, [sp, #24]
900201dc:	6812      	ldr	r2, [r2, #0]
900201de:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900201e2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900201e6:	fb00 1303 	mla	r3, r0, r3, r1
900201ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900201ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
900201f0:	681b      	ldr	r3, [r3, #0]
900201f2:	9307      	str	r3, [sp, #28]
900201f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900201f6:	685f      	ldr	r7, [r3, #4]
900201f8:	3704      	adds	r7, #4
900201fa:	9b08      	ldr	r3, [sp, #32]
900201fc:	2b00      	cmp	r3, #0
900201fe:	dc03      	bgt.n	90020208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020200:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020202:	2b00      	cmp	r3, #0
90020204:	f340 81b2 	ble.w	9002056c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020208:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002020a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002020e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020212:	1e48      	subs	r0, r1, #1
90020214:	f102 3cff 	add.w	ip, r2, #4294967295
90020218:	9b06      	ldr	r3, [sp, #24]
9002021a:	2b00      	cmp	r3, #0
9002021c:	f340 80a9 	ble.w	90020372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020220:	ea5f 4e24 	movs.w	lr, r4, asr #16
90020224:	ea4f 4326 	mov.w	r3, r6, asr #16
90020228:	d406      	bmi.n	90020238 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002022a:	4586      	cmp	lr, r0
9002022c:	da04      	bge.n	90020238 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002022e:	2b00      	cmp	r3, #0
90020230:	db02      	blt.n	90020238 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90020232:	4563      	cmp	r3, ip
90020234:	f2c0 809e 	blt.w	90020374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90020238:	f11e 0e01 	adds.w	lr, lr, #1
9002023c:	f100 808f 	bmi.w	9002035e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020240:	4571      	cmp	r1, lr
90020242:	f2c0 808c 	blt.w	9002035e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020246:	3301      	adds	r3, #1
90020248:	f100 8089 	bmi.w	9002035e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002024c:	429a      	cmp	r2, r3
9002024e:	f2c0 8086 	blt.w	9002035e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90020252:	f8dd b018 	ldr.w	fp, [sp, #24]
90020256:	46c8      	mov	r8, r9
90020258:	f1bb 0f00 	cmp.w	fp, #0
9002025c:	f340 80a6 	ble.w	900203ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90020260:	9a24      	ldr	r2, [sp, #144]	; 0x90
90020262:	ea4f 4c26 	mov.w	ip, r6, asr #16
90020266:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020268:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002026c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90020270:	1422      	asrs	r2, r4, #16
90020272:	f3c6 3103 	ubfx	r1, r6, #12, #4
90020276:	689b      	ldr	r3, [r3, #8]
90020278:	f100 80e3 	bmi.w	90020442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002027c:	f103 3aff 	add.w	sl, r3, #4294967295
90020280:	4552      	cmp	r2, sl
90020282:	f280 80de 	bge.w	90020442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020286:	f1bc 0f00 	cmp.w	ip, #0
9002028a:	f2c0 80da 	blt.w	90020442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002028e:	f10e 3aff 	add.w	sl, lr, #4294967295
90020292:	45d4      	cmp	ip, sl
90020294:	f280 80d5 	bge.w	90020442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020298:	b21b      	sxth	r3, r3
9002029a:	9d07      	ldr	r5, [sp, #28]
9002029c:	fb0c 2203 	mla	r2, ip, r3, r2
900202a0:	eb05 0a02 	add.w	sl, r5, r2
900202a4:	5caa      	ldrb	r2, [r5, r2]
900202a6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900202aa:	2800      	cmp	r0, #0
900202ac:	f000 80c0 	beq.w	90020430 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900202b0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900202b4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900202b8:	920b      	str	r2, [sp, #44]	; 0x2c
900202ba:	b151      	cbz	r1, 900202d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900202bc:	eb0a 0203 	add.w	r2, sl, r3
900202c0:	f81a 3003 	ldrb.w	r3, [sl, r3]
900202c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900202c8:	9309      	str	r3, [sp, #36]	; 0x24
900202ca:	7853      	ldrb	r3, [r2, #1]
900202cc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900202d0:	930c      	str	r3, [sp, #48]	; 0x30
900202d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900202d4:	fb10 f201 	smulbb	r2, r0, r1
900202d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900202da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900202de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900202e2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900202e6:	10d2      	asrs	r2, r2, #3
900202e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900202ec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
900202f0:	ea4c 0c03 	orr.w	ip, ip, r3
900202f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900202f6:	041b      	lsls	r3, r3, #16
900202f8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900202fc:	432b      	orrs	r3, r5
900202fe:	4353      	muls	r3, r2
90020300:	fb0a 330c 	mla	r3, sl, ip, r3
90020304:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020308:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002030c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020310:	ea4c 0e0e 	orr.w	lr, ip, lr
90020314:	f1c1 0c10 	rsb	ip, r1, #16
90020318:	ebac 0c00 	sub.w	ip, ip, r0
9002031c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020320:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90020324:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020328:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002032a:	0418      	lsls	r0, r3, #16
9002032c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020330:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90020334:	4318      	orrs	r0, r3
90020336:	fb02 c200 	mla	r2, r2, r0, ip
9002033a:	0d53      	lsrs	r3, r2, #21
9002033c:	0952      	lsrs	r2, r2, #5
9002033e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020342:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020346:	431a      	orrs	r2, r3
90020348:	f8a8 2000 	strh.w	r2, [r8]
9002034c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002034e:	f108 0802 	add.w	r8, r8, #2
90020352:	f10b 3bff 	add.w	fp, fp, #4294967295
90020356:	441c      	add	r4, r3
90020358:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002035a:	441e      	add	r6, r3
9002035c:	e77c      	b.n	90020258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002035e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020360:	f109 0902 	add.w	r9, r9, #2
90020364:	441c      	add	r4, r3
90020366:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020368:	441e      	add	r6, r3
9002036a:	9b06      	ldr	r3, [sp, #24]
9002036c:	3b01      	subs	r3, #1
9002036e:	9306      	str	r3, [sp, #24]
90020370:	e752      	b.n	90020218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90020372:	d020      	beq.n	900203b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90020374:	9b06      	ldr	r3, [sp, #24]
90020376:	981f      	ldr	r0, [sp, #124]	; 0x7c
90020378:	3b01      	subs	r3, #1
9002037a:	fb00 4003 	mla	r0, r0, r3, r4
9002037e:	1400      	asrs	r0, r0, #16
90020380:	f53f af67 	bmi.w	90020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020384:	3901      	subs	r1, #1
90020386:	4288      	cmp	r0, r1
90020388:	f6bf af63 	bge.w	90020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002038c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002038e:	fb01 6303 	mla	r3, r1, r3, r6
90020392:	141b      	asrs	r3, r3, #16
90020394:	f53f af5d 	bmi.w	90020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020398:	3a01      	subs	r2, #1
9002039a:	4293      	cmp	r3, r2
9002039c:	f6bf af59 	bge.w	90020252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900203a0:	f8dd 8018 	ldr.w	r8, [sp, #24]
900203a4:	46ca      	mov	sl, r9
900203a6:	f1b8 0f00 	cmp.w	r8, #0
900203aa:	dc67      	bgt.n	9002047c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900203ac:	9b06      	ldr	r3, [sp, #24]
900203ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900203b2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900203b6:	9b08      	ldr	r3, [sp, #32]
900203b8:	2b00      	cmp	r3, #0
900203ba:	f340 80d7 	ble.w	9002056c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
900203be:	ee30 0a04 	vadd.f32	s0, s0, s8
900203c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900203c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900203c8:	eeb0 6a62 	vmov.f32	s12, s5
900203cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
900203d0:	ee31 1a05 	vadd.f32	s2, s2, s10
900203d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900203d8:	ee16 4a10 	vmov	r4, s12
900203dc:	eeb0 6a43 	vmov.f32	s12, s6
900203e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900203e4:	ee16 6a10 	vmov	r6, s12
900203e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900203ec:	ee61 7a27 	vmul.f32	s15, s2, s15
900203f0:	ee77 2a62 	vsub.f32	s5, s14, s5
900203f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900203f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900203fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020400:	ee12 2a90 	vmov	r2, s5
90020404:	eef0 2a47 	vmov.f32	s5, s14
90020408:	fb92 f3f3 	sdiv	r3, r2, r3
9002040c:	ee13 2a10 	vmov	r2, s6
90020410:	931f      	str	r3, [sp, #124]	; 0x7c
90020412:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020414:	eeb0 3a67 	vmov.f32	s6, s15
90020418:	fb92 f3f3 	sdiv	r3, r2, r3
9002041c:	9320      	str	r3, [sp, #128]	; 0x80
9002041e:	9b08      	ldr	r3, [sp, #32]
90020420:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020422:	3b01      	subs	r3, #1
90020424:	9308      	str	r3, [sp, #32]
90020426:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020428:	bf08      	it	eq
9002042a:	4613      	moveq	r3, r2
9002042c:	9306      	str	r3, [sp, #24]
9002042e:	e6e4      	b.n	900201fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90020430:	2900      	cmp	r1, #0
90020432:	f43f af4e 	beq.w	900202d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020436:	f81a 3003 	ldrb.w	r3, [sl, r3]
9002043a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002043e:	9309      	str	r3, [sp, #36]	; 0x24
90020440:	e747      	b.n	900202d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90020442:	f112 0a01 	adds.w	sl, r2, #1
90020446:	d481      	bmi.n	9002034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020448:	4553      	cmp	r3, sl
9002044a:	f6ff af7f 	blt.w	9002034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002044e:	f11c 0a01 	adds.w	sl, ip, #1
90020452:	f53f af7b 	bmi.w	9002034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90020456:	45d6      	cmp	lr, sl
90020458:	f6ff af78 	blt.w	9002034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002045c:	b21b      	sxth	r3, r3
9002045e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90020462:	fa0f f28e 	sxth.w	r2, lr
90020466:	9300      	str	r3, [sp, #0]
90020468:	463b      	mov	r3, r7
9002046a:	9201      	str	r2, [sp, #4]
9002046c:	9a07      	ldr	r2, [sp, #28]
9002046e:	e9cd 0104 	strd	r0, r1, [sp, #16]
90020472:	4641      	mov	r1, r8
90020474:	9810      	ldr	r0, [sp, #64]	; 0x40
90020476:	f7ff fe21 	bl	900200bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002047a:	e767      	b.n	9002034c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002047c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002047e:	1422      	asrs	r2, r4, #16
90020480:	1431      	asrs	r1, r6, #16
90020482:	9d07      	ldr	r5, [sp, #28]
90020484:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90020488:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9002048c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90020490:	fb03 2101 	mla	r1, r3, r1, r2
90020494:	9a07      	ldr	r2, [sp, #28]
90020496:	440a      	add	r2, r1
90020498:	5c69      	ldrb	r1, [r5, r1]
9002049a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002049e:	f1be 0f00 	cmp.w	lr, #0
900204a2:	d05c      	beq.n	9002055e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900204a4:	f892 c001 	ldrb.w	ip, [r2, #1]
900204a8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900204ac:	950d      	str	r5, [sp, #52]	; 0x34
900204ae:	b150      	cbz	r0, 900204c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900204b0:	eb02 0c03 	add.w	ip, r2, r3
900204b4:	5cd3      	ldrb	r3, [r2, r3]
900204b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900204ba:	930a      	str	r3, [sp, #40]	; 0x28
900204bc:	f89c 3001 	ldrb.w	r3, [ip, #1]
900204c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900204c4:	930e      	str	r3, [sp, #56]	; 0x38
900204c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900204c8:	fb1e f200 	smulbb	r2, lr, r0
900204cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900204ce:	f108 38ff 	add.w	r8, r8, #4294967295
900204d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900204d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900204da:	10d2      	asrs	r2, r2, #3
900204dc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
900204e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900204e4:	ea4c 0c03 	orr.w	ip, ip, r3
900204e8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900204ec:	9311      	str	r3, [sp, #68]	; 0x44
900204ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900204f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
900204f2:	041b      	lsls	r3, r3, #16
900204f4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900204f8:	ea43 030b 	orr.w	r3, r3, fp
900204fc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020500:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020504:	4353      	muls	r3, r2
90020506:	fb05 3c0c 	mla	ip, r5, ip, r3
9002050a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002050e:	ea43 0b01 	orr.w	fp, r3, r1
90020512:	f1c0 0110 	rsb	r1, r0, #16
90020516:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020518:	eba1 0e0e 	sub.w	lr, r1, lr
9002051c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020520:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020524:	fb0e cc0b 	mla	ip, lr, fp, ip
90020528:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9002052c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
90020530:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90020534:	ea4b 0e0e 	orr.w	lr, fp, lr
90020538:	fb02 cc0e 	mla	ip, r2, lr, ip
9002053c:	ea4f 535c 	mov.w	r3, ip, lsr #21
90020540:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90020544:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020548:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002054c:	ea43 0c0c 	orr.w	ip, r3, ip
90020550:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020552:	441c      	add	r4, r3
90020554:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020556:	f82a cb02 	strh.w	ip, [sl], #2
9002055a:	441e      	add	r6, r3
9002055c:	e723      	b.n	900203a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9002055e:	2800      	cmp	r0, #0
90020560:	d0b1      	beq.n	900204c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020562:	5cd3      	ldrb	r3, [r2, r3]
90020564:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020568:	930a      	str	r3, [sp, #40]	; 0x28
9002056a:	e7ac      	b.n	900204c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002056c:	b013      	add	sp, #76	; 0x4c
9002056e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90020572:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020576:	880d      	ldrh	r5, [r1, #0]
90020578:	b087      	sub	sp, #28
9002057a:	10ef      	asrs	r7, r5, #3
9002057c:	9103      	str	r1, [sp, #12]
9002057e:	ea4f 2a25 	mov.w	sl, r5, asr #8
90020582:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
90020586:	00ed      	lsls	r5, r5, #3
90020588:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9002058c:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90020590:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90020594:	b2ed      	uxtb	r5, r5
90020596:	9701      	str	r7, [sp, #4]
90020598:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9002059c:	9502      	str	r5, [sp, #8]
9002059e:	9d01      	ldr	r5, [sp, #4]
900205a0:	9902      	ldr	r1, [sp, #8]
900205a2:	022d      	lsls	r5, r5, #8
900205a4:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
900205a8:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
900205ac:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900205b0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
900205b4:	430d      	orrs	r5, r1
900205b6:	fb06 0709 	mla	r7, r6, r9, r0
900205ba:	2e00      	cmp	r6, #0
900205bc:	9505      	str	r5, [sp, #20]
900205be:	eb02 0c07 	add.w	ip, r2, r7
900205c2:	f2c0 80b6 	blt.w	90020732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900205c6:	45b3      	cmp	fp, r6
900205c8:	f340 80b3 	ble.w	90020732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
900205cc:	2800      	cmp	r0, #0
900205ce:	f2c0 80ae 	blt.w	9002072e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900205d2:	4581      	cmp	r9, r0
900205d4:	f340 80ab 	ble.w	9002072e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
900205d8:	5dd7      	ldrb	r7, [r2, r7]
900205da:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900205de:	441f      	add	r7, r3
900205e0:	1c42      	adds	r2, r0, #1
900205e2:	f100 80a9 	bmi.w	90020738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900205e6:	4591      	cmp	r9, r2
900205e8:	f340 80a6 	ble.w	90020738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900205ec:	2c00      	cmp	r4, #0
900205ee:	f000 80a3 	beq.w	90020738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900205f2:	f89c 5001 	ldrb.w	r5, [ip, #1]
900205f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900205fa:	441d      	add	r5, r3
900205fc:	3601      	adds	r6, #1
900205fe:	f100 809f 	bmi.w	90020740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020602:	45b3      	cmp	fp, r6
90020604:	f340 809c 	ble.w	90020740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020608:	f1be 0f00 	cmp.w	lr, #0
9002060c:	f000 8098 	beq.w	90020740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020610:	2800      	cmp	r0, #0
90020612:	f2c0 8093 	blt.w	9002073c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020616:	4581      	cmp	r9, r0
90020618:	f340 8090 	ble.w	9002073c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002061c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020620:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020624:	441e      	add	r6, r3
90020626:	3001      	adds	r0, #1
90020628:	f100 808d 	bmi.w	90020746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002062c:	4581      	cmp	r9, r0
9002062e:	f340 808a 	ble.w	90020746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020632:	2c00      	cmp	r4, #0
90020634:	f000 8087 	beq.w	90020746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020638:	44e1      	add	r9, ip
9002063a:	f899 2001 	ldrb.w	r2, [r9, #1]
9002063e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020642:	4413      	add	r3, r2
90020644:	b2a4      	uxth	r4, r4
90020646:	f897 c002 	ldrb.w	ip, [r7, #2]
9002064a:	fa1f fe8e 	uxth.w	lr, lr
9002064e:	9901      	ldr	r1, [sp, #4]
90020650:	fb04 fb0e 	mul.w	fp, r4, lr
90020654:	0124      	lsls	r4, r4, #4
90020656:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002065a:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
9002065e:	eba4 040b 	sub.w	r4, r4, fp
90020662:	fa1f f08e 	uxth.w	r0, lr
90020666:	b2a2      	uxth	r2, r4
90020668:	78ac      	ldrb	r4, [r5, #2]
9002066a:	eba9 0900 	sub.w	r9, r9, r0
9002066e:	fa1f fe88 	uxth.w	lr, r8
90020672:	4354      	muls	r4, r2
90020674:	ea6f 0808 	mvn.w	r8, r8
90020678:	fa1f f989 	uxth.w	r9, r9
9002067c:	fa5f f888 	uxtb.w	r8, r8
90020680:	fb09 440c 	mla	r4, r9, ip, r4
90020684:	f896 c002 	ldrb.w	ip, [r6, #2]
90020688:	fb1a fa08 	smulbb	sl, sl, r8
9002068c:	fb00 440c 	mla	r4, r0, ip, r4
90020690:	f893 c002 	ldrb.w	ip, [r3, #2]
90020694:	fb0b 4c0c 	mla	ip, fp, ip, r4
90020698:	787c      	ldrb	r4, [r7, #1]
9002069a:	783f      	ldrb	r7, [r7, #0]
9002069c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900206a0:	fb0c ac0e 	mla	ip, ip, lr, sl
900206a4:	f895 a001 	ldrb.w	sl, [r5, #1]
900206a8:	782d      	ldrb	r5, [r5, #0]
900206aa:	fb02 fa0a 	mul.w	sl, r2, sl
900206ae:	fa1f fc8c 	uxth.w	ip, ip
900206b2:	436a      	muls	r2, r5
900206b4:	7835      	ldrb	r5, [r6, #0]
900206b6:	fb09 aa04 	mla	sl, r9, r4, sl
900206ba:	7874      	ldrb	r4, [r6, #1]
900206bc:	fb09 2207 	mla	r2, r9, r7, r2
900206c0:	fb00 aa04 	mla	sl, r0, r4, sl
900206c4:	785c      	ldrb	r4, [r3, #1]
900206c6:	fb00 2005 	mla	r0, r0, r5, r2
900206ca:	781b      	ldrb	r3, [r3, #0]
900206cc:	fb0b a404 	mla	r4, fp, r4, sl
900206d0:	fb11 fa08 	smulbb	sl, r1, r8
900206d4:	fb0b 0b03 	mla	fp, fp, r3, r0
900206d8:	9b02      	ldr	r3, [sp, #8]
900206da:	f3c4 2407 	ubfx	r4, r4, #8, #8
900206de:	fb13 f808 	smulbb	r8, r3, r8
900206e2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
900206e6:	fb04 a40e 	mla	r4, r4, lr, sl
900206ea:	f10c 0301 	add.w	r3, ip, #1
900206ee:	fb0b 8e0e 	mla	lr, fp, lr, r8
900206f2:	b2a4      	uxth	r4, r4
900206f4:	fa1f fe8e 	uxth.w	lr, lr
900206f8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900206fc:	f104 0a01 	add.w	sl, r4, #1
90020700:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90020704:	f10e 0c01 	add.w	ip, lr, #1
90020708:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002070c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020710:	0964      	lsrs	r4, r4, #5
90020712:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020716:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002071a:	ea4c 0c03 	orr.w	ip, ip, r3
9002071e:	9b03      	ldr	r3, [sp, #12]
90020720:	ea4c 0c04 	orr.w	ip, ip, r4
90020724:	f8a3 c000 	strh.w	ip, [r3]
90020728:	b007      	add	sp, #28
9002072a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002072e:	af05      	add	r7, sp, #20
90020730:	e756      	b.n	900205e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90020732:	ad05      	add	r5, sp, #20
90020734:	462f      	mov	r7, r5
90020736:	e761      	b.n	900205fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020738:	ad05      	add	r5, sp, #20
9002073a:	e75f      	b.n	900205fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9002073c:	ae05      	add	r6, sp, #20
9002073e:	e772      	b.n	90020626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90020740:	ab05      	add	r3, sp, #20
90020742:	461e      	mov	r6, r3
90020744:	e77e      	b.n	90020644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90020746:	ab05      	add	r3, sp, #20
90020748:	e77c      	b.n	90020644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9002074a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002074a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002074e:	b095      	sub	sp, #84	; 0x54
90020750:	9212      	str	r2, [sp, #72]	; 0x48
90020752:	9309      	str	r3, [sp, #36]	; 0x24
90020754:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90020756:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9002075a:	9013      	str	r0, [sp, #76]	; 0x4c
9002075c:	930f      	str	r3, [sp, #60]	; 0x3c
9002075e:	6850      	ldr	r0, [r2, #4]
90020760:	910e      	str	r1, [sp, #56]	; 0x38
90020762:	6812      	ldr	r2, [r2, #0]
90020764:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
90020768:	fb00 1303 	mla	r3, r0, r3, r1
9002076c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020770:	930a      	str	r3, [sp, #40]	; 0x28
90020772:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020774:	681b      	ldr	r3, [r3, #0]
90020776:	930d      	str	r3, [sp, #52]	; 0x34
90020778:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002077a:	685c      	ldr	r4, [r3, #4]
9002077c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002077e:	3404      	adds	r4, #4
90020780:	43db      	mvns	r3, r3
90020782:	b2db      	uxtb	r3, r3
90020784:	930b      	str	r3, [sp, #44]	; 0x2c
90020786:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020788:	2b00      	cmp	r3, #0
9002078a:	dc03      	bgt.n	90020794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002078c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9002078e:	2b00      	cmp	r3, #0
90020790:	f340 8255 	ble.w	90020c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020794:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020796:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002079a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002079e:	1e48      	subs	r0, r1, #1
900207a0:	1e55      	subs	r5, r2, #1
900207a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900207a4:	2b00      	cmp	r3, #0
900207a6:	f340 80f9 	ble.w	9002099c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900207aa:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900207ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207ae:	1436      	asrs	r6, r6, #16
900207b0:	ea4f 4323 	mov.w	r3, r3, asr #16
900207b4:	d406      	bmi.n	900207c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900207b6:	4286      	cmp	r6, r0
900207b8:	da04      	bge.n	900207c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900207ba:	2b00      	cmp	r3, #0
900207bc:	db02      	blt.n	900207c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900207be:	42ab      	cmp	r3, r5
900207c0:	f2c0 80ed 	blt.w	9002099e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
900207c4:	3601      	adds	r6, #1
900207c6:	f100 80da 	bmi.w	9002097e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900207ca:	42b1      	cmp	r1, r6
900207cc:	f2c0 80d7 	blt.w	9002097e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900207d0:	3301      	adds	r3, #1
900207d2:	f100 80d4 	bmi.w	9002097e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900207d6:	429a      	cmp	r2, r3
900207d8:	f2c0 80d1 	blt.w	9002097e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
900207dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900207de:	9311      	str	r3, [sp, #68]	; 0x44
900207e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900207e2:	930c      	str	r3, [sp, #48]	; 0x30
900207e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900207e6:	2b00      	cmp	r3, #0
900207e8:	f340 80fa 	ble.w	900209e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900207ec:	9826      	ldr	r0, [sp, #152]	; 0x98
900207ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207f0:	9a20      	ldr	r2, [sp, #128]	; 0x80
900207f2:	68c6      	ldr	r6, [r0, #12]
900207f4:	141d      	asrs	r5, r3, #16
900207f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
900207f8:	f3c2 3103 	ubfx	r1, r2, #12, #4
900207fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900207fe:	9a26      	ldr	r2, [sp, #152]	; 0x98
90020800:	1400      	asrs	r0, r0, #16
90020802:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020806:	6892      	ldr	r2, [r2, #8]
90020808:	f100 813e 	bmi.w	90020a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002080c:	1e57      	subs	r7, r2, #1
9002080e:	42b8      	cmp	r0, r7
90020810:	f280 813a 	bge.w	90020a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020814:	2d00      	cmp	r5, #0
90020816:	f2c0 8137 	blt.w	90020a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002081a:	1e77      	subs	r7, r6, #1
9002081c:	42bd      	cmp	r5, r7
9002081e:	f280 8133 	bge.w	90020a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020822:	b212      	sxth	r2, r2
90020824:	fb05 0002 	mla	r0, r5, r2, r0
90020828:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002082a:	f815 a000 	ldrb.w	sl, [r5, r0]
9002082e:	182e      	adds	r6, r5, r0
90020830:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90020834:	eb04 050a 	add.w	r5, r4, sl
90020838:	2b00      	cmp	r3, #0
9002083a:	f000 8117 	beq.w	90020a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002083e:	f896 c001 	ldrb.w	ip, [r6, #1]
90020842:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020846:	44a4      	add	ip, r4
90020848:	2900      	cmp	r1, #0
9002084a:	f000 8117 	beq.w	90020a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9002084e:	18b0      	adds	r0, r6, r2
90020850:	5cb2      	ldrb	r2, [r6, r2]
90020852:	7840      	ldrb	r0, [r0, #1]
90020854:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020858:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002085c:	4422      	add	r2, r4
9002085e:	4420      	add	r0, r4
90020860:	b29b      	uxth	r3, r3
90020862:	f89c 7002 	ldrb.w	r7, [ip, #2]
90020866:	b289      	uxth	r1, r1
90020868:	f895 b002 	ldrb.w	fp, [r5, #2]
9002086c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9002086e:	fb03 f901 	mul.w	r9, r3, r1
90020872:	011b      	lsls	r3, r3, #4
90020874:	f8b6 e000 	ldrh.w	lr, [r6]
90020878:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002087c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90020880:	eba3 0309 	sub.w	r3, r3, r9
90020884:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
90020888:	b289      	uxth	r1, r1
9002088a:	f814 a00a 	ldrb.w	sl, [r4, sl]
9002088e:	b29b      	uxth	r3, r3
90020890:	eba8 0801 	sub.w	r8, r8, r1
90020894:	435f      	muls	r7, r3
90020896:	fa1f f888 	uxth.w	r8, r8
9002089a:	9310      	str	r3, [sp, #64]	; 0x40
9002089c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002089e:	fb08 770b 	mla	r7, r8, fp, r7
900208a2:	f892 b002 	ldrb.w	fp, [r2, #2]
900208a6:	fb01 770b 	mla	r7, r1, fp, r7
900208aa:	f890 b002 	ldrb.w	fp, [r0, #2]
900208ae:	fb09 770b 	mla	r7, r9, fp, r7
900208b2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900208b6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900208ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
900208be:	fb1b fb03 	smulbb	fp, fp, r3
900208c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900208c4:	fb07 b706 	mla	r7, r7, r6, fp
900208c8:	f895 b001 	ldrb.w	fp, [r5, #1]
900208cc:	f89c 5001 	ldrb.w	r5, [ip, #1]
900208d0:	f89c c000 	ldrb.w	ip, [ip]
900208d4:	b2bf      	uxth	r7, r7
900208d6:	435d      	muls	r5, r3
900208d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900208da:	fb08 550b 	mla	r5, r8, fp, r5
900208de:	f892 b001 	ldrb.w	fp, [r2, #1]
900208e2:	fb01 550b 	mla	r5, r1, fp, r5
900208e6:	f890 b001 	ldrb.w	fp, [r0, #1]
900208ea:	fb09 550b 	mla	r5, r9, fp, r5
900208ee:	ea4f 0bee 	mov.w	fp, lr, asr #3
900208f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900208f6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
900208fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
900208fe:	fa5f fe8e 	uxtb.w	lr, lr
90020902:	fb1b fb03 	smulbb	fp, fp, r3
90020906:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020908:	fb03 f30c 	mul.w	r3, r3, ip
9002090c:	f892 c000 	ldrb.w	ip, [r2]
90020910:	fb05 b506 	mla	r5, r5, r6, fp
90020914:	fb08 330a 	mla	r3, r8, sl, r3
90020918:	b2ad      	uxth	r5, r5
9002091a:	fb01 330c 	mla	r3, r1, ip, r3
9002091e:	f890 c000 	ldrb.w	ip, [r0]
90020922:	f105 0b01 	add.w	fp, r5, #1
90020926:	fb09 3c0c 	mla	ip, r9, ip, r3
9002092a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002092c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020930:	fb1e fe03 	smulbb	lr, lr, r3
90020934:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020938:	1c7b      	adds	r3, r7, #1
9002093a:	096d      	lsrs	r5, r5, #5
9002093c:	fb0c e606 	mla	r6, ip, r6, lr
90020940:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020944:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020948:	b2b6      	uxth	r6, r6
9002094a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
9002094e:	1c77      	adds	r7, r6, #1
90020950:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90020954:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020958:	431f      	orrs	r7, r3
9002095a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002095c:	433d      	orrs	r5, r7
9002095e:	801d      	strh	r5, [r3, #0]
90020960:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020962:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020964:	3302      	adds	r3, #2
90020966:	930c      	str	r3, [sp, #48]	; 0x30
90020968:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002096a:	4413      	add	r3, r2
9002096c:	9a22      	ldr	r2, [sp, #136]	; 0x88
9002096e:	931f      	str	r3, [sp, #124]	; 0x7c
90020970:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020972:	4413      	add	r3, r2
90020974:	9320      	str	r3, [sp, #128]	; 0x80
90020976:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020978:	3b01      	subs	r3, #1
9002097a:	9311      	str	r3, [sp, #68]	; 0x44
9002097c:	e732      	b.n	900207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002097e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020980:	9e21      	ldr	r6, [sp, #132]	; 0x84
90020982:	4433      	add	r3, r6
90020984:	9e22      	ldr	r6, [sp, #136]	; 0x88
90020986:	931f      	str	r3, [sp, #124]	; 0x7c
90020988:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002098a:	4433      	add	r3, r6
9002098c:	9320      	str	r3, [sp, #128]	; 0x80
9002098e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020990:	3b01      	subs	r3, #1
90020992:	9309      	str	r3, [sp, #36]	; 0x24
90020994:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020996:	3302      	adds	r3, #2
90020998:	930a      	str	r3, [sp, #40]	; 0x28
9002099a:	e702      	b.n	900207a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002099c:	d027      	beq.n	900209ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9002099e:	9b09      	ldr	r3, [sp, #36]	; 0x24
900209a0:	9821      	ldr	r0, [sp, #132]	; 0x84
900209a2:	3b01      	subs	r3, #1
900209a4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
900209a6:	fb00 5003 	mla	r0, r0, r3, r5
900209aa:	1400      	asrs	r0, r0, #16
900209ac:	f53f af16 	bmi.w	900207dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900209b0:	3901      	subs	r1, #1
900209b2:	4288      	cmp	r0, r1
900209b4:	f6bf af12 	bge.w	900207dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900209b8:	9922      	ldr	r1, [sp, #136]	; 0x88
900209ba:	9820      	ldr	r0, [sp, #128]	; 0x80
900209bc:	fb01 0303 	mla	r3, r1, r3, r0
900209c0:	141b      	asrs	r3, r3, #16
900209c2:	f53f af0b 	bmi.w	900207dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900209c6:	3a01      	subs	r2, #1
900209c8:	4293      	cmp	r3, r2
900209ca:	f6bf af07 	bge.w	900207dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900209ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
900209d0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
900209d4:	9311      	str	r3, [sp, #68]	; 0x44
900209d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900209d8:	930c      	str	r3, [sp, #48]	; 0x30
900209da:	9b11      	ldr	r3, [sp, #68]	; 0x44
900209dc:	2b00      	cmp	r3, #0
900209de:	dc70      	bgt.n	90020ac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900209e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900209e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900209e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900209e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900209ec:	930a      	str	r3, [sp, #40]	; 0x28
900209ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900209f0:	2b00      	cmp	r3, #0
900209f2:	f340 8124 	ble.w	90020c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900209f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900209fa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900209fc:	ee30 0a04 	vadd.f32	s0, s0, s8
90020a00:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020a04:	eef0 6a62 	vmov.f32	s13, s5
90020a08:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020a0c:	ee31 1a05 	vadd.f32	s2, s2, s10
90020a10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020a14:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90020a18:	eef0 6a43 	vmov.f32	s13, s6
90020a1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020a20:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
90020a24:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020a28:	ee61 7a27 	vmul.f32	s15, s2, s15
90020a2c:	ee77 2a62 	vsub.f32	s5, s14, s5
90020a30:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020a34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020a38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020a3c:	ee12 2a90 	vmov	r2, s5
90020a40:	eef0 2a47 	vmov.f32	s5, s14
90020a44:	fb92 f3f3 	sdiv	r3, r2, r3
90020a48:	ee13 2a10 	vmov	r2, s6
90020a4c:	9321      	str	r3, [sp, #132]	; 0x84
90020a4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90020a50:	eeb0 3a67 	vmov.f32	s6, s15
90020a54:	fb92 f3f3 	sdiv	r3, r2, r3
90020a58:	9322      	str	r3, [sp, #136]	; 0x88
90020a5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020a5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
90020a5e:	3b01      	subs	r3, #1
90020a60:	930e      	str	r3, [sp, #56]	; 0x38
90020a62:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90020a64:	bf08      	it	eq
90020a66:	4613      	moveq	r3, r2
90020a68:	9309      	str	r3, [sp, #36]	; 0x24
90020a6a:	e68c      	b.n	90020786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020a6c:	b149      	cbz	r1, 90020a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90020a6e:	5cb2      	ldrb	r2, [r6, r2]
90020a70:	4628      	mov	r0, r5
90020a72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020a76:	4422      	add	r2, r4
90020a78:	46ac      	mov	ip, r5
90020a7a:	e6f1      	b.n	90020860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020a7c:	4628      	mov	r0, r5
90020a7e:	462a      	mov	r2, r5
90020a80:	e6ee      	b.n	90020860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020a82:	4628      	mov	r0, r5
90020a84:	462a      	mov	r2, r5
90020a86:	e7f7      	b.n	90020a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90020a88:	1c47      	adds	r7, r0, #1
90020a8a:	f53f af69 	bmi.w	90020960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020a8e:	42ba      	cmp	r2, r7
90020a90:	f6ff af66 	blt.w	90020960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020a94:	1c6f      	adds	r7, r5, #1
90020a96:	f53f af63 	bmi.w	90020960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020a9a:	42be      	cmp	r6, r7
90020a9c:	f6ff af60 	blt.w	90020960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020aa0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90020aa2:	b236      	sxth	r6, r6
90020aa4:	b212      	sxth	r2, r2
90020aa6:	9002      	str	r0, [sp, #8]
90020aa8:	9601      	str	r6, [sp, #4]
90020aaa:	9200      	str	r2, [sp, #0]
90020aac:	9813      	ldr	r0, [sp, #76]	; 0x4c
90020aae:	e9cd 1705 	strd	r1, r7, [sp, #20]
90020ab2:	e9cd 5303 	strd	r5, r3, [sp, #12]
90020ab6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
90020aba:	4623      	mov	r3, r4
90020abc:	f7ff fd59 	bl	90020572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90020ac0:	e74e      	b.n	90020960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020ac2:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020ac4:	9820      	ldr	r0, [sp, #128]	; 0x80
90020ac6:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020aca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90020acc:	9a26      	ldr	r2, [sp, #152]	; 0x98
90020ace:	1400      	asrs	r0, r0, #16
90020ad0:	142d      	asrs	r5, r5, #16
90020ad2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020ad4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020ad8:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020adc:	fb02 5000 	mla	r0, r2, r0, r5
90020ae0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90020ae2:	f815 9000 	ldrb.w	r9, [r5, r0]
90020ae6:	182e      	adds	r6, r5, r0
90020ae8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90020aec:	eb04 0509 	add.w	r5, r4, r9
90020af0:	2b00      	cmp	r3, #0
90020af2:	f000 8096 	beq.w	90020c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90020af6:	7877      	ldrb	r7, [r6, #1]
90020af8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020afc:	4427      	add	r7, r4
90020afe:	2900      	cmp	r1, #0
90020b00:	f000 8097 	beq.w	90020c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90020b04:	18b0      	adds	r0, r6, r2
90020b06:	5cb2      	ldrb	r2, [r6, r2]
90020b08:	7840      	ldrb	r0, [r0, #1]
90020b0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020b0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020b12:	4422      	add	r2, r4
90020b14:	4420      	add	r0, r4
90020b16:	b29b      	uxth	r3, r3
90020b18:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90020b1a:	b289      	uxth	r1, r1
90020b1c:	f895 b002 	ldrb.w	fp, [r5, #2]
90020b20:	f8b6 c000 	ldrh.w	ip, [r6]
90020b24:	fb03 f801 	mul.w	r8, r3, r1
90020b28:	011b      	lsls	r3, r3, #4
90020b2a:	78be      	ldrb	r6, [r7, #2]
90020b2c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90020b30:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90020b34:	eba3 0308 	sub.w	r3, r3, r8
90020b38:	f814 9009 	ldrb.w	r9, [r4, r9]
90020b3c:	b289      	uxth	r1, r1
90020b3e:	b29b      	uxth	r3, r3
90020b40:	ebae 0e01 	sub.w	lr, lr, r1
90020b44:	435e      	muls	r6, r3
90020b46:	fa1f fe8e 	uxth.w	lr, lr
90020b4a:	9310      	str	r3, [sp, #64]	; 0x40
90020b4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020b4e:	fb0e 660b 	mla	r6, lr, fp, r6
90020b52:	f892 b002 	ldrb.w	fp, [r2, #2]
90020b56:	fb01 660b 	mla	r6, r1, fp, r6
90020b5a:	f890 b002 	ldrb.w	fp, [r0, #2]
90020b5e:	fb08 660b 	mla	r6, r8, fp, r6
90020b62:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90020b66:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90020b6a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90020b6e:	fb1b fb03 	smulbb	fp, fp, r3
90020b72:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020b74:	fb06 b60a 	mla	r6, r6, sl, fp
90020b78:	f895 b001 	ldrb.w	fp, [r5, #1]
90020b7c:	787d      	ldrb	r5, [r7, #1]
90020b7e:	783f      	ldrb	r7, [r7, #0]
90020b80:	b2b6      	uxth	r6, r6
90020b82:	435d      	muls	r5, r3
90020b84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020b86:	fb0e 550b 	mla	r5, lr, fp, r5
90020b8a:	f892 b001 	ldrb.w	fp, [r2, #1]
90020b8e:	fb01 550b 	mla	r5, r1, fp, r5
90020b92:	f890 b001 	ldrb.w	fp, [r0, #1]
90020b96:	fb08 550b 	mla	r5, r8, fp, r5
90020b9a:	ea4f 0bec 	mov.w	fp, ip, asr #3
90020b9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020ba2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90020ba6:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020baa:	fa5f fc8c 	uxtb.w	ip, ip
90020bae:	fb1b fb03 	smulbb	fp, fp, r3
90020bb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020bb4:	437b      	muls	r3, r7
90020bb6:	7817      	ldrb	r7, [r2, #0]
90020bb8:	fb05 b50a 	mla	r5, r5, sl, fp
90020bbc:	fb0e 3309 	mla	r3, lr, r9, r3
90020bc0:	b2ad      	uxth	r5, r5
90020bc2:	fb01 3307 	mla	r3, r1, r7, r3
90020bc6:	7807      	ldrb	r7, [r0, #0]
90020bc8:	f105 0b01 	add.w	fp, r5, #1
90020bcc:	fb08 3707 	mla	r7, r8, r7, r3
90020bd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020bd2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020bd6:	fb1c fc03 	smulbb	ip, ip, r3
90020bda:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020bde:	1c73      	adds	r3, r6, #1
90020be0:	096d      	lsrs	r5, r5, #5
90020be2:	fb07 c70a 	mla	r7, r7, sl, ip
90020be6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90020bea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020bee:	b2bf      	uxth	r7, r7
90020bf0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020bf2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90020bf6:	1c7a      	adds	r2, r7, #1
90020bf8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90020bfc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020c00:	4316      	orrs	r6, r2
90020c02:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020c04:	432e      	orrs	r6, r5
90020c06:	f823 6b02 	strh.w	r6, [r3], #2
90020c0a:	930c      	str	r3, [sp, #48]	; 0x30
90020c0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020c0e:	4413      	add	r3, r2
90020c10:	9a22      	ldr	r2, [sp, #136]	; 0x88
90020c12:	931f      	str	r3, [sp, #124]	; 0x7c
90020c14:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c16:	4413      	add	r3, r2
90020c18:	9320      	str	r3, [sp, #128]	; 0x80
90020c1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020c1c:	3b01      	subs	r3, #1
90020c1e:	9311      	str	r3, [sp, #68]	; 0x44
90020c20:	e6db      	b.n	900209da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90020c22:	b149      	cbz	r1, 90020c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90020c24:	5cb2      	ldrb	r2, [r6, r2]
90020c26:	4628      	mov	r0, r5
90020c28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020c2c:	4422      	add	r2, r4
90020c2e:	462f      	mov	r7, r5
90020c30:	e771      	b.n	90020b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020c32:	4628      	mov	r0, r5
90020c34:	462a      	mov	r2, r5
90020c36:	e76e      	b.n	90020b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020c38:	4628      	mov	r0, r5
90020c3a:	462a      	mov	r2, r5
90020c3c:	e7f7      	b.n	90020c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90020c3e:	b015      	add	sp, #84	; 0x54
90020c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020c44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90020c44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020c48:	880f      	ldrh	r7, [r1, #0]
90020c4a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90020c4e:	023c      	lsls	r4, r7, #8
90020c50:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90020c54:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90020c58:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90020c5c:	017c      	lsls	r4, r7, #5
90020c5e:	00ff      	lsls	r7, r7, #3
90020c60:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90020c64:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
90020c68:	b2ff      	uxtb	r7, r7
90020c6a:	ea4b 0404 	orr.w	r4, fp, r4
90020c6e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90020c72:	4327      	orrs	r7, r4
90020c74:	fb05 ca0e 	mla	sl, r5, lr, ip
90020c78:	2d00      	cmp	r5, #0
90020c7a:	9701      	str	r7, [sp, #4]
90020c7c:	eb02 080a 	add.w	r8, r2, sl
90020c80:	db7e      	blt.n	90020d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020c82:	45a9      	cmp	r9, r5
90020c84:	dd7c      	ble.n	90020d80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020c86:	f1bc 0f00 	cmp.w	ip, #0
90020c8a:	db77      	blt.n	90020d7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020c8c:	45e6      	cmp	lr, ip
90020c8e:	dd75      	ble.n	90020d7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020c90:	f812 700a 	ldrb.w	r7, [r2, sl]
90020c94:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020c98:	441f      	add	r7, r3
90020c9a:	f11c 0201 	adds.w	r2, ip, #1
90020c9e:	d472      	bmi.n	90020d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020ca0:	4596      	cmp	lr, r2
90020ca2:	dd70      	ble.n	90020d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020ca4:	2800      	cmp	r0, #0
90020ca6:	d06e      	beq.n	90020d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020ca8:	f898 4001 	ldrb.w	r4, [r8, #1]
90020cac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90020cb0:	441c      	add	r4, r3
90020cb2:	3501      	adds	r5, #1
90020cb4:	d46b      	bmi.n	90020d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020cb6:	45a9      	cmp	r9, r5
90020cb8:	dd69      	ble.n	90020d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020cba:	2e00      	cmp	r6, #0
90020cbc:	d067      	beq.n	90020d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020cbe:	f1bc 0f00 	cmp.w	ip, #0
90020cc2:	db62      	blt.n	90020d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020cc4:	45e6      	cmp	lr, ip
90020cc6:	dd60      	ble.n	90020d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020cc8:	f818 500e 	ldrb.w	r5, [r8, lr]
90020ccc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020cd0:	441d      	add	r5, r3
90020cd2:	f11c 0201 	adds.w	r2, ip, #1
90020cd6:	d45d      	bmi.n	90020d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020cd8:	4596      	cmp	lr, r2
90020cda:	dd5b      	ble.n	90020d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020cdc:	2800      	cmp	r0, #0
90020cde:	d059      	beq.n	90020d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020ce0:	44c6      	add	lr, r8
90020ce2:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020ce6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020cea:	4413      	add	r3, r2
90020cec:	b280      	uxth	r0, r0
90020cee:	f897 e002 	ldrb.w	lr, [r7, #2]
90020cf2:	b2b2      	uxth	r2, r6
90020cf4:	f897 9000 	ldrb.w	r9, [r7]
90020cf8:	787f      	ldrb	r7, [r7, #1]
90020cfa:	fb00 f602 	mul.w	r6, r0, r2
90020cfe:	0100      	lsls	r0, r0, #4
90020d00:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90020d04:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90020d08:	1b80      	subs	r0, r0, r6
90020d0a:	fa1f fc82 	uxth.w	ip, r2
90020d0e:	b282      	uxth	r2, r0
90020d10:	78a0      	ldrb	r0, [r4, #2]
90020d12:	eba8 080c 	sub.w	r8, r8, ip
90020d16:	4350      	muls	r0, r2
90020d18:	fa1f f888 	uxth.w	r8, r8
90020d1c:	fb08 0e0e 	mla	lr, r8, lr, r0
90020d20:	78a8      	ldrb	r0, [r5, #2]
90020d22:	fb0c e000 	mla	r0, ip, r0, lr
90020d26:	f893 e002 	ldrb.w	lr, [r3, #2]
90020d2a:	fb06 0e0e 	mla	lr, r6, lr, r0
90020d2e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
90020d32:	f894 e000 	ldrb.w	lr, [r4]
90020d36:	fb02 fe0e 	mul.w	lr, r2, lr
90020d3a:	fb08 e909 	mla	r9, r8, r9, lr
90020d3e:	f895 e000 	ldrb.w	lr, [r5]
90020d42:	fb0c 990e 	mla	r9, ip, lr, r9
90020d46:	f893 e000 	ldrb.w	lr, [r3]
90020d4a:	785b      	ldrb	r3, [r3, #1]
90020d4c:	fb06 9e0e 	mla	lr, r6, lr, r9
90020d50:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020d54:	ea4e 0e00 	orr.w	lr, lr, r0
90020d58:	7860      	ldrb	r0, [r4, #1]
90020d5a:	4350      	muls	r0, r2
90020d5c:	786a      	ldrb	r2, [r5, #1]
90020d5e:	fb08 0007 	mla	r0, r8, r7, r0
90020d62:	fb0c 0202 	mla	r2, ip, r2, r0
90020d66:	fb06 2303 	mla	r3, r6, r3, r2
90020d6a:	095b      	lsrs	r3, r3, #5
90020d6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020d70:	ea4e 0303 	orr.w	r3, lr, r3
90020d74:	800b      	strh	r3, [r1, #0]
90020d76:	b003      	add	sp, #12
90020d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020d7c:	af01      	add	r7, sp, #4
90020d7e:	e78c      	b.n	90020c9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90020d80:	ac01      	add	r4, sp, #4
90020d82:	4627      	mov	r7, r4
90020d84:	e795      	b.n	90020cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020d86:	ac01      	add	r4, sp, #4
90020d88:	e793      	b.n	90020cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020d8a:	ad01      	add	r5, sp, #4
90020d8c:	e7a1      	b.n	90020cd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90020d8e:	ab01      	add	r3, sp, #4
90020d90:	461d      	mov	r5, r3
90020d92:	e7ab      	b.n	90020cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90020d94:	ab01      	add	r3, sp, #4
90020d96:	e7a9      	b.n	90020cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90020d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d9c:	b08f      	sub	sp, #60	; 0x3c
90020d9e:	920c      	str	r2, [sp, #48]	; 0x30
90020da0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90020da2:	900d      	str	r0, [sp, #52]	; 0x34
90020da4:	910a      	str	r1, [sp, #40]	; 0x28
90020da6:	6850      	ldr	r0, [r2, #4]
90020da8:	9306      	str	r3, [sp, #24]
90020daa:	6812      	ldr	r2, [r2, #0]
90020dac:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90020db0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90020db4:	fb00 1303 	mla	r3, r0, r3, r1
90020db8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020dbc:	9307      	str	r3, [sp, #28]
90020dbe:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020dc0:	681b      	ldr	r3, [r3, #0]
90020dc2:	9308      	str	r3, [sp, #32]
90020dc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020dc6:	685c      	ldr	r4, [r3, #4]
90020dc8:	3404      	adds	r4, #4
90020dca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020dcc:	2b00      	cmp	r3, #0
90020dce:	dc03      	bgt.n	90020dd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90020dd0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020dd2:	2b00      	cmp	r3, #0
90020dd4:	f340 81d5 	ble.w	90021182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90020dd8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020dda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020dde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020de2:	1e48      	subs	r0, r1, #1
90020de4:	1e56      	subs	r6, r2, #1
90020de6:	9b06      	ldr	r3, [sp, #24]
90020de8:	2b00      	cmp	r3, #0
90020dea:	f340 80b6 	ble.w	90020f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90020dee:	ea5f 472b 	movs.w	r7, fp, asr #16
90020df2:	ea4f 4325 	mov.w	r3, r5, asr #16
90020df6:	d406      	bmi.n	90020e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020df8:	4287      	cmp	r7, r0
90020dfa:	da04      	bge.n	90020e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020dfc:	2b00      	cmp	r3, #0
90020dfe:	db02      	blt.n	90020e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020e00:	42b3      	cmp	r3, r6
90020e02:	f2c0 80ab 	blt.w	90020f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90020e06:	3701      	adds	r7, #1
90020e08:	f100 809c 	bmi.w	90020f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020e0c:	42b9      	cmp	r1, r7
90020e0e:	f2c0 8099 	blt.w	90020f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020e12:	3301      	adds	r3, #1
90020e14:	f100 8096 	bmi.w	90020f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020e18:	429a      	cmp	r2, r3
90020e1a:	f2c0 8093 	blt.w	90020f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020e1e:	9b06      	ldr	r3, [sp, #24]
90020e20:	930b      	str	r3, [sp, #44]	; 0x2c
90020e22:	9b07      	ldr	r3, [sp, #28]
90020e24:	9309      	str	r3, [sp, #36]	; 0x24
90020e26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020e28:	2b00      	cmp	r3, #0
90020e2a:	f340 80b4 	ble.w	90020f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90020e2e:	9820      	ldr	r0, [sp, #128]	; 0x80
90020e30:	142e      	asrs	r6, r5, #16
90020e32:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020e34:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020e38:	68c7      	ldr	r7, [r0, #12]
90020e3a:	ea5f 402b 	movs.w	r0, fp, asr #16
90020e3e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020e42:	6892      	ldr	r2, [r2, #8]
90020e44:	f100 80fb 	bmi.w	9002103e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020e48:	f102 3cff 	add.w	ip, r2, #4294967295
90020e4c:	4560      	cmp	r0, ip
90020e4e:	f280 80f6 	bge.w	9002103e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020e52:	2e00      	cmp	r6, #0
90020e54:	f2c0 80f3 	blt.w	9002103e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020e58:	f107 3cff 	add.w	ip, r7, #4294967295
90020e5c:	4566      	cmp	r6, ip
90020e5e:	f280 80ee 	bge.w	9002103e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020e62:	b212      	sxth	r2, r2
90020e64:	fb06 0002 	mla	r0, r6, r2, r0
90020e68:	9e08      	ldr	r6, [sp, #32]
90020e6a:	1837      	adds	r7, r6, r0
90020e6c:	5c30      	ldrb	r0, [r6, r0]
90020e6e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90020e72:	eb04 0c08 	add.w	ip, r4, r8
90020e76:	2b00      	cmp	r3, #0
90020e78:	f000 80d3 	beq.w	90021022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90020e7c:	787e      	ldrb	r6, [r7, #1]
90020e7e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020e82:	4426      	add	r6, r4
90020e84:	2900      	cmp	r1, #0
90020e86:	f000 80d4 	beq.w	90021032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90020e8a:	18b8      	adds	r0, r7, r2
90020e8c:	5cba      	ldrb	r2, [r7, r2]
90020e8e:	7840      	ldrb	r0, [r0, #1]
90020e90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020e94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020e98:	4422      	add	r2, r4
90020e9a:	4420      	add	r0, r4
90020e9c:	b29b      	uxth	r3, r3
90020e9e:	78b7      	ldrb	r7, [r6, #2]
90020ea0:	b289      	uxth	r1, r1
90020ea2:	f89c a002 	ldrb.w	sl, [ip, #2]
90020ea6:	f89c c001 	ldrb.w	ip, [ip, #1]
90020eaa:	fb03 f901 	mul.w	r9, r3, r1
90020eae:	011b      	lsls	r3, r3, #4
90020eb0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020eb4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90020eb8:	eba3 0309 	sub.w	r3, r3, r9
90020ebc:	b289      	uxth	r1, r1
90020ebe:	b29b      	uxth	r3, r3
90020ec0:	ebae 0e01 	sub.w	lr, lr, r1
90020ec4:	435f      	muls	r7, r3
90020ec6:	fa1f fe8e 	uxth.w	lr, lr
90020eca:	fb0e 770a 	mla	r7, lr, sl, r7
90020ece:	f892 a002 	ldrb.w	sl, [r2, #2]
90020ed2:	fb01 770a 	mla	r7, r1, sl, r7
90020ed6:	f890 a002 	ldrb.w	sl, [r0, #2]
90020eda:	fb09 7a0a 	mla	sl, r9, sl, r7
90020ede:	f814 7008 	ldrb.w	r7, [r4, r8]
90020ee2:	f896 8000 	ldrb.w	r8, [r6]
90020ee6:	7876      	ldrb	r6, [r6, #1]
90020ee8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90020eec:	fb03 f808 	mul.w	r8, r3, r8
90020ef0:	4373      	muls	r3, r6
90020ef2:	fb0e 8807 	mla	r8, lr, r7, r8
90020ef6:	7817      	ldrb	r7, [r2, #0]
90020ef8:	fb0e 330c 	mla	r3, lr, ip, r3
90020efc:	fb01 8807 	mla	r8, r1, r7, r8
90020f00:	7807      	ldrb	r7, [r0, #0]
90020f02:	fb09 8707 	mla	r7, r9, r7, r8
90020f06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020f0a:	ea47 070a 	orr.w	r7, r7, sl
90020f0e:	f892 a001 	ldrb.w	sl, [r2, #1]
90020f12:	fb01 310a 	mla	r1, r1, sl, r3
90020f16:	f890 a001 	ldrb.w	sl, [r0, #1]
90020f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020f1c:	fb09 1a0a 	mla	sl, r9, sl, r1
90020f20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020f24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90020f28:	ea47 070a 	orr.w	r7, r7, sl
90020f2c:	801f      	strh	r7, [r3, #0]
90020f2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020f30:	3302      	adds	r3, #2
90020f32:	9309      	str	r3, [sp, #36]	; 0x24
90020f34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90020f36:	449b      	add	fp, r3
90020f38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020f3a:	441d      	add	r5, r3
90020f3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020f3e:	3b01      	subs	r3, #1
90020f40:	930b      	str	r3, [sp, #44]	; 0x2c
90020f42:	e770      	b.n	90020e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90020f44:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90020f46:	449b      	add	fp, r3
90020f48:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020f4a:	441d      	add	r5, r3
90020f4c:	9b06      	ldr	r3, [sp, #24]
90020f4e:	3b01      	subs	r3, #1
90020f50:	9306      	str	r3, [sp, #24]
90020f52:	9b07      	ldr	r3, [sp, #28]
90020f54:	3302      	adds	r3, #2
90020f56:	9307      	str	r3, [sp, #28]
90020f58:	e745      	b.n	90020de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90020f5a:	d023      	beq.n	90020fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90020f5c:	9b06      	ldr	r3, [sp, #24]
90020f5e:	981b      	ldr	r0, [sp, #108]	; 0x6c
90020f60:	3b01      	subs	r3, #1
90020f62:	fb00 b003 	mla	r0, r0, r3, fp
90020f66:	1400      	asrs	r0, r0, #16
90020f68:	f53f af59 	bmi.w	90020e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020f6c:	3901      	subs	r1, #1
90020f6e:	4288      	cmp	r0, r1
90020f70:	f6bf af55 	bge.w	90020e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020f74:	991c      	ldr	r1, [sp, #112]	; 0x70
90020f76:	fb01 5303 	mla	r3, r1, r3, r5
90020f7a:	141b      	asrs	r3, r3, #16
90020f7c:	f53f af4f 	bmi.w	90020e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020f80:	3a01      	subs	r2, #1
90020f82:	4293      	cmp	r3, r2
90020f84:	f6bf af4b 	bge.w	90020e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020f88:	9b06      	ldr	r3, [sp, #24]
90020f8a:	9309      	str	r3, [sp, #36]	; 0x24
90020f8c:	9b07      	ldr	r3, [sp, #28]
90020f8e:	930b      	str	r3, [sp, #44]	; 0x2c
90020f90:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020f92:	2b00      	cmp	r3, #0
90020f94:	dc70      	bgt.n	90021078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90020f96:	9b06      	ldr	r3, [sp, #24]
90020f98:	9a07      	ldr	r2, [sp, #28]
90020f9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020f9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020fa2:	9307      	str	r3, [sp, #28]
90020fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020fa6:	2b00      	cmp	r3, #0
90020fa8:	f340 80eb 	ble.w	90021182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90020fac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020fb0:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020fb2:	ee30 0a04 	vadd.f32	s0, s0, s8
90020fb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020fba:	eef0 6a62 	vmov.f32	s13, s5
90020fbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020fc2:	ee31 1a05 	vadd.f32	s2, s2, s10
90020fc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020fca:	ee16 ba90 	vmov	fp, s13
90020fce:	eef0 6a43 	vmov.f32	s13, s6
90020fd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020fd6:	ee16 5a90 	vmov	r5, s13
90020fda:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020fde:	ee61 7a27 	vmul.f32	s15, s2, s15
90020fe2:	ee77 2a62 	vsub.f32	s5, s14, s5
90020fe6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020fea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020fee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020ff2:	ee12 2a90 	vmov	r2, s5
90020ff6:	eef0 2a47 	vmov.f32	s5, s14
90020ffa:	fb92 f3f3 	sdiv	r3, r2, r3
90020ffe:	ee13 2a10 	vmov	r2, s6
90021002:	931b      	str	r3, [sp, #108]	; 0x6c
90021004:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021006:	eeb0 3a67 	vmov.f32	s6, s15
9002100a:	fb92 f3f3 	sdiv	r3, r2, r3
9002100e:	931c      	str	r3, [sp, #112]	; 0x70
90021010:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021012:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90021014:	3b01      	subs	r3, #1
90021016:	930a      	str	r3, [sp, #40]	; 0x28
90021018:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002101a:	bf08      	it	eq
9002101c:	4613      	moveq	r3, r2
9002101e:	9306      	str	r3, [sp, #24]
90021020:	e6d3      	b.n	90020dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90021022:	b149      	cbz	r1, 90021038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90021024:	5cba      	ldrb	r2, [r7, r2]
90021026:	4660      	mov	r0, ip
90021028:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002102c:	4422      	add	r2, r4
9002102e:	4666      	mov	r6, ip
90021030:	e734      	b.n	90020e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90021032:	4660      	mov	r0, ip
90021034:	4662      	mov	r2, ip
90021036:	e731      	b.n	90020e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90021038:	4660      	mov	r0, ip
9002103a:	4662      	mov	r2, ip
9002103c:	e7f7      	b.n	9002102e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002103e:	f110 0c01 	adds.w	ip, r0, #1
90021042:	f53f af74 	bmi.w	90020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021046:	4562      	cmp	r2, ip
90021048:	f6ff af71 	blt.w	90020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002104c:	f116 0c01 	adds.w	ip, r6, #1
90021050:	f53f af6d 	bmi.w	90020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021054:	4567      	cmp	r7, ip
90021056:	f6ff af6a 	blt.w	90020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002105a:	b23f      	sxth	r7, r7
9002105c:	b212      	sxth	r2, r2
9002105e:	9701      	str	r7, [sp, #4]
90021060:	9200      	str	r2, [sp, #0]
90021062:	e9cd 3104 	strd	r3, r1, [sp, #16]
90021066:	e9cd 0602 	strd	r0, r6, [sp, #8]
9002106a:	4623      	mov	r3, r4
9002106c:	980d      	ldr	r0, [sp, #52]	; 0x34
9002106e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021072:	f7ff fde7 	bl	90020c44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90021076:	e75a      	b.n	90020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021078:	9a20      	ldr	r2, [sp, #128]	; 0x80
9002107a:	ea4f 462b 	mov.w	r6, fp, asr #16
9002107e:	1428      	asrs	r0, r5, #16
90021080:	f3cb 3303 	ubfx	r3, fp, #12, #4
90021084:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90021088:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002108c:	fb02 6000 	mla	r0, r2, r0, r6
90021090:	9e08      	ldr	r6, [sp, #32]
90021092:	f816 8000 	ldrb.w	r8, [r6, r0]
90021096:	1837      	adds	r7, r6, r0
90021098:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9002109c:	eb04 0c08 	add.w	ip, r4, r8
900210a0:	2b00      	cmp	r3, #0
900210a2:	d060      	beq.n	90021166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900210a4:	787e      	ldrb	r6, [r7, #1]
900210a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900210aa:	4426      	add	r6, r4
900210ac:	2900      	cmp	r1, #0
900210ae:	d062      	beq.n	90021176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900210b0:	18b8      	adds	r0, r7, r2
900210b2:	5cba      	ldrb	r2, [r7, r2]
900210b4:	7840      	ldrb	r0, [r0, #1]
900210b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900210ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900210be:	4422      	add	r2, r4
900210c0:	4420      	add	r0, r4
900210c2:	b29b      	uxth	r3, r3
900210c4:	78b7      	ldrb	r7, [r6, #2]
900210c6:	b289      	uxth	r1, r1
900210c8:	f89c a002 	ldrb.w	sl, [ip, #2]
900210cc:	f89c c001 	ldrb.w	ip, [ip, #1]
900210d0:	fb03 f901 	mul.w	r9, r3, r1
900210d4:	011b      	lsls	r3, r3, #4
900210d6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900210da:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
900210de:	eba3 0309 	sub.w	r3, r3, r9
900210e2:	b289      	uxth	r1, r1
900210e4:	b29b      	uxth	r3, r3
900210e6:	ebae 0e01 	sub.w	lr, lr, r1
900210ea:	435f      	muls	r7, r3
900210ec:	fa1f fe8e 	uxth.w	lr, lr
900210f0:	fb0e 770a 	mla	r7, lr, sl, r7
900210f4:	f892 a002 	ldrb.w	sl, [r2, #2]
900210f8:	fb01 770a 	mla	r7, r1, sl, r7
900210fc:	f890 a002 	ldrb.w	sl, [r0, #2]
90021100:	fb09 7a0a 	mla	sl, r9, sl, r7
90021104:	f814 7008 	ldrb.w	r7, [r4, r8]
90021108:	f896 8000 	ldrb.w	r8, [r6]
9002110c:	7876      	ldrb	r6, [r6, #1]
9002110e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90021112:	fb03 f808 	mul.w	r8, r3, r8
90021116:	4373      	muls	r3, r6
90021118:	7856      	ldrb	r6, [r2, #1]
9002111a:	fb0e 8807 	mla	r8, lr, r7, r8
9002111e:	7817      	ldrb	r7, [r2, #0]
90021120:	fb0e 330c 	mla	r3, lr, ip, r3
90021124:	fb01 8807 	mla	r8, r1, r7, r8
90021128:	7807      	ldrb	r7, [r0, #0]
9002112a:	fb01 3306 	mla	r3, r1, r6, r3
9002112e:	fb09 8707 	mla	r7, r9, r7, r8
90021132:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021136:	ea47 070a 	orr.w	r7, r7, sl
9002113a:	f890 a001 	ldrb.w	sl, [r0, #1]
9002113e:	fb09 3a0a 	mla	sl, r9, sl, r3
90021142:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021144:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021148:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9002114c:	ea47 070a 	orr.w	r7, r7, sl
90021150:	f823 7b02 	strh.w	r7, [r3], #2
90021154:	930b      	str	r3, [sp, #44]	; 0x2c
90021156:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90021158:	449b      	add	fp, r3
9002115a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002115c:	441d      	add	r5, r3
9002115e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021160:	3b01      	subs	r3, #1
90021162:	9309      	str	r3, [sp, #36]	; 0x24
90021164:	e714      	b.n	90020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90021166:	b149      	cbz	r1, 9002117c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90021168:	5cba      	ldrb	r2, [r7, r2]
9002116a:	4660      	mov	r0, ip
9002116c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021170:	4422      	add	r2, r4
90021172:	4666      	mov	r6, ip
90021174:	e7a5      	b.n	900210c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90021176:	4660      	mov	r0, ip
90021178:	4662      	mov	r2, ip
9002117a:	e7a2      	b.n	900210c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9002117c:	4660      	mov	r0, ip
9002117e:	4662      	mov	r2, ip
90021180:	e7f7      	b.n	90021172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90021182:	b00f      	add	sp, #60	; 0x3c
90021184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90021188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002118c:	b085      	sub	sp, #20
9002118e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90021192:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90021196:	9102      	str	r1, [sp, #8]
90021198:	2c00      	cmp	r4, #0
9002119a:	fb04 710c 	mla	r1, r4, ip, r7
9002119e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
900211a2:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
900211a6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900211aa:	eb02 0e01 	add.w	lr, r2, r1
900211ae:	f2c0 8122 	blt.w	900213f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900211b2:	45a0      	cmp	r8, r4
900211b4:	f340 811f 	ble.w	900213f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900211b8:	2f00      	cmp	r7, #0
900211ba:	f2c0 811a 	blt.w	900213f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900211be:	45bc      	cmp	ip, r7
900211c0:	f340 8117 	ble.w	900213f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
900211c4:	5c52      	ldrb	r2, [r2, r1]
900211c6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900211ca:	1c7a      	adds	r2, r7, #1
900211cc:	f100 8116 	bmi.w	900213fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900211d0:	4594      	cmp	ip, r2
900211d2:	f340 8113 	ble.w	900213fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
900211d6:	2e00      	cmp	r6, #0
900211d8:	f000 8112 	beq.w	90021400 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
900211dc:	f89e 2001 	ldrb.w	r2, [lr, #1]
900211e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900211e4:	3401      	adds	r4, #1
900211e6:	f100 810f 	bmi.w	90021408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900211ea:	45a0      	cmp	r8, r4
900211ec:	f340 810c 	ble.w	90021408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
900211f0:	2800      	cmp	r0, #0
900211f2:	f000 810c 	beq.w	9002140e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
900211f6:	2f00      	cmp	r7, #0
900211f8:	f2c0 8104 	blt.w	90021404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
900211fc:	45bc      	cmp	ip, r7
900211fe:	f340 8101 	ble.w	90021404 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021202:	f81e 200c 	ldrb.w	r2, [lr, ip]
90021206:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002120a:	3701      	adds	r7, #1
9002120c:	f100 8102 	bmi.w	90021414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021210:	45bc      	cmp	ip, r7
90021212:	f340 80ff 	ble.w	90021414 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021216:	2e00      	cmp	r6, #0
90021218:	f000 80fe 	beq.w	90021418 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002121c:	44f4      	add	ip, lr
9002121e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90021222:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90021226:	b2b6      	uxth	r6, r6
90021228:	b280      	uxth	r0, r0
9002122a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002122e:	fb00 fe06 	mul.w	lr, r0, r6
90021232:	0136      	lsls	r6, r6, #4
90021234:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90021238:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002123c:	eba6 070e 	sub.w	r7, r6, lr
90021240:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90021244:	ea4f 6914 	mov.w	r9, r4, lsr #24
90021248:	b280      	uxth	r0, r0
9002124a:	b2bf      	uxth	r7, r7
9002124c:	1a1b      	subs	r3, r3, r0
9002124e:	ea4f 6812 	mov.w	r8, r2, lsr #24
90021252:	fb0a f607 	mul.w	r6, sl, r7
90021256:	b29b      	uxth	r3, r3
90021258:	fb0b 6603 	mla	r6, fp, r3, r6
9002125c:	fb00 6609 	mla	r6, r0, r9, r6
90021260:	fb0e 6608 	mla	r6, lr, r8, r6
90021264:	f3c6 2607 	ubfx	r6, r6, #8, #8
90021268:	9600      	str	r6, [sp, #0]
9002126a:	2e00      	cmp	r6, #0
9002126c:	f000 80be 	beq.w	900213ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90021270:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90021274:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90021278:	9e02      	ldr	r6, [sp, #8]
9002127a:	fb0b fc0c 	mul.w	ip, fp, ip
9002127e:	fb0b f505 	mul.w	r5, fp, r5
90021282:	8836      	ldrh	r6, [r6, #0]
90021284:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90021288:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002128c:	9501      	str	r5, [sp, #4]
9002128e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90021292:	44dc      	add	ip, fp
90021294:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021298:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002129c:	9503      	str	r5, [sp, #12]
9002129e:	9d01      	ldr	r5, [sp, #4]
900212a0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900212a4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900212a8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900212ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900212b0:	fb0a fc0c 	mul.w	ip, sl, ip
900212b4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900212b8:	fb0a fa01 	mul.w	sl, sl, r1
900212bc:	ea4f 251c 	mov.w	r5, ip, lsr #8
900212c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900212c4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900212c8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900212cc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900212d0:	4465      	add	r5, ip
900212d2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900212d6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900212da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900212de:	fb09 fc0c 	mul.w	ip, r9, ip
900212e2:	0a2d      	lsrs	r5, r5, #8
900212e4:	fb09 f904 	mul.w	r9, r9, r4
900212e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900212ec:	ea4f 211c 	mov.w	r1, ip, lsr #8
900212f0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900212f4:	f509 7480 	add.w	r4, r9, #256	; 0x100
900212f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900212fc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021300:	437d      	muls	r5, r7
90021302:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90021306:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002130a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002130e:	4461      	add	r1, ip
90021310:	fb08 f404 	mul.w	r4, r8, r4
90021314:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021318:	fb08 f802 	mul.w	r8, r8, r2
9002131c:	0a09      	lsrs	r1, r1, #8
9002131e:	0a22      	lsrs	r2, r4, #8
90021320:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90021324:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021328:	fb07 f70a 	mul.w	r7, r7, sl
9002132c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90021330:	4414      	add	r4, r2
90021332:	f508 7280 	add.w	r2, r8, #256	; 0x100
90021336:	0a24      	lsrs	r4, r4, #8
90021338:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002133c:	9a03      	ldr	r2, [sp, #12]
9002133e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90021342:	fb02 5503 	mla	r5, r2, r3, r5
90021346:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002134a:	9a00      	ldr	r2, [sp, #0]
9002134c:	fb04 540e 	mla	r4, r4, lr, r5
90021350:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90021354:	1235      	asrs	r5, r6, #8
90021356:	fb01 4100 	mla	r1, r1, r0, r4
9002135a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002135e:	0a09      	lsrs	r1, r1, #8
90021360:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90021364:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90021368:	fb03 7101 	mla	r1, r3, r1, r7
9002136c:	fb0e 1e08 	mla	lr, lr, r8, r1
90021370:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90021374:	fb00 e101 	mla	r1, r0, r1, lr
90021378:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9002137c:	b287      	uxth	r7, r0
9002137e:	0a09      	lsrs	r1, r1, #8
90021380:	437a      	muls	r2, r7
90021382:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021386:	1c53      	adds	r3, r2, #1
90021388:	4321      	orrs	r1, r4
9002138a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002138e:	0c0a      	lsrs	r2, r1, #16
90021390:	f3c1 2407 	ubfx	r4, r1, #8, #8
90021394:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90021398:	b2c8      	uxtb	r0, r1
9002139a:	fb12 f207 	smulbb	r2, r2, r7
9002139e:	fb14 f407 	smulbb	r4, r4, r7
900213a2:	b2db      	uxtb	r3, r3
900213a4:	fb10 f007 	smulbb	r0, r0, r7
900213a8:	fb05 2503 	mla	r5, r5, r3, r2
900213ac:	10f2      	asrs	r2, r6, #3
900213ae:	00f6      	lsls	r6, r6, #3
900213b0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900213b4:	b2ad      	uxth	r5, r5
900213b6:	b2f6      	uxtb	r6, r6
900213b8:	fb02 4203 	mla	r2, r2, r3, r4
900213bc:	fb06 0303 	mla	r3, r6, r3, r0
900213c0:	b294      	uxth	r4, r2
900213c2:	b299      	uxth	r1, r3
900213c4:	1c6b      	adds	r3, r5, #1
900213c6:	1c62      	adds	r2, r4, #1
900213c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900213cc:	1c4b      	adds	r3, r1, #1
900213ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900213d2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900213d6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900213da:	0952      	lsrs	r2, r2, #5
900213dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900213e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900213e4:	432b      	orrs	r3, r5
900213e6:	4313      	orrs	r3, r2
900213e8:	9a02      	ldr	r2, [sp, #8]
900213ea:	8013      	strh	r3, [r2, #0]
900213ec:	b005      	add	sp, #20
900213ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900213f2:	2500      	movs	r5, #0
900213f4:	e6e9      	b.n	900211ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900213f6:	2100      	movs	r1, #0
900213f8:	460d      	mov	r5, r1
900213fa:	e6f3      	b.n	900211e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900213fc:	2100      	movs	r1, #0
900213fe:	e6f1      	b.n	900211e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021400:	4631      	mov	r1, r6
90021402:	e6ef      	b.n	900211e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021404:	2400      	movs	r4, #0
90021406:	e700      	b.n	9002120a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021408:	2200      	movs	r2, #0
9002140a:	4614      	mov	r4, r2
9002140c:	e70b      	b.n	90021226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002140e:	4602      	mov	r2, r0
90021410:	4604      	mov	r4, r0
90021412:	e708      	b.n	90021226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021414:	2200      	movs	r2, #0
90021416:	e706      	b.n	90021226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021418:	4632      	mov	r2, r6
9002141a:	e704      	b.n	90021226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002141c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002141c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021420:	b09f      	sub	sp, #124	; 0x7c
90021422:	921b      	str	r2, [sp, #108]	; 0x6c
90021424:	9309      	str	r3, [sp, #36]	; 0x24
90021426:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90021428:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9002142c:	901d      	str	r0, [sp, #116]	; 0x74
9002142e:	931c      	str	r3, [sp, #112]	; 0x70
90021430:	6850      	ldr	r0, [r2, #4]
90021432:	9119      	str	r1, [sp, #100]	; 0x64
90021434:	6812      	ldr	r2, [r2, #0]
90021436:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90021438:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9002143c:	fb00 1303 	mla	r3, r0, r3, r1
90021440:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021444:	930c      	str	r3, [sp, #48]	; 0x30
90021446:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021448:	681b      	ldr	r3, [r3, #0]
9002144a:	9312      	str	r3, [sp, #72]	; 0x48
9002144c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002144e:	685e      	ldr	r6, [r3, #4]
90021450:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90021454:	3604      	adds	r6, #4
90021456:	930d      	str	r3, [sp, #52]	; 0x34
90021458:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002145a:	2b00      	cmp	r3, #0
9002145c:	dc03      	bgt.n	90021466 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002145e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90021460:	2b00      	cmp	r3, #0
90021462:	f340 8387 	ble.w	90021b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021466:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021468:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002146c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021470:	1e48      	subs	r0, r1, #1
90021472:	1e57      	subs	r7, r2, #1
90021474:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021476:	2b00      	cmp	r3, #0
90021478:	f340 8194 	ble.w	900217a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9002147c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9002147e:	142b      	asrs	r3, r5, #16
90021480:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021484:	d406      	bmi.n	90021494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021486:	4584      	cmp	ip, r0
90021488:	da04      	bge.n	90021494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002148a:	2b00      	cmp	r3, #0
9002148c:	db02      	blt.n	90021494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002148e:	42bb      	cmp	r3, r7
90021490:	f2c0 8189 	blt.w	900217a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021494:	f11c 0c01 	adds.w	ip, ip, #1
90021498:	f100 8177 	bmi.w	9002178a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002149c:	4561      	cmp	r1, ip
9002149e:	f2c0 8174 	blt.w	9002178a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900214a2:	3301      	adds	r3, #1
900214a4:	f100 8171 	bmi.w	9002178a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900214a8:	429a      	cmp	r2, r3
900214aa:	f2c0 816e 	blt.w	9002178a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900214ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
900214b0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
900214b2:	931a      	str	r3, [sp, #104]	; 0x68
900214b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900214b6:	2b00      	cmp	r3, #0
900214b8:	f340 8193 	ble.w	900217e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900214bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900214be:	ea4f 4c25 	mov.w	ip, r5, asr #16
900214c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
900214c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
900214ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900214cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900214d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900214d2:	141b      	asrs	r3, r3, #16
900214d4:	f100 81d6 	bmi.w	90021884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900214d8:	f100 38ff 	add.w	r8, r0, #4294967295
900214dc:	4543      	cmp	r3, r8
900214de:	f280 81d1 	bge.w	90021884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900214e2:	f1bc 0f00 	cmp.w	ip, #0
900214e6:	f2c0 81cd 	blt.w	90021884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900214ea:	f10e 38ff 	add.w	r8, lr, #4294967295
900214ee:	45c4      	cmp	ip, r8
900214f0:	f280 81c8 	bge.w	90021884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900214f4:	b200      	sxth	r0, r0
900214f6:	9c12      	ldr	r4, [sp, #72]	; 0x48
900214f8:	fb0c 3300 	mla	r3, ip, r0, r3
900214fc:	eb04 0803 	add.w	r8, r4, r3
90021500:	5ce3      	ldrb	r3, [r4, r3]
90021502:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021506:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002150a:	2a00      	cmp	r2, #0
9002150c:	f000 81af 	beq.w	9002186e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021510:	f898 c001 	ldrb.w	ip, [r8, #1]
90021514:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021518:	940e      	str	r4, [sp, #56]	; 0x38
9002151a:	0e24      	lsrs	r4, r4, #24
9002151c:	9415      	str	r4, [sp, #84]	; 0x54
9002151e:	b179      	cbz	r1, 90021540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021520:	eb08 0c00 	add.w	ip, r8, r0
90021524:	f818 0000 	ldrb.w	r0, [r8, r0]
90021528:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002152c:	900a      	str	r0, [sp, #40]	; 0x28
9002152e:	0e00      	lsrs	r0, r0, #24
90021530:	9013      	str	r0, [sp, #76]	; 0x4c
90021532:	f89c 0001 	ldrb.w	r0, [ip, #1]
90021536:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002153a:	900f      	str	r0, [sp, #60]	; 0x3c
9002153c:	0e00      	lsrs	r0, r0, #24
9002153e:	9016      	str	r0, [sp, #88]	; 0x58
90021540:	b292      	uxth	r2, r2
90021542:	9815      	ldr	r0, [sp, #84]	; 0x54
90021544:	b289      	uxth	r1, r1
90021546:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021548:	fb02 f901 	mul.w	r9, r2, r1
9002154c:	0112      	lsls	r2, r2, #4
9002154e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021552:	eba2 0809 	sub.w	r8, r2, r9
90021556:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002155a:	b289      	uxth	r1, r1
9002155c:	fa1f f888 	uxth.w	r8, r8
90021560:	1a52      	subs	r2, r2, r1
90021562:	fb08 f000 	mul.w	r0, r8, r0
90021566:	b292      	uxth	r2, r2
90021568:	fb02 000e 	mla	r0, r2, lr, r0
9002156c:	fb01 0004 	mla	r0, r1, r4, r0
90021570:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021572:	fb09 0004 	mla	r0, r9, r4, r0
90021576:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002157a:	2800      	cmp	r0, #0
9002157c:	f000 80fa 	beq.w	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021580:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90021584:	d01b      	beq.n	900215be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90021586:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002158a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002158e:	fb0e fa0a 	mul.w	sl, lr, sl
90021592:	fb0e fe03 	mul.w	lr, lr, r3
90021596:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002159a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002159e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900215a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900215a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900215aa:	4453      	add	r3, sl
900215ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900215b0:	0a1b      	lsrs	r3, r3, #8
900215b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900215b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900215ba:	ea43 030c 	orr.w	r3, r3, ip
900215be:	9c15      	ldr	r4, [sp, #84]	; 0x54
900215c0:	2cff      	cmp	r4, #255	; 0xff
900215c2:	d021      	beq.n	90021608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900215c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900215c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900215ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
900215cc:	fb04 fb0b 	mul.w	fp, r4, fp
900215d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900215d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900215d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
900215d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900215dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900215e0:	fb04 fa0a 	mul.w	sl, r4, sl
900215e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900215e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900215ec:	44de      	add	lr, fp
900215ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900215f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900215f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900215fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900215fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021602:	ea4e 040a 	orr.w	r4, lr, sl
90021606:	940e      	str	r4, [sp, #56]	; 0x38
90021608:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002160a:	2cff      	cmp	r4, #255	; 0xff
9002160c:	d021      	beq.n	90021652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002160e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021610:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021614:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021616:	fb04 fb0b 	mul.w	fp, r4, fp
9002161a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002161c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021620:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021622:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021626:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002162a:	fb04 fa0a 	mul.w	sl, r4, sl
9002162e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021632:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021636:	44de      	add	lr, fp
90021638:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002163c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021644:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021648:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002164c:	ea4e 040a 	orr.w	r4, lr, sl
90021650:	940a      	str	r4, [sp, #40]	; 0x28
90021652:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021654:	2cff      	cmp	r4, #255	; 0xff
90021656:	d021      	beq.n	9002169c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90021658:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002165a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002165e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021660:	fb04 fb0b 	mul.w	fp, r4, fp
90021664:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021666:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002166a:	9c16      	ldr	r4, [sp, #88]	; 0x58
9002166c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021670:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021674:	fb04 fa0a 	mul.w	sl, r4, sl
90021678:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002167c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021680:	44de      	add	lr, fp
90021682:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021686:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002168a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002168e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021692:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021696:	ea4e 040a 	orr.w	r4, lr, sl
9002169a:	940f      	str	r4, [sp, #60]	; 0x3c
9002169c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002169e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900216a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900216a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900216aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900216ac:	fb08 fc0c 	mul.w	ip, r8, ip
900216b0:	fb02 cc0e 	mla	ip, r2, lr, ip
900216b4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900216b8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900216ba:	fb01 cc0e 	mla	ip, r1, lr, ip
900216be:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900216c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900216c4:	fb09 cc0e 	mla	ip, r9, lr, ip
900216c8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
900216cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900216ce:	fb08 f80e 	mul.w	r8, r8, lr
900216d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900216d6:	fb02 8303 	mla	r3, r2, r3, r8
900216da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900216dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900216e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900216e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900216e6:	fb01 330a 	mla	r3, r1, sl, r3
900216ea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
900216ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900216f0:	fb09 3901 	mla	r9, r9, r1, r3
900216f4:	883b      	ldrh	r3, [r7, #0]
900216f6:	4342      	muls	r2, r0
900216f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900216fc:	1c50      	adds	r0, r2, #1
900216fe:	1219      	asrs	r1, r3, #8
90021700:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90021704:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90021708:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002170c:	ea4c 0c09 	orr.w	ip, ip, r9
90021710:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90021714:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021718:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002171c:	b2c0      	uxtb	r0, r0
9002171e:	fb12 f204 	smulbb	r2, r2, r4
90021722:	fa5f fc8c 	uxtb.w	ip, ip
90021726:	fb1e fe04 	smulbb	lr, lr, r4
9002172a:	fb01 2100 	mla	r1, r1, r0, r2
9002172e:	10da      	asrs	r2, r3, #3
90021730:	fb1c fc04 	smulbb	ip, ip, r4
90021734:	00db      	lsls	r3, r3, #3
90021736:	b289      	uxth	r1, r1
90021738:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002173c:	b2db      	uxtb	r3, r3
9002173e:	fb02 e200 	mla	r2, r2, r0, lr
90021742:	fb03 c300 	mla	r3, r3, r0, ip
90021746:	b292      	uxth	r2, r2
90021748:	fa1f fc83 	uxth.w	ip, r3
9002174c:	1c4b      	adds	r3, r1, #1
9002174e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90021752:	f10c 0301 	add.w	r3, ip, #1
90021756:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002175a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002175e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021762:	430b      	orrs	r3, r1
90021764:	1c51      	adds	r1, r2, #1
90021766:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002176a:	0952      	lsrs	r2, r2, #5
9002176c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021770:	4313      	orrs	r3, r2
90021772:	803b      	strh	r3, [r7, #0]
90021774:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90021776:	3702      	adds	r7, #2
90021778:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002177a:	441a      	add	r2, r3
9002177c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002177e:	441d      	add	r5, r3
90021780:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90021782:	9229      	str	r2, [sp, #164]	; 0xa4
90021784:	3b01      	subs	r3, #1
90021786:	931a      	str	r3, [sp, #104]	; 0x68
90021788:	e694      	b.n	900214b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002178a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002178c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9002178e:	441c      	add	r4, r3
90021790:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021792:	441d      	add	r5, r3
90021794:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021796:	9429      	str	r4, [sp, #164]	; 0xa4
90021798:	3b01      	subs	r3, #1
9002179a:	9309      	str	r3, [sp, #36]	; 0x24
9002179c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002179e:	3302      	adds	r3, #2
900217a0:	930c      	str	r3, [sp, #48]	; 0x30
900217a2:	e667      	b.n	90021474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900217a4:	d024      	beq.n	900217f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900217a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900217a8:	982b      	ldr	r0, [sp, #172]	; 0xac
900217aa:	3b01      	subs	r3, #1
900217ac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900217ae:	fb00 4003 	mla	r0, r0, r3, r4
900217b2:	1400      	asrs	r0, r0, #16
900217b4:	f53f ae7b 	bmi.w	900214ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900217b8:	3901      	subs	r1, #1
900217ba:	4288      	cmp	r0, r1
900217bc:	f6bf ae77 	bge.w	900214ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900217c0:	992c      	ldr	r1, [sp, #176]	; 0xb0
900217c2:	fb01 5303 	mla	r3, r1, r3, r5
900217c6:	141b      	asrs	r3, r3, #16
900217c8:	f53f ae71 	bmi.w	900214ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900217cc:	3a01      	subs	r2, #1
900217ce:	4293      	cmp	r3, r2
900217d0:	f6bf ae6d 	bge.w	900214ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900217d4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900217d8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900217dc:	f1bb 0f00 	cmp.w	fp, #0
900217e0:	dc70      	bgt.n	900218c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900217e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900217e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900217e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900217ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900217ee:	930c      	str	r3, [sp, #48]	; 0x30
900217f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
900217f2:	2b00      	cmp	r3, #0
900217f4:	f340 81be 	ble.w	90021b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900217f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900217fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900217fe:	ee30 0a04 	vadd.f32	s0, s0, s8
90021802:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021806:	eef0 6a62 	vmov.f32	s13, s5
9002180a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002180e:	ee31 1a05 	vadd.f32	s2, s2, s10
90021812:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021816:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9002181a:	eef0 6a43 	vmov.f32	s13, s6
9002181e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021822:	ee16 5a90 	vmov	r5, s13
90021826:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002182a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002182e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021832:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021836:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002183a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002183e:	ee12 2a90 	vmov	r2, s5
90021842:	eef0 2a47 	vmov.f32	s5, s14
90021846:	fb92 f3f3 	sdiv	r3, r2, r3
9002184a:	ee13 2a10 	vmov	r2, s6
9002184e:	932b      	str	r3, [sp, #172]	; 0xac
90021850:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021852:	eeb0 3a67 	vmov.f32	s6, s15
90021856:	fb92 f3f3 	sdiv	r3, r2, r3
9002185a:	932c      	str	r3, [sp, #176]	; 0xb0
9002185c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002185e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90021860:	3b01      	subs	r3, #1
90021862:	9319      	str	r3, [sp, #100]	; 0x64
90021864:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021866:	bf08      	it	eq
90021868:	4613      	moveq	r3, r2
9002186a:	9309      	str	r3, [sp, #36]	; 0x24
9002186c:	e5f4      	b.n	90021458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002186e:	2900      	cmp	r1, #0
90021870:	f43f ae66 	beq.w	90021540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021874:	f818 0000 	ldrb.w	r0, [r8, r0]
90021878:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002187c:	900a      	str	r0, [sp, #40]	; 0x28
9002187e:	0e00      	lsrs	r0, r0, #24
90021880:	9013      	str	r0, [sp, #76]	; 0x4c
90021882:	e65d      	b.n	90021540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021884:	f113 0801 	adds.w	r8, r3, #1
90021888:	f53f af74 	bmi.w	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002188c:	4540      	cmp	r0, r8
9002188e:	f6ff af71 	blt.w	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021892:	f11c 0801 	adds.w	r8, ip, #1
90021896:	f53f af6d 	bmi.w	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002189a:	45c6      	cmp	lr, r8
9002189c:	f6ff af6a 	blt.w	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900218a0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900218a2:	b200      	sxth	r0, r0
900218a4:	9302      	str	r3, [sp, #8]
900218a6:	fa0f f38e 	sxth.w	r3, lr
900218aa:	9000      	str	r0, [sp, #0]
900218ac:	9301      	str	r3, [sp, #4]
900218ae:	4633      	mov	r3, r6
900218b0:	981d      	ldr	r0, [sp, #116]	; 0x74
900218b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
900218b6:	e9cd c203 	strd	ip, r2, [sp, #12]
900218ba:	4639      	mov	r1, r7
900218bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
900218be:	f7ff fc63 	bl	90021188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900218c2:	e757      	b.n	90021774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900218c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900218c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900218ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900218cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900218d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900218d2:	1427      	asrs	r7, r4, #16
900218d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
900218d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900218da:	142b      	asrs	r3, r5, #16
900218dc:	fb01 7303 	mla	r3, r1, r3, r7
900218e0:	18e7      	adds	r7, r4, r3
900218e2:	5ce3      	ldrb	r3, [r4, r3]
900218e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900218e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900218ec:	2a00      	cmp	r2, #0
900218ee:	f000 8137 	beq.w	90021b60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900218f2:	f897 e001 	ldrb.w	lr, [r7, #1]
900218f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900218fa:	9410      	str	r4, [sp, #64]	; 0x40
900218fc:	0e24      	lsrs	r4, r4, #24
900218fe:	9417      	str	r4, [sp, #92]	; 0x5c
90021900:	b170      	cbz	r0, 90021920 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021902:	eb07 0e01 	add.w	lr, r7, r1
90021906:	5c79      	ldrb	r1, [r7, r1]
90021908:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002190c:	910b      	str	r1, [sp, #44]	; 0x2c
9002190e:	0e09      	lsrs	r1, r1, #24
90021910:	9114      	str	r1, [sp, #80]	; 0x50
90021912:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021916:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002191a:	9111      	str	r1, [sp, #68]	; 0x44
9002191c:	0e09      	lsrs	r1, r1, #24
9002191e:	9118      	str	r1, [sp, #96]	; 0x60
90021920:	b292      	uxth	r2, r2
90021922:	9917      	ldr	r1, [sp, #92]	; 0x5c
90021924:	b280      	uxth	r0, r0
90021926:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021928:	fb02 f800 	mul.w	r8, r2, r0
9002192c:	0112      	lsls	r2, r2, #4
9002192e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021932:	eba2 0e08 	sub.w	lr, r2, r8
90021936:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002193a:	b280      	uxth	r0, r0
9002193c:	fa1f fe8e 	uxth.w	lr, lr
90021940:	1a12      	subs	r2, r2, r0
90021942:	fb0e f101 	mul.w	r1, lr, r1
90021946:	b292      	uxth	r2, r2
90021948:	fb02 110c 	mla	r1, r2, ip, r1
9002194c:	fb00 1104 	mla	r1, r0, r4, r1
90021950:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021952:	fb08 1104 	mla	r1, r8, r4, r1
90021956:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002195a:	2900      	cmp	r1, #0
9002195c:	f000 80f5 	beq.w	90021b4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90021960:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90021964:	d019      	beq.n	9002199a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90021966:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002196a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002196e:	fb0c fa0a 	mul.w	sl, ip, sl
90021972:	fb0c fc03 	mul.w	ip, ip, r3
90021976:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002197a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002197e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90021982:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021986:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002198a:	4453      	add	r3, sl
9002198c:	0a3f      	lsrs	r7, r7, #8
9002198e:	0a1b      	lsrs	r3, r3, #8
90021990:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90021994:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021998:	433b      	orrs	r3, r7
9002199a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002199c:	2cff      	cmp	r4, #255	; 0xff
9002199e:	d020      	beq.n	900219e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900219a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
900219a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900219a6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900219a8:	4367      	muls	r7, r4
900219aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
900219ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900219b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900219b4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900219b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900219ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900219be:	fb04 fa0a 	mul.w	sl, r4, sl
900219c2:	44bc      	add	ip, r7
900219c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900219c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900219cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900219d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900219d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900219d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900219dc:	ea4c 040a 	orr.w	r4, ip, sl
900219e0:	9410      	str	r4, [sp, #64]	; 0x40
900219e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900219e4:	2cff      	cmp	r4, #255	; 0xff
900219e6:	d020      	beq.n	90021a2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
900219e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900219ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900219ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
900219f0:	4367      	muls	r7, r4
900219f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900219f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900219f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900219fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
900219fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021a02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021a06:	fb04 fa0a 	mul.w	sl, r4, sl
90021a0a:	44bc      	add	ip, r7
90021a0c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021a14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021a18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021a1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021a20:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021a24:	ea4c 040a 	orr.w	r4, ip, sl
90021a28:	940b      	str	r4, [sp, #44]	; 0x2c
90021a2a:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021a2c:	2cff      	cmp	r4, #255	; 0xff
90021a2e:	d020      	beq.n	90021a72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90021a30:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021a32:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021a36:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021a38:	4367      	muls	r7, r4
90021a3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021a3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021a40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021a44:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021a46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021a4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021a4e:	fb04 fa0a 	mul.w	sl, r4, sl
90021a52:	44bc      	add	ip, r7
90021a54:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021a58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021a5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021a60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021a64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021a68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021a6c:	ea4c 040a 	orr.w	r4, ip, sl
90021a70:	9411      	str	r4, [sp, #68]	; 0x44
90021a72:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021a74:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90021a78:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021a7c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021a80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021a82:	fb0e f707 	mul.w	r7, lr, r7
90021a86:	fb02 770c 	mla	r7, r2, ip, r7
90021a8a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021a8e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021a90:	fb00 770c 	mla	r7, r0, ip, r7
90021a94:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021a98:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021a9a:	fb08 770c 	mla	r7, r8, ip, r7
90021a9e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90021aa2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021aa4:	fb0e fe0c 	mul.w	lr, lr, ip
90021aa8:	0a3f      	lsrs	r7, r7, #8
90021aaa:	fb02 e303 	mla	r3, r2, r3, lr
90021aae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021ab0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90021ab4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021ab8:	9a11      	ldr	r2, [sp, #68]	; 0x44
90021aba:	fb00 330a 	mla	r3, r0, sl, r3
90021abe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90021ac2:	f8b9 0000 	ldrh.w	r0, [r9]
90021ac6:	fb08 3c0c 	mla	ip, r8, ip, r3
90021aca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021acc:	1202      	asrs	r2, r0, #8
90021ace:	434b      	muls	r3, r1
90021ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021ad4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021ad8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021adc:	1c59      	adds	r1, r3, #1
90021ade:	ea47 070c 	orr.w	r7, r7, ip
90021ae2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021ae6:	0c3b      	lsrs	r3, r7, #16
90021ae8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90021aec:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90021af0:	b2ff      	uxtb	r7, r7
90021af2:	fb13 f304 	smulbb	r3, r3, r4
90021af6:	b2c9      	uxtb	r1, r1
90021af8:	fb1c fc04 	smulbb	ip, ip, r4
90021afc:	fb02 3201 	mla	r2, r2, r1, r3
90021b00:	10c3      	asrs	r3, r0, #3
90021b02:	fb17 f704 	smulbb	r7, r7, r4
90021b06:	00c0      	lsls	r0, r0, #3
90021b08:	b292      	uxth	r2, r2
90021b0a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90021b0e:	b2c0      	uxtb	r0, r0
90021b10:	fb03 c301 	mla	r3, r3, r1, ip
90021b14:	f102 0c01 	add.w	ip, r2, #1
90021b18:	fb00 7001 	mla	r0, r0, r1, r7
90021b1c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90021b20:	b280      	uxth	r0, r0
90021b22:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
90021b26:	b29b      	uxth	r3, r3
90021b28:	1c42      	adds	r2, r0, #1
90021b2a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90021b2e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021b32:	ea42 020c 	orr.w	r2, r2, ip
90021b36:	f103 0c01 	add.w	ip, r3, #1
90021b3a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90021b3e:	095b      	lsrs	r3, r3, #5
90021b40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021b44:	431a      	orrs	r2, r3
90021b46:	f8a9 2000 	strh.w	r2, [r9]
90021b4a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90021b4c:	f109 0902 	add.w	r9, r9, #2
90021b50:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90021b52:	f10b 3bff 	add.w	fp, fp, #4294967295
90021b56:	441a      	add	r2, r3
90021b58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021b5a:	9229      	str	r2, [sp, #164]	; 0xa4
90021b5c:	441d      	add	r5, r3
90021b5e:	e63d      	b.n	900217dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90021b60:	2800      	cmp	r0, #0
90021b62:	f43f aedd 	beq.w	90021920 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021b66:	5c79      	ldrb	r1, [r7, r1]
90021b68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021b6c:	910b      	str	r1, [sp, #44]	; 0x2c
90021b6e:	0e09      	lsrs	r1, r1, #24
90021b70:	9114      	str	r1, [sp, #80]	; 0x50
90021b72:	e6d5      	b.n	90021920 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021b74:	b01f      	add	sp, #124	; 0x7c
90021b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021b7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90021b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b7e:	b089      	sub	sp, #36	; 0x24
90021b80:	9101      	str	r1, [sp, #4]
90021b82:	9801      	ldr	r0, [sp, #4]
90021b84:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
90021b88:	8800      	ldrh	r0, [r0, #0]
90021b8a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90021b8e:	1206      	asrs	r6, r0, #8
90021b90:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90021b94:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
90021b98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90021b9c:	9602      	str	r6, [sp, #8]
90021b9e:	10c6      	asrs	r6, r0, #3
90021ba0:	00c0      	lsls	r0, r0, #3
90021ba2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90021ba6:	b2c0      	uxtb	r0, r0
90021ba8:	9603      	str	r6, [sp, #12]
90021baa:	9004      	str	r0, [sp, #16]
90021bac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90021bb0:	fb07 100c 	mla	r0, r7, ip, r1
90021bb4:	2f00      	cmp	r7, #0
90021bb6:	eb02 0e00 	add.w	lr, r2, r0
90021bba:	f2c0 810a 	blt.w	90021dd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021bbe:	45b8      	cmp	r8, r7
90021bc0:	f340 8107 	ble.w	90021dd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021bc4:	2900      	cmp	r1, #0
90021bc6:	f2c0 8102 	blt.w	90021dce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021bca:	458c      	cmp	ip, r1
90021bcc:	f340 80ff 	ble.w	90021dce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021bd0:	5c12      	ldrb	r2, [r2, r0]
90021bd2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90021bd6:	1c4a      	adds	r2, r1, #1
90021bd8:	f100 80fe 	bmi.w	90021dd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021bdc:	4594      	cmp	ip, r2
90021bde:	f340 80fb 	ble.w	90021dd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021be2:	2d00      	cmp	r5, #0
90021be4:	f000 80fa 	beq.w	90021ddc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90021be8:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021bec:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90021bf0:	3701      	adds	r7, #1
90021bf2:	f100 80f7 	bmi.w	90021de4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021bf6:	45b8      	cmp	r8, r7
90021bf8:	f340 80f4 	ble.w	90021de4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021bfc:	2c00      	cmp	r4, #0
90021bfe:	f000 80f4 	beq.w	90021dea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90021c02:	2900      	cmp	r1, #0
90021c04:	eb0e 020c 	add.w	r2, lr, ip
90021c08:	f2c0 80ea 	blt.w	90021de0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021c0c:	458c      	cmp	ip, r1
90021c0e:	f340 80e7 	ble.w	90021de0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021c12:	f81e 700c 	ldrb.w	r7, [lr, ip]
90021c16:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90021c1a:	3101      	adds	r1, #1
90021c1c:	f100 80e8 	bmi.w	90021df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021c20:	458c      	cmp	ip, r1
90021c22:	f340 80e5 	ble.w	90021df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021c26:	2d00      	cmp	r5, #0
90021c28:	f000 80e4 	beq.w	90021df4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90021c2c:	7852      	ldrb	r2, [r2, #1]
90021c2e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021c32:	0e0b      	lsrs	r3, r1, #24
90021c34:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
90021c38:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90021c3c:	9300      	str	r3, [sp, #0]
90021c3e:	b2a4      	uxth	r4, r4
90021c40:	b2ab      	uxth	r3, r5
90021c42:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
90021c46:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90021c4a:	fb03 f904 	mul.w	r9, r3, r4
90021c4e:	011b      	lsls	r3, r3, #4
90021c50:	fb0a f505 	mul.w	r5, sl, r5
90021c54:	ea4f 6817 	mov.w	r8, r7, lsr #24
90021c58:	eba3 0e09 	sub.w	lr, r3, r9
90021c5c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90021c60:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90021c64:	0a28      	lsrs	r0, r5, #8
90021c66:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
90021c6a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90021c6e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021c72:	fb0a f303 	mul.w	r3, sl, r3
90021c76:	fb08 f707 	mul.w	r7, r8, r7
90021c7a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90021c7e:	4405      	add	r5, r0
90021c80:	fb08 fc0c 	mul.w	ip, r8, ip
90021c84:	b2a4      	uxth	r4, r4
90021c86:	0a2d      	lsrs	r5, r5, #8
90021c88:	fa1f fe8e 	uxth.w	lr, lr
90021c8c:	1b12      	subs	r2, r2, r4
90021c8e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90021c92:	b292      	uxth	r2, r2
90021c94:	9005      	str	r0, [sp, #20]
90021c96:	f503 7080 	add.w	r0, r3, #256	; 0x100
90021c9a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90021c9e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90021ca2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021ca6:	0a1b      	lsrs	r3, r3, #8
90021ca8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021cac:	9306      	str	r3, [sp, #24]
90021cae:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90021cb2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90021cb6:	4460      	add	r0, ip
90021cb8:	fb0b f303 	mul.w	r3, fp, r3
90021cbc:	fb0b f606 	mul.w	r6, fp, r6
90021cc0:	0a00      	lsrs	r0, r0, #8
90021cc2:	0a1d      	lsrs	r5, r3, #8
90021cc4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90021cc8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021ccc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021cd0:	441d      	add	r5, r3
90021cd2:	f506 7380 	add.w	r3, r6, #256	; 0x100
90021cd6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90021cda:	f507 7380 	add.w	r3, r7, #256	; 0x100
90021cde:	0a2d      	lsrs	r5, r5, #8
90021ce0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90021ce4:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90021ce8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021cec:	0a36      	lsrs	r6, r6, #8
90021cee:	0a1b      	lsrs	r3, r3, #8
90021cf0:	fb05 f50e 	mul.w	r5, r5, lr
90021cf4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90021cf8:	9307      	str	r3, [sp, #28]
90021cfa:	0e0b      	lsrs	r3, r1, #24
90021cfc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021d00:	fb0e f606 	mul.w	r6, lr, r6
90021d04:	435f      	muls	r7, r3
90021d06:	4359      	muls	r1, r3
90021d08:	9b05      	ldr	r3, [sp, #20]
90021d0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021d0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021d12:	fb03 5502 	mla	r5, r3, r2, r5
90021d16:	9b06      	ldr	r3, [sp, #24]
90021d18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021d1c:	fb0e fe0b 	mul.w	lr, lr, fp
90021d20:	44bc      	add	ip, r7
90021d22:	f501 7780 	add.w	r7, r1, #256	; 0x100
90021d26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021d2a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021d2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021d32:	0a09      	lsrs	r1, r1, #8
90021d34:	fb0c 5509 	mla	r5, ip, r9, r5
90021d38:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021d3c:	fb00 5504 	mla	r5, r0, r4, r5
90021d40:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90021d44:	9b07      	ldr	r3, [sp, #28]
90021d46:	fb02 6000 	mla	r0, r2, r0, r6
90021d4a:	0a2d      	lsrs	r5, r5, #8
90021d4c:	fb02 e20a 	mla	r2, r2, sl, lr
90021d50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021d54:	fb09 0001 	mla	r0, r9, r1, r0
90021d58:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021d5c:	fb04 0003 	mla	r0, r4, r3, r0
90021d60:	9b00      	ldr	r3, [sp, #0]
90021d62:	fb04 2408 	mla	r4, r4, r8, r2
90021d66:	9a04      	ldr	r2, [sp, #16]
90021d68:	0a00      	lsrs	r0, r0, #8
90021d6a:	fb09 4903 	mla	r9, r9, r3, r4
90021d6e:	9b02      	ldr	r3, [sp, #8]
90021d70:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90021d74:	ea6f 2929 	mvn.w	r9, r9, asr #8
90021d78:	4305      	orrs	r5, r0
90021d7a:	fa5f f989 	uxtb.w	r9, r9
90021d7e:	fb03 f109 	mul.w	r1, r3, r9
90021d82:	9b03      	ldr	r3, [sp, #12]
90021d84:	fb03 f309 	mul.w	r3, r3, r9
90021d88:	fb02 f909 	mul.w	r9, r2, r9
90021d8c:	1c4a      	adds	r2, r1, #1
90021d8e:	1c58      	adds	r0, r3, #1
90021d90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021d94:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90021d98:	0c2a      	lsrs	r2, r5, #16
90021d9a:	0a2b      	lsrs	r3, r5, #8
90021d9c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90021da0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021da4:	0212      	lsls	r2, r2, #8
90021da6:	00db      	lsls	r3, r3, #3
90021da8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90021dac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021db0:	4313      	orrs	r3, r2
90021db2:	f109 0201 	add.w	r2, r9, #1
90021db6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90021dba:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90021dbe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90021dc2:	431d      	orrs	r5, r3
90021dc4:	9b01      	ldr	r3, [sp, #4]
90021dc6:	801d      	strh	r5, [r3, #0]
90021dc8:	b009      	add	sp, #36	; 0x24
90021dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021dce:	2000      	movs	r0, #0
90021dd0:	e701      	b.n	90021bd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90021dd2:	2600      	movs	r6, #0
90021dd4:	4630      	mov	r0, r6
90021dd6:	e70b      	b.n	90021bf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021dd8:	2600      	movs	r6, #0
90021dda:	e709      	b.n	90021bf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021ddc:	462e      	mov	r6, r5
90021dde:	e707      	b.n	90021bf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021de0:	2700      	movs	r7, #0
90021de2:	e71a      	b.n	90021c1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90021de4:	2100      	movs	r1, #0
90021de6:	460f      	mov	r7, r1
90021de8:	e723      	b.n	90021c32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021dea:	4621      	mov	r1, r4
90021dec:	4627      	mov	r7, r4
90021dee:	e720      	b.n	90021c32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021df0:	2100      	movs	r1, #0
90021df2:	e71e      	b.n	90021c32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021df4:	4629      	mov	r1, r5
90021df6:	e71c      	b.n	90021c32 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90021df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021dfc:	b09b      	sub	sp, #108	; 0x6c
90021dfe:	9218      	str	r2, [sp, #96]	; 0x60
90021e00:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90021e02:	9019      	str	r0, [sp, #100]	; 0x64
90021e04:	9116      	str	r1, [sp, #88]	; 0x58
90021e06:	6850      	ldr	r0, [r2, #4]
90021e08:	9307      	str	r3, [sp, #28]
90021e0a:	6812      	ldr	r2, [r2, #0]
90021e0c:	9d26      	ldr	r5, [sp, #152]	; 0x98
90021e0e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90021e12:	fb00 1303 	mla	r3, r0, r3, r1
90021e16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021e1a:	930a      	str	r3, [sp, #40]	; 0x28
90021e1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021e1e:	681b      	ldr	r3, [r3, #0]
90021e20:	930f      	str	r3, [sp, #60]	; 0x3c
90021e22:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021e24:	685e      	ldr	r6, [r3, #4]
90021e26:	3604      	adds	r6, #4
90021e28:	9b16      	ldr	r3, [sp, #88]	; 0x58
90021e2a:	2b00      	cmp	r3, #0
90021e2c:	dc03      	bgt.n	90021e36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021e2e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021e30:	2b00      	cmp	r3, #0
90021e32:	f340 8373 	ble.w	9002251c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90021e36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021e38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021e3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021e40:	1e48      	subs	r0, r1, #1
90021e42:	1e57      	subs	r7, r2, #1
90021e44:	9b07      	ldr	r3, [sp, #28]
90021e46:	2b00      	cmp	r3, #0
90021e48:	f340 818f 	ble.w	9002216a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90021e4c:	9c25      	ldr	r4, [sp, #148]	; 0x94
90021e4e:	142b      	asrs	r3, r5, #16
90021e50:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021e54:	d406      	bmi.n	90021e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e56:	4584      	cmp	ip, r0
90021e58:	da04      	bge.n	90021e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e5a:	2b00      	cmp	r3, #0
90021e5c:	db02      	blt.n	90021e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e5e:	42bb      	cmp	r3, r7
90021e60:	f2c0 8184 	blt.w	9002216c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90021e64:	f11c 0c01 	adds.w	ip, ip, #1
90021e68:	f100 8172 	bmi.w	90022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021e6c:	4561      	cmp	r1, ip
90021e6e:	f2c0 816f 	blt.w	90022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021e72:	3301      	adds	r3, #1
90021e74:	f100 816c 	bmi.w	90022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021e78:	429a      	cmp	r2, r3
90021e7a:	f2c0 8169 	blt.w	90022150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021e7e:	9b07      	ldr	r3, [sp, #28]
90021e80:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90021e82:	9317      	str	r3, [sp, #92]	; 0x5c
90021e84:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90021e86:	2b00      	cmp	r3, #0
90021e88:	f340 818e 	ble.w	900221a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90021e8c:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021e8e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021e92:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021e96:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021e9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021e9c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90021ea0:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021ea2:	141b      	asrs	r3, r3, #16
90021ea4:	f100 81d1 	bmi.w	9002224a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021ea8:	f101 38ff 	add.w	r8, r1, #4294967295
90021eac:	4543      	cmp	r3, r8
90021eae:	f280 81cc 	bge.w	9002224a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021eb2:	f1bc 0f00 	cmp.w	ip, #0
90021eb6:	f2c0 81c8 	blt.w	9002224a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021eba:	f10e 38ff 	add.w	r8, lr, #4294967295
90021ebe:	45c4      	cmp	ip, r8
90021ec0:	f280 81c3 	bge.w	9002224a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021ec4:	b209      	sxth	r1, r1
90021ec6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021ec8:	fb0c 3301 	mla	r3, ip, r1, r3
90021ecc:	eb04 0803 	add.w	r8, r4, r3
90021ed0:	5ce3      	ldrb	r3, [r4, r3]
90021ed2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021ed6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90021eda:	2a00      	cmp	r2, #0
90021edc:	f000 81aa 	beq.w	90022234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90021ee0:	f898 c001 	ldrb.w	ip, [r8, #1]
90021ee4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021ee8:	940b      	str	r4, [sp, #44]	; 0x2c
90021eea:	0e24      	lsrs	r4, r4, #24
90021eec:	9412      	str	r4, [sp, #72]	; 0x48
90021eee:	b178      	cbz	r0, 90021f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90021ef0:	eb08 0c01 	add.w	ip, r8, r1
90021ef4:	f818 1001 	ldrb.w	r1, [r8, r1]
90021ef8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021efc:	9108      	str	r1, [sp, #32]
90021efe:	0e09      	lsrs	r1, r1, #24
90021f00:	9110      	str	r1, [sp, #64]	; 0x40
90021f02:	f89c 1001 	ldrb.w	r1, [ip, #1]
90021f06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021f0a:	910c      	str	r1, [sp, #48]	; 0x30
90021f0c:	0e09      	lsrs	r1, r1, #24
90021f0e:	9113      	str	r1, [sp, #76]	; 0x4c
90021f10:	b292      	uxth	r2, r2
90021f12:	9912      	ldr	r1, [sp, #72]	; 0x48
90021f14:	b280      	uxth	r0, r0
90021f16:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021f18:	fb02 f900 	mul.w	r9, r2, r0
90021f1c:	0112      	lsls	r2, r2, #4
90021f1e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90021f22:	eba2 0809 	sub.w	r8, r2, r9
90021f26:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90021f2a:	b280      	uxth	r0, r0
90021f2c:	fa1f f888 	uxth.w	r8, r8
90021f30:	1a12      	subs	r2, r2, r0
90021f32:	fb08 f101 	mul.w	r1, r8, r1
90021f36:	b292      	uxth	r2, r2
90021f38:	fb02 110e 	mla	r1, r2, lr, r1
90021f3c:	fb00 1104 	mla	r1, r0, r4, r1
90021f40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021f42:	fb09 1104 	mla	r1, r9, r4, r1
90021f46:	f3c1 2107 	ubfx	r1, r1, #8, #8
90021f4a:	2900      	cmp	r1, #0
90021f4c:	f000 80f5 	beq.w	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021f50:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90021f54:	d01b      	beq.n	90021f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021f56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90021f5a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021f5e:	fb0e fa0a 	mul.w	sl, lr, sl
90021f62:	fb0e fe03 	mul.w	lr, lr, r3
90021f66:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021f6a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90021f6e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90021f72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021f76:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021f7a:	4453      	add	r3, sl
90021f7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f80:	0a1b      	lsrs	r3, r3, #8
90021f82:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021f86:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021f8a:	ea43 030c 	orr.w	r3, r3, ip
90021f8e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021f90:	2cff      	cmp	r4, #255	; 0xff
90021f92:	d021      	beq.n	90021fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90021f94:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021f96:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021f9a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021f9c:	fb04 fb0b 	mul.w	fp, r4, fp
90021fa0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021fa2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021fa6:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021fa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021fac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021fb0:	fb04 fa0a 	mul.w	sl, r4, sl
90021fb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021fb8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021fbc:	44de      	add	lr, fp
90021fbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021fc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021fc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021fca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021fce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021fd2:	ea4e 040a 	orr.w	r4, lr, sl
90021fd6:	940b      	str	r4, [sp, #44]	; 0x2c
90021fd8:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021fda:	2cff      	cmp	r4, #255	; 0xff
90021fdc:	d021      	beq.n	90022022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021fde:	9c08      	ldr	r4, [sp, #32]
90021fe0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021fe4:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021fe6:	fb04 fb0b 	mul.w	fp, r4, fp
90021fea:	9c08      	ldr	r4, [sp, #32]
90021fec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021ff0:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021ff2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021ff6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021ffa:	fb04 fa0a 	mul.w	sl, r4, sl
90021ffe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022002:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90022006:	44de      	add	lr, fp
90022008:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002200c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022014:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022018:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002201c:	ea4e 040a 	orr.w	r4, lr, sl
90022020:	9408      	str	r4, [sp, #32]
90022022:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90022024:	2cff      	cmp	r4, #255	; 0xff
90022026:	d021      	beq.n	9002206c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90022028:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002202a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002202e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90022030:	fb04 fb0b 	mul.w	fp, r4, fp
90022034:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90022036:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002203a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002203c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022040:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90022044:	fb04 fa0a 	mul.w	sl, r4, sl
90022048:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002204c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90022050:	44de      	add	lr, fp
90022052:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022056:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002205a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002205e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022062:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022066:	ea4e 040a 	orr.w	r4, lr, sl
9002206a:	940c      	str	r4, [sp, #48]	; 0x30
9002206c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002206e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90022072:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022076:	43c9      	mvns	r1, r1
90022078:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002207c:	9c08      	ldr	r4, [sp, #32]
9002207e:	fb08 fc0c 	mul.w	ip, r8, ip
90022082:	fb02 cc0e 	mla	ip, r2, lr, ip
90022086:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002208a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002208c:	fb00 cc0e 	mla	ip, r0, lr, ip
90022090:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90022094:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022096:	fb09 cc0e 	mla	ip, r9, lr, ip
9002209a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9002209e:	fb08 f80e 	mul.w	r8, r8, lr
900220a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900220a6:	fa5f fe81 	uxtb.w	lr, r1
900220aa:	fb02 8303 	mla	r3, r2, r3, r8
900220ae:	9a08      	ldr	r2, [sp, #32]
900220b0:	f8b7 8000 	ldrh.w	r8, [r7]
900220b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900220b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900220bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900220be:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900220c2:	fb00 330a 	mla	r3, r0, sl, r3
900220c6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
900220ca:	ea4f 2228 	mov.w	r2, r8, asr #8
900220ce:	fb09 3900 	mla	r9, r9, r0, r3
900220d2:	ea4f 00e8 	mov.w	r0, r8, asr #3
900220d6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900220da:	b2c9      	uxtb	r1, r1
900220dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900220e0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900220e4:	fb02 f20e 	mul.w	r2, r2, lr
900220e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900220ec:	fb00 f00e 	mul.w	r0, r0, lr
900220f0:	1c53      	adds	r3, r2, #1
900220f2:	fb01 f10e 	mul.w	r1, r1, lr
900220f6:	ea4c 0c09 	orr.w	ip, ip, r9
900220fa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
900220fe:	ea4f 431c 	mov.w	r3, ip, lsr #16
90022102:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022106:	4a60      	ldr	r2, [pc, #384]	; (90022288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90022108:	b2db      	uxtb	r3, r3
9002210a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002210e:	1c43      	adds	r3, r0, #1
90022110:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022114:	ea4f 231c 	mov.w	r3, ip, lsr #8
90022118:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002211c:	00db      	lsls	r3, r3, #3
9002211e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022122:	4313      	orrs	r3, r2
90022124:	1c4a      	adds	r2, r1, #1
90022126:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002212a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002212e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90022132:	ea4c 0c03 	orr.w	ip, ip, r3
90022136:	f8a7 c000 	strh.w	ip, [r7]
9002213a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002213c:	3702      	adds	r7, #2
9002213e:	9a25      	ldr	r2, [sp, #148]	; 0x94
90022140:	441a      	add	r2, r3
90022142:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022144:	441d      	add	r5, r3
90022146:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90022148:	9225      	str	r2, [sp, #148]	; 0x94
9002214a:	3b01      	subs	r3, #1
9002214c:	9317      	str	r3, [sp, #92]	; 0x5c
9002214e:	e699      	b.n	90021e84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022150:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022152:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022154:	441c      	add	r4, r3
90022156:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022158:	441d      	add	r5, r3
9002215a:	9b07      	ldr	r3, [sp, #28]
9002215c:	9425      	str	r4, [sp, #148]	; 0x94
9002215e:	3b01      	subs	r3, #1
90022160:	9307      	str	r3, [sp, #28]
90022162:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022164:	3302      	adds	r3, #2
90022166:	930a      	str	r3, [sp, #40]	; 0x28
90022168:	e66c      	b.n	90021e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9002216a:	d024      	beq.n	900221b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
9002216c:	9b07      	ldr	r3, [sp, #28]
9002216e:	9827      	ldr	r0, [sp, #156]	; 0x9c
90022170:	3b01      	subs	r3, #1
90022172:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022174:	fb00 4003 	mla	r0, r0, r3, r4
90022178:	1400      	asrs	r0, r0, #16
9002217a:	f53f ae80 	bmi.w	90021e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002217e:	3901      	subs	r1, #1
90022180:	4288      	cmp	r0, r1
90022182:	f6bf ae7c 	bge.w	90021e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022186:	9928      	ldr	r1, [sp, #160]	; 0xa0
90022188:	fb01 5303 	mla	r3, r1, r3, r5
9002218c:	141b      	asrs	r3, r3, #16
9002218e:	f53f ae76 	bmi.w	90021e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022192:	3a01      	subs	r2, #1
90022194:	4293      	cmp	r3, r2
90022196:	f6bf ae72 	bge.w	90021e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002219a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002219e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900221a2:	f1bb 0f00 	cmp.w	fp, #0
900221a6:	dc71      	bgt.n	9002228c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900221a8:	9b07      	ldr	r3, [sp, #28]
900221aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900221ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900221b0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900221b4:	930a      	str	r3, [sp, #40]	; 0x28
900221b6:	9b16      	ldr	r3, [sp, #88]	; 0x58
900221b8:	2b00      	cmp	r3, #0
900221ba:	f340 81af 	ble.w	9002251c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900221be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900221c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900221c4:	ee30 0a04 	vadd.f32	s0, s0, s8
900221c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900221cc:	eef0 6a62 	vmov.f32	s13, s5
900221d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900221d4:	ee31 1a05 	vadd.f32	s2, s2, s10
900221d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900221dc:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
900221e0:	eef0 6a43 	vmov.f32	s13, s6
900221e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900221e8:	ee16 5a90 	vmov	r5, s13
900221ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
900221f0:	ee61 7a27 	vmul.f32	s15, s2, s15
900221f4:	ee77 2a62 	vsub.f32	s5, s14, s5
900221f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900221fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022200:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022204:	ee12 2a90 	vmov	r2, s5
90022208:	eef0 2a47 	vmov.f32	s5, s14
9002220c:	fb92 f3f3 	sdiv	r3, r2, r3
90022210:	ee13 2a10 	vmov	r2, s6
90022214:	9327      	str	r3, [sp, #156]	; 0x9c
90022216:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022218:	eeb0 3a67 	vmov.f32	s6, s15
9002221c:	fb92 f3f3 	sdiv	r3, r2, r3
90022220:	9328      	str	r3, [sp, #160]	; 0xa0
90022222:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022224:	9a18      	ldr	r2, [sp, #96]	; 0x60
90022226:	3b01      	subs	r3, #1
90022228:	9316      	str	r3, [sp, #88]	; 0x58
9002222a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002222c:	bf08      	it	eq
9002222e:	4613      	moveq	r3, r2
90022230:	9307      	str	r3, [sp, #28]
90022232:	e5f9      	b.n	90021e28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90022234:	2800      	cmp	r0, #0
90022236:	f43f ae6b 	beq.w	90021f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002223a:	f818 1001 	ldrb.w	r1, [r8, r1]
9002223e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022242:	9108      	str	r1, [sp, #32]
90022244:	0e09      	lsrs	r1, r1, #24
90022246:	9110      	str	r1, [sp, #64]	; 0x40
90022248:	e662      	b.n	90021f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002224a:	f113 0801 	adds.w	r8, r3, #1
9002224e:	f53f af74 	bmi.w	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022252:	4541      	cmp	r1, r8
90022254:	f6ff af71 	blt.w	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022258:	f11c 0801 	adds.w	r8, ip, #1
9002225c:	f53f af6d 	bmi.w	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022260:	45c6      	cmp	lr, r8
90022262:	f6ff af6a 	blt.w	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022266:	b209      	sxth	r1, r1
90022268:	e9cd 3c02 	strd	r3, ip, [sp, #8]
9002226c:	fa0f f38e 	sxth.w	r3, lr
90022270:	9100      	str	r1, [sp, #0]
90022272:	4639      	mov	r1, r7
90022274:	9301      	str	r3, [sp, #4]
90022276:	4633      	mov	r3, r6
90022278:	e9cd 2004 	strd	r2, r0, [sp, #16]
9002227c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002227e:	9819      	ldr	r0, [sp, #100]	; 0x64
90022280:	f7ff fc7b 	bl	90021b7a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90022284:	e759      	b.n	9002213a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90022286:	bf00      	nop
90022288:	fffff800 	.word	0xfffff800
9002228c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002228e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022292:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022294:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022298:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002229a:	1427      	asrs	r7, r4, #16
9002229c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002229e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900222a2:	142b      	asrs	r3, r5, #16
900222a4:	fb01 7303 	mla	r3, r1, r3, r7
900222a8:	18e7      	adds	r7, r4, r3
900222aa:	5ce3      	ldrb	r3, [r4, r3]
900222ac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900222b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900222b4:	2a00      	cmp	r2, #0
900222b6:	f000 8127 	beq.w	90022508 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
900222ba:	f897 e001 	ldrb.w	lr, [r7, #1]
900222be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900222c2:	940d      	str	r4, [sp, #52]	; 0x34
900222c4:	0e24      	lsrs	r4, r4, #24
900222c6:	9414      	str	r4, [sp, #80]	; 0x50
900222c8:	b170      	cbz	r0, 900222e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900222ca:	eb07 0e01 	add.w	lr, r7, r1
900222ce:	5c79      	ldrb	r1, [r7, r1]
900222d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900222d4:	9109      	str	r1, [sp, #36]	; 0x24
900222d6:	0e09      	lsrs	r1, r1, #24
900222d8:	9111      	str	r1, [sp, #68]	; 0x44
900222da:	f89e 1001 	ldrb.w	r1, [lr, #1]
900222de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900222e2:	910e      	str	r1, [sp, #56]	; 0x38
900222e4:	0e09      	lsrs	r1, r1, #24
900222e6:	9115      	str	r1, [sp, #84]	; 0x54
900222e8:	b292      	uxth	r2, r2
900222ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
900222ec:	b280      	uxth	r0, r0
900222ee:	fb02 f800 	mul.w	r8, r2, r0
900222f2:	0112      	lsls	r2, r2, #4
900222f4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900222f8:	eba2 0e08 	sub.w	lr, r2, r8
900222fc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90022300:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022302:	b280      	uxth	r0, r0
90022304:	fa1f fe8e 	uxth.w	lr, lr
90022308:	1a09      	subs	r1, r1, r0
9002230a:	fb0e f202 	mul.w	r2, lr, r2
9002230e:	b289      	uxth	r1, r1
90022310:	fb01 220c 	mla	r2, r1, ip, r2
90022314:	fb00 2204 	mla	r2, r0, r4, r2
90022318:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002231a:	fb08 2204 	mla	r2, r8, r4, r2
9002231e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90022322:	2a00      	cmp	r2, #0
90022324:	f000 80e5 	beq.w	900224f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022328:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002232c:	d019      	beq.n	90022362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002232e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90022332:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022336:	fb0c fa0a 	mul.w	sl, ip, sl
9002233a:	fb0c fc03 	mul.w	ip, ip, r3
9002233e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022342:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90022346:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002234a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002234e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022352:	4453      	add	r3, sl
90022354:	0a3f      	lsrs	r7, r7, #8
90022356:	0a1b      	lsrs	r3, r3, #8
90022358:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002235c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90022360:	433b      	orrs	r3, r7
90022362:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022364:	2cff      	cmp	r4, #255	; 0xff
90022366:	d020      	beq.n	900223aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90022368:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002236a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002236e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90022370:	4367      	muls	r7, r4
90022372:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022374:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022378:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002237c:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002237e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022386:	fb04 fa0a 	mul.w	sl, r4, sl
9002238a:	44bc      	add	ip, r7
9002238c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022394:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022398:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002239c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900223a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900223a4:	ea4c 040a 	orr.w	r4, ip, sl
900223a8:	940d      	str	r4, [sp, #52]	; 0x34
900223aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
900223ac:	2cff      	cmp	r4, #255	; 0xff
900223ae:	d020      	beq.n	900223f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900223b0:	9c09      	ldr	r4, [sp, #36]	; 0x24
900223b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900223b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
900223b8:	4367      	muls	r7, r4
900223ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
900223bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900223c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900223c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900223c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900223ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900223ce:	fb04 fa0a 	mul.w	sl, r4, sl
900223d2:	44bc      	add	ip, r7
900223d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900223d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900223dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900223e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900223e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900223e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900223ec:	ea4c 040a 	orr.w	r4, ip, sl
900223f0:	9409      	str	r4, [sp, #36]	; 0x24
900223f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
900223f4:	2cff      	cmp	r4, #255	; 0xff
900223f6:	d020      	beq.n	9002243a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900223f8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900223fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900223fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022400:	4367      	muls	r7, r4
90022402:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022404:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022408:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002240c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002240e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022412:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022416:	fb04 fa0a 	mul.w	sl, r4, sl
9002241a:	44bc      	add	ip, r7
9002241c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022420:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022424:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022428:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002242c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022430:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022434:	ea4c 040a 	orr.w	r4, ip, sl
90022438:	940e      	str	r4, [sp, #56]	; 0x38
9002243a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002243c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90022440:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90022444:	43d2      	mvns	r2, r2
90022446:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002244a:	9c09      	ldr	r4, [sp, #36]	; 0x24
9002244c:	b2d2      	uxtb	r2, r2
9002244e:	fb0e f707 	mul.w	r7, lr, r7
90022452:	fb01 770c 	mla	r7, r1, ip, r7
90022456:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002245a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002245c:	fb00 770c 	mla	r7, r0, ip, r7
90022460:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022464:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022466:	fb08 770c 	mla	r7, r8, ip, r7
9002246a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
9002246e:	fb0e fe0c 	mul.w	lr, lr, ip
90022472:	0a3f      	lsrs	r7, r7, #8
90022474:	fb01 e303 	mla	r3, r1, r3, lr
90022478:	9909      	ldr	r1, [sp, #36]	; 0x24
9002247a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002247e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90022482:	990e      	ldr	r1, [sp, #56]	; 0x38
90022484:	fb00 330a 	mla	r3, r0, sl, r3
90022488:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
9002248c:	fb08 3c0c 	mla	ip, r8, ip, r3
90022490:	f8b9 3000 	ldrh.w	r3, [r9]
90022494:	1218      	asrs	r0, r3, #8
90022496:	10d9      	asrs	r1, r3, #3
90022498:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002249c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900224a0:	00db      	lsls	r3, r3, #3
900224a2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900224a6:	4350      	muls	r0, r2
900224a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900224ac:	b2db      	uxtb	r3, r3
900224ae:	4351      	muls	r1, r2
900224b0:	ea47 070c 	orr.w	r7, r7, ip
900224b4:	4353      	muls	r3, r2
900224b6:	1c42      	adds	r2, r0, #1
900224b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900224bc:	0c3a      	lsrs	r2, r7, #16
900224be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900224c2:	4a18      	ldr	r2, [pc, #96]	; (90022524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900224c4:	b2c0      	uxtb	r0, r0
900224c6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900224ca:	1c4a      	adds	r2, r1, #1
900224cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900224d0:	0a3a      	lsrs	r2, r7, #8
900224d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900224d6:	00c9      	lsls	r1, r1, #3
900224d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900224dc:	4301      	orrs	r1, r0
900224de:	1c58      	adds	r0, r3, #1
900224e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900224e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900224e8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900224ec:	4308      	orrs	r0, r1
900224ee:	f8a9 0000 	strh.w	r0, [r9]
900224f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900224f4:	f109 0902 	add.w	r9, r9, #2
900224f8:	9a25      	ldr	r2, [sp, #148]	; 0x94
900224fa:	f10b 3bff 	add.w	fp, fp, #4294967295
900224fe:	441a      	add	r2, r3
90022500:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022502:	9225      	str	r2, [sp, #148]	; 0x94
90022504:	441d      	add	r5, r3
90022506:	e64c      	b.n	900221a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022508:	2800      	cmp	r0, #0
9002250a:	f43f aeed 	beq.w	900222e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002250e:	5c79      	ldrb	r1, [r7, r1]
90022510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022514:	9109      	str	r1, [sp, #36]	; 0x24
90022516:	0e09      	lsrs	r1, r1, #24
90022518:	9111      	str	r1, [sp, #68]	; 0x44
9002251a:	e6e5      	b.n	900222e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002251c:	b01b      	add	sp, #108	; 0x6c
9002251e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022522:	bf00      	nop
90022524:	fffff800 	.word	0xfffff800

90022528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002252c:	b085      	sub	sp, #20
9002252e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90022532:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90022536:	2800      	cmp	r0, #0
90022538:	9103      	str	r1, [sp, #12]
9002253a:	fb00 7406 	mla	r4, r0, r6, r7
9002253e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90022542:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90022546:	eb02 0544 	add.w	r5, r2, r4, lsl #1
9002254a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
9002254e:	eb03 0904 	add.w	r9, r3, r4
90022552:	9501      	str	r5, [sp, #4]
90022554:	f2c0 8150 	blt.w	900227f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90022558:	4583      	cmp	fp, r0
9002255a:	f340 814d 	ble.w	900227f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002255e:	2f00      	cmp	r7, #0
90022560:	f2c0 8146 	blt.w	900227f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90022564:	42be      	cmp	r6, r7
90022566:	f340 8143 	ble.w	900227f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002256a:	f813 c004 	ldrb.w	ip, [r3, r4]
9002256e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90022572:	f64f 041f 	movw	r4, #63519	; 0xf81f
90022576:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002257a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
9002257e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022582:	4355      	muls	r5, r2
90022584:	fb0c f203 	mul.w	r2, ip, r3
90022588:	ea04 1355 	and.w	r3, r4, r5, lsr #5
9002258c:	f605 0501 	addw	r5, r5, #2049	; 0x801
90022590:	441d      	add	r5, r3
90022592:	f102 0320 	add.w	r3, r2, #32
90022596:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002259a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002259e:	0a1b      	lsrs	r3, r3, #8
900225a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900225a4:	431c      	orrs	r4, r3
900225a6:	1c7b      	adds	r3, r7, #1
900225a8:	f100 812b 	bmi.w	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900225ac:	429e      	cmp	r6, r3
900225ae:	f340 8128 	ble.w	90022802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900225b2:	2900      	cmp	r1, #0
900225b4:	f000 8128 	beq.w	90022808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900225b8:	9a01      	ldr	r2, [sp, #4]
900225ba:	f899 3001 	ldrb.w	r3, [r9, #1]
900225be:	8855      	ldrh	r5, [r2, #2]
900225c0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900225c4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
900225c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900225cc:	fb08 f802 	mul.w	r8, r8, r2
900225d0:	f64f 021f 	movw	r2, #63519	; 0xf81f
900225d4:	435d      	muls	r5, r3
900225d6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900225da:	f608 0801 	addw	r8, r8, #2049	; 0x801
900225de:	44d0      	add	r8, sl
900225e0:	f105 0a20 	add.w	sl, r5, #32
900225e4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900225e8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900225ec:	0a2d      	lsrs	r5, r5, #8
900225ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900225f2:	432a      	orrs	r2, r5
900225f4:	3001      	adds	r0, #1
900225f6:	f100 810d 	bmi.w	90022814 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900225fa:	4583      	cmp	fp, r0
900225fc:	f340 810a 	ble.w	90022814 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022600:	f1be 0f00 	cmp.w	lr, #0
90022604:	f000 810b 	beq.w	9002281e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022608:	2f00      	cmp	r7, #0
9002260a:	f2c0 8100 	blt.w	9002280e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002260e:	42be      	cmp	r6, r7
90022610:	f340 80fd 	ble.w	9002280e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022614:	9801      	ldr	r0, [sp, #4]
90022616:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002261a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002261e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022622:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022626:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002262a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9002262e:	fb0a fa00 	mul.w	sl, sl, r0
90022632:	fb05 f808 	mul.w	r8, r5, r8
90022636:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002263a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
9002263e:	4482      	add	sl, r0
90022640:	f108 0020 	add.w	r0, r8, #32
90022644:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022648:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002264c:	0a00      	lsrs	r0, r0, #8
9002264e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022652:	ea4b 0b00 	orr.w	fp, fp, r0
90022656:	3701      	adds	r7, #1
90022658:	f100 80e6 	bmi.w	90022828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002265c:	42be      	cmp	r6, r7
9002265e:	f340 80e3 	ble.w	90022828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022662:	2900      	cmp	r1, #0
90022664:	f000 80e3 	beq.w	9002282e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90022668:	3601      	adds	r6, #1
9002266a:	9801      	ldr	r0, [sp, #4]
9002266c:	f819 7006 	ldrb.w	r7, [r9, r6]
90022670:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022674:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022678:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
9002267c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022680:	fb09 f906 	mul.w	r9, r9, r6
90022684:	fb07 f800 	mul.w	r8, r7, r0
90022688:	f64f 001f 	movw	r0, #63519	; 0xf81f
9002268c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022690:	f609 0901 	addw	r9, r9, #2049	; 0x801
90022694:	44d1      	add	r9, sl
90022696:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002269a:	f108 0020 	add.w	r0, r8, #32
9002269e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900226a2:	0a00      	lsrs	r0, r0, #8
900226a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900226a8:	4330      	orrs	r0, r6
900226aa:	b28e      	uxth	r6, r1
900226ac:	fa1f f98e 	uxth.w	r9, lr
900226b0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900226b4:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900226b8:	fb06 f809 	mul.w	r8, r6, r9
900226bc:	0136      	lsls	r6, r6, #4
900226be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900226c2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900226c6:	9601      	str	r6, [sp, #4]
900226c8:	ea4a 0404 	orr.w	r4, sl, r4
900226cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900226d0:	fa1f f689 	uxth.w	r6, r9
900226d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900226d8:	fb11 f90e 	smulbb	r9, r1, lr
900226dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900226e0:	9602      	str	r6, [sp, #8]
900226e2:	4626      	mov	r6, r4
900226e4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900226e8:	f1ce 0410 	rsb	r4, lr, #16
900226ec:	ea4a 0202 	orr.w	r2, sl, r2
900226f0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900226f4:	1a64      	subs	r4, r4, r1
900226f6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900226fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900226fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022702:	434a      	muls	r2, r1
90022704:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022708:	ea4a 0000 	orr.w	r0, sl, r0
9002270c:	9903      	ldr	r1, [sp, #12]
9002270e:	fb04 2406 	mla	r4, r4, r6, r2
90022712:	9e02      	ldr	r6, [sp, #8]
90022714:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022718:	fb09 4200 	mla	r2, r9, r0, r4
9002271c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022720:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022724:	8808      	ldrh	r0, [r1, #0]
90022726:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002272a:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
9002272e:	ea44 0b0b 	orr.w	fp, r4, fp
90022732:	9c01      	ldr	r4, [sp, #4]
90022734:	b289      	uxth	r1, r1
90022736:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
9002273a:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002273e:	1ba4      	subs	r4, r4, r6
90022740:	9e01      	ldr	r6, [sp, #4]
90022742:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022746:	eba6 0608 	sub.w	r6, r6, r8
9002274a:	b2a4      	uxth	r4, r4
9002274c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022750:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022754:	b2b6      	uxth	r6, r6
90022756:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002275a:	4373      	muls	r3, r6
9002275c:	ea42 0e0e 	orr.w	lr, r2, lr
90022760:	fb0c 3304 	mla	r3, ip, r4, r3
90022764:	9c02      	ldr	r4, [sp, #8]
90022766:	fa1f f28e 	uxth.w	r2, lr
9002276a:	fb04 3505 	mla	r5, r4, r5, r3
9002276e:	10d4      	asrs	r4, r2, #3
90022770:	fb08 5707 	mla	r7, r8, r7, r5
90022774:	1215      	asrs	r5, r2, #8
90022776:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002277a:	00d2      	lsls	r2, r2, #3
9002277c:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022780:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022784:	b2d2      	uxtb	r2, r2
90022786:	434f      	muls	r7, r1
90022788:	1c7b      	adds	r3, r7, #1
9002278a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002278e:	1203      	asrs	r3, r0, #8
90022790:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90022794:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90022798:	b2ff      	uxtb	r7, r7
9002279a:	fb13 f307 	smulbb	r3, r3, r7
9002279e:	fb05 3501 	mla	r5, r5, r1, r3
900227a2:	10c3      	asrs	r3, r0, #3
900227a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900227a8:	b2ad      	uxth	r5, r5
900227aa:	fb13 f307 	smulbb	r3, r3, r7
900227ae:	fb04 3401 	mla	r4, r4, r1, r3
900227b2:	00c3      	lsls	r3, r0, #3
900227b4:	b2db      	uxtb	r3, r3
900227b6:	b2a4      	uxth	r4, r4
900227b8:	fb13 f307 	smulbb	r3, r3, r7
900227bc:	fb02 3101 	mla	r1, r2, r1, r3
900227c0:	1c6b      	adds	r3, r5, #1
900227c2:	1c62      	adds	r2, r4, #1
900227c4:	b289      	uxth	r1, r1
900227c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900227ca:	1c4b      	adds	r3, r1, #1
900227cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900227d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900227d4:	9a03      	ldr	r2, [sp, #12]
900227d6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900227da:	0964      	lsrs	r4, r4, #5
900227dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900227e0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900227e4:	432b      	orrs	r3, r5
900227e6:	4323      	orrs	r3, r4
900227e8:	8013      	strh	r3, [r2, #0]
900227ea:	b005      	add	sp, #20
900227ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900227f0:	f04f 0c00 	mov.w	ip, #0
900227f4:	4664      	mov	r4, ip
900227f6:	e6d6      	b.n	900225a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900227f8:	2300      	movs	r3, #0
900227fa:	469c      	mov	ip, r3
900227fc:	461a      	mov	r2, r3
900227fe:	461c      	mov	r4, r3
90022800:	e6f8      	b.n	900225f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022802:	2300      	movs	r3, #0
90022804:	461a      	mov	r2, r3
90022806:	e6f5      	b.n	900225f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022808:	460b      	mov	r3, r1
9002280a:	460a      	mov	r2, r1
9002280c:	e6f2      	b.n	900225f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002280e:	2500      	movs	r5, #0
90022810:	46ab      	mov	fp, r5
90022812:	e720      	b.n	90022656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90022814:	2700      	movs	r7, #0
90022816:	463d      	mov	r5, r7
90022818:	4638      	mov	r0, r7
9002281a:	46bb      	mov	fp, r7
9002281c:	e745      	b.n	900226aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002281e:	4677      	mov	r7, lr
90022820:	4675      	mov	r5, lr
90022822:	4670      	mov	r0, lr
90022824:	46f3      	mov	fp, lr
90022826:	e740      	b.n	900226aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022828:	2700      	movs	r7, #0
9002282a:	4638      	mov	r0, r7
9002282c:	e73d      	b.n	900226aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002282e:	460f      	mov	r7, r1
90022830:	4608      	mov	r0, r1
90022832:	e73a      	b.n	900226aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90022834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022838:	b097      	sub	sp, #92	; 0x5c
9002283a:	9214      	str	r2, [sp, #80]	; 0x50
9002283c:	9308      	str	r3, [sp, #32]
9002283e:	9a25      	ldr	r2, [sp, #148]	; 0x94
90022840:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90022844:	9015      	str	r0, [sp, #84]	; 0x54
90022846:	9312      	str	r3, [sp, #72]	; 0x48
90022848:	6850      	ldr	r0, [r2, #4]
9002284a:	9111      	str	r1, [sp, #68]	; 0x44
9002284c:	6812      	ldr	r2, [r2, #0]
9002284e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90022852:	fb00 1303 	mla	r3, r0, r3, r1
90022856:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002285a:	9309      	str	r3, [sp, #36]	; 0x24
9002285c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002285e:	681b      	ldr	r3, [r3, #0]
90022860:	930b      	str	r3, [sp, #44]	; 0x2c
90022862:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022864:	685b      	ldr	r3, [r3, #4]
90022866:	930c      	str	r3, [sp, #48]	; 0x30
90022868:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
9002286c:	930a      	str	r3, [sp, #40]	; 0x28
9002286e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022870:	2b00      	cmp	r3, #0
90022872:	dc03      	bgt.n	9002287c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022874:	9b14      	ldr	r3, [sp, #80]	; 0x50
90022876:	2b00      	cmp	r3, #0
90022878:	f340 83cd 	ble.w	90023016 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002287c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002287e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022882:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022886:	1e48      	subs	r0, r1, #1
90022888:	1e55      	subs	r5, r2, #1
9002288a:	9b08      	ldr	r3, [sp, #32]
9002288c:	2b00      	cmp	r3, #0
9002288e:	f340 81a5 	ble.w	90022bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90022892:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022894:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022896:	1436      	asrs	r6, r6, #16
90022898:	ea4f 4323 	mov.w	r3, r3, asr #16
9002289c:	d406      	bmi.n	900228ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002289e:	4286      	cmp	r6, r0
900228a0:	da04      	bge.n	900228ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900228a2:	2b00      	cmp	r3, #0
900228a4:	db02      	blt.n	900228ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900228a6:	42ab      	cmp	r3, r5
900228a8:	f2c0 8199 	blt.w	90022bde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900228ac:	3601      	adds	r6, #1
900228ae:	f100 8186 	bmi.w	90022bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900228b2:	42b1      	cmp	r1, r6
900228b4:	f2c0 8183 	blt.w	90022bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900228b8:	3301      	adds	r3, #1
900228ba:	f100 8180 	bmi.w	90022bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900228be:	429a      	cmp	r2, r3
900228c0:	f2c0 817d 	blt.w	90022bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900228c4:	9b08      	ldr	r3, [sp, #32]
900228c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
900228ca:	9f09      	ldr	r7, [sp, #36]	; 0x24
900228cc:	9313      	str	r3, [sp, #76]	; 0x4c
900228ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900228d0:	2b00      	cmp	r3, #0
900228d2:	f340 81a6 	ble.w	90022c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900228d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
900228d8:	9d21      	ldr	r5, [sp, #132]	; 0x84
900228da:	1418      	asrs	r0, r3, #16
900228dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900228de:	142d      	asrs	r5, r5, #16
900228e0:	f3c3 3103 	ubfx	r1, r3, #12, #4
900228e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
900228e6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900228ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900228ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900228f0:	f100 81fa 	bmi.w	90022ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900228f4:	f102 3eff 	add.w	lr, r2, #4294967295
900228f8:	4575      	cmp	r5, lr
900228fa:	f280 81f5 	bge.w	90022ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900228fe:	2800      	cmp	r0, #0
90022900:	f2c0 81f2 	blt.w	90022ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022904:	f103 3eff 	add.w	lr, r3, #4294967295
90022908:	4570      	cmp	r0, lr
9002290a:	f280 81ed 	bge.w	90022ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002290e:	b212      	sxth	r2, r2
90022910:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022912:	fa1f fe81 	uxth.w	lr, r1
90022916:	fb00 5002 	mla	r0, r0, r2, r5
9002291a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002291e:	eb03 0a00 	add.w	sl, r3, r0
90022922:	f813 9000 	ldrb.w	r9, [r3, r0]
90022926:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002292a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002292e:	b29b      	uxth	r3, r3
90022930:	f1bc 0f00 	cmp.w	ip, #0
90022934:	f000 81bb 	beq.w	90022cae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90022938:	f81a 4002 	ldrb.w	r4, [sl, r2]
9002293c:	eb0a 0b02 	add.w	fp, sl, r2
90022940:	fa1f fa8c 	uxth.w	sl, ip
90022944:	940d      	str	r4, [sp, #52]	; 0x34
90022946:	fb0a fe0e 	mul.w	lr, sl, lr
9002294a:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002294e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022952:	eba5 050e 	sub.w	r5, r5, lr
90022956:	940e      	str	r4, [sp, #56]	; 0x38
90022958:	fa1f fa8a 	uxth.w	sl, sl
9002295c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002295e:	b2ad      	uxth	r5, r5
90022960:	eba3 030a 	sub.w	r3, r3, sl
90022964:	fb08 f505 	mul.w	r5, r8, r5
90022968:	b29b      	uxth	r3, r3
9002296a:	fb09 5303 	mla	r3, r9, r3, r5
9002296e:	fb0a 3304 	mla	r3, sl, r4, r3
90022972:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022974:	fb0e 3304 	mla	r3, lr, r4, r3
90022978:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002297c:	2b00      	cmp	r3, #0
9002297e:	f000 8111 	beq.w	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022982:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022984:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90022988:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002298c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022990:	f000 8192 	beq.w	90022cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022994:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90022998:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002299c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900229a0:	fb0a fe0e 	mul.w	lr, sl, lr
900229a4:	fb09 f000 	mul.w	r0, r9, r0
900229a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900229ac:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900229b0:	f100 0b20 	add.w	fp, r0, #32
900229b4:	44ce      	add	lr, r9
900229b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900229ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900229be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900229c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900229c6:	ea4e 0909 	orr.w	r9, lr, r9
900229ca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900229ce:	8868      	ldrh	r0, [r5, #2]
900229d0:	d019      	beq.n	90022a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900229d2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900229d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900229da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900229de:	fb0a fe0e 	mul.w	lr, sl, lr
900229e2:	fb08 f800 	mul.w	r8, r8, r0
900229e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900229ea:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900229ee:	f108 0b20 	add.w	fp, r8, #32
900229f2:	4486      	add	lr, r0
900229f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900229f8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900229fc:	0a00      	lsrs	r0, r0, #8
900229fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022a02:	ea4e 0000 	orr.w	r0, lr, r0
90022a06:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90022a0a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022a0e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022a12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022a16:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022a1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022a1e:	ea4e 0909 	orr.w	r9, lr, r9
90022a22:	ea4a 0000 	orr.w	r0, sl, r0
90022a26:	f1bc 0f00 	cmp.w	ip, #0
90022a2a:	f000 8147 	beq.w	90022cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90022a2e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90022a32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022a34:	3a01      	subs	r2, #1
90022a36:	2cff      	cmp	r4, #255	; 0xff
90022a38:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022a3c:	f102 0202 	add.w	r2, r2, #2
90022a40:	eb05 0e02 	add.w	lr, r5, r2
90022a44:	5aaa      	ldrh	r2, [r5, r2]
90022a46:	d018      	beq.n	90022a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90022a48:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90022a4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022a50:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022a54:	fb04 fa02 	mul.w	sl, r4, r2
90022a58:	fb08 f805 	mul.w	r8, r8, r5
90022a5c:	f10a 0520 	add.w	r5, sl, #32
90022a60:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022a64:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022a68:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022a6c:	4442      	add	r2, r8
90022a6e:	0a2d      	lsrs	r5, r5, #8
90022a70:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022a74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022a78:	432a      	orrs	r2, r5
90022a7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022a7c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022a80:	2cff      	cmp	r4, #255	; 0xff
90022a82:	d01a      	beq.n	90022aba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90022a84:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90022a88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022a8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022a90:	fb04 fa05 	mul.w	sl, r4, r5
90022a94:	fb08 f80e 	mul.w	r8, r8, lr
90022a98:	f10a 0e20 	add.w	lr, sl, #32
90022a9c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022aa0:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022aa4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022aa8:	4445      	add	r5, r8
90022aaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022aae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022ab2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90022ab6:	ea45 050e 	orr.w	r5, r5, lr
90022aba:	fb1c fe01 	smulbb	lr, ip, r1
90022abe:	f1cc 0810 	rsb	r8, ip, #16
90022ac2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022ac6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022aca:	ea4f 0eee 	mov.w	lr, lr, asr #3
90022ace:	eba8 0801 	sub.w	r8, r8, r1
90022ad2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022ad6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022ada:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90022ade:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90022ae2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022ae6:	ea4a 0202 	orr.w	r2, sl, r2
90022aea:	4341      	muls	r1, r0
90022aec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022af0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022af4:	fb09 1108 	mla	r1, r9, r8, r1
90022af8:	ea4b 0505 	orr.w	r5, fp, r5
90022afc:	fb0c 1102 	mla	r1, ip, r2, r1
90022b00:	fb0e 1e05 	mla	lr, lr, r5, r1
90022b04:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022b08:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022b0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022b10:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022b14:	ea42 0e0e 	orr.w	lr, r2, lr
90022b18:	fa1f f28e 	uxth.w	r2, lr
90022b1c:	2bff      	cmp	r3, #255	; 0xff
90022b1e:	d103      	bne.n	90022b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90022b20:	9912      	ldr	r1, [sp, #72]	; 0x48
90022b22:	29ff      	cmp	r1, #255	; 0xff
90022b24:	f000 80de 	beq.w	90022ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90022b28:	990a      	ldr	r1, [sp, #40]	; 0x28
90022b2a:	1215      	asrs	r5, r2, #8
90022b2c:	8838      	ldrh	r0, [r7, #0]
90022b2e:	434b      	muls	r3, r1
90022b30:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022b34:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022b36:	f103 0c01 	add.w	ip, r3, #1
90022b3a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90022b3e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022b42:	fa5f fc83 	uxtb.w	ip, r3
90022b46:	1203      	asrs	r3, r0, #8
90022b48:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90022b4c:	fb13 f30c 	smulbb	r3, r3, ip
90022b50:	fb05 3501 	mla	r5, r5, r1, r3
90022b54:	10c3      	asrs	r3, r0, #3
90022b56:	10d1      	asrs	r1, r2, #3
90022b58:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90022b5c:	00d2      	lsls	r2, r2, #3
90022b5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022b62:	b2ad      	uxth	r5, r5
90022b64:	fb13 f30c 	smulbb	r3, r3, ip
90022b68:	b2d2      	uxtb	r2, r2
90022b6a:	fb01 3104 	mla	r1, r1, r4, r3
90022b6e:	00c3      	lsls	r3, r0, #3
90022b70:	b2db      	uxtb	r3, r3
90022b72:	b289      	uxth	r1, r1
90022b74:	fb13 f30c 	smulbb	r3, r3, ip
90022b78:	fb02 3304 	mla	r3, r2, r4, r3
90022b7c:	b29a      	uxth	r2, r3
90022b7e:	1c6b      	adds	r3, r5, #1
90022b80:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022b84:	1c53      	adds	r3, r2, #1
90022b86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022b8a:	1c4a      	adds	r2, r1, #1
90022b8c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022b90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022b94:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022b98:	0949      	lsrs	r1, r1, #5
90022b9a:	432b      	orrs	r3, r5
90022b9c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022ba0:	430b      	orrs	r3, r1
90022ba2:	803b      	strh	r3, [r7, #0]
90022ba4:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022ba6:	3702      	adds	r7, #2
90022ba8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90022baa:	4413      	add	r3, r2
90022bac:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022bae:	9321      	str	r3, [sp, #132]	; 0x84
90022bb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022bb2:	441a      	add	r2, r3
90022bb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022bb6:	3b01      	subs	r3, #1
90022bb8:	9222      	str	r2, [sp, #136]	; 0x88
90022bba:	9313      	str	r3, [sp, #76]	; 0x4c
90022bbc:	e687      	b.n	900228ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022bbe:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022bc0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90022bc2:	9c22      	ldr	r4, [sp, #136]	; 0x88
90022bc4:	4433      	add	r3, r6
90022bc6:	9321      	str	r3, [sp, #132]	; 0x84
90022bc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022bca:	441c      	add	r4, r3
90022bcc:	9b08      	ldr	r3, [sp, #32]
90022bce:	3b01      	subs	r3, #1
90022bd0:	9422      	str	r4, [sp, #136]	; 0x88
90022bd2:	9308      	str	r3, [sp, #32]
90022bd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022bd6:	3302      	adds	r3, #2
90022bd8:	9309      	str	r3, [sp, #36]	; 0x24
90022bda:	e656      	b.n	9002288a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90022bdc:	d028      	beq.n	90022c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90022bde:	9b08      	ldr	r3, [sp, #32]
90022be0:	9823      	ldr	r0, [sp, #140]	; 0x8c
90022be2:	3b01      	subs	r3, #1
90022be4:	9d21      	ldr	r5, [sp, #132]	; 0x84
90022be6:	fb00 5003 	mla	r0, r0, r3, r5
90022bea:	1400      	asrs	r0, r0, #16
90022bec:	f53f ae6a 	bmi.w	900228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022bf0:	3901      	subs	r1, #1
90022bf2:	4288      	cmp	r0, r1
90022bf4:	f6bf ae66 	bge.w	900228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022bf8:	9924      	ldr	r1, [sp, #144]	; 0x90
90022bfa:	9822      	ldr	r0, [sp, #136]	; 0x88
90022bfc:	fb01 0303 	mla	r3, r1, r3, r0
90022c00:	141b      	asrs	r3, r3, #16
90022c02:	f53f ae5f 	bmi.w	900228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022c06:	3a01      	subs	r2, #1
90022c08:	4293      	cmp	r3, r2
90022c0a:	f6bf ae5b 	bge.w	900228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022c0e:	9b08      	ldr	r3, [sp, #32]
90022c10:	f64f 061f 	movw	r6, #63519	; 0xf81f
90022c14:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90022c18:	9313      	str	r3, [sp, #76]	; 0x4c
90022c1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022c1c:	2b00      	cmp	r3, #0
90022c1e:	f300 8082 	bgt.w	90022d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90022c22:	9b08      	ldr	r3, [sp, #32]
90022c24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022c2e:	9309      	str	r3, [sp, #36]	; 0x24
90022c30:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022c32:	2b00      	cmp	r3, #0
90022c34:	f340 81ef 	ble.w	90023016 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022c38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022c3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c3e:	ee30 0a04 	vadd.f32	s0, s0, s8
90022c42:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022c46:	eef0 6a62 	vmov.f32	s13, s5
90022c4a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022c4e:	ee31 1a05 	vadd.f32	s2, s2, s10
90022c52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c56:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
90022c5a:	eef0 6a43 	vmov.f32	s13, s6
90022c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c62:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
90022c66:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022c6a:	ee61 7a27 	vmul.f32	s15, s2, s15
90022c6e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022c72:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022c76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022c7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022c7e:	ee12 2a90 	vmov	r2, s5
90022c82:	eef0 2a47 	vmov.f32	s5, s14
90022c86:	fb92 f3f3 	sdiv	r3, r2, r3
90022c8a:	ee13 2a10 	vmov	r2, s6
90022c8e:	9323      	str	r3, [sp, #140]	; 0x8c
90022c90:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c92:	eeb0 3a67 	vmov.f32	s6, s15
90022c96:	fb92 f3f3 	sdiv	r3, r2, r3
90022c9a:	9324      	str	r3, [sp, #144]	; 0x90
90022c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022c9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022ca0:	3b01      	subs	r3, #1
90022ca2:	9311      	str	r3, [sp, #68]	; 0x44
90022ca4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022ca6:	bf08      	it	eq
90022ca8:	4613      	moveq	r3, r2
90022caa:	9308      	str	r3, [sp, #32]
90022cac:	e5df      	b.n	9002286e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90022cae:	fb08 f505 	mul.w	r5, r8, r5
90022cb2:	fb09 5303 	mla	r3, r9, r3, r5
90022cb6:	e65f      	b.n	90022978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90022cb8:	4681      	mov	r9, r0
90022cba:	e686      	b.n	900229ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022cbc:	f1c1 0210 	rsb	r2, r1, #16
90022cc0:	4341      	muls	r1, r0
90022cc2:	fb09 1902 	mla	r9, r9, r2, r1
90022cc6:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022cca:	ea4f 5259 	mov.w	r2, r9, lsr #21
90022cce:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022cd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022cd6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022cda:	ea42 0909 	orr.w	r9, r2, r9
90022cde:	fa1f f289 	uxth.w	r2, r9
90022ce2:	e71b      	b.n	90022b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90022ce4:	803a      	strh	r2, [r7, #0]
90022ce6:	e75d      	b.n	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022ce8:	f115 0e01 	adds.w	lr, r5, #1
90022cec:	f53f af5a 	bmi.w	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022cf0:	4572      	cmp	r2, lr
90022cf2:	f6ff af57 	blt.w	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022cf6:	f110 0e01 	adds.w	lr, r0, #1
90022cfa:	f53f af53 	bmi.w	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022cfe:	4573      	cmp	r3, lr
90022d00:	f6ff af50 	blt.w	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022d04:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022d06:	b21b      	sxth	r3, r3
90022d08:	b212      	sxth	r2, r2
90022d0a:	9502      	str	r5, [sp, #8]
90022d0c:	9301      	str	r3, [sp, #4]
90022d0e:	9200      	str	r2, [sp, #0]
90022d10:	e9cd 0103 	strd	r0, r1, [sp, #12]
90022d14:	e9cd c405 	strd	ip, r4, [sp, #20]
90022d18:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90022d1c:	4639      	mov	r1, r7
90022d1e:	9815      	ldr	r0, [sp, #84]	; 0x54
90022d20:	f7ff fc02 	bl	90022528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90022d24:	e73e      	b.n	90022ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022d26:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022d28:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022d2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d2e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90022d32:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022d34:	fa1f fc82 	uxth.w	ip, r2
90022d38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022d3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d3e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90022d42:	141f      	asrs	r7, r3, #16
90022d44:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022d46:	141b      	asrs	r3, r3, #16
90022d48:	fb01 3707 	mla	r7, r1, r7, r3
90022d4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022d4e:	eb03 0a07 	add.w	sl, r3, r7
90022d52:	f813 9007 	ldrb.w	r9, [r3, r7]
90022d56:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90022d5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022d5e:	b29b      	uxth	r3, r3
90022d60:	2d00      	cmp	r5, #0
90022d62:	f000 813d 	beq.w	90022fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90022d66:	f81a 4001 	ldrb.w	r4, [sl, r1]
90022d6a:	eb0a 0b01 	add.w	fp, sl, r1
90022d6e:	fa1f fa85 	uxth.w	sl, r5
90022d72:	940f      	str	r4, [sp, #60]	; 0x3c
90022d74:	fb0a fc0c 	mul.w	ip, sl, ip
90022d78:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022d7c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90022d80:	eba0 000c 	sub.w	r0, r0, ip
90022d84:	9410      	str	r4, [sp, #64]	; 0x40
90022d86:	fa1f fa8a 	uxth.w	sl, sl
90022d8a:	b280      	uxth	r0, r0
90022d8c:	eba3 030a 	sub.w	r3, r3, sl
90022d90:	fb08 f000 	mul.w	r0, r8, r0
90022d94:	b29b      	uxth	r3, r3
90022d96:	fb09 0303 	mla	r3, r9, r3, r0
90022d9a:	980f      	ldr	r0, [sp, #60]	; 0x3c
90022d9c:	fb0a 3300 	mla	r3, sl, r0, r3
90022da0:	fb0c 3304 	mla	r3, ip, r4, r3
90022da4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022da8:	2b00      	cmp	r3, #0
90022daa:	f000 810b 	beq.w	90022fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90022dae:	980b      	ldr	r0, [sp, #44]	; 0x2c
90022db0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90022db4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022db6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022dba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022dbe:	f000 8114 	beq.w	90022fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90022dc2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90022dc6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022dca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022dce:	fb0a fc0c 	mul.w	ip, sl, ip
90022dd2:	fb09 f707 	mul.w	r7, r9, r7
90022dd6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90022dda:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022dde:	f107 0b20 	add.w	fp, r7, #32
90022de2:	44cc      	add	ip, r9
90022de4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90022de8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022dec:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022df0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90022df4:	ea4c 0909 	orr.w	r9, ip, r9
90022df8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022dfc:	8847      	ldrh	r7, [r0, #2]
90022dfe:	d019      	beq.n	90022e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90022e00:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90022e04:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022e08:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022e0c:	fb0a fc0c 	mul.w	ip, sl, ip
90022e10:	fb08 f807 	mul.w	r8, r8, r7
90022e14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022e18:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022e1c:	f108 0b20 	add.w	fp, r8, #32
90022e20:	44bc      	add	ip, r7
90022e22:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90022e26:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022e2a:	0a3f      	lsrs	r7, r7, #8
90022e2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022e30:	ea4c 0707 	orr.w	r7, ip, r7
90022e34:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022e38:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022e3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022e40:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022e44:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022e48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022e4c:	ea4c 0909 	orr.w	r9, ip, r9
90022e50:	ea4a 0707 	orr.w	r7, sl, r7
90022e54:	2d00      	cmp	r5, #0
90022e56:	f000 80ca 	beq.w	90022fee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90022e5a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022e5e:	3901      	subs	r1, #1
90022e60:	0049      	lsls	r1, r1, #1
90022e62:	3102      	adds	r1, #2
90022e64:	eb00 0c01 	add.w	ip, r0, r1
90022e68:	5a41      	ldrh	r1, [r0, r1]
90022e6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
90022e6c:	28ff      	cmp	r0, #255	; 0xff
90022e6e:	d019      	beq.n	90022ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90022e70:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90022e74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90022e76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022e7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022e7e:	fb04 fa01 	mul.w	sl, r4, r1
90022e82:	fb08 f800 	mul.w	r8, r8, r0
90022e86:	f10a 0020 	add.w	r0, sl, #32
90022e8a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022e8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022e92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90022e96:	4441      	add	r1, r8
90022e98:	0a00      	lsrs	r0, r0, #8
90022e9a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90022e9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022ea2:	4301      	orrs	r1, r0
90022ea4:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022ea6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022eaa:	2cff      	cmp	r4, #255	; 0xff
90022eac:	d01a      	beq.n	90022ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90022eae:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90022eb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022eb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022eba:	fb04 fa00 	mul.w	sl, r4, r0
90022ebe:	fb08 f80c 	mul.w	r8, r8, ip
90022ec2:	f10a 0c20 	add.w	ip, sl, #32
90022ec6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022eca:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022ece:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90022ed2:	4440      	add	r0, r8
90022ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022ed8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90022edc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022ee0:	ea40 000c 	orr.w	r0, r0, ip
90022ee4:	fb15 fc02 	smulbb	ip, r5, r2
90022ee8:	f1c5 0810 	rsb	r8, r5, #16
90022eec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90022ef0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022ef4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90022ef8:	eba8 0802 	sub.w	r8, r8, r2
90022efc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022f00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022f04:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90022f08:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022f0c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022f10:	ea4a 0101 	orr.w	r1, sl, r1
90022f14:	437a      	muls	r2, r7
90022f16:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90022f1a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022f1e:	fb09 2208 	mla	r2, r9, r8, r2
90022f22:	ea4b 0000 	orr.w	r0, fp, r0
90022f26:	fb05 2201 	mla	r2, r5, r1, r2
90022f2a:	fb0c 2200 	mla	r2, ip, r0, r2
90022f2e:	0d57      	lsrs	r7, r2, #21
90022f30:	0952      	lsrs	r2, r2, #5
90022f32:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022f36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022f3a:	433a      	orrs	r2, r7
90022f3c:	2bff      	cmp	r3, #255	; 0xff
90022f3e:	b292      	uxth	r2, r2
90022f40:	d102      	bne.n	90022f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90022f42:	9912      	ldr	r1, [sp, #72]	; 0x48
90022f44:	29ff      	cmp	r1, #255	; 0xff
90022f46:	d063      	beq.n	90023010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90022f48:	980a      	ldr	r0, [sp, #40]	; 0x28
90022f4a:	1215      	asrs	r5, r2, #8
90022f4c:	f8be 1000 	ldrh.w	r1, [lr]
90022f50:	4343      	muls	r3, r0
90022f52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022f54:	10cf      	asrs	r7, r1, #3
90022f56:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022f5a:	1c58      	adds	r0, r3, #1
90022f5c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022f60:	eb00 2323 	add.w	r3, r0, r3, asr #8
90022f64:	1208      	asrs	r0, r1, #8
90022f66:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022f6a:	00c9      	lsls	r1, r1, #3
90022f6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022f70:	b2db      	uxtb	r3, r3
90022f72:	b2c9      	uxtb	r1, r1
90022f74:	fb10 f003 	smulbb	r0, r0, r3
90022f78:	fb11 f103 	smulbb	r1, r1, r3
90022f7c:	fb05 0504 	mla	r5, r5, r4, r0
90022f80:	10d0      	asrs	r0, r2, #3
90022f82:	fb17 f703 	smulbb	r7, r7, r3
90022f86:	00d2      	lsls	r2, r2, #3
90022f88:	b2ad      	uxth	r5, r5
90022f8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90022f8e:	b2d2      	uxtb	r2, r2
90022f90:	fb00 7004 	mla	r0, r0, r4, r7
90022f94:	1c6b      	adds	r3, r5, #1
90022f96:	fb02 1204 	mla	r2, r2, r4, r1
90022f9a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022f9e:	b292      	uxth	r2, r2
90022fa0:	b280      	uxth	r0, r0
90022fa2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022fa6:	1c57      	adds	r7, r2, #1
90022fa8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90022fac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022fb0:	433d      	orrs	r5, r7
90022fb2:	1c47      	adds	r7, r0, #1
90022fb4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022fb8:	097f      	lsrs	r7, r7, #5
90022fba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022fbe:	433d      	orrs	r5, r7
90022fc0:	f8ae 5000 	strh.w	r5, [lr]
90022fc4:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022fc6:	f10e 0e02 	add.w	lr, lr, #2
90022fca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90022fcc:	4413      	add	r3, r2
90022fce:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022fd0:	9321      	str	r3, [sp, #132]	; 0x84
90022fd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022fd4:	441a      	add	r2, r3
90022fd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022fd8:	3b01      	subs	r3, #1
90022fda:	9222      	str	r2, [sp, #136]	; 0x88
90022fdc:	9313      	str	r3, [sp, #76]	; 0x4c
90022fde:	e61c      	b.n	90022c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90022fe0:	fb08 f000 	mul.w	r0, r8, r0
90022fe4:	fb09 0303 	mla	r3, r9, r3, r0
90022fe8:	e6dc      	b.n	90022da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90022fea:	46b9      	mov	r9, r7
90022fec:	e704      	b.n	90022df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90022fee:	f1c2 0110 	rsb	r1, r2, #16
90022ff2:	437a      	muls	r2, r7
90022ff4:	fb09 2901 	mla	r9, r9, r1, r2
90022ff8:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022ffc:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023000:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023004:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023008:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002300c:	4302      	orrs	r2, r0
9002300e:	e795      	b.n	90022f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90023010:	f8ae 2000 	strh.w	r2, [lr]
90023014:	e7d6      	b.n	90022fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90023016:	b017      	add	sp, #92	; 0x5c
90023018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002301c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002301c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023020:	b085      	sub	sp, #20
90023022:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90023026:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9002302a:	2800      	cmp	r0, #0
9002302c:	9103      	str	r1, [sp, #12]
9002302e:	fb00 7406 	mla	r4, r0, r6, r7
90023032:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90023036:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
9002303a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002303e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90023042:	eb02 0904 	add.w	r9, r2, r4
90023046:	9501      	str	r5, [sp, #4]
90023048:	f2c0 8141 	blt.w	900232ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002304c:	4583      	cmp	fp, r0
9002304e:	f340 813e 	ble.w	900232ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90023052:	2f00      	cmp	r7, #0
90023054:	f2c0 8137 	blt.w	900232c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90023058:	42be      	cmp	r6, r7
9002305a:	f340 8134 	ble.w	900232c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002305e:	f812 c004 	ldrb.w	ip, [r2, r4]
90023062:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90023066:	f64f 041f 	movw	r4, #63519	; 0xf81f
9002306a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002306e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90023072:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023076:	4355      	muls	r5, r2
90023078:	fb0c f203 	mul.w	r2, ip, r3
9002307c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90023080:	f605 0501 	addw	r5, r5, #2049	; 0x801
90023084:	441d      	add	r5, r3
90023086:	f102 0320 	add.w	r3, r2, #32
9002308a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002308e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90023092:	0a1b      	lsrs	r3, r3, #8
90023094:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023098:	431c      	orrs	r4, r3
9002309a:	1c7b      	adds	r3, r7, #1
9002309c:	f100 811c 	bmi.w	900232d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900230a0:	429e      	cmp	r6, r3
900230a2:	f340 8119 	ble.w	900232d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900230a6:	2900      	cmp	r1, #0
900230a8:	f000 8119 	beq.w	900232de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900230ac:	9a01      	ldr	r2, [sp, #4]
900230ae:	f899 3001 	ldrb.w	r3, [r9, #1]
900230b2:	8855      	ldrh	r5, [r2, #2]
900230b4:	ea4f 08e3 	mov.w	r8, r3, asr #3
900230b8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
900230bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900230c0:	fb08 f802 	mul.w	r8, r8, r2
900230c4:	f64f 021f 	movw	r2, #63519	; 0xf81f
900230c8:	435d      	muls	r5, r3
900230ca:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900230ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
900230d2:	44d0      	add	r8, sl
900230d4:	f105 0a20 	add.w	sl, r5, #32
900230d8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900230dc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900230e0:	0a2d      	lsrs	r5, r5, #8
900230e2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900230e6:	432a      	orrs	r2, r5
900230e8:	3001      	adds	r0, #1
900230ea:	f100 80fe 	bmi.w	900232ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900230ee:	4583      	cmp	fp, r0
900230f0:	f340 80fb 	ble.w	900232ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
900230f4:	f1be 0f00 	cmp.w	lr, #0
900230f8:	f000 80fc 	beq.w	900232f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
900230fc:	2f00      	cmp	r7, #0
900230fe:	f2c0 80f1 	blt.w	900232e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023102:	42be      	cmp	r6, r7
90023104:	f340 80ee 	ble.w	900232e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023108:	9801      	ldr	r0, [sp, #4]
9002310a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002310e:	f819 5006 	ldrb.w	r5, [r9, r6]
90023112:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023116:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002311a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002311e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90023122:	fb0a fa00 	mul.w	sl, sl, r0
90023126:	fb05 f808 	mul.w	r8, r5, r8
9002312a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002312e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90023132:	4482      	add	sl, r0
90023134:	f108 0020 	add.w	r0, r8, #32
90023138:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002313c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023140:	0a00      	lsrs	r0, r0, #8
90023142:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023146:	ea4b 0b00 	orr.w	fp, fp, r0
9002314a:	3701      	adds	r7, #1
9002314c:	f100 80d7 	bmi.w	900232fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023150:	42be      	cmp	r6, r7
90023152:	f340 80d4 	ble.w	900232fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90023156:	2900      	cmp	r1, #0
90023158:	f000 80d4 	beq.w	90023304 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
9002315c:	3601      	adds	r6, #1
9002315e:	9801      	ldr	r0, [sp, #4]
90023160:	f819 7006 	ldrb.w	r7, [r9, r6]
90023164:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90023168:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002316c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90023170:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023174:	fb09 f906 	mul.w	r9, r9, r6
90023178:	fb07 f800 	mul.w	r8, r7, r0
9002317c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90023180:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023184:	f609 0901 	addw	r9, r9, #2049	; 0x801
90023188:	44d1      	add	r9, sl
9002318a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002318e:	f108 0020 	add.w	r0, r8, #32
90023192:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023196:	0a00      	lsrs	r0, r0, #8
90023198:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002319c:	4330      	orrs	r0, r6
9002319e:	b28e      	uxth	r6, r1
900231a0:	fa1f f98e 	uxth.w	r9, lr
900231a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900231a8:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900231ac:	fb06 f809 	mul.w	r8, r6, r9
900231b0:	0136      	lsls	r6, r6, #4
900231b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900231b6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900231ba:	9601      	str	r6, [sp, #4]
900231bc:	ea4a 0404 	orr.w	r4, sl, r4
900231c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900231c4:	fa1f f689 	uxth.w	r6, r9
900231c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900231cc:	fb11 f90e 	smulbb	r9, r1, lr
900231d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900231d4:	9602      	str	r6, [sp, #8]
900231d6:	4626      	mov	r6, r4
900231d8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900231dc:	f1ce 0410 	rsb	r4, lr, #16
900231e0:	ea4a 0202 	orr.w	r2, sl, r2
900231e4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900231e8:	1a64      	subs	r4, r4, r1
900231ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900231ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900231f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900231f6:	434a      	muls	r2, r1
900231f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900231fc:	ea4a 0000 	orr.w	r0, sl, r0
90023200:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023204:	fb04 2406 	mla	r4, r4, r6, r2
90023208:	9903      	ldr	r1, [sp, #12]
9002320a:	fb09 4200 	mla	r2, r9, r0, r4
9002320e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023212:	9801      	ldr	r0, [sp, #4]
90023214:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90023218:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002321c:	8809      	ldrh	r1, [r1, #0]
9002321e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90023222:	ea44 0b0b 	orr.w	fp, r4, fp
90023226:	9c02      	ldr	r4, [sp, #8]
90023228:	1b00      	subs	r0, r0, r4
9002322a:	9c01      	ldr	r4, [sp, #4]
9002322c:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023230:	eba4 0608 	sub.w	r6, r4, r8
90023234:	b280      	uxth	r0, r0
90023236:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002323a:	b2b6      	uxth	r6, r6
9002323c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023240:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023244:	4373      	muls	r3, r6
90023246:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002324a:	fb0c 3300 	mla	r3, ip, r0, r3
9002324e:	9802      	ldr	r0, [sp, #8]
90023250:	ea42 0e0e 	orr.w	lr, r2, lr
90023254:	fb00 3505 	mla	r5, r0, r5, r3
90023258:	120b      	asrs	r3, r1, #8
9002325a:	10c8      	asrs	r0, r1, #3
9002325c:	fb08 5707 	mla	r7, r8, r7, r5
90023260:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90023264:	00c9      	lsls	r1, r1, #3
90023266:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002326a:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002326e:	fa1f f28e 	uxth.w	r2, lr
90023272:	b2c9      	uxtb	r1, r1
90023274:	b2ff      	uxtb	r7, r7
90023276:	437b      	muls	r3, r7
90023278:	4378      	muls	r0, r7
9002327a:	434f      	muls	r7, r1
9002327c:	1c59      	adds	r1, r3, #1
9002327e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023282:	1213      	asrs	r3, r2, #8
90023284:	f023 0307 	bic.w	r3, r3, #7
90023288:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002328c:	1c41      	adds	r1, r0, #1
9002328e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023292:	10d1      	asrs	r1, r2, #3
90023294:	021b      	lsls	r3, r3, #8
90023296:	f021 0103 	bic.w	r1, r1, #3
9002329a:	00d2      	lsls	r2, r2, #3
9002329c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900232a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900232a4:	00c9      	lsls	r1, r1, #3
900232a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900232aa:	430b      	orrs	r3, r1
900232ac:	1c79      	adds	r1, r7, #1
900232ae:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900232b2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900232b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900232ba:	431a      	orrs	r2, r3
900232bc:	9b03      	ldr	r3, [sp, #12]
900232be:	801a      	strh	r2, [r3, #0]
900232c0:	b005      	add	sp, #20
900232c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900232c6:	f04f 0c00 	mov.w	ip, #0
900232ca:	4664      	mov	r4, ip
900232cc:	e6e5      	b.n	9002309a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
900232ce:	2300      	movs	r3, #0
900232d0:	469c      	mov	ip, r3
900232d2:	461a      	mov	r2, r3
900232d4:	461c      	mov	r4, r3
900232d6:	e707      	b.n	900230e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900232d8:	2300      	movs	r3, #0
900232da:	461a      	mov	r2, r3
900232dc:	e704      	b.n	900230e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900232de:	460b      	mov	r3, r1
900232e0:	460a      	mov	r2, r1
900232e2:	e701      	b.n	900230e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
900232e4:	2500      	movs	r5, #0
900232e6:	46ab      	mov	fp, r5
900232e8:	e72f      	b.n	9002314a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
900232ea:	2700      	movs	r7, #0
900232ec:	463d      	mov	r5, r7
900232ee:	4638      	mov	r0, r7
900232f0:	46bb      	mov	fp, r7
900232f2:	e754      	b.n	9002319e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900232f4:	4677      	mov	r7, lr
900232f6:	4675      	mov	r5, lr
900232f8:	4670      	mov	r0, lr
900232fa:	46f3      	mov	fp, lr
900232fc:	e74f      	b.n	9002319e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900232fe:	2700      	movs	r7, #0
90023300:	4638      	mov	r0, r7
90023302:	e74c      	b.n	9002319e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023304:	460f      	mov	r7, r1
90023306:	4608      	mov	r0, r1
90023308:	e749      	b.n	9002319e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002330c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002330c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023310:	b093      	sub	sp, #76	; 0x4c
90023312:	9210      	str	r2, [sp, #64]	; 0x40
90023314:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023316:	9011      	str	r0, [sp, #68]	; 0x44
90023318:	910e      	str	r1, [sp, #56]	; 0x38
9002331a:	6850      	ldr	r0, [r2, #4]
9002331c:	9306      	str	r3, [sp, #24]
9002331e:	6812      	ldr	r2, [r2, #0]
90023320:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90023324:	fb00 1303 	mla	r3, r0, r3, r1
90023328:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002332c:	9307      	str	r3, [sp, #28]
9002332e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023330:	681b      	ldr	r3, [r3, #0]
90023332:	9308      	str	r3, [sp, #32]
90023334:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023336:	685b      	ldr	r3, [r3, #4]
90023338:	9309      	str	r3, [sp, #36]	; 0x24
9002333a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002333c:	2b00      	cmp	r3, #0
9002333e:	dc03      	bgt.n	90023348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023340:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023342:	2b00      	cmp	r3, #0
90023344:	f340 83b6 	ble.w	90023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023348:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002334a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002334e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023352:	1e48      	subs	r0, r1, #1
90023354:	1e55      	subs	r5, r2, #1
90023356:	9b06      	ldr	r3, [sp, #24]
90023358:	2b00      	cmp	r3, #0
9002335a:	f340 8165 	ble.w	90023628 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002335e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90023360:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023362:	1436      	asrs	r6, r6, #16
90023364:	ea4f 4323 	mov.w	r3, r3, asr #16
90023368:	d406      	bmi.n	90023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002336a:	4286      	cmp	r6, r0
9002336c:	da04      	bge.n	90023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002336e:	2b00      	cmp	r3, #0
90023370:	db02      	blt.n	90023378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023372:	42ab      	cmp	r3, r5
90023374:	f2c0 8159 	blt.w	9002362a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023378:	3601      	adds	r6, #1
9002337a:	f100 8146 	bmi.w	9002360a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002337e:	42b1      	cmp	r1, r6
90023380:	f2c0 8143 	blt.w	9002360a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023384:	3301      	adds	r3, #1
90023386:	f100 8140 	bmi.w	9002360a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002338a:	429a      	cmp	r2, r3
9002338c:	f2c0 813d 	blt.w	9002360a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023390:	9b06      	ldr	r3, [sp, #24]
90023392:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023396:	9f07      	ldr	r7, [sp, #28]
90023398:	930f      	str	r3, [sp, #60]	; 0x3c
9002339a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002339c:	2b00      	cmp	r3, #0
9002339e:	f340 8166 	ble.w	9002366e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900233a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900233a4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900233a6:	1418      	asrs	r0, r3, #16
900233a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900233aa:	142d      	asrs	r5, r5, #16
900233ac:	f3c3 3103 	ubfx	r1, r3, #12, #4
900233b0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900233b2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900233b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900233b8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900233bc:	f100 81f0 	bmi.w	900237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900233c0:	f102 3eff 	add.w	lr, r2, #4294967295
900233c4:	4575      	cmp	r5, lr
900233c6:	f280 81eb 	bge.w	900237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900233ca:	2800      	cmp	r0, #0
900233cc:	f2c0 81e8 	blt.w	900237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900233d0:	f103 3eff 	add.w	lr, r3, #4294967295
900233d4:	4570      	cmp	r0, lr
900233d6:	f280 81e3 	bge.w	900237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900233da:	b212      	sxth	r2, r2
900233dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900233de:	fa1f fe81 	uxth.w	lr, r1
900233e2:	fb00 5002 	mla	r0, r0, r2, r5
900233e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
900233ea:	eb03 0a00 	add.w	sl, r3, r0
900233ee:	f813 9000 	ldrb.w	r9, [r3, r0]
900233f2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900233f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900233fa:	b29b      	uxth	r3, r3
900233fc:	f1bc 0f00 	cmp.w	ip, #0
90023400:	f000 817b 	beq.w	900236fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023404:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023408:	eb0a 0b02 	add.w	fp, sl, r2
9002340c:	fa1f fa8c 	uxth.w	sl, ip
90023410:	940a      	str	r4, [sp, #40]	; 0x28
90023412:	fb0a fe0e 	mul.w	lr, sl, lr
90023416:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002341a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002341e:	eba5 050e 	sub.w	r5, r5, lr
90023422:	940b      	str	r4, [sp, #44]	; 0x2c
90023424:	fa1f fa8a 	uxth.w	sl, sl
90023428:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002342a:	b2ad      	uxth	r5, r5
9002342c:	eba3 030a 	sub.w	r3, r3, sl
90023430:	fb08 f505 	mul.w	r5, r8, r5
90023434:	b29b      	uxth	r3, r3
90023436:	fb09 5303 	mla	r3, r9, r3, r5
9002343a:	fb0a 3304 	mla	r3, sl, r4, r3
9002343e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023440:	fb0e 3304 	mla	r3, lr, r4, r3
90023444:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023448:	2b00      	cmp	r3, #0
9002344a:	f000 80d1 	beq.w	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002344e:	9c08      	ldr	r4, [sp, #32]
90023450:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023454:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023458:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9002345c:	f000 8152 	beq.w	90023704 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023460:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90023464:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023468:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002346c:	fb0a fe0e 	mul.w	lr, sl, lr
90023470:	fb09 f000 	mul.w	r0, r9, r0
90023474:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023478:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002347c:	f100 0b20 	add.w	fp, r0, #32
90023480:	44ce      	add	lr, r9
90023482:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90023486:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002348a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002348e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023492:	ea4e 0909 	orr.w	r9, lr, r9
90023496:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002349a:	8868      	ldrh	r0, [r5, #2]
9002349c:	d019      	beq.n	900234d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002349e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900234a2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900234a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900234aa:	fb0a fe0e 	mul.w	lr, sl, lr
900234ae:	fb08 f800 	mul.w	r8, r8, r0
900234b2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900234b6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900234ba:	f108 0b20 	add.w	fp, r8, #32
900234be:	4486      	add	lr, r0
900234c0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900234c4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900234c8:	0a00      	lsrs	r0, r0, #8
900234ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900234ce:	ea4e 0000 	orr.w	r0, lr, r0
900234d2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900234d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900234da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900234de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900234e2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900234e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900234ea:	ea4e 0909 	orr.w	r9, lr, r9
900234ee:	ea4a 0000 	orr.w	r0, sl, r0
900234f2:	f1bc 0f00 	cmp.w	ip, #0
900234f6:	f000 8107 	beq.w	90023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900234fa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900234fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023500:	3a01      	subs	r2, #1
90023502:	2cff      	cmp	r4, #255	; 0xff
90023504:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023508:	f102 0202 	add.w	r2, r2, #2
9002350c:	eb05 0e02 	add.w	lr, r5, r2
90023510:	5aaa      	ldrh	r2, [r5, r2]
90023512:	d018      	beq.n	90023546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90023514:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90023518:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002351c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023520:	fb04 fa02 	mul.w	sl, r4, r2
90023524:	fb08 f805 	mul.w	r8, r8, r5
90023528:	f10a 0520 	add.w	r5, sl, #32
9002352c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023530:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023534:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023538:	4442      	add	r2, r8
9002353a:	0a2d      	lsrs	r5, r5, #8
9002353c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023540:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023544:	432a      	orrs	r2, r5
90023546:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023548:	f8be 5002 	ldrh.w	r5, [lr, #2]
9002354c:	2cff      	cmp	r4, #255	; 0xff
9002354e:	d01a      	beq.n	90023586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90023550:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90023554:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023558:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002355c:	fb04 fa05 	mul.w	sl, r4, r5
90023560:	fb08 f80e 	mul.w	r8, r8, lr
90023564:	f10a 0e20 	add.w	lr, sl, #32
90023568:	ea06 1558 	and.w	r5, r6, r8, lsr #5
9002356c:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023570:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90023574:	4445      	add	r5, r8
90023576:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002357a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002357e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90023582:	ea45 050e 	orr.w	r5, r5, lr
90023586:	fb1c fe01 	smulbb	lr, ip, r1
9002358a:	f1cc 0810 	rsb	r8, ip, #16
9002358e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023592:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023596:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002359a:	eba8 0801 	sub.w	r8, r8, r1
9002359e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900235a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900235a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900235aa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900235ae:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900235b2:	ea4a 0202 	orr.w	r2, sl, r2
900235b6:	4341      	muls	r1, r0
900235b8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900235bc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900235c0:	fb09 1108 	mla	r1, r9, r8, r1
900235c4:	ea4b 0505 	orr.w	r5, fp, r5
900235c8:	fb0c 1102 	mla	r1, ip, r2, r1
900235cc:	fb0e 1e05 	mla	lr, lr, r5, r1
900235d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
900235d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900235d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900235dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900235e0:	ea42 0e0e 	orr.w	lr, r2, lr
900235e4:	fa1f f28e 	uxth.w	r2, lr
900235e8:	2bff      	cmp	r3, #255	; 0xff
900235ea:	f040 80a1 	bne.w	90023730 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900235ee:	803a      	strh	r2, [r7, #0]
900235f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900235f2:	3702      	adds	r7, #2
900235f4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900235f6:	4413      	add	r3, r2
900235f8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900235fa:	931d      	str	r3, [sp, #116]	; 0x74
900235fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900235fe:	441a      	add	r2, r3
90023600:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023602:	3b01      	subs	r3, #1
90023604:	921e      	str	r2, [sp, #120]	; 0x78
90023606:	930f      	str	r3, [sp, #60]	; 0x3c
90023608:	e6c7      	b.n	9002339a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002360a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002360c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9002360e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90023610:	4433      	add	r3, r6
90023612:	931d      	str	r3, [sp, #116]	; 0x74
90023614:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023616:	441c      	add	r4, r3
90023618:	9b06      	ldr	r3, [sp, #24]
9002361a:	3b01      	subs	r3, #1
9002361c:	941e      	str	r4, [sp, #120]	; 0x78
9002361e:	9306      	str	r3, [sp, #24]
90023620:	9b07      	ldr	r3, [sp, #28]
90023622:	3302      	adds	r3, #2
90023624:	9307      	str	r3, [sp, #28]
90023626:	e696      	b.n	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023628:	d028      	beq.n	9002367c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002362a:	9b06      	ldr	r3, [sp, #24]
9002362c:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002362e:	3b01      	subs	r3, #1
90023630:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023632:	fb00 5003 	mla	r0, r0, r3, r5
90023636:	1400      	asrs	r0, r0, #16
90023638:	f53f aeaa 	bmi.w	90023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002363c:	3901      	subs	r1, #1
9002363e:	4288      	cmp	r0, r1
90023640:	f6bf aea6 	bge.w	90023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023644:	9920      	ldr	r1, [sp, #128]	; 0x80
90023646:	981e      	ldr	r0, [sp, #120]	; 0x78
90023648:	fb01 0303 	mla	r3, r1, r3, r0
9002364c:	141b      	asrs	r3, r3, #16
9002364e:	f53f ae9f 	bmi.w	90023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023652:	3a01      	subs	r2, #1
90023654:	4293      	cmp	r3, r2
90023656:	f6bf ae9b 	bge.w	90023390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002365a:	9b06      	ldr	r3, [sp, #24]
9002365c:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023660:	f8dd e01c 	ldr.w	lr, [sp, #28]
90023664:	930f      	str	r3, [sp, #60]	; 0x3c
90023666:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023668:	2b00      	cmp	r3, #0
9002366a:	f300 80b6 	bgt.w	900237da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
9002366e:	9b06      	ldr	r3, [sp, #24]
90023670:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023674:	9b07      	ldr	r3, [sp, #28]
90023676:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002367a:	9307      	str	r3, [sp, #28]
9002367c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002367e:	2b00      	cmp	r3, #0
90023680:	f340 8218 	ble.w	90023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023684:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023688:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002368a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002368e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023692:	eef0 6a62 	vmov.f32	s13, s5
90023696:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002369a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002369e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900236a2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
900236a6:	eef0 6a43 	vmov.f32	s13, s6
900236aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900236ae:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
900236b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900236b6:	ee61 7a27 	vmul.f32	s15, s2, s15
900236ba:	ee77 2a62 	vsub.f32	s5, s14, s5
900236be:	ee37 3ac3 	vsub.f32	s6, s15, s6
900236c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900236c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900236ca:	ee12 2a90 	vmov	r2, s5
900236ce:	eef0 2a47 	vmov.f32	s5, s14
900236d2:	fb92 f3f3 	sdiv	r3, r2, r3
900236d6:	ee13 2a10 	vmov	r2, s6
900236da:	931f      	str	r3, [sp, #124]	; 0x7c
900236dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900236de:	eeb0 3a67 	vmov.f32	s6, s15
900236e2:	fb92 f3f3 	sdiv	r3, r2, r3
900236e6:	9320      	str	r3, [sp, #128]	; 0x80
900236e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900236ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
900236ec:	3b01      	subs	r3, #1
900236ee:	930e      	str	r3, [sp, #56]	; 0x38
900236f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900236f2:	bf08      	it	eq
900236f4:	4613      	moveq	r3, r2
900236f6:	9306      	str	r3, [sp, #24]
900236f8:	e61f      	b.n	9002333a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900236fa:	fb08 f505 	mul.w	r5, r8, r5
900236fe:	fb09 5303 	mla	r3, r9, r3, r5
90023702:	e69f      	b.n	90023444 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90023704:	4681      	mov	r9, r0
90023706:	e6c6      	b.n	90023496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90023708:	f1c1 0210 	rsb	r2, r1, #16
9002370c:	4341      	muls	r1, r0
9002370e:	fb09 1902 	mla	r9, r9, r2, r1
90023712:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023716:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002371a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002371e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023722:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023726:	ea42 0909 	orr.w	r9, r2, r9
9002372a:	fa1f f289 	uxth.w	r2, r9
9002372e:	e75b      	b.n	900235e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90023730:	f8b7 c000 	ldrh.w	ip, [r7]
90023734:	43db      	mvns	r3, r3
90023736:	ea4f 202c 	mov.w	r0, ip, asr #8
9002373a:	fa5f fe83 	uxtb.w	lr, r3
9002373e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90023742:	ea4f 05ec 	mov.w	r5, ip, asr #3
90023746:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002374a:	fb00 f00e 	mul.w	r0, r0, lr
9002374e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90023752:	b2db      	uxtb	r3, r3
90023754:	1c41      	adds	r1, r0, #1
90023756:	fb05 f50e 	mul.w	r5, r5, lr
9002375a:	fb03 f30e 	mul.w	r3, r3, lr
9002375e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023762:	1211      	asrs	r1, r2, #8
90023764:	f021 0107 	bic.w	r1, r1, #7
90023768:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002376c:	48d3      	ldr	r0, [pc, #844]	; (90023abc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002376e:	b2c9      	uxtb	r1, r1
90023770:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90023774:	1c69      	adds	r1, r5, #1
90023776:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002377a:	10d1      	asrs	r1, r2, #3
9002377c:	00d2      	lsls	r2, r2, #3
9002377e:	f021 0103 	bic.w	r1, r1, #3
90023782:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023786:	00c9      	lsls	r1, r1, #3
90023788:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002378c:	4301      	orrs	r1, r0
9002378e:	1c58      	adds	r0, r3, #1
90023790:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023794:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023798:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002379c:	430a      	orrs	r2, r1
9002379e:	e726      	b.n	900235ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900237a0:	f115 0e01 	adds.w	lr, r5, #1
900237a4:	f53f af24 	bmi.w	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900237a8:	4572      	cmp	r2, lr
900237aa:	f6ff af21 	blt.w	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900237ae:	f110 0e01 	adds.w	lr, r0, #1
900237b2:	f53f af1d 	bmi.w	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900237b6:	4573      	cmp	r3, lr
900237b8:	f6ff af1a 	blt.w	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900237bc:	b21b      	sxth	r3, r3
900237be:	b212      	sxth	r2, r2
900237c0:	9301      	str	r3, [sp, #4]
900237c2:	9200      	str	r2, [sp, #0]
900237c4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900237c8:	e9cd 5002 	strd	r5, r0, [sp, #8]
900237cc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900237d0:	4639      	mov	r1, r7
900237d2:	9811      	ldr	r0, [sp, #68]	; 0x44
900237d4:	f7ff fc22 	bl	9002301c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900237d8:	e70a      	b.n	900235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900237da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900237dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900237e0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900237e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900237e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900237e8:	fa1f fc82 	uxth.w	ip, r2
900237ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900237f0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900237f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900237f6:	141f      	asrs	r7, r3, #16
900237f8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900237fa:	141b      	asrs	r3, r3, #16
900237fc:	fb01 3707 	mla	r7, r1, r7, r3
90023800:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023802:	eb03 0a07 	add.w	sl, r3, r7
90023806:	f813 9007 	ldrb.w	r9, [r3, r7]
9002380a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002380e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023812:	b29b      	uxth	r3, r3
90023814:	2d00      	cmp	r5, #0
90023816:	f000 80fe 	beq.w	90023a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002381a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002381e:	eb0a 0b01 	add.w	fp, sl, r1
90023822:	fa1f fa85 	uxth.w	sl, r5
90023826:	940c      	str	r4, [sp, #48]	; 0x30
90023828:	fb0a fc0c 	mul.w	ip, sl, ip
9002382c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023830:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023834:	eba0 000c 	sub.w	r0, r0, ip
90023838:	940d      	str	r4, [sp, #52]	; 0x34
9002383a:	fa1f fa8a 	uxth.w	sl, sl
9002383e:	b280      	uxth	r0, r0
90023840:	eba3 030a 	sub.w	r3, r3, sl
90023844:	fb08 f000 	mul.w	r0, r8, r0
90023848:	b29b      	uxth	r3, r3
9002384a:	fb09 0303 	mla	r3, r9, r3, r0
9002384e:	980c      	ldr	r0, [sp, #48]	; 0x30
90023850:	fb0a 3300 	mla	r3, sl, r0, r3
90023854:	fb0c 3304 	mla	r3, ip, r4, r3
90023858:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002385c:	2b00      	cmp	r3, #0
9002385e:	f000 80cc 	beq.w	900239fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023862:	9808      	ldr	r0, [sp, #32]
90023864:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023868:	9c08      	ldr	r4, [sp, #32]
9002386a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002386e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90023872:	f000 80d5 	beq.w	90023a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90023876:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002387a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002387e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023882:	fb0a fc0c 	mul.w	ip, sl, ip
90023886:	fb09 f707 	mul.w	r7, r9, r7
9002388a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002388e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023892:	f107 0b20 	add.w	fp, r7, #32
90023896:	44cc      	add	ip, r9
90023898:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002389c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900238a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900238a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900238a8:	ea4c 0909 	orr.w	r9, ip, r9
900238ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900238b0:	8847      	ldrh	r7, [r0, #2]
900238b2:	d019      	beq.n	900238e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900238b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900238b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900238bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900238c0:	fb0a fc0c 	mul.w	ip, sl, ip
900238c4:	fb08 f807 	mul.w	r8, r8, r7
900238c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900238cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900238d0:	f108 0b20 	add.w	fp, r8, #32
900238d4:	44bc      	add	ip, r7
900238d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900238da:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900238de:	0a3f      	lsrs	r7, r7, #8
900238e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900238e4:	ea4c 0707 	orr.w	r7, ip, r7
900238e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900238ec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900238f0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900238f4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900238f8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900238fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023900:	ea4c 0909 	orr.w	r9, ip, r9
90023904:	ea4a 0707 	orr.w	r7, sl, r7
90023908:	2d00      	cmp	r5, #0
9002390a:	f000 808b 	beq.w	90023a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002390e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90023912:	3901      	subs	r1, #1
90023914:	0049      	lsls	r1, r1, #1
90023916:	3102      	adds	r1, #2
90023918:	eb00 0c01 	add.w	ip, r0, r1
9002391c:	5a41      	ldrh	r1, [r0, r1]
9002391e:	980c      	ldr	r0, [sp, #48]	; 0x30
90023920:	28ff      	cmp	r0, #255	; 0xff
90023922:	d019      	beq.n	90023958 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023924:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90023928:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002392a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002392e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023932:	fb04 fa01 	mul.w	sl, r4, r1
90023936:	fb08 f800 	mul.w	r8, r8, r0
9002393a:	f10a 0020 	add.w	r0, sl, #32
9002393e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023942:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023946:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002394a:	4441      	add	r1, r8
9002394c:	0a00      	lsrs	r0, r0, #8
9002394e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023952:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023956:	4301      	orrs	r1, r0
90023958:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002395a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002395e:	2cff      	cmp	r4, #255	; 0xff
90023960:	d01a      	beq.n	90023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90023962:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90023966:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002396a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002396e:	fb04 fa00 	mul.w	sl, r4, r0
90023972:	fb08 f80c 	mul.w	r8, r8, ip
90023976:	f10a 0c20 	add.w	ip, sl, #32
9002397a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002397e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023982:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023986:	4440      	add	r0, r8
90023988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002398c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023990:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023994:	ea40 000c 	orr.w	r0, r0, ip
90023998:	fb15 fc02 	smulbb	ip, r5, r2
9002399c:	f1c5 0810 	rsb	r8, r5, #16
900239a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900239a4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900239a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
900239ac:	eba8 0802 	sub.w	r8, r8, r2
900239b0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900239b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900239b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900239bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900239c0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900239c4:	ea4a 0101 	orr.w	r1, sl, r1
900239c8:	437a      	muls	r2, r7
900239ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900239ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900239d2:	fb09 2208 	mla	r2, r9, r8, r2
900239d6:	ea4b 0000 	orr.w	r0, fp, r0
900239da:	fb05 2201 	mla	r2, r5, r1, r2
900239de:	fb0c 2200 	mla	r2, ip, r0, r2
900239e2:	0d57      	lsrs	r7, r2, #21
900239e4:	0952      	lsrs	r2, r2, #5
900239e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900239ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900239ee:	433a      	orrs	r2, r7
900239f0:	2bff      	cmp	r3, #255	; 0xff
900239f2:	b292      	uxth	r2, r2
900239f4:	d127      	bne.n	90023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900239f6:	f8ae 2000 	strh.w	r2, [lr]
900239fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900239fc:	f10e 0e02 	add.w	lr, lr, #2
90023a00:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023a02:	4413      	add	r3, r2
90023a04:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90023a06:	931d      	str	r3, [sp, #116]	; 0x74
90023a08:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023a0a:	441a      	add	r2, r3
90023a0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023a0e:	3b01      	subs	r3, #1
90023a10:	921e      	str	r2, [sp, #120]	; 0x78
90023a12:	930f      	str	r3, [sp, #60]	; 0x3c
90023a14:	e627      	b.n	90023666 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023a16:	fb08 f000 	mul.w	r0, r8, r0
90023a1a:	fb09 0303 	mla	r3, r9, r3, r0
90023a1e:	e71b      	b.n	90023858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023a20:	46b9      	mov	r9, r7
90023a22:	e743      	b.n	900238ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023a24:	f1c2 0110 	rsb	r1, r2, #16
90023a28:	437a      	muls	r2, r7
90023a2a:	fb09 2901 	mla	r9, r9, r1, r2
90023a2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023a32:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023a36:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023a3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023a3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023a42:	4302      	orrs	r2, r0
90023a44:	e7d4      	b.n	900239f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90023a46:	f8be 7000 	ldrh.w	r7, [lr]
90023a4a:	43db      	mvns	r3, r3
90023a4c:	4c1b      	ldr	r4, [pc, #108]	; (90023abc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023a4e:	1238      	asrs	r0, r7, #8
90023a50:	fa5f fc83 	uxtb.w	ip, r3
90023a54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90023a58:	10fd      	asrs	r5, r7, #3
90023a5a:	00fb      	lsls	r3, r7, #3
90023a5c:	fb00 f00c 	mul.w	r0, r0, ip
90023a60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90023a64:	b2db      	uxtb	r3, r3
90023a66:	fb05 f10c 	mul.w	r1, r5, ip
90023a6a:	1c45      	adds	r5, r0, #1
90023a6c:	fb03 f30c 	mul.w	r3, r3, ip
90023a70:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023a74:	1215      	asrs	r5, r2, #8
90023a76:	f025 0507 	bic.w	r5, r5, #7
90023a7a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023a7e:	1c4d      	adds	r5, r1, #1
90023a80:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90023a84:	10d1      	asrs	r1, r2, #3
90023a86:	b2c0      	uxtb	r0, r0
90023a88:	f021 0103 	bic.w	r1, r1, #3
90023a8c:	00d2      	lsls	r2, r2, #3
90023a8e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023a92:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023a96:	00c9      	lsls	r1, r1, #3
90023a98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023a9c:	4308      	orrs	r0, r1
90023a9e:	1c59      	adds	r1, r3, #1
90023aa0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023aa4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023aa8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90023aac:	4318      	orrs	r0, r3
90023aae:	f8ae 0000 	strh.w	r0, [lr]
90023ab2:	e7a2      	b.n	900239fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023ab4:	b013      	add	sp, #76	; 0x4c
90023ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023aba:	bf00      	nop
90023abc:	fffff800 	.word	0xfffff800

90023ac0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90023ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023ac4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
90023ac8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90023acc:	fb05 4c03 	mla	ip, r5, r3, r4
90023ad0:	2d00      	cmp	r5, #0
90023ad2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
90023ad6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90023ada:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90023ade:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90023ae2:	8808      	ldrh	r0, [r1, #0]
90023ae4:	f2c0 80a7 	blt.w	90023c36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023ae8:	45aa      	cmp	sl, r5
90023aea:	f340 80a4 	ble.w	90023c36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023aee:	2c00      	cmp	r4, #0
90023af0:	f2c0 809f 	blt.w	90023c32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023af4:	42a3      	cmp	r3, r4
90023af6:	f340 809c 	ble.w	90023c32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023afa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90023afe:	1c62      	adds	r2, r4, #1
90023b00:	f100 809c 	bmi.w	90023c3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023b04:	4293      	cmp	r3, r2
90023b06:	f340 8099 	ble.w	90023c3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023b0a:	f1b9 0f00 	cmp.w	r9, #0
90023b0e:	f000 8095 	beq.w	90023c3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023b12:	f8be c002 	ldrh.w	ip, [lr, #2]
90023b16:	3501      	adds	r5, #1
90023b18:	f100 8094 	bmi.w	90023c44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023b1c:	45aa      	cmp	sl, r5
90023b1e:	f340 8091 	ble.w	90023c44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023b22:	2f00      	cmp	r7, #0
90023b24:	f000 808e 	beq.w	90023c44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023b28:	2c00      	cmp	r4, #0
90023b2a:	f2c0 8089 	blt.w	90023c40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023b2e:	42a3      	cmp	r3, r4
90023b30:	f340 8086 	ble.w	90023c40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023b34:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90023b38:	3401      	adds	r4, #1
90023b3a:	f100 8086 	bmi.w	90023c4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023b3e:	42a3      	cmp	r3, r4
90023b40:	f340 8083 	ble.w	90023c4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023b44:	f1b9 0f00 	cmp.w	r9, #0
90023b48:	d07f      	beq.n	90023c4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023b4a:	3301      	adds	r3, #1
90023b4c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90023b50:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023b54:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90023b58:	fb19 fe07 	smulbb	lr, r9, r7
90023b5c:	f1c7 0210 	rsb	r2, r7, #16
90023b60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90023b64:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023b68:	eba2 0209 	sub.w	r2, r2, r9
90023b6c:	ea44 0808 	orr.w	r8, r4, r8
90023b70:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023b74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023b78:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90023b7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90023b80:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023b84:	ea44 0c0c 	orr.w	ip, r4, ip
90023b88:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90023b8c:	fb04 f40c 	mul.w	r4, r4, ip
90023b90:	fb02 4808 	mla	r8, r2, r8, r4
90023b94:	041a      	lsls	r2, r3, #16
90023b96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023b9a:	b2b4      	uxth	r4, r6
90023b9c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023ba0:	43f6      	mvns	r6, r6
90023ba2:	4313      	orrs	r3, r2
90023ba4:	042a      	lsls	r2, r5, #16
90023ba6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90023baa:	b2f6      	uxtb	r6, r6
90023bac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023bb0:	fb0e 8303 	mla	r3, lr, r3, r8
90023bb4:	432a      	orrs	r2, r5
90023bb6:	fb07 3202 	mla	r2, r7, r2, r3
90023bba:	10c7      	asrs	r7, r0, #3
90023bbc:	0d53      	lsrs	r3, r2, #21
90023bbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90023bc2:	0952      	lsrs	r2, r2, #5
90023bc4:	fb17 f706 	smulbb	r7, r7, r6
90023bc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023bcc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023bd0:	431a      	orrs	r2, r3
90023bd2:	b293      	uxth	r3, r2
90023bd4:	1202      	asrs	r2, r0, #8
90023bd6:	121d      	asrs	r5, r3, #8
90023bd8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023bdc:	00c0      	lsls	r0, r0, #3
90023bde:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023be2:	fb12 f206 	smulbb	r2, r2, r6
90023be6:	b2c0      	uxtb	r0, r0
90023be8:	fb05 2504 	mla	r5, r5, r4, r2
90023bec:	10da      	asrs	r2, r3, #3
90023bee:	fb10 f006 	smulbb	r0, r0, r6
90023bf2:	00db      	lsls	r3, r3, #3
90023bf4:	b2ad      	uxth	r5, r5
90023bf6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023bfa:	b2db      	uxtb	r3, r3
90023bfc:	fb02 7204 	mla	r2, r2, r4, r7
90023c00:	fb03 0004 	mla	r0, r3, r4, r0
90023c04:	1c6b      	adds	r3, r5, #1
90023c06:	b292      	uxth	r2, r2
90023c08:	b280      	uxth	r0, r0
90023c0a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023c0e:	1c43      	adds	r3, r0, #1
90023c10:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023c14:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023c18:	1c50      	adds	r0, r2, #1
90023c1a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90023c1e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023c22:	0952      	lsrs	r2, r2, #5
90023c24:	432b      	orrs	r3, r5
90023c26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023c2a:	4313      	orrs	r3, r2
90023c2c:	800b      	strh	r3, [r1, #0]
90023c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023c32:	4680      	mov	r8, r0
90023c34:	e763      	b.n	90023afe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90023c36:	4684      	mov	ip, r0
90023c38:	4680      	mov	r8, r0
90023c3a:	e76c      	b.n	90023b16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023c3c:	4684      	mov	ip, r0
90023c3e:	e76a      	b.n	90023b16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023c40:	4605      	mov	r5, r0
90023c42:	e779      	b.n	90023b38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90023c44:	4603      	mov	r3, r0
90023c46:	4605      	mov	r5, r0
90023c48:	e782      	b.n	90023b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90023c4a:	4603      	mov	r3, r0
90023c4c:	e780      	b.n	90023b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90023c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023c4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023c52:	b093      	sub	sp, #76	; 0x4c
90023c54:	461d      	mov	r5, r3
90023c56:	9210      	str	r2, [sp, #64]	; 0x40
90023c58:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023c5a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90023c5e:	910a      	str	r1, [sp, #40]	; 0x28
90023c60:	920b      	str	r2, [sp, #44]	; 0x2c
90023c62:	6859      	ldr	r1, [r3, #4]
90023c64:	681b      	ldr	r3, [r3, #0]
90023c66:	9011      	str	r0, [sp, #68]	; 0x44
90023c68:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90023c6c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90023c70:	fb01 2707 	mla	r7, r1, r7, r2
90023c74:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90023c78:	9307      	str	r3, [sp, #28]
90023c7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023c7c:	681b      	ldr	r3, [r3, #0]
90023c7e:	9309      	str	r3, [sp, #36]	; 0x24
90023c80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023c82:	43db      	mvns	r3, r3
90023c84:	b2db      	uxtb	r3, r3
90023c86:	9308      	str	r3, [sp, #32]
90023c88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023c8a:	2b00      	cmp	r3, #0
90023c8c:	dc03      	bgt.n	90023c96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023c8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023c90:	2b00      	cmp	r3, #0
90023c92:	f340 8205 	ble.w	900240a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023c96:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023c98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023c9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023ca0:	1e48      	subs	r0, r1, #1
90023ca2:	f102 3cff 	add.w	ip, r2, #4294967295
90023ca6:	2d00      	cmp	r5, #0
90023ca8:	f340 80da 	ble.w	90023e60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90023cac:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023cb0:	ea4f 4326 	mov.w	r3, r6, asr #16
90023cb4:	d406      	bmi.n	90023cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023cb6:	4586      	cmp	lr, r0
90023cb8:	da04      	bge.n	90023cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023cba:	2b00      	cmp	r3, #0
90023cbc:	db02      	blt.n	90023cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023cbe:	4563      	cmp	r3, ip
90023cc0:	f2c0 80cf 	blt.w	90023e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023cc4:	f11e 0e01 	adds.w	lr, lr, #1
90023cc8:	f100 80c1 	bmi.w	90023e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023ccc:	4571      	cmp	r1, lr
90023cce:	f2c0 80be 	blt.w	90023e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023cd2:	3301      	adds	r3, #1
90023cd4:	f100 80bb 	bmi.w	90023e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023cd8:	429a      	cmp	r2, r3
90023cda:	f2c0 80b8 	blt.w	90023e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023cde:	46a9      	mov	r9, r5
90023ce0:	f8dd 801c 	ldr.w	r8, [sp, #28]
90023ce4:	f1b9 0f00 	cmp.w	r9, #0
90023ce8:	f340 80d8 	ble.w	90023e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90023cec:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023cee:	1421      	asrs	r1, r4, #16
90023cf0:	ea4f 4026 	mov.w	r0, r6, asr #16
90023cf4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023cf8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90023cfc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90023d00:	f100 8112 	bmi.w	90023f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023d04:	f10e 3aff 	add.w	sl, lr, #4294967295
90023d08:	4551      	cmp	r1, sl
90023d0a:	f280 810d 	bge.w	90023f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023d0e:	2800      	cmp	r0, #0
90023d10:	f2c0 810a 	blt.w	90023f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023d14:	f103 3aff 	add.w	sl, r3, #4294967295
90023d18:	4550      	cmp	r0, sl
90023d1a:	f280 8105 	bge.w	90023f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023d1e:	fa0f f38e 	sxth.w	r3, lr
90023d22:	fb00 1103 	mla	r1, r0, r3, r1
90023d26:	9809      	ldr	r0, [sp, #36]	; 0x24
90023d28:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90023d2c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90023d30:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90023d34:	f1bc 0f00 	cmp.w	ip, #0
90023d38:	d007      	beq.n	90023d4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90023d3a:	005b      	lsls	r3, r3, #1
90023d3c:	eb0a 0003 	add.w	r0, sl, r3
90023d40:	f83a 3003 	ldrh.w	r3, [sl, r3]
90023d44:	930c      	str	r3, [sp, #48]	; 0x30
90023d46:	8843      	ldrh	r3, [r0, #2]
90023d48:	930d      	str	r3, [sp, #52]	; 0x34
90023d4a:	ea4f 400e 	mov.w	r0, lr, lsl #16
90023d4e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023d52:	fb12 f30c 	smulbb	r3, r2, ip
90023d56:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023d5a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90023d5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023d62:	10db      	asrs	r3, r3, #3
90023d64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023d68:	ea40 000e 	orr.w	r0, r0, lr
90023d6c:	f1cc 0e10 	rsb	lr, ip, #16
90023d70:	ea4a 0101 	orr.w	r1, sl, r1
90023d74:	9f08      	ldr	r7, [sp, #32]
90023d76:	ebae 0e02 	sub.w	lr, lr, r2
90023d7a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023d7e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90023d82:	4351      	muls	r1, r2
90023d84:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90023d86:	fb0e 1e00 	mla	lr, lr, r0, r1
90023d8a:	990c      	ldr	r1, [sp, #48]	; 0x30
90023d8c:	0410      	lsls	r0, r2, #16
90023d8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023d92:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90023d96:	4310      	orrs	r0, r2
90023d98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023d9a:	0412      	lsls	r2, r2, #16
90023d9c:	fb03 e000 	mla	r0, r3, r0, lr
90023da0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90023da4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90023da8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023dac:	ea42 020e 	orr.w	r2, r2, lr
90023db0:	fb03 0302 	mla	r3, r3, r2, r0
90023db4:	f8b8 0000 	ldrh.w	r0, [r8]
90023db8:	0d5a      	lsrs	r2, r3, #21
90023dba:	095b      	lsrs	r3, r3, #5
90023dbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023dc0:	1201      	asrs	r1, r0, #8
90023dc2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023dc6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023dca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023dce:	00c0      	lsls	r0, r0, #3
90023dd0:	4313      	orrs	r3, r2
90023dd2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90023dd6:	fb11 f107 	smulbb	r1, r1, r7
90023dda:	b2c0      	uxtb	r0, r0
90023ddc:	b29b      	uxth	r3, r3
90023dde:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90023de2:	fb10 f007 	smulbb	r0, r0, r7
90023de6:	fb1e fe07 	smulbb	lr, lr, r7
90023dea:	ea4f 2c23 	mov.w	ip, r3, asr #8
90023dee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90023df2:	fb0c 1c02 	mla	ip, ip, r2, r1
90023df6:	10d9      	asrs	r1, r3, #3
90023df8:	00db      	lsls	r3, r3, #3
90023dfa:	fa1f fc8c 	uxth.w	ip, ip
90023dfe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90023e02:	b2db      	uxtb	r3, r3
90023e04:	fb01 e102 	mla	r1, r1, r2, lr
90023e08:	fb03 0302 	mla	r3, r3, r2, r0
90023e0c:	b289      	uxth	r1, r1
90023e0e:	b29a      	uxth	r2, r3
90023e10:	f10c 0301 	add.w	r3, ip, #1
90023e14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023e18:	1c53      	adds	r3, r2, #1
90023e1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023e1e:	1c4a      	adds	r2, r1, #1
90023e20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90023e24:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023e28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023e2c:	0949      	lsrs	r1, r1, #5
90023e2e:	ea43 030c 	orr.w	r3, r3, ip
90023e32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023e36:	430b      	orrs	r3, r1
90023e38:	f8a8 3000 	strh.w	r3, [r8]
90023e3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023e3e:	f108 0802 	add.w	r8, r8, #2
90023e42:	f109 39ff 	add.w	r9, r9, #4294967295
90023e46:	441c      	add	r4, r3
90023e48:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023e4a:	441e      	add	r6, r3
90023e4c:	e74a      	b.n	90023ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90023e4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023e50:	3d01      	subs	r5, #1
90023e52:	441c      	add	r4, r3
90023e54:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023e56:	441e      	add	r6, r3
90023e58:	9b07      	ldr	r3, [sp, #28]
90023e5a:	3302      	adds	r3, #2
90023e5c:	9307      	str	r3, [sp, #28]
90023e5e:	e722      	b.n	90023ca6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023e60:	d022      	beq.n	90023ea8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90023e62:	1e6b      	subs	r3, r5, #1
90023e64:	981f      	ldr	r0, [sp, #124]	; 0x7c
90023e66:	fb00 4003 	mla	r0, r0, r3, r4
90023e6a:	1400      	asrs	r0, r0, #16
90023e6c:	f53f af37 	bmi.w	90023cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023e70:	3901      	subs	r1, #1
90023e72:	4288      	cmp	r0, r1
90023e74:	f6bf af33 	bge.w	90023cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023e78:	9920      	ldr	r1, [sp, #128]	; 0x80
90023e7a:	fb01 6303 	mla	r3, r1, r3, r6
90023e7e:	141b      	asrs	r3, r3, #16
90023e80:	f53f af2d 	bmi.w	90023cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023e84:	3a01      	subs	r2, #1
90023e86:	4293      	cmp	r3, r2
90023e88:	f6bf af29 	bge.w	90023cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023e8c:	46a8      	mov	r8, r5
90023e8e:	f8dd 901c 	ldr.w	r9, [sp, #28]
90023e92:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90023e96:	f1b8 0f00 	cmp.w	r8, #0
90023e9a:	dc60      	bgt.n	90023f5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90023e9c:	9b07      	ldr	r3, [sp, #28]
90023e9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90023ea2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023ea6:	9307      	str	r3, [sp, #28]
90023ea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023eaa:	2b00      	cmp	r3, #0
90023eac:	f340 80f8 	ble.w	900240a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023eb0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023eb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023eb6:	ee30 0a04 	vadd.f32	s0, s0, s8
90023eba:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023ebe:	eef0 6a62 	vmov.f32	s13, s5
90023ec2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023ec6:	ee31 1a05 	vadd.f32	s2, s2, s10
90023eca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023ece:	ee16 4a90 	vmov	r4, s13
90023ed2:	eef0 6a43 	vmov.f32	s13, s6
90023ed6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023eda:	ee16 6a90 	vmov	r6, s13
90023ede:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023ee2:	ee61 7a27 	vmul.f32	s15, s2, s15
90023ee6:	ee77 2a62 	vsub.f32	s5, s14, s5
90023eea:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023eee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023ef2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023ef6:	ee12 2a90 	vmov	r2, s5
90023efa:	eef0 2a47 	vmov.f32	s5, s14
90023efe:	fb92 f3f3 	sdiv	r3, r2, r3
90023f02:	ee13 2a10 	vmov	r2, s6
90023f06:	931f      	str	r3, [sp, #124]	; 0x7c
90023f08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023f0a:	eeb0 3a67 	vmov.f32	s6, s15
90023f0e:	fb92 f3f3 	sdiv	r3, r2, r3
90023f12:	9320      	str	r3, [sp, #128]	; 0x80
90023f14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023f16:	9a10      	ldr	r2, [sp, #64]	; 0x40
90023f18:	3b01      	subs	r3, #1
90023f1a:	930a      	str	r3, [sp, #40]	; 0x28
90023f1c:	bf08      	it	eq
90023f1e:	4615      	moveq	r5, r2
90023f20:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023f22:	bf18      	it	ne
90023f24:	461d      	movne	r5, r3
90023f26:	e6af      	b.n	90023c88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023f28:	f111 0a01 	adds.w	sl, r1, #1
90023f2c:	d486      	bmi.n	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023f2e:	45d6      	cmp	lr, sl
90023f30:	db84      	blt.n	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023f32:	f110 0a01 	adds.w	sl, r0, #1
90023f36:	d481      	bmi.n	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023f38:	4553      	cmp	r3, sl
90023f3a:	f6ff af7f 	blt.w	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023f3e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90023f40:	b21b      	sxth	r3, r3
90023f42:	9101      	str	r1, [sp, #4]
90023f44:	4641      	mov	r1, r8
90023f46:	9300      	str	r3, [sp, #0]
90023f48:	fa0f f38e 	sxth.w	r3, lr
90023f4c:	e9cd 0202 	strd	r0, r2, [sp, #8]
90023f50:	e9cd c704 	strd	ip, r7, [sp, #16]
90023f54:	9a09      	ldr	r2, [sp, #36]	; 0x24
90023f56:	9811      	ldr	r0, [sp, #68]	; 0x44
90023f58:	f7ff fdb2 	bl	90023ac0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90023f5c:	e76e      	b.n	90023e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023f5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023f60:	1430      	asrs	r0, r6, #16
90023f62:	9f09      	ldr	r7, [sp, #36]	; 0x24
90023f64:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90023f68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023f6c:	1423      	asrs	r3, r4, #16
90023f6e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023f72:	fb01 3000 	mla	r0, r1, r0, r3
90023f76:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023f78:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90023f7c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90023f80:	8858      	ldrh	r0, [r3, #2]
90023f82:	f1be 0f00 	cmp.w	lr, #0
90023f86:	d00b      	beq.n	90023fa0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90023f88:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90023f8c:	3901      	subs	r1, #1
90023f8e:	0049      	lsls	r1, r1, #1
90023f90:	3102      	adds	r1, #2
90023f92:	eb03 0b01 	add.w	fp, r3, r1
90023f96:	5a5b      	ldrh	r3, [r3, r1]
90023f98:	930e      	str	r3, [sp, #56]	; 0x38
90023f9a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90023f9e:	930f      	str	r3, [sp, #60]	; 0x3c
90023fa0:	ea4f 410c 	mov.w	r1, ip, lsl #16
90023fa4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023fa8:	fb12 f30e 	smulbb	r3, r2, lr
90023fac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023fb0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90023fb4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023fb8:	10db      	asrs	r3, r3, #3
90023fba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023fbe:	ea41 010c 	orr.w	r1, r1, ip
90023fc2:	f1ce 0c10 	rsb	ip, lr, #16
90023fc6:	ea4b 0000 	orr.w	r0, fp, r0
90023fca:	9f08      	ldr	r7, [sp, #32]
90023fcc:	ebac 0c02 	sub.w	ip, ip, r2
90023fd0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023fd4:	f108 38ff 	add.w	r8, r8, #4294967295
90023fd8:	4350      	muls	r0, r2
90023fda:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90023fde:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023fe0:	fb0c 0c01 	mla	ip, ip, r1, r0
90023fe4:	980e      	ldr	r0, [sp, #56]	; 0x38
90023fe6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90023fea:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90023fee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90023ff0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023ff4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023ff8:	0412      	lsls	r2, r2, #16
90023ffa:	ea4b 0101 	orr.w	r1, fp, r1
90023ffe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024002:	fb03 c101 	mla	r1, r3, r1, ip
90024006:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002400a:	4302      	orrs	r2, r0
9002400c:	fb03 1202 	mla	r2, r3, r2, r1
90024010:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90024014:	0952      	lsrs	r2, r2, #5
90024016:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9002401a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
9002401e:	f8b9 2000 	ldrh.w	r2, [r9]
90024022:	ea4b 0303 	orr.w	r3, fp, r3
90024026:	1211      	asrs	r1, r2, #8
90024028:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9002402c:	b29b      	uxth	r3, r3
9002402e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024032:	00d2      	lsls	r2, r2, #3
90024034:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90024038:	fb11 f107 	smulbb	r1, r1, r7
9002403c:	1218      	asrs	r0, r3, #8
9002403e:	fb1c fc07 	smulbb	ip, ip, r7
90024042:	b2d2      	uxtb	r2, r2
90024044:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024048:	fb12 f207 	smulbb	r2, r2, r7
9002404c:	fb00 100a 	mla	r0, r0, sl, r1
90024050:	10d9      	asrs	r1, r3, #3
90024052:	00db      	lsls	r3, r3, #3
90024054:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024058:	b280      	uxth	r0, r0
9002405a:	b2db      	uxtb	r3, r3
9002405c:	fb01 c10a 	mla	r1, r1, sl, ip
90024060:	fb03 230a 	mla	r3, r3, sl, r2
90024064:	1c42      	adds	r2, r0, #1
90024066:	b289      	uxth	r1, r1
90024068:	b29b      	uxth	r3, r3
9002406a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002406e:	f101 0c01 	add.w	ip, r1, #1
90024072:	1c5a      	adds	r2, r3, #1
90024074:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90024078:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9002407c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024080:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024082:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024086:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002408a:	441c      	add	r4, r3
9002408c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024090:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024092:	4310      	orrs	r0, r2
90024094:	441e      	add	r6, r3
90024096:	ea40 000c 	orr.w	r0, r0, ip
9002409a:	f829 0b02 	strh.w	r0, [r9], #2
9002409e:	e6fa      	b.n	90023e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900240a0:	b013      	add	sp, #76	; 0x4c
900240a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900240a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900240a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900240aa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900240ae:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900240b2:	fb0e 4703 	mla	r7, lr, r3, r4
900240b6:	f1be 0f00 	cmp.w	lr, #0
900240ba:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
900240be:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
900240c2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
900240c6:	8808      	ldrh	r0, [r1, #0]
900240c8:	db60      	blt.n	9002418c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900240ca:	45f1      	cmp	r9, lr
900240cc:	dd5e      	ble.n	9002418c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
900240ce:	2c00      	cmp	r4, #0
900240d0:	db5a      	blt.n	90024188 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900240d2:	42a3      	cmp	r3, r4
900240d4:	dd58      	ble.n	90024188 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
900240d6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
900240da:	1c62      	adds	r2, r4, #1
900240dc:	d459      	bmi.n	90024192 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900240de:	4293      	cmp	r3, r2
900240e0:	dd57      	ble.n	90024192 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900240e2:	2d00      	cmp	r5, #0
900240e4:	d055      	beq.n	90024192 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
900240e6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
900240ea:	f11e 0e01 	adds.w	lr, lr, #1
900240ee:	d454      	bmi.n	9002419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900240f0:	45f1      	cmp	r9, lr
900240f2:	dd52      	ble.n	9002419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900240f4:	2e00      	cmp	r6, #0
900240f6:	d050      	beq.n	9002419a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
900240f8:	2c00      	cmp	r4, #0
900240fa:	db4c      	blt.n	90024196 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900240fc:	42a3      	cmp	r3, r4
900240fe:	dd4a      	ble.n	90024196 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024100:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90024104:	3401      	adds	r4, #1
90024106:	d405      	bmi.n	90024114 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024108:	42a3      	cmp	r3, r4
9002410a:	dd03      	ble.n	90024114 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002410c:	b115      	cbz	r5, 90024114 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002410e:	3301      	adds	r3, #1
90024110:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90024114:	fb15 f406 	smulbb	r4, r5, r6
90024118:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002411c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024120:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024124:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90024128:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9002412c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90024130:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90024134:	ea43 0c0c 	orr.w	ip, r3, ip
90024138:	f1c6 0310 	rsb	r3, r6, #16
9002413c:	ea4e 0707 	orr.w	r7, lr, r7
90024140:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90024144:	1b5b      	subs	r3, r3, r5
90024146:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9002414a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002414e:	437d      	muls	r5, r7
90024150:	fb03 5c0c 	mla	ip, r3, ip, r5
90024154:	0403      	lsls	r3, r0, #16
90024156:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002415a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002415e:	4318      	orrs	r0, r3
90024160:	0413      	lsls	r3, r2, #16
90024162:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024166:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002416a:	fb04 c000 	mla	r0, r4, r0, ip
9002416e:	4313      	orrs	r3, r2
90024170:	fb06 0003 	mla	r0, r6, r3, r0
90024174:	0d43      	lsrs	r3, r0, #21
90024176:	0940      	lsrs	r0, r0, #5
90024178:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002417c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024180:	4318      	orrs	r0, r3
90024182:	8008      	strh	r0, [r1, #0]
90024184:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90024188:	4684      	mov	ip, r0
9002418a:	e7a6      	b.n	900240da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
9002418c:	4607      	mov	r7, r0
9002418e:	4684      	mov	ip, r0
90024190:	e7ab      	b.n	900240ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024192:	4607      	mov	r7, r0
90024194:	e7a9      	b.n	900240ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024196:	4602      	mov	r2, r0
90024198:	e7b4      	b.n	90024104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002419a:	4602      	mov	r2, r0
9002419c:	e7ba      	b.n	90024114 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002419e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002419e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900241a2:	b08f      	sub	sp, #60	; 0x3c
900241a4:	461d      	mov	r5, r3
900241a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900241a8:	9107      	str	r1, [sp, #28]
900241aa:	920c      	str	r2, [sp, #48]	; 0x30
900241ac:	6859      	ldr	r1, [r3, #4]
900241ae:	681b      	ldr	r3, [r3, #0]
900241b0:	900d      	str	r0, [sp, #52]	; 0x34
900241b2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
900241b6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
900241ba:	fb01 2707 	mla	r7, r1, r7, r2
900241be:	eb03 0747 	add.w	r7, r3, r7, lsl #1
900241c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
900241c4:	f8d3 8000 	ldr.w	r8, [r3]
900241c8:	9b07      	ldr	r3, [sp, #28]
900241ca:	2b00      	cmp	r3, #0
900241cc:	dc03      	bgt.n	900241d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900241ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900241d0:	2b00      	cmp	r3, #0
900241d2:	f340 8182 	ble.w	900244da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900241d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900241d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900241dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900241e0:	1e48      	subs	r0, r1, #1
900241e2:	f102 3cff 	add.w	ip, r2, #4294967295
900241e6:	2d00      	cmp	r5, #0
900241e8:	f340 809b 	ble.w	90024322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
900241ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
900241f0:	ea4f 4326 	mov.w	r3, r6, asr #16
900241f4:	d406      	bmi.n	90024204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900241f6:	4586      	cmp	lr, r0
900241f8:	da04      	bge.n	90024204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900241fa:	2b00      	cmp	r3, #0
900241fc:	db02      	blt.n	90024204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900241fe:	4563      	cmp	r3, ip
90024200:	f2c0 8090 	blt.w	90024324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024204:	f11e 0e01 	adds.w	lr, lr, #1
90024208:	f100 8084 	bmi.w	90024314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002420c:	4571      	cmp	r1, lr
9002420e:	f2c0 8081 	blt.w	90024314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024212:	3301      	adds	r3, #1
90024214:	d47e      	bmi.n	90024314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024216:	429a      	cmp	r2, r3
90024218:	db7c      	blt.n	90024314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002421a:	46aa      	mov	sl, r5
9002421c:	46b9      	mov	r9, r7
9002421e:	f1ba 0f00 	cmp.w	sl, #0
90024222:	f340 8099 	ble.w	90024358 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90024226:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024228:	1421      	asrs	r1, r4, #16
9002422a:	ea4f 4026 	mov.w	r0, r6, asr #16
9002422e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024232:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024236:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002423a:	f100 80d1 	bmi.w	900243e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002423e:	f10e 3bff 	add.w	fp, lr, #4294967295
90024242:	4559      	cmp	r1, fp
90024244:	f280 80cc 	bge.w	900243e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024248:	2800      	cmp	r0, #0
9002424a:	f2c0 80c9 	blt.w	900243e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002424e:	f103 3bff 	add.w	fp, r3, #4294967295
90024252:	4558      	cmp	r0, fp
90024254:	f280 80c4 	bge.w	900243e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90024258:	fa0f fe8e 	sxth.w	lr, lr
9002425c:	fb00 110e 	mla	r1, r0, lr, r1
90024260:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90024264:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90024268:	8841      	ldrh	r1, [r0, #2]
9002426a:	f1bc 0f00 	cmp.w	ip, #0
9002426e:	d00b      	beq.n	90024288 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90024270:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90024274:	3b01      	subs	r3, #1
90024276:	005b      	lsls	r3, r3, #1
90024278:	3302      	adds	r3, #2
9002427a:	eb00 0e03 	add.w	lr, r0, r3
9002427e:	5ac3      	ldrh	r3, [r0, r3]
90024280:	9308      	str	r3, [sp, #32]
90024282:	f8be 3002 	ldrh.w	r3, [lr, #2]
90024286:	9309      	str	r3, [sp, #36]	; 0x24
90024288:	ea4f 400b 	mov.w	r0, fp, lsl #16
9002428c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024290:	fb12 f30c 	smulbb	r3, r2, ip
90024294:	f1cc 0e10 	rsb	lr, ip, #16
90024298:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002429c:	10db      	asrs	r3, r3, #3
9002429e:	ebae 0e02 	sub.w	lr, lr, r2
900242a2:	ea40 000b 	orr.w	r0, r0, fp
900242a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900242aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900242ae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900242b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900242b6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900242ba:	ea4b 0101 	orr.w	r1, fp, r1
900242be:	4351      	muls	r1, r2
900242c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
900242c2:	fb0e 1e00 	mla	lr, lr, r0, r1
900242c6:	0410      	lsls	r0, r2, #16
900242c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900242cc:	9908      	ldr	r1, [sp, #32]
900242ce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900242d2:	4310      	orrs	r0, r2
900242d4:	9a08      	ldr	r2, [sp, #32]
900242d6:	0412      	lsls	r2, r2, #16
900242d8:	fb03 e000 	mla	r0, r3, r0, lr
900242dc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
900242e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900242e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900242e8:	ea42 020e 	orr.w	r2, r2, lr
900242ec:	fb03 0302 	mla	r3, r3, r2, r0
900242f0:	0d5a      	lsrs	r2, r3, #21
900242f2:	095b      	lsrs	r3, r3, #5
900242f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900242f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900242fc:	4313      	orrs	r3, r2
900242fe:	f8a9 3000 	strh.w	r3, [r9]
90024302:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024304:	f109 0902 	add.w	r9, r9, #2
90024308:	f10a 3aff 	add.w	sl, sl, #4294967295
9002430c:	441c      	add	r4, r3
9002430e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024310:	441e      	add	r6, r3
90024312:	e784      	b.n	9002421e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90024314:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024316:	3d01      	subs	r5, #1
90024318:	3702      	adds	r7, #2
9002431a:	441c      	add	r4, r3
9002431c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002431e:	441e      	add	r6, r3
90024320:	e761      	b.n	900241e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024322:	d01d      	beq.n	90024360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024324:	1e6b      	subs	r3, r5, #1
90024326:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024328:	fb00 4003 	mla	r0, r0, r3, r4
9002432c:	1400      	asrs	r0, r0, #16
9002432e:	f53f af74 	bmi.w	9002421a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024332:	3901      	subs	r1, #1
90024334:	4288      	cmp	r0, r1
90024336:	f6bf af70 	bge.w	9002421a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002433a:	991c      	ldr	r1, [sp, #112]	; 0x70
9002433c:	fb01 6303 	mla	r3, r1, r3, r6
90024340:	141b      	asrs	r3, r3, #16
90024342:	f53f af6a 	bmi.w	9002421a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90024346:	3a01      	subs	r2, #1
90024348:	4293      	cmp	r3, r2
9002434a:	f6bf af66 	bge.w	9002421a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002434e:	46a9      	mov	r9, r5
90024350:	46ba      	mov	sl, r7
90024352:	f1b9 0f00 	cmp.w	r9, #0
90024356:	dc5b      	bgt.n	90024410 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90024358:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002435c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90024360:	9b07      	ldr	r3, [sp, #28]
90024362:	2b00      	cmp	r3, #0
90024364:	f340 80b9 	ble.w	900244da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024368:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002436c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002436e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024372:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024376:	eef0 6a62 	vmov.f32	s13, s5
9002437a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002437e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024382:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024386:	ee16 4a90 	vmov	r4, s13
9002438a:	eef0 6a43 	vmov.f32	s13, s6
9002438e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024392:	ee16 6a90 	vmov	r6, s13
90024396:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002439a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002439e:	ee77 2a62 	vsub.f32	s5, s14, s5
900243a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900243a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900243aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900243ae:	ee12 2a90 	vmov	r2, s5
900243b2:	eef0 2a47 	vmov.f32	s5, s14
900243b6:	fb92 f3f3 	sdiv	r3, r2, r3
900243ba:	ee13 2a10 	vmov	r2, s6
900243be:	931b      	str	r3, [sp, #108]	; 0x6c
900243c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900243c2:	eeb0 3a67 	vmov.f32	s6, s15
900243c6:	fb92 f3f3 	sdiv	r3, r2, r3
900243ca:	931c      	str	r3, [sp, #112]	; 0x70
900243cc:	9b07      	ldr	r3, [sp, #28]
900243ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900243d0:	3b01      	subs	r3, #1
900243d2:	9307      	str	r3, [sp, #28]
900243d4:	bf08      	it	eq
900243d6:	4615      	moveq	r5, r2
900243d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
900243da:	bf18      	it	ne
900243dc:	461d      	movne	r5, r3
900243de:	e6f3      	b.n	900241c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
900243e0:	f111 0b01 	adds.w	fp, r1, #1
900243e4:	d48d      	bmi.n	90024302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900243e6:	45de      	cmp	lr, fp
900243e8:	db8b      	blt.n	90024302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900243ea:	f110 0b01 	adds.w	fp, r0, #1
900243ee:	d488      	bmi.n	90024302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900243f0:	455b      	cmp	r3, fp
900243f2:	db86      	blt.n	90024302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900243f4:	b21b      	sxth	r3, r3
900243f6:	e9cd 1001 	strd	r1, r0, [sp, #4]
900243fa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900243fe:	9300      	str	r3, [sp, #0]
90024400:	4642      	mov	r2, r8
90024402:	fa0f f38e 	sxth.w	r3, lr
90024406:	4649      	mov	r1, r9
90024408:	980d      	ldr	r0, [sp, #52]	; 0x34
9002440a:	f7ff fe4c 	bl	900240a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002440e:	e778      	b.n	90024302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024410:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024412:	1420      	asrs	r0, r4, #16
90024414:	1431      	asrs	r1, r6, #16
90024416:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002441a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002441e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024422:	fb03 0101 	mla	r1, r3, r1, r0
90024426:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002442a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002442e:	8841      	ldrh	r1, [r0, #2]
90024430:	f1be 0f00 	cmp.w	lr, #0
90024434:	d00b      	beq.n	9002444e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90024436:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
9002443a:	3b01      	subs	r3, #1
9002443c:	005b      	lsls	r3, r3, #1
9002443e:	3302      	adds	r3, #2
90024440:	eb00 0b03 	add.w	fp, r0, r3
90024444:	5ac3      	ldrh	r3, [r0, r3]
90024446:	930a      	str	r3, [sp, #40]	; 0x28
90024448:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002444c:	930b      	str	r3, [sp, #44]	; 0x2c
9002444e:	ea4f 400c 	mov.w	r0, ip, lsl #16
90024452:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024456:	fb12 f30e 	smulbb	r3, r2, lr
9002445a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002445e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024462:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024466:	10db      	asrs	r3, r3, #3
90024468:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002446c:	ea40 000c 	orr.w	r0, r0, ip
90024470:	f1ce 0c10 	rsb	ip, lr, #16
90024474:	ea4b 0101 	orr.w	r1, fp, r1
90024478:	f109 39ff 	add.w	r9, r9, #4294967295
9002447c:	ebac 0c02 	sub.w	ip, ip, r2
90024480:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024484:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90024488:	4351      	muls	r1, r2
9002448a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002448c:	fb0c 1c00 	mla	ip, ip, r0, r1
90024490:	990a      	ldr	r1, [sp, #40]	; 0x28
90024492:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024496:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002449a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002449c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900244a0:	0412      	lsls	r2, r2, #16
900244a2:	ea4b 0000 	orr.w	r0, fp, r0
900244a6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
900244aa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900244ae:	fb03 c000 	mla	r0, r3, r0, ip
900244b2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900244b6:	ea42 0b0b 	orr.w	fp, r2, fp
900244ba:	fb03 000b 	mla	r0, r3, fp, r0
900244be:	0d43      	lsrs	r3, r0, #21
900244c0:	0940      	lsrs	r0, r0, #5
900244c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900244c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900244ca:	4318      	orrs	r0, r3
900244cc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900244ce:	441c      	add	r4, r3
900244d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900244d2:	f82a 0b02 	strh.w	r0, [sl], #2
900244d6:	441e      	add	r6, r3
900244d8:	e73b      	b.n	90024352 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900244da:	b00f      	add	sp, #60	; 0x3c
900244dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900244e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900244e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244e4:	b085      	sub	sp, #20
900244e6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
900244ea:	9102      	str	r1, [sp, #8]
900244ec:	2c00      	cmp	r4, #0
900244ee:	fb04 7103 	mla	r1, r4, r3, r7
900244f2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
900244f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900244fa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900244fe:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024502:	f2c0 811b 	blt.w	9002473c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024506:	45a6      	cmp	lr, r4
90024508:	f340 8118 	ble.w	9002473c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002450c:	2f00      	cmp	r7, #0
9002450e:	f2c0 8113 	blt.w	90024738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024512:	42bb      	cmp	r3, r7
90024514:	f340 8110 	ble.w	90024738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024518:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002451c:	1c7a      	adds	r2, r7, #1
9002451e:	f100 8110 	bmi.w	90024742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024522:	4293      	cmp	r3, r2
90024524:	f340 810d 	ble.w	90024742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024528:	2e00      	cmp	r6, #0
9002452a:	f000 810c 	beq.w	90024746 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002452e:	f8dc 1004 	ldr.w	r1, [ip, #4]
90024532:	3401      	adds	r4, #1
90024534:	f100 810b 	bmi.w	9002474e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90024538:	45a6      	cmp	lr, r4
9002453a:	f340 8108 	ble.w	9002474e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002453e:	2800      	cmp	r0, #0
90024540:	f000 8108 	beq.w	90024754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90024544:	2f00      	cmp	r7, #0
90024546:	f2c0 8100 	blt.w	9002474a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002454a:	42bb      	cmp	r3, r7
9002454c:	f340 80fd 	ble.w	9002474a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90024550:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024554:	3701      	adds	r7, #1
90024556:	f100 8100 	bmi.w	9002475a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002455a:	42bb      	cmp	r3, r7
9002455c:	f340 80fd 	ble.w	9002475a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90024560:	2e00      	cmp	r6, #0
90024562:	f000 80fc 	beq.w	9002475e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90024566:	3301      	adds	r3, #1
90024568:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
9002456c:	b2b6      	uxth	r6, r6
9002456e:	b280      	uxth	r0, r0
90024570:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024574:	fb00 fe06 	mul.w	lr, r0, r6
90024578:	0136      	lsls	r6, r6, #4
9002457a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002457e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024582:	eba6 070e 	sub.w	r7, r6, lr
90024586:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9002458a:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002458e:	b280      	uxth	r0, r0
90024590:	b2bf      	uxth	r7, r7
90024592:	1a1b      	subs	r3, r3, r0
90024594:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024598:	fb0a f607 	mul.w	r6, sl, r7
9002459c:	b29b      	uxth	r3, r3
9002459e:	fb0b 6603 	mla	r6, fp, r3, r6
900245a2:	fb00 6609 	mla	r6, r0, r9, r6
900245a6:	fb0e 6608 	mla	r6, lr, r8, r6
900245aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
900245ae:	9600      	str	r6, [sp, #0]
900245b0:	2e00      	cmp	r6, #0
900245b2:	f000 80be 	beq.w	90024732 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900245b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900245ba:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900245be:	9e02      	ldr	r6, [sp, #8]
900245c0:	fb0b fc0c 	mul.w	ip, fp, ip
900245c4:	fb0b f505 	mul.w	r5, fp, r5
900245c8:	8836      	ldrh	r6, [r6, #0]
900245ca:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900245ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900245d2:	9501      	str	r5, [sp, #4]
900245d4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900245d8:	44dc      	add	ip, fp
900245da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900245de:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900245e2:	9503      	str	r5, [sp, #12]
900245e4:	9d01      	ldr	r5, [sp, #4]
900245e6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900245ea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900245ee:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900245f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900245f6:	fb0a fc0c 	mul.w	ip, sl, ip
900245fa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900245fe:	fb0a fa01 	mul.w	sl, sl, r1
90024602:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024606:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002460a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002460e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024612:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024616:	4465      	add	r5, ip
90024618:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002461c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024620:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024624:	fb09 fc0c 	mul.w	ip, r9, ip
90024628:	0a2d      	lsrs	r5, r5, #8
9002462a:	fb09 f904 	mul.w	r9, r9, r4
9002462e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024632:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024636:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002463a:	f509 7480 	add.w	r4, r9, #256	; 0x100
9002463e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024642:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024646:	437d      	muls	r5, r7
90024648:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9002464c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90024650:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024654:	4461      	add	r1, ip
90024656:	fb08 f404 	mul.w	r4, r8, r4
9002465a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002465e:	fb08 f802 	mul.w	r8, r8, r2
90024662:	0a09      	lsrs	r1, r1, #8
90024664:	0a22      	lsrs	r2, r4, #8
90024666:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002466a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002466e:	fb07 f70a 	mul.w	r7, r7, sl
90024672:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024676:	4414      	add	r4, r2
90024678:	f508 7280 	add.w	r2, r8, #256	; 0x100
9002467c:	0a24      	lsrs	r4, r4, #8
9002467e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024682:	9a03      	ldr	r2, [sp, #12]
90024684:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90024688:	fb02 5503 	mla	r5, r2, r3, r5
9002468c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024690:	9a00      	ldr	r2, [sp, #0]
90024692:	fb04 540e 	mla	r4, r4, lr, r5
90024696:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002469a:	1235      	asrs	r5, r6, #8
9002469c:	fb01 4100 	mla	r1, r1, r0, r4
900246a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900246a4:	0a09      	lsrs	r1, r1, #8
900246a6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900246aa:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900246ae:	fb03 7101 	mla	r1, r3, r1, r7
900246b2:	fb0e 1e08 	mla	lr, lr, r8, r1
900246b6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900246ba:	fb00 e101 	mla	r1, r0, r1, lr
900246be:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900246c2:	b287      	uxth	r7, r0
900246c4:	0a09      	lsrs	r1, r1, #8
900246c6:	437a      	muls	r2, r7
900246c8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900246cc:	1c53      	adds	r3, r2, #1
900246ce:	4321      	orrs	r1, r4
900246d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900246d4:	0c0a      	lsrs	r2, r1, #16
900246d6:	f3c1 2407 	ubfx	r4, r1, #8, #8
900246da:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900246de:	b2c8      	uxtb	r0, r1
900246e0:	fb12 f207 	smulbb	r2, r2, r7
900246e4:	fb14 f407 	smulbb	r4, r4, r7
900246e8:	b2db      	uxtb	r3, r3
900246ea:	fb10 f007 	smulbb	r0, r0, r7
900246ee:	fb05 2503 	mla	r5, r5, r3, r2
900246f2:	10f2      	asrs	r2, r6, #3
900246f4:	00f6      	lsls	r6, r6, #3
900246f6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900246fa:	b2ad      	uxth	r5, r5
900246fc:	b2f6      	uxtb	r6, r6
900246fe:	fb02 4203 	mla	r2, r2, r3, r4
90024702:	fb06 0303 	mla	r3, r6, r3, r0
90024706:	b294      	uxth	r4, r2
90024708:	b299      	uxth	r1, r3
9002470a:	1c6b      	adds	r3, r5, #1
9002470c:	1c62      	adds	r2, r4, #1
9002470e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024712:	1c4b      	adds	r3, r1, #1
90024714:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024718:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002471c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024720:	0952      	lsrs	r2, r2, #5
90024722:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024726:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002472a:	432b      	orrs	r3, r5
9002472c:	4313      	orrs	r3, r2
9002472e:	9a02      	ldr	r2, [sp, #8]
90024730:	8013      	strh	r3, [r2, #0]
90024732:	b005      	add	sp, #20
90024734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024738:	2500      	movs	r5, #0
9002473a:	e6ef      	b.n	9002451c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
9002473c:	2100      	movs	r1, #0
9002473e:	460d      	mov	r5, r1
90024740:	e6f7      	b.n	90024532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024742:	2100      	movs	r1, #0
90024744:	e6f5      	b.n	90024532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024746:	4631      	mov	r1, r6
90024748:	e6f3      	b.n	90024532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002474a:	2400      	movs	r4, #0
9002474c:	e702      	b.n	90024554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9002474e:	2200      	movs	r2, #0
90024750:	4614      	mov	r4, r2
90024752:	e70b      	b.n	9002456c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024754:	4602      	mov	r2, r0
90024756:	4604      	mov	r4, r0
90024758:	e708      	b.n	9002456c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002475a:	2200      	movs	r2, #0
9002475c:	e706      	b.n	9002456c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002475e:	4632      	mov	r2, r6
90024760:	e704      	b.n	9002456c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90024762 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024762:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024766:	b09d      	sub	sp, #116	; 0x74
90024768:	9219      	str	r2, [sp, #100]	; 0x64
9002476a:	9307      	str	r3, [sp, #28]
9002476c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
9002476e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90024772:	901b      	str	r0, [sp, #108]	; 0x6c
90024774:	931a      	str	r3, [sp, #104]	; 0x68
90024776:	6850      	ldr	r0, [r2, #4]
90024778:	9117      	str	r1, [sp, #92]	; 0x5c
9002477a:	6812      	ldr	r2, [r2, #0]
9002477c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90024780:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90024784:	fb00 1303 	mla	r3, r0, r3, r1
90024788:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002478c:	930a      	str	r3, [sp, #40]	; 0x28
9002478e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024790:	681b      	ldr	r3, [r3, #0]
90024792:	9310      	str	r3, [sp, #64]	; 0x40
90024794:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
90024798:	930b      	str	r3, [sp, #44]	; 0x2c
9002479a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002479c:	2b00      	cmp	r3, #0
9002479e:	dc03      	bgt.n	900247a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900247a0:	9b19      	ldr	r3, [sp, #100]	; 0x64
900247a2:	2b00      	cmp	r3, #0
900247a4:	f340 8375 	ble.w	90024e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900247a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900247aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900247ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900247b2:	1e48      	subs	r0, r1, #1
900247b4:	1e57      	subs	r7, r2, #1
900247b6:	9b07      	ldr	r3, [sp, #28]
900247b8:	2b00      	cmp	r3, #0
900247ba:	f340 818e 	ble.w	90024ada <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900247be:	ea5f 4c24 	movs.w	ip, r4, asr #16
900247c2:	ea4f 4326 	mov.w	r3, r6, asr #16
900247c6:	d406      	bmi.n	900247d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900247c8:	4584      	cmp	ip, r0
900247ca:	da04      	bge.n	900247d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900247cc:	2b00      	cmp	r3, #0
900247ce:	db02      	blt.n	900247d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900247d0:	42bb      	cmp	r3, r7
900247d2:	f2c0 8183 	blt.w	90024adc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
900247d6:	f11c 0c01 	adds.w	ip, ip, #1
900247da:	f100 8173 	bmi.w	90024ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900247de:	4561      	cmp	r1, ip
900247e0:	f2c0 8170 	blt.w	90024ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900247e4:	3301      	adds	r3, #1
900247e6:	f100 816d 	bmi.w	90024ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900247ea:	429a      	cmp	r2, r3
900247ec:	f2c0 816a 	blt.w	90024ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900247f0:	9b07      	ldr	r3, [sp, #28]
900247f2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900247f4:	9318      	str	r3, [sp, #96]	; 0x60
900247f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
900247f8:	2b00      	cmp	r3, #0
900247fa:	f340 818c 	ble.w	90024b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900247fe:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90024800:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024804:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024806:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002480a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002480e:	1422      	asrs	r2, r4, #16
90024810:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024814:	689b      	ldr	r3, [r3, #8]
90024816:	f100 81cd 	bmi.w	90024bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002481a:	f103 38ff 	add.w	r8, r3, #4294967295
9002481e:	4542      	cmp	r2, r8
90024820:	f280 81c8 	bge.w	90024bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024824:	f1bc 0f00 	cmp.w	ip, #0
90024828:	f2c0 81c4 	blt.w	90024bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002482c:	f10e 38ff 	add.w	r8, lr, #4294967295
90024830:	45c4      	cmp	ip, r8
90024832:	f280 81bf 	bge.w	90024bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024836:	b21b      	sxth	r3, r3
90024838:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002483a:	fb0c 2203 	mla	r2, ip, r3, r2
9002483e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90024842:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90024846:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002484a:	2800      	cmp	r0, #0
9002484c:	f000 81a9 	beq.w	90024ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90024850:	f8d8 5004 	ldr.w	r5, [r8, #4]
90024854:	950c      	str	r5, [sp, #48]	; 0x30
90024856:	0e2d      	lsrs	r5, r5, #24
90024858:	9513      	str	r5, [sp, #76]	; 0x4c
9002485a:	b181      	cbz	r1, 9002487e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002485c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90024860:	3b01      	subs	r3, #1
90024862:	009b      	lsls	r3, r3, #2
90024864:	3304      	adds	r3, #4
90024866:	eb08 0c03 	add.w	ip, r8, r3
9002486a:	f858 3003 	ldr.w	r3, [r8, r3]
9002486e:	9308      	str	r3, [sp, #32]
90024870:	0e1b      	lsrs	r3, r3, #24
90024872:	9311      	str	r3, [sp, #68]	; 0x44
90024874:	f8dc 3004 	ldr.w	r3, [ip, #4]
90024878:	930d      	str	r3, [sp, #52]	; 0x34
9002487a:	0e1b      	lsrs	r3, r3, #24
9002487c:	9314      	str	r3, [sp, #80]	; 0x50
9002487e:	b280      	uxth	r0, r0
90024880:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024882:	b289      	uxth	r1, r1
90024884:	fb00 f901 	mul.w	r9, r0, r1
90024888:	0100      	lsls	r0, r0, #4
9002488a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002488e:	eba0 0809 	sub.w	r8, r0, r9
90024892:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024896:	9813      	ldr	r0, [sp, #76]	; 0x4c
90024898:	b289      	uxth	r1, r1
9002489a:	fa1f f888 	uxth.w	r8, r8
9002489e:	1a5b      	subs	r3, r3, r1
900248a0:	fb08 f000 	mul.w	r0, r8, r0
900248a4:	b29b      	uxth	r3, r3
900248a6:	fb03 000e 	mla	r0, r3, lr, r0
900248aa:	fb01 0005 	mla	r0, r1, r5, r0
900248ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
900248b0:	fb09 0005 	mla	r0, r9, r5, r0
900248b4:	f3c0 2007 	ubfx	r0, r0, #8, #8
900248b8:	2800      	cmp	r0, #0
900248ba:	f000 80fa 	beq.w	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900248be:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900248c2:	d01b      	beq.n	900248fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900248c4:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900248c8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900248cc:	fb0e fa0a 	mul.w	sl, lr, sl
900248d0:	fb0e fe02 	mul.w	lr, lr, r2
900248d4:	ea4f 221a 	mov.w	r2, sl, lsr #8
900248d8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900248dc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900248e0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900248e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900248e8:	4452      	add	r2, sl
900248ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900248ee:	0a12      	lsrs	r2, r2, #8
900248f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900248f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900248f8:	ea42 020c 	orr.w	r2, r2, ip
900248fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900248fe:	2dff      	cmp	r5, #255	; 0xff
90024900:	d021      	beq.n	90024946 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90024902:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024904:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024908:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002490a:	fb05 fb0b 	mul.w	fp, r5, fp
9002490e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024910:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024914:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90024916:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002491a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002491e:	fb05 fa0a 	mul.w	sl, r5, sl
90024922:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024926:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002492a:	44de      	add	lr, fp
9002492c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024930:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024934:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024938:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002493c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024940:	ea4e 050a 	orr.w	r5, lr, sl
90024944:	950c      	str	r5, [sp, #48]	; 0x30
90024946:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024948:	2dff      	cmp	r5, #255	; 0xff
9002494a:	d021      	beq.n	90024990 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
9002494c:	9d08      	ldr	r5, [sp, #32]
9002494e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024952:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024954:	fb05 fb0b 	mul.w	fp, r5, fp
90024958:	9d08      	ldr	r5, [sp, #32]
9002495a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002495e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024960:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024964:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024968:	fb05 fa0a 	mul.w	sl, r5, sl
9002496c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024970:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024974:	44de      	add	lr, fp
90024976:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002497a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002497e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024982:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024986:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002498a:	ea4e 050a 	orr.w	r5, lr, sl
9002498e:	9508      	str	r5, [sp, #32]
90024990:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024992:	2dff      	cmp	r5, #255	; 0xff
90024994:	d021      	beq.n	900249da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024996:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024998:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002499c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002499e:	fb05 fb0b 	mul.w	fp, r5, fp
900249a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900249a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900249a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
900249aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900249ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900249b2:	fb05 fa0a 	mul.w	sl, r5, sl
900249b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900249ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900249be:	44de      	add	lr, fp
900249c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900249c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900249c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900249cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900249d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900249d4:	ea4e 050a 	orr.w	r5, lr, sl
900249d8:	950d      	str	r5, [sp, #52]	; 0x34
900249da:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900249dc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900249e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900249e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900249e8:	9d08      	ldr	r5, [sp, #32]
900249ea:	fb08 fc0c 	mul.w	ip, r8, ip
900249ee:	fb03 cc0e 	mla	ip, r3, lr, ip
900249f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900249f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900249f8:	fb01 cc0e 	mla	ip, r1, lr, ip
900249fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90024a00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024a02:	fb09 cc0e 	mla	ip, r9, lr, ip
90024a06:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90024a0a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90024a0c:	fb08 f80e 	mul.w	r8, r8, lr
90024a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024a14:	fb03 8202 	mla	r2, r3, r2, r8
90024a18:	9b08      	ldr	r3, [sp, #32]
90024a1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024a1e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90024a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024a24:	fb01 220a 	mla	r2, r1, sl, r2
90024a28:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90024a2c:	883b      	ldrh	r3, [r7, #0]
90024a2e:	fb09 2901 	mla	r9, r9, r1, r2
90024a32:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90024a34:	1219      	asrs	r1, r3, #8
90024a36:	4342      	muls	r2, r0
90024a38:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024a3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024a40:	1c50      	adds	r0, r2, #1
90024a42:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90024a46:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024a4a:	ea4c 0c09 	orr.w	ip, ip, r9
90024a4e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024a52:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024a56:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024a5a:	fa5f fc8c 	uxtb.w	ip, ip
90024a5e:	fb12 f205 	smulbb	r2, r2, r5
90024a62:	b2c0      	uxtb	r0, r0
90024a64:	fb1c fc05 	smulbb	ip, ip, r5
90024a68:	fb01 2100 	mla	r1, r1, r0, r2
90024a6c:	10da      	asrs	r2, r3, #3
90024a6e:	fb1e fe05 	smulbb	lr, lr, r5
90024a72:	00db      	lsls	r3, r3, #3
90024a74:	b289      	uxth	r1, r1
90024a76:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024a7a:	b2db      	uxtb	r3, r3
90024a7c:	fb02 e200 	mla	r2, r2, r0, lr
90024a80:	fb03 c300 	mla	r3, r3, r0, ip
90024a84:	b292      	uxth	r2, r2
90024a86:	fa1f fc83 	uxth.w	ip, r3
90024a8a:	1c4b      	adds	r3, r1, #1
90024a8c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024a90:	f10c 0301 	add.w	r3, ip, #1
90024a94:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024a98:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90024a9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024aa0:	430b      	orrs	r3, r1
90024aa2:	1c51      	adds	r1, r2, #1
90024aa4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024aa8:	0952      	lsrs	r2, r2, #5
90024aaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024aae:	4313      	orrs	r3, r2
90024ab0:	803b      	strh	r3, [r7, #0]
90024ab2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024ab4:	3702      	adds	r7, #2
90024ab6:	441c      	add	r4, r3
90024ab8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024aba:	441e      	add	r6, r3
90024abc:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024abe:	3b01      	subs	r3, #1
90024ac0:	9318      	str	r3, [sp, #96]	; 0x60
90024ac2:	e698      	b.n	900247f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024ac4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024ac6:	441c      	add	r4, r3
90024ac8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024aca:	441e      	add	r6, r3
90024acc:	9b07      	ldr	r3, [sp, #28]
90024ace:	3b01      	subs	r3, #1
90024ad0:	9307      	str	r3, [sp, #28]
90024ad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024ad4:	3302      	adds	r3, #2
90024ad6:	930a      	str	r3, [sp, #40]	; 0x28
90024ad8:	e66d      	b.n	900247b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90024ada:	d023      	beq.n	90024b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90024adc:	9b07      	ldr	r3, [sp, #28]
90024ade:	9829      	ldr	r0, [sp, #164]	; 0xa4
90024ae0:	3b01      	subs	r3, #1
90024ae2:	fb00 4003 	mla	r0, r0, r3, r4
90024ae6:	1400      	asrs	r0, r0, #16
90024ae8:	f53f ae82 	bmi.w	900247f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024aec:	3901      	subs	r1, #1
90024aee:	4288      	cmp	r0, r1
90024af0:	f6bf ae7e 	bge.w	900247f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024af4:	992a      	ldr	r1, [sp, #168]	; 0xa8
90024af6:	fb01 6303 	mla	r3, r1, r3, r6
90024afa:	141b      	asrs	r3, r3, #16
90024afc:	f53f ae78 	bmi.w	900247f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024b00:	3a01      	subs	r2, #1
90024b02:	4293      	cmp	r3, r2
90024b04:	f6bf ae74 	bge.w	900247f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024b08:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024b0c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90024b10:	f1bb 0f00 	cmp.w	fp, #0
90024b14:	dc6c      	bgt.n	90024bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024b16:	9b07      	ldr	r3, [sp, #28]
90024b18:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024b1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024b1e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024b22:	930a      	str	r3, [sp, #40]	; 0x28
90024b24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024b26:	2b00      	cmp	r3, #0
90024b28:	f340 81b3 	ble.w	90024e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024b2c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024b30:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024b32:	ee30 0a04 	vadd.f32	s0, s0, s8
90024b36:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024b3a:	eef0 6a62 	vmov.f32	s13, s5
90024b3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024b42:	ee31 1a05 	vadd.f32	s2, s2, s10
90024b46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024b4a:	ee16 4a90 	vmov	r4, s13
90024b4e:	eef0 6a43 	vmov.f32	s13, s6
90024b52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024b56:	ee16 6a90 	vmov	r6, s13
90024b5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024b5e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024b62:	ee77 2a62 	vsub.f32	s5, s14, s5
90024b66:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024b6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024b6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024b72:	ee12 2a90 	vmov	r2, s5
90024b76:	eef0 2a47 	vmov.f32	s5, s14
90024b7a:	fb92 f3f3 	sdiv	r3, r2, r3
90024b7e:	ee13 2a10 	vmov	r2, s6
90024b82:	9329      	str	r3, [sp, #164]	; 0xa4
90024b84:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024b86:	eeb0 3a67 	vmov.f32	s6, s15
90024b8a:	fb92 f3f3 	sdiv	r3, r2, r3
90024b8e:	932a      	str	r3, [sp, #168]	; 0xa8
90024b90:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024b92:	9a19      	ldr	r2, [sp, #100]	; 0x64
90024b94:	3b01      	subs	r3, #1
90024b96:	9317      	str	r3, [sp, #92]	; 0x5c
90024b98:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024b9a:	bf08      	it	eq
90024b9c:	4613      	moveq	r3, r2
90024b9e:	9307      	str	r3, [sp, #28]
90024ba0:	e5fb      	b.n	9002479a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024ba2:	2900      	cmp	r1, #0
90024ba4:	f43f ae6b 	beq.w	9002487e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024ba8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90024bac:	9308      	str	r3, [sp, #32]
90024bae:	0e1b      	lsrs	r3, r3, #24
90024bb0:	9311      	str	r3, [sp, #68]	; 0x44
90024bb2:	e664      	b.n	9002487e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024bb4:	f112 0801 	adds.w	r8, r2, #1
90024bb8:	f53f af7b 	bmi.w	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024bbc:	4543      	cmp	r3, r8
90024bbe:	f6ff af78 	blt.w	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024bc2:	f11c 0801 	adds.w	r8, ip, #1
90024bc6:	f53f af74 	bmi.w	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024bca:	45c6      	cmp	lr, r8
90024bcc:	f6ff af71 	blt.w	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024bd0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90024bd2:	b21b      	sxth	r3, r3
90024bd4:	9201      	str	r2, [sp, #4]
90024bd6:	fa0f f28e 	sxth.w	r2, lr
90024bda:	e9cd 1504 	strd	r1, r5, [sp, #16]
90024bde:	e9cd c002 	strd	ip, r0, [sp, #8]
90024be2:	9200      	str	r2, [sp, #0]
90024be4:	4639      	mov	r1, r7
90024be6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024be8:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024bea:	f7ff fc79 	bl	900244e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90024bee:	e760      	b.n	90024ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024bf0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024bf2:	1427      	asrs	r7, r4, #16
90024bf4:	9d10      	ldr	r5, [sp, #64]	; 0x40
90024bf6:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024bfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024bfe:	1433      	asrs	r3, r6, #16
90024c00:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024c04:	fb01 7303 	mla	r3, r1, r3, r7
90024c08:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90024c0c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024c10:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024c14:	2a00      	cmp	r2, #0
90024c16:	f000 8133 	beq.w	90024e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90024c1a:	687d      	ldr	r5, [r7, #4]
90024c1c:	950e      	str	r5, [sp, #56]	; 0x38
90024c1e:	0e2d      	lsrs	r5, r5, #24
90024c20:	9515      	str	r5, [sp, #84]	; 0x54
90024c22:	b178      	cbz	r0, 90024c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024c24:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
90024c28:	3901      	subs	r1, #1
90024c2a:	0089      	lsls	r1, r1, #2
90024c2c:	3104      	adds	r1, #4
90024c2e:	eb07 0e01 	add.w	lr, r7, r1
90024c32:	5879      	ldr	r1, [r7, r1]
90024c34:	9109      	str	r1, [sp, #36]	; 0x24
90024c36:	0e09      	lsrs	r1, r1, #24
90024c38:	9112      	str	r1, [sp, #72]	; 0x48
90024c3a:	f8de 1004 	ldr.w	r1, [lr, #4]
90024c3e:	910f      	str	r1, [sp, #60]	; 0x3c
90024c40:	0e09      	lsrs	r1, r1, #24
90024c42:	9116      	str	r1, [sp, #88]	; 0x58
90024c44:	b292      	uxth	r2, r2
90024c46:	9915      	ldr	r1, [sp, #84]	; 0x54
90024c48:	b280      	uxth	r0, r0
90024c4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024c4c:	fb02 f800 	mul.w	r8, r2, r0
90024c50:	0112      	lsls	r2, r2, #4
90024c52:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024c56:	eba2 0e08 	sub.w	lr, r2, r8
90024c5a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90024c5e:	b280      	uxth	r0, r0
90024c60:	fa1f fe8e 	uxth.w	lr, lr
90024c64:	1a12      	subs	r2, r2, r0
90024c66:	fb0e f101 	mul.w	r1, lr, r1
90024c6a:	b292      	uxth	r2, r2
90024c6c:	fb02 110c 	mla	r1, r2, ip, r1
90024c70:	fb00 1105 	mla	r1, r0, r5, r1
90024c74:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024c76:	fb08 1105 	mla	r1, r8, r5, r1
90024c7a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024c7e:	2900      	cmp	r1, #0
90024c80:	f000 80f5 	beq.w	90024e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90024c84:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90024c88:	d019      	beq.n	90024cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90024c8a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90024c8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024c92:	fb0c fa0a 	mul.w	sl, ip, sl
90024c96:	fb0c fc03 	mul.w	ip, ip, r3
90024c9a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024c9e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024ca2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90024ca6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024caa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024cae:	4453      	add	r3, sl
90024cb0:	0a3f      	lsrs	r7, r7, #8
90024cb2:	0a1b      	lsrs	r3, r3, #8
90024cb4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024cb8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024cbc:	433b      	orrs	r3, r7
90024cbe:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024cc0:	2dff      	cmp	r5, #255	; 0xff
90024cc2:	d020      	beq.n	90024d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90024cc4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024cc6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024cca:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024ccc:	436f      	muls	r7, r5
90024cce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024cd0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024cd4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024cd8:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024cda:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024cde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024ce2:	fb05 fa0a 	mul.w	sl, r5, sl
90024ce6:	44bc      	add	ip, r7
90024ce8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024cec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024cf0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024cf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024cf8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024cfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024d00:	ea4c 050a 	orr.w	r5, ip, sl
90024d04:	950e      	str	r5, [sp, #56]	; 0x38
90024d06:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024d08:	2dff      	cmp	r5, #255	; 0xff
90024d0a:	d020      	beq.n	90024d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90024d0c:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024d0e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024d12:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024d14:	436f      	muls	r7, r5
90024d16:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024d18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024d1c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024d20:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024d22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024d26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024d2a:	fb05 fa0a 	mul.w	sl, r5, sl
90024d2e:	44bc      	add	ip, r7
90024d30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024d34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024d3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024d40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024d48:	ea4c 050a 	orr.w	r5, ip, sl
90024d4c:	9509      	str	r5, [sp, #36]	; 0x24
90024d4e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024d50:	2dff      	cmp	r5, #255	; 0xff
90024d52:	d020      	beq.n	90024d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90024d54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024d56:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024d5a:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024d5c:	436f      	muls	r7, r5
90024d5e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024d60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024d64:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024d68:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024d6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024d6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024d72:	fb05 fa0a 	mul.w	sl, r5, sl
90024d76:	44bc      	add	ip, r7
90024d78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024d7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024d84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024d88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024d8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024d90:	ea4c 050a 	orr.w	r5, ip, sl
90024d94:	950f      	str	r5, [sp, #60]	; 0x3c
90024d96:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024d98:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90024d9c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024da0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024da4:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024da6:	fb0e f707 	mul.w	r7, lr, r7
90024daa:	fb02 770c 	mla	r7, r2, ip, r7
90024dae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024db2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024db4:	fb00 770c 	mla	r7, r0, ip, r7
90024db8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024dbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024dbe:	fb08 770c 	mla	r7, r8, ip, r7
90024dc2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90024dc6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90024dc8:	fb0e fe0c 	mul.w	lr, lr, ip
90024dcc:	0a3f      	lsrs	r7, r7, #8
90024dce:	fb02 e303 	mla	r3, r2, r3, lr
90024dd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024dd4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90024dd8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90024ddc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024dde:	fb00 330a 	mla	r3, r0, sl, r3
90024de2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90024de6:	f8b9 0000 	ldrh.w	r0, [r9]
90024dea:	fb08 3c0c 	mla	ip, r8, ip, r3
90024dee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90024df0:	1202      	asrs	r2, r0, #8
90024df2:	4359      	muls	r1, r3
90024df4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024df8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90024dfc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024e00:	1c4b      	adds	r3, r1, #1
90024e02:	ea47 070c 	orr.w	r7, r7, ip
90024e06:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024e0a:	0c3b      	lsrs	r3, r7, #16
90024e0c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024e10:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024e14:	b2ff      	uxtb	r7, r7
90024e16:	fb13 f305 	smulbb	r3, r3, r5
90024e1a:	b2c9      	uxtb	r1, r1
90024e1c:	fb17 f705 	smulbb	r7, r7, r5
90024e20:	fb02 3201 	mla	r2, r2, r1, r3
90024e24:	10c3      	asrs	r3, r0, #3
90024e26:	fb1c fc05 	smulbb	ip, ip, r5
90024e2a:	00c0      	lsls	r0, r0, #3
90024e2c:	b292      	uxth	r2, r2
90024e2e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024e32:	b2c0      	uxtb	r0, r0
90024e34:	fb03 c301 	mla	r3, r3, r1, ip
90024e38:	fb00 7001 	mla	r0, r0, r1, r7
90024e3c:	1c51      	adds	r1, r2, #1
90024e3e:	b29b      	uxth	r3, r3
90024e40:	b280      	uxth	r0, r0
90024e42:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024e46:	f100 0c01 	add.w	ip, r0, #1
90024e4a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90024e4e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90024e52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024e56:	ea4c 0202 	orr.w	r2, ip, r2
90024e5a:	f103 0c01 	add.w	ip, r3, #1
90024e5e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024e62:	095b      	lsrs	r3, r3, #5
90024e64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024e68:	431a      	orrs	r2, r3
90024e6a:	f8a9 2000 	strh.w	r2, [r9]
90024e6e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024e70:	f109 0902 	add.w	r9, r9, #2
90024e74:	f10b 3bff 	add.w	fp, fp, #4294967295
90024e78:	441c      	add	r4, r3
90024e7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024e7c:	441e      	add	r6, r3
90024e7e:	e647      	b.n	90024b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90024e80:	2800      	cmp	r0, #0
90024e82:	f43f aedf 	beq.w	90024c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024e86:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90024e8a:	9109      	str	r1, [sp, #36]	; 0x24
90024e8c:	0e09      	lsrs	r1, r1, #24
90024e8e:	9112      	str	r1, [sp, #72]	; 0x48
90024e90:	e6d8      	b.n	90024c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024e92:	b01d      	add	sp, #116	; 0x74
90024e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90024e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024e9c:	b085      	sub	sp, #20
90024e9e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90024ea2:	9102      	str	r1, [sp, #8]
90024ea4:	2c00      	cmp	r4, #0
90024ea6:	fb04 7103 	mla	r1, r4, r3, r7
90024eaa:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90024eae:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90024eb2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90024eb6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024eba:	f2c0 810c 	blt.w	900250d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90024ebe:	45a6      	cmp	lr, r4
90024ec0:	f340 8109 	ble.w	900250d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90024ec4:	2f00      	cmp	r7, #0
90024ec6:	f2c0 8104 	blt.w	900250d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90024eca:	42bb      	cmp	r3, r7
90024ecc:	f340 8101 	ble.w	900250d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90024ed0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90024ed4:	1c7a      	adds	r2, r7, #1
90024ed6:	f100 8101 	bmi.w	900250dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90024eda:	4293      	cmp	r3, r2
90024edc:	f340 80fe 	ble.w	900250dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90024ee0:	2e00      	cmp	r6, #0
90024ee2:	f000 80fd 	beq.w	900250e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90024ee6:	f8dc 1004 	ldr.w	r1, [ip, #4]
90024eea:	3401      	adds	r4, #1
90024eec:	f100 80fc 	bmi.w	900250e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90024ef0:	45a6      	cmp	lr, r4
90024ef2:	f340 80f9 	ble.w	900250e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90024ef6:	2800      	cmp	r0, #0
90024ef8:	f000 80f9 	beq.w	900250ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90024efc:	2f00      	cmp	r7, #0
90024efe:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90024f02:	f2c0 80ef 	blt.w	900250e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90024f06:	42bb      	cmp	r3, r7
90024f08:	f340 80ec 	ble.w	900250e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90024f0c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024f10:	3701      	adds	r7, #1
90024f12:	f100 80ef 	bmi.w	900250f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90024f16:	42bb      	cmp	r3, r7
90024f18:	f340 80ec 	ble.w	900250f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90024f1c:	2e00      	cmp	r6, #0
90024f1e:	f000 80eb 	beq.w	900250f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90024f22:	6852      	ldr	r2, [r2, #4]
90024f24:	b2b6      	uxth	r6, r6
90024f26:	b280      	uxth	r0, r0
90024f28:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024f2c:	fb00 fe06 	mul.w	lr, r0, r6
90024f30:	0136      	lsls	r6, r6, #4
90024f32:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024f36:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024f3a:	eba6 070e 	sub.w	r7, r6, lr
90024f3e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90024f42:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024f46:	b280      	uxth	r0, r0
90024f48:	b2bf      	uxth	r7, r7
90024f4a:	1a1b      	subs	r3, r3, r0
90024f4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024f50:	fb07 f60a 	mul.w	r6, r7, sl
90024f54:	b29b      	uxth	r3, r3
90024f56:	fb0b 6603 	mla	r6, fp, r3, r6
90024f5a:	fb00 6609 	mla	r6, r0, r9, r6
90024f5e:	fb0e 6608 	mla	r6, lr, r8, r6
90024f62:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024f66:	9600      	str	r6, [sp, #0]
90024f68:	2e00      	cmp	r6, #0
90024f6a:	f000 80af 	beq.w	900250cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90024f6e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024f72:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90024f76:	9e02      	ldr	r6, [sp, #8]
90024f78:	fb0b fc0c 	mul.w	ip, fp, ip
90024f7c:	fb0b f505 	mul.w	r5, fp, r5
90024f80:	8836      	ldrh	r6, [r6, #0]
90024f82:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024f86:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024f8a:	9501      	str	r5, [sp, #4]
90024f8c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90024f90:	44dc      	add	ip, fp
90024f92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024f96:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90024f9a:	9503      	str	r5, [sp, #12]
90024f9c:	9d01      	ldr	r5, [sp, #4]
90024f9e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90024fa2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024fa6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90024faa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024fae:	fb0a fc0c 	mul.w	ip, sl, ip
90024fb2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024fb6:	fb0a fa01 	mul.w	sl, sl, r1
90024fba:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024fbe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024fc2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90024fc6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024fca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024fce:	4465      	add	r5, ip
90024fd0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024fd4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024fd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024fdc:	fb09 fc0c 	mul.w	ip, r9, ip
90024fe0:	0a2d      	lsrs	r5, r5, #8
90024fe2:	fb09 f904 	mul.w	r9, r9, r4
90024fe6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024fea:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024fee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024ff2:	f509 7480 	add.w	r4, r9, #256	; 0x100
90024ff6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024ffa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024ffe:	437d      	muls	r5, r7
90025000:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025004:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90025008:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002500c:	4461      	add	r1, ip
9002500e:	fb08 f404 	mul.w	r4, r8, r4
90025012:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025016:	fb08 f802 	mul.w	r8, r8, r2
9002501a:	0a09      	lsrs	r1, r1, #8
9002501c:	0a22      	lsrs	r2, r4, #8
9002501e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90025022:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90025026:	fb07 f70a 	mul.w	r7, r7, sl
9002502a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002502e:	4414      	add	r4, r2
90025030:	f508 7280 	add.w	r2, r8, #256	; 0x100
90025034:	0a24      	lsrs	r4, r4, #8
90025036:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002503a:	9a03      	ldr	r2, [sp, #12]
9002503c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90025040:	fb02 5503 	mla	r5, r2, r3, r5
90025044:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025048:	fb04 540e 	mla	r4, r4, lr, r5
9002504c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90025050:	fb01 4100 	mla	r1, r1, r0, r4
90025054:	0a09      	lsrs	r1, r1, #8
90025056:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002505a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9002505e:	fb03 7101 	mla	r1, r3, r1, r7
90025062:	9b00      	ldr	r3, [sp, #0]
90025064:	fb0e 1e08 	mla	lr, lr, r8, r1
90025068:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002506c:	43da      	mvns	r2, r3
9002506e:	1233      	asrs	r3, r6, #8
90025070:	fb00 e101 	mla	r1, r0, r1, lr
90025074:	10f0      	asrs	r0, r6, #3
90025076:	b2d2      	uxtb	r2, r2
90025078:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002507c:	0a09      	lsrs	r1, r1, #8
9002507e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025082:	00f6      	lsls	r6, r6, #3
90025084:	4353      	muls	r3, r2
90025086:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002508a:	4350      	muls	r0, r2
9002508c:	b2f6      	uxtb	r6, r6
9002508e:	4321      	orrs	r1, r4
90025090:	4356      	muls	r6, r2
90025092:	1c5a      	adds	r2, r3, #1
90025094:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025098:	0c0b      	lsrs	r3, r1, #16
9002509a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002509e:	1c42      	adds	r2, r0, #1
900250a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900250a4:	0a0a      	lsrs	r2, r1, #8
900250a6:	021b      	lsls	r3, r3, #8
900250a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900250ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
900250b0:	00d2      	lsls	r2, r2, #3
900250b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900250b6:	4313      	orrs	r3, r2
900250b8:	1c72      	adds	r2, r6, #1
900250ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900250be:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900250c2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900250c6:	4319      	orrs	r1, r3
900250c8:	9b02      	ldr	r3, [sp, #8]
900250ca:	8019      	strh	r1, [r3, #0]
900250cc:	b005      	add	sp, #20
900250ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900250d2:	2500      	movs	r5, #0
900250d4:	e6fe      	b.n	90024ed4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
900250d6:	2100      	movs	r1, #0
900250d8:	460d      	mov	r5, r1
900250da:	e706      	b.n	90024eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900250dc:	2100      	movs	r1, #0
900250de:	e704      	b.n	90024eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900250e0:	4631      	mov	r1, r6
900250e2:	e702      	b.n	90024eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
900250e4:	2400      	movs	r4, #0
900250e6:	e713      	b.n	90024f10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
900250e8:	2200      	movs	r2, #0
900250ea:	4614      	mov	r4, r2
900250ec:	e71a      	b.n	90024f24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900250ee:	4602      	mov	r2, r0
900250f0:	4604      	mov	r4, r0
900250f2:	e717      	b.n	90024f24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900250f4:	2200      	movs	r2, #0
900250f6:	e715      	b.n	90024f24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
900250f8:	4632      	mov	r2, r6
900250fa:	e713      	b.n	90024f24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

900250fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900250fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025100:	b09b      	sub	sp, #108	; 0x6c
90025102:	9218      	str	r2, [sp, #96]	; 0x60
90025104:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90025106:	9019      	str	r0, [sp, #100]	; 0x64
90025108:	9116      	str	r1, [sp, #88]	; 0x58
9002510a:	6850      	ldr	r0, [r2, #4]
9002510c:	9307      	str	r3, [sp, #28]
9002510e:	6812      	ldr	r2, [r2, #0]
90025110:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90025114:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90025118:	fb00 1303 	mla	r3, r0, r3, r1
9002511c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025120:	930a      	str	r3, [sp, #40]	; 0x28
90025122:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025124:	681b      	ldr	r3, [r3, #0]
90025126:	930f      	str	r3, [sp, #60]	; 0x3c
90025128:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002512a:	2b00      	cmp	r3, #0
9002512c:	dc03      	bgt.n	90025136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002512e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025130:	2b00      	cmp	r3, #0
90025132:	f340 8387 	ble.w	90025844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90025136:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025138:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002513c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025140:	1e48      	subs	r0, r1, #1
90025142:	1e57      	subs	r7, r2, #1
90025144:	9b07      	ldr	r3, [sp, #28]
90025146:	2b00      	cmp	r3, #0
90025148:	f340 8166 	ble.w	90025418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
9002514c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025150:	ea4f 4326 	mov.w	r3, r6, asr #16
90025154:	d406      	bmi.n	90025164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90025156:	4584      	cmp	ip, r0
90025158:	da04      	bge.n	90025164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002515a:	2b00      	cmp	r3, #0
9002515c:	db02      	blt.n	90025164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9002515e:	42bb      	cmp	r3, r7
90025160:	f2c0 815b 	blt.w	9002541a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90025164:	f11c 0c01 	adds.w	ip, ip, #1
90025168:	f100 814b 	bmi.w	90025402 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002516c:	4561      	cmp	r1, ip
9002516e:	f2c0 8148 	blt.w	90025402 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025172:	3301      	adds	r3, #1
90025174:	f100 8145 	bmi.w	90025402 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90025178:	429a      	cmp	r2, r3
9002517a:	f2c0 8142 	blt.w	90025402 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
9002517e:	9b07      	ldr	r3, [sp, #28]
90025180:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90025182:	9317      	str	r3, [sp, #92]	; 0x5c
90025184:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025186:	2b00      	cmp	r3, #0
90025188:	f340 8165 	ble.w	90025456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002518c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
9002518e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025192:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025194:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025198:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002519c:	1422      	asrs	r2, r4, #16
9002519e:	f3c6 3003 	ubfx	r0, r6, #12, #4
900251a2:	689b      	ldr	r3, [r3, #8]
900251a4:	f100 81d5 	bmi.w	90025552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900251a8:	f103 38ff 	add.w	r8, r3, #4294967295
900251ac:	4542      	cmp	r2, r8
900251ae:	f280 81d0 	bge.w	90025552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900251b2:	f1bc 0f00 	cmp.w	ip, #0
900251b6:	f2c0 81cc 	blt.w	90025552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900251ba:	f10e 38ff 	add.w	r8, lr, #4294967295
900251be:	45c4      	cmp	ip, r8
900251c0:	f280 81c7 	bge.w	90025552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900251c4:	b21b      	sxth	r3, r3
900251c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900251c8:	fb0c 2203 	mla	r2, ip, r3, r2
900251cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900251d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900251d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900251d8:	2900      	cmp	r1, #0
900251da:	f000 8182 	beq.w	900254e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900251de:	f8d8 5004 	ldr.w	r5, [r8, #4]
900251e2:	950b      	str	r5, [sp, #44]	; 0x2c
900251e4:	0e2d      	lsrs	r5, r5, #24
900251e6:	9512      	str	r5, [sp, #72]	; 0x48
900251e8:	b180      	cbz	r0, 9002520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900251ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
900251ee:	3b01      	subs	r3, #1
900251f0:	009b      	lsls	r3, r3, #2
900251f2:	3304      	adds	r3, #4
900251f4:	eb08 0c03 	add.w	ip, r8, r3
900251f8:	f858 3003 	ldr.w	r3, [r8, r3]
900251fc:	9308      	str	r3, [sp, #32]
900251fe:	0e1b      	lsrs	r3, r3, #24
90025200:	9310      	str	r3, [sp, #64]	; 0x40
90025202:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025206:	930c      	str	r3, [sp, #48]	; 0x30
90025208:	0e1b      	lsrs	r3, r3, #24
9002520a:	9313      	str	r3, [sp, #76]	; 0x4c
9002520c:	b289      	uxth	r1, r1
9002520e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025210:	b280      	uxth	r0, r0
90025212:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025214:	fb01 f900 	mul.w	r9, r1, r0
90025218:	0109      	lsls	r1, r1, #4
9002521a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002521e:	eba1 0809 	sub.w	r8, r1, r9
90025222:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90025226:	b280      	uxth	r0, r0
90025228:	fa1f f888 	uxth.w	r8, r8
9002522c:	1a09      	subs	r1, r1, r0
9002522e:	fb08 f303 	mul.w	r3, r8, r3
90025232:	b289      	uxth	r1, r1
90025234:	fb01 330e 	mla	r3, r1, lr, r3
90025238:	fb00 3305 	mla	r3, r0, r5, r3
9002523c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002523e:	fb09 3305 	mla	r3, r9, r5, r3
90025242:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025246:	2b00      	cmp	r3, #0
90025248:	f000 80d2 	beq.w	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002524c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90025250:	d01b      	beq.n	9002528a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90025252:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90025256:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002525a:	fb0e fa0a 	mul.w	sl, lr, sl
9002525e:	fb0e fe02 	mul.w	lr, lr, r2
90025262:	ea4f 221a 	mov.w	r2, sl, lsr #8
90025266:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002526a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9002526e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90025272:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025276:	4452      	add	r2, sl
90025278:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002527c:	0a12      	lsrs	r2, r2, #8
9002527e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025282:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90025286:	ea42 020c 	orr.w	r2, r2, ip
9002528a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002528c:	2dff      	cmp	r5, #255	; 0xff
9002528e:	d021      	beq.n	900252d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90025290:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025292:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025296:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025298:	fb05 fb0b 	mul.w	fp, r5, fp
9002529c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002529e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900252a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
900252a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900252a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900252ac:	fb05 fa0a 	mul.w	sl, r5, sl
900252b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900252b8:	44de      	add	lr, fp
900252ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900252be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900252c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900252c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900252ce:	ea4e 050a 	orr.w	r5, lr, sl
900252d2:	950b      	str	r5, [sp, #44]	; 0x2c
900252d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
900252d6:	2dff      	cmp	r5, #255	; 0xff
900252d8:	d021      	beq.n	9002531e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
900252da:	9d08      	ldr	r5, [sp, #32]
900252dc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900252e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
900252e2:	fb05 fb0b 	mul.w	fp, r5, fp
900252e6:	9d08      	ldr	r5, [sp, #32]
900252e8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900252ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
900252ee:	fb05 fa0e 	mul.w	sl, r5, lr
900252f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900252f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900252fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900252fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025302:	44de      	add	lr, fp
90025304:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025308:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002530c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025310:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025314:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025318:	ea4e 050a 	orr.w	r5, lr, sl
9002531c:	9508      	str	r5, [sp, #32]
9002531e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025320:	2dff      	cmp	r5, #255	; 0xff
90025322:	d021      	beq.n	90025368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90025324:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025326:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002532a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002532c:	fb05 fb0b 	mul.w	fp, r5, fp
90025330:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025332:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025336:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025338:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002533c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90025340:	fb05 fa0a 	mul.w	sl, r5, sl
90025344:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025348:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002534c:	44de      	add	lr, fp
9002534e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025352:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025356:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002535a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002535e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025362:	ea4e 050a 	orr.w	r5, lr, sl
90025366:	950c      	str	r5, [sp, #48]	; 0x30
90025368:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002536a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
9002536e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90025372:	2bff      	cmp	r3, #255	; 0xff
90025374:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025378:	9d08      	ldr	r5, [sp, #32]
9002537a:	fb08 fc0c 	mul.w	ip, r8, ip
9002537e:	fb01 cc0e 	mla	ip, r1, lr, ip
90025382:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025386:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025388:	fb00 cc0e 	mla	ip, r0, lr, ip
9002538c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025390:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025392:	fb09 cc0e 	mla	ip, r9, lr, ip
90025396:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002539a:	fb08 f80e 	mul.w	r8, r8, lr
9002539e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900253a2:	fb01 8202 	mla	r2, r1, r2, r8
900253a6:	9908      	ldr	r1, [sp, #32]
900253a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900253ac:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900253b0:	990c      	ldr	r1, [sp, #48]	; 0x30
900253b2:	fb00 220a 	mla	r2, r0, sl, r2
900253b6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
900253ba:	fb09 2900 	mla	r9, r9, r0, r2
900253be:	ea4f 2919 	mov.w	r9, r9, lsr #8
900253c2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900253c6:	ea4c 0c09 	orr.w	ip, ip, r9
900253ca:	ea4f 221c 	mov.w	r2, ip, lsr #8
900253ce:	f040 8091 	bne.w	900254f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900253d2:	ea4f 135c 	mov.w	r3, ip, lsr #5
900253d6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
900253da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900253de:	f022 0207 	bic.w	r2, r2, #7
900253e2:	431a      	orrs	r2, r3
900253e4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900253e8:	ea4c 0c02 	orr.w	ip, ip, r2
900253ec:	f8a7 c000 	strh.w	ip, [r7]
900253f0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900253f2:	3702      	adds	r7, #2
900253f4:	441c      	add	r4, r3
900253f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900253f8:	441e      	add	r6, r3
900253fa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900253fc:	3b01      	subs	r3, #1
900253fe:	9317      	str	r3, [sp, #92]	; 0x5c
90025400:	e6c0      	b.n	90025184 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90025402:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025404:	441c      	add	r4, r3
90025406:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025408:	441e      	add	r6, r3
9002540a:	9b07      	ldr	r3, [sp, #28]
9002540c:	3b01      	subs	r3, #1
9002540e:	9307      	str	r3, [sp, #28]
90025410:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025412:	3302      	adds	r3, #2
90025414:	930a      	str	r3, [sp, #40]	; 0x28
90025416:	e695      	b.n	90025144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025418:	d024      	beq.n	90025464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002541a:	9b07      	ldr	r3, [sp, #28]
9002541c:	9827      	ldr	r0, [sp, #156]	; 0x9c
9002541e:	3b01      	subs	r3, #1
90025420:	fb00 4003 	mla	r0, r0, r3, r4
90025424:	1400      	asrs	r0, r0, #16
90025426:	f53f aeaa 	bmi.w	9002517e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002542a:	3901      	subs	r1, #1
9002542c:	4288      	cmp	r0, r1
9002542e:	f6bf aea6 	bge.w	9002517e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025432:	9928      	ldr	r1, [sp, #160]	; 0xa0
90025434:	fb01 6303 	mla	r3, r1, r3, r6
90025438:	141b      	asrs	r3, r3, #16
9002543a:	f53f aea0 	bmi.w	9002517e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002543e:	3a01      	subs	r2, #1
90025440:	4293      	cmp	r3, r2
90025442:	f6bf ae9c 	bge.w	9002517e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90025446:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002544a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
9002544e:	f1bb 0f00 	cmp.w	fp, #0
90025452:	f300 809a 	bgt.w	9002558a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025456:	9b07      	ldr	r3, [sp, #28]
90025458:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002545c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002545e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025462:	930a      	str	r3, [sp, #40]	; 0x28
90025464:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025466:	2b00      	cmp	r3, #0
90025468:	f340 81ec 	ble.w	90025844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
9002546c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025470:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025472:	ee30 0a04 	vadd.f32	s0, s0, s8
90025476:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002547a:	eef0 6a62 	vmov.f32	s13, s5
9002547e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025482:	ee31 1a05 	vadd.f32	s2, s2, s10
90025486:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002548a:	ee16 4a90 	vmov	r4, s13
9002548e:	eef0 6a43 	vmov.f32	s13, s6
90025492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025496:	ee16 6a90 	vmov	r6, s13
9002549a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002549e:	ee61 7a27 	vmul.f32	s15, s2, s15
900254a2:	ee77 2a62 	vsub.f32	s5, s14, s5
900254a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900254aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900254ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900254b2:	ee12 2a90 	vmov	r2, s5
900254b6:	eef0 2a47 	vmov.f32	s5, s14
900254ba:	fb92 f3f3 	sdiv	r3, r2, r3
900254be:	ee13 2a10 	vmov	r2, s6
900254c2:	9327      	str	r3, [sp, #156]	; 0x9c
900254c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900254c6:	eeb0 3a67 	vmov.f32	s6, s15
900254ca:	fb92 f3f3 	sdiv	r3, r2, r3
900254ce:	9328      	str	r3, [sp, #160]	; 0xa0
900254d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
900254d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
900254d4:	3b01      	subs	r3, #1
900254d6:	9316      	str	r3, [sp, #88]	; 0x58
900254d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900254da:	bf08      	it	eq
900254dc:	4613      	moveq	r3, r2
900254de:	9307      	str	r3, [sp, #28]
900254e0:	e622      	b.n	90025128 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900254e2:	2800      	cmp	r0, #0
900254e4:	f43f ae92 	beq.w	9002520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900254e8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900254ec:	9308      	str	r3, [sp, #32]
900254ee:	0e1b      	lsrs	r3, r3, #24
900254f0:	9310      	str	r3, [sp, #64]	; 0x40
900254f2:	e68b      	b.n	9002520c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900254f4:	8839      	ldrh	r1, [r7, #0]
900254f6:	43db      	mvns	r3, r3
900254f8:	4dd4      	ldr	r5, [pc, #848]	; (9002584c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900254fa:	ea4f 2e21 	mov.w	lr, r1, asr #8
900254fe:	fa5f f883 	uxtb.w	r8, r3
90025502:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90025506:	10c8      	asrs	r0, r1, #3
90025508:	00cb      	lsls	r3, r1, #3
9002550a:	fb0e fe08 	mul.w	lr, lr, r8
9002550e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025512:	b2db      	uxtb	r3, r3
90025514:	f10e 0101 	add.w	r1, lr, #1
90025518:	fb00 f008 	mul.w	r0, r0, r8
9002551c:	fb03 f308 	mul.w	r3, r3, r8
90025520:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90025524:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025528:	eb01 211e 	add.w	r1, r1, lr, lsr #8
9002552c:	f100 0e01 	add.w	lr, r0, #1
90025530:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90025534:	b2c9      	uxtb	r1, r1
90025536:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002553a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002553e:	00d2      	lsls	r2, r2, #3
90025540:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025544:	430a      	orrs	r2, r1
90025546:	1c59      	adds	r1, r3, #1
90025548:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002554c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90025550:	e748      	b.n	900253e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90025552:	f112 0801 	adds.w	r8, r2, #1
90025556:	f53f af4b 	bmi.w	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002555a:	4543      	cmp	r3, r8
9002555c:	f6ff af48 	blt.w	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025560:	f11c 0801 	adds.w	r8, ip, #1
90025564:	f53f af44 	bmi.w	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90025568:	45c6      	cmp	lr, r8
9002556a:	f6ff af41 	blt.w	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002556e:	b21b      	sxth	r3, r3
90025570:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90025574:	fa0f f28e 	sxth.w	r2, lr
90025578:	e9cd 1003 	strd	r1, r0, [sp, #12]
9002557c:	9200      	str	r2, [sp, #0]
9002557e:	4639      	mov	r1, r7
90025580:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025582:	9819      	ldr	r0, [sp, #100]	; 0x64
90025584:	f7ff fc88 	bl	90024e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90025588:	e732      	b.n	900253f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002558a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002558c:	1421      	asrs	r1, r4, #16
9002558e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025590:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025594:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90025598:	1433      	asrs	r3, r6, #16
9002559a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002559e:	fb07 1303 	mla	r3, r7, r3, r1
900255a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
900255a4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900255a8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900255ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900255b0:	2a00      	cmp	r2, #0
900255b2:	f000 8108 	beq.w	900257c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900255b6:	684d      	ldr	r5, [r1, #4]
900255b8:	950d      	str	r5, [sp, #52]	; 0x34
900255ba:	0e2d      	lsrs	r5, r5, #24
900255bc:	9514      	str	r5, [sp, #80]	; 0x50
900255be:	b178      	cbz	r0, 900255e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900255c0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
900255c4:	3f01      	subs	r7, #1
900255c6:	00bf      	lsls	r7, r7, #2
900255c8:	3704      	adds	r7, #4
900255ca:	eb01 0e07 	add.w	lr, r1, r7
900255ce:	59c9      	ldr	r1, [r1, r7]
900255d0:	9109      	str	r1, [sp, #36]	; 0x24
900255d2:	0e09      	lsrs	r1, r1, #24
900255d4:	9111      	str	r1, [sp, #68]	; 0x44
900255d6:	f8de 1004 	ldr.w	r1, [lr, #4]
900255da:	910e      	str	r1, [sp, #56]	; 0x38
900255dc:	0e09      	lsrs	r1, r1, #24
900255de:	9115      	str	r1, [sp, #84]	; 0x54
900255e0:	b292      	uxth	r2, r2
900255e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900255e4:	b280      	uxth	r0, r0
900255e6:	fb02 f900 	mul.w	r9, r2, r0
900255ea:	0112      	lsls	r2, r2, #4
900255ec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900255f0:	eba2 0e09 	sub.w	lr, r2, r9
900255f4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
900255f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900255fa:	b280      	uxth	r0, r0
900255fc:	fa1f fe8e 	uxth.w	lr, lr
90025600:	1a09      	subs	r1, r1, r0
90025602:	fb0e f202 	mul.w	r2, lr, r2
90025606:	b289      	uxth	r1, r1
90025608:	fb01 220c 	mla	r2, r1, ip, r2
9002560c:	fb00 2205 	mla	r2, r0, r5, r2
90025610:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025612:	fb09 2205 	mla	r2, r9, r5, r2
90025616:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002561a:	2a00      	cmp	r2, #0
9002561c:	f000 80ca 	beq.w	900257b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025620:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90025624:	d019      	beq.n	9002565a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025626:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002562a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002562e:	fb0c fa0a 	mul.w	sl, ip, sl
90025632:	fb0c fc03 	mul.w	ip, ip, r3
90025636:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002563a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002563e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90025642:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025646:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002564a:	4453      	add	r3, sl
9002564c:	0a3f      	lsrs	r7, r7, #8
9002564e:	0a1b      	lsrs	r3, r3, #8
90025650:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90025654:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025658:	433b      	orrs	r3, r7
9002565a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002565c:	2dff      	cmp	r5, #255	; 0xff
9002565e:	d020      	beq.n	900256a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90025660:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025662:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025666:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025668:	436f      	muls	r7, r5
9002566a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002566c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025670:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025674:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025676:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002567a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002567e:	fb05 fa0a 	mul.w	sl, r5, sl
90025682:	44bc      	add	ip, r7
90025684:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025688:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002568c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025690:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025694:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025698:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002569c:	ea4c 050a 	orr.w	r5, ip, sl
900256a0:	950d      	str	r5, [sp, #52]	; 0x34
900256a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900256a4:	2dff      	cmp	r5, #255	; 0xff
900256a6:	d020      	beq.n	900256ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900256a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
900256aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900256ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
900256b0:	436f      	muls	r7, r5
900256b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
900256b4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900256b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
900256ba:	fb05 fa0c 	mul.w	sl, r5, ip
900256be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900256c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900256c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900256ca:	44bc      	add	ip, r7
900256cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900256d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900256d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900256d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900256dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900256e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900256e4:	ea4c 050a 	orr.w	r5, ip, sl
900256e8:	9509      	str	r5, [sp, #36]	; 0x24
900256ea:	9d15      	ldr	r5, [sp, #84]	; 0x54
900256ec:	2dff      	cmp	r5, #255	; 0xff
900256ee:	d020      	beq.n	90025732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900256f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900256f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900256f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
900256f8:	436f      	muls	r7, r5
900256fa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900256fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025700:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025704:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025706:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002570a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002570e:	fb05 fa0a 	mul.w	sl, r5, sl
90025712:	44bc      	add	ip, r7
90025714:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025718:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002571c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025720:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025724:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025728:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002572c:	ea4c 050a 	orr.w	r5, ip, sl
90025730:	950e      	str	r5, [sp, #56]	; 0x38
90025732:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025734:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90025738:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002573c:	2aff      	cmp	r2, #255	; 0xff
9002573e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025742:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025744:	fb0e f707 	mul.w	r7, lr, r7
90025748:	fb01 770c 	mla	r7, r1, ip, r7
9002574c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025750:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025752:	fb00 770c 	mla	r7, r0, ip, r7
90025756:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002575a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002575c:	fb09 770c 	mla	r7, r9, ip, r7
90025760:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90025764:	fb0e fe0c 	mul.w	lr, lr, ip
90025768:	ea4f 2717 	mov.w	r7, r7, lsr #8
9002576c:	fb01 e303 	mla	r3, r1, r3, lr
90025770:	9909      	ldr	r1, [sp, #36]	; 0x24
90025772:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90025776:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002577a:	990e      	ldr	r1, [sp, #56]	; 0x38
9002577c:	fb00 330a 	mla	r3, r0, sl, r3
90025780:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90025784:	fb09 3c0c 	mla	ip, r9, ip, r3
90025788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002578c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025790:	ea47 070c 	orr.w	r7, r7, ip
90025794:	ea4f 2317 	mov.w	r3, r7, lsr #8
90025798:	d11e      	bne.n	900257d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002579a:	097a      	lsrs	r2, r7, #5
9002579c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
900257a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900257a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900257a8:	f023 0307 	bic.w	r3, r3, #7
900257ac:	4313      	orrs	r3, r2
900257ae:	431f      	orrs	r7, r3
900257b0:	f8a8 7000 	strh.w	r7, [r8]
900257b4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900257b6:	f108 0802 	add.w	r8, r8, #2
900257ba:	f10b 3bff 	add.w	fp, fp, #4294967295
900257be:	441c      	add	r4, r3
900257c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900257c2:	441e      	add	r6, r3
900257c4:	e643      	b.n	9002544e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900257c6:	2800      	cmp	r0, #0
900257c8:	f43f af0a 	beq.w	900255e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900257cc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
900257d0:	9109      	str	r1, [sp, #36]	; 0x24
900257d2:	0e09      	lsrs	r1, r1, #24
900257d4:	9111      	str	r1, [sp, #68]	; 0x44
900257d6:	e703      	b.n	900255e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900257d8:	f8b8 1000 	ldrh.w	r1, [r8]
900257dc:	43d2      	mvns	r2, r2
900257de:	ea4f 2c21 	mov.w	ip, r1, asr #8
900257e2:	fa5f fe82 	uxtb.w	lr, r2
900257e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900257ea:	10c8      	asrs	r0, r1, #3
900257ec:	00ca      	lsls	r2, r1, #3
900257ee:	fb0c fc0e 	mul.w	ip, ip, lr
900257f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900257f6:	b2d2      	uxtb	r2, r2
900257f8:	f10c 0101 	add.w	r1, ip, #1
900257fc:	fb00 f00e 	mul.w	r0, r0, lr
90025800:	fb02 f20e 	mul.w	r2, r2, lr
90025804:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025808:	0c39      	lsrs	r1, r7, #16
9002580a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002580e:	490f      	ldr	r1, [pc, #60]	; (9002584c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025810:	fa5f fc8c 	uxtb.w	ip, ip
90025814:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025818:	1c41      	adds	r1, r0, #1
9002581a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002581e:	1c51      	adds	r1, r2, #1
90025820:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025824:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025828:	00c0      	lsls	r0, r0, #3
9002582a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002582e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025832:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025836:	ea4c 0c00 	orr.w	ip, ip, r0
9002583a:	ea47 0c0c 	orr.w	ip, r7, ip
9002583e:	f8a8 c000 	strh.w	ip, [r8]
90025842:	e7b7      	b.n	900257b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025844:	b01b      	add	sp, #108	; 0x6c
90025846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002584a:	bf00      	nop
9002584c:	fffff800 	.word	0xfffff800

90025850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90025850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025854:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90025858:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
9002585c:	2d00      	cmp	r5, #0
9002585e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90025862:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025866:	fb05 0e03 	mla	lr, r5, r3, r0
9002586a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9002586e:	f2c0 808c 	blt.w	9002598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025872:	45a9      	cmp	r9, r5
90025874:	f340 8089 	ble.w	9002598a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025878:	2800      	cmp	r0, #0
9002587a:	f2c0 8084 	blt.w	90025986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002587e:	4580      	cmp	r8, r0
90025880:	f340 8081 	ble.w	90025986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025884:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025888:	f01e 0f01 	tst.w	lr, #1
9002588c:	5d16      	ldrb	r6, [r2, r4]
9002588e:	bf0c      	ite	eq
90025890:	f006 060f 	andeq.w	r6, r6, #15
90025894:	1136      	asrne	r6, r6, #4
90025896:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002589a:	b2f6      	uxtb	r6, r6
9002589c:	1c44      	adds	r4, r0, #1
9002589e:	d477      	bmi.n	90025990 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900258a0:	45a0      	cmp	r8, r4
900258a2:	dd75      	ble.n	90025990 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900258a4:	2f00      	cmp	r7, #0
900258a6:	d075      	beq.n	90025994 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900258a8:	f10e 0a01 	add.w	sl, lr, #1
900258ac:	ea4f 045a 	mov.w	r4, sl, lsr #1
900258b0:	f01a 0f01 	tst.w	sl, #1
900258b4:	5d14      	ldrb	r4, [r2, r4]
900258b6:	bf0c      	ite	eq
900258b8:	f004 040f 	andeq.w	r4, r4, #15
900258bc:	1124      	asrne	r4, r4, #4
900258be:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900258c2:	b2e4      	uxtb	r4, r4
900258c4:	3501      	adds	r5, #1
900258c6:	d469      	bmi.n	9002599c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900258c8:	45a9      	cmp	r9, r5
900258ca:	dd67      	ble.n	9002599c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900258cc:	f1bc 0f00 	cmp.w	ip, #0
900258d0:	d067      	beq.n	900259a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
900258d2:	2800      	cmp	r0, #0
900258d4:	db60      	blt.n	90025998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900258d6:	4580      	cmp	r8, r0
900258d8:	dd5e      	ble.n	90025998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900258da:	eb03 090e 	add.w	r9, r3, lr
900258de:	ea4f 0559 	mov.w	r5, r9, lsr #1
900258e2:	f019 0f01 	tst.w	r9, #1
900258e6:	5d55      	ldrb	r5, [r2, r5]
900258e8:	bf0c      	ite	eq
900258ea:	f005 050f 	andeq.w	r5, r5, #15
900258ee:	112d      	asrne	r5, r5, #4
900258f0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900258f4:	b2ed      	uxtb	r5, r5
900258f6:	3001      	adds	r0, #1
900258f8:	d456      	bmi.n	900259a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900258fa:	4580      	cmp	r8, r0
900258fc:	dd54      	ble.n	900259a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900258fe:	2f00      	cmp	r7, #0
90025900:	d054      	beq.n	900259ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90025902:	3301      	adds	r3, #1
90025904:	449e      	add	lr, r3
90025906:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002590a:	f01e 0f01 	tst.w	lr, #1
9002590e:	5cd0      	ldrb	r0, [r2, r3]
90025910:	bf0c      	ite	eq
90025912:	f000 000f 	andeq.w	r0, r0, #15
90025916:	1100      	asrne	r0, r0, #4
90025918:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002591c:	b2c3      	uxtb	r3, r0
9002591e:	b2ba      	uxth	r2, r7
90025920:	fa1f fc8c 	uxth.w	ip, ip
90025924:	fb02 f00c 	mul.w	r0, r2, ip
90025928:	0112      	lsls	r2, r2, #4
9002592a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002592e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90025932:	1a12      	subs	r2, r2, r0
90025934:	fa1f fc8c 	uxth.w	ip, ip
90025938:	b292      	uxth	r2, r2
9002593a:	eba7 070c 	sub.w	r7, r7, ip
9002593e:	4362      	muls	r2, r4
90025940:	b2bf      	uxth	r7, r7
90025942:	fb06 2207 	mla	r2, r6, r7, r2
90025946:	fb0c 2505 	mla	r5, ip, r5, r2
9002594a:	fb00 5303 	mla	r3, r0, r3, r5
9002594e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025952:	b1b3      	cbz	r3, 90025982 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025954:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
90025958:	435a      	muls	r2, r3
9002595a:	1c53      	adds	r3, r2, #1
9002595c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025960:	4a2d      	ldr	r2, [pc, #180]	; (90025a18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90025962:	121b      	asrs	r3, r3, #8
90025964:	6812      	ldr	r2, [r2, #0]
90025966:	2bff      	cmp	r3, #255	; 0xff
90025968:	ea4f 2612 	mov.w	r6, r2, lsr #8
9002596c:	d120      	bne.n	900259b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
9002596e:	0950      	lsrs	r0, r2, #5
90025970:	4b2a      	ldr	r3, [pc, #168]	; (90025a1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90025972:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025976:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002597a:	4033      	ands	r3, r6
9002597c:	4318      	orrs	r0, r3
9002597e:	4302      	orrs	r2, r0
90025980:	800a      	strh	r2, [r1, #0]
90025982:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025986:	2600      	movs	r6, #0
90025988:	e788      	b.n	9002589c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002598a:	2400      	movs	r4, #0
9002598c:	4626      	mov	r6, r4
9002598e:	e799      	b.n	900258c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025990:	2400      	movs	r4, #0
90025992:	e797      	b.n	900258c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025994:	463c      	mov	r4, r7
90025996:	e795      	b.n	900258c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025998:	2500      	movs	r5, #0
9002599a:	e7ac      	b.n	900258f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
9002599c:	2300      	movs	r3, #0
9002599e:	461d      	mov	r5, r3
900259a0:	e7bd      	b.n	9002591e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900259a2:	4663      	mov	r3, ip
900259a4:	4665      	mov	r5, ip
900259a6:	e7ba      	b.n	9002591e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900259a8:	2300      	movs	r3, #0
900259aa:	e7b8      	b.n	9002591e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900259ac:	463b      	mov	r3, r7
900259ae:	e7b6      	b.n	9002591e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900259b0:	880d      	ldrh	r5, [r1, #0]
900259b2:	b29f      	uxth	r7, r3
900259b4:	f3c2 4007 	ubfx	r0, r2, #16, #8
900259b8:	43db      	mvns	r3, r3
900259ba:	122c      	asrs	r4, r5, #8
900259bc:	fb10 f007 	smulbb	r0, r0, r7
900259c0:	b2db      	uxtb	r3, r3
900259c2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900259c6:	b2f6      	uxtb	r6, r6
900259c8:	b2d2      	uxtb	r2, r2
900259ca:	fb04 0403 	mla	r4, r4, r3, r0
900259ce:	10e8      	asrs	r0, r5, #3
900259d0:	fb12 f207 	smulbb	r2, r2, r7
900259d4:	00ed      	lsls	r5, r5, #3
900259d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900259da:	b2a4      	uxth	r4, r4
900259dc:	fb16 f607 	smulbb	r6, r6, r7
900259e0:	b2ed      	uxtb	r5, r5
900259e2:	fb00 6603 	mla	r6, r0, r3, r6
900259e6:	fb05 2303 	mla	r3, r5, r3, r2
900259ea:	b2b0      	uxth	r0, r6
900259ec:	b29a      	uxth	r2, r3
900259ee:	1c63      	adds	r3, r4, #1
900259f0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900259f4:	1c53      	adds	r3, r2, #1
900259f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900259fa:	1c42      	adds	r2, r0, #1
900259fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025a00:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025a04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025a08:	0940      	lsrs	r0, r0, #5
90025a0a:	4323      	orrs	r3, r4
90025a0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025a10:	4303      	orrs	r3, r0
90025a12:	800b      	strh	r3, [r1, #0]
90025a14:	e7b5      	b.n	90025982 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025a16:	bf00      	nop
90025a18:	24039714 	.word	0x24039714
90025a1c:	00fff800 	.word	0x00fff800

90025a20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025a24:	b097      	sub	sp, #92	; 0x5c
90025a26:	9214      	str	r2, [sp, #80]	; 0x50
90025a28:	9309      	str	r3, [sp, #36]	; 0x24
90025a2a:	9a25      	ldr	r2, [sp, #148]	; 0x94
90025a2c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90025a30:	9015      	str	r0, [sp, #84]	; 0x54
90025a32:	910d      	str	r1, [sp, #52]	; 0x34
90025a34:	6850      	ldr	r0, [r2, #4]
90025a36:	930f      	str	r3, [sp, #60]	; 0x3c
90025a38:	6812      	ldr	r2, [r2, #0]
90025a3a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90025a3e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90025a42:	fb00 1303 	mla	r3, r0, r3, r1
90025a46:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025a4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025a4c:	689b      	ldr	r3, [r3, #8]
90025a4e:	3301      	adds	r3, #1
90025a50:	f023 0301 	bic.w	r3, r3, #1
90025a54:	930a      	str	r3, [sp, #40]	; 0x28
90025a56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025a58:	681f      	ldr	r7, [r3, #0]
90025a5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025a5c:	2b00      	cmp	r3, #0
90025a5e:	dc03      	bgt.n	90025a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025a60:	9b14      	ldr	r3, [sp, #80]	; 0x50
90025a62:	2b00      	cmp	r3, #0
90025a64:	f340 8289 	ble.w	90025f7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025a68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025a6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025a6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025a72:	1e48      	subs	r0, r1, #1
90025a74:	f102 3cff 	add.w	ip, r2, #4294967295
90025a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a7a:	2b00      	cmp	r3, #0
90025a7c:	f340 80c5 	ble.w	90025c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90025a80:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025a84:	ea4f 4326 	mov.w	r3, r6, asr #16
90025a88:	d406      	bmi.n	90025a98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025a8a:	4586      	cmp	lr, r0
90025a8c:	da04      	bge.n	90025a98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025a8e:	2b00      	cmp	r3, #0
90025a90:	db02      	blt.n	90025a98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025a92:	4563      	cmp	r3, ip
90025a94:	f2c0 80ba 	blt.w	90025c0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025a98:	f11e 0e01 	adds.w	lr, lr, #1
90025a9c:	f100 80ab 	bmi.w	90025bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025aa0:	4571      	cmp	r1, lr
90025aa2:	f2c0 80a8 	blt.w	90025bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025aa6:	3301      	adds	r3, #1
90025aa8:	f100 80a5 	bmi.w	90025bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025aac:	429a      	cmp	r2, r3
90025aae:	f2c0 80a2 	blt.w	90025bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025ab4:	46c8      	mov	r8, r9
90025ab6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
90025aba:	930e      	str	r3, [sp, #56]	; 0x38
90025abc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025abe:	2b00      	cmp	r3, #0
90025ac0:	f340 80c4 	ble.w	90025c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90025ac4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025ac6:	1430      	asrs	r0, r6, #16
90025ac8:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025acc:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025ad0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025ad4:	1423      	asrs	r3, r4, #16
90025ad6:	f100 814f 	bmi.w	90025d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025ada:	f10c 3bff 	add.w	fp, ip, #4294967295
90025ade:	455b      	cmp	r3, fp
90025ae0:	f280 814a 	bge.w	90025d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025ae4:	2800      	cmp	r0, #0
90025ae6:	f2c0 8147 	blt.w	90025d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025aea:	f10e 3bff 	add.w	fp, lr, #4294967295
90025aee:	4558      	cmp	r0, fp
90025af0:	f280 8142 	bge.w	90025d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025af4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90025af6:	fb00 3305 	mla	r3, r0, r5, r3
90025afa:	0858      	lsrs	r0, r3, #1
90025afc:	07dd      	lsls	r5, r3, #31
90025afe:	f817 c000 	ldrb.w	ip, [r7, r0]
90025b02:	bf54      	ite	pl
90025b04:	f00c 0c0f 	andpl.w	ip, ip, #15
90025b08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025b0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025b10:	fa5f fc8c 	uxtb.w	ip, ip
90025b14:	2a00      	cmp	r2, #0
90025b16:	f000 80dd 	beq.w	90025cd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90025b1a:	1c58      	adds	r0, r3, #1
90025b1c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025b20:	07c0      	lsls	r0, r0, #31
90025b22:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025b26:	bf54      	ite	pl
90025b28:	f00e 0e0f 	andpl.w	lr, lr, #15
90025b2c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90025b30:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90025b34:	fa5f f08e 	uxtb.w	r0, lr
90025b38:	9010      	str	r0, [sp, #64]	; 0x40
90025b3a:	b1d9      	cbz	r1, 90025b74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025b3c:	4453      	add	r3, sl
90025b3e:	0858      	lsrs	r0, r3, #1
90025b40:	07dd      	lsls	r5, r3, #31
90025b42:	f103 0301 	add.w	r3, r3, #1
90025b46:	5c38      	ldrb	r0, [r7, r0]
90025b48:	bf54      	ite	pl
90025b4a:	f000 000f 	andpl.w	r0, r0, #15
90025b4e:	1100      	asrmi	r0, r0, #4
90025b50:	07dd      	lsls	r5, r3, #31
90025b52:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025b56:	b2c0      	uxtb	r0, r0
90025b58:	900b      	str	r0, [sp, #44]	; 0x2c
90025b5a:	ea4f 0053 	mov.w	r0, r3, lsr #1
90025b5e:	f817 e000 	ldrb.w	lr, [r7, r0]
90025b62:	bf54      	ite	pl
90025b64:	f00e 030f 	andpl.w	r3, lr, #15
90025b68:	ea4f 132e 	movmi.w	r3, lr, asr #4
90025b6c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025b70:	b2db      	uxtb	r3, r3
90025b72:	9311      	str	r3, [sp, #68]	; 0x44
90025b74:	b292      	uxth	r2, r2
90025b76:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025b78:	b289      	uxth	r1, r1
90025b7a:	fb02 f301 	mul.w	r3, r2, r1
90025b7e:	0112      	lsls	r2, r2, #4
90025b80:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90025b84:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90025b88:	1ad2      	subs	r2, r2, r3
90025b8a:	b289      	uxth	r1, r1
90025b8c:	b292      	uxth	r2, r2
90025b8e:	1a40      	subs	r0, r0, r1
90025b90:	436a      	muls	r2, r5
90025b92:	b280      	uxth	r0, r0
90025b94:	fb0c 2c00 	mla	ip, ip, r0, r2
90025b98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90025b9a:	fb01 c102 	mla	r1, r1, r2, ip
90025b9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90025ba0:	fb03 1302 	mla	r3, r3, r2, r1
90025ba4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025ba8:	b1db      	cbz	r3, 90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025baa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025bac:	4353      	muls	r3, r2
90025bae:	1c5a      	adds	r2, r3, #1
90025bb0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025bb4:	4ac6      	ldr	r2, [pc, #792]	; (90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025bb6:	121b      	asrs	r3, r3, #8
90025bb8:	6812      	ldr	r2, [r2, #0]
90025bba:	2bff      	cmp	r3, #255	; 0xff
90025bbc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025bc0:	f040 8099 	bne.w	90025cf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90025bc4:	0953      	lsrs	r3, r2, #5
90025bc6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90025bca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025bce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025bd2:	f02c 0c07 	bic.w	ip, ip, #7
90025bd6:	ea43 0c0c 	orr.w	ip, r3, ip
90025bda:	ea4c 0202 	orr.w	r2, ip, r2
90025bde:	f8a8 2000 	strh.w	r2, [r8]
90025be2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025be4:	f108 0802 	add.w	r8, r8, #2
90025be8:	441c      	add	r4, r3
90025bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025bec:	441e      	add	r6, r3
90025bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025bf0:	3b01      	subs	r3, #1
90025bf2:	930e      	str	r3, [sp, #56]	; 0x38
90025bf4:	e762      	b.n	90025abc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90025bf6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025bf8:	f109 0902 	add.w	r9, r9, #2
90025bfc:	441c      	add	r4, r3
90025bfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025c00:	441e      	add	r6, r3
90025c02:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c04:	3b01      	subs	r3, #1
90025c06:	9309      	str	r3, [sp, #36]	; 0x24
90025c08:	e736      	b.n	90025a78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025c0a:	d024      	beq.n	90025c56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90025c0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c0e:	9823      	ldr	r0, [sp, #140]	; 0x8c
90025c10:	3b01      	subs	r3, #1
90025c12:	fb00 4003 	mla	r0, r0, r3, r4
90025c16:	1400      	asrs	r0, r0, #16
90025c18:	f53f af4b 	bmi.w	90025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025c1c:	3901      	subs	r1, #1
90025c1e:	4288      	cmp	r0, r1
90025c20:	f6bf af47 	bge.w	90025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025c24:	9924      	ldr	r1, [sp, #144]	; 0x90
90025c26:	fb01 6303 	mla	r3, r1, r3, r6
90025c2a:	141b      	asrs	r3, r3, #16
90025c2c:	f53f af41 	bmi.w	90025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025c30:	3a01      	subs	r2, #1
90025c32:	4293      	cmp	r3, r2
90025c34:	f6bf af3d 	bge.w	90025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025c38:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90025c3c:	46c8      	mov	r8, r9
90025c3e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90025c42:	930e      	str	r3, [sp, #56]	; 0x38
90025c44:	f1bb 0f00 	cmp.w	fp, #0
90025c48:	f300 80b7 	bgt.w	90025dba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90025c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c4e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025c52:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90025c56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025c58:	2b00      	cmp	r3, #0
90025c5a:	f340 818e 	ble.w	90025f7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025c5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025c62:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025c64:	ee30 0a04 	vadd.f32	s0, s0, s8
90025c68:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025c6c:	eef0 6a62 	vmov.f32	s13, s5
90025c70:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025c74:	ee31 1a05 	vadd.f32	s2, s2, s10
90025c78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025c7c:	ee16 4a90 	vmov	r4, s13
90025c80:	eef0 6a43 	vmov.f32	s13, s6
90025c84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025c88:	ee16 6a90 	vmov	r6, s13
90025c8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025c90:	ee61 7a27 	vmul.f32	s15, s2, s15
90025c94:	ee77 2a62 	vsub.f32	s5, s14, s5
90025c98:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025c9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ca0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025ca4:	ee12 2a90 	vmov	r2, s5
90025ca8:	eef0 2a47 	vmov.f32	s5, s14
90025cac:	fb92 f3f3 	sdiv	r3, r2, r3
90025cb0:	ee13 2a10 	vmov	r2, s6
90025cb4:	9323      	str	r3, [sp, #140]	; 0x8c
90025cb6:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025cb8:	eeb0 3a67 	vmov.f32	s6, s15
90025cbc:	fb92 f3f3 	sdiv	r3, r2, r3
90025cc0:	9324      	str	r3, [sp, #144]	; 0x90
90025cc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025cc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025cc6:	3b01      	subs	r3, #1
90025cc8:	930d      	str	r3, [sp, #52]	; 0x34
90025cca:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025ccc:	bf08      	it	eq
90025cce:	4613      	moveq	r3, r2
90025cd0:	9309      	str	r3, [sp, #36]	; 0x24
90025cd2:	e6c2      	b.n	90025a5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025cd4:	2900      	cmp	r1, #0
90025cd6:	f43f af4d 	beq.w	90025b74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025cda:	eb0a 0003 	add.w	r0, sl, r3
90025cde:	0843      	lsrs	r3, r0, #1
90025ce0:	07c0      	lsls	r0, r0, #31
90025ce2:	5cfb      	ldrb	r3, [r7, r3]
90025ce4:	bf54      	ite	pl
90025ce6:	f003 030f 	andpl.w	r3, r3, #15
90025cea:	111b      	asrmi	r3, r3, #4
90025cec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025cf0:	b2db      	uxtb	r3, r3
90025cf2:	930b      	str	r3, [sp, #44]	; 0x2c
90025cf4:	e73e      	b.n	90025b74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025cf6:	f8b8 e000 	ldrh.w	lr, [r8]
90025cfa:	fa1f fb83 	uxth.w	fp, r3
90025cfe:	f3c2 4107 	ubfx	r1, r2, #16, #8
90025d02:	43db      	mvns	r3, r3
90025d04:	ea4f 202e 	mov.w	r0, lr, asr #8
90025d08:	fb11 f10b 	smulbb	r1, r1, fp
90025d0c:	b2db      	uxtb	r3, r3
90025d0e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025d12:	fa5f fc8c 	uxtb.w	ip, ip
90025d16:	b2d2      	uxtb	r2, r2
90025d18:	fb00 1003 	mla	r0, r0, r3, r1
90025d1c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025d20:	fb1c fc0b 	smulbb	ip, ip, fp
90025d24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025d28:	b280      	uxth	r0, r0
90025d2a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025d2e:	fb12 fb0b 	smulbb	fp, r2, fp
90025d32:	fa5f fe8e 	uxtb.w	lr, lr
90025d36:	fb01 cc03 	mla	ip, r1, r3, ip
90025d3a:	fb0e bb03 	mla	fp, lr, r3, fp
90025d3e:	1c43      	adds	r3, r0, #1
90025d40:	fa1f fc8c 	uxth.w	ip, ip
90025d44:	fa1f fb8b 	uxth.w	fp, fp
90025d48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025d4c:	f10c 0101 	add.w	r1, ip, #1
90025d50:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90025d54:	f10b 0001 	add.w	r0, fp, #1
90025d58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025d5c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90025d60:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025d64:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90025d68:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025d6c:	4318      	orrs	r0, r3
90025d6e:	ea40 000c 	orr.w	r0, r0, ip
90025d72:	f8a8 0000 	strh.w	r0, [r8]
90025d76:	e734      	b.n	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d78:	f113 0b01 	adds.w	fp, r3, #1
90025d7c:	f53f af31 	bmi.w	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d80:	45dc      	cmp	ip, fp
90025d82:	f6ff af2e 	blt.w	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d86:	f110 0b01 	adds.w	fp, r0, #1
90025d8a:	f53f af2a 	bmi.w	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d8e:	45de      	cmp	lr, fp
90025d90:	f6ff af27 	blt.w	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025d94:	9302      	str	r3, [sp, #8]
90025d96:	fa0f f38e 	sxth.w	r3, lr
90025d9a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025d9c:	9301      	str	r3, [sp, #4]
90025d9e:	fa0f f38c 	sxth.w	r3, ip
90025da2:	e9cd 0203 	strd	r0, r2, [sp, #12]
90025da6:	e9cd 1505 	strd	r1, r5, [sp, #20]
90025daa:	9300      	str	r3, [sp, #0]
90025dac:	463a      	mov	r2, r7
90025dae:	4653      	mov	r3, sl
90025db0:	4641      	mov	r1, r8
90025db2:	9815      	ldr	r0, [sp, #84]	; 0x54
90025db4:	f7ff fd4c 	bl	90025850 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90025db8:	e713      	b.n	90025be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025dba:	1422      	asrs	r2, r4, #16
90025dbc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90025dbe:	1433      	asrs	r3, r6, #16
90025dc0:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025dc4:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025dc8:	fb05 2303 	mla	r3, r5, r3, r2
90025dcc:	085a      	lsrs	r2, r3, #1
90025dce:	07dd      	lsls	r5, r3, #31
90025dd0:	5cba      	ldrb	r2, [r7, r2]
90025dd2:	bf54      	ite	pl
90025dd4:	f002 020f 	andpl.w	r2, r2, #15
90025dd8:	1112      	asrmi	r2, r2, #4
90025dda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90025dde:	b2d2      	uxtb	r2, r2
90025de0:	2900      	cmp	r1, #0
90025de2:	d077      	beq.n	90025ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025de4:	f103 0e01 	add.w	lr, r3, #1
90025de8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90025dec:	f01e 0f01 	tst.w	lr, #1
90025df0:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025df4:	bf0c      	ite	eq
90025df6:	f00c 0c0f 	andeq.w	ip, ip, #15
90025dfa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90025dfe:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025e02:	fa5f f58c 	uxtb.w	r5, ip
90025e06:	9512      	str	r5, [sp, #72]	; 0x48
90025e08:	b308      	cbz	r0, 90025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025e0a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025e0c:	442b      	add	r3, r5
90025e0e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025e12:	07dd      	lsls	r5, r3, #31
90025e14:	f103 0301 	add.w	r3, r3, #1
90025e18:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025e1c:	bf54      	ite	pl
90025e1e:	f00c 0c0f 	andpl.w	ip, ip, #15
90025e22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025e26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025e2a:	fa5f f58c 	uxtb.w	r5, ip
90025e2e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025e32:	950c      	str	r5, [sp, #48]	; 0x30
90025e34:	07dd      	lsls	r5, r3, #31
90025e36:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025e3a:	bf54      	ite	pl
90025e3c:	f00c 0c0f 	andpl.w	ip, ip, #15
90025e40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025e44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025e48:	fa5f f38c 	uxtb.w	r3, ip
90025e4c:	9313      	str	r3, [sp, #76]	; 0x4c
90025e4e:	b289      	uxth	r1, r1
90025e50:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025e52:	b280      	uxth	r0, r0
90025e54:	fb01 f300 	mul.w	r3, r1, r0
90025e58:	0109      	lsls	r1, r1, #4
90025e5a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90025e5e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90025e62:	1ac9      	subs	r1, r1, r3
90025e64:	b280      	uxth	r0, r0
90025e66:	b289      	uxth	r1, r1
90025e68:	ebac 0c00 	sub.w	ip, ip, r0
90025e6c:	4369      	muls	r1, r5
90025e6e:	fa1f fc8c 	uxth.w	ip, ip
90025e72:	fb02 120c 	mla	r2, r2, ip, r1
90025e76:	990c      	ldr	r1, [sp, #48]	; 0x30
90025e78:	fb00 2001 	mla	r0, r0, r1, r2
90025e7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90025e7e:	fb03 0302 	mla	r3, r3, r2, r0
90025e82:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025e86:	b1d3      	cbz	r3, 90025ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025e88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025e8a:	4353      	muls	r3, r2
90025e8c:	1c5a      	adds	r2, r3, #1
90025e8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025e92:	4a0f      	ldr	r2, [pc, #60]	; (90025ed0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025e94:	121b      	asrs	r3, r3, #8
90025e96:	6812      	ldr	r2, [r2, #0]
90025e98:	2bff      	cmp	r3, #255	; 0xff
90025e9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025e9e:	d12d      	bne.n	90025efc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90025ea0:	0953      	lsrs	r3, r2, #5
90025ea2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90025ea6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025eaa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025eae:	f02c 0c07 	bic.w	ip, ip, #7
90025eb2:	ea43 0c0c 	orr.w	ip, r3, ip
90025eb6:	ea4c 0202 	orr.w	r2, ip, r2
90025eba:	f8a8 2000 	strh.w	r2, [r8]
90025ebe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025ec0:	f108 0802 	add.w	r8, r8, #2
90025ec4:	f10b 3bff 	add.w	fp, fp, #4294967295
90025ec8:	441c      	add	r4, r3
90025eca:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025ecc:	441e      	add	r6, r3
90025ece:	e6b9      	b.n	90025c44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90025ed0:	24039714 	.word	0x24039714
90025ed4:	2800      	cmp	r0, #0
90025ed6:	d0ba      	beq.n	90025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025ed8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025eda:	442b      	add	r3, r5
90025edc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025ee0:	07db      	lsls	r3, r3, #31
90025ee2:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025ee6:	bf54      	ite	pl
90025ee8:	f00c 0c0f 	andpl.w	ip, ip, #15
90025eec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025ef0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025ef4:	fa5f f38c 	uxtb.w	r3, ip
90025ef8:	930c      	str	r3, [sp, #48]	; 0x30
90025efa:	e7a8      	b.n	90025e4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025efc:	f8b8 e000 	ldrh.w	lr, [r8]
90025f00:	fa1f fa83 	uxth.w	sl, r3
90025f04:	f3c2 4107 	ubfx	r1, r2, #16, #8
90025f08:	43db      	mvns	r3, r3
90025f0a:	ea4f 202e 	mov.w	r0, lr, asr #8
90025f0e:	fb11 f10a 	smulbb	r1, r1, sl
90025f12:	b2db      	uxtb	r3, r3
90025f14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025f18:	b2d2      	uxtb	r2, r2
90025f1a:	fa5f fc8c 	uxtb.w	ip, ip
90025f1e:	fb00 1003 	mla	r0, r0, r3, r1
90025f22:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025f26:	fb12 f20a 	smulbb	r2, r2, sl
90025f2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025f2e:	b280      	uxth	r0, r0
90025f30:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025f34:	fb1c fc0a 	smulbb	ip, ip, sl
90025f38:	fa5f fe8e 	uxtb.w	lr, lr
90025f3c:	fb0e 2203 	mla	r2, lr, r3, r2
90025f40:	fb01 cc03 	mla	ip, r1, r3, ip
90025f44:	1c43      	adds	r3, r0, #1
90025f46:	b292      	uxth	r2, r2
90025f48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025f4c:	1c51      	adds	r1, r2, #1
90025f4e:	fa1f fc8c 	uxth.w	ip, ip
90025f52:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90025f56:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90025f5a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90025f5e:	4308      	orrs	r0, r1
90025f60:	f10c 0101 	add.w	r1, ip, #1
90025f64:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025f68:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025f6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025f70:	ea40 000c 	orr.w	r0, r0, ip
90025f74:	f8a8 0000 	strh.w	r0, [r8]
90025f78:	e7a1      	b.n	90025ebe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025f7a:	b017      	add	sp, #92	; 0x5c
90025f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90025f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025f84:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90025f88:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90025f8c:	2d00      	cmp	r5, #0
90025f8e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90025f92:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025f96:	fb05 0e03 	mla	lr, r5, r3, r0
90025f9a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90025f9e:	f2c0 80b0 	blt.w	90026102 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025fa2:	45a9      	cmp	r9, r5
90025fa4:	f340 80ad 	ble.w	90026102 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025fa8:	2800      	cmp	r0, #0
90025faa:	f2c0 80a8 	blt.w	900260fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90025fae:	4580      	cmp	r8, r0
90025fb0:	f340 80a5 	ble.w	900260fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90025fb4:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025fb8:	f01e 0f01 	tst.w	lr, #1
90025fbc:	5d16      	ldrb	r6, [r2, r4]
90025fbe:	bf0c      	ite	eq
90025fc0:	f006 060f 	andeq.w	r6, r6, #15
90025fc4:	1136      	asrne	r6, r6, #4
90025fc6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90025fca:	b2f6      	uxtb	r6, r6
90025fcc:	1c44      	adds	r4, r0, #1
90025fce:	f100 809b 	bmi.w	90026108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90025fd2:	45a0      	cmp	r8, r4
90025fd4:	f340 8098 	ble.w	90026108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90025fd8:	2f00      	cmp	r7, #0
90025fda:	f000 8097 	beq.w	9002610c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90025fde:	f10e 0a01 	add.w	sl, lr, #1
90025fe2:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025fe6:	f01a 0f01 	tst.w	sl, #1
90025fea:	5d14      	ldrb	r4, [r2, r4]
90025fec:	bf0c      	ite	eq
90025fee:	f004 040f 	andeq.w	r4, r4, #15
90025ff2:	1124      	asrne	r4, r4, #4
90025ff4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025ff8:	b2e4      	uxtb	r4, r4
90025ffa:	3501      	adds	r5, #1
90025ffc:	f100 808a 	bmi.w	90026114 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026000:	45a9      	cmp	r9, r5
90026002:	f340 8087 	ble.w	90026114 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026006:	f1bc 0f00 	cmp.w	ip, #0
9002600a:	f000 8086 	beq.w	9002611a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002600e:	2800      	cmp	r0, #0
90026010:	db7e      	blt.n	90026110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026012:	4580      	cmp	r8, r0
90026014:	dd7c      	ble.n	90026110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026016:	eb03 090e 	add.w	r9, r3, lr
9002601a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002601e:	f019 0f01 	tst.w	r9, #1
90026022:	5d55      	ldrb	r5, [r2, r5]
90026024:	bf0c      	ite	eq
90026026:	f005 050f 	andeq.w	r5, r5, #15
9002602a:	112d      	asrne	r5, r5, #4
9002602c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026030:	b2ed      	uxtb	r5, r5
90026032:	3001      	adds	r0, #1
90026034:	d474      	bmi.n	90026120 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90026036:	4580      	cmp	r8, r0
90026038:	dd72      	ble.n	90026120 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
9002603a:	2f00      	cmp	r7, #0
9002603c:	d072      	beq.n	90026124 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002603e:	3301      	adds	r3, #1
90026040:	449e      	add	lr, r3
90026042:	ea4f 035e 	mov.w	r3, lr, lsr #1
90026046:	f01e 0f01 	tst.w	lr, #1
9002604a:	5cd0      	ldrb	r0, [r2, r3]
9002604c:	bf0c      	ite	eq
9002604e:	f000 000f 	andeq.w	r0, r0, #15
90026052:	1100      	asrne	r0, r0, #4
90026054:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026058:	b2c3      	uxtb	r3, r0
9002605a:	b2ba      	uxth	r2, r7
9002605c:	fa1f fc8c 	uxth.w	ip, ip
90026060:	fb02 f00c 	mul.w	r0, r2, ip
90026064:	0112      	lsls	r2, r2, #4
90026066:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002606a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
9002606e:	1a12      	subs	r2, r2, r0
90026070:	fa1f fc8c 	uxth.w	ip, ip
90026074:	b292      	uxth	r2, r2
90026076:	eba7 070c 	sub.w	r7, r7, ip
9002607a:	4362      	muls	r2, r4
9002607c:	b2bf      	uxth	r7, r7
9002607e:	fb06 2207 	mla	r2, r6, r7, r2
90026082:	fb0c 2505 	mla	r5, ip, r5, r2
90026086:	fb00 5303 	mla	r3, r0, r3, r5
9002608a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002608e:	b3a3      	cbz	r3, 900260fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90026090:	4a25      	ldr	r2, [pc, #148]	; (90026128 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90026092:	880e      	ldrh	r6, [r1, #0]
90026094:	6815      	ldr	r5, [r2, #0]
90026096:	b29a      	uxth	r2, r3
90026098:	1234      	asrs	r4, r6, #8
9002609a:	43db      	mvns	r3, r3
9002609c:	f3c5 4007 	ubfx	r0, r5, #16, #8
900260a0:	f3c5 2707 	ubfx	r7, r5, #8, #8
900260a4:	b2db      	uxtb	r3, r3
900260a6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900260aa:	fb10 f002 	smulbb	r0, r0, r2
900260ae:	b2ed      	uxtb	r5, r5
900260b0:	fb17 f702 	smulbb	r7, r7, r2
900260b4:	fb04 0403 	mla	r4, r4, r3, r0
900260b8:	10f0      	asrs	r0, r6, #3
900260ba:	fb15 f202 	smulbb	r2, r5, r2
900260be:	00f6      	lsls	r6, r6, #3
900260c0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900260c4:	b2a4      	uxth	r4, r4
900260c6:	b2f6      	uxtb	r6, r6
900260c8:	fb00 7003 	mla	r0, r0, r3, r7
900260cc:	fb06 2303 	mla	r3, r6, r3, r2
900260d0:	b280      	uxth	r0, r0
900260d2:	b29a      	uxth	r2, r3
900260d4:	1c63      	adds	r3, r4, #1
900260d6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900260da:	1c53      	adds	r3, r2, #1
900260dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900260e0:	1c42      	adds	r2, r0, #1
900260e2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900260e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900260ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900260ee:	0940      	lsrs	r0, r0, #5
900260f0:	4323      	orrs	r3, r4
900260f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900260f6:	4303      	orrs	r3, r0
900260f8:	800b      	strh	r3, [r1, #0]
900260fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900260fe:	2600      	movs	r6, #0
90026100:	e764      	b.n	90025fcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90026102:	2400      	movs	r4, #0
90026104:	4626      	mov	r6, r4
90026106:	e778      	b.n	90025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026108:	2400      	movs	r4, #0
9002610a:	e776      	b.n	90025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002610c:	463c      	mov	r4, r7
9002610e:	e774      	b.n	90025ffa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026110:	2500      	movs	r5, #0
90026112:	e78e      	b.n	90026032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90026114:	2300      	movs	r3, #0
90026116:	461d      	mov	r5, r3
90026118:	e79f      	b.n	9002605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002611a:	4663      	mov	r3, ip
9002611c:	4665      	mov	r5, ip
9002611e:	e79c      	b.n	9002605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026120:	2300      	movs	r3, #0
90026122:	e79a      	b.n	9002605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026124:	463b      	mov	r3, r7
90026126:	e798      	b.n	9002605a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026128:	24039714 	.word	0x24039714

9002612c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002612c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026130:	b093      	sub	sp, #76	; 0x4c
90026132:	461d      	mov	r5, r3
90026134:	920c      	str	r2, [sp, #48]	; 0x30
90026136:	9a21      	ldr	r2, [sp, #132]	; 0x84
90026138:	9011      	str	r0, [sp, #68]	; 0x44
9002613a:	9107      	str	r1, [sp, #28]
9002613c:	6850      	ldr	r0, [r2, #4]
9002613e:	6812      	ldr	r2, [r2, #0]
90026140:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90026144:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90026148:	fb00 1303 	mla	r3, r0, r3, r1
9002614c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90026150:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026152:	689b      	ldr	r3, [r3, #8]
90026154:	3301      	adds	r3, #1
90026156:	f023 0301 	bic.w	r3, r3, #1
9002615a:	9306      	str	r3, [sp, #24]
9002615c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002615e:	681f      	ldr	r7, [r3, #0]
90026160:	9b07      	ldr	r3, [sp, #28]
90026162:	2b00      	cmp	r3, #0
90026164:	dc03      	bgt.n	9002616e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90026166:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90026168:	2b00      	cmp	r3, #0
9002616a:	f340 8267 	ble.w	9002663c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002616e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026170:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026174:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026178:	1e48      	subs	r0, r1, #1
9002617a:	f102 3cff 	add.w	ip, r2, #4294967295
9002617e:	2d00      	cmp	r5, #0
90026180:	f340 80b7 	ble.w	900262f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90026184:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026188:	ea4f 4326 	mov.w	r3, r6, asr #16
9002618c:	d406      	bmi.n	9002619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9002618e:	4586      	cmp	lr, r0
90026190:	da04      	bge.n	9002619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026192:	2b00      	cmp	r3, #0
90026194:	db02      	blt.n	9002619c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026196:	4563      	cmp	r3, ip
90026198:	f2c0 80ac 	blt.w	900262f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002619c:	f11e 0e01 	adds.w	lr, lr, #1
900261a0:	f100 809f 	bmi.w	900262e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900261a4:	4571      	cmp	r1, lr
900261a6:	f2c0 809c 	blt.w	900262e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900261aa:	3301      	adds	r3, #1
900261ac:	f100 8099 	bmi.w	900262e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900261b0:	429a      	cmp	r2, r3
900261b2:	f2c0 8096 	blt.w	900262e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900261b6:	46c8      	mov	r8, r9
900261b8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
900261bc:	9509      	str	r5, [sp, #36]	; 0x24
900261be:	9b09      	ldr	r3, [sp, #36]	; 0x24
900261c0:	2b00      	cmp	r3, #0
900261c2:	f340 80b5 	ble.w	90026330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900261c6:	f3c4 3303 	ubfx	r3, r4, #12, #4
900261ca:	1430      	asrs	r0, r6, #16
900261cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
900261d0:	9308      	str	r3, [sp, #32]
900261d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900261d4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900261d8:	1423      	asrs	r3, r4, #16
900261da:	f100 813f 	bmi.w	9002645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900261de:	f10c 3bff 	add.w	fp, ip, #4294967295
900261e2:	455b      	cmp	r3, fp
900261e4:	f280 813a 	bge.w	9002645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900261e8:	2800      	cmp	r0, #0
900261ea:	f2c0 8137 	blt.w	9002645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900261ee:	f10e 3bff 	add.w	fp, lr, #4294967295
900261f2:	4558      	cmp	r0, fp
900261f4:	f280 8132 	bge.w	9002645c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
900261f8:	9a06      	ldr	r2, [sp, #24]
900261fa:	fb00 3302 	mla	r3, r0, r2, r3
900261fe:	0858      	lsrs	r0, r3, #1
90026200:	07da      	lsls	r2, r3, #31
90026202:	9a08      	ldr	r2, [sp, #32]
90026204:	f817 c000 	ldrb.w	ip, [r7, r0]
90026208:	bf54      	ite	pl
9002620a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002620e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026212:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026216:	fa5f fc8c 	uxtb.w	ip, ip
9002621a:	2a00      	cmp	r2, #0
9002621c:	f000 80cc 	beq.w	900263b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026220:	1c58      	adds	r0, r3, #1
90026222:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026226:	07c0      	lsls	r0, r0, #31
90026228:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002622c:	bf54      	ite	pl
9002622e:	f00e 0e0f 	andpl.w	lr, lr, #15
90026232:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026236:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002623a:	fa5f fe8e 	uxtb.w	lr, lr
9002623e:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90026242:	b1b9      	cbz	r1, 90026274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90026244:	4453      	add	r3, sl
90026246:	0858      	lsrs	r0, r3, #1
90026248:	07da      	lsls	r2, r3, #31
9002624a:	5c38      	ldrb	r0, [r7, r0]
9002624c:	bf54      	ite	pl
9002624e:	f000 000f 	andpl.w	r0, r0, #15
90026252:	1100      	asrmi	r0, r0, #4
90026254:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026258:	b2c0      	uxtb	r0, r0
9002625a:	900a      	str	r0, [sp, #40]	; 0x28
9002625c:	1c58      	adds	r0, r3, #1
9002625e:	0843      	lsrs	r3, r0, #1
90026260:	07c2      	lsls	r2, r0, #31
90026262:	5cfb      	ldrb	r3, [r7, r3]
90026264:	bf54      	ite	pl
90026266:	f003 030f 	andpl.w	r3, r3, #15
9002626a:	111b      	asrmi	r3, r3, #4
9002626c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026270:	b2db      	uxtb	r3, r3
90026272:	930e      	str	r3, [sp, #56]	; 0x38
90026274:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90026278:	b289      	uxth	r1, r1
9002627a:	fb02 f301 	mul.w	r3, r2, r1
9002627e:	0112      	lsls	r2, r2, #4
90026280:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026284:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90026288:	1ad2      	subs	r2, r2, r3
9002628a:	b289      	uxth	r1, r1
9002628c:	b292      	uxth	r2, r2
9002628e:	1a40      	subs	r0, r0, r1
90026290:	fa1f fe80 	uxth.w	lr, r0
90026294:	980d      	ldr	r0, [sp, #52]	; 0x34
90026296:	4342      	muls	r2, r0
90026298:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002629c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002629e:	fb01 c102 	mla	r1, r1, r2, ip
900262a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900262a4:	fb03 1302 	mla	r3, r3, r2, r1
900262a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900262ac:	2bff      	cmp	r3, #255	; 0xff
900262ae:	f040 8094 	bne.w	900263da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900262b2:	4bbf      	ldr	r3, [pc, #764]	; (900265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900262b4:	681a      	ldr	r2, [r3, #0]
900262b6:	4bbf      	ldr	r3, [pc, #764]	; (900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900262b8:	0951      	lsrs	r1, r2, #5
900262ba:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900262be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900262c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900262c6:	430b      	orrs	r3, r1
900262c8:	4313      	orrs	r3, r2
900262ca:	f8a8 3000 	strh.w	r3, [r8]
900262ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900262d0:	f108 0802 	add.w	r8, r8, #2
900262d4:	441c      	add	r4, r3
900262d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900262d8:	441e      	add	r6, r3
900262da:	9b09      	ldr	r3, [sp, #36]	; 0x24
900262dc:	3b01      	subs	r3, #1
900262de:	9309      	str	r3, [sp, #36]	; 0x24
900262e0:	e76d      	b.n	900261be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900262e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900262e4:	3d01      	subs	r5, #1
900262e6:	f109 0902 	add.w	r9, r9, #2
900262ea:	441c      	add	r4, r3
900262ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
900262ee:	441e      	add	r6, r3
900262f0:	e745      	b.n	9002617e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900262f2:	d021      	beq.n	90026338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900262f4:	1e6b      	subs	r3, r5, #1
900262f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
900262f8:	fb00 4003 	mla	r0, r0, r3, r4
900262fc:	1400      	asrs	r0, r0, #16
900262fe:	f53f af5a 	bmi.w	900261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026302:	3901      	subs	r1, #1
90026304:	4288      	cmp	r0, r1
90026306:	f6bf af56 	bge.w	900261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002630a:	9920      	ldr	r1, [sp, #128]	; 0x80
9002630c:	fb01 6303 	mla	r3, r1, r3, r6
90026310:	141b      	asrs	r3, r3, #16
90026312:	f53f af50 	bmi.w	900261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026316:	3a01      	subs	r2, #1
90026318:	4293      	cmp	r3, r2
9002631a:	f6bf af4c 	bge.w	900261b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002631e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90026322:	46a8      	mov	r8, r5
90026324:	46ce      	mov	lr, r9
90026326:	9308      	str	r3, [sp, #32]
90026328:	f1b8 0f00 	cmp.w	r8, #0
9002632c:	f300 80b6 	bgt.w	9002649c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026330:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026334:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026338:	9b07      	ldr	r3, [sp, #28]
9002633a:	2b00      	cmp	r3, #0
9002633c:	f340 817e 	ble.w	9002663c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90026340:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026344:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026346:	ee30 0a04 	vadd.f32	s0, s0, s8
9002634a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002634e:	eef0 6a62 	vmov.f32	s13, s5
90026352:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026356:	ee31 1a05 	vadd.f32	s2, s2, s10
9002635a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002635e:	ee16 4a90 	vmov	r4, s13
90026362:	eef0 6a43 	vmov.f32	s13, s6
90026366:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002636a:	ee16 6a90 	vmov	r6, s13
9002636e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026372:	ee61 7a27 	vmul.f32	s15, s2, s15
90026376:	ee77 2a62 	vsub.f32	s5, s14, s5
9002637a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002637e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026382:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026386:	ee12 2a90 	vmov	r2, s5
9002638a:	eef0 2a47 	vmov.f32	s5, s14
9002638e:	fb92 f3f3 	sdiv	r3, r2, r3
90026392:	ee13 2a10 	vmov	r2, s6
90026396:	931f      	str	r3, [sp, #124]	; 0x7c
90026398:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002639a:	eeb0 3a67 	vmov.f32	s6, s15
9002639e:	fb92 f3f3 	sdiv	r3, r2, r3
900263a2:	9320      	str	r3, [sp, #128]	; 0x80
900263a4:	9b07      	ldr	r3, [sp, #28]
900263a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900263a8:	3b01      	subs	r3, #1
900263aa:	9307      	str	r3, [sp, #28]
900263ac:	bf08      	it	eq
900263ae:	4615      	moveq	r5, r2
900263b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900263b2:	bf18      	it	ne
900263b4:	461d      	movne	r5, r3
900263b6:	e6d3      	b.n	90026160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900263b8:	2900      	cmp	r1, #0
900263ba:	f43f af5b 	beq.w	90026274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900263be:	eb0a 0003 	add.w	r0, sl, r3
900263c2:	0843      	lsrs	r3, r0, #1
900263c4:	07c0      	lsls	r0, r0, #31
900263c6:	5cfb      	ldrb	r3, [r7, r3]
900263c8:	bf54      	ite	pl
900263ca:	f003 030f 	andpl.w	r3, r3, #15
900263ce:	111b      	asrmi	r3, r3, #4
900263d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900263d4:	b2db      	uxtb	r3, r3
900263d6:	930a      	str	r3, [sp, #40]	; 0x28
900263d8:	e74c      	b.n	90026274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900263da:	2b00      	cmp	r3, #0
900263dc:	f43f af77 	beq.w	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900263e0:	4a73      	ldr	r2, [pc, #460]	; (900265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900263e2:	fa1f fe83 	uxth.w	lr, r3
900263e6:	f8b8 c000 	ldrh.w	ip, [r8]
900263ea:	43db      	mvns	r3, r3
900263ec:	6810      	ldr	r0, [r2, #0]
900263ee:	ea4f 212c 	mov.w	r1, ip, asr #8
900263f2:	f3c0 4207 	ubfx	r2, r0, #16, #8
900263f6:	b2db      	uxtb	r3, r3
900263f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900263fc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026400:	fb12 f20e 	smulbb	r2, r2, lr
90026404:	b2c0      	uxtb	r0, r0
90026406:	fb1b fb0e 	smulbb	fp, fp, lr
9002640a:	fb01 2103 	mla	r1, r1, r3, r2
9002640e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026412:	fb10 fe0e 	smulbb	lr, r0, lr
90026416:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002641a:	b289      	uxth	r1, r1
9002641c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026420:	fa5f fc8c 	uxtb.w	ip, ip
90026424:	fb02 b203 	mla	r2, r2, r3, fp
90026428:	1c48      	adds	r0, r1, #1
9002642a:	fb0c e303 	mla	r3, ip, r3, lr
9002642e:	b292      	uxth	r2, r2
90026430:	b29b      	uxth	r3, r3
90026432:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90026436:	f102 0b01 	add.w	fp, r2, #1
9002643a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
9002643e:	1c59      	adds	r1, r3, #1
90026440:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026444:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90026448:	0952      	lsrs	r2, r2, #5
9002644a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002644e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026452:	4301      	orrs	r1, r0
90026454:	4311      	orrs	r1, r2
90026456:	f8a8 1000 	strh.w	r1, [r8]
9002645a:	e738      	b.n	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002645c:	f113 0b01 	adds.w	fp, r3, #1
90026460:	f53f af35 	bmi.w	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026464:	45dc      	cmp	ip, fp
90026466:	f6ff af32 	blt.w	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002646a:	f110 0b01 	adds.w	fp, r0, #1
9002646e:	f53f af2e 	bmi.w	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026472:	45de      	cmp	lr, fp
90026474:	f6ff af2b 	blt.w	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026478:	9302      	str	r3, [sp, #8]
9002647a:	fa0f f38e 	sxth.w	r3, lr
9002647e:	9a08      	ldr	r2, [sp, #32]
90026480:	9301      	str	r3, [sp, #4]
90026482:	fa0f f38c 	sxth.w	r3, ip
90026486:	9105      	str	r1, [sp, #20]
90026488:	4641      	mov	r1, r8
9002648a:	9300      	str	r3, [sp, #0]
9002648c:	4653      	mov	r3, sl
9002648e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026492:	463a      	mov	r2, r7
90026494:	9811      	ldr	r0, [sp, #68]	; 0x44
90026496:	f7ff fd73 	bl	90025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002649a:	e718      	b.n	900262ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002649c:	1422      	asrs	r2, r4, #16
9002649e:	9906      	ldr	r1, [sp, #24]
900264a0:	1433      	asrs	r3, r6, #16
900264a2:	f3c4 3003 	ubfx	r0, r4, #12, #4
900264a6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900264aa:	fb01 2303 	mla	r3, r1, r3, r2
900264ae:	085a      	lsrs	r2, r3, #1
900264b0:	07d9      	lsls	r1, r3, #31
900264b2:	5cba      	ldrb	r2, [r7, r2]
900264b4:	bf54      	ite	pl
900264b6:	f002 020f 	andpl.w	r2, r2, #15
900264ba:	1112      	asrmi	r2, r2, #4
900264bc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900264c0:	b2d2      	uxtb	r2, r2
900264c2:	2800      	cmp	r0, #0
900264c4:	d063      	beq.n	9002658e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900264c6:	f103 0a01 	add.w	sl, r3, #1
900264ca:	ea4f 015a 	mov.w	r1, sl, lsr #1
900264ce:	f01a 0f01 	tst.w	sl, #1
900264d2:	5c79      	ldrb	r1, [r7, r1]
900264d4:	bf0c      	ite	eq
900264d6:	f001 010f 	andeq.w	r1, r1, #15
900264da:	1109      	asrne	r1, r1, #4
900264dc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900264e0:	b2c9      	uxtb	r1, r1
900264e2:	910f      	str	r1, [sp, #60]	; 0x3c
900264e4:	f1bc 0f00 	cmp.w	ip, #0
900264e8:	d01a      	beq.n	90026520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900264ea:	9908      	ldr	r1, [sp, #32]
900264ec:	440b      	add	r3, r1
900264ee:	0859      	lsrs	r1, r3, #1
900264f0:	f013 0f01 	tst.w	r3, #1
900264f4:	f103 0301 	add.w	r3, r3, #1
900264f8:	5c79      	ldrb	r1, [r7, r1]
900264fa:	bf0c      	ite	eq
900264fc:	f001 010f 	andeq.w	r1, r1, #15
90026500:	1109      	asrne	r1, r1, #4
90026502:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026506:	b2c9      	uxtb	r1, r1
90026508:	910b      	str	r1, [sp, #44]	; 0x2c
9002650a:	0859      	lsrs	r1, r3, #1
9002650c:	07db      	lsls	r3, r3, #31
9002650e:	5c79      	ldrb	r1, [r7, r1]
90026510:	bf54      	ite	pl
90026512:	f001 010f 	andpl.w	r1, r1, #15
90026516:	1109      	asrmi	r1, r1, #4
90026518:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002651c:	b2c9      	uxtb	r1, r1
9002651e:	9110      	str	r1, [sp, #64]	; 0x40
90026520:	b280      	uxth	r0, r0
90026522:	fa1f fc8c 	uxth.w	ip, ip
90026526:	fb00 f30c 	mul.w	r3, r0, ip
9002652a:	0100      	lsls	r0, r0, #4
9002652c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90026530:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90026534:	1ac0      	subs	r0, r0, r3
90026536:	fa1f fc8c 	uxth.w	ip, ip
9002653a:	b280      	uxth	r0, r0
9002653c:	eba1 010c 	sub.w	r1, r1, ip
90026540:	fa1f fa81 	uxth.w	sl, r1
90026544:	990f      	ldr	r1, [sp, #60]	; 0x3c
90026546:	4348      	muls	r0, r1
90026548:	990b      	ldr	r1, [sp, #44]	; 0x2c
9002654a:	fb02 020a 	mla	r2, r2, sl, r0
9002654e:	fb0c 2c01 	mla	ip, ip, r1, r2
90026552:	9a10      	ldr	r2, [sp, #64]	; 0x40
90026554:	fb03 c302 	mla	r3, r3, r2, ip
90026558:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002655c:	2bff      	cmp	r3, #255	; 0xff
9002655e:	d12b      	bne.n	900265b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90026560:	4b13      	ldr	r3, [pc, #76]	; (900265b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026562:	681a      	ldr	r2, [r3, #0]
90026564:	4b13      	ldr	r3, [pc, #76]	; (900265b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026566:	0951      	lsrs	r1, r2, #5
90026568:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002656c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026570:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026574:	430b      	orrs	r3, r1
90026576:	4313      	orrs	r3, r2
90026578:	f8ae 3000 	strh.w	r3, [lr]
9002657c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002657e:	f10e 0e02 	add.w	lr, lr, #2
90026582:	f108 38ff 	add.w	r8, r8, #4294967295
90026586:	441c      	add	r4, r3
90026588:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002658a:	441e      	add	r6, r3
9002658c:	e6cc      	b.n	90026328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002658e:	f1bc 0f00 	cmp.w	ip, #0
90026592:	d0c5      	beq.n	90026520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026594:	9908      	ldr	r1, [sp, #32]
90026596:	440b      	add	r3, r1
90026598:	0859      	lsrs	r1, r3, #1
9002659a:	07db      	lsls	r3, r3, #31
9002659c:	5c79      	ldrb	r1, [r7, r1]
9002659e:	bf54      	ite	pl
900265a0:	f001 010f 	andpl.w	r1, r1, #15
900265a4:	1109      	asrmi	r1, r1, #4
900265a6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900265aa:	b2c9      	uxtb	r1, r1
900265ac:	910b      	str	r1, [sp, #44]	; 0x2c
900265ae:	e7b7      	b.n	90026520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900265b0:	24039714 	.word	0x24039714
900265b4:	fffff800 	.word	0xfffff800
900265b8:	2b00      	cmp	r3, #0
900265ba:	d0df      	beq.n	9002657c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900265bc:	4a21      	ldr	r2, [pc, #132]	; (90026644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900265be:	fa1f fa83 	uxth.w	sl, r3
900265c2:	f8be c000 	ldrh.w	ip, [lr]
900265c6:	43db      	mvns	r3, r3
900265c8:	6810      	ldr	r0, [r2, #0]
900265ca:	ea4f 212c 	mov.w	r1, ip, asr #8
900265ce:	f3c0 4207 	ubfx	r2, r0, #16, #8
900265d2:	b2db      	uxtb	r3, r3
900265d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900265d8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900265dc:	fb12 f20a 	smulbb	r2, r2, sl
900265e0:	b2c0      	uxtb	r0, r0
900265e2:	fb1b fb0a 	smulbb	fp, fp, sl
900265e6:	fb01 2103 	mla	r1, r1, r3, r2
900265ea:	ea4f 02ec 	mov.w	r2, ip, asr #3
900265ee:	fb10 f00a 	smulbb	r0, r0, sl
900265f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900265f6:	b289      	uxth	r1, r1
900265f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900265fc:	fa5f fc8c 	uxtb.w	ip, ip
90026600:	fb02 b203 	mla	r2, r2, r3, fp
90026604:	fb0c 0003 	mla	r0, ip, r3, r0
90026608:	1c4b      	adds	r3, r1, #1
9002660a:	b292      	uxth	r2, r2
9002660c:	b280      	uxth	r0, r0
9002660e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026612:	f100 0b01 	add.w	fp, r0, #1
90026616:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002661a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002661e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026622:	ea4b 0101 	orr.w	r1, fp, r1
90026626:	f102 0b01 	add.w	fp, r2, #1
9002662a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002662e:	0952      	lsrs	r2, r2, #5
90026630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026634:	4311      	orrs	r1, r2
90026636:	f8ae 1000 	strh.w	r1, [lr]
9002663a:	e79f      	b.n	9002657c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002663c:	b013      	add	sp, #76	; 0x4c
9002663e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026642:	bf00      	nop
90026644:	24039714 	.word	0x24039714

90026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90026648:	b570      	push	{r4, r5, r6, lr}
9002664a:	1208      	asrs	r0, r1, #8
9002664c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90026650:	b29e      	uxth	r6, r3
90026652:	1213      	asrs	r3, r2, #8
90026654:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026658:	10cc      	asrs	r4, r1, #3
9002665a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002665e:	00c9      	lsls	r1, r1, #3
90026660:	fb10 f006 	smulbb	r0, r0, r6
90026664:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90026668:	fb13 f305 	smulbb	r3, r3, r5
9002666c:	fb14 f406 	smulbb	r4, r4, r6
90026670:	4418      	add	r0, r3
90026672:	10d3      	asrs	r3, r2, #3
90026674:	00d2      	lsls	r2, r2, #3
90026676:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002667a:	b280      	uxth	r0, r0
9002667c:	b2d2      	uxtb	r2, r2
9002667e:	fb13 f305 	smulbb	r3, r3, r5
90026682:	fb12 f205 	smulbb	r2, r2, r5
90026686:	441c      	add	r4, r3
90026688:	b2cb      	uxtb	r3, r1
9002668a:	fb13 f306 	smulbb	r3, r3, r6
9002668e:	b2a4      	uxth	r4, r4
90026690:	4413      	add	r3, r2
90026692:	1c42      	adds	r2, r0, #1
90026694:	b29b      	uxth	r3, r3
90026696:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002669a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
9002669e:	1c58      	adds	r0, r3, #1
900266a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900266a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900266a8:	4310      	orrs	r0, r2
900266aa:	1c62      	adds	r2, r4, #1
900266ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900266b0:	0964      	lsrs	r4, r4, #5
900266b2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900266b6:	4320      	orrs	r0, r4
900266b8:	bd70      	pop	{r4, r5, r6, pc}
	...

900266bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900266bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900266c0:	b08f      	sub	sp, #60	; 0x3c
900266c2:	461c      	mov	r4, r3
900266c4:	460d      	mov	r5, r1
900266c6:	4616      	mov	r6, r2
900266c8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
900266cc:	9004      	str	r0, [sp, #16]
900266ce:	9b18      	ldr	r3, [sp, #96]	; 0x60
900266d0:	2f00      	cmp	r7, #0
900266d2:	f000 80f6 	beq.w	900268c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
900266d6:	6820      	ldr	r0, [r4, #0]
900266d8:	aa0a      	add	r2, sp, #40	; 0x28
900266da:	6861      	ldr	r1, [r4, #4]
900266dc:	f04f 0802 	mov.w	r8, #2
900266e0:	3604      	adds	r6, #4
900266e2:	c203      	stmia	r2!, {r0, r1}
900266e4:	6818      	ldr	r0, [r3, #0]
900266e6:	aa0c      	add	r2, sp, #48	; 0x30
900266e8:	6859      	ldr	r1, [r3, #4]
900266ea:	c203      	stmia	r2!, {r0, r1}
900266ec:	a80a      	add	r0, sp, #40	; 0x28
900266ee:	f7ef fceb 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900266f2:	4621      	mov	r1, r4
900266f4:	a80c      	add	r0, sp, #48	; 0x30
900266f6:	f7ef fd2b 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900266fa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900266fe:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90026702:	f002 0301 	and.w	r3, r2, #1
90026706:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9002670a:	9306      	str	r3, [sp, #24]
9002670c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026710:	f003 0101 	and.w	r1, r3, #1
90026714:	9105      	str	r1, [sp, #20]
90026716:	9805      	ldr	r0, [sp, #20]
90026718:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9002671c:	4403      	add	r3, r0
9002671e:	fb01 2303 	mla	r3, r1, r3, r2
90026722:	fb93 f3f8 	sdiv	r3, r3, r8
90026726:	441d      	add	r5, r3
90026728:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9002672c:	441a      	add	r2, r3
9002672e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90026732:	4419      	add	r1, r3
90026734:	4b64      	ldr	r3, [pc, #400]	; (900268c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026736:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002673a:	6818      	ldr	r0, [r3, #0]
9002673c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90026740:	6803      	ldr	r3, [r0, #0]
90026742:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026744:	4798      	blx	r3
90026746:	4a61      	ldr	r2, [pc, #388]	; (900268cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90026748:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
9002674c:	2fff      	cmp	r7, #255	; 0xff
9002674e:	8813      	ldrh	r3, [r2, #0]
90026750:	4611      	mov	r1, r2
90026752:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
90026756:	fb03 fb0b 	mul.w	fp, r3, fp
9002675a:	fb03 a404 	mla	r4, r3, r4, sl
9002675e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026762:	d06b      	beq.n	9002683c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90026764:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
90026768:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
9002676c:	9303      	str	r3, [sp, #12]
9002676e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90026772:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026776:	9b07      	ldr	r3, [sp, #28]
90026778:	42a3      	cmp	r3, r4
9002677a:	f240 809d 	bls.w	900268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002677e:	9b06      	ldr	r3, [sp, #24]
90026780:	2b00      	cmp	r3, #0
90026782:	d039      	beq.n	900267f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90026784:	782b      	ldrb	r3, [r5, #0]
90026786:	f105 0801 	add.w	r8, r5, #1
9002678a:	f109 3bff 	add.w	fp, r9, #4294967295
9002678e:	8822      	ldrh	r2, [r4, #0]
90026790:	f003 030f 	and.w	r3, r3, #15
90026794:	9804      	ldr	r0, [sp, #16]
90026796:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002679a:	9b03      	ldr	r3, [sp, #12]
9002679c:	9300      	str	r3, [sp, #0]
9002679e:	463b      	mov	r3, r7
900267a0:	f7ff ff52 	bl	90026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900267a4:	f824 0b02 	strh.w	r0, [r4], #2
900267a8:	f1bb 0f01 	cmp.w	fp, #1
900267ac:	46a2      	mov	sl, r4
900267ae:	f104 0404 	add.w	r4, r4, #4
900267b2:	dd24      	ble.n	900267fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900267b4:	f898 3000 	ldrb.w	r3, [r8]
900267b8:	f1ab 0b02 	sub.w	fp, fp, #2
900267bc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900267c0:	091b      	lsrs	r3, r3, #4
900267c2:	9804      	ldr	r0, [sp, #16]
900267c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900267c8:	9b03      	ldr	r3, [sp, #12]
900267ca:	9300      	str	r3, [sp, #0]
900267cc:	463b      	mov	r3, r7
900267ce:	f7ff ff3b 	bl	90026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900267d2:	f824 0c04 	strh.w	r0, [r4, #-4]
900267d6:	f818 3b01 	ldrb.w	r3, [r8], #1
900267da:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900267de:	f003 030f 	and.w	r3, r3, #15
900267e2:	9804      	ldr	r0, [sp, #16]
900267e4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900267e8:	9b03      	ldr	r3, [sp, #12]
900267ea:	9300      	str	r3, [sp, #0]
900267ec:	463b      	mov	r3, r7
900267ee:	f7ff ff2b 	bl	90026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900267f2:	f824 0c02 	strh.w	r0, [r4, #-2]
900267f6:	e7d7      	b.n	900267a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900267f8:	46a8      	mov	r8, r5
900267fa:	46cb      	mov	fp, r9
900267fc:	e7d4      	b.n	900267a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900267fe:	d10e      	bne.n	9002681e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90026800:	f898 3000 	ldrb.w	r3, [r8]
90026804:	f8ba 2000 	ldrh.w	r2, [sl]
90026808:	091b      	lsrs	r3, r3, #4
9002680a:	9804      	ldr	r0, [sp, #16]
9002680c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026810:	9b03      	ldr	r3, [sp, #12]
90026812:	9300      	str	r3, [sp, #0]
90026814:	463b      	mov	r3, r7
90026816:	f7ff ff17 	bl	90026648 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002681a:	f82a 0b02 	strh.w	r0, [sl], #2
9002681e:	9b08      	ldr	r3, [sp, #32]
90026820:	9a05      	ldr	r2, [sp, #20]
90026822:	881c      	ldrh	r4, [r3, #0]
90026824:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026828:	eba4 0409 	sub.w	r4, r4, r9
9002682c:	4413      	add	r3, r2
9002682e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026830:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90026834:	fb93 f3f2 	sdiv	r3, r3, r2
90026838:	441d      	add	r5, r3
9002683a:	e79c      	b.n	90026776 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002683c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90026840:	45a3      	cmp	fp, r4
90026842:	d939      	bls.n	900268b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026844:	9b06      	ldr	r3, [sp, #24]
90026846:	b1fb      	cbz	r3, 90026888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90026848:	782b      	ldrb	r3, [r5, #0]
9002684a:	1c6a      	adds	r2, r5, #1
9002684c:	f109 30ff 	add.w	r0, r9, #4294967295
90026850:	3402      	adds	r4, #2
90026852:	f003 030f 	and.w	r3, r3, #15
90026856:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002685a:	f824 3c02 	strh.w	r3, [r4, #-2]
9002685e:	2801      	cmp	r0, #1
90026860:	4623      	mov	r3, r4
90026862:	f104 0404 	add.w	r4, r4, #4
90026866:	dd12      	ble.n	9002688e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90026868:	7813      	ldrb	r3, [r2, #0]
9002686a:	3802      	subs	r0, #2
9002686c:	091b      	lsrs	r3, r3, #4
9002686e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026872:	f824 3c04 	strh.w	r3, [r4, #-4]
90026876:	f812 3b01 	ldrb.w	r3, [r2], #1
9002687a:	f003 030f 	and.w	r3, r3, #15
9002687e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026882:	f824 3c02 	strh.w	r3, [r4, #-2]
90026886:	e7ea      	b.n	9002685e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026888:	462a      	mov	r2, r5
9002688a:	4648      	mov	r0, r9
9002688c:	e7e7      	b.n	9002685e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002688e:	d106      	bne.n	9002689e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90026890:	7812      	ldrb	r2, [r2, #0]
90026892:	3302      	adds	r3, #2
90026894:	0912      	lsrs	r2, r2, #4
90026896:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002689a:	f823 2c02 	strh.w	r2, [r3, #-2]
9002689e:	880c      	ldrh	r4, [r1, #0]
900268a0:	9a05      	ldr	r2, [sp, #20]
900268a2:	eba4 0409 	sub.w	r4, r4, r9
900268a6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900268aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900268ae:	4413      	add	r3, r2
900268b0:	fb93 f3f8 	sdiv	r3, r3, r8
900268b4:	441d      	add	r5, r3
900268b6:	e7c3      	b.n	90026840 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900268b8:	4b03      	ldr	r3, [pc, #12]	; (900268c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900268ba:	6818      	ldr	r0, [r3, #0]
900268bc:	6803      	ldr	r3, [r0, #0]
900268be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900268c0:	4798      	blx	r3
900268c2:	b00f      	add	sp, #60	; 0x3c
900268c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900268c8:	24039704 	.word	0x24039704
900268cc:	240396fe 	.word	0x240396fe

900268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
900268d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900268d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
900268d6:	0a0f      	lsrs	r7, r1, #8
900268d8:	2dff      	cmp	r5, #255	; 0xff
900268da:	d10c      	bne.n	900268f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900268dc:	2bff      	cmp	r3, #255	; 0xff
900268de:	d10a      	bne.n	900268f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900268e0:	0948      	lsrs	r0, r1, #5
900268e2:	4b25      	ldr	r3, [pc, #148]	; (90026978 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900268e4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900268e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900268ec:	403b      	ands	r3, r7
900268ee:	4318      	orrs	r0, r3
900268f0:	4308      	orrs	r0, r1
900268f2:	b280      	uxth	r0, r0
900268f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900268f6:	fb15 f503 	smulbb	r5, r5, r3
900268fa:	1214      	asrs	r4, r2, #8
900268fc:	10d6      	asrs	r6, r2, #3
900268fe:	b2ab      	uxth	r3, r5
90026900:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026904:	00d0      	lsls	r0, r2, #3
90026906:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002690a:	1c5d      	adds	r5, r3, #1
9002690c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026910:	b2c0      	uxtb	r0, r0
90026912:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90026916:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002691a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002691e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026922:	fa1f fc85 	uxth.w	ip, r5
90026926:	43ed      	mvns	r5, r5
90026928:	fb12 f20c 	smulbb	r2, r2, ip
9002692c:	b2eb      	uxtb	r3, r5
9002692e:	b2fd      	uxtb	r5, r7
90026930:	fb04 2403 	mla	r4, r4, r3, r2
90026934:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90026938:	fb15 f50c 	smulbb	r5, r5, ip
9002693c:	b2c8      	uxtb	r0, r1
9002693e:	b2a4      	uxth	r4, r4
90026940:	fb10 f00c 	smulbb	r0, r0, ip
90026944:	fb06 5503 	mla	r5, r6, r3, r5
90026948:	fb02 0003 	mla	r0, r2, r3, r0
9002694c:	b2ad      	uxth	r5, r5
9002694e:	b283      	uxth	r3, r0
90026950:	1c60      	adds	r0, r4, #1
90026952:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90026956:	1c58      	adds	r0, r3, #1
90026958:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002695c:	1c6b      	adds	r3, r5, #1
9002695e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90026962:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026966:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002696a:	096d      	lsrs	r5, r5, #5
9002696c:	4320      	orrs	r0, r4
9002696e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90026972:	4328      	orrs	r0, r5
90026974:	e7be      	b.n	900268f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90026976:	bf00      	nop
90026978:	00fff800 	.word	0x00fff800

9002697c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002697c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026980:	461c      	mov	r4, r3
90026982:	b08d      	sub	sp, #52	; 0x34
90026984:	460d      	mov	r5, r1
90026986:	4616      	mov	r6, r2
90026988:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002698a:	4680      	mov	r8, r0
9002698c:	6861      	ldr	r1, [r4, #4]
9002698e:	aa08      	add	r2, sp, #32
90026990:	6820      	ldr	r0, [r4, #0]
90026992:	f04f 0a02 	mov.w	sl, #2
90026996:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002699a:	3604      	adds	r6, #4
9002699c:	c203      	stmia	r2!, {r0, r1}
9002699e:	6818      	ldr	r0, [r3, #0]
900269a0:	aa0a      	add	r2, sp, #40	; 0x28
900269a2:	6859      	ldr	r1, [r3, #4]
900269a4:	c203      	stmia	r2!, {r0, r1}
900269a6:	a808      	add	r0, sp, #32
900269a8:	f7ef fb8e 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900269ac:	4621      	mov	r1, r4
900269ae:	a80a      	add	r0, sp, #40	; 0x28
900269b0:	f7ef fbce 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900269b4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
900269b8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
900269bc:	f002 0301 	and.w	r3, r2, #1
900269c0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
900269c4:	9303      	str	r3, [sp, #12]
900269c6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900269ca:	f003 0101 	and.w	r1, r3, #1
900269ce:	9102      	str	r1, [sp, #8]
900269d0:	9802      	ldr	r0, [sp, #8]
900269d2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
900269d6:	4403      	add	r3, r0
900269d8:	fb01 2303 	mla	r3, r1, r3, r2
900269dc:	fb93 f3fa 	sdiv	r3, r3, sl
900269e0:	441d      	add	r5, r3
900269e2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900269e6:	441a      	add	r2, r3
900269e8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
900269ec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900269f0:	4419      	add	r1, r3
900269f2:	4a3e      	ldr	r2, [pc, #248]	; (90026aec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900269f4:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
900269f8:	6810      	ldr	r0, [r2, #0]
900269fa:	9205      	str	r2, [sp, #20]
900269fc:	6803      	ldr	r3, [r0, #0]
900269fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026a00:	4798      	blx	r3
90026a02:	4b3b      	ldr	r3, [pc, #236]	; (90026af0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90026a04:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
90026a08:	8819      	ldrh	r1, [r3, #0]
90026a0a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90026a0e:	434f      	muls	r7, r1
90026a10:	fb01 c404 	mla	r4, r1, r4, ip
90026a14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026a18:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90026a1c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026a20:	9204      	str	r2, [sp, #16]
90026a22:	9b04      	ldr	r3, [sp, #16]
90026a24:	429c      	cmp	r4, r3
90026a26:	d258      	bcs.n	90026ada <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026a28:	9b03      	ldr	r3, [sp, #12]
90026a2a:	2b00      	cmp	r3, #0
90026a2c:	d034      	beq.n	90026a98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90026a2e:	782b      	ldrb	r3, [r5, #0]
90026a30:	1c6f      	adds	r7, r5, #1
90026a32:	f003 030f 	and.w	r3, r3, #15
90026a36:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026a3a:	0e0b      	lsrs	r3, r1, #24
90026a3c:	d006      	beq.n	90026a4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90026a3e:	8822      	ldrh	r2, [r4, #0]
90026a40:	4640      	mov	r0, r8
90026a42:	9300      	str	r3, [sp, #0]
90026a44:	464b      	mov	r3, r9
90026a46:	f7ff ff43 	bl	900268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026a4a:	8020      	strh	r0, [r4, #0]
90026a4c:	3402      	adds	r4, #2
90026a4e:	f10b 3aff 	add.w	sl, fp, #4294967295
90026a52:	f1ba 0f01 	cmp.w	sl, #1
90026a56:	dd22      	ble.n	90026a9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90026a58:	783b      	ldrb	r3, [r7, #0]
90026a5a:	091b      	lsrs	r3, r3, #4
90026a5c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026a60:	0e0b      	lsrs	r3, r1, #24
90026a62:	d006      	beq.n	90026a72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90026a64:	8822      	ldrh	r2, [r4, #0]
90026a66:	4640      	mov	r0, r8
90026a68:	9300      	str	r3, [sp, #0]
90026a6a:	464b      	mov	r3, r9
90026a6c:	f7ff ff30 	bl	900268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026a70:	8020      	strh	r0, [r4, #0]
90026a72:	f817 3b01 	ldrb.w	r3, [r7], #1
90026a76:	f003 030f 	and.w	r3, r3, #15
90026a7a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026a7e:	0e0b      	lsrs	r3, r1, #24
90026a80:	d006      	beq.n	90026a90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90026a82:	8862      	ldrh	r2, [r4, #2]
90026a84:	4640      	mov	r0, r8
90026a86:	9300      	str	r3, [sp, #0]
90026a88:	464b      	mov	r3, r9
90026a8a:	f7ff ff21 	bl	900268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026a8e:	8060      	strh	r0, [r4, #2]
90026a90:	3404      	adds	r4, #4
90026a92:	f1aa 0a02 	sub.w	sl, sl, #2
90026a96:	e7dc      	b.n	90026a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026a98:	462f      	mov	r7, r5
90026a9a:	46da      	mov	sl, fp
90026a9c:	e7d9      	b.n	90026a52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026a9e:	d10d      	bne.n	90026abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026aa0:	783b      	ldrb	r3, [r7, #0]
90026aa2:	091b      	lsrs	r3, r3, #4
90026aa4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026aa8:	0e0b      	lsrs	r3, r1, #24
90026aaa:	d006      	beq.n	90026aba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90026aac:	8822      	ldrh	r2, [r4, #0]
90026aae:	4640      	mov	r0, r8
90026ab0:	9300      	str	r3, [sp, #0]
90026ab2:	464b      	mov	r3, r9
90026ab4:	f7ff ff0c 	bl	900268d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026ab8:	8020      	strh	r0, [r4, #0]
90026aba:	3402      	adds	r4, #2
90026abc:	9b06      	ldr	r3, [sp, #24]
90026abe:	9a02      	ldr	r2, [sp, #8]
90026ac0:	881b      	ldrh	r3, [r3, #0]
90026ac2:	eba3 030b 	sub.w	r3, r3, fp
90026ac6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90026aca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90026ace:	4413      	add	r3, r2
90026ad0:	9a07      	ldr	r2, [sp, #28]
90026ad2:	fb93 f3f2 	sdiv	r3, r3, r2
90026ad6:	441d      	add	r5, r3
90026ad8:	e7a3      	b.n	90026a22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90026ada:	9b05      	ldr	r3, [sp, #20]
90026adc:	6818      	ldr	r0, [r3, #0]
90026ade:	6803      	ldr	r3, [r0, #0]
90026ae0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026ae2:	4798      	blx	r3
90026ae4:	b00d      	add	sp, #52	; 0x34
90026ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026aea:	bf00      	nop
90026aec:	24039704 	.word	0x24039704
90026af0:	240396fe 	.word	0x240396fe

90026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90026af4:	b570      	push	{r4, r5, r6, lr}
90026af6:	1214      	asrs	r4, r2, #8
90026af8:	788d      	ldrb	r5, [r1, #2]
90026afa:	f89d 6010 	ldrb.w	r6, [sp, #16]
90026afe:	10d0      	asrs	r0, r2, #3
90026b00:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026b04:	00d2      	lsls	r2, r2, #3
90026b06:	fb15 f503 	smulbb	r5, r5, r3
90026b0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026b0e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026b12:	b2d2      	uxtb	r2, r2
90026b14:	fb04 5506 	mla	r5, r4, r6, r5
90026b18:	784c      	ldrb	r4, [r1, #1]
90026b1a:	7809      	ldrb	r1, [r1, #0]
90026b1c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90026b20:	fb14 f403 	smulbb	r4, r4, r3
90026b24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90026b28:	fb11 f303 	smulbb	r3, r1, r3
90026b2c:	b2ad      	uxth	r5, r5
90026b2e:	fb00 4406 	mla	r4, r0, r6, r4
90026b32:	fb02 3306 	mla	r3, r2, r6, r3
90026b36:	1c68      	adds	r0, r5, #1
90026b38:	b2a4      	uxth	r4, r4
90026b3a:	b29b      	uxth	r3, r3
90026b3c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90026b40:	1c62      	adds	r2, r4, #1
90026b42:	1c58      	adds	r0, r3, #1
90026b44:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026b48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026b4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026b50:	0964      	lsrs	r4, r4, #5
90026b52:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026b56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026b5a:	4328      	orrs	r0, r5
90026b5c:	4320      	orrs	r0, r4
90026b5e:	bd70      	pop	{r4, r5, r6, pc}

90026b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90026b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026b64:	b08f      	sub	sp, #60	; 0x3c
90026b66:	461c      	mov	r4, r3
90026b68:	4682      	mov	sl, r0
90026b6a:	460e      	mov	r6, r1
90026b6c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90026b70:	4615      	mov	r5, r2
90026b72:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026b74:	2f00      	cmp	r7, #0
90026b76:	f000 8141 	beq.w	90026dfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90026b7a:	6820      	ldr	r0, [r4, #0]
90026b7c:	aa0a      	add	r2, sp, #40	; 0x28
90026b7e:	6861      	ldr	r1, [r4, #4]
90026b80:	f04f 0802 	mov.w	r8, #2
90026b84:	3504      	adds	r5, #4
90026b86:	c203      	stmia	r2!, {r0, r1}
90026b88:	6818      	ldr	r0, [r3, #0]
90026b8a:	aa0c      	add	r2, sp, #48	; 0x30
90026b8c:	6859      	ldr	r1, [r3, #4]
90026b8e:	c203      	stmia	r2!, {r0, r1}
90026b90:	a80a      	add	r0, sp, #40	; 0x28
90026b92:	f7ef fa99 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026b96:	4621      	mov	r1, r4
90026b98:	a80c      	add	r0, sp, #48	; 0x30
90026b9a:	f7ef fad9 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026b9e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90026ba2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90026ba6:	f002 0301 	and.w	r3, r2, #1
90026baa:	9306      	str	r3, [sp, #24]
90026bac:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026bb0:	f003 0101 	and.w	r1, r3, #1
90026bb4:	9105      	str	r1, [sp, #20]
90026bb6:	9805      	ldr	r0, [sp, #20]
90026bb8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90026bbc:	4403      	add	r3, r0
90026bbe:	fb01 2303 	mla	r3, r1, r3, r2
90026bc2:	fb93 f3f8 	sdiv	r3, r3, r8
90026bc6:	441e      	add	r6, r3
90026bc8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90026bcc:	441a      	add	r2, r3
90026bce:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90026bd2:	4419      	add	r1, r3
90026bd4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90026bd8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90026bdc:	9303      	str	r3, [sp, #12]
90026bde:	4b89      	ldr	r3, [pc, #548]	; (90026e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026be0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90026be4:	6818      	ldr	r0, [r3, #0]
90026be6:	6803      	ldr	r3, [r0, #0]
90026be8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026bea:	4798      	blx	r3
90026bec:	4a86      	ldr	r2, [pc, #536]	; (90026e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90026bee:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90026bf2:	2fff      	cmp	r7, #255	; 0xff
90026bf4:	8813      	ldrh	r3, [r2, #0]
90026bf6:	4694      	mov	ip, r2
90026bf8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90026bfc:	fb03 9404 	mla	r4, r3, r4, r9
90026c00:	fb03 f30b 	mul.w	r3, r3, fp
90026c04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026c08:	d071      	beq.n	90026cee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90026c0a:	43f9      	mvns	r1, r7
90026c0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026c10:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90026c14:	b2c9      	uxtb	r1, r1
90026c16:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026c1a:	9104      	str	r1, [sp, #16]
90026c1c:	9b07      	ldr	r3, [sp, #28]
90026c1e:	42a3      	cmp	r3, r4
90026c20:	f240 80e7 	bls.w	90026df2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026c24:	9b06      	ldr	r3, [sp, #24]
90026c26:	2b00      	cmp	r3, #0
90026c28:	d03d      	beq.n	90026ca6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90026c2a:	7831      	ldrb	r1, [r6, #0]
90026c2c:	4650      	mov	r0, sl
90026c2e:	9b04      	ldr	r3, [sp, #16]
90026c30:	f106 0801 	add.w	r8, r6, #1
90026c34:	f001 010f 	and.w	r1, r1, #15
90026c38:	8822      	ldrh	r2, [r4, #0]
90026c3a:	9300      	str	r3, [sp, #0]
90026c3c:	463b      	mov	r3, r7
90026c3e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026c42:	4429      	add	r1, r5
90026c44:	f7ff ff56 	bl	90026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026c48:	9b03      	ldr	r3, [sp, #12]
90026c4a:	f824 0b02 	strh.w	r0, [r4], #2
90026c4e:	f103 3bff 	add.w	fp, r3, #4294967295
90026c52:	f1bb 0f01 	cmp.w	fp, #1
90026c56:	46a1      	mov	r9, r4
90026c58:	f104 0404 	add.w	r4, r4, #4
90026c5c:	dd27      	ble.n	90026cae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90026c5e:	f898 1000 	ldrb.w	r1, [r8]
90026c62:	4650      	mov	r0, sl
90026c64:	9b04      	ldr	r3, [sp, #16]
90026c66:	f1ab 0b02 	sub.w	fp, fp, #2
90026c6a:	0909      	lsrs	r1, r1, #4
90026c6c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026c70:	9300      	str	r3, [sp, #0]
90026c72:	463b      	mov	r3, r7
90026c74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026c78:	4429      	add	r1, r5
90026c7a:	f7ff ff3b 	bl	90026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026c7e:	f824 0c04 	strh.w	r0, [r4, #-4]
90026c82:	f818 1b01 	ldrb.w	r1, [r8], #1
90026c86:	4650      	mov	r0, sl
90026c88:	9b04      	ldr	r3, [sp, #16]
90026c8a:	f001 010f 	and.w	r1, r1, #15
90026c8e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026c92:	9300      	str	r3, [sp, #0]
90026c94:	463b      	mov	r3, r7
90026c96:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026c9a:	4429      	add	r1, r5
90026c9c:	f7ff ff2a 	bl	90026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026ca0:	f824 0c02 	strh.w	r0, [r4, #-2]
90026ca4:	e7d5      	b.n	90026c52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026ca6:	46b0      	mov	r8, r6
90026ca8:	f8dd b00c 	ldr.w	fp, [sp, #12]
90026cac:	e7d1      	b.n	90026c52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026cae:	d10f      	bne.n	90026cd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90026cb0:	f898 1000 	ldrb.w	r1, [r8]
90026cb4:	4650      	mov	r0, sl
90026cb6:	9b04      	ldr	r3, [sp, #16]
90026cb8:	0909      	lsrs	r1, r1, #4
90026cba:	f8b9 2000 	ldrh.w	r2, [r9]
90026cbe:	9300      	str	r3, [sp, #0]
90026cc0:	463b      	mov	r3, r7
90026cc2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026cc6:	4429      	add	r1, r5
90026cc8:	f7ff ff14 	bl	90026af4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026ccc:	f829 0b02 	strh.w	r0, [r9], #2
90026cd0:	9b08      	ldr	r3, [sp, #32]
90026cd2:	9a05      	ldr	r2, [sp, #20]
90026cd4:	881c      	ldrh	r4, [r3, #0]
90026cd6:	9b03      	ldr	r3, [sp, #12]
90026cd8:	1ae4      	subs	r4, r4, r3
90026cda:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026cde:	4413      	add	r3, r2
90026ce0:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026ce2:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026ce6:	fb93 f3f2 	sdiv	r3, r3, r2
90026cea:	441e      	add	r6, r3
90026cec:	e796      	b.n	90026c1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90026cee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026cf2:	4f46      	ldr	r7, [pc, #280]	; (90026e0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90026cf4:	42a3      	cmp	r3, r4
90026cf6:	d97c      	bls.n	90026df2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026cf8:	9a06      	ldr	r2, [sp, #24]
90026cfa:	2a00      	cmp	r2, #0
90026cfc:	d054      	beq.n	90026da8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90026cfe:	7830      	ldrb	r0, [r6, #0]
90026d00:	1c71      	adds	r1, r6, #1
90026d02:	f000 000f 	and.w	r0, r0, #15
90026d06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026d0a:	eb05 0e00 	add.w	lr, r5, r0
90026d0e:	5c28      	ldrb	r0, [r5, r0]
90026d10:	f89e 2002 	ldrb.w	r2, [lr, #2]
90026d14:	f89e e001 	ldrb.w	lr, [lr, #1]
90026d18:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026d1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026d20:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90026d24:	ea42 020e 	orr.w	r2, r2, lr
90026d28:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90026d2c:	f824 2b02 	strh.w	r2, [r4], #2
90026d30:	9a03      	ldr	r2, [sp, #12]
90026d32:	f102 3eff 	add.w	lr, r2, #4294967295
90026d36:	f1be 0f01 	cmp.w	lr, #1
90026d3a:	4620      	mov	r0, r4
90026d3c:	f104 0404 	add.w	r4, r4, #4
90026d40:	dd36      	ble.n	90026db0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90026d42:	7808      	ldrb	r0, [r1, #0]
90026d44:	f1ae 0e02 	sub.w	lr, lr, #2
90026d48:	0900      	lsrs	r0, r0, #4
90026d4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026d4e:	eb05 0a00 	add.w	sl, r5, r0
90026d52:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026d56:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026d5a:	00d2      	lsls	r2, r2, #3
90026d5c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026d60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026d64:	ea49 0202 	orr.w	r2, r9, r2
90026d68:	f815 9000 	ldrb.w	r9, [r5, r0]
90026d6c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026d70:	f824 2c04 	strh.w	r2, [r4, #-4]
90026d74:	f811 0b01 	ldrb.w	r0, [r1], #1
90026d78:	f000 000f 	and.w	r0, r0, #15
90026d7c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026d80:	eb05 0a00 	add.w	sl, r5, r0
90026d84:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026d88:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026d8c:	00d2      	lsls	r2, r2, #3
90026d8e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026d92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026d96:	ea49 0202 	orr.w	r2, r9, r2
90026d9a:	f815 9000 	ldrb.w	r9, [r5, r0]
90026d9e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026da2:	f824 2c02 	strh.w	r2, [r4, #-2]
90026da6:	e7c6      	b.n	90026d36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026da8:	4631      	mov	r1, r6
90026daa:	f8dd e00c 	ldr.w	lr, [sp, #12]
90026dae:	e7c2      	b.n	90026d36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026db0:	d111      	bne.n	90026dd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90026db2:	7809      	ldrb	r1, [r1, #0]
90026db4:	0909      	lsrs	r1, r1, #4
90026db6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026dba:	186c      	adds	r4, r5, r1
90026dbc:	5c69      	ldrb	r1, [r5, r1]
90026dbe:	78a2      	ldrb	r2, [r4, #2]
90026dc0:	7864      	ldrb	r4, [r4, #1]
90026dc2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026dc6:	00e4      	lsls	r4, r4, #3
90026dc8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026dcc:	4322      	orrs	r2, r4
90026dce:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90026dd2:	f820 2b02 	strh.w	r2, [r0], #2
90026dd6:	9a03      	ldr	r2, [sp, #12]
90026dd8:	f8bc 4000 	ldrh.w	r4, [ip]
90026ddc:	9905      	ldr	r1, [sp, #20]
90026dde:	1aa4      	subs	r4, r4, r2
90026de0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90026de4:	440a      	add	r2, r1
90026de6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026dea:	fb92 f2f8 	sdiv	r2, r2, r8
90026dee:	4416      	add	r6, r2
90026df0:	e780      	b.n	90026cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90026df2:	4b04      	ldr	r3, [pc, #16]	; (90026e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026df4:	6818      	ldr	r0, [r3, #0]
90026df6:	6803      	ldr	r3, [r0, #0]
90026df8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026dfa:	4798      	blx	r3
90026dfc:	b00f      	add	sp, #60	; 0x3c
90026dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026e02:	bf00      	nop
90026e04:	24039704 	.word	0x24039704
90026e08:	240396fe 	.word	0x240396fe
90026e0c:	fffff800 	.word	0xfffff800

90026e10 <CRC_Lock>:
90026e10:	4a20      	ldr	r2, [pc, #128]	; (90026e94 <CRC_Lock+0x84>)
90026e12:	b530      	push	{r4, r5, lr}
90026e14:	6813      	ldr	r3, [r2, #0]
90026e16:	f64f 74f0 	movw	r4, #65520	; 0xfff0
90026e1a:	f24c 2540 	movw	r5, #49728	; 0xc240
90026e1e:	f023 0301 	bic.w	r3, r3, #1
90026e22:	6013      	str	r3, [r2, #0]
90026e24:	4b1c      	ldr	r3, [pc, #112]	; (90026e98 <CRC_Lock+0x88>)
90026e26:	681a      	ldr	r2, [r3, #0]
90026e28:	4022      	ands	r2, r4
90026e2a:	42aa      	cmp	r2, r5
90026e2c:	d005      	beq.n	90026e3a <CRC_Lock+0x2a>
90026e2e:	681b      	ldr	r3, [r3, #0]
90026e30:	f24c 2270 	movw	r2, #49776	; 0xc270
90026e34:	4023      	ands	r3, r4
90026e36:	4293      	cmp	r3, r2
90026e38:	d124      	bne.n	90026e84 <CRC_Lock+0x74>
90026e3a:	4b18      	ldr	r3, [pc, #96]	; (90026e9c <CRC_Lock+0x8c>)
90026e3c:	681b      	ldr	r3, [r3, #0]
90026e3e:	bb0b      	cbnz	r3, 90026e84 <CRC_Lock+0x74>
90026e40:	4b17      	ldr	r3, [pc, #92]	; (90026ea0 <CRC_Lock+0x90>)
90026e42:	681a      	ldr	r2, [r3, #0]
90026e44:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026e48:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90026e4c:	d00d      	beq.n	90026e6a <CRC_Lock+0x5a>
90026e4e:	681a      	ldr	r2, [r3, #0]
90026e50:	f240 4483 	movw	r4, #1155	; 0x483
90026e54:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026e58:	42a2      	cmp	r2, r4
90026e5a:	d006      	beq.n	90026e6a <CRC_Lock+0x5a>
90026e5c:	681b      	ldr	r3, [r3, #0]
90026e5e:	f240 4285 	movw	r2, #1157	; 0x485
90026e62:	f3c3 030b 	ubfx	r3, r3, #0, #12
90026e66:	4293      	cmp	r3, r2
90026e68:	d10c      	bne.n	90026e84 <CRC_Lock+0x74>
90026e6a:	4b0e      	ldr	r3, [pc, #56]	; (90026ea4 <CRC_Lock+0x94>)
90026e6c:	2201      	movs	r2, #1
90026e6e:	601a      	str	r2, [r3, #0]
90026e70:	681a      	ldr	r2, [r3, #0]
90026e72:	2a00      	cmp	r2, #0
90026e74:	d1fc      	bne.n	90026e70 <CRC_Lock+0x60>
90026e76:	4b0c      	ldr	r3, [pc, #48]	; (90026ea8 <CRC_Lock+0x98>)
90026e78:	6018      	str	r0, [r3, #0]
90026e7a:	6818      	ldr	r0, [r3, #0]
90026e7c:	1a43      	subs	r3, r0, r1
90026e7e:	4258      	negs	r0, r3
90026e80:	4158      	adcs	r0, r3
90026e82:	bd30      	pop	{r4, r5, pc}
90026e84:	4b09      	ldr	r3, [pc, #36]	; (90026eac <CRC_Lock+0x9c>)
90026e86:	2201      	movs	r2, #1
90026e88:	601a      	str	r2, [r3, #0]
90026e8a:	681a      	ldr	r2, [r3, #0]
90026e8c:	2a00      	cmp	r2, #0
90026e8e:	d1fc      	bne.n	90026e8a <CRC_Lock+0x7a>
90026e90:	4b07      	ldr	r3, [pc, #28]	; (90026eb0 <CRC_Lock+0xa0>)
90026e92:	e7f1      	b.n	90026e78 <CRC_Lock+0x68>
90026e94:	e0002000 	.word	0xe0002000
90026e98:	e000ed00 	.word	0xe000ed00
90026e9c:	e0042000 	.word	0xe0042000
90026ea0:	5c001000 	.word	0x5c001000
90026ea4:	58024c08 	.word	0x58024c08
90026ea8:	58024c00 	.word	0x58024c00
90026eac:	40023008 	.word	0x40023008
90026eb0:	40023000 	.word	0x40023000

90026eb4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90026eb4:	6101      	str	r1, [r0, #16]
90026eb6:	4770      	bx	lr

90026eb8 <_ZN8touchgfx8Gestures4tickEv>:
90026eb8:	7b83      	ldrb	r3, [r0, #14]
90026eba:	b14b      	cbz	r3, 90026ed0 <_ZN8touchgfx8Gestures4tickEv+0x18>
90026ebc:	8903      	ldrh	r3, [r0, #8]
90026ebe:	3301      	adds	r3, #1
90026ec0:	b29b      	uxth	r3, r3
90026ec2:	2b07      	cmp	r3, #7
90026ec4:	8103      	strh	r3, [r0, #8]
90026ec6:	bf81      	itttt	hi
90026ec8:	2300      	movhi	r3, #0
90026eca:	8143      	strhhi	r3, [r0, #10]
90026ecc:	8183      	strhhi	r3, [r0, #12]
90026ece:	7383      	strbhi	r3, [r0, #14]
90026ed0:	4770      	bx	lr
	...

90026ed4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90026ed4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90026ed8:	4698      	mov	r8, r3
90026eda:	8883      	ldrh	r3, [r0, #4]
90026edc:	4604      	mov	r4, r0
90026ede:	4617      	mov	r7, r2
90026ee0:	f8ad 3006 	strh.w	r3, [sp, #6]
90026ee4:	eba8 0303 	sub.w	r3, r8, r3
90026ee8:	4a19      	ldr	r2, [pc, #100]	; (90026f50 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90026eea:	460e      	mov	r6, r1
90026eec:	b21b      	sxth	r3, r3
90026eee:	88c1      	ldrh	r1, [r0, #6]
90026ef0:	9200      	str	r2, [sp, #0]
90026ef2:	2000      	movs	r0, #0
90026ef4:	2b00      	cmp	r3, #0
90026ef6:	8aa2      	ldrh	r2, [r4, #20]
90026ef8:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90026efc:	bfb8      	it	lt
90026efe:	425b      	neglt	r3, r3
90026f00:	f88d 0004 	strb.w	r0, [sp, #4]
90026f04:	f8ad 1008 	strh.w	r1, [sp, #8]
90026f08:	b21b      	sxth	r3, r3
90026f0a:	f8ad 800a 	strh.w	r8, [sp, #10]
90026f0e:	f8ad 500c 	strh.w	r5, [sp, #12]
90026f12:	4293      	cmp	r3, r2
90026f14:	dc07      	bgt.n	90026f26 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90026f16:	1a69      	subs	r1, r5, r1
90026f18:	b209      	sxth	r1, r1
90026f1a:	2900      	cmp	r1, #0
90026f1c:	bfb8      	it	lt
90026f1e:	4249      	neglt	r1, r1
90026f20:	b209      	sxth	r1, r1
90026f22:	428a      	cmp	r2, r1
90026f24:	da10      	bge.n	90026f48 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90026f26:	6920      	ldr	r0, [r4, #16]
90026f28:	4669      	mov	r1, sp
90026f2a:	eba8 0606 	sub.w	r6, r8, r6
90026f2e:	1bef      	subs	r7, r5, r7
90026f30:	6803      	ldr	r3, [r0, #0]
90026f32:	685b      	ldr	r3, [r3, #4]
90026f34:	4798      	blx	r3
90026f36:	2300      	movs	r3, #0
90026f38:	2001      	movs	r0, #1
90026f3a:	8166      	strh	r6, [r4, #10]
90026f3c:	8123      	strh	r3, [r4, #8]
90026f3e:	81a7      	strh	r7, [r4, #12]
90026f40:	f8a4 8004 	strh.w	r8, [r4, #4]
90026f44:	80e5      	strh	r5, [r4, #6]
90026f46:	73a0      	strb	r0, [r4, #14]
90026f48:	b004      	add	sp, #16
90026f4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026f4e:	bf00      	nop
90026f50:	9002bb88 	.word	0x9002bb88

90026f54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90026f54:	b5f0      	push	{r4, r5, r6, r7, lr}
90026f56:	461e      	mov	r6, r3
90026f58:	1e4b      	subs	r3, r1, #1
90026f5a:	b085      	sub	sp, #20
90026f5c:	4604      	mov	r4, r0
90026f5e:	2b01      	cmp	r3, #1
90026f60:	460d      	mov	r5, r1
90026f62:	4617      	mov	r7, r2
90026f64:	d84b      	bhi.n	90026ffe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90026f66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90026f6a:	1cd3      	adds	r3, r2, #3
90026f6c:	b29b      	uxth	r3, r3
90026f6e:	2b06      	cmp	r3, #6
90026f70:	d916      	bls.n	90026fa0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90026f72:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90027014 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90026f76:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90026f7a:	f8cd c004 	str.w	ip, [sp, #4]
90026f7e:	f04f 0c00 	mov.w	ip, #0
90026f82:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90026f86:	6900      	ldr	r0, [r0, #16]
90026f88:	f8ad 100c 	strh.w	r1, [sp, #12]
90026f8c:	a901      	add	r1, sp, #4
90026f8e:	f88d c008 	strb.w	ip, [sp, #8]
90026f92:	f8ad 200a 	strh.w	r2, [sp, #10]
90026f96:	f8ad 300e 	strh.w	r3, [sp, #14]
90026f9a:	6803      	ldr	r3, [r0, #0]
90026f9c:	689b      	ldr	r3, [r3, #8]
90026f9e:	4798      	blx	r3
90026fa0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026fa4:	1cd3      	adds	r3, r2, #3
90026fa6:	b29b      	uxth	r3, r3
90026fa8:	2b06      	cmp	r3, #6
90026faa:	d916      	bls.n	90026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026fac:	f8df c064 	ldr.w	ip, [pc, #100]	; 90027014 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90026fb0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90026fb4:	f8cd c004 	str.w	ip, [sp, #4]
90026fb8:	f04f 0c01 	mov.w	ip, #1
90026fbc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90026fc0:	6920      	ldr	r0, [r4, #16]
90026fc2:	f8ad 100c 	strh.w	r1, [sp, #12]
90026fc6:	a901      	add	r1, sp, #4
90026fc8:	f88d c008 	strb.w	ip, [sp, #8]
90026fcc:	f8ad 200a 	strh.w	r2, [sp, #10]
90026fd0:	f8ad 300e 	strh.w	r3, [sp, #14]
90026fd4:	6803      	ldr	r3, [r0, #0]
90026fd6:	689b      	ldr	r3, [r3, #8]
90026fd8:	4798      	blx	r3
90026fda:	4b0d      	ldr	r3, [pc, #52]	; (90027010 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90026fdc:	a901      	add	r1, sp, #4
90026fde:	6920      	ldr	r0, [r4, #16]
90026fe0:	9301      	str	r3, [sp, #4]
90026fe2:	2300      	movs	r3, #0
90026fe4:	f88d 5008 	strb.w	r5, [sp, #8]
90026fe8:	f8ad 700a 	strh.w	r7, [sp, #10]
90026fec:	f8ad 600c 	strh.w	r6, [sp, #12]
90026ff0:	f8ad 300e 	strh.w	r3, [sp, #14]
90026ff4:	6803      	ldr	r3, [r0, #0]
90026ff6:	681b      	ldr	r3, [r3, #0]
90026ff8:	4798      	blx	r3
90026ffa:	b005      	add	sp, #20
90026ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026ffe:	2900      	cmp	r1, #0
90027000:	d1eb      	bne.n	90026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027002:	80a2      	strh	r2, [r4, #4]
90027004:	80c6      	strh	r6, [r0, #6]
90027006:	60a1      	str	r1, [r4, #8]
90027008:	81a1      	strh	r1, [r4, #12]
9002700a:	73a1      	strb	r1, [r4, #14]
9002700c:	e7e5      	b.n	90026fda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002700e:	bf00      	nop
90027010:	9002bb74 	.word	0x9002bb74
90027014:	9002bb9c 	.word	0x9002bb9c

90027018 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90027018:	10c9      	asrs	r1, r1, #3
9002701a:	2900      	cmp	r1, #0
9002701c:	bfb8      	it	lt
9002701e:	4249      	neglt	r1, r1
90027020:	2801      	cmp	r0, #1
90027022:	d108      	bne.n	90027036 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90027024:	f3c1 0008 	ubfx	r0, r1, #0, #9
90027028:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9002702c:	4601      	mov	r1, r0
9002702e:	dd02      	ble.n	90027036 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90027030:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90027034:	4770      	bx	lr
90027036:	29ff      	cmp	r1, #255	; 0xff
90027038:	bfa8      	it	ge
9002703a:	21ff      	movge	r1, #255	; 0xff
9002703c:	4608      	mov	r0, r1
9002703e:	4770      	bx	lr

90027040 <_ZN8touchgfx10Rasterizer6lineToEii>:
90027040:	b410      	push	{r4}
90027042:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90027046:	429c      	cmp	r4, r3
90027048:	d803      	bhi.n	90027052 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002704a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002704e:	f7ed bb45 	b.w	900146dc <_ZN8touchgfx7Outline6lineToEii>
90027052:	f85d 4b04 	ldr.w	r4, [sp], #4
90027056:	4770      	bx	lr

90027058 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90027058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002705c:	b08b      	sub	sp, #44	; 0x2c
9002705e:	4606      	mov	r6, r0
90027060:	468a      	mov	sl, r1
90027062:	e9cd 2306 	strd	r2, r3, [sp, #24]
90027066:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9002706a:	9308      	str	r3, [sp, #32]
9002706c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90027070:	9309      	str	r3, [sp, #36]	; 0x24
90027072:	f7ed fc9e 	bl	900149b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90027076:	68b5      	ldr	r5, [r6, #8]
90027078:	4604      	mov	r4, r0
9002707a:	2d00      	cmp	r5, #0
9002707c:	d044      	beq.n	90027108 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002707e:	6873      	ldr	r3, [r6, #4]
90027080:	42ab      	cmp	r3, r5
90027082:	d33d      	bcc.n	90027100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90027084:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90027088:	f04f 0800 	mov.w	r8, #0
9002708c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90027090:	eb02 0b03 	add.w	fp, r2, r3
90027094:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90027098:	fb02 1203 	mla	r2, r2, r3, r1
9002709c:	9205      	str	r2, [sp, #20]
9002709e:	1e6a      	subs	r2, r5, #1
900270a0:	9204      	str	r2, [sp, #16]
900270a2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
900270a6:	f9b4 7000 	ldrsh.w	r7, [r4]
900270aa:	454b      	cmp	r3, r9
900270ac:	463a      	mov	r2, r7
900270ae:	d008      	beq.n	900270c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
900270b0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
900270b4:	eb03 0b09 	add.w	fp, r3, r9
900270b8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
900270bc:	fb03 1309 	mla	r3, r3, r9, r1
900270c0:	9305      	str	r3, [sp, #20]
900270c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900270c6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900270ca:	4498      	add	r8, r3
900270cc:	9b04      	ldr	r3, [sp, #16]
900270ce:	3b01      	subs	r3, #1
900270d0:	9304      	str	r3, [sp, #16]
900270d2:	9b04      	ldr	r3, [sp, #16]
900270d4:	3301      	adds	r3, #1
900270d6:	d015      	beq.n	90027104 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
900270d8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
900270dc:	42bb      	cmp	r3, r7
900270de:	d117      	bne.n	90027110 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
900270e0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
900270e4:	9b04      	ldr	r3, [sp, #16]
900270e6:	4548      	cmp	r0, r9
900270e8:	f103 33ff 	add.w	r3, r3, #4294967295
900270ec:	d17d      	bne.n	900271ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
900270ee:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
900270f2:	4401      	add	r1, r0
900270f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900270f8:	4480      	add	r8, r0
900270fa:	e7e9      	b.n	900270d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
900270fc:	461f      	mov	r7, r3
900270fe:	e042      	b.n	90027186 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90027100:	2000      	movs	r0, #0
90027102:	e002      	b.n	9002710a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90027104:	2900      	cmp	r1, #0
90027106:	d16d      	bne.n	900271e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90027108:	2001      	movs	r0, #1
9002710a:	b00b      	add	sp, #44	; 0x2c
9002710c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027110:	b379      	cbz	r1, 90027172 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90027112:	2f00      	cmp	r7, #0
90027114:	db29      	blt.n	9002716a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027116:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002711a:	42bb      	cmp	r3, r7
9002711c:	dd25      	ble.n	9002716a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002711e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90027122:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90027126:	f7ff ff77 	bl	90027018 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002712a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002712c:	fb10 f003 	smulbb	r0, r0, r3
90027130:	b280      	uxth	r0, r0
90027132:	1c41      	adds	r1, r0, #1
90027134:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027138:	1209      	asrs	r1, r1, #8
9002713a:	f011 0fff 	tst.w	r1, #255	; 0xff
9002713e:	d014      	beq.n	9002716a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027140:	b2c9      	uxtb	r1, r1
90027142:	9808      	ldr	r0, [sp, #32]
90027144:	b2ba      	uxth	r2, r7
90027146:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90027148:	9102      	str	r1, [sp, #8]
9002714a:	2101      	movs	r1, #1
9002714c:	4413      	add	r3, r2
9002714e:	4402      	add	r2, r0
90027150:	9101      	str	r1, [sp, #4]
90027152:	fa0f f18b 	sxth.w	r1, fp
90027156:	f8da 0000 	ldr.w	r0, [sl]
9002715a:	b21b      	sxth	r3, r3
9002715c:	9100      	str	r1, [sp, #0]
9002715e:	b212      	sxth	r2, r2
90027160:	6941      	ldr	r1, [r0, #20]
90027162:	4650      	mov	r0, sl
90027164:	460d      	mov	r5, r1
90027166:	9905      	ldr	r1, [sp, #20]
90027168:	47a8      	blx	r5
9002716a:	9b04      	ldr	r3, [sp, #16]
9002716c:	1c7a      	adds	r2, r7, #1
9002716e:	3301      	adds	r3, #1
90027170:	d0ca      	beq.n	90027108 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90027172:	f9b4 7000 	ldrsh.w	r7, [r4]
90027176:	1abb      	subs	r3, r7, r2
90027178:	2b00      	cmp	r3, #0
9002717a:	dd31      	ble.n	900271e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002717c:	2a00      	cmp	r2, #0
9002717e:	dabd      	bge.n	900270fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90027180:	2f00      	cmp	r7, #0
90027182:	dd2d      	ble.n	900271e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027184:	2200      	movs	r2, #0
90027186:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002718a:	19d1      	adds	r1, r2, r7
9002718c:	4299      	cmp	r1, r3
9002718e:	db02      	blt.n	90027196 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90027190:	1a9f      	subs	r7, r3, r2
90027192:	2f00      	cmp	r7, #0
90027194:	dd24      	ble.n	900271e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027196:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002719a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002719e:	f7ff ff3b 	bl	90027018 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
900271a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900271a4:	fb10 f003 	smulbb	r0, r0, r3
900271a8:	b280      	uxth	r0, r0
900271aa:	1c41      	adds	r1, r0, #1
900271ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900271b0:	1209      	asrs	r1, r1, #8
900271b2:	f011 0fff 	tst.w	r1, #255	; 0xff
900271b6:	d013      	beq.n	900271e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900271b8:	b292      	uxth	r2, r2
900271ba:	9808      	ldr	r0, [sp, #32]
900271bc:	b2c9      	uxtb	r1, r1
900271be:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900271c0:	b23f      	sxth	r7, r7
900271c2:	4413      	add	r3, r2
900271c4:	9102      	str	r1, [sp, #8]
900271c6:	4402      	add	r2, r0
900271c8:	fa0f f18b 	sxth.w	r1, fp
900271cc:	f8da 0000 	ldr.w	r0, [sl]
900271d0:	b21b      	sxth	r3, r3
900271d2:	9100      	str	r1, [sp, #0]
900271d4:	b212      	sxth	r2, r2
900271d6:	9701      	str	r7, [sp, #4]
900271d8:	9905      	ldr	r1, [sp, #20]
900271da:	6947      	ldr	r7, [r0, #20]
900271dc:	4650      	mov	r0, sl
900271de:	47b8      	blx	r7
900271e0:	464b      	mov	r3, r9
900271e2:	e75e      	b.n	900270a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
900271e4:	2f00      	cmp	r7, #0
900271e6:	da96      	bge.n	90027116 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
900271e8:	e78e      	b.n	90027108 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900271ea:	2900      	cmp	r1, #0
900271ec:	d0f8      	beq.n	900271e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900271ee:	e790      	b.n	90027112 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

900271f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
900271f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900271f4:	4b4a      	ldr	r3, [pc, #296]	; (90027320 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
900271f6:	2500      	movs	r5, #0
900271f8:	f100 0620 	add.w	r6, r0, #32
900271fc:	4604      	mov	r4, r0
900271fe:	4690      	mov	r8, r2
90027200:	f100 0718 	add.w	r7, r0, #24
90027204:	e9c0 3100 	strd	r3, r1, [r0]
90027208:	e9c0 5502 	strd	r5, r5, [r0, #8]
9002720c:	e9c0 5504 	strd	r5, r5, [r0, #16]
90027210:	e9c0 5506 	strd	r5, r5, [r0, #24]
90027214:	4630      	mov	r0, r6
90027216:	f7ec fda7 	bl	90013d68 <_ZN8touchgfx7OutlineC1Ev>
9002721a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
9002721e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90027222:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90027226:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
9002722a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
9002722e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
90027232:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
90027236:	f8d4 c004 	ldr.w	ip, [r4, #4]
9002723a:	9500      	str	r5, [sp, #0]
9002723c:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90027240:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
90027244:	f9b8 2000 	ldrsh.w	r2, [r8]
90027248:	f8b8 0004 	ldrh.w	r0, [r8, #4]
9002724c:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
90027250:	4410      	add	r0, r2
90027252:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
90027256:	b280      	uxth	r0, r0
90027258:	fa0f fa80 	sxth.w	sl, r0
9002725c:	45aa      	cmp	sl, r5
9002725e:	dd5c      	ble.n	9002731a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027260:	4591      	cmp	r9, r2
90027262:	dd5a      	ble.n	9002731a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027264:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
90027268:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9002726c:	440b      	add	r3, r1
9002726e:	b29b      	uxth	r3, r3
90027270:	b21d      	sxth	r5, r3
90027272:	2d00      	cmp	r5, #0
90027274:	dd51      	ble.n	9002731a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90027276:	458e      	cmp	lr, r1
90027278:	dd4f      	ble.n	9002731a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002727a:	45d1      	cmp	r9, sl
9002727c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90027280:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90027284:	bfb8      	it	lt
90027286:	fa1f f089 	uxthlt.w	r0, r9
9002728a:	45ae      	cmp	lr, r5
9002728c:	f8ad 2000 	strh.w	r2, [sp]
90027290:	bfb8      	it	lt
90027292:	fa1f f38e 	uxthlt.w	r3, lr
90027296:	1a80      	subs	r0, r0, r2
90027298:	f8ad 1002 	strh.w	r1, [sp, #2]
9002729c:	1a5b      	subs	r3, r3, r1
9002729e:	f8ad 0004 	strh.w	r0, [sp, #4]
900272a2:	f8ad 3006 	strh.w	r3, [sp, #6]
900272a6:	466d      	mov	r5, sp
900272a8:	e895 0003 	ldmia.w	r5, {r0, r1}
900272ac:	e887 0003 	stmia.w	r7, {r0, r1}
900272b0:	f8dc 3000 	ldr.w	r3, [ip]
900272b4:	4660      	mov	r0, ip
900272b6:	4639      	mov	r1, r7
900272b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900272ba:	4798      	blx	r3
900272bc:	6861      	ldr	r1, [r4, #4]
900272be:	4628      	mov	r0, r5
900272c0:	3104      	adds	r1, #4
900272c2:	f7ee ff45 	bl	90016150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900272c6:	4638      	mov	r0, r7
900272c8:	f7ee fefe 	bl	900160c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900272cc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900272d0:	f8bd 2000 	ldrh.w	r2, [sp]
900272d4:	4630      	mov	r0, r6
900272d6:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
900272da:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
900272de:	f7ec fd27 	bl	90013d30 <_ZN8touchgfx7Outline5resetEv>
900272e2:	f9bd 3000 	ldrsh.w	r3, [sp]
900272e6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
900272ea:	4620      	mov	r0, r4
900272ec:	015b      	lsls	r3, r3, #5
900272ee:	60a3      	str	r3, [r4, #8]
900272f0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900272f4:	015b      	lsls	r3, r3, #5
900272f6:	60e3      	str	r3, [r4, #12]
900272f8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900272fc:	015b      	lsls	r3, r3, #5
900272fe:	6123      	str	r3, [r4, #16]
90027300:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90027304:	015b      	lsls	r3, r3, #5
90027306:	6163      	str	r3, [r4, #20]
90027308:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9002730c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90027310:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90027314:	b002      	add	sp, #8
90027316:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002731a:	2300      	movs	r3, #0
9002731c:	9301      	str	r3, [sp, #4]
9002731e:	e7c2      	b.n	900272a6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90027320:	9002bec0 	.word	0x9002bec0

90027324 <_ZN8touchgfx6Canvas5closeEv>:
90027324:	b538      	push	{r3, r4, r5, lr}
90027326:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002732a:	4604      	mov	r4, r0
9002732c:	b193      	cbz	r3, 90027354 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002732e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
90027332:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
90027336:	4213      	tst	r3, r2
90027338:	d10c      	bne.n	90027354 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002733a:	f100 0520 	add.w	r5, r0, #32
9002733e:	b123      	cbz	r3, 9002734a <_ZN8touchgfx6Canvas5closeEv+0x26>
90027340:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
90027344:	4628      	mov	r0, r5
90027346:	f7ff fe7b 	bl	90027040 <_ZN8touchgfx10Rasterizer6lineToEii>
9002734a:	4628      	mov	r0, r5
9002734c:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
90027350:	f7ff fe76 	bl	90027040 <_ZN8touchgfx10Rasterizer6lineToEii>
90027354:	2300      	movs	r3, #0
90027356:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
9002735a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
9002735e:	4298      	cmp	r0, r3
90027360:	bf34      	ite	cc
90027362:	2000      	movcc	r0, #0
90027364:	2001      	movcs	r0, #1
90027366:	bd38      	pop	{r3, r4, r5, pc}

90027368 <_ZN8touchgfx6Canvas6renderEh>:
90027368:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002736c:	4604      	mov	r4, r0
9002736e:	6840      	ldr	r0, [r0, #4]
90027370:	460d      	mov	r5, r1
90027372:	6803      	ldr	r3, [r0, #0]
90027374:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90027376:	4798      	blx	r3
90027378:	fb10 f105 	smulbb	r1, r0, r5
9002737c:	b289      	uxth	r1, r1
9002737e:	1c4d      	adds	r5, r1, #1
90027380:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90027384:	122d      	asrs	r5, r5, #8
90027386:	f000 809c 	beq.w	900274c2 <_ZN8touchgfx6Canvas6renderEh+0x15a>
9002738a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
9002738e:	2b00      	cmp	r3, #0
90027390:	f000 8097 	beq.w	900274c2 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90027394:	4620      	mov	r0, r4
90027396:	f7ff ffc5 	bl	90027324 <_ZN8touchgfx6Canvas5closeEv>
9002739a:	4607      	mov	r7, r0
9002739c:	2800      	cmp	r0, #0
9002739e:	d048      	beq.n	90027432 <_ZN8touchgfx6Canvas6renderEh+0xca>
900273a0:	6863      	ldr	r3, [r4, #4]
900273a2:	4e49      	ldr	r6, [pc, #292]	; (900274c8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
900273a4:	6a98      	ldr	r0, [r3, #40]	; 0x28
900273a6:	6837      	ldr	r7, [r6, #0]
900273a8:	6803      	ldr	r3, [r0, #0]
900273aa:	689b      	ldr	r3, [r3, #8]
900273ac:	4798      	blx	r3
900273ae:	4601      	mov	r1, r0
900273b0:	4638      	mov	r0, r7
900273b2:	f7ea fd35 	bl	90011e20 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900273b6:	4607      	mov	r7, r0
900273b8:	f7ea f8f6 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900273bc:	6803      	ldr	r3, [r0, #0]
900273be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900273c0:	4798      	blx	r3
900273c2:	4680      	mov	r8, r0
900273c4:	f7ea f8f0 	bl	900115a8 <_ZN8touchgfx3HAL3lcdEv>
900273c8:	6803      	ldr	r3, [r0, #0]
900273ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900273cc:	4798      	blx	r3
900273ce:	280b      	cmp	r0, #11
900273d0:	d85c      	bhi.n	9002748c <_ZN8touchgfx6Canvas6renderEh+0x124>
900273d2:	e8df f000 	tbb	[pc, r0]
900273d6:	5d52      	.short	0x5d52
900273d8:	325b066d 	.word	0x325b066d
900273dc:	66666642 	.word	0x66666642
900273e0:	6666      	.short	0x6666
900273e2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900273e6:	2208      	movs	r2, #8
900273e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900273ec:	fb91 f2f2 	sdiv	r2, r1, r2
900273f0:	fb08 2303 	mla	r3, r8, r3, r2
900273f4:	441f      	add	r7, r3
900273f6:	424b      	negs	r3, r1
900273f8:	f001 0107 	and.w	r1, r1, #7
900273fc:	f003 0307 	and.w	r3, r3, #7
90027400:	bf58      	it	pl
90027402:	4259      	negpl	r1, r3
90027404:	b2c9      	uxtb	r1, r1
90027406:	6860      	ldr	r0, [r4, #4]
90027408:	b2ed      	uxtb	r5, r5
9002740a:	463a      	mov	r2, r7
9002740c:	fa0f f388 	sxth.w	r3, r8
90027410:	e9cd 1500 	strd	r1, r5, [sp]
90027414:	6a81      	ldr	r1, [r0, #40]	; 0x28
90027416:	f104 0020 	add.w	r0, r4, #32
9002741a:	f7ff fe1d 	bl	90027058 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002741e:	6863      	ldr	r3, [r4, #4]
90027420:	4607      	mov	r7, r0
90027422:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027424:	6803      	ldr	r3, [r0, #0]
90027426:	691b      	ldr	r3, [r3, #16]
90027428:	4798      	blx	r3
9002742a:	6830      	ldr	r0, [r6, #0]
9002742c:	6803      	ldr	r3, [r0, #0]
9002742e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90027430:	4798      	blx	r3
90027432:	4638      	mov	r0, r7
90027434:	b002      	add	sp, #8
90027436:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002743a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002743e:	2204      	movs	r2, #4
90027440:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027444:	fb91 f2f2 	sdiv	r2, r1, r2
90027448:	fb08 2303 	mla	r3, r8, r3, r2
9002744c:	441f      	add	r7, r3
9002744e:	424b      	negs	r3, r1
90027450:	f001 0103 	and.w	r1, r1, #3
90027454:	f003 0303 	and.w	r3, r3, #3
90027458:	e7d2      	b.n	90027400 <_ZN8touchgfx6Canvas6renderEh+0x98>
9002745a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002745e:	2202      	movs	r2, #2
90027460:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027464:	2900      	cmp	r1, #0
90027466:	fb91 f2f2 	sdiv	r2, r1, r2
9002746a:	f001 0101 	and.w	r1, r1, #1
9002746e:	fb08 2303 	mla	r3, r8, r3, r2
90027472:	bfb8      	it	lt
90027474:	4249      	neglt	r1, r1
90027476:	441f      	add	r7, r3
90027478:	e7c4      	b.n	90027404 <_ZN8touchgfx6Canvas6renderEh+0x9c>
9002747a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002747e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027482:	fb08 f303 	mul.w	r3, r8, r3
90027486:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002748a:	441f      	add	r7, r3
9002748c:	2100      	movs	r1, #0
9002748e:	e7ba      	b.n	90027406 <_ZN8touchgfx6Canvas6renderEh+0x9e>
90027490:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027494:	2103      	movs	r1, #3
90027496:	fb08 f203 	mul.w	r2, r8, r3
9002749a:	8b23      	ldrh	r3, [r4, #24]
9002749c:	fb13 2301 	smlabb	r3, r3, r1, r2
900274a0:	e7f3      	b.n	9002748a <_ZN8touchgfx6Canvas6renderEh+0x122>
900274a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900274a6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900274aa:	fb08 2303 	mla	r3, r8, r3, r2
900274ae:	e7ec      	b.n	9002748a <_ZN8touchgfx6Canvas6renderEh+0x122>
900274b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900274b4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900274b8:	fb08 f303 	mul.w	r3, r8, r3
900274bc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900274c0:	e7e3      	b.n	9002748a <_ZN8touchgfx6Canvas6renderEh+0x122>
900274c2:	2701      	movs	r7, #1
900274c4:	e7b5      	b.n	90027432 <_ZN8touchgfx6Canvas6renderEh+0xca>
900274c6:	bf00      	nop
900274c8:	24039704 	.word	0x24039704

900274cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900274cc:	4b07      	ldr	r3, [pc, #28]	; (900274ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
900274ce:	b510      	push	{r4, lr}
900274d0:	781b      	ldrb	r3, [r3, #0]
900274d2:	2b01      	cmp	r3, #1
900274d4:	d108      	bne.n	900274e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
900274d6:	6843      	ldr	r3, [r0, #4]
900274d8:	6814      	ldr	r4, [r2, #0]
900274da:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
900274de:	680b      	ldr	r3, [r1, #0]
900274e0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
900274e4:	6013      	str	r3, [r2, #0]
900274e6:	600c      	str	r4, [r1, #0]
900274e8:	bd10      	pop	{r4, pc}
900274ea:	bf00      	nop
900274ec:	240396fc 	.word	0x240396fc

900274f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900274f0:	b513      	push	{r0, r1, r4, lr}
900274f2:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
900274f6:	4604      	mov	r4, r0
900274f8:	e9cd 2100 	strd	r2, r1, [sp]
900274fc:	b9a3      	cbnz	r3, 90027528 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900274fe:	466a      	mov	r2, sp
90027500:	a901      	add	r1, sp, #4
90027502:	4620      	mov	r0, r4
90027504:	f7ff ffe2 	bl	900274cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027508:	68a3      	ldr	r3, [r4, #8]
9002750a:	9901      	ldr	r1, [sp, #4]
9002750c:	9a00      	ldr	r2, [sp, #0]
9002750e:	1ac9      	subs	r1, r1, r3
90027510:	68e3      	ldr	r3, [r4, #12]
90027512:	1ad2      	subs	r2, r2, r3
90027514:	9101      	str	r1, [sp, #4]
90027516:	2a00      	cmp	r2, #0
90027518:	9200      	str	r2, [sp, #0]
9002751a:	da0b      	bge.n	90027534 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002751c:	2301      	movs	r3, #1
9002751e:	2900      	cmp	r1, #0
90027520:	da0e      	bge.n	90027540 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90027522:	f043 0304 	orr.w	r3, r3, #4
90027526:	e013      	b.n	90027550 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027528:	f7ff fefc 	bl	90027324 <_ZN8touchgfx6Canvas5closeEv>
9002752c:	2800      	cmp	r0, #0
9002752e:	d1e6      	bne.n	900274fe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90027530:	b002      	add	sp, #8
90027532:	bd10      	pop	{r4, pc}
90027534:	6963      	ldr	r3, [r4, #20]
90027536:	429a      	cmp	r2, r3
90027538:	bfac      	ite	ge
9002753a:	2302      	movge	r3, #2
9002753c:	2300      	movlt	r3, #0
9002753e:	e7ee      	b.n	9002751e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90027540:	6920      	ldr	r0, [r4, #16]
90027542:	4281      	cmp	r1, r0
90027544:	bfac      	ite	ge
90027546:	2008      	movge	r0, #8
90027548:	2000      	movlt	r0, #0
9002754a:	4318      	orrs	r0, r3
9002754c:	b2c3      	uxtb	r3, r0
9002754e:	b158      	cbz	r0, 90027568 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90027550:	2200      	movs	r2, #0
90027552:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
90027556:	9901      	ldr	r1, [sp, #4]
90027558:	9a00      	ldr	r2, [sp, #0]
9002755a:	66a1      	str	r1, [r4, #104]	; 0x68
9002755c:	66e2      	str	r2, [r4, #108]	; 0x6c
9002755e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90027562:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
90027566:	e7e3      	b.n	90027530 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90027568:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
9002756c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027570:	4298      	cmp	r0, r3
90027572:	d803      	bhi.n	9002757c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90027574:	f104 0020 	add.w	r0, r4, #32
90027578:	f7ed f8ca 	bl	90014710 <_ZN8touchgfx7Outline6moveToEii>
9002757c:	2301      	movs	r3, #1
9002757e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027582:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027586:	2300      	movs	r3, #0
90027588:	e7e5      	b.n	90027556 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002758a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002758a:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002758c:	ab02      	add	r3, sp, #8
9002758e:	4604      	mov	r4, r0
90027590:	9101      	str	r1, [sp, #4]
90027592:	a901      	add	r1, sp, #4
90027594:	f843 2d08 	str.w	r2, [r3, #-8]!
90027598:	461a      	mov	r2, r3
9002759a:	f7ff ff97 	bl	900274cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002759e:	68a3      	ldr	r3, [r4, #8]
900275a0:	9901      	ldr	r1, [sp, #4]
900275a2:	9a00      	ldr	r2, [sp, #0]
900275a4:	1ac9      	subs	r1, r1, r3
900275a6:	68e3      	ldr	r3, [r4, #12]
900275a8:	1ad2      	subs	r2, r2, r3
900275aa:	9101      	str	r1, [sp, #4]
900275ac:	2a00      	cmp	r2, #0
900275ae:	9200      	str	r2, [sp, #0]
900275b0:	db1c      	blt.n	900275ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900275b2:	6963      	ldr	r3, [r4, #20]
900275b4:	429a      	cmp	r2, r3
900275b6:	bfac      	ite	ge
900275b8:	2002      	movge	r0, #2
900275ba:	2000      	movlt	r0, #0
900275bc:	2900      	cmp	r1, #0
900275be:	db17      	blt.n	900275f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900275c0:	6923      	ldr	r3, [r4, #16]
900275c2:	4299      	cmp	r1, r3
900275c4:	bfac      	ite	ge
900275c6:	2308      	movge	r3, #8
900275c8:	2300      	movlt	r3, #0
900275ca:	4303      	orrs	r3, r0
900275cc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
900275d0:	b2dd      	uxtb	r5, r3
900275d2:	b978      	cbnz	r0, 900275f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900275d4:	f104 0020 	add.w	r0, r4, #32
900275d8:	f7ff fd32 	bl	90027040 <_ZN8touchgfx10Rasterizer6lineToEii>
900275dc:	9b01      	ldr	r3, [sp, #4]
900275de:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
900275e2:	65e3      	str	r3, [r4, #92]	; 0x5c
900275e4:	9b00      	ldr	r3, [sp, #0]
900275e6:	6623      	str	r3, [r4, #96]	; 0x60
900275e8:	b002      	add	sp, #8
900275ea:	bd70      	pop	{r4, r5, r6, pc}
900275ec:	2001      	movs	r0, #1
900275ee:	e7e5      	b.n	900275bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900275f0:	2304      	movs	r3, #4
900275f2:	e7ea      	b.n	900275ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900275f4:	b113      	cbz	r3, 900275fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900275f6:	ea10 0305 	ands.w	r3, r0, r5
900275fa:	d11c      	bne.n	90027636 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
900275fc:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90027600:	f104 0620 	add.w	r6, r4, #32
90027604:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
90027608:	b98b      	cbnz	r3, 9002762e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002760a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
9002760e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027612:	4298      	cmp	r0, r3
90027614:	d802      	bhi.n	9002761c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027616:	4630      	mov	r0, r6
90027618:	f7ed f87a 	bl	90014710 <_ZN8touchgfx7Outline6moveToEii>
9002761c:	2301      	movs	r3, #1
9002761e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027622:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027626:	4630      	mov	r0, r6
90027628:	e9dd 2100 	ldrd	r2, r1, [sp]
9002762c:	e7d4      	b.n	900275d8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002762e:	4630      	mov	r0, r6
90027630:	f7ff fd06 	bl	90027040 <_ZN8touchgfx10Rasterizer6lineToEii>
90027634:	e7f7      	b.n	90027626 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90027636:	461d      	mov	r5, r3
90027638:	e7d0      	b.n	900275dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002763c <_ZN8touchgfx6CanvasD1Ev>:
9002763c:	4b04      	ldr	r3, [pc, #16]	; (90027650 <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002763e:	b510      	push	{r4, lr}
90027640:	4604      	mov	r4, r0
90027642:	f840 3b20 	str.w	r3, [r0], #32
90027646:	f7ec fb6b 	bl	90013d20 <_ZN8touchgfx7OutlineD1Ev>
9002764a:	4620      	mov	r0, r4
9002764c:	bd10      	pop	{r4, pc}
9002764e:	bf00      	nop
90027650:	9002bec0 	.word	0x9002bec0

90027654 <_ZN8touchgfx6CanvasD0Ev>:
90027654:	b510      	push	{r4, lr}
90027656:	4604      	mov	r4, r0
90027658:	f7ff fff0 	bl	9002763c <_ZN8touchgfx6CanvasD1Ev>
9002765c:	2170      	movs	r1, #112	; 0x70
9002765e:	4620      	mov	r0, r4
90027660:	f000 f826 	bl	900276b0 <_ZdlPvj>
90027664:	4620      	mov	r0, r4
90027666:	bd10      	pop	{r4, pc}

90027668 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90027668:	790b      	ldrb	r3, [r1, #4]
9002766a:	2b00      	cmp	r3, #0
9002766c:	bf0c      	ite	eq
9002766e:	2301      	moveq	r3, #1
90027670:	2300      	movne	r3, #0
90027672:	b570      	push	{r4, r5, r6, lr}
90027674:	4604      	mov	r4, r0
90027676:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
9002767a:	460e      	mov	r6, r1
9002767c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90027680:	d109      	bne.n	90027696 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90027682:	b14d      	cbz	r5, 90027698 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90027684:	7933      	ldrb	r3, [r6, #4]
90027686:	2b01      	cmp	r3, #1
90027688:	d10c      	bne.n	900276a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002768a:	6823      	ldr	r3, [r4, #0]
9002768c:	4620      	mov	r0, r4
9002768e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90027690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027694:	4718      	bx	r3
90027696:	b12d      	cbz	r5, 900276a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027698:	6823      	ldr	r3, [r4, #0]
9002769a:	4620      	mov	r0, r4
9002769c:	695b      	ldr	r3, [r3, #20]
9002769e:	4798      	blx	r3
900276a0:	2d00      	cmp	r5, #0
900276a2:	d1ef      	bne.n	90027684 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
900276a4:	bd70      	pop	{r4, r5, r6, pc}

900276a6 <__aeabi_atexit>:
900276a6:	460b      	mov	r3, r1
900276a8:	4601      	mov	r1, r0
900276aa:	4618      	mov	r0, r3
900276ac:	f000 b90e 	b.w	900278cc <__cxa_atexit>

900276b0 <_ZdlPvj>:
900276b0:	f000 b812 	b.w	900276d8 <_ZdlPv>

900276b4 <__cxa_guard_acquire>:
900276b4:	6803      	ldr	r3, [r0, #0]
900276b6:	07db      	lsls	r3, r3, #31
900276b8:	d406      	bmi.n	900276c8 <__cxa_guard_acquire+0x14>
900276ba:	7843      	ldrb	r3, [r0, #1]
900276bc:	b103      	cbz	r3, 900276c0 <__cxa_guard_acquire+0xc>
900276be:	deff      	udf	#255	; 0xff
900276c0:	2301      	movs	r3, #1
900276c2:	7043      	strb	r3, [r0, #1]
900276c4:	4618      	mov	r0, r3
900276c6:	4770      	bx	lr
900276c8:	2000      	movs	r0, #0
900276ca:	4770      	bx	lr

900276cc <__cxa_guard_release>:
900276cc:	2301      	movs	r3, #1
900276ce:	6003      	str	r3, [r0, #0]
900276d0:	4770      	bx	lr

900276d2 <__cxa_pure_virtual>:
900276d2:	b508      	push	{r3, lr}
900276d4:	f000 f80e 	bl	900276f4 <_ZSt9terminatev>

900276d8 <_ZdlPv>:
900276d8:	f000 b844 	b.w	90027764 <free>

900276dc <_ZN10__cxxabiv111__terminateEPFvvE>:
900276dc:	b508      	push	{r3, lr}
900276de:	4780      	blx	r0
900276e0:	f000 f80d 	bl	900276fe <abort>

900276e4 <_ZSt13get_terminatev>:
900276e4:	4b02      	ldr	r3, [pc, #8]	; (900276f0 <_ZSt13get_terminatev+0xc>)
900276e6:	6818      	ldr	r0, [r3, #0]
900276e8:	f3bf 8f5b 	dmb	ish
900276ec:	4770      	bx	lr
900276ee:	bf00      	nop
900276f0:	240000fc 	.word	0x240000fc

900276f4 <_ZSt9terminatev>:
900276f4:	b508      	push	{r3, lr}
900276f6:	f7ff fff5 	bl	900276e4 <_ZSt13get_terminatev>
900276fa:	f7ff ffef 	bl	900276dc <_ZN10__cxxabiv111__terminateEPFvvE>

900276fe <abort>:
900276fe:	b508      	push	{r3, lr}
90027700:	2006      	movs	r0, #6
90027702:	f000 facd 	bl	90027ca0 <raise>
90027706:	2001      	movs	r0, #1
90027708:	f7db fef4 	bl	900034f4 <_exit>

9002770c <__assert_func>:
9002770c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002770e:	4614      	mov	r4, r2
90027710:	461a      	mov	r2, r3
90027712:	4b09      	ldr	r3, [pc, #36]	; (90027738 <__assert_func+0x2c>)
90027714:	681b      	ldr	r3, [r3, #0]
90027716:	4605      	mov	r5, r0
90027718:	68d8      	ldr	r0, [r3, #12]
9002771a:	b14c      	cbz	r4, 90027730 <__assert_func+0x24>
9002771c:	4b07      	ldr	r3, [pc, #28]	; (9002773c <__assert_func+0x30>)
9002771e:	9100      	str	r1, [sp, #0]
90027720:	e9cd 3401 	strd	r3, r4, [sp, #4]
90027724:	4906      	ldr	r1, [pc, #24]	; (90027740 <__assert_func+0x34>)
90027726:	462b      	mov	r3, r5
90027728:	f000 f970 	bl	90027a0c <fiprintf>
9002772c:	f7ff ffe7 	bl	900276fe <abort>
90027730:	4b04      	ldr	r3, [pc, #16]	; (90027744 <__assert_func+0x38>)
90027732:	461c      	mov	r4, r3
90027734:	e7f3      	b.n	9002771e <__assert_func+0x12>
90027736:	bf00      	nop
90027738:	24000158 	.word	0x24000158
9002773c:	9002becc 	.word	0x9002becc
90027740:	9002bed9 	.word	0x9002bed9
90027744:	9002bf07 	.word	0x9002bf07

90027748 <atexit>:
90027748:	2300      	movs	r3, #0
9002774a:	4601      	mov	r1, r0
9002774c:	461a      	mov	r2, r3
9002774e:	4618      	mov	r0, r3
90027750:	f000 bb52 	b.w	90027df8 <__register_exitproc>

90027754 <malloc>:
90027754:	4b02      	ldr	r3, [pc, #8]	; (90027760 <malloc+0xc>)
90027756:	4601      	mov	r1, r0
90027758:	6818      	ldr	r0, [r3, #0]
9002775a:	f000 b82b 	b.w	900277b4 <_malloc_r>
9002775e:	bf00      	nop
90027760:	24000158 	.word	0x24000158

90027764 <free>:
90027764:	4b02      	ldr	r3, [pc, #8]	; (90027770 <free+0xc>)
90027766:	4601      	mov	r1, r0
90027768:	6818      	ldr	r0, [r3, #0]
9002776a:	f000 bba3 	b.w	90027eb4 <_free_r>
9002776e:	bf00      	nop
90027770:	24000158 	.word	0x24000158

90027774 <sbrk_aligned>:
90027774:	b570      	push	{r4, r5, r6, lr}
90027776:	4e0e      	ldr	r6, [pc, #56]	; (900277b0 <sbrk_aligned+0x3c>)
90027778:	460c      	mov	r4, r1
9002777a:	6831      	ldr	r1, [r6, #0]
9002777c:	4605      	mov	r5, r0
9002777e:	b911      	cbnz	r1, 90027786 <sbrk_aligned+0x12>
90027780:	f000 fade 	bl	90027d40 <_sbrk_r>
90027784:	6030      	str	r0, [r6, #0]
90027786:	4621      	mov	r1, r4
90027788:	4628      	mov	r0, r5
9002778a:	f000 fad9 	bl	90027d40 <_sbrk_r>
9002778e:	1c43      	adds	r3, r0, #1
90027790:	d00a      	beq.n	900277a8 <sbrk_aligned+0x34>
90027792:	1cc4      	adds	r4, r0, #3
90027794:	f024 0403 	bic.w	r4, r4, #3
90027798:	42a0      	cmp	r0, r4
9002779a:	d007      	beq.n	900277ac <sbrk_aligned+0x38>
9002779c:	1a21      	subs	r1, r4, r0
9002779e:	4628      	mov	r0, r5
900277a0:	f000 face 	bl	90027d40 <_sbrk_r>
900277a4:	3001      	adds	r0, #1
900277a6:	d101      	bne.n	900277ac <sbrk_aligned+0x38>
900277a8:	f04f 34ff 	mov.w	r4, #4294967295
900277ac:	4620      	mov	r0, r4
900277ae:	bd70      	pop	{r4, r5, r6, pc}
900277b0:	2403a05c 	.word	0x2403a05c

900277b4 <_malloc_r>:
900277b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900277b8:	1ccd      	adds	r5, r1, #3
900277ba:	f025 0503 	bic.w	r5, r5, #3
900277be:	3508      	adds	r5, #8
900277c0:	2d0c      	cmp	r5, #12
900277c2:	bf38      	it	cc
900277c4:	250c      	movcc	r5, #12
900277c6:	2d00      	cmp	r5, #0
900277c8:	4607      	mov	r7, r0
900277ca:	db01      	blt.n	900277d0 <_malloc_r+0x1c>
900277cc:	42a9      	cmp	r1, r5
900277ce:	d905      	bls.n	900277dc <_malloc_r+0x28>
900277d0:	230c      	movs	r3, #12
900277d2:	603b      	str	r3, [r7, #0]
900277d4:	2600      	movs	r6, #0
900277d6:	4630      	mov	r0, r6
900277d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900277dc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 900278b0 <_malloc_r+0xfc>
900277e0:	f000 f868 	bl	900278b4 <__malloc_lock>
900277e4:	f8d8 3000 	ldr.w	r3, [r8]
900277e8:	461c      	mov	r4, r3
900277ea:	bb5c      	cbnz	r4, 90027844 <_malloc_r+0x90>
900277ec:	4629      	mov	r1, r5
900277ee:	4638      	mov	r0, r7
900277f0:	f7ff ffc0 	bl	90027774 <sbrk_aligned>
900277f4:	1c43      	adds	r3, r0, #1
900277f6:	4604      	mov	r4, r0
900277f8:	d155      	bne.n	900278a6 <_malloc_r+0xf2>
900277fa:	f8d8 4000 	ldr.w	r4, [r8]
900277fe:	4626      	mov	r6, r4
90027800:	2e00      	cmp	r6, #0
90027802:	d145      	bne.n	90027890 <_malloc_r+0xdc>
90027804:	2c00      	cmp	r4, #0
90027806:	d048      	beq.n	9002789a <_malloc_r+0xe6>
90027808:	6823      	ldr	r3, [r4, #0]
9002780a:	4631      	mov	r1, r6
9002780c:	4638      	mov	r0, r7
9002780e:	eb04 0903 	add.w	r9, r4, r3
90027812:	f000 fa95 	bl	90027d40 <_sbrk_r>
90027816:	4581      	cmp	r9, r0
90027818:	d13f      	bne.n	9002789a <_malloc_r+0xe6>
9002781a:	6821      	ldr	r1, [r4, #0]
9002781c:	1a6d      	subs	r5, r5, r1
9002781e:	4629      	mov	r1, r5
90027820:	4638      	mov	r0, r7
90027822:	f7ff ffa7 	bl	90027774 <sbrk_aligned>
90027826:	3001      	adds	r0, #1
90027828:	d037      	beq.n	9002789a <_malloc_r+0xe6>
9002782a:	6823      	ldr	r3, [r4, #0]
9002782c:	442b      	add	r3, r5
9002782e:	6023      	str	r3, [r4, #0]
90027830:	f8d8 3000 	ldr.w	r3, [r8]
90027834:	2b00      	cmp	r3, #0
90027836:	d038      	beq.n	900278aa <_malloc_r+0xf6>
90027838:	685a      	ldr	r2, [r3, #4]
9002783a:	42a2      	cmp	r2, r4
9002783c:	d12b      	bne.n	90027896 <_malloc_r+0xe2>
9002783e:	2200      	movs	r2, #0
90027840:	605a      	str	r2, [r3, #4]
90027842:	e00f      	b.n	90027864 <_malloc_r+0xb0>
90027844:	6822      	ldr	r2, [r4, #0]
90027846:	1b52      	subs	r2, r2, r5
90027848:	d41f      	bmi.n	9002788a <_malloc_r+0xd6>
9002784a:	2a0b      	cmp	r2, #11
9002784c:	d917      	bls.n	9002787e <_malloc_r+0xca>
9002784e:	1961      	adds	r1, r4, r5
90027850:	42a3      	cmp	r3, r4
90027852:	6025      	str	r5, [r4, #0]
90027854:	bf18      	it	ne
90027856:	6059      	strne	r1, [r3, #4]
90027858:	6863      	ldr	r3, [r4, #4]
9002785a:	bf08      	it	eq
9002785c:	f8c8 1000 	streq.w	r1, [r8]
90027860:	5162      	str	r2, [r4, r5]
90027862:	604b      	str	r3, [r1, #4]
90027864:	4638      	mov	r0, r7
90027866:	f104 060b 	add.w	r6, r4, #11
9002786a:	f000 f829 	bl	900278c0 <__malloc_unlock>
9002786e:	f026 0607 	bic.w	r6, r6, #7
90027872:	1d23      	adds	r3, r4, #4
90027874:	1af2      	subs	r2, r6, r3
90027876:	d0ae      	beq.n	900277d6 <_malloc_r+0x22>
90027878:	1b9b      	subs	r3, r3, r6
9002787a:	50a3      	str	r3, [r4, r2]
9002787c:	e7ab      	b.n	900277d6 <_malloc_r+0x22>
9002787e:	42a3      	cmp	r3, r4
90027880:	6862      	ldr	r2, [r4, #4]
90027882:	d1dd      	bne.n	90027840 <_malloc_r+0x8c>
90027884:	f8c8 2000 	str.w	r2, [r8]
90027888:	e7ec      	b.n	90027864 <_malloc_r+0xb0>
9002788a:	4623      	mov	r3, r4
9002788c:	6864      	ldr	r4, [r4, #4]
9002788e:	e7ac      	b.n	900277ea <_malloc_r+0x36>
90027890:	4634      	mov	r4, r6
90027892:	6876      	ldr	r6, [r6, #4]
90027894:	e7b4      	b.n	90027800 <_malloc_r+0x4c>
90027896:	4613      	mov	r3, r2
90027898:	e7cc      	b.n	90027834 <_malloc_r+0x80>
9002789a:	230c      	movs	r3, #12
9002789c:	603b      	str	r3, [r7, #0]
9002789e:	4638      	mov	r0, r7
900278a0:	f000 f80e 	bl	900278c0 <__malloc_unlock>
900278a4:	e797      	b.n	900277d6 <_malloc_r+0x22>
900278a6:	6025      	str	r5, [r4, #0]
900278a8:	e7dc      	b.n	90027864 <_malloc_r+0xb0>
900278aa:	605b      	str	r3, [r3, #4]
900278ac:	deff      	udf	#255	; 0xff
900278ae:	bf00      	nop
900278b0:	2403a058 	.word	0x2403a058

900278b4 <__malloc_lock>:
900278b4:	4801      	ldr	r0, [pc, #4]	; (900278bc <__malloc_lock+0x8>)
900278b6:	f000 ba8f 	b.w	90027dd8 <__retarget_lock_acquire_recursive>
900278ba:	bf00      	nop
900278bc:	2403a1a1 	.word	0x2403a1a1

900278c0 <__malloc_unlock>:
900278c0:	4801      	ldr	r0, [pc, #4]	; (900278c8 <__malloc_unlock+0x8>)
900278c2:	f000 ba8a 	b.w	90027dda <__retarget_lock_release_recursive>
900278c6:	bf00      	nop
900278c8:	2403a1a1 	.word	0x2403a1a1

900278cc <__cxa_atexit>:
900278cc:	b510      	push	{r4, lr}
900278ce:	4c05      	ldr	r4, [pc, #20]	; (900278e4 <__cxa_atexit+0x18>)
900278d0:	4613      	mov	r3, r2
900278d2:	b12c      	cbz	r4, 900278e0 <__cxa_atexit+0x14>
900278d4:	460a      	mov	r2, r1
900278d6:	4601      	mov	r1, r0
900278d8:	2002      	movs	r0, #2
900278da:	f000 fa8d 	bl	90027df8 <__register_exitproc>
900278de:	bd10      	pop	{r4, pc}
900278e0:	4620      	mov	r0, r4
900278e2:	e7fc      	b.n	900278de <__cxa_atexit+0x12>
900278e4:	90027df9 	.word	0x90027df9

900278e8 <std>:
900278e8:	2300      	movs	r3, #0
900278ea:	b510      	push	{r4, lr}
900278ec:	4604      	mov	r4, r0
900278ee:	e9c0 3300 	strd	r3, r3, [r0]
900278f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
900278f6:	6083      	str	r3, [r0, #8]
900278f8:	8181      	strh	r1, [r0, #12]
900278fa:	6643      	str	r3, [r0, #100]	; 0x64
900278fc:	81c2      	strh	r2, [r0, #14]
900278fe:	6183      	str	r3, [r0, #24]
90027900:	4619      	mov	r1, r3
90027902:	2208      	movs	r2, #8
90027904:	305c      	adds	r0, #92	; 0x5c
90027906:	f000 f989 	bl	90027c1c <memset>
9002790a:	4b05      	ldr	r3, [pc, #20]	; (90027920 <std+0x38>)
9002790c:	6263      	str	r3, [r4, #36]	; 0x24
9002790e:	4b05      	ldr	r3, [pc, #20]	; (90027924 <std+0x3c>)
90027910:	62a3      	str	r3, [r4, #40]	; 0x28
90027912:	4b05      	ldr	r3, [pc, #20]	; (90027928 <std+0x40>)
90027914:	62e3      	str	r3, [r4, #44]	; 0x2c
90027916:	4b05      	ldr	r3, [pc, #20]	; (9002792c <std+0x44>)
90027918:	6224      	str	r4, [r4, #32]
9002791a:	6323      	str	r3, [r4, #48]	; 0x30
9002791c:	bd10      	pop	{r4, pc}
9002791e:	bf00      	nop
90027920:	90027a6d 	.word	0x90027a6d
90027924:	90027a8f 	.word	0x90027a8f
90027928:	90027ac7 	.word	0x90027ac7
9002792c:	90027aeb 	.word	0x90027aeb

90027930 <stdio_exit_handler>:
90027930:	4a02      	ldr	r2, [pc, #8]	; (9002793c <stdio_exit_handler+0xc>)
90027932:	4903      	ldr	r1, [pc, #12]	; (90027940 <stdio_exit_handler+0x10>)
90027934:	4803      	ldr	r0, [pc, #12]	; (90027944 <stdio_exit_handler+0x14>)
90027936:	f000 b87b 	b.w	90027a30 <_fwalk_sglue>
9002793a:	bf00      	nop
9002793c:	24000100 	.word	0x24000100
90027940:	90028601 	.word	0x90028601
90027944:	2400010c 	.word	0x2400010c

90027948 <cleanup_stdio>:
90027948:	6841      	ldr	r1, [r0, #4]
9002794a:	4b0c      	ldr	r3, [pc, #48]	; (9002797c <cleanup_stdio+0x34>)
9002794c:	4299      	cmp	r1, r3
9002794e:	b510      	push	{r4, lr}
90027950:	4604      	mov	r4, r0
90027952:	d001      	beq.n	90027958 <cleanup_stdio+0x10>
90027954:	f000 fe54 	bl	90028600 <_fflush_r>
90027958:	68a1      	ldr	r1, [r4, #8]
9002795a:	4b09      	ldr	r3, [pc, #36]	; (90027980 <cleanup_stdio+0x38>)
9002795c:	4299      	cmp	r1, r3
9002795e:	d002      	beq.n	90027966 <cleanup_stdio+0x1e>
90027960:	4620      	mov	r0, r4
90027962:	f000 fe4d 	bl	90028600 <_fflush_r>
90027966:	68e1      	ldr	r1, [r4, #12]
90027968:	4b06      	ldr	r3, [pc, #24]	; (90027984 <cleanup_stdio+0x3c>)
9002796a:	4299      	cmp	r1, r3
9002796c:	d004      	beq.n	90027978 <cleanup_stdio+0x30>
9002796e:	4620      	mov	r0, r4
90027970:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027974:	f000 be44 	b.w	90028600 <_fflush_r>
90027978:	bd10      	pop	{r4, pc}
9002797a:	bf00      	nop
9002797c:	2403a060 	.word	0x2403a060
90027980:	2403a0c8 	.word	0x2403a0c8
90027984:	2403a130 	.word	0x2403a130

90027988 <global_stdio_init.part.0>:
90027988:	b510      	push	{r4, lr}
9002798a:	4b0b      	ldr	r3, [pc, #44]	; (900279b8 <global_stdio_init.part.0+0x30>)
9002798c:	4c0b      	ldr	r4, [pc, #44]	; (900279bc <global_stdio_init.part.0+0x34>)
9002798e:	4a0c      	ldr	r2, [pc, #48]	; (900279c0 <global_stdio_init.part.0+0x38>)
90027990:	601a      	str	r2, [r3, #0]
90027992:	4620      	mov	r0, r4
90027994:	2200      	movs	r2, #0
90027996:	2104      	movs	r1, #4
90027998:	f7ff ffa6 	bl	900278e8 <std>
9002799c:	f104 0068 	add.w	r0, r4, #104	; 0x68
900279a0:	2201      	movs	r2, #1
900279a2:	2109      	movs	r1, #9
900279a4:	f7ff ffa0 	bl	900278e8 <std>
900279a8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
900279ac:	2202      	movs	r2, #2
900279ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900279b2:	2112      	movs	r1, #18
900279b4:	f7ff bf98 	b.w	900278e8 <std>
900279b8:	2403a198 	.word	0x2403a198
900279bc:	2403a060 	.word	0x2403a060
900279c0:	90027931 	.word	0x90027931

900279c4 <__sfp_lock_acquire>:
900279c4:	4801      	ldr	r0, [pc, #4]	; (900279cc <__sfp_lock_acquire+0x8>)
900279c6:	f000 ba07 	b.w	90027dd8 <__retarget_lock_acquire_recursive>
900279ca:	bf00      	nop
900279cc:	2403a1a2 	.word	0x2403a1a2

900279d0 <__sfp_lock_release>:
900279d0:	4801      	ldr	r0, [pc, #4]	; (900279d8 <__sfp_lock_release+0x8>)
900279d2:	f000 ba02 	b.w	90027dda <__retarget_lock_release_recursive>
900279d6:	bf00      	nop
900279d8:	2403a1a2 	.word	0x2403a1a2

900279dc <__sinit>:
900279dc:	b510      	push	{r4, lr}
900279de:	4604      	mov	r4, r0
900279e0:	f7ff fff0 	bl	900279c4 <__sfp_lock_acquire>
900279e4:	6a23      	ldr	r3, [r4, #32]
900279e6:	b11b      	cbz	r3, 900279f0 <__sinit+0x14>
900279e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900279ec:	f7ff bff0 	b.w	900279d0 <__sfp_lock_release>
900279f0:	4b04      	ldr	r3, [pc, #16]	; (90027a04 <__sinit+0x28>)
900279f2:	6223      	str	r3, [r4, #32]
900279f4:	4b04      	ldr	r3, [pc, #16]	; (90027a08 <__sinit+0x2c>)
900279f6:	681b      	ldr	r3, [r3, #0]
900279f8:	2b00      	cmp	r3, #0
900279fa:	d1f5      	bne.n	900279e8 <__sinit+0xc>
900279fc:	f7ff ffc4 	bl	90027988 <global_stdio_init.part.0>
90027a00:	e7f2      	b.n	900279e8 <__sinit+0xc>
90027a02:	bf00      	nop
90027a04:	90027949 	.word	0x90027949
90027a08:	2403a198 	.word	0x2403a198

90027a0c <fiprintf>:
90027a0c:	b40e      	push	{r1, r2, r3}
90027a0e:	b503      	push	{r0, r1, lr}
90027a10:	4601      	mov	r1, r0
90027a12:	ab03      	add	r3, sp, #12
90027a14:	4805      	ldr	r0, [pc, #20]	; (90027a2c <fiprintf+0x20>)
90027a16:	f853 2b04 	ldr.w	r2, [r3], #4
90027a1a:	6800      	ldr	r0, [r0, #0]
90027a1c:	9301      	str	r3, [sp, #4]
90027a1e:	f000 fabf 	bl	90027fa0 <_vfiprintf_r>
90027a22:	b002      	add	sp, #8
90027a24:	f85d eb04 	ldr.w	lr, [sp], #4
90027a28:	b003      	add	sp, #12
90027a2a:	4770      	bx	lr
90027a2c:	24000158 	.word	0x24000158

90027a30 <_fwalk_sglue>:
90027a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027a34:	4607      	mov	r7, r0
90027a36:	4688      	mov	r8, r1
90027a38:	4614      	mov	r4, r2
90027a3a:	2600      	movs	r6, #0
90027a3c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90027a40:	f1b9 0901 	subs.w	r9, r9, #1
90027a44:	d505      	bpl.n	90027a52 <_fwalk_sglue+0x22>
90027a46:	6824      	ldr	r4, [r4, #0]
90027a48:	2c00      	cmp	r4, #0
90027a4a:	d1f7      	bne.n	90027a3c <_fwalk_sglue+0xc>
90027a4c:	4630      	mov	r0, r6
90027a4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027a52:	89ab      	ldrh	r3, [r5, #12]
90027a54:	2b01      	cmp	r3, #1
90027a56:	d907      	bls.n	90027a68 <_fwalk_sglue+0x38>
90027a58:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90027a5c:	3301      	adds	r3, #1
90027a5e:	d003      	beq.n	90027a68 <_fwalk_sglue+0x38>
90027a60:	4629      	mov	r1, r5
90027a62:	4638      	mov	r0, r7
90027a64:	47c0      	blx	r8
90027a66:	4306      	orrs	r6, r0
90027a68:	3568      	adds	r5, #104	; 0x68
90027a6a:	e7e9      	b.n	90027a40 <_fwalk_sglue+0x10>

90027a6c <__sread>:
90027a6c:	b510      	push	{r4, lr}
90027a6e:	460c      	mov	r4, r1
90027a70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027a74:	f000 f93e 	bl	90027cf4 <_read_r>
90027a78:	2800      	cmp	r0, #0
90027a7a:	bfab      	itete	ge
90027a7c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90027a7e:	89a3      	ldrhlt	r3, [r4, #12]
90027a80:	181b      	addge	r3, r3, r0
90027a82:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
90027a86:	bfac      	ite	ge
90027a88:	6563      	strge	r3, [r4, #84]	; 0x54
90027a8a:	81a3      	strhlt	r3, [r4, #12]
90027a8c:	bd10      	pop	{r4, pc}

90027a8e <__swrite>:
90027a8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90027a92:	461f      	mov	r7, r3
90027a94:	898b      	ldrh	r3, [r1, #12]
90027a96:	05db      	lsls	r3, r3, #23
90027a98:	4605      	mov	r5, r0
90027a9a:	460c      	mov	r4, r1
90027a9c:	4616      	mov	r6, r2
90027a9e:	d505      	bpl.n	90027aac <__swrite+0x1e>
90027aa0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027aa4:	2302      	movs	r3, #2
90027aa6:	2200      	movs	r2, #0
90027aa8:	f000 f912 	bl	90027cd0 <_lseek_r>
90027aac:	89a3      	ldrh	r3, [r4, #12]
90027aae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027ab2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90027ab6:	81a3      	strh	r3, [r4, #12]
90027ab8:	4632      	mov	r2, r6
90027aba:	463b      	mov	r3, r7
90027abc:	4628      	mov	r0, r5
90027abe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90027ac2:	f000 b94d 	b.w	90027d60 <_write_r>

90027ac6 <__sseek>:
90027ac6:	b510      	push	{r4, lr}
90027ac8:	460c      	mov	r4, r1
90027aca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027ace:	f000 f8ff 	bl	90027cd0 <_lseek_r>
90027ad2:	1c43      	adds	r3, r0, #1
90027ad4:	89a3      	ldrh	r3, [r4, #12]
90027ad6:	bf15      	itete	ne
90027ad8:	6560      	strne	r0, [r4, #84]	; 0x54
90027ada:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90027ade:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90027ae2:	81a3      	strheq	r3, [r4, #12]
90027ae4:	bf18      	it	ne
90027ae6:	81a3      	strhne	r3, [r4, #12]
90027ae8:	bd10      	pop	{r4, pc}

90027aea <__sclose>:
90027aea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027aee:	f000 b8df 	b.w	90027cb0 <_close_r>

90027af2 <__swbuf_r>:
90027af2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027af4:	460e      	mov	r6, r1
90027af6:	4614      	mov	r4, r2
90027af8:	4605      	mov	r5, r0
90027afa:	b118      	cbz	r0, 90027b04 <__swbuf_r+0x12>
90027afc:	6a03      	ldr	r3, [r0, #32]
90027afe:	b90b      	cbnz	r3, 90027b04 <__swbuf_r+0x12>
90027b00:	f7ff ff6c 	bl	900279dc <__sinit>
90027b04:	69a3      	ldr	r3, [r4, #24]
90027b06:	60a3      	str	r3, [r4, #8]
90027b08:	89a3      	ldrh	r3, [r4, #12]
90027b0a:	071a      	lsls	r2, r3, #28
90027b0c:	d525      	bpl.n	90027b5a <__swbuf_r+0x68>
90027b0e:	6923      	ldr	r3, [r4, #16]
90027b10:	b31b      	cbz	r3, 90027b5a <__swbuf_r+0x68>
90027b12:	6823      	ldr	r3, [r4, #0]
90027b14:	6922      	ldr	r2, [r4, #16]
90027b16:	1a98      	subs	r0, r3, r2
90027b18:	6963      	ldr	r3, [r4, #20]
90027b1a:	b2f6      	uxtb	r6, r6
90027b1c:	4283      	cmp	r3, r0
90027b1e:	4637      	mov	r7, r6
90027b20:	dc04      	bgt.n	90027b2c <__swbuf_r+0x3a>
90027b22:	4621      	mov	r1, r4
90027b24:	4628      	mov	r0, r5
90027b26:	f000 fd6b 	bl	90028600 <_fflush_r>
90027b2a:	b9e0      	cbnz	r0, 90027b66 <__swbuf_r+0x74>
90027b2c:	68a3      	ldr	r3, [r4, #8]
90027b2e:	3b01      	subs	r3, #1
90027b30:	60a3      	str	r3, [r4, #8]
90027b32:	6823      	ldr	r3, [r4, #0]
90027b34:	1c5a      	adds	r2, r3, #1
90027b36:	6022      	str	r2, [r4, #0]
90027b38:	701e      	strb	r6, [r3, #0]
90027b3a:	6962      	ldr	r2, [r4, #20]
90027b3c:	1c43      	adds	r3, r0, #1
90027b3e:	429a      	cmp	r2, r3
90027b40:	d004      	beq.n	90027b4c <__swbuf_r+0x5a>
90027b42:	89a3      	ldrh	r3, [r4, #12]
90027b44:	07db      	lsls	r3, r3, #31
90027b46:	d506      	bpl.n	90027b56 <__swbuf_r+0x64>
90027b48:	2e0a      	cmp	r6, #10
90027b4a:	d104      	bne.n	90027b56 <__swbuf_r+0x64>
90027b4c:	4621      	mov	r1, r4
90027b4e:	4628      	mov	r0, r5
90027b50:	f000 fd56 	bl	90028600 <_fflush_r>
90027b54:	b938      	cbnz	r0, 90027b66 <__swbuf_r+0x74>
90027b56:	4638      	mov	r0, r7
90027b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90027b5a:	4621      	mov	r1, r4
90027b5c:	4628      	mov	r0, r5
90027b5e:	f000 f805 	bl	90027b6c <__swsetup_r>
90027b62:	2800      	cmp	r0, #0
90027b64:	d0d5      	beq.n	90027b12 <__swbuf_r+0x20>
90027b66:	f04f 37ff 	mov.w	r7, #4294967295
90027b6a:	e7f4      	b.n	90027b56 <__swbuf_r+0x64>

90027b6c <__swsetup_r>:
90027b6c:	b538      	push	{r3, r4, r5, lr}
90027b6e:	4b2a      	ldr	r3, [pc, #168]	; (90027c18 <__swsetup_r+0xac>)
90027b70:	4605      	mov	r5, r0
90027b72:	6818      	ldr	r0, [r3, #0]
90027b74:	460c      	mov	r4, r1
90027b76:	b118      	cbz	r0, 90027b80 <__swsetup_r+0x14>
90027b78:	6a03      	ldr	r3, [r0, #32]
90027b7a:	b90b      	cbnz	r3, 90027b80 <__swsetup_r+0x14>
90027b7c:	f7ff ff2e 	bl	900279dc <__sinit>
90027b80:	89a3      	ldrh	r3, [r4, #12]
90027b82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027b86:	0718      	lsls	r0, r3, #28
90027b88:	d422      	bmi.n	90027bd0 <__swsetup_r+0x64>
90027b8a:	06d9      	lsls	r1, r3, #27
90027b8c:	d407      	bmi.n	90027b9e <__swsetup_r+0x32>
90027b8e:	2309      	movs	r3, #9
90027b90:	602b      	str	r3, [r5, #0]
90027b92:	f042 0340 	orr.w	r3, r2, #64	; 0x40
90027b96:	81a3      	strh	r3, [r4, #12]
90027b98:	f04f 30ff 	mov.w	r0, #4294967295
90027b9c:	e034      	b.n	90027c08 <__swsetup_r+0x9c>
90027b9e:	0758      	lsls	r0, r3, #29
90027ba0:	d512      	bpl.n	90027bc8 <__swsetup_r+0x5c>
90027ba2:	6b61      	ldr	r1, [r4, #52]	; 0x34
90027ba4:	b141      	cbz	r1, 90027bb8 <__swsetup_r+0x4c>
90027ba6:	f104 0344 	add.w	r3, r4, #68	; 0x44
90027baa:	4299      	cmp	r1, r3
90027bac:	d002      	beq.n	90027bb4 <__swsetup_r+0x48>
90027bae:	4628      	mov	r0, r5
90027bb0:	f000 f980 	bl	90027eb4 <_free_r>
90027bb4:	2300      	movs	r3, #0
90027bb6:	6363      	str	r3, [r4, #52]	; 0x34
90027bb8:	89a3      	ldrh	r3, [r4, #12]
90027bba:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90027bbe:	81a3      	strh	r3, [r4, #12]
90027bc0:	2300      	movs	r3, #0
90027bc2:	6063      	str	r3, [r4, #4]
90027bc4:	6923      	ldr	r3, [r4, #16]
90027bc6:	6023      	str	r3, [r4, #0]
90027bc8:	89a3      	ldrh	r3, [r4, #12]
90027bca:	f043 0308 	orr.w	r3, r3, #8
90027bce:	81a3      	strh	r3, [r4, #12]
90027bd0:	6923      	ldr	r3, [r4, #16]
90027bd2:	b94b      	cbnz	r3, 90027be8 <__swsetup_r+0x7c>
90027bd4:	89a3      	ldrh	r3, [r4, #12]
90027bd6:	f403 7320 	and.w	r3, r3, #640	; 0x280
90027bda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90027bde:	d003      	beq.n	90027be8 <__swsetup_r+0x7c>
90027be0:	4621      	mov	r1, r4
90027be2:	4628      	mov	r0, r5
90027be4:	f000 fd5a 	bl	9002869c <__smakebuf_r>
90027be8:	89a0      	ldrh	r0, [r4, #12]
90027bea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027bee:	f010 0301 	ands.w	r3, r0, #1
90027bf2:	d00a      	beq.n	90027c0a <__swsetup_r+0x9e>
90027bf4:	2300      	movs	r3, #0
90027bf6:	60a3      	str	r3, [r4, #8]
90027bf8:	6963      	ldr	r3, [r4, #20]
90027bfa:	425b      	negs	r3, r3
90027bfc:	61a3      	str	r3, [r4, #24]
90027bfe:	6923      	ldr	r3, [r4, #16]
90027c00:	b943      	cbnz	r3, 90027c14 <__swsetup_r+0xa8>
90027c02:	f010 0080 	ands.w	r0, r0, #128	; 0x80
90027c06:	d1c4      	bne.n	90027b92 <__swsetup_r+0x26>
90027c08:	bd38      	pop	{r3, r4, r5, pc}
90027c0a:	0781      	lsls	r1, r0, #30
90027c0c:	bf58      	it	pl
90027c0e:	6963      	ldrpl	r3, [r4, #20]
90027c10:	60a3      	str	r3, [r4, #8]
90027c12:	e7f4      	b.n	90027bfe <__swsetup_r+0x92>
90027c14:	2000      	movs	r0, #0
90027c16:	e7f7      	b.n	90027c08 <__swsetup_r+0x9c>
90027c18:	24000158 	.word	0x24000158

90027c1c <memset>:
90027c1c:	4402      	add	r2, r0
90027c1e:	4603      	mov	r3, r0
90027c20:	4293      	cmp	r3, r2
90027c22:	d100      	bne.n	90027c26 <memset+0xa>
90027c24:	4770      	bx	lr
90027c26:	f803 1b01 	strb.w	r1, [r3], #1
90027c2a:	e7f9      	b.n	90027c20 <memset+0x4>

90027c2c <strncmp>:
90027c2c:	b510      	push	{r4, lr}
90027c2e:	b16a      	cbz	r2, 90027c4c <strncmp+0x20>
90027c30:	3901      	subs	r1, #1
90027c32:	1884      	adds	r4, r0, r2
90027c34:	f810 2b01 	ldrb.w	r2, [r0], #1
90027c38:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90027c3c:	429a      	cmp	r2, r3
90027c3e:	d103      	bne.n	90027c48 <strncmp+0x1c>
90027c40:	42a0      	cmp	r0, r4
90027c42:	d001      	beq.n	90027c48 <strncmp+0x1c>
90027c44:	2a00      	cmp	r2, #0
90027c46:	d1f5      	bne.n	90027c34 <strncmp+0x8>
90027c48:	1ad0      	subs	r0, r2, r3
90027c4a:	bd10      	pop	{r4, pc}
90027c4c:	4610      	mov	r0, r2
90027c4e:	e7fc      	b.n	90027c4a <strncmp+0x1e>

90027c50 <_raise_r>:
90027c50:	291f      	cmp	r1, #31
90027c52:	b538      	push	{r3, r4, r5, lr}
90027c54:	4604      	mov	r4, r0
90027c56:	460d      	mov	r5, r1
90027c58:	d904      	bls.n	90027c64 <_raise_r+0x14>
90027c5a:	2316      	movs	r3, #22
90027c5c:	6003      	str	r3, [r0, #0]
90027c5e:	f04f 30ff 	mov.w	r0, #4294967295
90027c62:	bd38      	pop	{r3, r4, r5, pc}
90027c64:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
90027c66:	b112      	cbz	r2, 90027c6e <_raise_r+0x1e>
90027c68:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90027c6c:	b94b      	cbnz	r3, 90027c82 <_raise_r+0x32>
90027c6e:	4620      	mov	r0, r4
90027c70:	f000 f864 	bl	90027d3c <_getpid_r>
90027c74:	462a      	mov	r2, r5
90027c76:	4601      	mov	r1, r0
90027c78:	4620      	mov	r0, r4
90027c7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90027c7e:	f000 b84b 	b.w	90027d18 <_kill_r>
90027c82:	2b01      	cmp	r3, #1
90027c84:	d00a      	beq.n	90027c9c <_raise_r+0x4c>
90027c86:	1c59      	adds	r1, r3, #1
90027c88:	d103      	bne.n	90027c92 <_raise_r+0x42>
90027c8a:	2316      	movs	r3, #22
90027c8c:	6003      	str	r3, [r0, #0]
90027c8e:	2001      	movs	r0, #1
90027c90:	e7e7      	b.n	90027c62 <_raise_r+0x12>
90027c92:	2400      	movs	r4, #0
90027c94:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
90027c98:	4628      	mov	r0, r5
90027c9a:	4798      	blx	r3
90027c9c:	2000      	movs	r0, #0
90027c9e:	e7e0      	b.n	90027c62 <_raise_r+0x12>

90027ca0 <raise>:
90027ca0:	4b02      	ldr	r3, [pc, #8]	; (90027cac <raise+0xc>)
90027ca2:	4601      	mov	r1, r0
90027ca4:	6818      	ldr	r0, [r3, #0]
90027ca6:	f7ff bfd3 	b.w	90027c50 <_raise_r>
90027caa:	bf00      	nop
90027cac:	24000158 	.word	0x24000158

90027cb0 <_close_r>:
90027cb0:	b538      	push	{r3, r4, r5, lr}
90027cb2:	4d06      	ldr	r5, [pc, #24]	; (90027ccc <_close_r+0x1c>)
90027cb4:	2300      	movs	r3, #0
90027cb6:	4604      	mov	r4, r0
90027cb8:	4608      	mov	r0, r1
90027cba:	602b      	str	r3, [r5, #0]
90027cbc:	f7db fc3c 	bl	90003538 <_close>
90027cc0:	1c43      	adds	r3, r0, #1
90027cc2:	d102      	bne.n	90027cca <_close_r+0x1a>
90027cc4:	682b      	ldr	r3, [r5, #0]
90027cc6:	b103      	cbz	r3, 90027cca <_close_r+0x1a>
90027cc8:	6023      	str	r3, [r4, #0]
90027cca:	bd38      	pop	{r3, r4, r5, pc}
90027ccc:	2403a19c 	.word	0x2403a19c

90027cd0 <_lseek_r>:
90027cd0:	b538      	push	{r3, r4, r5, lr}
90027cd2:	4d07      	ldr	r5, [pc, #28]	; (90027cf0 <_lseek_r+0x20>)
90027cd4:	4604      	mov	r4, r0
90027cd6:	4608      	mov	r0, r1
90027cd8:	4611      	mov	r1, r2
90027cda:	2200      	movs	r2, #0
90027cdc:	602a      	str	r2, [r5, #0]
90027cde:	461a      	mov	r2, r3
90027ce0:	f7db fc36 	bl	90003550 <_lseek>
90027ce4:	1c43      	adds	r3, r0, #1
90027ce6:	d102      	bne.n	90027cee <_lseek_r+0x1e>
90027ce8:	682b      	ldr	r3, [r5, #0]
90027cea:	b103      	cbz	r3, 90027cee <_lseek_r+0x1e>
90027cec:	6023      	str	r3, [r4, #0]
90027cee:	bd38      	pop	{r3, r4, r5, pc}
90027cf0:	2403a19c 	.word	0x2403a19c

90027cf4 <_read_r>:
90027cf4:	b538      	push	{r3, r4, r5, lr}
90027cf6:	4d07      	ldr	r5, [pc, #28]	; (90027d14 <_read_r+0x20>)
90027cf8:	4604      	mov	r4, r0
90027cfa:	4608      	mov	r0, r1
90027cfc:	4611      	mov	r1, r2
90027cfe:	2200      	movs	r2, #0
90027d00:	602a      	str	r2, [r5, #0]
90027d02:	461a      	mov	r2, r3
90027d04:	f7db fbfc 	bl	90003500 <_read>
90027d08:	1c43      	adds	r3, r0, #1
90027d0a:	d102      	bne.n	90027d12 <_read_r+0x1e>
90027d0c:	682b      	ldr	r3, [r5, #0]
90027d0e:	b103      	cbz	r3, 90027d12 <_read_r+0x1e>
90027d10:	6023      	str	r3, [r4, #0]
90027d12:	bd38      	pop	{r3, r4, r5, pc}
90027d14:	2403a19c 	.word	0x2403a19c

90027d18 <_kill_r>:
90027d18:	b538      	push	{r3, r4, r5, lr}
90027d1a:	4d07      	ldr	r5, [pc, #28]	; (90027d38 <_kill_r+0x20>)
90027d1c:	2300      	movs	r3, #0
90027d1e:	4604      	mov	r4, r0
90027d20:	4608      	mov	r0, r1
90027d22:	4611      	mov	r1, r2
90027d24:	602b      	str	r3, [r5, #0]
90027d26:	f7db fbdb 	bl	900034e0 <_kill>
90027d2a:	1c43      	adds	r3, r0, #1
90027d2c:	d102      	bne.n	90027d34 <_kill_r+0x1c>
90027d2e:	682b      	ldr	r3, [r5, #0]
90027d30:	b103      	cbz	r3, 90027d34 <_kill_r+0x1c>
90027d32:	6023      	str	r3, [r4, #0]
90027d34:	bd38      	pop	{r3, r4, r5, pc}
90027d36:	bf00      	nop
90027d38:	2403a19c 	.word	0x2403a19c

90027d3c <_getpid_r>:
90027d3c:	f7db bbce 	b.w	900034dc <_getpid>

90027d40 <_sbrk_r>:
90027d40:	b538      	push	{r3, r4, r5, lr}
90027d42:	4d06      	ldr	r5, [pc, #24]	; (90027d5c <_sbrk_r+0x1c>)
90027d44:	2300      	movs	r3, #0
90027d46:	4604      	mov	r4, r0
90027d48:	4608      	mov	r0, r1
90027d4a:	602b      	str	r3, [r5, #0]
90027d4c:	f000 fd04 	bl	90028758 <_sbrk>
90027d50:	1c43      	adds	r3, r0, #1
90027d52:	d102      	bne.n	90027d5a <_sbrk_r+0x1a>
90027d54:	682b      	ldr	r3, [r5, #0]
90027d56:	b103      	cbz	r3, 90027d5a <_sbrk_r+0x1a>
90027d58:	6023      	str	r3, [r4, #0]
90027d5a:	bd38      	pop	{r3, r4, r5, pc}
90027d5c:	2403a19c 	.word	0x2403a19c

90027d60 <_write_r>:
90027d60:	b538      	push	{r3, r4, r5, lr}
90027d62:	4d07      	ldr	r5, [pc, #28]	; (90027d80 <_write_r+0x20>)
90027d64:	4604      	mov	r4, r0
90027d66:	4608      	mov	r0, r1
90027d68:	4611      	mov	r1, r2
90027d6a:	2200      	movs	r2, #0
90027d6c:	602a      	str	r2, [r5, #0]
90027d6e:	461a      	mov	r2, r3
90027d70:	f7db fbd4 	bl	9000351c <_write>
90027d74:	1c43      	adds	r3, r0, #1
90027d76:	d102      	bne.n	90027d7e <_write_r+0x1e>
90027d78:	682b      	ldr	r3, [r5, #0]
90027d7a:	b103      	cbz	r3, 90027d7e <_write_r+0x1e>
90027d7c:	6023      	str	r3, [r4, #0]
90027d7e:	bd38      	pop	{r3, r4, r5, pc}
90027d80:	2403a19c 	.word	0x2403a19c

90027d84 <__errno>:
90027d84:	4b01      	ldr	r3, [pc, #4]	; (90027d8c <__errno+0x8>)
90027d86:	6818      	ldr	r0, [r3, #0]
90027d88:	4770      	bx	lr
90027d8a:	bf00      	nop
90027d8c:	24000158 	.word	0x24000158

90027d90 <__libc_init_array>:
90027d90:	b570      	push	{r4, r5, r6, lr}
90027d92:	4d0d      	ldr	r5, [pc, #52]	; (90027dc8 <__libc_init_array+0x38>)
90027d94:	4c0d      	ldr	r4, [pc, #52]	; (90027dcc <__libc_init_array+0x3c>)
90027d96:	1b64      	subs	r4, r4, r5
90027d98:	10a4      	asrs	r4, r4, #2
90027d9a:	2600      	movs	r6, #0
90027d9c:	42a6      	cmp	r6, r4
90027d9e:	d109      	bne.n	90027db4 <__libc_init_array+0x24>
90027da0:	4d0b      	ldr	r5, [pc, #44]	; (90027dd0 <__libc_init_array+0x40>)
90027da2:	4c0c      	ldr	r4, [pc, #48]	; (90027dd4 <__libc_init_array+0x44>)
90027da4:	f000 fce6 	bl	90028774 <_init>
90027da8:	1b64      	subs	r4, r4, r5
90027daa:	10a4      	asrs	r4, r4, #2
90027dac:	2600      	movs	r6, #0
90027dae:	42a6      	cmp	r6, r4
90027db0:	d105      	bne.n	90027dbe <__libc_init_array+0x2e>
90027db2:	bd70      	pop	{r4, r5, r6, pc}
90027db4:	f855 3b04 	ldr.w	r3, [r5], #4
90027db8:	4798      	blx	r3
90027dba:	3601      	adds	r6, #1
90027dbc:	e7ee      	b.n	90027d9c <__libc_init_array+0xc>
90027dbe:	f855 3b04 	ldr.w	r3, [r5], #4
90027dc2:	4798      	blx	r3
90027dc4:	3601      	adds	r6, #1
90027dc6:	e7f2      	b.n	90027dae <__libc_init_array+0x1e>
90027dc8:	9002c048 	.word	0x9002c048
90027dcc:	9002c048 	.word	0x9002c048
90027dd0:	9002c048 	.word	0x9002c048
90027dd4:	9002c064 	.word	0x9002c064

90027dd8 <__retarget_lock_acquire_recursive>:
90027dd8:	4770      	bx	lr

90027dda <__retarget_lock_release_recursive>:
90027dda:	4770      	bx	lr

90027ddc <memcpy>:
90027ddc:	440a      	add	r2, r1
90027dde:	4291      	cmp	r1, r2
90027de0:	f100 33ff 	add.w	r3, r0, #4294967295
90027de4:	d100      	bne.n	90027de8 <memcpy+0xc>
90027de6:	4770      	bx	lr
90027de8:	b510      	push	{r4, lr}
90027dea:	f811 4b01 	ldrb.w	r4, [r1], #1
90027dee:	f803 4f01 	strb.w	r4, [r3, #1]!
90027df2:	4291      	cmp	r1, r2
90027df4:	d1f9      	bne.n	90027dea <memcpy+0xe>
90027df6:	bd10      	pop	{r4, pc}

90027df8 <__register_exitproc>:
90027df8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027dfc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90027eb0 <__register_exitproc+0xb8>
90027e00:	4606      	mov	r6, r0
90027e02:	f8d8 0000 	ldr.w	r0, [r8]
90027e06:	461f      	mov	r7, r3
90027e08:	460d      	mov	r5, r1
90027e0a:	4691      	mov	r9, r2
90027e0c:	f7ff ffe4 	bl	90027dd8 <__retarget_lock_acquire_recursive>
90027e10:	4b23      	ldr	r3, [pc, #140]	; (90027ea0 <__register_exitproc+0xa8>)
90027e12:	681c      	ldr	r4, [r3, #0]
90027e14:	b934      	cbnz	r4, 90027e24 <__register_exitproc+0x2c>
90027e16:	4c23      	ldr	r4, [pc, #140]	; (90027ea4 <__register_exitproc+0xac>)
90027e18:	601c      	str	r4, [r3, #0]
90027e1a:	4b23      	ldr	r3, [pc, #140]	; (90027ea8 <__register_exitproc+0xb0>)
90027e1c:	b113      	cbz	r3, 90027e24 <__register_exitproc+0x2c>
90027e1e:	681b      	ldr	r3, [r3, #0]
90027e20:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90027e24:	6863      	ldr	r3, [r4, #4]
90027e26:	2b1f      	cmp	r3, #31
90027e28:	dd07      	ble.n	90027e3a <__register_exitproc+0x42>
90027e2a:	f8d8 0000 	ldr.w	r0, [r8]
90027e2e:	f7ff ffd4 	bl	90027dda <__retarget_lock_release_recursive>
90027e32:	f04f 30ff 	mov.w	r0, #4294967295
90027e36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027e3a:	b32e      	cbz	r6, 90027e88 <__register_exitproc+0x90>
90027e3c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90027e40:	b968      	cbnz	r0, 90027e5e <__register_exitproc+0x66>
90027e42:	4b1a      	ldr	r3, [pc, #104]	; (90027eac <__register_exitproc+0xb4>)
90027e44:	2b00      	cmp	r3, #0
90027e46:	d0f0      	beq.n	90027e2a <__register_exitproc+0x32>
90027e48:	f44f 7084 	mov.w	r0, #264	; 0x108
90027e4c:	f7ff fc82 	bl	90027754 <malloc>
90027e50:	2800      	cmp	r0, #0
90027e52:	d0ea      	beq.n	90027e2a <__register_exitproc+0x32>
90027e54:	2300      	movs	r3, #0
90027e56:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90027e5a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90027e5e:	6863      	ldr	r3, [r4, #4]
90027e60:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90027e64:	2201      	movs	r2, #1
90027e66:	409a      	lsls	r2, r3
90027e68:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90027e6c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90027e70:	4313      	orrs	r3, r2
90027e72:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90027e76:	2e02      	cmp	r6, #2
90027e78:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90027e7c:	bf02      	ittt	eq
90027e7e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90027e82:	4313      	orreq	r3, r2
90027e84:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90027e88:	6863      	ldr	r3, [r4, #4]
90027e8a:	f8d8 0000 	ldr.w	r0, [r8]
90027e8e:	1c5a      	adds	r2, r3, #1
90027e90:	3302      	adds	r3, #2
90027e92:	6062      	str	r2, [r4, #4]
90027e94:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90027e98:	f7ff ff9f 	bl	90027dda <__retarget_lock_release_recursive>
90027e9c:	2000      	movs	r0, #0
90027e9e:	e7ca      	b.n	90027e36 <__register_exitproc+0x3e>
90027ea0:	2403a230 	.word	0x2403a230
90027ea4:	2403a1a4 	.word	0x2403a1a4
90027ea8:	9002bf08 	.word	0x9002bf08
90027eac:	90027755 	.word	0x90027755
90027eb0:	2400015c 	.word	0x2400015c

90027eb4 <_free_r>:
90027eb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
90027eb6:	2900      	cmp	r1, #0
90027eb8:	d044      	beq.n	90027f44 <_free_r+0x90>
90027eba:	f851 3c04 	ldr.w	r3, [r1, #-4]
90027ebe:	9001      	str	r0, [sp, #4]
90027ec0:	2b00      	cmp	r3, #0
90027ec2:	f1a1 0404 	sub.w	r4, r1, #4
90027ec6:	bfb8      	it	lt
90027ec8:	18e4      	addlt	r4, r4, r3
90027eca:	f7ff fcf3 	bl	900278b4 <__malloc_lock>
90027ece:	4a1e      	ldr	r2, [pc, #120]	; (90027f48 <_free_r+0x94>)
90027ed0:	9801      	ldr	r0, [sp, #4]
90027ed2:	6813      	ldr	r3, [r2, #0]
90027ed4:	b933      	cbnz	r3, 90027ee4 <_free_r+0x30>
90027ed6:	6063      	str	r3, [r4, #4]
90027ed8:	6014      	str	r4, [r2, #0]
90027eda:	b003      	add	sp, #12
90027edc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90027ee0:	f7ff bcee 	b.w	900278c0 <__malloc_unlock>
90027ee4:	42a3      	cmp	r3, r4
90027ee6:	d908      	bls.n	90027efa <_free_r+0x46>
90027ee8:	6825      	ldr	r5, [r4, #0]
90027eea:	1961      	adds	r1, r4, r5
90027eec:	428b      	cmp	r3, r1
90027eee:	bf01      	itttt	eq
90027ef0:	6819      	ldreq	r1, [r3, #0]
90027ef2:	685b      	ldreq	r3, [r3, #4]
90027ef4:	1949      	addeq	r1, r1, r5
90027ef6:	6021      	streq	r1, [r4, #0]
90027ef8:	e7ed      	b.n	90027ed6 <_free_r+0x22>
90027efa:	461a      	mov	r2, r3
90027efc:	685b      	ldr	r3, [r3, #4]
90027efe:	b10b      	cbz	r3, 90027f04 <_free_r+0x50>
90027f00:	42a3      	cmp	r3, r4
90027f02:	d9fa      	bls.n	90027efa <_free_r+0x46>
90027f04:	6811      	ldr	r1, [r2, #0]
90027f06:	1855      	adds	r5, r2, r1
90027f08:	42a5      	cmp	r5, r4
90027f0a:	d10b      	bne.n	90027f24 <_free_r+0x70>
90027f0c:	6824      	ldr	r4, [r4, #0]
90027f0e:	4421      	add	r1, r4
90027f10:	1854      	adds	r4, r2, r1
90027f12:	42a3      	cmp	r3, r4
90027f14:	6011      	str	r1, [r2, #0]
90027f16:	d1e0      	bne.n	90027eda <_free_r+0x26>
90027f18:	681c      	ldr	r4, [r3, #0]
90027f1a:	685b      	ldr	r3, [r3, #4]
90027f1c:	6053      	str	r3, [r2, #4]
90027f1e:	440c      	add	r4, r1
90027f20:	6014      	str	r4, [r2, #0]
90027f22:	e7da      	b.n	90027eda <_free_r+0x26>
90027f24:	d902      	bls.n	90027f2c <_free_r+0x78>
90027f26:	230c      	movs	r3, #12
90027f28:	6003      	str	r3, [r0, #0]
90027f2a:	e7d6      	b.n	90027eda <_free_r+0x26>
90027f2c:	6825      	ldr	r5, [r4, #0]
90027f2e:	1961      	adds	r1, r4, r5
90027f30:	428b      	cmp	r3, r1
90027f32:	bf04      	itt	eq
90027f34:	6819      	ldreq	r1, [r3, #0]
90027f36:	685b      	ldreq	r3, [r3, #4]
90027f38:	6063      	str	r3, [r4, #4]
90027f3a:	bf04      	itt	eq
90027f3c:	1949      	addeq	r1, r1, r5
90027f3e:	6021      	streq	r1, [r4, #0]
90027f40:	6054      	str	r4, [r2, #4]
90027f42:	e7ca      	b.n	90027eda <_free_r+0x26>
90027f44:	b003      	add	sp, #12
90027f46:	bd30      	pop	{r4, r5, pc}
90027f48:	2403a058 	.word	0x2403a058

90027f4c <__sfputc_r>:
90027f4c:	6893      	ldr	r3, [r2, #8]
90027f4e:	3b01      	subs	r3, #1
90027f50:	2b00      	cmp	r3, #0
90027f52:	b410      	push	{r4}
90027f54:	6093      	str	r3, [r2, #8]
90027f56:	da08      	bge.n	90027f6a <__sfputc_r+0x1e>
90027f58:	6994      	ldr	r4, [r2, #24]
90027f5a:	42a3      	cmp	r3, r4
90027f5c:	db01      	blt.n	90027f62 <__sfputc_r+0x16>
90027f5e:	290a      	cmp	r1, #10
90027f60:	d103      	bne.n	90027f6a <__sfputc_r+0x1e>
90027f62:	f85d 4b04 	ldr.w	r4, [sp], #4
90027f66:	f7ff bdc4 	b.w	90027af2 <__swbuf_r>
90027f6a:	6813      	ldr	r3, [r2, #0]
90027f6c:	1c58      	adds	r0, r3, #1
90027f6e:	6010      	str	r0, [r2, #0]
90027f70:	7019      	strb	r1, [r3, #0]
90027f72:	4608      	mov	r0, r1
90027f74:	f85d 4b04 	ldr.w	r4, [sp], #4
90027f78:	4770      	bx	lr

90027f7a <__sfputs_r>:
90027f7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027f7c:	4606      	mov	r6, r0
90027f7e:	460f      	mov	r7, r1
90027f80:	4614      	mov	r4, r2
90027f82:	18d5      	adds	r5, r2, r3
90027f84:	42ac      	cmp	r4, r5
90027f86:	d101      	bne.n	90027f8c <__sfputs_r+0x12>
90027f88:	2000      	movs	r0, #0
90027f8a:	e007      	b.n	90027f9c <__sfputs_r+0x22>
90027f8c:	f814 1b01 	ldrb.w	r1, [r4], #1
90027f90:	463a      	mov	r2, r7
90027f92:	4630      	mov	r0, r6
90027f94:	f7ff ffda 	bl	90027f4c <__sfputc_r>
90027f98:	1c43      	adds	r3, r0, #1
90027f9a:	d1f3      	bne.n	90027f84 <__sfputs_r+0xa>
90027f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90027fa0 <_vfiprintf_r>:
90027fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027fa4:	460d      	mov	r5, r1
90027fa6:	b09d      	sub	sp, #116	; 0x74
90027fa8:	4614      	mov	r4, r2
90027faa:	4698      	mov	r8, r3
90027fac:	4606      	mov	r6, r0
90027fae:	b118      	cbz	r0, 90027fb8 <_vfiprintf_r+0x18>
90027fb0:	6a03      	ldr	r3, [r0, #32]
90027fb2:	b90b      	cbnz	r3, 90027fb8 <_vfiprintf_r+0x18>
90027fb4:	f7ff fd12 	bl	900279dc <__sinit>
90027fb8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90027fba:	07d9      	lsls	r1, r3, #31
90027fbc:	d405      	bmi.n	90027fca <_vfiprintf_r+0x2a>
90027fbe:	89ab      	ldrh	r3, [r5, #12]
90027fc0:	059a      	lsls	r2, r3, #22
90027fc2:	d402      	bmi.n	90027fca <_vfiprintf_r+0x2a>
90027fc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
90027fc6:	f7ff ff07 	bl	90027dd8 <__retarget_lock_acquire_recursive>
90027fca:	89ab      	ldrh	r3, [r5, #12]
90027fcc:	071b      	lsls	r3, r3, #28
90027fce:	d501      	bpl.n	90027fd4 <_vfiprintf_r+0x34>
90027fd0:	692b      	ldr	r3, [r5, #16]
90027fd2:	b99b      	cbnz	r3, 90027ffc <_vfiprintf_r+0x5c>
90027fd4:	4629      	mov	r1, r5
90027fd6:	4630      	mov	r0, r6
90027fd8:	f7ff fdc8 	bl	90027b6c <__swsetup_r>
90027fdc:	b170      	cbz	r0, 90027ffc <_vfiprintf_r+0x5c>
90027fde:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90027fe0:	07dc      	lsls	r4, r3, #31
90027fe2:	d504      	bpl.n	90027fee <_vfiprintf_r+0x4e>
90027fe4:	f04f 30ff 	mov.w	r0, #4294967295
90027fe8:	b01d      	add	sp, #116	; 0x74
90027fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027fee:	89ab      	ldrh	r3, [r5, #12]
90027ff0:	0598      	lsls	r0, r3, #22
90027ff2:	d4f7      	bmi.n	90027fe4 <_vfiprintf_r+0x44>
90027ff4:	6da8      	ldr	r0, [r5, #88]	; 0x58
90027ff6:	f7ff fef0 	bl	90027dda <__retarget_lock_release_recursive>
90027ffa:	e7f3      	b.n	90027fe4 <_vfiprintf_r+0x44>
90027ffc:	2300      	movs	r3, #0
90027ffe:	9309      	str	r3, [sp, #36]	; 0x24
90028000:	2320      	movs	r3, #32
90028002:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90028006:	f8cd 800c 	str.w	r8, [sp, #12]
9002800a:	2330      	movs	r3, #48	; 0x30
9002800c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 900281c0 <_vfiprintf_r+0x220>
90028010:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90028014:	f04f 0901 	mov.w	r9, #1
90028018:	4623      	mov	r3, r4
9002801a:	469a      	mov	sl, r3
9002801c:	f813 2b01 	ldrb.w	r2, [r3], #1
90028020:	b10a      	cbz	r2, 90028026 <_vfiprintf_r+0x86>
90028022:	2a25      	cmp	r2, #37	; 0x25
90028024:	d1f9      	bne.n	9002801a <_vfiprintf_r+0x7a>
90028026:	ebba 0b04 	subs.w	fp, sl, r4
9002802a:	d00b      	beq.n	90028044 <_vfiprintf_r+0xa4>
9002802c:	465b      	mov	r3, fp
9002802e:	4622      	mov	r2, r4
90028030:	4629      	mov	r1, r5
90028032:	4630      	mov	r0, r6
90028034:	f7ff ffa1 	bl	90027f7a <__sfputs_r>
90028038:	3001      	adds	r0, #1
9002803a:	f000 80a9 	beq.w	90028190 <_vfiprintf_r+0x1f0>
9002803e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028040:	445a      	add	r2, fp
90028042:	9209      	str	r2, [sp, #36]	; 0x24
90028044:	f89a 3000 	ldrb.w	r3, [sl]
90028048:	2b00      	cmp	r3, #0
9002804a:	f000 80a1 	beq.w	90028190 <_vfiprintf_r+0x1f0>
9002804e:	2300      	movs	r3, #0
90028050:	f04f 32ff 	mov.w	r2, #4294967295
90028054:	e9cd 2305 	strd	r2, r3, [sp, #20]
90028058:	f10a 0a01 	add.w	sl, sl, #1
9002805c:	9304      	str	r3, [sp, #16]
9002805e:	9307      	str	r3, [sp, #28]
90028060:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90028064:	931a      	str	r3, [sp, #104]	; 0x68
90028066:	4654      	mov	r4, sl
90028068:	2205      	movs	r2, #5
9002806a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002806e:	4854      	ldr	r0, [pc, #336]	; (900281c0 <_vfiprintf_r+0x220>)
90028070:	f7d8 f936 	bl	900002e0 <memchr>
90028074:	9a04      	ldr	r2, [sp, #16]
90028076:	b9d8      	cbnz	r0, 900280b0 <_vfiprintf_r+0x110>
90028078:	06d1      	lsls	r1, r2, #27
9002807a:	bf44      	itt	mi
9002807c:	2320      	movmi	r3, #32
9002807e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90028082:	0713      	lsls	r3, r2, #28
90028084:	bf44      	itt	mi
90028086:	232b      	movmi	r3, #43	; 0x2b
90028088:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002808c:	f89a 3000 	ldrb.w	r3, [sl]
90028090:	2b2a      	cmp	r3, #42	; 0x2a
90028092:	d015      	beq.n	900280c0 <_vfiprintf_r+0x120>
90028094:	9a07      	ldr	r2, [sp, #28]
90028096:	4654      	mov	r4, sl
90028098:	2000      	movs	r0, #0
9002809a:	f04f 0c0a 	mov.w	ip, #10
9002809e:	4621      	mov	r1, r4
900280a0:	f811 3b01 	ldrb.w	r3, [r1], #1
900280a4:	3b30      	subs	r3, #48	; 0x30
900280a6:	2b09      	cmp	r3, #9
900280a8:	d94d      	bls.n	90028146 <_vfiprintf_r+0x1a6>
900280aa:	b1b0      	cbz	r0, 900280da <_vfiprintf_r+0x13a>
900280ac:	9207      	str	r2, [sp, #28]
900280ae:	e014      	b.n	900280da <_vfiprintf_r+0x13a>
900280b0:	eba0 0308 	sub.w	r3, r0, r8
900280b4:	fa09 f303 	lsl.w	r3, r9, r3
900280b8:	4313      	orrs	r3, r2
900280ba:	9304      	str	r3, [sp, #16]
900280bc:	46a2      	mov	sl, r4
900280be:	e7d2      	b.n	90028066 <_vfiprintf_r+0xc6>
900280c0:	9b03      	ldr	r3, [sp, #12]
900280c2:	1d19      	adds	r1, r3, #4
900280c4:	681b      	ldr	r3, [r3, #0]
900280c6:	9103      	str	r1, [sp, #12]
900280c8:	2b00      	cmp	r3, #0
900280ca:	bfbb      	ittet	lt
900280cc:	425b      	neglt	r3, r3
900280ce:	f042 0202 	orrlt.w	r2, r2, #2
900280d2:	9307      	strge	r3, [sp, #28]
900280d4:	9307      	strlt	r3, [sp, #28]
900280d6:	bfb8      	it	lt
900280d8:	9204      	strlt	r2, [sp, #16]
900280da:	7823      	ldrb	r3, [r4, #0]
900280dc:	2b2e      	cmp	r3, #46	; 0x2e
900280de:	d10c      	bne.n	900280fa <_vfiprintf_r+0x15a>
900280e0:	7863      	ldrb	r3, [r4, #1]
900280e2:	2b2a      	cmp	r3, #42	; 0x2a
900280e4:	d134      	bne.n	90028150 <_vfiprintf_r+0x1b0>
900280e6:	9b03      	ldr	r3, [sp, #12]
900280e8:	1d1a      	adds	r2, r3, #4
900280ea:	681b      	ldr	r3, [r3, #0]
900280ec:	9203      	str	r2, [sp, #12]
900280ee:	2b00      	cmp	r3, #0
900280f0:	bfb8      	it	lt
900280f2:	f04f 33ff 	movlt.w	r3, #4294967295
900280f6:	3402      	adds	r4, #2
900280f8:	9305      	str	r3, [sp, #20]
900280fa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 900281d0 <_vfiprintf_r+0x230>
900280fe:	7821      	ldrb	r1, [r4, #0]
90028100:	2203      	movs	r2, #3
90028102:	4650      	mov	r0, sl
90028104:	f7d8 f8ec 	bl	900002e0 <memchr>
90028108:	b138      	cbz	r0, 9002811a <_vfiprintf_r+0x17a>
9002810a:	9b04      	ldr	r3, [sp, #16]
9002810c:	eba0 000a 	sub.w	r0, r0, sl
90028110:	2240      	movs	r2, #64	; 0x40
90028112:	4082      	lsls	r2, r0
90028114:	4313      	orrs	r3, r2
90028116:	3401      	adds	r4, #1
90028118:	9304      	str	r3, [sp, #16]
9002811a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002811e:	4829      	ldr	r0, [pc, #164]	; (900281c4 <_vfiprintf_r+0x224>)
90028120:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90028124:	2206      	movs	r2, #6
90028126:	f7d8 f8db 	bl	900002e0 <memchr>
9002812a:	2800      	cmp	r0, #0
9002812c:	d03f      	beq.n	900281ae <_vfiprintf_r+0x20e>
9002812e:	4b26      	ldr	r3, [pc, #152]	; (900281c8 <_vfiprintf_r+0x228>)
90028130:	bb1b      	cbnz	r3, 9002817a <_vfiprintf_r+0x1da>
90028132:	9b03      	ldr	r3, [sp, #12]
90028134:	3307      	adds	r3, #7
90028136:	f023 0307 	bic.w	r3, r3, #7
9002813a:	3308      	adds	r3, #8
9002813c:	9303      	str	r3, [sp, #12]
9002813e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028140:	443b      	add	r3, r7
90028142:	9309      	str	r3, [sp, #36]	; 0x24
90028144:	e768      	b.n	90028018 <_vfiprintf_r+0x78>
90028146:	fb0c 3202 	mla	r2, ip, r2, r3
9002814a:	460c      	mov	r4, r1
9002814c:	2001      	movs	r0, #1
9002814e:	e7a6      	b.n	9002809e <_vfiprintf_r+0xfe>
90028150:	2300      	movs	r3, #0
90028152:	3401      	adds	r4, #1
90028154:	9305      	str	r3, [sp, #20]
90028156:	4619      	mov	r1, r3
90028158:	f04f 0c0a 	mov.w	ip, #10
9002815c:	4620      	mov	r0, r4
9002815e:	f810 2b01 	ldrb.w	r2, [r0], #1
90028162:	3a30      	subs	r2, #48	; 0x30
90028164:	2a09      	cmp	r2, #9
90028166:	d903      	bls.n	90028170 <_vfiprintf_r+0x1d0>
90028168:	2b00      	cmp	r3, #0
9002816a:	d0c6      	beq.n	900280fa <_vfiprintf_r+0x15a>
9002816c:	9105      	str	r1, [sp, #20]
9002816e:	e7c4      	b.n	900280fa <_vfiprintf_r+0x15a>
90028170:	fb0c 2101 	mla	r1, ip, r1, r2
90028174:	4604      	mov	r4, r0
90028176:	2301      	movs	r3, #1
90028178:	e7f0      	b.n	9002815c <_vfiprintf_r+0x1bc>
9002817a:	ab03      	add	r3, sp, #12
9002817c:	9300      	str	r3, [sp, #0]
9002817e:	462a      	mov	r2, r5
90028180:	4b12      	ldr	r3, [pc, #72]	; (900281cc <_vfiprintf_r+0x22c>)
90028182:	a904      	add	r1, sp, #16
90028184:	4630      	mov	r0, r6
90028186:	f3af 8000 	nop.w
9002818a:	4607      	mov	r7, r0
9002818c:	1c78      	adds	r0, r7, #1
9002818e:	d1d6      	bne.n	9002813e <_vfiprintf_r+0x19e>
90028190:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028192:	07d9      	lsls	r1, r3, #31
90028194:	d405      	bmi.n	900281a2 <_vfiprintf_r+0x202>
90028196:	89ab      	ldrh	r3, [r5, #12]
90028198:	059a      	lsls	r2, r3, #22
9002819a:	d402      	bmi.n	900281a2 <_vfiprintf_r+0x202>
9002819c:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002819e:	f7ff fe1c 	bl	90027dda <__retarget_lock_release_recursive>
900281a2:	89ab      	ldrh	r3, [r5, #12]
900281a4:	065b      	lsls	r3, r3, #25
900281a6:	f53f af1d 	bmi.w	90027fe4 <_vfiprintf_r+0x44>
900281aa:	9809      	ldr	r0, [sp, #36]	; 0x24
900281ac:	e71c      	b.n	90027fe8 <_vfiprintf_r+0x48>
900281ae:	ab03      	add	r3, sp, #12
900281b0:	9300      	str	r3, [sp, #0]
900281b2:	462a      	mov	r2, r5
900281b4:	4b05      	ldr	r3, [pc, #20]	; (900281cc <_vfiprintf_r+0x22c>)
900281b6:	a904      	add	r1, sp, #16
900281b8:	4630      	mov	r0, r6
900281ba:	f000 f879 	bl	900282b0 <_printf_i>
900281be:	e7e4      	b.n	9002818a <_vfiprintf_r+0x1ea>
900281c0:	9002bf0c 	.word	0x9002bf0c
900281c4:	9002bf16 	.word	0x9002bf16
900281c8:	00000000 	.word	0x00000000
900281cc:	90027f7b 	.word	0x90027f7b
900281d0:	9002bf12 	.word	0x9002bf12

900281d4 <_printf_common>:
900281d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900281d8:	4616      	mov	r6, r2
900281da:	4699      	mov	r9, r3
900281dc:	688a      	ldr	r2, [r1, #8]
900281de:	690b      	ldr	r3, [r1, #16]
900281e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
900281e4:	4293      	cmp	r3, r2
900281e6:	bfb8      	it	lt
900281e8:	4613      	movlt	r3, r2
900281ea:	6033      	str	r3, [r6, #0]
900281ec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
900281f0:	4607      	mov	r7, r0
900281f2:	460c      	mov	r4, r1
900281f4:	b10a      	cbz	r2, 900281fa <_printf_common+0x26>
900281f6:	3301      	adds	r3, #1
900281f8:	6033      	str	r3, [r6, #0]
900281fa:	6823      	ldr	r3, [r4, #0]
900281fc:	0699      	lsls	r1, r3, #26
900281fe:	bf42      	ittt	mi
90028200:	6833      	ldrmi	r3, [r6, #0]
90028202:	3302      	addmi	r3, #2
90028204:	6033      	strmi	r3, [r6, #0]
90028206:	6825      	ldr	r5, [r4, #0]
90028208:	f015 0506 	ands.w	r5, r5, #6
9002820c:	d106      	bne.n	9002821c <_printf_common+0x48>
9002820e:	f104 0a19 	add.w	sl, r4, #25
90028212:	68e3      	ldr	r3, [r4, #12]
90028214:	6832      	ldr	r2, [r6, #0]
90028216:	1a9b      	subs	r3, r3, r2
90028218:	42ab      	cmp	r3, r5
9002821a:	dc26      	bgt.n	9002826a <_printf_common+0x96>
9002821c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90028220:	1e13      	subs	r3, r2, #0
90028222:	6822      	ldr	r2, [r4, #0]
90028224:	bf18      	it	ne
90028226:	2301      	movne	r3, #1
90028228:	0692      	lsls	r2, r2, #26
9002822a:	d42b      	bmi.n	90028284 <_printf_common+0xb0>
9002822c:	f104 0243 	add.w	r2, r4, #67	; 0x43
90028230:	4649      	mov	r1, r9
90028232:	4638      	mov	r0, r7
90028234:	47c0      	blx	r8
90028236:	3001      	adds	r0, #1
90028238:	d01e      	beq.n	90028278 <_printf_common+0xa4>
9002823a:	6823      	ldr	r3, [r4, #0]
9002823c:	6922      	ldr	r2, [r4, #16]
9002823e:	f003 0306 	and.w	r3, r3, #6
90028242:	2b04      	cmp	r3, #4
90028244:	bf02      	ittt	eq
90028246:	68e5      	ldreq	r5, [r4, #12]
90028248:	6833      	ldreq	r3, [r6, #0]
9002824a:	1aed      	subeq	r5, r5, r3
9002824c:	68a3      	ldr	r3, [r4, #8]
9002824e:	bf0c      	ite	eq
90028250:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90028254:	2500      	movne	r5, #0
90028256:	4293      	cmp	r3, r2
90028258:	bfc4      	itt	gt
9002825a:	1a9b      	subgt	r3, r3, r2
9002825c:	18ed      	addgt	r5, r5, r3
9002825e:	2600      	movs	r6, #0
90028260:	341a      	adds	r4, #26
90028262:	42b5      	cmp	r5, r6
90028264:	d11a      	bne.n	9002829c <_printf_common+0xc8>
90028266:	2000      	movs	r0, #0
90028268:	e008      	b.n	9002827c <_printf_common+0xa8>
9002826a:	2301      	movs	r3, #1
9002826c:	4652      	mov	r2, sl
9002826e:	4649      	mov	r1, r9
90028270:	4638      	mov	r0, r7
90028272:	47c0      	blx	r8
90028274:	3001      	adds	r0, #1
90028276:	d103      	bne.n	90028280 <_printf_common+0xac>
90028278:	f04f 30ff 	mov.w	r0, #4294967295
9002827c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028280:	3501      	adds	r5, #1
90028282:	e7c6      	b.n	90028212 <_printf_common+0x3e>
90028284:	18e1      	adds	r1, r4, r3
90028286:	1c5a      	adds	r2, r3, #1
90028288:	2030      	movs	r0, #48	; 0x30
9002828a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002828e:	4422      	add	r2, r4
90028290:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90028294:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90028298:	3302      	adds	r3, #2
9002829a:	e7c7      	b.n	9002822c <_printf_common+0x58>
9002829c:	2301      	movs	r3, #1
9002829e:	4622      	mov	r2, r4
900282a0:	4649      	mov	r1, r9
900282a2:	4638      	mov	r0, r7
900282a4:	47c0      	blx	r8
900282a6:	3001      	adds	r0, #1
900282a8:	d0e6      	beq.n	90028278 <_printf_common+0xa4>
900282aa:	3601      	adds	r6, #1
900282ac:	e7d9      	b.n	90028262 <_printf_common+0x8e>
	...

900282b0 <_printf_i>:
900282b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
900282b4:	7e0f      	ldrb	r7, [r1, #24]
900282b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900282b8:	2f78      	cmp	r7, #120	; 0x78
900282ba:	4691      	mov	r9, r2
900282bc:	4680      	mov	r8, r0
900282be:	460c      	mov	r4, r1
900282c0:	469a      	mov	sl, r3
900282c2:	f101 0243 	add.w	r2, r1, #67	; 0x43
900282c6:	d807      	bhi.n	900282d8 <_printf_i+0x28>
900282c8:	2f62      	cmp	r7, #98	; 0x62
900282ca:	d80a      	bhi.n	900282e2 <_printf_i+0x32>
900282cc:	2f00      	cmp	r7, #0
900282ce:	f000 80d4 	beq.w	9002847a <_printf_i+0x1ca>
900282d2:	2f58      	cmp	r7, #88	; 0x58
900282d4:	f000 80c0 	beq.w	90028458 <_printf_i+0x1a8>
900282d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
900282dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
900282e0:	e03a      	b.n	90028358 <_printf_i+0xa8>
900282e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
900282e6:	2b15      	cmp	r3, #21
900282e8:	d8f6      	bhi.n	900282d8 <_printf_i+0x28>
900282ea:	a101      	add	r1, pc, #4	; (adr r1, 900282f0 <_printf_i+0x40>)
900282ec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
900282f0:	90028349 	.word	0x90028349
900282f4:	9002835d 	.word	0x9002835d
900282f8:	900282d9 	.word	0x900282d9
900282fc:	900282d9 	.word	0x900282d9
90028300:	900282d9 	.word	0x900282d9
90028304:	900282d9 	.word	0x900282d9
90028308:	9002835d 	.word	0x9002835d
9002830c:	900282d9 	.word	0x900282d9
90028310:	900282d9 	.word	0x900282d9
90028314:	900282d9 	.word	0x900282d9
90028318:	900282d9 	.word	0x900282d9
9002831c:	90028461 	.word	0x90028461
90028320:	90028389 	.word	0x90028389
90028324:	9002841b 	.word	0x9002841b
90028328:	900282d9 	.word	0x900282d9
9002832c:	900282d9 	.word	0x900282d9
90028330:	90028483 	.word	0x90028483
90028334:	900282d9 	.word	0x900282d9
90028338:	90028389 	.word	0x90028389
9002833c:	900282d9 	.word	0x900282d9
90028340:	900282d9 	.word	0x900282d9
90028344:	90028423 	.word	0x90028423
90028348:	682b      	ldr	r3, [r5, #0]
9002834a:	1d1a      	adds	r2, r3, #4
9002834c:	681b      	ldr	r3, [r3, #0]
9002834e:	602a      	str	r2, [r5, #0]
90028350:	f104 0542 	add.w	r5, r4, #66	; 0x42
90028354:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90028358:	2301      	movs	r3, #1
9002835a:	e09f      	b.n	9002849c <_printf_i+0x1ec>
9002835c:	6820      	ldr	r0, [r4, #0]
9002835e:	682b      	ldr	r3, [r5, #0]
90028360:	0607      	lsls	r7, r0, #24
90028362:	f103 0104 	add.w	r1, r3, #4
90028366:	6029      	str	r1, [r5, #0]
90028368:	d501      	bpl.n	9002836e <_printf_i+0xbe>
9002836a:	681e      	ldr	r6, [r3, #0]
9002836c:	e003      	b.n	90028376 <_printf_i+0xc6>
9002836e:	0646      	lsls	r6, r0, #25
90028370:	d5fb      	bpl.n	9002836a <_printf_i+0xba>
90028372:	f9b3 6000 	ldrsh.w	r6, [r3]
90028376:	2e00      	cmp	r6, #0
90028378:	da03      	bge.n	90028382 <_printf_i+0xd2>
9002837a:	232d      	movs	r3, #45	; 0x2d
9002837c:	4276      	negs	r6, r6
9002837e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90028382:	485a      	ldr	r0, [pc, #360]	; (900284ec <_printf_i+0x23c>)
90028384:	230a      	movs	r3, #10
90028386:	e012      	b.n	900283ae <_printf_i+0xfe>
90028388:	682b      	ldr	r3, [r5, #0]
9002838a:	6820      	ldr	r0, [r4, #0]
9002838c:	1d19      	adds	r1, r3, #4
9002838e:	6029      	str	r1, [r5, #0]
90028390:	0605      	lsls	r5, r0, #24
90028392:	d501      	bpl.n	90028398 <_printf_i+0xe8>
90028394:	681e      	ldr	r6, [r3, #0]
90028396:	e002      	b.n	9002839e <_printf_i+0xee>
90028398:	0641      	lsls	r1, r0, #25
9002839a:	d5fb      	bpl.n	90028394 <_printf_i+0xe4>
9002839c:	881e      	ldrh	r6, [r3, #0]
9002839e:	4853      	ldr	r0, [pc, #332]	; (900284ec <_printf_i+0x23c>)
900283a0:	2f6f      	cmp	r7, #111	; 0x6f
900283a2:	bf0c      	ite	eq
900283a4:	2308      	moveq	r3, #8
900283a6:	230a      	movne	r3, #10
900283a8:	2100      	movs	r1, #0
900283aa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
900283ae:	6865      	ldr	r5, [r4, #4]
900283b0:	60a5      	str	r5, [r4, #8]
900283b2:	2d00      	cmp	r5, #0
900283b4:	bfa2      	ittt	ge
900283b6:	6821      	ldrge	r1, [r4, #0]
900283b8:	f021 0104 	bicge.w	r1, r1, #4
900283bc:	6021      	strge	r1, [r4, #0]
900283be:	b90e      	cbnz	r6, 900283c4 <_printf_i+0x114>
900283c0:	2d00      	cmp	r5, #0
900283c2:	d04b      	beq.n	9002845c <_printf_i+0x1ac>
900283c4:	4615      	mov	r5, r2
900283c6:	fbb6 f1f3 	udiv	r1, r6, r3
900283ca:	fb03 6711 	mls	r7, r3, r1, r6
900283ce:	5dc7      	ldrb	r7, [r0, r7]
900283d0:	f805 7d01 	strb.w	r7, [r5, #-1]!
900283d4:	4637      	mov	r7, r6
900283d6:	42bb      	cmp	r3, r7
900283d8:	460e      	mov	r6, r1
900283da:	d9f4      	bls.n	900283c6 <_printf_i+0x116>
900283dc:	2b08      	cmp	r3, #8
900283de:	d10b      	bne.n	900283f8 <_printf_i+0x148>
900283e0:	6823      	ldr	r3, [r4, #0]
900283e2:	07de      	lsls	r6, r3, #31
900283e4:	d508      	bpl.n	900283f8 <_printf_i+0x148>
900283e6:	6923      	ldr	r3, [r4, #16]
900283e8:	6861      	ldr	r1, [r4, #4]
900283ea:	4299      	cmp	r1, r3
900283ec:	bfde      	ittt	le
900283ee:	2330      	movle	r3, #48	; 0x30
900283f0:	f805 3c01 	strble.w	r3, [r5, #-1]
900283f4:	f105 35ff 	addle.w	r5, r5, #4294967295
900283f8:	1b52      	subs	r2, r2, r5
900283fa:	6122      	str	r2, [r4, #16]
900283fc:	f8cd a000 	str.w	sl, [sp]
90028400:	464b      	mov	r3, r9
90028402:	aa03      	add	r2, sp, #12
90028404:	4621      	mov	r1, r4
90028406:	4640      	mov	r0, r8
90028408:	f7ff fee4 	bl	900281d4 <_printf_common>
9002840c:	3001      	adds	r0, #1
9002840e:	d14a      	bne.n	900284a6 <_printf_i+0x1f6>
90028410:	f04f 30ff 	mov.w	r0, #4294967295
90028414:	b004      	add	sp, #16
90028416:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002841a:	6823      	ldr	r3, [r4, #0]
9002841c:	f043 0320 	orr.w	r3, r3, #32
90028420:	6023      	str	r3, [r4, #0]
90028422:	4833      	ldr	r0, [pc, #204]	; (900284f0 <_printf_i+0x240>)
90028424:	2778      	movs	r7, #120	; 0x78
90028426:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002842a:	6823      	ldr	r3, [r4, #0]
9002842c:	6829      	ldr	r1, [r5, #0]
9002842e:	061f      	lsls	r7, r3, #24
90028430:	f851 6b04 	ldr.w	r6, [r1], #4
90028434:	d402      	bmi.n	9002843c <_printf_i+0x18c>
90028436:	065f      	lsls	r7, r3, #25
90028438:	bf48      	it	mi
9002843a:	b2b6      	uxthmi	r6, r6
9002843c:	07df      	lsls	r7, r3, #31
9002843e:	bf48      	it	mi
90028440:	f043 0320 	orrmi.w	r3, r3, #32
90028444:	6029      	str	r1, [r5, #0]
90028446:	bf48      	it	mi
90028448:	6023      	strmi	r3, [r4, #0]
9002844a:	b91e      	cbnz	r6, 90028454 <_printf_i+0x1a4>
9002844c:	6823      	ldr	r3, [r4, #0]
9002844e:	f023 0320 	bic.w	r3, r3, #32
90028452:	6023      	str	r3, [r4, #0]
90028454:	2310      	movs	r3, #16
90028456:	e7a7      	b.n	900283a8 <_printf_i+0xf8>
90028458:	4824      	ldr	r0, [pc, #144]	; (900284ec <_printf_i+0x23c>)
9002845a:	e7e4      	b.n	90028426 <_printf_i+0x176>
9002845c:	4615      	mov	r5, r2
9002845e:	e7bd      	b.n	900283dc <_printf_i+0x12c>
90028460:	682b      	ldr	r3, [r5, #0]
90028462:	6826      	ldr	r6, [r4, #0]
90028464:	6961      	ldr	r1, [r4, #20]
90028466:	1d18      	adds	r0, r3, #4
90028468:	6028      	str	r0, [r5, #0]
9002846a:	0635      	lsls	r5, r6, #24
9002846c:	681b      	ldr	r3, [r3, #0]
9002846e:	d501      	bpl.n	90028474 <_printf_i+0x1c4>
90028470:	6019      	str	r1, [r3, #0]
90028472:	e002      	b.n	9002847a <_printf_i+0x1ca>
90028474:	0670      	lsls	r0, r6, #25
90028476:	d5fb      	bpl.n	90028470 <_printf_i+0x1c0>
90028478:	8019      	strh	r1, [r3, #0]
9002847a:	2300      	movs	r3, #0
9002847c:	6123      	str	r3, [r4, #16]
9002847e:	4615      	mov	r5, r2
90028480:	e7bc      	b.n	900283fc <_printf_i+0x14c>
90028482:	682b      	ldr	r3, [r5, #0]
90028484:	1d1a      	adds	r2, r3, #4
90028486:	602a      	str	r2, [r5, #0]
90028488:	681d      	ldr	r5, [r3, #0]
9002848a:	6862      	ldr	r2, [r4, #4]
9002848c:	2100      	movs	r1, #0
9002848e:	4628      	mov	r0, r5
90028490:	f7d7 ff26 	bl	900002e0 <memchr>
90028494:	b108      	cbz	r0, 9002849a <_printf_i+0x1ea>
90028496:	1b40      	subs	r0, r0, r5
90028498:	6060      	str	r0, [r4, #4]
9002849a:	6863      	ldr	r3, [r4, #4]
9002849c:	6123      	str	r3, [r4, #16]
9002849e:	2300      	movs	r3, #0
900284a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
900284a4:	e7aa      	b.n	900283fc <_printf_i+0x14c>
900284a6:	6923      	ldr	r3, [r4, #16]
900284a8:	462a      	mov	r2, r5
900284aa:	4649      	mov	r1, r9
900284ac:	4640      	mov	r0, r8
900284ae:	47d0      	blx	sl
900284b0:	3001      	adds	r0, #1
900284b2:	d0ad      	beq.n	90028410 <_printf_i+0x160>
900284b4:	6823      	ldr	r3, [r4, #0]
900284b6:	079b      	lsls	r3, r3, #30
900284b8:	d413      	bmi.n	900284e2 <_printf_i+0x232>
900284ba:	68e0      	ldr	r0, [r4, #12]
900284bc:	9b03      	ldr	r3, [sp, #12]
900284be:	4298      	cmp	r0, r3
900284c0:	bfb8      	it	lt
900284c2:	4618      	movlt	r0, r3
900284c4:	e7a6      	b.n	90028414 <_printf_i+0x164>
900284c6:	2301      	movs	r3, #1
900284c8:	4632      	mov	r2, r6
900284ca:	4649      	mov	r1, r9
900284cc:	4640      	mov	r0, r8
900284ce:	47d0      	blx	sl
900284d0:	3001      	adds	r0, #1
900284d2:	d09d      	beq.n	90028410 <_printf_i+0x160>
900284d4:	3501      	adds	r5, #1
900284d6:	68e3      	ldr	r3, [r4, #12]
900284d8:	9903      	ldr	r1, [sp, #12]
900284da:	1a5b      	subs	r3, r3, r1
900284dc:	42ab      	cmp	r3, r5
900284de:	dcf2      	bgt.n	900284c6 <_printf_i+0x216>
900284e0:	e7eb      	b.n	900284ba <_printf_i+0x20a>
900284e2:	2500      	movs	r5, #0
900284e4:	f104 0619 	add.w	r6, r4, #25
900284e8:	e7f5      	b.n	900284d6 <_printf_i+0x226>
900284ea:	bf00      	nop
900284ec:	9002bf1d 	.word	0x9002bf1d
900284f0:	9002bf2e 	.word	0x9002bf2e

900284f4 <__sflush_r>:
900284f4:	898a      	ldrh	r2, [r1, #12]
900284f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900284fa:	4605      	mov	r5, r0
900284fc:	0710      	lsls	r0, r2, #28
900284fe:	460c      	mov	r4, r1
90028500:	d458      	bmi.n	900285b4 <__sflush_r+0xc0>
90028502:	684b      	ldr	r3, [r1, #4]
90028504:	2b00      	cmp	r3, #0
90028506:	dc05      	bgt.n	90028514 <__sflush_r+0x20>
90028508:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002850a:	2b00      	cmp	r3, #0
9002850c:	dc02      	bgt.n	90028514 <__sflush_r+0x20>
9002850e:	2000      	movs	r0, #0
90028510:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028514:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028516:	2e00      	cmp	r6, #0
90028518:	d0f9      	beq.n	9002850e <__sflush_r+0x1a>
9002851a:	2300      	movs	r3, #0
9002851c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90028520:	682f      	ldr	r7, [r5, #0]
90028522:	6a21      	ldr	r1, [r4, #32]
90028524:	602b      	str	r3, [r5, #0]
90028526:	d032      	beq.n	9002858e <__sflush_r+0x9a>
90028528:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002852a:	89a3      	ldrh	r3, [r4, #12]
9002852c:	075a      	lsls	r2, r3, #29
9002852e:	d505      	bpl.n	9002853c <__sflush_r+0x48>
90028530:	6863      	ldr	r3, [r4, #4]
90028532:	1ac0      	subs	r0, r0, r3
90028534:	6b63      	ldr	r3, [r4, #52]	; 0x34
90028536:	b10b      	cbz	r3, 9002853c <__sflush_r+0x48>
90028538:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002853a:	1ac0      	subs	r0, r0, r3
9002853c:	2300      	movs	r3, #0
9002853e:	4602      	mov	r2, r0
90028540:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028542:	6a21      	ldr	r1, [r4, #32]
90028544:	4628      	mov	r0, r5
90028546:	47b0      	blx	r6
90028548:	1c43      	adds	r3, r0, #1
9002854a:	89a3      	ldrh	r3, [r4, #12]
9002854c:	d106      	bne.n	9002855c <__sflush_r+0x68>
9002854e:	6829      	ldr	r1, [r5, #0]
90028550:	291d      	cmp	r1, #29
90028552:	d82b      	bhi.n	900285ac <__sflush_r+0xb8>
90028554:	4a29      	ldr	r2, [pc, #164]	; (900285fc <__sflush_r+0x108>)
90028556:	410a      	asrs	r2, r1
90028558:	07d6      	lsls	r6, r2, #31
9002855a:	d427      	bmi.n	900285ac <__sflush_r+0xb8>
9002855c:	2200      	movs	r2, #0
9002855e:	6062      	str	r2, [r4, #4]
90028560:	04d9      	lsls	r1, r3, #19
90028562:	6922      	ldr	r2, [r4, #16]
90028564:	6022      	str	r2, [r4, #0]
90028566:	d504      	bpl.n	90028572 <__sflush_r+0x7e>
90028568:	1c42      	adds	r2, r0, #1
9002856a:	d101      	bne.n	90028570 <__sflush_r+0x7c>
9002856c:	682b      	ldr	r3, [r5, #0]
9002856e:	b903      	cbnz	r3, 90028572 <__sflush_r+0x7e>
90028570:	6560      	str	r0, [r4, #84]	; 0x54
90028572:	6b61      	ldr	r1, [r4, #52]	; 0x34
90028574:	602f      	str	r7, [r5, #0]
90028576:	2900      	cmp	r1, #0
90028578:	d0c9      	beq.n	9002850e <__sflush_r+0x1a>
9002857a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002857e:	4299      	cmp	r1, r3
90028580:	d002      	beq.n	90028588 <__sflush_r+0x94>
90028582:	4628      	mov	r0, r5
90028584:	f7ff fc96 	bl	90027eb4 <_free_r>
90028588:	2000      	movs	r0, #0
9002858a:	6360      	str	r0, [r4, #52]	; 0x34
9002858c:	e7c0      	b.n	90028510 <__sflush_r+0x1c>
9002858e:	2301      	movs	r3, #1
90028590:	4628      	mov	r0, r5
90028592:	47b0      	blx	r6
90028594:	1c41      	adds	r1, r0, #1
90028596:	d1c8      	bne.n	9002852a <__sflush_r+0x36>
90028598:	682b      	ldr	r3, [r5, #0]
9002859a:	2b00      	cmp	r3, #0
9002859c:	d0c5      	beq.n	9002852a <__sflush_r+0x36>
9002859e:	2b1d      	cmp	r3, #29
900285a0:	d001      	beq.n	900285a6 <__sflush_r+0xb2>
900285a2:	2b16      	cmp	r3, #22
900285a4:	d101      	bne.n	900285aa <__sflush_r+0xb6>
900285a6:	602f      	str	r7, [r5, #0]
900285a8:	e7b1      	b.n	9002850e <__sflush_r+0x1a>
900285aa:	89a3      	ldrh	r3, [r4, #12]
900285ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
900285b0:	81a3      	strh	r3, [r4, #12]
900285b2:	e7ad      	b.n	90028510 <__sflush_r+0x1c>
900285b4:	690f      	ldr	r7, [r1, #16]
900285b6:	2f00      	cmp	r7, #0
900285b8:	d0a9      	beq.n	9002850e <__sflush_r+0x1a>
900285ba:	0793      	lsls	r3, r2, #30
900285bc:	680e      	ldr	r6, [r1, #0]
900285be:	bf08      	it	eq
900285c0:	694b      	ldreq	r3, [r1, #20]
900285c2:	600f      	str	r7, [r1, #0]
900285c4:	bf18      	it	ne
900285c6:	2300      	movne	r3, #0
900285c8:	eba6 0807 	sub.w	r8, r6, r7
900285cc:	608b      	str	r3, [r1, #8]
900285ce:	f1b8 0f00 	cmp.w	r8, #0
900285d2:	dd9c      	ble.n	9002850e <__sflush_r+0x1a>
900285d4:	6a21      	ldr	r1, [r4, #32]
900285d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
900285d8:	4643      	mov	r3, r8
900285da:	463a      	mov	r2, r7
900285dc:	4628      	mov	r0, r5
900285de:	47b0      	blx	r6
900285e0:	2800      	cmp	r0, #0
900285e2:	dc06      	bgt.n	900285f2 <__sflush_r+0xfe>
900285e4:	89a3      	ldrh	r3, [r4, #12]
900285e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
900285ea:	81a3      	strh	r3, [r4, #12]
900285ec:	f04f 30ff 	mov.w	r0, #4294967295
900285f0:	e78e      	b.n	90028510 <__sflush_r+0x1c>
900285f2:	4407      	add	r7, r0
900285f4:	eba8 0800 	sub.w	r8, r8, r0
900285f8:	e7e9      	b.n	900285ce <__sflush_r+0xda>
900285fa:	bf00      	nop
900285fc:	dfbffffe 	.word	0xdfbffffe

90028600 <_fflush_r>:
90028600:	b538      	push	{r3, r4, r5, lr}
90028602:	690b      	ldr	r3, [r1, #16]
90028604:	4605      	mov	r5, r0
90028606:	460c      	mov	r4, r1
90028608:	b913      	cbnz	r3, 90028610 <_fflush_r+0x10>
9002860a:	2500      	movs	r5, #0
9002860c:	4628      	mov	r0, r5
9002860e:	bd38      	pop	{r3, r4, r5, pc}
90028610:	b118      	cbz	r0, 9002861a <_fflush_r+0x1a>
90028612:	6a03      	ldr	r3, [r0, #32]
90028614:	b90b      	cbnz	r3, 9002861a <_fflush_r+0x1a>
90028616:	f7ff f9e1 	bl	900279dc <__sinit>
9002861a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002861e:	2b00      	cmp	r3, #0
90028620:	d0f3      	beq.n	9002860a <_fflush_r+0xa>
90028622:	6e62      	ldr	r2, [r4, #100]	; 0x64
90028624:	07d0      	lsls	r0, r2, #31
90028626:	d404      	bmi.n	90028632 <_fflush_r+0x32>
90028628:	0599      	lsls	r1, r3, #22
9002862a:	d402      	bmi.n	90028632 <_fflush_r+0x32>
9002862c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002862e:	f7ff fbd3 	bl	90027dd8 <__retarget_lock_acquire_recursive>
90028632:	4628      	mov	r0, r5
90028634:	4621      	mov	r1, r4
90028636:	f7ff ff5d 	bl	900284f4 <__sflush_r>
9002863a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002863c:	07da      	lsls	r2, r3, #31
9002863e:	4605      	mov	r5, r0
90028640:	d4e4      	bmi.n	9002860c <_fflush_r+0xc>
90028642:	89a3      	ldrh	r3, [r4, #12]
90028644:	059b      	lsls	r3, r3, #22
90028646:	d4e1      	bmi.n	9002860c <_fflush_r+0xc>
90028648:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002864a:	f7ff fbc6 	bl	90027dda <__retarget_lock_release_recursive>
9002864e:	e7dd      	b.n	9002860c <_fflush_r+0xc>

90028650 <__swhatbuf_r>:
90028650:	b570      	push	{r4, r5, r6, lr}
90028652:	460c      	mov	r4, r1
90028654:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028658:	2900      	cmp	r1, #0
9002865a:	b096      	sub	sp, #88	; 0x58
9002865c:	4615      	mov	r5, r2
9002865e:	461e      	mov	r6, r3
90028660:	da0d      	bge.n	9002867e <__swhatbuf_r+0x2e>
90028662:	89a3      	ldrh	r3, [r4, #12]
90028664:	f013 0f80 	tst.w	r3, #128	; 0x80
90028668:	f04f 0100 	mov.w	r1, #0
9002866c:	bf0c      	ite	eq
9002866e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
90028672:	2340      	movne	r3, #64	; 0x40
90028674:	2000      	movs	r0, #0
90028676:	6031      	str	r1, [r6, #0]
90028678:	602b      	str	r3, [r5, #0]
9002867a:	b016      	add	sp, #88	; 0x58
9002867c:	bd70      	pop	{r4, r5, r6, pc}
9002867e:	466a      	mov	r2, sp
90028680:	f000 f848 	bl	90028714 <_fstat_r>
90028684:	2800      	cmp	r0, #0
90028686:	dbec      	blt.n	90028662 <__swhatbuf_r+0x12>
90028688:	9901      	ldr	r1, [sp, #4]
9002868a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
9002868e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
90028692:	4259      	negs	r1, r3
90028694:	4159      	adcs	r1, r3
90028696:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002869a:	e7eb      	b.n	90028674 <__swhatbuf_r+0x24>

9002869c <__smakebuf_r>:
9002869c:	898b      	ldrh	r3, [r1, #12]
9002869e:	b573      	push	{r0, r1, r4, r5, r6, lr}
900286a0:	079d      	lsls	r5, r3, #30
900286a2:	4606      	mov	r6, r0
900286a4:	460c      	mov	r4, r1
900286a6:	d507      	bpl.n	900286b8 <__smakebuf_r+0x1c>
900286a8:	f104 0347 	add.w	r3, r4, #71	; 0x47
900286ac:	6023      	str	r3, [r4, #0]
900286ae:	6123      	str	r3, [r4, #16]
900286b0:	2301      	movs	r3, #1
900286b2:	6163      	str	r3, [r4, #20]
900286b4:	b002      	add	sp, #8
900286b6:	bd70      	pop	{r4, r5, r6, pc}
900286b8:	ab01      	add	r3, sp, #4
900286ba:	466a      	mov	r2, sp
900286bc:	f7ff ffc8 	bl	90028650 <__swhatbuf_r>
900286c0:	9900      	ldr	r1, [sp, #0]
900286c2:	4605      	mov	r5, r0
900286c4:	4630      	mov	r0, r6
900286c6:	f7ff f875 	bl	900277b4 <_malloc_r>
900286ca:	b948      	cbnz	r0, 900286e0 <__smakebuf_r+0x44>
900286cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900286d0:	059a      	lsls	r2, r3, #22
900286d2:	d4ef      	bmi.n	900286b4 <__smakebuf_r+0x18>
900286d4:	f023 0303 	bic.w	r3, r3, #3
900286d8:	f043 0302 	orr.w	r3, r3, #2
900286dc:	81a3      	strh	r3, [r4, #12]
900286de:	e7e3      	b.n	900286a8 <__smakebuf_r+0xc>
900286e0:	89a3      	ldrh	r3, [r4, #12]
900286e2:	6020      	str	r0, [r4, #0]
900286e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900286e8:	81a3      	strh	r3, [r4, #12]
900286ea:	9b00      	ldr	r3, [sp, #0]
900286ec:	6163      	str	r3, [r4, #20]
900286ee:	9b01      	ldr	r3, [sp, #4]
900286f0:	6120      	str	r0, [r4, #16]
900286f2:	b15b      	cbz	r3, 9002870c <__smakebuf_r+0x70>
900286f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900286f8:	4630      	mov	r0, r6
900286fa:	f000 f81d 	bl	90028738 <_isatty_r>
900286fe:	b128      	cbz	r0, 9002870c <__smakebuf_r+0x70>
90028700:	89a3      	ldrh	r3, [r4, #12]
90028702:	f023 0303 	bic.w	r3, r3, #3
90028706:	f043 0301 	orr.w	r3, r3, #1
9002870a:	81a3      	strh	r3, [r4, #12]
9002870c:	89a3      	ldrh	r3, [r4, #12]
9002870e:	431d      	orrs	r5, r3
90028710:	81a5      	strh	r5, [r4, #12]
90028712:	e7cf      	b.n	900286b4 <__smakebuf_r+0x18>

90028714 <_fstat_r>:
90028714:	b538      	push	{r3, r4, r5, lr}
90028716:	4d07      	ldr	r5, [pc, #28]	; (90028734 <_fstat_r+0x20>)
90028718:	2300      	movs	r3, #0
9002871a:	4604      	mov	r4, r0
9002871c:	4608      	mov	r0, r1
9002871e:	4611      	mov	r1, r2
90028720:	602b      	str	r3, [r5, #0]
90028722:	f7da ff0d 	bl	90003540 <_fstat>
90028726:	1c43      	adds	r3, r0, #1
90028728:	d102      	bne.n	90028730 <_fstat_r+0x1c>
9002872a:	682b      	ldr	r3, [r5, #0]
9002872c:	b103      	cbz	r3, 90028730 <_fstat_r+0x1c>
9002872e:	6023      	str	r3, [r4, #0]
90028730:	bd38      	pop	{r3, r4, r5, pc}
90028732:	bf00      	nop
90028734:	2403a19c 	.word	0x2403a19c

90028738 <_isatty_r>:
90028738:	b538      	push	{r3, r4, r5, lr}
9002873a:	4d06      	ldr	r5, [pc, #24]	; (90028754 <_isatty_r+0x1c>)
9002873c:	2300      	movs	r3, #0
9002873e:	4604      	mov	r4, r0
90028740:	4608      	mov	r0, r1
90028742:	602b      	str	r3, [r5, #0]
90028744:	f7da ff02 	bl	9000354c <_isatty>
90028748:	1c43      	adds	r3, r0, #1
9002874a:	d102      	bne.n	90028752 <_isatty_r+0x1a>
9002874c:	682b      	ldr	r3, [r5, #0]
9002874e:	b103      	cbz	r3, 90028752 <_isatty_r+0x1a>
90028750:	6023      	str	r3, [r4, #0]
90028752:	bd38      	pop	{r3, r4, r5, pc}
90028754:	2403a19c 	.word	0x2403a19c

90028758 <_sbrk>:
90028758:	4a04      	ldr	r2, [pc, #16]	; (9002876c <_sbrk+0x14>)
9002875a:	6811      	ldr	r1, [r2, #0]
9002875c:	4603      	mov	r3, r0
9002875e:	b909      	cbnz	r1, 90028764 <_sbrk+0xc>
90028760:	4903      	ldr	r1, [pc, #12]	; (90028770 <_sbrk+0x18>)
90028762:	6011      	str	r1, [r2, #0]
90028764:	6810      	ldr	r0, [r2, #0]
90028766:	4403      	add	r3, r0
90028768:	6013      	str	r3, [r2, #0]
9002876a:	4770      	bx	lr
9002876c:	2403a33c 	.word	0x2403a33c
90028770:	2403a340 	.word	0x2403a340

90028774 <_init>:
90028774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028776:	bf00      	nop
90028778:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002877a:	bc08      	pop	{r3}
9002877c:	469e      	mov	lr, r3
9002877e:	4770      	bx	lr

90028780 <_fini>:
90028780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028782:	bf00      	nop
90028784:	bcf8      	pop	{r3, r4, r5, r6, r7}
90028786:	bc08      	pop	{r3}
90028788:	469e      	mov	lr, r3
9002878a:	4770      	bx	lr
