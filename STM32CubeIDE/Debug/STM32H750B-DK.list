
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002835c  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003794  900285fc  900285fc  000485fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002bd90  9002bd90  0004bd90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002be98  9002be98  00139c4c  2**0
                  CONTENTS
  6 .ARM          00000000  9002be98  9002be98  00139c4c  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002be98  9002be98  00139c4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  9002be98  9002be98  0004be98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   0000000c  9002beb4  9002beb4  0004beb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000160  24000000  9002bec0  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000160  9002c020  00050160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          000347e0  24005b60  90031a20  00055b60  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a340  90031a20  0005a340  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00139c4c  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 000021e8  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 0000008c  902021e8  902021e8  000621e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 000d79d8  90202274  90202274  00062274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00140000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00140000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00139c7a  2**0
                  CONTENTS, READONLY
 21 .debug_line   00078db7  00000000  00000000  00139d3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  001b2af3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   0010e9ae  00000000  00000000  001b2b4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 00019ff8  00000000  00000000  002c14fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 000034a8  00000000  00000000  002db4f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a11a6  00000000  00000000  002de9a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 000086c4  00000000  00000000  0047fb46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  00049107  00000000  00000000  0048820a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000a8d4  00000000  00000000  004d1314  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00038971  00000000  00000000  004dbbe8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b60 	.word	0x24005b60
900002bc:	00000000 	.word	0x00000000
900002c0:	900285e4 	.word	0x900285e4

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b64 	.word	0x24005b64
900002dc:	900285e4 	.word	0x900285e4

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f008 fa8d 	bl	900088c8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f027 fc27 	bl	90027c00 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb59 	bl	90002a68 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002bec0 	.word	0x9002bec0
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
900003c8:	24005b60 	.word	0x24005b60
  ldr  r3, = _ebss
900003cc:	2403a340 	.word	0x2403a340

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed7 	bl	90002190 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be57 	b.w	90002098 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bed2 	b.w	90002194 <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f027 f869 	bl	90027520 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f008 f918 	bl	900086e4 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f008 f991 	bl	90008800 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f027 f813 	bl	90027520 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f008 fee1 	bl	900092cc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f008 fed9 	bl	900092cc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f008 fed1 	bl	900092cc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f008 fec9 	bl	900092cc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b7c 	.word	0x24005b7c
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f008 beb3 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f008 beaa 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f008 bea1 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f008 be98 	b.w	900092d8 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b7c 	.word	0x24005b7c
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f008 be7f 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f008 be76 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f008 be6d 	b.w	900092d8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f008 be64 	b.w	900092d8 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b7c 	.word	0x24005b7c
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f008 be54 	b.w	900092e0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f008 be50 	b.w	900092e0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f008 be4c 	b.w	900092e0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f008 be48 	b.w	900092e0 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039703 	.word	0x24039703

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f026 ff58 	bl	9002757c <__assert_func>
900006cc:	240396f8 	.word	0x240396f8
900006d0:	240396fa 	.word	0x240396fa
900006d4:	240396fe 	.word	0x240396fe
900006d8:	24039700 	.word	0x24039700
900006dc:	9002867c 	.word	0x9002867c
900006e0:	900286e0 	.word	0x900286e0
900006e4:	90028724 	.word	0x90028724

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f011 fa6e 	bl	90011bcc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be40 	b.w	90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be44 	b.w	90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff29 	bl	90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdee 	b.w	9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bffc 	b.w	9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe6 	b.w	90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdf2 	b.w	90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f010 fda8 	bl	900112c4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f010 bc76 	b.w	90011070 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f026 fec9 	bl	90027520 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	240396fc 	.word	0x240396fc
900007e4:	240396fa 	.word	0x240396fa
900007e8:	240396f8 	.word	0x240396f8

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f026 fe9d 	bl	9002757c <__assert_func>
90000842:	bf00      	nop
90000844:	24039702 	.word	0x24039702
90000848:	90000675 	.word	0x90000675
9000084c:	24039703 	.word	0x24039703
90000850:	9002876c 	.word	0x9002876c
90000854:	900287a4 	.word	0x900287a4
90000858:	90028724 	.word	0x90028724

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f008 fd28 	bl	900092d8 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f008 fd23 	bl	900092d8 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f008 fd1e 	bl	900092d8 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f011 f98f 	bl	90011bcc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff4c 	bl	90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f026 fe22 	bl	9002757c <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039702 	.word	0x24039702
90000944:	d0000000 	.word	0xd0000000
90000948:	24039703 	.word	0x24039703
9000094c:	9002876c 	.word	0x9002876c
90000950:	900287a4 	.word	0x900287a4
90000954:	90028724 	.word	0x90028724

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f011 f94d 	bl	90011c00 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f011 f947 	bl	90011c00 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039704 	.word	0x24039704

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f026 fddc 	bl	9002757c <__assert_func>
900009c4:	900288d0 	.word	0x900288d0
900009c8:	900288cc 	.word	0x900288cc
900009cc:	9002892c 	.word	0x9002892c

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f026 fda3 	bl	90027520 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f009 fd5f 	bl	9000a538 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00d f993 	bl	9000de04 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f009 fe62 	bl	9000a7c8 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b98 	.word	0x24005b98
90000b14:	24005bc4 	.word	0x24005bc4
90000b18:	24005b90 	.word	0x24005b90
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b94 	.word	0x24005b94
90000b24:	24005bb4 	.word	0x24005bb4
90000b28:	24005bc0 	.word	0x24005bc0
90000b2c:	24005bbc 	.word	0x24005bbc
90000b30:	24005bc8 	.word	0x24005bc8
90000b34:	24005bcc 	.word	0x24005bcc
90000b38:	24005bb8 	.word	0x24005bb8
90000b3c:	240093c4 	.word	0x240093c4
90000b40:	24005bd4 	.word	0x24005bd4
90000b44:	24005bd0 	.word	0x24005bd0
90000b48:	24005bb0 	.word	0x24005bb0
90000b4c:	24005b8c 	.word	0x24005b8c

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f026 fcbe 	bl	9002757c <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	9002897c 	.word	0x9002897c
90000c08:	90028990 	.word	0x90028990
90000c0c:	9002892c 	.word	0x9002892c

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f009 fc19 	bl	9000a538 <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f009 fd27 	bl	9000a7c8 <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f026 fbef 	bl	9002757c <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bb4 	.word	0x24005bb4
90000db4:	24005bc4 	.word	0x24005bc4
90000db8:	24005b98 	.word	0x24005b98
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc0 	.word	0x24005bc0
90000dc4:	24005b94 	.word	0x24005b94
90000dc8:	24005bc8 	.word	0x24005bc8
90000dcc:	240093c4 	.word	0x240093c4
90000dd0:	24005bcc 	.word	0x24005bcc
90000dd4:	24005bbc 	.word	0x24005bbc
90000dd8:	24005bb8 	.word	0x24005bb8
90000ddc:	9002897c 	.word	0x9002897c
90000de0:	90028990 	.word	0x90028990
90000de4:	9002892c 	.word	0x9002892c
90000de8:	24005bd0 	.word	0x24005bd0
90000dec:	24005b90 	.word	0x24005b90
90000df0:	24005bb0 	.word	0x24005bb0
90000df4:	24005b8c 	.word	0x24005b8c

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f026 fb26 	bl	9002757c <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f026 fb1e 	bl	9002757c <__assert_func>
90000f40:	9002897c 	.word	0x9002897c
90000f44:	90028990 	.word	0x90028990
90000f48:	9002892c 	.word	0x9002892c
90000f4c:	900289d4 	.word	0x900289d4
90000f50:	90028a20 	.word	0x90028a20

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f026 fa6d 	bl	9002757c <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f026 fa64 	bl	9002757c <__assert_func>
900010b4:	900289d4 	.word	0x900289d4
900010b8:	90028a54 	.word	0x90028a54
900010bc:	9002892c 	.word	0x9002892c
900010c0:	9002897c 	.word	0x9002897c
900010c4:	90028990 	.word	0x90028990

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00c fe34 	bl	9000dd64 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	90028b78 	.word	0x90028b78
9000110c:	24005bd4 	.word	0x24005bd4

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f026 fc98 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f026 fc8d 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f026 fc80 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f026 fc65 	bl	90027a9c <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f026 fc56 	bl	90027a9c <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f026 fc25 	bl	90027a9c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f026 fbe6 	bl	90027a9c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f026 fb2b 	bl	90027a9c <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	90028ab0 	.word	0x90028ab0
90001460:	90028b68 	.word	0x90028b68
90001464:	90028b60 	.word	0x90028b60
90001468:	90028b58 	.word	0x90028b58
9000146c:	90028b40 	.word	0x90028b40
90001470:	90028b48 	.word	0x90028b48
90001474:	90028b50 	.word	0x90028b50
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f026 fb06 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f026 fafc 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f026 faf0 	bl	90027a9c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f026 fae3 	bl	90027a9c <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f026 f81b 	bl	9002757c <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f026 f811 	bl	9002757c <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f026 f80a 	bl	9002757c <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f026 f800 	bl	9002757c <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f025 fff6 	bl	9002757c <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	90028ab0 	.word	0x90028ab0
9000159c:	90028b68 	.word	0x90028b68
900015a0:	90028b60 	.word	0x90028b60
900015a4:	90028b58 	.word	0x90028b58
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	9002897c 	.word	0x9002897c
900015b0:	90028990 	.word	0x90028990
900015b4:	9002892c 	.word	0x9002892c
900015b8:	90028ab8 	.word	0x90028ab8
900015bc:	90028ad4 	.word	0x90028ad4
900015c0:	90028b34 	.word	0x90028b34
900015c4:	90028b1c 	.word	0x90028b1c
900015c8:	90028b04 	.word	0x90028b04

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bac 	.word	0x24005bac

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f008 bfc6 	b.w	9000a62c <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc0 	.word	0x24005bc0
900016a4:	24005bcc 	.word	0x24005bcc
900016a8:	24005bc8 	.word	0x24005bc8

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f008 ff95 	bl	9000a634 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f008 ff4e 	bl	9000a5bc <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00c bb9b 	b.w	9000de6c <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd0 	.word	0x24005bd0
9000173c:	24000008 	.word	0x24000008
90001740:	24005b94 	.word	0x24005b94
90001744:	24005b98 	.word	0x24005b98
90001748:	24005bb0 	.word	0x24005bb0
9000174c:	24005bc4 	.word	0x24005bc4
90001750:	24005bd4 	.word	0x24005bd4

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bbc 	.word	0x24005bbc

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005b98 	.word	0x24005b98
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bac 	.word	0x24005bac
900017e0:	24005bb4 	.word	0x24005bb4
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00c bb26 	b.w	9000de6c <osSemaphoreRelease>
90001820:	24005b90 	.word	0x24005b90
90001824:	24005bac 	.word	0x24005bac
90001828:	24005b98 	.word	0x24005b98
9000182c:	24005b8c 	.word	0x24005b8c
90001830:	24005bd4 	.word	0x24005bd4

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00c fa92 	bl	9000dd64 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00c fb3a 	bl	9000dec4 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f025 fe8c 	bl	9002757c <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f025 fe86 	bl	9002757c <__assert_func>
90001870:	24005bdc 	.word	0x24005bdc
90001874:	24005bd8 	.word	0x24005bd8
90001878:	90028bb4 	.word	0x90028bb4
9000187c:	90028c00 	.word	0x90028c00
90001880:	90028c30 	.word	0x90028c30
90001884:	90028c74 	.word	0x90028c74

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00c bab8 	b.w	9000de04 <osSemaphoreAcquire>
90001894:	24005bdc 	.word	0x24005bdc

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00c bae6 	b.w	9000de6c <osSemaphoreRelease>
900018a0:	24005bdc 	.word	0x24005bdc

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00c baab 	b.w	9000de04 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005bdc 	.word	0x24005bdc

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00c bad8 	b.w	9000de6c <osSemaphoreRelease>
900018bc:	24005bdc 	.word	0x24005bdc

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00c bb39 	b.w	9000df40 <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005bd8 	.word	0x24005bd8
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00c fb6d 	bl	9000dfc4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00c fb66 	bl	9000dfc4 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005bd8 	.word	0x24005bd8

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	90028e14 	.word	0x90028e14
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	2400935c 	.word	0x2400935c
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f025 fdbd 	bl	90027520 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	90028e14 	.word	0x90028e14
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00c f98a 	bl	9000dcd8 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00c b99a 	b.w	9000dd20 <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00c b98b 	b.w	9000dd20 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b90 	.word	0x24005b90
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b90 	.word	0x24005b90
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b8c 	.word	0x24005b8c

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f025 fd15 	bl	9002757c <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	90028cb8 	.word	0x90028cb8
90001b68:	90028cd4 	.word	0x90028cd4
90001b6c:	90028d20 	.word	0x90028d20

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f025 fc38 	bl	9002757c <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f025 fc32 	bl	9002757c <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f025 fc2b 	bl	9002757c <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	90028cb8 	.word	0x90028cb8
90001d44:	90028d64 	.word	0x90028d64
90001d48:	90028d20 	.word	0x90028d20
90001d4c:	90028cd4 	.word	0x90028cd4
90001d50:	90028db0 	.word	0x90028db0
90001d54:	90028dcc 	.word	0x90028dcc

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039704 	.word	0x24039704
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b90 	.word	0x24005b90
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b8c 	.word	0x24005b8c

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f010 f833 	bl	90011e88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00b ff0d 	bl	9000dc58 <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	90028e14 	.word	0x90028e14

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2038      	movs	r0, #56	; 0x38
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ec4:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ec8:	3008      	adds	r0, #8
90001eca:	4770      	bx	lr

90001ecc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ecc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ed0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ed4:	3008      	adds	r0, #8
90001ed6:	4770      	bx	lr

90001ed8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed8:	2001      	movs	r0, #1
90001eda:	4770      	bx	lr

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001edc:	f242 6028 	movw	r0, #9768	; 0x2628
90001ee0:	4770      	bx	lr
90001ee2:	bf00      	nop

90001ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee4:	f242 6328 	movw	r3, #9768	; 0x2628
90001ee8:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001eec:	3008      	adds	r0, #8
90001eee:	4770      	bx	lr

90001ef0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ef0:	f242 6328 	movw	r3, #9768	; 0x2628
90001ef4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef8:	3008      	adds	r0, #8
90001efa:	4770      	bx	lr

90001efc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001efc:	2001      	movs	r0, #1
90001efe:	4770      	bx	lr

90001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001f00:	2010      	movs	r0, #16
90001f02:	4770      	bx	lr

90001f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f0c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f10:	3008      	adds	r0, #8
90001f12:	4770      	bx	lr

90001f14 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f14:	4608      	mov	r0, r1
90001f16:	f001 bf6f 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f1a:	bf00      	nop

90001f1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f1c:	4b03      	ldr	r3, [pc, #12]	; (90001f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f1e:	b510      	push	{r4, lr}
90001f20:	4604      	mov	r4, r0
90001f22:	6003      	str	r3, [r0, #0]
90001f24:	f00e fdfd 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f28:	4620      	mov	r0, r4
90001f2a:	bd10      	pop	{r4, pc}
90001f2c:	90028ecc 	.word	0x90028ecc

90001f30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f30:	4b05      	ldr	r3, [pc, #20]	; (90001f48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f32:	b510      	push	{r4, lr}
90001f34:	4604      	mov	r4, r0
90001f36:	6003      	str	r3, [r0, #0]
90001f38:	f00e fdf3 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f3c:	2140      	movs	r1, #64	; 0x40
90001f3e:	4620      	mov	r0, r4
90001f40:	f025 faee 	bl	90027520 <_ZdlPvj>
90001f44:	4620      	mov	r0, r4
90001f46:	bd10      	pop	{r4, pc}
90001f48:	90028ecc 	.word	0x90028ecc

90001f4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f4c:	4b03      	ldr	r3, [pc, #12]	; (90001f5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f4e:	b510      	push	{r4, lr}
90001f50:	4604      	mov	r4, r0
90001f52:	6003      	str	r3, [r0, #0]
90001f54:	f00e fde5 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f58:	4620      	mov	r0, r4
90001f5a:	bd10      	pop	{r4, pc}
90001f5c:	90028e98 	.word	0x90028e98

90001f60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f60:	4b06      	ldr	r3, [pc, #24]	; (90001f7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f62:	b510      	push	{r4, lr}
90001f64:	4604      	mov	r4, r0
90001f66:	6003      	str	r3, [r0, #0]
90001f68:	f00e fddb 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f6c:	f242 6130 	movw	r1, #9776	; 0x2630
90001f70:	4620      	mov	r0, r4
90001f72:	f025 fad5 	bl	90027520 <_ZdlPvj>
90001f76:	4620      	mov	r0, r4
90001f78:	bd10      	pop	{r4, pc}
90001f7a:	bf00      	nop
90001f7c:	90028e98 	.word	0x90028e98

90001f80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f80:	4b03      	ldr	r3, [pc, #12]	; (90001f90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f82:	b510      	push	{r4, lr}
90001f84:	4604      	mov	r4, r0
90001f86:	6003      	str	r3, [r0, #0]
90001f88:	f00e fdcb 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f8c:	4620      	mov	r0, r4
90001f8e:	bd10      	pop	{r4, pc}
90001f90:	90028e64 	.word	0x90028e64

90001f94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f94:	4b05      	ldr	r3, [pc, #20]	; (90001fac <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f96:	b510      	push	{r4, lr}
90001f98:	4604      	mov	r4, r0
90001f9a:	6003      	str	r3, [r0, #0]
90001f9c:	f00e fdc1 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fa0:	2118      	movs	r1, #24
90001fa2:	4620      	mov	r0, r4
90001fa4:	f025 fabc 	bl	90027520 <_ZdlPvj>
90001fa8:	4620      	mov	r0, r4
90001faa:	bd10      	pop	{r4, pc}
90001fac:	90028e64 	.word	0x90028e64

90001fb0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fb0:	b510      	push	{r4, lr}
90001fb2:	4604      	mov	r4, r0
90001fb4:	490c      	ldr	r1, [pc, #48]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x38>)
90001fb6:	4a0d      	ldr	r2, [pc, #52]	; (90001fec <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb8:	f242 605c 	movw	r0, #9820	; 0x265c
90001fbc:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fc0:	6021      	str	r1, [r4, #0]
90001fc2:	4420      	add	r0, r4
90001fc4:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
90001fc8:	f00e fdab 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fcc:	4620      	mov	r0, r4
90001fce:	4b08      	ldr	r3, [pc, #32]	; (90001ff0 <_ZN12FrontendHeapD1Ev+0x40>)
90001fd0:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fd4:	f00e fda5 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd8:	4620      	mov	r0, r4
90001fda:	4b06      	ldr	r3, [pc, #24]	; (90001ff4 <_ZN12FrontendHeapD1Ev+0x44>)
90001fdc:	f840 3f14 	str.w	r3, [r0, #20]!
90001fe0:	f00e fd9f 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fe4:	4620      	mov	r0, r4
90001fe6:	bd10      	pop	{r4, pc}
90001fe8:	90028f00 	.word	0x90028f00
90001fec:	90028ecc 	.word	0x90028ecc
90001ff0:	90028e98 	.word	0x90028e98
90001ff4:	90028e64 	.word	0x90028e64

90001ff8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff8:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ffa:	4c0c      	ldr	r4, [pc, #48]	; (9000202c <__tcf_0+0x34>)
90001ffc:	4a0c      	ldr	r2, [pc, #48]	; (90002030 <__tcf_0+0x38>)
90001ffe:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002002:	490c      	ldr	r1, [pc, #48]	; (90002034 <__tcf_0+0x3c>)
90002004:	480c      	ldr	r0, [pc, #48]	; (90002038 <__tcf_0+0x40>)
90002006:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
9000200a:	6021      	str	r1, [r4, #0]
9000200c:	f00e fd89 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002010:	4620      	mov	r0, r4
90002012:	4b0a      	ldr	r3, [pc, #40]	; (9000203c <__tcf_0+0x44>)
90002014:	f840 3f2c 	str.w	r3, [r0, #44]!
90002018:	f00e fd83 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000201c:	4620      	mov	r0, r4
9000201e:	4b08      	ldr	r3, [pc, #32]	; (90002040 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002024:	f840 3f14 	str.w	r3, [r0, #20]!
90002028:	f00e bd7b 	b.w	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000202c:	24005be4 	.word	0x24005be4
90002030:	90028ecc 	.word	0x90028ecc
90002034:	90028f00 	.word	0x90028f00
90002038:	24008240 	.word	0x24008240
9000203c:	90028e98 	.word	0x90028e98
90002040:	90028e64 	.word	0x90028e64

90002044 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002044:	b510      	push	{r4, lr}
90002046:	4604      	mov	r4, r0
90002048:	4a0f      	ldr	r2, [pc, #60]	; (90002088 <_ZN12FrontendHeapD0Ev+0x44>)
9000204a:	4910      	ldr	r1, [pc, #64]	; (9000208c <_ZN12FrontendHeapD0Ev+0x48>)
9000204c:	f242 605c 	movw	r0, #9820	; 0x265c
90002050:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002054:	6021      	str	r1, [r4, #0]
90002056:	4420      	add	r0, r4
90002058:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
9000205c:	f00e fd61 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002060:	4620      	mov	r0, r4
90002062:	4b0b      	ldr	r3, [pc, #44]	; (90002090 <_ZN12FrontendHeapD0Ev+0x4c>)
90002064:	f840 3f2c 	str.w	r3, [r0, #44]!
90002068:	f00e fd5b 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000206c:	4b09      	ldr	r3, [pc, #36]	; (90002094 <_ZN12FrontendHeapD0Ev+0x50>)
9000206e:	4620      	mov	r0, r4
90002070:	f840 3f14 	str.w	r3, [r0, #20]!
90002074:	f00e fd55 	bl	90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002078:	4620      	mov	r0, r4
9000207a:	f242 71fc 	movw	r1, #10236	; 0x27fc
9000207e:	f025 fa4f 	bl	90027520 <_ZdlPvj>
90002082:	4620      	mov	r0, r4
90002084:	bd10      	pop	{r4, pc}
90002086:	bf00      	nop
90002088:	90028ecc 	.word	0x90028ecc
9000208c:	90028f00 	.word	0x90028f00
90002090:	90028e98 	.word	0x90028e98
90002094:	90028e64 	.word	0x90028e64

90002098 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000209c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
9000209e:	2400      	movs	r4, #0
900020a0:	f001 fa76 	bl	90003590 <_ZN14BitmapDatabase11getInstanceEv>
900020a4:	4605      	mov	r5, r0
900020a6:	f001 fa77 	bl	90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020aa:	4623      	mov	r3, r4
900020ac:	4601      	mov	r1, r0
900020ae:	4622      	mov	r2, r4
900020b0:	4628      	mov	r0, r5
900020b2:	9400      	str	r4, [sp, #0]
900020b4:	f017 fa8c 	bl	900195d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b8:	4b29      	ldr	r3, [pc, #164]	; (90002160 <touchgfx_init+0xc8>)
900020ba:	4a2a      	ldr	r2, [pc, #168]	; (90002164 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020bc:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020be:	4c2a      	ldr	r4, [pc, #168]	; (90002168 <touchgfx_init+0xd0>)
900020c0:	601a      	str	r2, [r3, #0]
900020c2:	f002 f875 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020c6:	4829      	ldr	r0, [pc, #164]	; (9000216c <touchgfx_init+0xd4>)
900020c8:	f017 f9ea 	bl	900194a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020cc:	6823      	ldr	r3, [r4, #0]
900020ce:	f3bf 8f5b 	dmb	ish
900020d2:	07db      	lsls	r3, r3, #31
900020d4:	d505      	bpl.n	900020e2 <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020d6:	4826      	ldr	r0, [pc, #152]	; (90002170 <touchgfx_init+0xd8>)
}
900020d8:	b002      	add	sp, #8
900020da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020de:	f7fe bbf7 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020e2:	4620      	mov	r0, r4
900020e4:	f025 fa1e 	bl	90027524 <__cxa_guard_acquire>
900020e8:	2800      	cmp	r0, #0
900020ea:	d0f4      	beq.n	900020d6 <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020ec:	4d21      	ldr	r5, [pc, #132]	; (90002174 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020ee:	4f22      	ldr	r7, [pc, #136]	; (90002178 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020f0:	4b22      	ldr	r3, [pc, #136]	; (9000217c <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020f2:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020f6:	f107 0644 	add.w	r6, r7, #68	; 0x44
          screenStorage(scr),
900020fa:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020fe:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002100:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002102:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002104:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002106:	f8c5 8008 	str.w	r8, [r5, #8]
9000210a:	f00e fd0b 	bl	90010b24 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000210e:	4b1c      	ldr	r3, [pc, #112]	; (90002180 <touchgfx_init+0xe8>)
90002110:	4640      	mov	r0, r8
90002112:	616b      	str	r3, [r5, #20]
90002114:	f00e fd06 	bl	90010b24 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002118:	4b1a      	ldr	r3, [pc, #104]	; (90002184 <touchgfx_init+0xec>)
9000211a:	4638      	mov	r0, r7
9000211c:	62eb      	str	r3, [r5, #44]	; 0x2c
9000211e:	f00e fd01 	bl	90010b24 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002122:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
90002126:	4a18      	ldr	r2, [pc, #96]	; (90002188 <touchgfx_init+0xf0>)
90002128:	f203 609c 	addw	r0, r3, #1692	; 0x69c
9000212c:	f8c3 265c 	str.w	r2, [r3, #1628]	; 0x65c
90002130:	f004 f988 	bl	90006444 <_ZN5ModelC1Ev>
90002134:	462a      	mov	r2, r5
90002136:	f107 0140 	add.w	r1, r7, #64	; 0x40
9000213a:	4630      	mov	r0, r6
9000213c:	f004 f978 	bl	90006430 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002140:	4630      	mov	r0, r6
90002142:	f001 fe59 	bl	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
90002146:	4811      	ldr	r0, [pc, #68]	; (9000218c <touchgfx_init+0xf4>)
90002148:	f025 fa36 	bl	900275b8 <atexit>
9000214c:	4620      	mov	r0, r4
9000214e:	f025 f9f5 	bl	9002753c <__cxa_guard_release>
90002152:	4807      	ldr	r0, [pc, #28]	; (90002170 <touchgfx_init+0xd8>)
}
90002154:	b002      	add	sp, #8
90002156:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
9000215a:	f7fe bbb9 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000215e:	bf00      	nop
90002160:	24039768 	.word	0x24039768
90002164:	24009214 	.word	0x24009214
90002168:	24005be0 	.word	0x24005be0
9000216c:	2400002c 	.word	0x2400002c
90002170:	2400918c 	.word	0x2400918c
90002174:	24005be4 	.word	0x24005be4
90002178:	24008240 	.word	0x24008240
9000217c:	90028f00 	.word	0x90028f00
90002180:	90028e64 	.word	0x90028e64
90002184:	90028e98 	.word	0x90028e98
90002188:	90028ecc 	.word	0x90028ecc
9000218c:	90001ff9 	.word	0x90001ff9

90002190 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002190:	4770      	bx	lr
90002192:	bf00      	nop

90002194 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002194:	4801      	ldr	r0, [pc, #4]	; (9000219c <touchgfx_taskEntry+0x8>)
90002196:	f7fe bb61 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
9000219a:	bf00      	nop
9000219c:	2400918c 	.word	0x2400918c

900021a0 <_GLOBAL__sub_I_touchgfx_init>:
}
900021a0:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
900021a2:	4b25      	ldr	r3, [pc, #148]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0x98>)
900021a4:	4c25      	ldr	r4, [pc, #148]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
900021a6:	4e26      	ldr	r6, [pc, #152]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a8:	4d26      	ldr	r5, [pc, #152]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021aa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021ac:	4630      	mov	r0, r6
900021ae:	f7ff fe29 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021b2:	4628      	mov	r0, r5
900021b4:	f01b fce4 	bl	9001db80 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b8:	4b23      	ldr	r3, [pc, #140]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021ba:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021bc:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021c0:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021c4:	62da      	str	r2, [r3, #44]	; 0x2c
900021c6:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c8:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021ca:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021ce:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021d0:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021d2:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021d6:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021dc:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021e0:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021e4:	8020      	strh	r0, [r4, #0]
900021e6:	4c1c      	ldr	r4, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e8:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021ec:	481c      	ldr	r0, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021ee:	8021      	strh	r1, [r4, #0]
900021f0:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021f2:	4c1c      	ldr	r4, [pc, #112]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021f4:	491c      	ldr	r1, [pc, #112]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021f6:	481d      	ldr	r0, [pc, #116]	; (9000226c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f8:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002200:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002204:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
90002206:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
9000220a:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
9000220e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
90002212:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
90002216:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
9000221a:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
9000221e:	7022      	strb	r2, [r4, #0]
90002220:	6019      	str	r1, [r3, #0]
90002222:	4913      	ldr	r1, [pc, #76]	; (90002270 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
90002224:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002228:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
9000222c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002230:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002232:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
90002236:	bd70      	pop	{r4, r5, r6, pc}
90002238:	9002866c 	.word	0x9002866c
9000223c:	240083e0 	.word	0x240083e0
90002240:	240083e4 	.word	0x240083e4
90002244:	24009218 	.word	0x24009218
90002248:	2400918c 	.word	0x2400918c
9000224c:	01000001 	.word	0x01000001
90002250:	24039704 	.word	0x24039704
90002254:	240396f8 	.word	0x240396f8
90002258:	240396fe 	.word	0x240396fe
9000225c:	240396fa 	.word	0x240396fa
90002260:	24039700 	.word	0x24039700
90002264:	240396fc 	.word	0x240396fc
90002268:	900287fc 	.word	0x900287fc
9000226c:	01010000 	.word	0x01010000
90002270:	90028644 	.word	0x90028644

90002274 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002274:	4801      	ldr	r0, [pc, #4]	; (9000227c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002276:	f7ff bb49 	b.w	9000190c <_ZN8STM32DMAD1Ev>
9000227a:	bf00      	nop
9000227c:	240083e4 	.word	0x240083e4

90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002280:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002284:	b112      	cbz	r2, 9000228c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002286:	6803      	ldr	r3, [r0, #0]
90002288:	695b      	ldr	r3, [r3, #20]
9000228a:	4718      	bx	r3
        }
    }
9000228c:	4770      	bx	lr
9000228e:	bf00      	nop

90002290 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002290:	2000      	movs	r0, #0
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002294:	8081      	strh	r1, [r0, #4]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002298:	80c1      	strh	r1, [r0, #6]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
9000229c:	8101      	strh	r1, [r0, #8]
    }
9000229e:	4770      	bx	lr

900022a0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
900022a0:	8141      	strh	r1, [r0, #10]
    }
900022a2:	4770      	bx	lr

900022a4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022b0:	4770      	bx	lr
900022b2:	bf00      	nop

900022b4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022b4:	4770      	bx	lr
900022b6:	bf00      	nop

900022b8 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b8:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022bc:	6803      	ldr	r3, [r0, #0]
900022be:	eba2 020c 	sub.w	r2, r2, ip
900022c2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c8:	eba1 010c 	sub.w	r1, r1, ip
900022cc:	b212      	sxth	r2, r2
900022ce:	b209      	sxth	r1, r1
900022d0:	4718      	bx	r3
900022d2:	bf00      	nop

900022d4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022d4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022da:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022de:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022e2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022e6:	6010      	str	r0, [r2, #0]
    }
900022e8:	4770      	bx	lr
900022ea:	bf00      	nop

900022ec <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022ec:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022f0:	b11a      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022f2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022f6:	b102      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f8:	6018      	str	r0, [r3, #0]
        }
    }
900022fa:	4770      	bx	lr

900022fc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022fc:	2000      	movs	r0, #0
900022fe:	4770      	bx	lr

90002300 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002300:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002302:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002304:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002306:	809a      	strh	r2, [r3, #4]
    }
90002308:	4770      	bx	lr
9000230a:	bf00      	nop

9000230c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002310:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002318:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
9000231c:	4770      	bx	lr
9000231e:	bf00      	nop

90002320 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002320:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002324:	688a      	ldr	r2, [r1, #8]
90002326:	f8c0 c000 	str.w	ip, [r0]
9000232a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
9000232c:	4770      	bx	lr
9000232e:	bf00      	nop

90002330 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002330:	2200      	movs	r2, #0
90002332:	6002      	str	r2, [r0, #0]
90002334:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002336:	4770      	bx	lr

90002338 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002338:	2000      	movs	r0, #0
9000233a:	4770      	bx	lr

9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000233c:	4b03      	ldr	r3, [pc, #12]	; (9000234c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
9000233e:	2290      	movs	r2, #144	; 0x90
90002340:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
90002344:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002348:	4770      	bx	lr
9000234a:	bf00      	nop
9000234c:	e000e100 	.word	0xe000e100

90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	4a09      	ldr	r2, [pc, #36]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002352:	490a      	ldr	r1, [pc, #40]	; (9000237c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002354:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002356:	480a      	ldr	r0, [pc, #40]	; (90002380 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002358:	f3c3 030a 	ubfx	r3, r3, #0, #11
9000235c:	3b01      	subs	r3, #1
9000235e:	b29b      	uxth	r3, r3
90002360:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002362:	6911      	ldr	r1, [r2, #16]
90002364:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002368:	3901      	subs	r1, #1
9000236a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
9000236c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
9000236e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002370:	f043 0301 	orr.w	r3, r3, #1
90002374:	6353      	str	r3, [r2, #52]	; 0x34
}
90002376:	4770      	bx	lr
90002378:	50001000 	.word	0x50001000
9000237c:	2400929e 	.word	0x2400929e
90002380:	2400929c 	.word	0x2400929c

90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002384:	4b01      	ldr	r3, [pc, #4]	; (9000238c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002386:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
9000238a:	4770      	bx	lr
9000238c:	50001000 	.word	0x50001000

90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002390:	4b02      	ldr	r3, [pc, #8]	; (9000239c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002392:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002394:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002398:	625a      	str	r2, [r3, #36]	; 0x24
}
9000239a:	4770      	bx	lr
9000239c:	50001000 	.word	0x50001000

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
900023a0:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
900023a4:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
900023a6:	4770      	bx	lr

900023a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a8:	4770      	bx	lr
900023aa:	bf00      	nop

900023ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023ac:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023b0:	4611      	mov	r1, r2
900023b2:	6840      	ldr	r0, [r0, #4]
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	68db      	ldr	r3, [r3, #12]
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023bc:	b510      	push	{r4, lr}
900023be:	4604      	mov	r4, r0
900023c0:	2148      	movs	r1, #72	; 0x48
900023c2:	f025 f8ad 	bl	90027520 <_ZdlPvj>
900023c6:	4620      	mov	r0, r4
900023c8:	bd10      	pop	{r4, pc}
900023ca:	bf00      	nop

900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023cc:	b911      	cbnz	r1, 900023d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023ce:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023d2:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023d4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023d6:	4a03      	ldr	r2, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d8:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023dc:	4b02      	ldr	r3, [pc, #8]	; (900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023de:	4803      	ldr	r0, [pc, #12]	; (900023ec <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023e0:	f025 f8cc 	bl	9002757c <__assert_func>
900023e4:	90028f20 	.word	0x90028f20
900023e8:	90028f0c 	.word	0x90028f0c
900023ec:	900290ac 	.word	0x900290ac

900023f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023f0:	b921      	cbnz	r1, 900023fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023f2:	6840      	ldr	r0, [r0, #4]
900023f4:	4611      	mov	r1, r2
900023f6:	6803      	ldr	r3, [r0, #0]
900023f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023fa:	4718      	bx	r3
        assert(handle < no_streams);
900023fc:	4b03      	ldr	r3, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023fe:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002402:	4a03      	ldr	r2, [pc, #12]	; (90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002404:	4803      	ldr	r0, [pc, #12]	; (90002414 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002406:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002408:	f025 f8b8 	bl	9002757c <__assert_func>
9000240c:	90028f0c 	.word	0x90028f0c
90002410:	900290f0 	.word	0x900290f0
90002414:	900290ac 	.word	0x900290ac

90002418 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002418:	b909      	cbnz	r1, 9000241e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000241a:	68c0      	ldr	r0, [r0, #12]
9000241c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000241e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002420:	4a02      	ldr	r2, [pc, #8]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002422:	2179      	movs	r1, #121	; 0x79
90002424:	4b02      	ldr	r3, [pc, #8]	; (90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002426:	4803      	ldr	r0, [pc, #12]	; (90002434 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002428:	f025 f8a8 	bl	9002757c <__assert_func>
9000242c:	900292a0 	.word	0x900292a0
90002430:	90028f0c 	.word	0x90028f0c
90002434:	900290ac 	.word	0x900290ac

90002438 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002438:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000243a:	460c      	mov	r4, r1
9000243c:	b949      	cbnz	r1, 90002452 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
9000243e:	4611      	mov	r1, r2
90002440:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
90002442:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
90002444:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
90002446:	681c      	ldr	r4, [r3, #0]
90002448:	4618      	mov	r0, r3
9000244a:	68a3      	ldr	r3, [r4, #8]
    }
9000244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002450:	4718      	bx	r3
        assert(handle < no_streams);
90002452:	4b03      	ldr	r3, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
90002454:	2190      	movs	r1, #144	; 0x90
90002456:	4a03      	ldr	r2, [pc, #12]	; (90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002458:	4803      	ldr	r0, [pc, #12]	; (90002468 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
9000245a:	f025 f88f 	bl	9002757c <__assert_func>
9000245e:	bf00      	nop
90002460:	90028f0c 	.word	0x90028f0c
90002464:	90029454 	.word	0x90029454
90002468:	900290ac 	.word	0x900290ac

9000246c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000246c:	b921      	cbnz	r1, 90002478 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
9000246e:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002472:	e9c0 3206 	strd	r3, r2, [r0, #24]
90002476:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002478:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000247a:	4a03      	ldr	r2, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000247c:	2182      	movs	r1, #130	; 0x82
9000247e:	4b03      	ldr	r3, [pc, #12]	; (9000248c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002480:	4803      	ldr	r0, [pc, #12]	; (90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002482:	f025 f87b 	bl	9002757c <__assert_func>
90002486:	bf00      	nop
90002488:	90029630 	.word	0x90029630
9000248c:	90028f0c 	.word	0x90028f0c
90002490:	900290ac 	.word	0x900290ac

90002494 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002494:	f00e be28 	b.w	900110e8 <_ZN8touchgfx3HAL10beginFrameEv>

90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002498:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000249c:	b903      	cbnz	r3, 900024a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000249e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900024a0:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
900024a2:	f04f 31ff 	mov.w	r1, #4294967295
900024a6:	4604      	mov	r4, r0
900024a8:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024aa:	f00b fc15 	bl	9000dcd8 <osMutexAcquire>
            firstDrawThisFrame = false;
900024ae:	f44f 7380 	mov.w	r3, #256	; 0x100
900024b2:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024b6:	bd10      	pop	{r4, pc}

900024b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b8:	b538      	push	{r3, r4, r5, lr}
900024ba:	460c      	mov	r4, r1
900024bc:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024be:	f04f 31ff 	mov.w	r1, #4294967295
900024c2:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024c4:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c8:	f00b fc06 	bl	9000dcd8 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024cc:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024ce:	f00b fc27 	bl	9000dd20 <osMutexRelease>
        streams[handle].isActive = false;
900024d2:	2300      	movs	r3, #0
900024d4:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024dc:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024e0:	b90b      	cbnz	r3, 900024e6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024e4:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024e6:	bd38      	pop	{r3, r4, r5, pc}

900024e8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e8:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024ea:	4c1c      	ldr	r4, [pc, #112]	; (9000255c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024ec:	4605      	mov	r5, r0
    HAL::endFrame();
900024ee:	f00e fe07 	bl	90011100 <_ZN8touchgfx3HAL8endFrameEv>
900024f2:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024f6:	b98b      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f8:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024fc:	b973      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024fe:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002500:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002502:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002506:	f00b fcb1 	bl	9000de6c <osSemaphoreRelease>
        if (uiHasMutex)
9000250a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000250e:	b9f3      	cbnz	r3, 9000254e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002510:	6868      	ldr	r0, [r5, #4]
90002512:	6803      	ldr	r3, [r0, #0]
}
90002514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002518:	691b      	ldr	r3, [r3, #16]
9000251a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000251c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002520:	69e1      	ldr	r1, [r4, #28]
90002522:	6922      	ldr	r2, [r4, #16]
90002524:	fb00 f303 	mul.w	r3, r0, r3
90002528:	fb01 f202 	mul.w	r2, r1, r2
9000252c:	4293      	cmp	r3, r2
9000252e:	d3e6      	bcc.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002530:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
90002534:	b138      	cbz	r0, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90002536:	1a9b      	subs	r3, r3, r2
90002538:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000253c:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
9000253e:	bf98      	it	ls
90002540:	f102 32ff 	addls.w	r2, r2, #4294967295
90002544:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
90002546:	2301      	movs	r3, #1
90002548:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
9000254c:	e7d7      	b.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
9000254e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002550:	f00b fbe6 	bl	9000dd20 <osMutexRelease>
            uiHasMutex = false;
90002554:	2300      	movs	r3, #0
90002556:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000255a:	e7d9      	b.n	90002510 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
9000255c:	240092e8 	.word	0x240092e8

90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002560:	f00e bd8c 	b.w	9001107c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002564 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002564:	f00e beed 	b.w	90011342 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002568 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002568:	4814      	ldr	r0, [pc, #80]	; (900025bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000256a:	6943      	ldr	r3, [r0, #20]
9000256c:	03d9      	lsls	r1, r3, #15
9000256e:	d523      	bpl.n	900025b8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002570:	2300      	movs	r3, #0
{
90002572:	b510      	push	{r4, lr}
90002574:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002578:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000257c:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002580:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002584:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002588:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000258c:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002590:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002594:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002596:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000259a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000259c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
900025a0:	1c5a      	adds	r2, r3, #1
900025a2:	d1f8      	bne.n	90002596 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900025a4:	f1ac 0c20 	sub.w	ip, ip, #32
900025a8:	f11c 0f20 	cmn.w	ip, #32
900025ac:	d1f0      	bne.n	90002590 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025b2:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025b6:	bd10      	pop	{r4, pc}
900025b8:	4770      	bx	lr
900025ba:	bf00      	nop
900025bc:	e000ed00 	.word	0xe000ed00

900025c0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025c0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025c2:	2900      	cmp	r1, #0
900025c4:	d133      	bne.n	9000262e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025c6:	4604      	mov	r4, r0
        switch (cmd)
900025c8:	2a05      	cmp	r2, #5
900025ca:	d809      	bhi.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025cc:	e8df f002 	tbb	[pc, r2]
900025d0:	27221e0f 	.word	0x27221e0f
900025d4:	0903      	.short	0x0903
            stream.isPlaying = false;
900025d6:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d8:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025da:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025de:	6203      	str	r3, [r0, #32]
    }
900025e0:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025e2:	3b00      	subs	r3, #0
900025e4:	bf18      	it	ne
900025e6:	2301      	movne	r3, #1
900025e8:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025ec:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025ee:	6840      	ldr	r0, [r0, #4]
900025f0:	6803      	ldr	r3, [r0, #0]
900025f2:	691b      	ldr	r3, [r3, #16]
900025f4:	4798      	blx	r3
900025f6:	2800      	cmp	r0, #0
900025f8:	d0f2      	beq.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025fa:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025fc:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025fe:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002602:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002606:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000260c:	2300      	movs	r3, #0
9000260e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002612:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002614:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002616:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002618:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000261c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000261e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002620:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002622:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002624:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002628:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000262c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000262e:	4b03      	ldr	r3, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002630:	21a2      	movs	r1, #162	; 0xa2
90002632:	4a03      	ldr	r2, [pc, #12]	; (90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
90002634:	4803      	ldr	r0, [pc, #12]	; (90002644 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
90002636:	f024 ffa1 	bl	9002757c <__assert_func>
9000263a:	bf00      	nop
9000263c:	90028f0c 	.word	0x90028f0c
90002640:	900297ec 	.word	0x900297ec
90002644:	900290ac 	.word	0x900290ac

90002648 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002648:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000264a:	bb39      	cbnz	r1, 9000269c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
9000264c:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002650:	4604      	mov	r4, r0
90002652:	b923      	cbnz	r3, 9000265e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
90002654:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002658:	b963      	cbnz	r3, 90002674 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
9000265a:	2001      	movs	r0, #1
    }
9000265c:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
9000265e:	4912      	ldr	r1, [pc, #72]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002660:	6943      	ldr	r3, [r0, #20]
90002662:	6809      	ldr	r1, [r1, #0]
90002664:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002668:	440b      	add	r3, r1
9000266a:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
9000266c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002670:	2b00      	cmp	r3, #0
90002672:	d0f2      	beq.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90002674:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90002676:	4610      	mov	r0, r2
90002678:	6813      	ldr	r3, [r2, #0]
9000267a:	695b      	ldr	r3, [r3, #20]
9000267c:	6311      	str	r1, [r2, #48]	; 0x30
9000267e:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002680:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
90002686:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
9000268a:	2800      	cmp	r0, #0
9000268c:	d1e5      	bne.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
9000268e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002692:	2b00      	cmp	r3, #0
90002694:	d1e2      	bne.n	9000265c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002696:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000269a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000269c:	4b03      	ldr	r3, [pc, #12]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000269e:	21d0      	movs	r1, #208	; 0xd0
900026a0:	4a03      	ldr	r2, [pc, #12]	; (900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
900026a2:	4804      	ldr	r0, [pc, #16]	; (900026b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
900026a4:	f024 ff6a 	bl	9002757c <__assert_func>
900026a8:	24039704 	.word	0x24039704
900026ac:	90028f0c 	.word	0x90028f0c
900026b0:	900299c0 	.word	0x900299c0
900026b4:	900290ac 	.word	0x900290ac

900026b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026bc:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026be:	b9fb      	cbnz	r3, 90002700 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026c0:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026c4:	60c3      	str	r3, [r0, #12]
900026c6:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ca:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026ce:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026d2:	6103      	str	r3, [r0, #16]
900026d4:	6143      	str	r3, [r0, #20]
900026d6:	6183      	str	r3, [r0, #24]
900026d8:	61c3      	str	r3, [r0, #28]
900026da:	6203      	str	r3, [r0, #32]
900026dc:	6243      	str	r3, [r0, #36]	; 0x24
900026de:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026e2:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026e6:	4432      	add	r2, r6
900026e8:	4294      	cmp	r4, r2
900026ea:	d810      	bhi.n	9000270e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026ec:	4a0b      	ldr	r2, [pc, #44]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026ee:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026f0:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026f2:	4618      	mov	r0, r3
        format = bufferFormat;
900026f4:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f8:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026fc:	630b      	str	r3, [r1, #48]	; 0x30
900026fe:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002700:	4b07      	ldr	r3, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002702:	f240 11c5 	movw	r1, #453	; 0x1c5
90002706:	4a07      	ldr	r2, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002708:	4807      	ldr	r0, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270a:	f024 ff37 	bl	9002757c <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000270e:	4b07      	ldr	r3, [pc, #28]	; (9000272c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002710:	2152      	movs	r1, #82	; 0x52
90002712:	4a07      	ldr	r2, [pc, #28]	; (90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002714:	4804      	ldr	r0, [pc, #16]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002716:	f024 ff31 	bl	9002757c <__assert_func>
9000271a:	bf00      	nop
9000271c:	012001e0 	.word	0x012001e0
90002720:	90029b60 	.word	0x90029b60
90002724:	90029b90 	.word	0x90029b90
90002728:	900290ac 	.word	0x900290ac
9000272c:	90029d18 	.word	0x90029d18
90002730:	90029d54 	.word	0x90029d54

90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002734:	4b08      	ldr	r3, [pc, #32]	; (90002758 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90002736:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000273a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000273e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002742:	f3bf 8f6f 	isb	sy
90002746:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000274a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000274e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002752:	f3bf 8f6f 	isb	sy
}
90002756:	4770      	bx	lr
90002758:	e000e100 	.word	0xe000e100

9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000275c:	4b03      	ldr	r3, [pc, #12]	; (9000276c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000275e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002762:	609a      	str	r2, [r3, #8]
90002764:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002768:	609a      	str	r2, [r3, #8]
}
9000276a:	4770      	bx	lr
9000276c:	e000e100 	.word	0xe000e100

90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002770:	b538      	push	{r3, r4, r5, lr}
90002772:	4604      	mov	r4, r0
    HAL::initialize();
90002774:	f00e fcd1 	bl	9001111a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002778:	6823      	ldr	r3, [r4, #0]
9000277a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
9000277c:	f013 fd92 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90002780:	4601      	mov	r1, r0
90002782:	4620      	mov	r0, r4
90002784:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002786:	6823      	ldr	r3, [r4, #0]
90002788:	4a16      	ldr	r2, [pc, #88]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
9000278a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
9000278e:	4295      	cmp	r5, r2
90002790:	d11c      	bne.n	900027cc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002792:	4a15      	ldr	r2, [pc, #84]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002794:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002796:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000279a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	4813      	ldr	r0, [pc, #76]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900027a0:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
900027a4:	4a12      	ldr	r2, [pc, #72]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900027a6:	7005      	strb	r5, [r0, #0]
900027a8:	4293      	cmp	r3, r2
900027aa:	d116      	bne.n	900027da <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027ac:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027ae:	4a11      	ldr	r2, [pc, #68]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027b0:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027b2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027b4:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027b6:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027ba:	4b0f      	ldr	r3, [pc, #60]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027bc:	490f      	ldr	r1, [pc, #60]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027be:	4a10      	ldr	r2, [pc, #64]	; (90002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027c0:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027c2:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027c4:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027c6:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027ca:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027cc:	4a0d      	ldr	r2, [pc, #52]	; (90002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027ce:	2300      	movs	r3, #0
900027d0:	4620      	mov	r0, r4
900027d2:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027d6:	47a8      	blx	r5
900027d8:	e7ec      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027da:	2100      	movs	r1, #0
900027dc:	4620      	mov	r0, r4
900027de:	4798      	blx	r3
900027e0:	e7e8      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027e2:	bf00      	nop
900027e4:	90000805 	.word	0x90000805
900027e8:	d003fc00 	.word	0xd003fc00
900027ec:	24039702 	.word	0x24039702
900027f0:	90000675 	.word	0x90000675
900027f4:	24039703 	.word	0x24039703
900027f8:	240092e8 	.word	0x240092e8
900027fc:	240092a0 	.word	0x240092a0
90002800:	d00bf400 	.word	0xd00bf400
90002804:	d007f800 	.word	0xd007f800

90002808 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002808:	b510      	push	{r4, lr}
        return instance;
9000280a:	4c14      	ldr	r4, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000280c:	6823      	ldr	r3, [r4, #0]
9000280e:	b323      	cbz	r3, 9000285a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002810:	4b13      	ldr	r3, [pc, #76]	; (90002860 <HAL_LTDC_LineEventCallback+0x58>)
90002812:	4a14      	ldr	r2, [pc, #80]	; (90002864 <HAL_LTDC_LineEventCallback+0x5c>)
90002814:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002816:	8811      	ldrh	r1, [r2, #0]
90002818:	428b      	cmp	r3, r1
9000281a:	d00a      	beq.n	90002832 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000281c:	f008 ff28 	bl	9000b670 <HAL_LTDC_ProgramLineEvent>
90002820:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002822:	6803      	ldr	r3, [r0, #0]
90002824:	6a1b      	ldr	r3, [r3, #32]
90002826:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002828:	2000      	movs	r0, #0
        }
    }
9000282a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000282e:	f7fd bec5 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90002832:	4b0d      	ldr	r3, [pc, #52]	; (90002868 <HAL_LTDC_LineEventCallback+0x60>)
90002834:	8819      	ldrh	r1, [r3, #0]
90002836:	f008 ff1b 	bl	9000b670 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000283a:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
9000283c:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002840:	3301      	adds	r3, #1
90002842:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
90002846:	f7ff f83b 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
9000284a:	6820      	ldr	r0, [r4, #0]
9000284c:	f00f f9be 	bl	90011bcc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002850:	2000      	movs	r0, #0
    }
90002852:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90002856:	f7fd be7d 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
9000285a:	bd10      	pop	{r4, pc}
9000285c:	24039704 	.word	0x24039704
90002860:	50001000 	.word	0x50001000
90002864:	2400929e 	.word	0x2400929e
90002868:	2400929c 	.word	0x2400929c

9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
9000286c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002870:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 9000292c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
90002874:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
90002876:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002878:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
9000287c:	4604      	mov	r4, r0
9000287e:	e024      	b.n	900028ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002880:	682b      	ldr	r3, [r5, #0]
90002882:	4628      	mov	r0, r5
90002884:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90002886:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002888:	2300      	movs	r3, #0
9000288a:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000288c:	6829      	ldr	r1, [r5, #0]
9000288e:	f44f 7390 	mov.w	r3, #288	; 0x120
90002892:	9700      	str	r7, [sp, #0]
90002894:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002898:	f8d1 9014 	ldr.w	r9, [r1, #20]
9000289c:	4628      	mov	r0, r5
9000289e:	68a1      	ldr	r1, [r4, #8]
900028a0:	47c8      	blx	r9
                    stream.frameCount++;
900028a2:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900028a4:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a8:	3301      	adds	r3, #1
900028aa:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028ac:	2800      	cmp	r0, #0
900028ae:	d033      	beq.n	90002918 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b0:	682b      	ldr	r3, [r5, #0]
900028b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028b4:	4543      	cmp	r3, r8
900028b6:	d131      	bne.n	9000291c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b8:	6968      	ldr	r0, [r5, #20]
900028ba:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028bc:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028be:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028c0:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028c4:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028c6:	f00b fa2b 	bl	9000dd20 <osMutexRelease>
            SEM_WAIT(semDecode);
900028ca:	f04f 31ff 	mov.w	r1, #4294967295
900028ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028d0:	f00b fa98 	bl	9000de04 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028d4:	f04f 31ff 	mov.w	r1, #4294967295
900028d8:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028da:	f00b f9fd 	bl	9000dcd8 <osMutexAcquire>
                if (stream.doDecode)
900028de:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028e2:	2b00      	cmp	r3, #0
900028e4:	d0ee      	beq.n	900028c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028e6:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e8:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028ea:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028ee:	2900      	cmp	r1, #0
900028f0:	d1c6      	bne.n	90002880 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028f4:	2b00      	cmp	r3, #0
900028f6:	d0c9      	beq.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f8:	682a      	ldr	r2, [r5, #0]
900028fa:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028fe:	4541      	cmp	r1, r8
90002900:	d10f      	bne.n	90002922 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002902:	6968      	ldr	r0, [r5, #20]
90002904:	18c1      	adds	r1, r0, r3
90002906:	4628      	mov	r0, r5
90002908:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
9000290a:	6923      	ldr	r3, [r4, #16]
9000290c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
9000290e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002910:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002912:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002914:	6123      	str	r3, [r4, #16]
90002916:	e7b9      	b.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002918:	2001      	movs	r0, #1
9000291a:	e7cf      	b.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
9000291c:	4628      	mov	r0, r5
9000291e:	4798      	blx	r3
90002920:	e7cb      	b.n	900028ba <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002922:	4628      	mov	r0, r5
90002924:	4788      	blx	r1
90002926:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002928:	e7ec      	b.n	90002904 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
9000292a:	bf00      	nop
9000292c:	9000097d 	.word	0x9000097d

90002930 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002930:	4801      	ldr	r0, [pc, #4]	; (90002938 <videoTaskFunc+0x8>)
{
90002932:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002934:	f7ff ff9a 	bl	9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002938:	240092e8 	.word	0x240092e8

9000293c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000293c:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000293e:	4815      	ldr	r0, [pc, #84]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002940:	2500      	movs	r5, #0
90002942:	f7fe fbc1 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002946:	4c14      	ldr	r4, [pc, #80]	; (90002998 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002948:	4914      	ldr	r1, [pc, #80]	; (9000299c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294a:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
9000294e:	462a      	mov	r2, r5
90002950:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002952:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002954:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002958:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
9000295a:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
9000295c:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000295e:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002962:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002964:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002968:	e9c4 5504 	strd	r5, r5, [r4, #16]
9000296c:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002970:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002974:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002978:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
9000297c:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	f00b f9f0 	bl	9000dd64 <osSemaphoreNew>
90002984:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002986:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002988:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
9000298a:	f00b f965 	bl	9000dc58 <osMutexNew>
9000298e:	6460      	str	r0, [r4, #68]	; 0x44
}
90002990:	bd38      	pop	{r3, r4, r5, pc}
90002992:	bf00      	nop
90002994:	240092a0 	.word	0x240092a0
90002998:	240092e8 	.word	0x240092e8
9000299c:	90029f20 	.word	0x90029f20

900029a0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900029a0:	4901      	ldr	r1, [pc, #4]	; (900029a8 <vApplicationIdleHook+0x8>)
900029a2:	2000      	movs	r0, #0
900029a4:	f00d bc00 	b.w	900101a8 <vTaskSetApplicationTaskTag>
900029a8:	90000959 	.word	0x90000959

900029ac <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029ac:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029ae:	2064      	movs	r0, #100	; 0x64
900029b0:	f00b f944 	bl	9000dc3c <osDelay>
  for(;;)
900029b4:	e7fb      	b.n	900029ae <StartDefaultTask+0x2>
900029b6:	bf00      	nop

900029b8 <SystemClock_Config>:
{
900029b8:	b570      	push	{r4, r5, r6, lr}
900029ba:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029bc:	224c      	movs	r2, #76	; 0x4c
900029be:	2100      	movs	r1, #0
900029c0:	a80a      	add	r0, sp, #40	; 0x28
900029c2:	f025 f863 	bl	90027a8c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029c6:	2220      	movs	r2, #32
900029c8:	2100      	movs	r1, #0
900029ca:	a802      	add	r0, sp, #8
900029cc:	f025 f85e 	bl	90027a8c <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029d0:	2002      	movs	r0, #2
900029d2:	f009 f88b 	bl	9000baec <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029d6:	4b22      	ldr	r3, [pc, #136]	; (90002a60 <SystemClock_Config+0xa8>)
900029d8:	2100      	movs	r1, #0
900029da:	4a22      	ldr	r2, [pc, #136]	; (90002a64 <SystemClock_Config+0xac>)
900029dc:	9101      	str	r1, [sp, #4]
900029de:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029e0:	f021 0101 	bic.w	r1, r1, #1
900029e4:	62d9      	str	r1, [r3, #44]	; 0x2c
900029e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e8:	f003 0301 	and.w	r3, r3, #1
900029ec:	9301      	str	r3, [sp, #4]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029f4:	6193      	str	r3, [r2, #24]
900029f6:	6993      	ldr	r3, [r2, #24]
900029f8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029fc:	9301      	str	r3, [sp, #4]
900029fe:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002a00:	6993      	ldr	r3, [r2, #24]
90002a02:	0499      	lsls	r1, r3, #18
90002a04:	d5fc      	bpl.n	90002a00 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a06:	2201      	movs	r2, #1
90002a08:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a0c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a0e:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a10:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a12:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a14:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a16:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a1a:	2205      	movs	r2, #5
90002a1c:	23a0      	movs	r3, #160	; 0xa0
90002a1e:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a22:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a24:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a28:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a2a:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a2e:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a32:	f009 f903 	bl	9000bc3c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a36:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a38:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3a:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a3c:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3e:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a42:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a44:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a46:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a48:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a4a:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a4c:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a50:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a54:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a56:	f009 fc85 	bl	9000c364 <HAL_RCC_ClockConfig>
}
90002a5a:	b01e      	add	sp, #120	; 0x78
90002a5c:	bd70      	pop	{r4, r5, r6, pc}
90002a5e:	bf00      	nop
90002a60:	58000400 	.word	0x58000400
90002a64:	58024800 	.word	0x58024800

90002a68 <main>:
{
90002a68:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6a:	2400      	movs	r4, #0
{
90002a6c:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a6e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a70:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a72:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a74:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a78:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a7c:	f006 f81e 	bl	90008abc <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a84:	49d3      	ldr	r1, [pc, #844]	; (90002dd4 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a86:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a88:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a8a:	4bd3      	ldr	r3, [pc, #844]	; (90002dd8 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a8c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a90:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	f006 f830 	bl	90008af8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a98:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a9c:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a9e:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002aa2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002aa4:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa8:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aac:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab0:	f006 f822 	bl	90008af8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab8:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002abc:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ac0:	231a      	movs	r3, #26
90002ac2:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002ac6:	f240 1301 	movw	r3, #257	; 0x101
90002aca:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	f006 f813 	bl	90008af8 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad2:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ad6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad8:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002adc:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ade:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ae6:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002aea:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002aec:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af0:	f006 f802 	bl	90008af8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002afc:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002b00:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002b04:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b08:	f005 fff6 	bl	90008af8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b0c:	4620      	mov	r0, r4
90002b0e:	f005 ffe3 	bl	90008ad8 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b12:	4ab2      	ldr	r2, [pc, #712]	; (90002ddc <main+0x374>)
90002b14:	6953      	ldr	r3, [r2, #20]
90002b16:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b1a:	d111      	bne.n	90002b40 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b1c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b20:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b24:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b28:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b2c:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b30:	6953      	ldr	r3, [r2, #20]
90002b32:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b36:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b3c:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b40:	48a6      	ldr	r0, [pc, #664]	; (90002ddc <main+0x374>)
90002b42:	6943      	ldr	r3, [r0, #20]
90002b44:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b48:	d124      	bne.n	90002b94 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b4a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b4e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b52:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b56:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b5a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b5e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b62:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b64:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b68:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b6a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b6e:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b70:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b74:	1c5a      	adds	r2, r3, #1
90002b76:	d1f8      	bne.n	90002b6a <main+0x102>
    } while(sets-- != 0U);
90002b78:	3c20      	subs	r4, #32
90002b7a:	f114 0f20 	cmn.w	r4, #32
90002b7e:	d1f1      	bne.n	90002b64 <main+0xfc>
90002b80:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b84:	6943      	ldr	r3, [r0, #20]
90002b86:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b8a:	6143      	str	r3, [r0, #20]
90002b8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b90:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b94:	f005 feda 	bl	9000894c <HAL_Init>
  SystemClock_Config();
90002b98:	f7ff ff0e 	bl	900029b8 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b9c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002ba0:	4d8f      	ldr	r5, [pc, #572]	; (90002de0 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba2:	21c0      	movs	r1, #192	; 0xc0
90002ba4:	488f      	ldr	r0, [pc, #572]	; (90002de4 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002ba6:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba8:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002baa:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002bac:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002bb0:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002bb2:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bb6:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bbe:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bc2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bc6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bca:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bd6:	9301      	str	r3, [sp, #4]
90002bd8:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bda:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002be2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002be6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bea:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002bee:	9302      	str	r3, [sp, #8]
90002bf0:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bf2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bfa:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bfe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c02:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002c06:	9303      	str	r3, [sp, #12]
90002c08:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c0e:	f043 0310 	orr.w	r3, r3, #16
90002c12:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1a:	f003 0310 	and.w	r3, r3, #16
90002c1e:	9304      	str	r3, [sp, #16]
90002c20:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c26:	f043 0302 	orr.w	r3, r3, #2
90002c2a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c32:	f003 0302 	and.w	r3, r3, #2
90002c36:	9305      	str	r3, [sp, #20]
90002c38:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c42:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4a:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c4e:	9306      	str	r3, [sp, #24]
90002c50:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c56:	f043 0308 	orr.w	r3, r3, #8
90002c5a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c62:	f003 0308 	and.w	r3, r3, #8
90002c66:	9307      	str	r3, [sp, #28]
90002c68:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c6e:	f043 0320 	orr.w	r3, r3, #32
90002c72:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7a:	f003 0320 	and.w	r3, r3, #32
90002c7e:	9308      	str	r3, [sp, #32]
90002c80:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c86:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c8a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c92:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c96:	9309      	str	r3, [sp, #36]	; 0x24
90002c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c9e:	f043 0301 	orr.w	r3, r3, #1
90002ca2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002ca6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002caa:	f003 0301 	and.w	r3, r3, #1
90002cae:	930a      	str	r3, [sp, #40]	; 0x28
90002cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002cb2:	f006 fb11 	bl	900092d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cb6:	4622      	mov	r2, r4
90002cb8:	2180      	movs	r1, #128	; 0x80
90002cba:	484b      	ldr	r0, [pc, #300]	; (90002de8 <main+0x380>)
90002cbc:	f006 fb0c 	bl	900092d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cc0:	4622      	mov	r2, r4
90002cc2:	2108      	movs	r1, #8
90002cc4:	4849      	ldr	r0, [pc, #292]	; (90002dec <main+0x384>)
90002cc6:	f006 fb07 	bl	900092d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cca:	2201      	movs	r2, #1
90002ccc:	4848      	ldr	r0, [pc, #288]	; (90002df0 <main+0x388>)
90002cce:	4611      	mov	r1, r2
90002cd0:	f006 fb02 	bl	900092d8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002cd4:	4622      	mov	r2, r4
90002cd6:	2144      	movs	r1, #68	; 0x44
90002cd8:	4846      	ldr	r0, [pc, #280]	; (90002df4 <main+0x38c>)
90002cda:	f006 fafd 	bl	900092d8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cde:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce0:	a90b      	add	r1, sp, #44	; 0x2c
90002ce2:	4840      	ldr	r0, [pc, #256]	; (90002de4 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ce4:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce8:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cec:	f006 f8f4 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf2:	a90b      	add	r1, sp, #44	; 0x2c
90002cf4:	483c      	ldr	r0, [pc, #240]	; (90002de8 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf6:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf8:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cfa:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cfe:	f006 f8eb 	bl	90008ed8 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d02:	a90b      	add	r1, sp, #44	; 0x2c
90002d04:	4839      	ldr	r0, [pc, #228]	; (90002dec <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d06:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d0a:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d0c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d10:	f006 f8e2 	bl	90008ed8 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d14:	a90b      	add	r1, sp, #44	; 0x2c
90002d16:	4836      	ldr	r0, [pc, #216]	; (90002df0 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d18:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d1c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d20:	f006 f8da 	bl	90008ed8 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d24:	a90b      	add	r1, sp, #44	; 0x2c
90002d26:	4833      	ldr	r0, [pc, #204]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d28:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d2c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d30:	f006 f8d2 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d34:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d3c:	a90b      	add	r1, sp, #44	; 0x2c
90002d3e:	482d      	ldr	r0, [pc, #180]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d40:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d44:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d48:	f006 f8c6 	bl	90008ed8 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d50:	4622      	mov	r2, r4
90002d52:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d54:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d56:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d58:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d5c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d60:	4d25      	ldr	r5, [pc, #148]	; (90002df8 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d62:	4033      	ands	r3, r6
90002d64:	9300      	str	r3, [sp, #0]
90002d66:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d68:	f005 fe4a 	bl	90008a00 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d6c:	207a      	movs	r0, #122	; 0x7a
90002d6e:	f005 fe85 	bl	90008a7c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d72:	2234      	movs	r2, #52	; 0x34
90002d74:	4621      	mov	r1, r4
90002d76:	a80b      	add	r0, sp, #44	; 0x2c
90002d78:	f024 fe88 	bl	90027a8c <memset>
  hltdc.Instance = LTDC;
90002d7c:	4b1f      	ldr	r3, [pc, #124]	; (90002dfc <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d7e:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d80:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d82:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d84:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d86:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d8a:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d8e:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d92:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d94:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d98:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d9c:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002da0:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002da2:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002da6:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002daa:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002dac:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002db0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002db4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db8:	f008 fab4 	bl	9000b324 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002dbc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc0:	4622      	mov	r2, r4
90002dc2:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dc4:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc6:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc8:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dca:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dce:	4d0c      	ldr	r5, [pc, #48]	; (90002e00 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dd0:	930e      	str	r3, [sp, #56]	; 0x38
90002dd2:	e017      	b.n	90002e04 <main+0x39c>
90002dd4:	03000012 	.word	0x03000012
90002dd8:	01010001 	.word	0x01010001
90002ddc:	e000ed00 	.word	0xe000ed00
90002de0:	58024400 	.word	0x58024400
90002de4:	58020400 	.word	0x58020400
90002de8:	58020c00 	.word	0x58020c00
90002dec:	58021800 	.word	0x58021800
90002df0:	58022800 	.word	0x58022800
90002df4:	58020000 	.word	0x58020000
90002df8:	2400941c 	.word	0x2400941c
90002dfc:	50001000 	.word	0x50001000
90002e00:	2400935c 	.word	0x2400935c
  pLayerCfg.ImageHeight = 272;
90002e04:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002e06:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e08:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e0a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e10:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e12:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e14:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e16:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e18:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e1c:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e20:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e22:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e26:	f008 fb51 	bl	9000b4cc <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e2a:	4b35      	ldr	r3, [pc, #212]	; (90002f00 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e2c:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e2e:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e30:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e32:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e34:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e38:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e3c:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e40:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e44:	f005 ff00 	bl	90008c48 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e48:	4631      	mov	r1, r6
90002e4a:	4628      	mov	r0, r5
90002e4c:	f005 ffd4 	bl	90008df8 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e50:	482c      	ldr	r0, [pc, #176]	; (90002f04 <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e52:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e56:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e58:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e5c:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e5e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e62:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e66:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e6a:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e6c:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e70:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e74:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e7a:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e7c:	2307      	movs	r3, #7
90002e7e:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e80:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e82:	4b21      	ldr	r3, [pc, #132]	; (90002f08 <main+0x4a0>)
90002e84:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e86:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e88:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e8c:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e8e:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e92:	f00a fb3f 	bl	9000d514 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e96:	4620      	mov	r0, r4
90002e98:	f005 faea 	bl	90008470 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e9c:	4620      	mov	r0, r4
90002e9e:	f005 fb31 	bl	90008504 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002ea2:	f7fd fa97 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002ea6:	4b19      	ldr	r3, [pc, #100]	; (90002f0c <main+0x4a4>)
90002ea8:	4819      	ldr	r0, [pc, #100]	; (90002f10 <main+0x4a8>)
90002eaa:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002eac:	f007 fa0e 	bl	9000a2cc <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002eb0:	4818      	ldr	r0, [pc, #96]	; (90002f14 <main+0x4ac>)
90002eb2:	4b19      	ldr	r3, [pc, #100]	; (90002f18 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eb4:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eb6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb8:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eba:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002ebe:	f005 fe4d 	bl	90008b5c <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002ec2:	f7fd fa8b 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ec6:	f7fd fa87 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002eca:	f00a fe41 	bl	9000db50 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ece:	4a13      	ldr	r2, [pc, #76]	; (90002f1c <main+0x4b4>)
90002ed0:	4621      	mov	r1, r4
90002ed2:	4813      	ldr	r0, [pc, #76]	; (90002f20 <main+0x4b8>)
90002ed4:	f00a fe68 	bl	9000dba8 <osThreadNew>
90002ed8:	4b12      	ldr	r3, [pc, #72]	; (90002f24 <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002eda:	4a13      	ldr	r2, [pc, #76]	; (90002f28 <main+0x4c0>)
90002edc:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ede:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee0:	4812      	ldr	r0, [pc, #72]	; (90002f2c <main+0x4c4>)
90002ee2:	f00a fe61 	bl	9000dba8 <osThreadNew>
90002ee6:	4b12      	ldr	r3, [pc, #72]	; (90002f30 <main+0x4c8>)
90002ee8:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	4a12      	ldr	r2, [pc, #72]	; (90002f34 <main+0x4cc>)
90002eec:	4621      	mov	r1, r4
90002eee:	4812      	ldr	r0, [pc, #72]	; (90002f38 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ef0:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ef2:	f00a fe59 	bl	9000dba8 <osThreadNew>
90002ef6:	4b11      	ldr	r3, [pc, #68]	; (90002f3c <main+0x4d4>)
90002ef8:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002efa:	f00a fe3b 	bl	9000db74 <osKernelStart>
  while (1)
90002efe:	e7fe      	b.n	90002efe <main+0x496>
90002f00:	52001000 	.word	0x52001000
90002f04:	2400959c 	.word	0x2400959c
90002f08:	52004140 	.word	0x52004140
90002f0c:	52003000 	.word	0x52003000
90002f10:	240093c4 	.word	0x240093c4
90002f14:	24009338 	.word	0x24009338
90002f18:	58024c00 	.word	0x58024c00
90002f1c:	90029f9c 	.word	0x90029f9c
90002f20:	900029ad 	.word	0x900029ad
90002f24:	24009334 	.word	0x24009334
90002f28:	90029f78 	.word	0x90029f78
90002f2c:	900003ed 	.word	0x900003ed
90002f30:	24009330 	.word	0x24009330
90002f34:	90029fc0 	.word	0x90029fc0
90002f38:	90002931 	.word	0x90002931
90002f3c:	240095d0 	.word	0x240095d0

90002f40 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f40:	4b03      	ldr	r3, [pc, #12]	; (90002f50 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f42:	6802      	ldr	r2, [r0, #0]
90002f44:	429a      	cmp	r2, r3
90002f46:	d000      	beq.n	90002f4a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f48:	4770      	bx	lr
    HAL_IncTick();
90002f4a:	f005 bd2f 	b.w	900089ac <HAL_IncTick>
90002f4e:	bf00      	nop
90002f50:	40001000 	.word	0x40001000

90002f54 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f54:	4770      	bx	lr
90002f56:	bf00      	nop

90002f58 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f58:	4b0b      	ldr	r3, [pc, #44]	; (90002f88 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f5a:	2200      	movs	r2, #0
90002f5c:	210f      	movs	r1, #15
90002f5e:	f06f 0001 	mvn.w	r0, #1
{
90002f62:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f64:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f68:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f6a:	f044 0402 	orr.w	r4, r4, #2
90002f6e:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f72:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f76:	f003 0302 	and.w	r3, r3, #2
90002f7a:	9301      	str	r3, [sp, #4]
90002f7c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f7e:	b003      	add	sp, #12
90002f80:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f84:	f005 bd3c 	b.w	90008a00 <HAL_NVIC_SetPriority>
90002f88:	58024400 	.word	0x58024400

90002f8c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f8c:	4b0a      	ldr	r3, [pc, #40]	; (90002fb8 <HAL_CRC_MspInit+0x2c>)
90002f8e:	6802      	ldr	r2, [r0, #0]
90002f90:	429a      	cmp	r2, r3
90002f92:	d000      	beq.n	90002f96 <HAL_CRC_MspInit+0xa>
90002f94:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f96:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f9a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f9c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002fa0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002fa4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fb0:	9301      	str	r3, [sp, #4]
90002fb2:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fb4:	b002      	add	sp, #8
90002fb6:	4770      	bx	lr
90002fb8:	58024c00 	.word	0x58024c00

90002fbc <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fbc:	4b0f      	ldr	r3, [pc, #60]	; (90002ffc <HAL_DMA2D_MspInit+0x40>)
90002fbe:	6802      	ldr	r2, [r0, #0]
90002fc0:	429a      	cmp	r2, r3
90002fc2:	d000      	beq.n	90002fc6 <HAL_DMA2D_MspInit+0xa>
90002fc4:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc6:	4b0e      	ldr	r3, [pc, #56]	; (90003000 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc8:	205a      	movs	r0, #90	; 0x5a
90002fca:	2200      	movs	r2, #0
90002fcc:	2105      	movs	r1, #5
{
90002fce:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd0:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fd4:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd6:	f044 0410 	orr.w	r4, r4, #16
90002fda:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fde:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fe2:	f003 0310 	and.w	r3, r3, #16
90002fe6:	9301      	str	r3, [sp, #4]
90002fe8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fea:	f005 fd09 	bl	90008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002ff0:	b002      	add	sp, #8
90002ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002ff6:	f005 bd41 	b.w	90008a7c <HAL_NVIC_EnableIRQ>
90002ffa:	bf00      	nop
90002ffc:	52001000 	.word	0x52001000
90003000:	58024400 	.word	0x58024400

90003004 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003004:	4b3f      	ldr	r3, [pc, #252]	; (90003104 <HAL_JPEG_MspInit+0x100>)
90003006:	6802      	ldr	r2, [r0, #0]
90003008:	429a      	cmp	r2, r3
9000300a:	d000      	beq.n	9000300e <HAL_JPEG_MspInit+0xa>
9000300c:	4770      	bx	lr
{
9000300e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003010:	4b3d      	ldr	r3, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003012:	2211      	movs	r2, #17
90003014:	4e3d      	ldr	r6, [pc, #244]	; (9000310c <HAL_JPEG_MspInit+0x108>)
{
90003016:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003018:	4d3d      	ldr	r5, [pc, #244]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
9000301a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000301c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000301e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003020:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003024:	493b      	ldr	r1, [pc, #236]	; (90003114 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003026:	f042 0220 	orr.w	r2, r2, #32
9000302a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000302e:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003030:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003034:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003036:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000303a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000303c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000303e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003040:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003042:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003044:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003048:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
9000304c:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000304e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003050:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
90003054:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003058:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000305a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
9000305e:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
90003062:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003066:	2313      	movs	r3, #19
90003068:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000306a:	2302      	movs	r3, #2
9000306c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000306e:	f008 fb21 	bl	9000b6b4 <HAL_MDMA_Init>
90003072:	2800      	cmp	r0, #0
90003074:	d13a      	bne.n	900030ec <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003076:	2200      	movs	r2, #0
90003078:	4824      	ldr	r0, [pc, #144]	; (9000310c <HAL_JPEG_MspInit+0x108>)
9000307a:	4611      	mov	r1, r2
9000307c:	f008 fbb8 	bl	9000b7f0 <HAL_MDMA_ConfigPostRequestMask>
90003080:	2800      	cmp	r0, #0
90003082:	d13c      	bne.n	900030fe <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003086:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003088:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000308a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000308c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000308e:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003090:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003094:	4920      	ldr	r1, [pc, #128]	; (90003118 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003096:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003098:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
9000309a:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000309c:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000309e:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900030a2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a8:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030aa:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030ae:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b0:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	4815      	ldr	r0, [pc, #84]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030ba:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030bc:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030be:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030c0:	f008 faf8 	bl	9000b6b4 <HAL_MDMA_Init>
900030c4:	b9c0      	cbnz	r0, 900030f8 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030c6:	2200      	movs	r2, #0
900030c8:	4811      	ldr	r0, [pc, #68]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
900030ca:	4611      	mov	r1, r2
900030cc:	f008 fb90 	bl	9000b7f0 <HAL_MDMA_ConfigPostRequestMask>
900030d0:	b978      	cbnz	r0, 900030f2 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	2079      	movs	r0, #121	; 0x79
900030d6:	2200      	movs	r2, #0
900030d8:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030da:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030dc:	f005 fc90 	bl	90008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030e2:	b002      	add	sp, #8
900030e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e8:	f005 bcc8 	b.w	90008a7c <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030ec:	f7ff ff32 	bl	90002f54 <Error_Handler>
900030f0:	e7c1      	b.n	90003076 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030f2:	f7ff ff2f 	bl	90002f54 <Error_Handler>
900030f6:	e7ec      	b.n	900030d2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f8:	f7ff ff2c 	bl	90002f54 <Error_Handler>
900030fc:	e7e3      	b.n	900030c6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030fe:	f7ff ff29 	bl	90002f54 <Error_Handler>
90003102:	e7bf      	b.n	90003084 <HAL_JPEG_MspInit+0x80>
90003104:	52003000 	.word	0x52003000
90003108:	58024400 	.word	0x58024400
9000310c:	240094c4 	.word	0x240094c4
90003110:	24009530 	.word	0x24009530
90003114:	52000200 	.word	0x52000200
90003118:	520001c0 	.word	0x520001c0

9000311c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000311c:	b570      	push	{r4, r5, r6, lr}
9000311e:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	2100      	movs	r1, #0
{
90003122:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003124:	22c0      	movs	r2, #192	; 0xc0
90003126:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003128:	9109      	str	r1, [sp, #36]	; 0x24
9000312a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000312e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003132:	f024 fcab 	bl	90027a8c <memset>
  if(hltdc->Instance==LTDC)
90003136:	4b4a      	ldr	r3, [pc, #296]	; (90003260 <HAL_LTDC_MspInit+0x144>)
90003138:	6822      	ldr	r2, [r4, #0]
9000313a:	429a      	cmp	r2, r3
9000313c:	d001      	beq.n	90003142 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
9000313e:	b03a      	add	sp, #232	; 0xe8
90003140:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003142:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003144:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003146:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
9000314a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000314c:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000314e:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003150:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003152:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003154:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003156:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315a:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000315c:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000315e:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003162:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003166:	f009 fbd5 	bl	9000c914 <HAL_RCCEx_PeriphCLKConfig>
9000316a:	2800      	cmp	r0, #0
9000316c:	d174      	bne.n	90003258 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	4b3d      	ldr	r3, [pc, #244]	; (90003264 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003170:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003172:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003174:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000317a:	a905      	add	r1, sp, #20
9000317c:	483a      	ldr	r0, [pc, #232]	; (90003268 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000317e:	f042 0208 	orr.w	r2, r2, #8
90003182:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
90003186:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
9000318a:	f002 0208 	and.w	r2, r2, #8
9000318e:	9200      	str	r2, [sp, #0]
90003190:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003192:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003196:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000319a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000319e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a2:	f402 6280 	and.w	r2, r2, #1024	; 0x400
900031a6:	9201      	str	r2, [sp, #4]
900031a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031b2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031be:	9202      	str	r2, [sp, #8]
900031c0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031ca:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d2:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031d6:	9203      	str	r2, [sp, #12]
900031d8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031e2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031ea:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031f0:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f2:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f4:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f6:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031fa:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031fe:	f005 fe6b 	bl	90008ed8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003206:	a905      	add	r1, sp, #20
90003208:	4818      	ldr	r0, [pc, #96]	; (9000326c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000320a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000320c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003210:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003214:	f005 fe60 	bl	90008ed8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000321c:	a905      	add	r1, sp, #20
9000321e:	4814      	ldr	r0, [pc, #80]	; (90003270 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003220:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003222:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003226:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000322a:	f005 fe55 	bl	90008ed8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000322e:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003232:	a905      	add	r1, sp, #20
90003234:	480f      	ldr	r0, [pc, #60]	; (90003274 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003236:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003238:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000323c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003240:	f005 fe4a 	bl	90008ed8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003244:	462a      	mov	r2, r5
90003246:	2105      	movs	r1, #5
90003248:	2058      	movs	r0, #88	; 0x58
9000324a:	f005 fbd9 	bl	90008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000324e:	2058      	movs	r0, #88	; 0x58
90003250:	f005 fc14 	bl	90008a7c <HAL_NVIC_EnableIRQ>
}
90003254:	b03a      	add	sp, #232	; 0xe8
90003256:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003258:	f7ff fe7c 	bl	90002f54 <Error_Handler>
9000325c:	e787      	b.n	9000316e <HAL_LTDC_MspInit+0x52>
9000325e:	bf00      	nop
90003260:	50001000 	.word	0x50001000
90003264:	58024400 	.word	0x58024400
90003268:	58022800 	.word	0x58022800
9000326c:	58022000 	.word	0x58022000
90003270:	58022400 	.word	0x58022400
90003274:	58021c00 	.word	0x58021c00

90003278 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003278:	4836      	ldr	r0, [pc, #216]	; (90003354 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000327c:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000327e:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003280:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003282:	e9cd 3302 	strd	r3, r3, [sp, #8]
90003286:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000328a:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
9000328c:	b109      	cbz	r1, 90003292 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000328e:	b038      	add	sp, #224	; 0xe0
90003290:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003292:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003294:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90003296:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003298:	a80a      	add	r0, sp, #40	; 0x28
9000329a:	f024 fbf7 	bl	90027a8c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900032a2:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900032a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032aa:	f009 fb33 	bl	9000c914 <HAL_RCCEx_PeriphCLKConfig>
900032ae:	2800      	cmp	r0, #0
900032b0:	d14c      	bne.n	9000334c <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032b2:	4b29      	ldr	r3, [pc, #164]	; (90003358 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b4:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b8:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ba:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032c0:	2600      	movs	r6, #0
900032c2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032c4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032cc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032d0:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032da:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032dc:	a902      	add	r1, sp, #8
900032de:	481f      	ldr	r0, [pc, #124]	; (9000335c <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032e0:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032e2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032e6:	f005 fdf7 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ea:	f248 1233 	movw	r2, #33075	; 0x8133
900032ee:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f0:	a902      	add	r1, sp, #8
900032f2:	481b      	ldr	r0, [pc, #108]	; (90003360 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032f4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032f6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032fa:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032fe:	f005 fdeb 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003302:	f24c 7203 	movw	r2, #50947	; 0xc703
90003306:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003308:	a902      	add	r1, sp, #8
9000330a:	4816      	ldr	r0, [pc, #88]	; (90003364 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000330c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000330e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003312:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003316:	f005 fddf 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331a:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000331e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003320:	a902      	add	r1, sp, #8
90003322:	4811      	ldr	r0, [pc, #68]	; (90003368 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003324:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003326:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000332a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000332e:	f005 fdd3 	bl	90008ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003332:	22e0      	movs	r2, #224	; 0xe0
90003334:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003336:	a902      	add	r1, sp, #8
90003338:	480c      	ldr	r0, [pc, #48]	; (9000336c <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000333a:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000333c:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003340:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003344:	f005 fdc8 	bl	90008ed8 <HAL_GPIO_Init>
}
90003348:	b038      	add	sp, #224	; 0xe0
9000334a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000334c:	f7ff fe02 	bl	90002f54 <Error_Handler>
90003350:	e7af      	b.n	900032b2 <HAL_SDRAM_MspInit+0x3a>
90003352:	bf00      	nop
90003354:	240095d8 	.word	0x240095d8
90003358:	58024400 	.word	0x58024400
9000335c:	58021000 	.word	0x58021000
90003360:	58021800 	.word	0x58021800
90003364:	58020c00 	.word	0x58020c00
90003368:	58021400 	.word	0x58021400
9000336c:	58021c00 	.word	0x58021c00

90003370 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003370:	4b13      	ldr	r3, [pc, #76]	; (900033c0 <HAL_SDRAM_MspDeInit+0x50>)
90003372:	681a      	ldr	r2, [r3, #0]
90003374:	b102      	cbz	r2, 90003378 <HAL_SDRAM_MspDeInit+0x8>
90003376:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003378:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000337a:	4a12      	ldr	r2, [pc, #72]	; (900033c4 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
9000337c:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000337e:	f64f 7183 	movw	r1, #65411	; 0xff83
90003382:	4811      	ldr	r0, [pc, #68]	; (900033c8 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003384:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90003386:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000338a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000338e:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003392:	f005 fed3 	bl	9000913c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003396:	f248 1133 	movw	r1, #33075	; 0x8133
9000339a:	480c      	ldr	r0, [pc, #48]	; (900033cc <HAL_SDRAM_MspDeInit+0x5c>)
9000339c:	f005 fece 	bl	9000913c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900033a0:	f24c 7103 	movw	r1, #50947	; 0xc703
900033a4:	480a      	ldr	r0, [pc, #40]	; (900033d0 <HAL_SDRAM_MspDeInit+0x60>)
900033a6:	f005 fec9 	bl	9000913c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033aa:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033ae:	4809      	ldr	r0, [pc, #36]	; (900033d4 <HAL_SDRAM_MspDeInit+0x64>)
900033b0:	f005 fec4 	bl	9000913c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	21e0      	movs	r1, #224	; 0xe0
900033b6:	4808      	ldr	r0, [pc, #32]	; (900033d8 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033bc:	f005 bebe 	b.w	9000913c <HAL_GPIO_DeInit>
900033c0:	240095d4 	.word	0x240095d4
900033c4:	58024400 	.word	0x58024400
900033c8:	58021000 	.word	0x58021000
900033cc:	58021800 	.word	0x58021800
900033d0:	58020c00 	.word	0x58020c00
900033d4:	58021400 	.word	0x58021400
900033d8:	58021c00 	.word	0x58021c00

900033dc <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033dc:	280f      	cmp	r0, #15
900033de:	d901      	bls.n	900033e4 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033e0:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033e2:	4770      	bx	lr
{
900033e4:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e6:	4601      	mov	r1, r0
{
900033e8:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033ea:	2200      	movs	r2, #0
900033ec:	4604      	mov	r4, r0
900033ee:	2036      	movs	r0, #54	; 0x36
900033f0:	f005 fb06 	bl	90008a00 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033f4:	2036      	movs	r0, #54	; 0x36
900033f6:	f005 fb41 	bl	90008a7c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fa:	4b1a      	ldr	r3, [pc, #104]	; (90003464 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033fc:	4a1a      	ldr	r2, [pc, #104]	; (90003468 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033fe:	4669      	mov	r1, sp
90003400:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003402:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003404:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003408:	f042 0210 	orr.w	r2, r2, #16
9000340c:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003410:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003414:	f003 0310 	and.w	r3, r3, #16
90003418:	9301      	str	r3, [sp, #4]
9000341a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000341c:	f009 f95a 	bl	9000c6d4 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003420:	9b07      	ldr	r3, [sp, #28]
90003422:	b9bb      	cbnz	r3, 90003454 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90003424:	f009 f8c6 	bl	9000c5b4 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003428:	4b10      	ldr	r3, [pc, #64]	; (9000346c <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
9000342a:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000342c:	4c10      	ldr	r4, [pc, #64]	; (90003470 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000342e:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
90003432:	4d10      	ldr	r5, [pc, #64]	; (90003474 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003434:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003438:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000343a:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000343c:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000343e:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003440:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003442:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90003446:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003448:	f00a f8d6 	bl	9000d5f8 <HAL_TIM_Base_Init>
9000344c:	b130      	cbz	r0, 9000345c <HAL_InitTick+0x80>
    return HAL_ERROR;
9000344e:	2001      	movs	r0, #1
}
90003450:	b00b      	add	sp, #44	; 0x2c
90003452:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90003454:	f009 f8ae 	bl	9000c5b4 <HAL_RCC_GetPCLK1Freq>
90003458:	0040      	lsls	r0, r0, #1
9000345a:	e7e5      	b.n	90003428 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
9000345c:	4620      	mov	r0, r4
9000345e:	f00a f981 	bl	9000d764 <HAL_TIM_Base_Start_IT>
90003462:	e7f5      	b.n	90003450 <HAL_InitTick+0x74>
90003464:	58024400 	.word	0x58024400
90003468:	24000078 	.word	0x24000078
9000346c:	431bde83 	.word	0x431bde83
90003470:	240095dc 	.word	0x240095dc
90003474:	40001000 	.word	0x40001000

90003478 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003478:	4770      	bx	lr
9000347a:	bf00      	nop

9000347c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <HardFault_Handler>
9000347e:	bf00      	nop

90003480 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <MemManage_Handler>
90003482:	bf00      	nop

90003484 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90003484:	e7fe      	b.n	90003484 <BusFault_Handler>
90003486:	bf00      	nop

90003488 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003488:	e7fe      	b.n	90003488 <UsageFault_Handler>
9000348a:	bf00      	nop

9000348c <DebugMon_Handler>:
9000348c:	4770      	bx	lr
9000348e:	bf00      	nop

90003490 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003490:	4801      	ldr	r0, [pc, #4]	; (90003498 <TIM6_DAC_IRQHandler+0x8>)
90003492:	f00a b9cb 	b.w	9000d82c <HAL_TIM_IRQHandler>
90003496:	bf00      	nop
90003498:	240095dc 	.word	0x240095dc

9000349c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000349c:	4801      	ldr	r0, [pc, #4]	; (900034a4 <LTDC_IRQHandler+0x8>)
9000349e:	f007 bfb3 	b.w	9000b408 <HAL_LTDC_IRQHandler>
900034a2:	bf00      	nop
900034a4:	2400941c 	.word	0x2400941c

900034a8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a8:	4801      	ldr	r0, [pc, #4]	; (900034b0 <DMA2D_IRQHandler+0x8>)
900034aa:	f005 bc11 	b.w	90008cd0 <HAL_DMA2D_IRQHandler>
900034ae:	bf00      	nop
900034b0:	2400935c 	.word	0x2400935c

900034b4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034b4:	4801      	ldr	r0, [pc, #4]	; (900034bc <JPEG_IRQHandler+0x8>)
900034b6:	f007 be93 	b.w	9000b1e0 <HAL_JPEG_IRQHandler>
900034ba:	bf00      	nop
900034bc:	240093c4 	.word	0x240093c4

900034c0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c0:	4804      	ldr	r0, [pc, #16]	; (900034d4 <MDMA_IRQHandler+0x14>)
{
900034c2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c4:	f008 fa54 	bl	9000b970 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c8:	4803      	ldr	r0, [pc, #12]	; (900034d8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034ce:	f008 ba4f 	b.w	9000b970 <HAL_MDMA_IRQHandler>
900034d2:	bf00      	nop
900034d4:	24009530 	.word	0x24009530
900034d8:	240094c4 	.word	0x240094c4

900034dc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034dc:	2001      	movs	r0, #1
900034de:	4770      	bx	lr

900034e0 <_kill>:

int _kill(int pid, int sig)
{
900034e0:	b508      	push	{r3, lr}
	errno = EINVAL;
900034e2:	f024 fb87 	bl	90027bf4 <__errno>
900034e6:	2216      	movs	r2, #22
900034e8:	4603      	mov	r3, r0
	return -1;
}
900034ea:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034ee:	601a      	str	r2, [r3, #0]
}
900034f0:	bd08      	pop	{r3, pc}
900034f2:	bf00      	nop

900034f4 <_exit>:

void _exit (int status)
{
900034f4:	b508      	push	{r3, lr}
	errno = EINVAL;
900034f6:	f024 fb7d 	bl	90027bf4 <__errno>
900034fa:	2316      	movs	r3, #22
900034fc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034fe:	e7fe      	b.n	900034fe <_exit+0xa>

90003500 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003500:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003502:	1e16      	subs	r6, r2, #0
90003504:	dd07      	ble.n	90003516 <_read+0x16>
90003506:	460c      	mov	r4, r1
90003508:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000350a:	f3af 8000 	nop.w
9000350e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003512:	42a5      	cmp	r5, r4
90003514:	d1f9      	bne.n	9000350a <_read+0xa>
	}

return len;
}
90003516:	4630      	mov	r0, r6
90003518:	bd70      	pop	{r4, r5, r6, pc}
9000351a:	bf00      	nop

9000351c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000351c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000351e:	1e16      	subs	r6, r2, #0
90003520:	dd07      	ble.n	90003532 <_write+0x16>
90003522:	460c      	mov	r4, r1
90003524:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90003526:	f814 0b01 	ldrb.w	r0, [r4], #1
9000352a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000352e:	42ac      	cmp	r4, r5
90003530:	d1f9      	bne.n	90003526 <_write+0xa>
	}
	return len;
}
90003532:	4630      	mov	r0, r6
90003534:	bd70      	pop	{r4, r5, r6, pc}
90003536:	bf00      	nop

90003538 <_close>:

int _close(int file)
{
	return -1;
}
90003538:	f04f 30ff 	mov.w	r0, #4294967295
9000353c:	4770      	bx	lr
9000353e:	bf00      	nop

90003540 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003540:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90003544:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90003546:	604b      	str	r3, [r1, #4]
}
90003548:	4770      	bx	lr
9000354a:	bf00      	nop

9000354c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000354c:	2001      	movs	r0, #1
9000354e:	4770      	bx	lr

90003550 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003550:	2000      	movs	r0, #0
90003552:	4770      	bx	lr

90003554 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90003554:	4770      	bx	lr
90003556:	bf00      	nop

90003558 <_ZN23ApplicationFontProviderD0Ev>:
90003558:	b510      	push	{r4, lr}
9000355a:	4604      	mov	r4, r0
9000355c:	2104      	movs	r1, #4
9000355e:	f023 ffdf 	bl	90027520 <_ZdlPvj>
90003562:	4620      	mov	r0, r4
90003564:	bd10      	pop	{r4, pc}
90003566:	bf00      	nop

90003568 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003568:	2901      	cmp	r1, #1
{
9000356a:	b508      	push	{r3, lr}
    switch (typography)
9000356c:	d004      	beq.n	90003578 <_ZN23ApplicationFontProvider7getFontEt+0x10>
9000356e:	2902      	cmp	r1, #2
90003570:	d00a      	beq.n	90003588 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90003572:	b129      	cbz	r1, 90003580 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90003574:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003578:	f000 fe68 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6840      	ldr	r0, [r0, #4]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003580:	f000 fe64 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6800      	ldr	r0, [r0, #0]
}
90003586:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003588:	f000 fe60 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000358c:	6880      	ldr	r0, [r0, #8]
}
9000358e:	bd08      	pop	{r3, pc}

90003590 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003590:	4800      	ldr	r0, [pc, #0]	; (90003594 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90003592:	4770      	bx	lr
90003594:	90029ff8 	.word	0x90029ff8

90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003598:	200c      	movs	r0, #12
9000359a:	4770      	bx	lr

9000359c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000359c:	b169      	cbz	r1, 900035ba <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900035a0:	b530      	push	{r4, r5, lr}
900035a2:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900035a4:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035a6:	6895      	ldr	r5, [r2, #8]
900035a8:	f10d 0303 	add.w	r3, sp, #3
900035ac:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035ae:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035b0:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035b4:	47a8      	blx	r5
        return glyph;
    }
900035b6:	b003      	add	sp, #12
900035b8:	bd30      	pop	{r4, r5, pc}
            return 0;
900035ba:	4608      	mov	r0, r1
    }
900035bc:	4770      	bx	lr
900035be:	bf00      	nop

900035c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035c0:	89c0      	ldrh	r0, [r0, #14]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035c4:	8a00      	ldrh	r0, [r0, #16]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c8:	88c0      	ldrh	r0, [r0, #6]
900035ca:	4770      	bx	lr

900035cc <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035cc:	8880      	ldrh	r0, [r0, #4]
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035d6:	4770      	bx	lr

900035d8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d8:	7a80      	ldrb	r0, [r0, #10]
    }
900035da:	09c0      	lsrs	r0, r0, #7
900035dc:	4770      	bx	lr
900035de:	bf00      	nop

900035e0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035e0:	4770      	bx	lr
900035e2:	bf00      	nop

900035e4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035e4:	b510      	push	{r4, lr}
900035e6:	4604      	mov	r4, r0
    }
900035e8:	2108      	movs	r1, #8
900035ea:	f023 ff99 	bl	90027520 <_ZdlPvj>
900035ee:	4620      	mov	r0, r4
900035f0:	bd10      	pop	{r4, pc}
900035f2:	bf00      	nop

900035f4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035f4:	4770      	bx	lr
900035f6:	bf00      	nop

900035f8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f8:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035fc:	6808      	ldr	r0, [r1, #0]
900035fe:	6849      	ldr	r1, [r1, #4]
90003600:	c303      	stmia	r3!, {r0, r1}
    }
90003602:	4770      	bx	lr

90003604 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003608:	4770      	bx	lr
9000360a:	bf00      	nop

9000360c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
9000360c:	6041      	str	r1, [r0, #4]
    }
9000360e:	4770      	bx	lr

90003610 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90003610:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003614:	688a      	ldr	r2, [r1, #8]
90003616:	f8c0 c000 	str.w	ip, [r0]
9000361a:	6042      	str	r2, [r0, #4]
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003624:	4770      	bx	lr
90003626:	bf00      	nop

90003628 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003628:	4905      	ldr	r1, [pc, #20]	; (90003640 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
9000362a:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
9000362c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003630:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003634:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003638:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
9000363c:	4770      	bx	lr
9000363e:	bf00      	nop
90003640:	90003b45 	.word	0x90003b45

90003644 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003644:	2301      	movs	r3, #1
90003646:	7203      	strb	r3, [r0, #8]
    }
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f023 ff33 	bl	90027520 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f023 ff2b 	bl	90027520 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f023 ff22 	bl	90027520 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f023 ff1b 	bl	90027520 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f023 ff13 	bl	90027520 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003700:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003702:	f012 fdcf 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90003706:	6803      	ldr	r3, [r0, #0]
    }
90003708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000370c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000370e:	4718      	bx	r3

90003710 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003710:	b510      	push	{r4, lr}
90003712:	4604      	mov	r4, r0
        animationCounter++;
90003714:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003716:	b082      	sub	sp, #8
        animationCounter++;
90003718:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000371a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
9000371c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000371e:	4298      	cmp	r0, r3
        animationCounter++;
90003720:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
90003722:	d905      	bls.n	90003730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003724:	2201      	movs	r2, #1
            animationCounter = 0;
90003726:	2300      	movs	r3, #0
            done = true;
90003728:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
9000372a:	72a3      	strb	r3, [r4, #10]
    }
9000372c:	b002      	add	sp, #8
9000372e:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003730:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003734:	2100      	movs	r1, #0
90003736:	f014 fb9f 	bl	90017e78 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000373a:	f010 0201 	ands.w	r2, r0, #1
9000373e:	b283      	uxth	r3, r0
90003740:	d127      	bne.n	90003792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003742:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003744:	4a17      	ldr	r2, [pc, #92]	; (900037a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003746:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003748:	8810      	ldrh	r0, [r2, #0]
9000374a:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000374c:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000374e:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003750:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003752:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003754:	4669      	mov	r1, sp
        rect.width = width;
90003756:	8322      	strh	r2, [r4, #24]
90003758:	f8ad 2000 	strh.w	r2, [sp]
9000375c:	2200      	movs	r2, #0
9000375e:	f8ad 3004 	strh.w	r3, [sp, #4]
90003762:	6803      	ldr	r3, [r0, #0]
90003764:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003768:	4a0f      	ldr	r2, [pc, #60]	; (900037a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
9000376a:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
9000376c:	f9b2 2000 	ldrsh.w	r2, [r2]
90003770:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
90003774:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90003776:	7aa3      	ldrb	r3, [r4, #10]
90003778:	2b01      	cmp	r3, #1
9000377a:	d1d7      	bne.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
9000377c:	4b0b      	ldr	r3, [pc, #44]	; (900037ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
9000377e:	781b      	ldrb	r3, [r3, #0]
90003780:	2b00      	cmp	r3, #0
90003782:	d0d3      	beq.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90003784:	f012 fd8e 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
    }
90003788:	b002      	add	sp, #8
9000378a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
9000378e:	f012 bd8f 	b.w	900162b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003792:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003796:	2800      	cmp	r0, #0
90003798:	bfd8      	it	le
9000379a:	460a      	movle	r2, r1
9000379c:	4413      	add	r3, r2
9000379e:	b29b      	uxth	r3, r3
900037a0:	81e3      	strh	r3, [r4, #14]
900037a2:	e7cf      	b.n	90003744 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037a4:	240396f8 	.word	0x240396f8
900037a8:	240396fa 	.word	0x240396fa
900037ac:	24039702 	.word	0x24039702

900037b0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900037b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037b4:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900037b8:	b083      	sub	sp, #12
900037ba:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900037bc:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037be:	9301      	str	r3, [sp, #4]
900037c0:	6803      	ldr	r3, [r0, #0]
900037c2:	6a1b      	ldr	r3, [r3, #32]
900037c4:	4798      	blx	r3
900037c6:	f5b0 7f64 	cmp.w	r0, #912	; 0x390
900037ca:	f0c0 80ba 	bcc.w	90003942 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900037ce:	6868      	ldr	r0, [r5, #4]
900037d0:	6803      	ldr	r3, [r0, #0]
900037d2:	6a1b      	ldr	r3, [r3, #32]
900037d4:	4798      	blx	r3
900037d6:	280f      	cmp	r0, #15
900037d8:	f240 80bf 	bls.w	9000395a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900037dc:	68e8      	ldr	r0, [r5, #12]
900037de:	6803      	ldr	r3, [r0, #0]
900037e0:	6a1b      	ldr	r3, [r3, #32]
900037e2:	4798      	blx	r3
900037e4:	2837      	cmp	r0, #55	; 0x37
900037e6:	f240 80b2 	bls.w	9000394e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
900037ea:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003994 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
900037ee:	f012 fd59 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900037f2:	3004      	adds	r0, #4
900037f4:	f012 fda3 	bl	9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900037f8:	f8d9 0000 	ldr.w	r0, [r9]
900037fc:	b140      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
900037fe:	6803      	ldr	r3, [r0, #0]
90003800:	68db      	ldr	r3, [r3, #12]
90003802:	4798      	blx	r3
    if (*currentTrans)
90003804:	f8d9 0000 	ldr.w	r0, [r9]
90003808:	b110      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
9000380a:	6803      	ldr	r3, [r0, #0]
9000380c:	681b      	ldr	r3, [r3, #0]
9000380e:	4798      	blx	r3
    if (*currentScreen)
90003810:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003998 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
90003814:	f8d8 0000 	ldr.w	r0, [r8]
90003818:	2800      	cmp	r0, #0
9000381a:	d07f      	beq.n	9000391c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
9000381c:	6803      	ldr	r3, [r0, #0]
9000381e:	695b      	ldr	r3, [r3, #20]
90003820:	4798      	blx	r3
    if (*currentPresenter)
90003822:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003826:	2800      	cmp	r0, #0
90003828:	d073      	beq.n	90003912 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
9000382a:	6803      	ldr	r3, [r0, #0]
9000382c:	685b      	ldr	r3, [r3, #4]
9000382e:	4798      	blx	r3
    if (*currentScreen)
90003830:	f8d8 0000 	ldr.w	r0, [r8]
90003834:	b110      	cbz	r0, 9000383c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
90003836:	6803      	ldr	r3, [r0, #0]
90003838:	681b      	ldr	r3, [r3, #0]
9000383a:	4798      	blx	r3
    if (*currentPresenter)
9000383c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003840:	b110      	cbz	r0, 90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003842:	6803      	ldr	r3, [r0, #0]
90003844:	689b      	ldr	r3, [r3, #8]
90003846:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003848:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000384a:	2100      	movs	r1, #0
9000384c:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
9000384e:	468a      	mov	sl, r1
90003850:	6a52      	ldr	r2, [r2, #36]	; 0x24
90003852:	4790      	blx	r2
          solid()
90003854:	4a44      	ldr	r2, [pc, #272]	; (90003968 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
90003856:	f100 0b10 	add.w	fp, r0, #16
9000385a:	4604      	mov	r4, r0
9000385c:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
9000385e:	2214      	movs	r2, #20
          solid()
90003860:	4651      	mov	r1, sl
90003862:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
90003866:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
9000386a:	2228      	movs	r2, #40	; 0x28
9000386c:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003870:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
90003874:	4658      	mov	r0, fp
90003876:	f024 f909 	bl	90027a8c <memset>
            targetValue = HAL::DISPLAY_WIDTH;
9000387a:	4a3c      	ldr	r2, [pc, #240]	; (9000396c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000387c:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
9000387e:	f44f 7180 	mov.w	r1, #256	; 0x100
90003882:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
90003886:	f8c4 a014 	str.w	sl, [r4, #20]
9000388a:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
9000388c:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000388e:	4a38      	ldr	r2, [pc, #224]	; (90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
90003890:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
90003894:	8362      	strh	r2, [r4, #26]
90003896:	6802      	ldr	r2, [r0, #0]
90003898:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
9000389a:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
9000389c:	4935      	ldr	r1, [pc, #212]	; (90003974 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
9000389e:	6121      	str	r1, [r4, #16]
900038a0:	4651      	mov	r1, sl
900038a2:	4790      	blx	r2
900038a4:	4606      	mov	r6, r0
900038a6:	f002 feb5 	bl	90006614 <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	4651      	mov	r1, sl
900038ae:	6803      	ldr	r3, [r0, #0]
900038b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900038b2:	4798      	blx	r3
900038b4:	4605      	mov	r5, r0
900038b6:	4631      	mov	r1, r6
900038b8:	f002 fe36 	bl	90006528 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900038bc:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900038c0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900038c4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900038c8:	2d00      	cmp	r5, #0
900038ca:	d02c      	beq.n	90003926 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900038cc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900038ce:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900038d0:	4630      	mov	r0, r6
900038d2:	6013      	str	r3, [r2, #0]
900038d4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900038d6:	60aa      	str	r2, [r5, #8]
900038d8:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
900038da:	63f5      	str	r5, [r6, #60]	; 0x3c
900038dc:	4798      	blx	r3
    newPresenter->activate();
900038de:	682b      	ldr	r3, [r5, #0]
900038e0:	4628      	mov	r0, r5
900038e2:	681b      	ldr	r3, [r3, #0]
900038e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900038e6:	4621      	mov	r1, r4
900038e8:	4630      	mov	r0, r6
900038ea:	f014 fabf 	bl	90017e6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900038ee:	6823      	ldr	r3, [r4, #0]
900038f0:	4a21      	ldr	r2, [pc, #132]	; (90003978 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
900038f2:	691b      	ldr	r3, [r3, #16]
900038f4:	4293      	cmp	r3, r2
900038f6:	d118      	bne.n	9000392a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
900038f8:	6860      	ldr	r0, [r4, #4]
900038fa:	4659      	mov	r1, fp
900038fc:	6803      	ldr	r3, [r0, #0]
900038fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003900:	4798      	blx	r3
    newTransition->invalidate();
90003902:	6823      	ldr	r3, [r4, #0]
90003904:	4a1d      	ldr	r2, [pc, #116]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003906:	695b      	ldr	r3, [r3, #20]
90003908:	4293      	cmp	r3, r2
9000390a:	d115      	bne.n	90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
9000390c:	b003      	add	sp, #12
9000390e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003912:	f8d8 0000 	ldr.w	r0, [r8]
90003916:	2800      	cmp	r0, #0
90003918:	d18d      	bne.n	90003836 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
9000391a:	e795      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
9000391c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003920:	2800      	cmp	r0, #0
90003922:	d182      	bne.n	9000382a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003924:	e790      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003926:	462b      	mov	r3, r5
90003928:	e7d1      	b.n	900038ce <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
9000392a:	4620      	mov	r0, r4
9000392c:	4798      	blx	r3
    newTransition->invalidate();
9000392e:	6823      	ldr	r3, [r4, #0]
90003930:	4a12      	ldr	r2, [pc, #72]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003932:	695b      	ldr	r3, [r3, #20]
90003934:	4293      	cmp	r3, r2
90003936:	d0e9      	beq.n	9000390c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003938:	4620      	mov	r0, r4
9000393a:	b003      	add	sp, #12
9000393c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003940:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003942:	4b0f      	ldr	r3, [pc, #60]	; (90003980 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003944:	21a3      	movs	r1, #163	; 0xa3
90003946:	4a0f      	ldr	r2, [pc, #60]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003948:	480f      	ldr	r0, [pc, #60]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
9000394a:	f023 fe17 	bl	9002757c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000394e:	4b0f      	ldr	r3, [pc, #60]	; (9000398c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003950:	21a5      	movs	r1, #165	; 0xa5
90003952:	4a0c      	ldr	r2, [pc, #48]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003954:	480c      	ldr	r0, [pc, #48]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003956:	f023 fe11 	bl	9002757c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000395a:	4b0d      	ldr	r3, [pc, #52]	; (90003990 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
9000395c:	21a4      	movs	r1, #164	; 0xa4
9000395e:	4a09      	ldr	r2, [pc, #36]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003960:	4809      	ldr	r0, [pc, #36]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003962:	f023 fe0b 	bl	9002757c <__assert_func>
90003966:	bf00      	nop
90003968:	9002a77c 	.word	0x9002a77c
9000396c:	240396f8 	.word	0x240396f8
90003970:	240396fa 	.word	0x240396fa
90003974:	9002a684 	.word	0x9002a684
90003978:	90003669 	.word	0x90003669
9000397c:	90003675 	.word	0x90003675
90003980:	9002a0f8 	.word	0x9002a0f8
90003984:	9002a188 	.word	0x9002a188
90003988:	9002a2b4 	.word	0x9002a2b4
9000398c:	9002a3a0 	.word	0x9002a3a0
90003990:	9002a2fc 	.word	0x9002a2fc
90003994:	2403974c 	.word	0x2403974c
90003998:	24039748 	.word	0x24039748

9000399c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl()
{
9000399c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900039a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
900039a4:	4607      	mov	r7, r0
900039a6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900039a8:	68a0      	ldr	r0, [r4, #8]
900039aa:	6803      	ldr	r3, [r0, #0]
900039ac:	6a1b      	ldr	r3, [r3, #32]
900039ae:	4798      	blx	r3
900039b0:	f242 6327 	movw	r3, #9767	; 0x2627
900039b4:	4298      	cmp	r0, r3
900039b6:	f240 809e 	bls.w	90003af6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x15a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900039ba:	6860      	ldr	r0, [r4, #4]
900039bc:	6803      	ldr	r3, [r0, #0]
900039be:	6a1b      	ldr	r3, [r3, #32]
900039c0:	4798      	blx	r3
900039c2:	280f      	cmp	r0, #15
900039c4:	f240 80a3 	bls.w	90003b0e <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x172>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900039c8:	68e0      	ldr	r0, [r4, #12]
900039ca:	6803      	ldr	r3, [r0, #0]
900039cc:	6a1b      	ldr	r3, [r3, #32]
900039ce:	4798      	blx	r3
900039d0:	280b      	cmp	r0, #11
900039d2:	f240 8096 	bls.w	90003b02 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x166>
    if (*currentTrans)
900039d6:	f8df 9164 	ldr.w	r9, [pc, #356]	; 90003b3c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
900039da:	f012 fc63 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
900039de:	3004      	adds	r0, #4
900039e0:	f012 fcad 	bl	9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900039e4:	f8d9 0000 	ldr.w	r0, [r9]
900039e8:	b140      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->tearDown();
900039ea:	6803      	ldr	r3, [r0, #0]
900039ec:	68db      	ldr	r3, [r3, #12]
900039ee:	4798      	blx	r3
    if (*currentTrans)
900039f0:	f8d9 0000 	ldr.w	r0, [r9]
900039f4:	b110      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->~Transition();
900039f6:	6803      	ldr	r3, [r0, #0]
900039f8:	681b      	ldr	r3, [r3, #0]
900039fa:	4798      	blx	r3
    if (*currentScreen)
900039fc:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003b40 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a4>
90003a00:	f8d8 0000 	ldr.w	r0, [r8]
90003a04:	2800      	cmp	r0, #0
90003a06:	d063      	beq.n	90003ad0 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x134>
        (*currentScreen)->tearDownScreen();
90003a08:	6803      	ldr	r3, [r0, #0]
90003a0a:	695b      	ldr	r3, [r3, #20]
90003a0c:	4798      	blx	r3
    if (*currentPresenter)
90003a0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a12:	2800      	cmp	r0, #0
90003a14:	d057      	beq.n	90003ac6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x12a>
        (*currentPresenter)->deactivate();
90003a16:	6803      	ldr	r3, [r0, #0]
90003a18:	685b      	ldr	r3, [r3, #4]
90003a1a:	4798      	blx	r3
    if (*currentScreen)
90003a1c:	f8d8 0000 	ldr.w	r0, [r8]
90003a20:	b110      	cbz	r0, 90003a28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->~Screen();
90003a22:	6803      	ldr	r3, [r0, #0]
90003a24:	681b      	ldr	r3, [r3, #0]
90003a26:	4798      	blx	r3
    if (*currentPresenter)
90003a28:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a2c:	b110      	cbz	r0, 90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003a2e:	6803      	ldr	r3, [r0, #0]
90003a30:	689b      	ldr	r3, [r3, #8]
90003a32:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003a34:	68e0      	ldr	r0, [r4, #12]
90003a36:	2100      	movs	r1, #0
90003a38:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003a3a:	468b      	mov	fp, r1
90003a3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a3e:	4798      	blx	r3
90003a40:	4b36      	ldr	r3, [pc, #216]	; (90003b1c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x180>)
90003a42:	4605      	mov	r5, r0
90003a44:	f8c0 b004 	str.w	fp, [r0, #4]
90003a48:	f880 b008 	strb.w	fp, [r0, #8]
90003a4c:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003a4e:	68a0      	ldr	r0, [r4, #8]
90003a50:	602b      	str	r3, [r5, #0]
90003a52:	6803      	ldr	r3, [r0, #0]
90003a54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a56:	4798      	blx	r3
90003a58:	4606      	mov	r6, r0
90003a5a:	f003 fab1 	bl	90006fc0 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003a5e:	6860      	ldr	r0, [r4, #4]
90003a60:	4659      	mov	r1, fp
90003a62:	6803      	ldr	r3, [r0, #0]
90003a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a66:	4798      	blx	r3
90003a68:	4604      	mov	r4, r0
90003a6a:	4631      	mov	r1, r6
90003a6c:	f003 fa30 	bl	90006ed0 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003a70:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003a74:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003a78:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003a7c:	2c00      	cmp	r4, #0
90003a7e:	d02c      	beq.n	90003ada <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x13e>
90003a80:	1d23      	adds	r3, r4, #4
90003a82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003a86:	4630      	mov	r0, r6
90003a88:	6833      	ldr	r3, [r6, #0]
90003a8a:	f8c4 a008 	str.w	sl, [r4, #8]
90003a8e:	68db      	ldr	r3, [r3, #12]
90003a90:	63f4      	str	r4, [r6, #60]	; 0x3c
90003a92:	4798      	blx	r3
    newPresenter->activate();
90003a94:	6823      	ldr	r3, [r4, #0]
90003a96:	4620      	mov	r0, r4
90003a98:	681b      	ldr	r3, [r3, #0]
90003a9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a9c:	4629      	mov	r1, r5
90003a9e:	4630      	mov	r0, r6
90003aa0:	f014 f9e4 	bl	90017e6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003aa4:	682b      	ldr	r3, [r5, #0]
90003aa6:	491e      	ldr	r1, [pc, #120]	; (90003b20 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x184>)
90003aa8:	691a      	ldr	r2, [r3, #16]
90003aaa:	428a      	cmp	r2, r1
90003aac:	d117      	bne.n	90003ade <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90003aae:	695b      	ldr	r3, [r3, #20]
90003ab0:	4a1c      	ldr	r2, [pc, #112]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ab2:	4293      	cmp	r3, r2
90003ab4:	d11a      	bne.n	90003aec <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x150>
        Application::getInstance()->invalidate();
90003ab6:	f012 fbf5 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90003aba:	6803      	ldr	r3, [r0, #0]
90003abc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003abe:	b001      	add	sp, #4
90003ac0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003ac4:	4718      	bx	r3
    if (*currentScreen)
90003ac6:	f8d8 0000 	ldr.w	r0, [r8]
90003aca:	2800      	cmp	r0, #0
90003acc:	d1a9      	bne.n	90003a22 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x86>
90003ace:	e7b1      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    if (*currentPresenter)
90003ad0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003ad4:	2800      	cmp	r0, #0
90003ad6:	d19e      	bne.n	90003a16 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x7a>
90003ad8:	e7ac      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    model->bind(newPresenter);
90003ada:	4623      	mov	r3, r4
90003adc:	e7d1      	b.n	90003a82 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0xe6>
    newTransition->init();
90003ade:	4628      	mov	r0, r5
90003ae0:	4790      	blx	r2
    newTransition->invalidate();
90003ae2:	682b      	ldr	r3, [r5, #0]
90003ae4:	4a0f      	ldr	r2, [pc, #60]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ae6:	695b      	ldr	r3, [r3, #20]
90003ae8:	4293      	cmp	r3, r2
90003aea:	d0e4      	beq.n	90003ab6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x11a>
90003aec:	4628      	mov	r0, r5
90003aee:	b001      	add	sp, #4
90003af0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003af4:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003af6:	4b0c      	ldr	r3, [pc, #48]	; (90003b28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x18c>)
90003af8:	21a3      	movs	r1, #163	; 0xa3
90003afa:	4a0c      	ldr	r2, [pc, #48]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003afc:	480c      	ldr	r0, [pc, #48]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003afe:	f023 fd3d 	bl	9002757c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b02:	4b0c      	ldr	r3, [pc, #48]	; (90003b34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x198>)
90003b04:	21a5      	movs	r1, #165	; 0xa5
90003b06:	4a09      	ldr	r2, [pc, #36]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b08:	4809      	ldr	r0, [pc, #36]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b0a:	f023 fd37 	bl	9002757c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b0e:	4b0a      	ldr	r3, [pc, #40]	; (90003b38 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x19c>)
90003b10:	21a4      	movs	r1, #164	; 0xa4
90003b12:	4a06      	ldr	r2, [pc, #24]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b14:	4806      	ldr	r0, [pc, #24]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b16:	f023 fd31 	bl	9002757c <__assert_func>
90003b1a:	bf00      	nop
90003b1c:	9002a758 	.word	0x9002a758
90003b20:	90003609 	.word	0x90003609
90003b24:	90003701 	.word	0x90003701
90003b28:	9002a0f8 	.word	0x9002a0f8
90003b2c:	9002a444 	.word	0x9002a444
90003b30:	9002a2b4 	.word	0x9002a2b4
90003b34:	9002a3a0 	.word	0x9002a3a0
90003b38:	9002a2fc 	.word	0x9002a2fc
90003b3c:	2403974c 	.word	0x2403974c
90003b40:	24039748 	.word	0x24039748

90003b44 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b4c:	4607      	mov	r7, r0
90003b4e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b50:	68a0      	ldr	r0, [r4, #8]
90003b52:	6803      	ldr	r3, [r0, #0]
90003b54:	6a1b      	ldr	r3, [r3, #32]
90003b56:	4798      	blx	r3
90003b58:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
90003b5c:	f0c0 809e 	bcc.w	90003c9c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b60:	6860      	ldr	r0, [r4, #4]
90003b62:	6803      	ldr	r3, [r0, #0]
90003b64:	6a1b      	ldr	r3, [r3, #32]
90003b66:	4798      	blx	r3
90003b68:	280f      	cmp	r0, #15
90003b6a:	f240 80a3 	bls.w	90003cb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b6e:	68e0      	ldr	r0, [r4, #12]
90003b70:	6803      	ldr	r3, [r0, #0]
90003b72:	6a1b      	ldr	r3, [r3, #32]
90003b74:	4798      	blx	r3
90003b76:	280b      	cmp	r0, #11
90003b78:	f240 8096 	bls.w	90003ca8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b7c:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003ce0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b80:	f012 fb90 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90003b84:	3004      	adds	r0, #4
90003b86:	f012 fbda 	bl	9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b8a:	f8d9 0000 	ldr.w	r0, [r9]
90003b8e:	b140      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b90:	6803      	ldr	r3, [r0, #0]
90003b92:	68db      	ldr	r3, [r3, #12]
90003b94:	4798      	blx	r3
    if (*currentTrans)
90003b96:	f8d9 0000 	ldr.w	r0, [r9]
90003b9a:	b110      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b9c:	6803      	ldr	r3, [r0, #0]
90003b9e:	681b      	ldr	r3, [r3, #0]
90003ba0:	4798      	blx	r3
    if (*currentScreen)
90003ba2:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003ce4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003ba6:	f8d8 0000 	ldr.w	r0, [r8]
90003baa:	2800      	cmp	r0, #0
90003bac:	d063      	beq.n	90003c76 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003bae:	6803      	ldr	r3, [r0, #0]
90003bb0:	695b      	ldr	r3, [r3, #20]
90003bb2:	4798      	blx	r3
    if (*currentPresenter)
90003bb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb8:	2800      	cmp	r0, #0
90003bba:	d057      	beq.n	90003c6c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bbc:	6803      	ldr	r3, [r0, #0]
90003bbe:	685b      	ldr	r3, [r3, #4]
90003bc0:	4798      	blx	r3
    if (*currentScreen)
90003bc2:	f8d8 0000 	ldr.w	r0, [r8]
90003bc6:	b110      	cbz	r0, 90003bce <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc8:	6803      	ldr	r3, [r0, #0]
90003bca:	681b      	ldr	r3, [r3, #0]
90003bcc:	4798      	blx	r3
    if (*currentPresenter)
90003bce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bd2:	b110      	cbz	r0, 90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bd4:	6803      	ldr	r3, [r0, #0]
90003bd6:	689b      	ldr	r3, [r3, #8]
90003bd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bda:	68e0      	ldr	r0, [r4, #12]
90003bdc:	2100      	movs	r1, #0
90003bde:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003be0:	468b      	mov	fp, r1
90003be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003be4:	4798      	blx	r3
90003be6:	4b36      	ldr	r3, [pc, #216]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be8:	4605      	mov	r5, r0
90003bea:	f8c0 b004 	str.w	fp, [r0, #4]
90003bee:	f880 b008 	strb.w	fp, [r0, #8]
90003bf2:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bf4:	68a0      	ldr	r0, [r4, #8]
90003bf6:	602b      	str	r3, [r5, #0]
90003bf8:	6803      	ldr	r3, [r0, #0]
90003bfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bfc:	4798      	blx	r3
90003bfe:	4606      	mov	r6, r0
90003c00:	f002 fc6c 	bl	900064dc <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003c04:	6860      	ldr	r0, [r4, #4]
90003c06:	4659      	mov	r1, fp
90003c08:	6803      	ldr	r3, [r0, #0]
90003c0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c0c:	4798      	blx	r3
90003c0e:	4604      	mov	r4, r0
90003c10:	4631      	mov	r1, r6
90003c12:	f002 fc37 	bl	90006484 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c22:	2c00      	cmp	r4, #0
90003c24:	d02c      	beq.n	90003c80 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c26:	1d23      	adds	r3, r4, #4
90003c28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c2c:	4630      	mov	r0, r6
90003c2e:	6833      	ldr	r3, [r6, #0]
90003c30:	f8c4 a008 	str.w	sl, [r4, #8]
90003c34:	68db      	ldr	r3, [r3, #12]
90003c36:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c38:	4798      	blx	r3
    newPresenter->activate();
90003c3a:	6823      	ldr	r3, [r4, #0]
90003c3c:	4620      	mov	r0, r4
90003c3e:	681b      	ldr	r3, [r3, #0]
90003c40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c42:	4629      	mov	r1, r5
90003c44:	4630      	mov	r0, r6
90003c46:	f014 f911 	bl	90017e6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c4a:	682b      	ldr	r3, [r5, #0]
90003c4c:	491d      	ldr	r1, [pc, #116]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c4e:	691a      	ldr	r2, [r3, #16]
90003c50:	428a      	cmp	r2, r1
90003c52:	d117      	bne.n	90003c84 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c54:	695b      	ldr	r3, [r3, #20]
90003c56:	4a1c      	ldr	r2, [pc, #112]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c58:	4293      	cmp	r3, r2
90003c5a:	d11a      	bne.n	90003c92 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c5c:	f012 fb22 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90003c60:	6803      	ldr	r3, [r0, #0]
90003c62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c64:	b001      	add	sp, #4
90003c66:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c6a:	4718      	bx	r3
    if (*currentScreen)
90003c6c:	f8d8 0000 	ldr.w	r0, [r8]
90003c70:	2800      	cmp	r0, #0
90003c72:	d1a9      	bne.n	90003bc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c74:	e7b1      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c7a:	2800      	cmp	r0, #0
90003c7c:	d19e      	bne.n	90003bbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c7e:	e7ac      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c80:	4623      	mov	r3, r4
90003c82:	e7d1      	b.n	90003c28 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c84:	4628      	mov	r0, r5
90003c86:	4790      	blx	r2
    newTransition->invalidate();
90003c88:	682b      	ldr	r3, [r5, #0]
90003c8a:	4a0f      	ldr	r2, [pc, #60]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c8c:	695b      	ldr	r3, [r3, #20]
90003c8e:	4293      	cmp	r3, r2
90003c90:	d0e4      	beq.n	90003c5c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c92:	4628      	mov	r0, r5
90003c94:	b001      	add	sp, #4
90003c96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c9a:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c9c:	4b0b      	ldr	r3, [pc, #44]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c9e:	21a3      	movs	r1, #163	; 0xa3
90003ca0:	4a0b      	ldr	r2, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca2:	480c      	ldr	r0, [pc, #48]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca4:	f023 fc6a 	bl	9002757c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca8:	4b0b      	ldr	r3, [pc, #44]	; (90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003caa:	21a5      	movs	r1, #165	; 0xa5
90003cac:	4a08      	ldr	r2, [pc, #32]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cae:	4809      	ldr	r0, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb0:	f023 fc64 	bl	9002757c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cb4:	4b09      	ldr	r3, [pc, #36]	; (90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cb6:	21a4      	movs	r1, #164	; 0xa4
90003cb8:	4a05      	ldr	r2, [pc, #20]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cba:	4806      	ldr	r0, [pc, #24]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cbc:	f023 fc5e 	bl	9002757c <__assert_func>
90003cc0:	9002a758 	.word	0x9002a758
90003cc4:	90003609 	.word	0x90003609
90003cc8:	90003701 	.word	0x90003701
90003ccc:	9002a0f8 	.word	0x9002a0f8
90003cd0:	9002a564 	.word	0x9002a564
90003cd4:	9002a2b4 	.word	0x9002a2b4
90003cd8:	9002a3a0 	.word	0x9002a3a0
90003cdc:	9002a2fc 	.word	0x9002a2fc
90003ce0:	2403974c 	.word	0x2403974c
90003ce4:	24039748 	.word	0x24039748

90003ce8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ce8:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003cec:	b1d3      	cbz	r3, 90003d24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003cee:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003cf0:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003cf2:	68d1      	ldr	r1, [r2, #12]
90003cf4:	4604      	mov	r4, r0
90003cf6:	4818      	ldr	r0, [pc, #96]	; (90003d58 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003cf8:	4281      	cmp	r1, r0
90003cfa:	d118      	bne.n	90003d2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003cfc:	6858      	ldr	r0, [r3, #4]
90003cfe:	b180      	cbz	r0, 90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d00:	6899      	ldr	r1, [r3, #8]
90003d02:	b1e1      	cbz	r1, 90003d3e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003d04:	6892      	ldr	r2, [r2, #8]
90003d06:	4915      	ldr	r1, [pc, #84]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d08:	428a      	cmp	r2, r1
90003d0a:	d122      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d0c:	68da      	ldr	r2, [r3, #12]
90003d0e:	6858      	ldr	r0, [r3, #4]
90003d10:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003d14:	07d2      	lsls	r2, r2, #31
90003d16:	d406      	bmi.n	90003d26 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003d18:	689b      	ldr	r3, [r3, #8]
90003d1a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003d1c:	2300      	movs	r3, #0
90003d1e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003d22:	bd70      	pop	{r4, r5, r6, pc}
90003d24:	4770      	bx	lr
90003d26:	6899      	ldr	r1, [r3, #8]
90003d28:	6803      	ldr	r3, [r0, #0]
90003d2a:	585b      	ldr	r3, [r3, r1]
90003d2c:	e7f5      	b.n	90003d1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003d2e:	4618      	mov	r0, r3
90003d30:	4788      	blx	r1
90003d32:	2800      	cmp	r0, #0
90003d34:	d0f5      	beq.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003d36:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003d3a:	681a      	ldr	r2, [r3, #0]
90003d3c:	e7e2      	b.n	90003d04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003d3e:	68dd      	ldr	r5, [r3, #12]
90003d40:	07ee      	lsls	r6, r5, #31
90003d42:	d5ee      	bpl.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d44:	6892      	ldr	r2, [r2, #8]
90003d46:	4e05      	ldr	r6, [pc, #20]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d48:	42b2      	cmp	r2, r6
90003d4a:	d102      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d4c:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003d50:	e7ea      	b.n	90003d28 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003d52:	4618      	mov	r0, r3
90003d54:	4790      	blx	r2
90003d56:	e7e1      	b.n	90003d1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003d58:	90003699 	.word	0x90003699
90003d5c:	90003679 	.word	0x90003679

90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90003d60:	b570      	push	{r4, r5, r6, lr}
90003d62:	4604      	mov	r4, r0
90003d64:	4615      	mov	r5, r2
90003d66:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90003d68:	f012 fb8a 	bl	90016480 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90003d6c:	4a1d      	ldr	r2, [pc, #116]	; (90003de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90003d6e:	2300      	movs	r3, #0
      frontendHeap(heap),
90003d70:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90003d74:	6014      	str	r4, [r2, #0]
        return instance;
90003d76:	4d1c      	ldr	r5, [pc, #112]	; (90003de8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90003d78:	4a1c      	ldr	r2, [pc, #112]	; (90003dec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90003d7a:	6828      	ldr	r0, [r5, #0]
90003d7c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90003d7e:	4a1c      	ldr	r2, [pc, #112]	; (90003df0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90003d80:	491c      	ldr	r1, [pc, #112]	; (90003df4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90003d82:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90003d86:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90003d8a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90003d8e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003d92:	6802      	ldr	r2, [r0, #0]
90003d94:	6892      	ldr	r2, [r2, #8]
90003d96:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90003d98:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90003d9c:	d11f      	bne.n	90003dde <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90003d9e:	f44f 7380 	mov.w	r3, #256	; 0x100
90003da2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90003da6:	2000      	movs	r0, #0
90003da8:	f000 fa02 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003dac:	682b      	ldr	r3, [r5, #0]
90003dae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003db2:	b192      	cbz	r2, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90003db4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003db6:	b180      	cbz	r0, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90003db8:	f01b fd11 	bl	9001f7de <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90003dbc:	682b      	ldr	r3, [r5, #0]
90003dbe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003dc2:	b12a      	cbz	r2, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90003dc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003dc6:	b118      	cbz	r0, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dc8:	f01b fd84 	bl	9001f8d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dcc:	4620      	mov	r0, r4
90003dce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003dd0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dd2:	f01b fd7f 	bl	9001f8d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dd6:	4620      	mov	r0, r4
90003dd8:	bd70      	pop	{r4, r5, r6, pc}
90003dda:	6898      	ldr	r0, [r3, #8]
90003ddc:	e7ec      	b.n	90003db8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003dde:	4619      	mov	r1, r3
90003de0:	4790      	blx	r2
90003de2:	e7e0      	b.n	90003da6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90003de4:	24039758 	.word	0x24039758
90003de8:	24039704 	.word	0x24039704
90003dec:	9002a704 	.word	0x9002a704
90003df0:	9002a6ec 	.word	0x9002a6ec
90003df4:	90000665 	.word	0x90000665

90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003df8:	4905      	ldr	r1, [pc, #20]	; (90003e10 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
90003dfa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003dfc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e00:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e04:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e08:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e0c:	4770      	bx	lr
90003e0e:	bf00      	nop
90003e10:	90003b45 	.word	0x90003b45

90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
90003e14:	4905      	ldr	r1, [pc, #20]	; (90003e2c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
90003e16:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e1c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e24:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e28:	4770      	bx	lr
90003e2a:	bf00      	nop
90003e2c:	900037b1 	.word	0x900037b1

90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>:
90003e30:	4905      	ldr	r1, [pc, #20]	; (90003e48 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv+0x18>)
90003e32:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e38:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e40:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e44:	4770      	bx	lr
90003e46:	bf00      	nop
90003e48:	9000399d 	.word	0x9000399d

90003e4c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90003e4c:	6a40      	ldr	r0, [r0, #36]	; 0x24
90003e4e:	4770      	bx	lr

90003e50 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90003e50:	6a80      	ldr	r0, [r0, #40]	; 0x28
90003e52:	4770      	bx	lr

90003e54 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90003e54:	4770      	bx	lr
90003e56:	bf00      	nop

90003e58 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90003e58:	888b      	ldrh	r3, [r1, #4]
90003e5a:	69c0      	ldr	r0, [r0, #28]
90003e5c:	0adb      	lsrs	r3, r3, #11
90003e5e:	680a      	ldr	r2, [r1, #0]
90003e60:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90003e64:	4410      	add	r0, r2
90003e66:	4770      	bx	lr

90003e68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90003e68:	b1da      	cbz	r2, 90003ea2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90003e6a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90003e6c:	7b14      	ldrb	r4, [r2, #12]
90003e6e:	b1b4      	cbz	r4, 90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90003e70:	f892 c00d 	ldrb.w	ip, [r2, #13]
90003e74:	f892 e00b 	ldrb.w	lr, [r2, #11]
90003e78:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90003e7c:	6a03      	ldr	r3, [r0, #32]
90003e7e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90003e82:	ea4e 0202 	orr.w	r2, lr, r2
90003e86:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e8a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90003e8e:	881a      	ldrh	r2, [r3, #0]
90003e90:	428a      	cmp	r2, r1
90003e92:	d008      	beq.n	90003ea6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e94:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90003e98:	d801      	bhi.n	90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e9a:	4283      	cmp	r3, r0
90003e9c:	d1f7      	bne.n	90003e8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90003e9e:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90003ea0:	bd10      	pop	{r4, pc}
        return 0;
90003ea2:	4610      	mov	r0, r2
}
90003ea4:	4770      	bx	lr
            return kerndata->distance;
90003ea6:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90003eaa:	bd10      	pop	{r4, pc}

90003eac <_ZN8touchgfx13GeneratedFontD0Ev>:
90003eac:	b510      	push	{r4, lr}
90003eae:	4604      	mov	r4, r0
90003eb0:	212c      	movs	r1, #44	; 0x2c
90003eb2:	f023 fb35 	bl	90027520 <_ZdlPvj>
90003eb6:	4620      	mov	r0, r4
90003eb8:	bd10      	pop	{r4, pc}
90003eba:	bf00      	nop

90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ebc:	b530      	push	{r4, r5, lr}
90003ebe:	b08b      	sub	sp, #44	; 0x2c
90003ec0:	4604      	mov	r4, r0
90003ec2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90003ec6:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ec8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
90003ecc:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ece:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90003ed2:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ed4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90003ed8:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eda:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
90003ede:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90003ee4:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90003eea:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eec:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
90003ef0:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ef2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90003ef6:	9508      	str	r5, [sp, #32]
90003ef8:	f013 fb22 	bl	90017540 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90003efc:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
90003efe:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90003f00:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90003f02:	9b16      	ldr	r3, [sp, #88]	; 0x58
90003f04:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90003f06:	9b19      	ldr	r3, [sp, #100]	; 0x64
90003f08:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90003f0a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90003f0c:	62a3      	str	r3, [r4, #40]	; 0x28
90003f0e:	4b02      	ldr	r3, [pc, #8]	; (90003f18 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90003f10:	6023      	str	r3, [r4, #0]
}
90003f12:	b00b      	add	sp, #44	; 0x2c
90003f14:	bd30      	pop	{r4, r5, pc}
90003f16:	bf00      	nop
90003f18:	9002a7a0 	.word	0x9002a7a0

90003f1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f1c:	4770      	bx	lr
90003f1e:	bf00      	nop

90003f20 <_Z23getFont_verdana_10_4bppv>:
{
90003f20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f22:	4d18      	ldr	r5, [pc, #96]	; (90003f84 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90003f24:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f26:	682c      	ldr	r4, [r5, #0]
90003f28:	f3bf 8f5b 	dmb	ish
90003f2c:	f014 0401 	ands.w	r4, r4, #1
90003f30:	d002      	beq.n	90003f38 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90003f32:	4815      	ldr	r0, [pc, #84]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f34:	b00f      	add	sp, #60	; 0x3c
90003f36:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f38:	4628      	mov	r0, r5
90003f3a:	f023 faf3 	bl	90027524 <__cxa_guard_acquire>
90003f3e:	2800      	cmp	r0, #0
90003f40:	d0f7      	beq.n	90003f32 <_Z23getFont_verdana_10_4bppv+0x12>
90003f42:	213f      	movs	r1, #63	; 0x3f
90003f44:	2201      	movs	r2, #1
90003f46:	230a      	movs	r3, #10
90003f48:	2004      	movs	r0, #4
90003f4a:	9204      	str	r2, [sp, #16]
90003f4c:	9300      	str	r3, [sp, #0]
90003f4e:	9003      	str	r0, [sp, #12]
90003f50:	480d      	ldr	r0, [pc, #52]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f52:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003f56:	490d      	ldr	r1, [pc, #52]	; (90003f8c <_Z23getFont_verdana_10_4bppv+0x6c>)
90003f58:	9108      	str	r1, [sp, #32]
90003f5a:	490d      	ldr	r1, [pc, #52]	; (90003f90 <_Z23getFont_verdana_10_4bppv+0x70>)
90003f5c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003f60:	9107      	str	r1, [sp, #28]
90003f62:	490c      	ldr	r1, [pc, #48]	; (90003f94 <_Z23getFont_verdana_10_4bppv+0x74>)
90003f64:	e9cd 4405 	strd	r4, r4, [sp, #20]
90003f68:	e9cd 4401 	strd	r4, r4, [sp, #4]
90003f6c:	f7ff ffa6 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003f70:	4809      	ldr	r0, [pc, #36]	; (90003f98 <_Z23getFont_verdana_10_4bppv+0x78>)
90003f72:	f023 fb21 	bl	900275b8 <atexit>
90003f76:	4628      	mov	r0, r5
90003f78:	f023 fae0 	bl	9002753c <__cxa_guard_release>
}
90003f7c:	4802      	ldr	r0, [pc, #8]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f7e:	b00f      	add	sp, #60	; 0x3c
90003f80:	bd30      	pop	{r4, r5, pc}
90003f82:	bf00      	nop
90003f84:	24009628 	.word	0x24009628
90003f88:	2400962c 	.word	0x2400962c
90003f8c:	9002bd90 	.word	0x9002bd90
90003f90:	9002be8c 	.word	0x9002be8c
90003f94:	90201dbc 	.word	0x90201dbc
90003f98:	90003f1d 	.word	0x90003f1d

90003f9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003f9c:	4770      	bx	lr
90003f9e:	bf00      	nop

90003fa0 <_Z23getFont_verdana_20_4bppv>:
{
90003fa0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa2:	4d19      	ldr	r5, [pc, #100]	; (90004008 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90003fa4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa6:	682c      	ldr	r4, [r5, #0]
90003fa8:	f3bf 8f5b 	dmb	ish
90003fac:	f014 0401 	ands.w	r4, r4, #1
90003fb0:	d002      	beq.n	90003fb8 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90003fb2:	4816      	ldr	r0, [pc, #88]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fb4:	b00f      	add	sp, #60	; 0x3c
90003fb6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fb8:	4628      	mov	r0, r5
90003fba:	f023 fab3 	bl	90027524 <__cxa_guard_acquire>
90003fbe:	2800      	cmp	r0, #0
90003fc0:	d0f7      	beq.n	90003fb2 <_Z23getFont_verdana_20_4bppv+0x12>
90003fc2:	213f      	movs	r1, #63	; 0x3f
90003fc4:	4a12      	ldr	r2, [pc, #72]	; (90004010 <_Z23getFont_verdana_20_4bppv+0x70>)
90003fc6:	2301      	movs	r3, #1
90003fc8:	2014      	movs	r0, #20
90003fca:	9208      	str	r2, [sp, #32]
90003fcc:	2204      	movs	r2, #4
90003fce:	9304      	str	r3, [sp, #16]
90003fd0:	9000      	str	r0, [sp, #0]
90003fd2:	9401      	str	r4, [sp, #4]
90003fd4:	480d      	ldr	r0, [pc, #52]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fd6:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003fda:	490e      	ldr	r1, [pc, #56]	; (90004014 <_Z23getFont_verdana_20_4bppv+0x74>)
90003fdc:	e9cd 3305 	strd	r3, r3, [sp, #20]
90003fe0:	9107      	str	r1, [sp, #28]
90003fe2:	2318      	movs	r3, #24
90003fe4:	490c      	ldr	r1, [pc, #48]	; (90004018 <_Z23getFont_verdana_20_4bppv+0x78>)
90003fe6:	e9cd 4202 	strd	r4, r2, [sp, #8]
90003fea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003fee:	2241      	movs	r2, #65	; 0x41
90003ff0:	f7ff ff64 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003ff4:	4809      	ldr	r0, [pc, #36]	; (9000401c <_Z23getFont_verdana_20_4bppv+0x7c>)
90003ff6:	f023 fadf 	bl	900275b8 <atexit>
90003ffa:	4628      	mov	r0, r5
90003ffc:	f023 fa9e 	bl	9002753c <__cxa_guard_release>
}
90004000:	4802      	ldr	r0, [pc, #8]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90004002:	b00f      	add	sp, #60	; 0x3c
90004004:	bd30      	pop	{r4, r5, pc}
90004006:	bf00      	nop
90004008:	24009658 	.word	0x24009658
9000400c:	2400965c 	.word	0x2400965c
90004010:	9002bd94 	.word	0x9002bd94
90004014:	9002be90 	.word	0x9002be90
90004018:	90201dcc 	.word	0x90201dcc
9000401c:	90003f9d 	.word	0x90003f9d

90004020 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004020:	4770      	bx	lr
90004022:	bf00      	nop

90004024 <_Z23getFont_verdana_40_4bppv>:
{
90004024:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004026:	4d19      	ldr	r5, [pc, #100]	; (9000408c <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004028:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000402a:	682c      	ldr	r4, [r5, #0]
9000402c:	f3bf 8f5b 	dmb	ish
90004030:	f014 0401 	ands.w	r4, r4, #1
90004034:	d002      	beq.n	9000403c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004036:	4816      	ldr	r0, [pc, #88]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004038:	b00f      	add	sp, #60	; 0x3c
9000403a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000403c:	4628      	mov	r0, r5
9000403e:	f023 fa71 	bl	90027524 <__cxa_guard_acquire>
90004042:	2800      	cmp	r0, #0
90004044:	d0f7      	beq.n	90004036 <_Z23getFont_verdana_40_4bppv+0x12>
90004046:	213f      	movs	r1, #63	; 0x3f
90004048:	4a12      	ldr	r2, [pc, #72]	; (90004094 <_Z23getFont_verdana_40_4bppv+0x70>)
9000404a:	2301      	movs	r3, #1
9000404c:	2028      	movs	r0, #40	; 0x28
9000404e:	9208      	str	r2, [sp, #32]
90004050:	2204      	movs	r2, #4
90004052:	9304      	str	r3, [sp, #16]
90004054:	9000      	str	r0, [sp, #0]
90004056:	9401      	str	r4, [sp, #4]
90004058:	480d      	ldr	r0, [pc, #52]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000405a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000405e:	490e      	ldr	r1, [pc, #56]	; (90004098 <_Z23getFont_verdana_40_4bppv+0x74>)
90004060:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004064:	9107      	str	r1, [sp, #28]
90004066:	2329      	movs	r3, #41	; 0x29
90004068:	490c      	ldr	r1, [pc, #48]	; (9000409c <_Z23getFont_verdana_40_4bppv+0x78>)
9000406a:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000406e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004072:	220a      	movs	r2, #10
90004074:	f7ff ff22 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004078:	4809      	ldr	r0, [pc, #36]	; (900040a0 <_Z23getFont_verdana_40_4bppv+0x7c>)
9000407a:	f023 fa9d 	bl	900275b8 <atexit>
9000407e:	4628      	mov	r0, r5
90004080:	f023 fa5c 	bl	9002753c <__cxa_guard_release>
}
90004084:	4802      	ldr	r0, [pc, #8]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004086:	b00f      	add	sp, #60	; 0x3c
90004088:	bd30      	pop	{r4, r5, pc}
9000408a:	bf00      	nop
9000408c:	24009688 	.word	0x24009688
90004090:	2400968c 	.word	0x2400968c
90004094:	9002be84 	.word	0x9002be84
90004098:	9002be94 	.word	0x9002be94
9000409c:	9020215c 	.word	0x9020215c
900040a0:	90004021 	.word	0x90004021

900040a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900040a4:	2000      	movs	r0, #0
900040a6:	4770      	bx	lr

900040a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900040a8:	2000      	movs	r0, #0
900040aa:	4770      	bx	lr

900040ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040ac:	b40e      	push	{r1, r2, r3}
900040ae:	b500      	push	{lr}
900040b0:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040b2:	2100      	movs	r1, #0
{
900040b4:	ab03      	add	r3, sp, #12
900040b6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900040ba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040bc:	f013 f868 	bl	90017190 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040c0:	b002      	add	sp, #8
900040c2:	f85d eb04 	ldr.w	lr, [sp], #4
900040c6:	b003      	add	sp, #12
900040c8:	4770      	bx	lr
900040ca:	bf00      	nop

900040cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040cc:	b40c      	push	{r2, r3}
900040ce:	b500      	push	{lr}
900040d0:	b083      	sub	sp, #12
900040d2:	ab04      	add	r3, sp, #16
900040d4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900040d8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900040da:	f013 f859 	bl	90017190 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040de:	b003      	add	sp, #12
900040e0:	f85d eb04 	ldr.w	lr, [sp], #4
900040e4:	b002      	add	sp, #8
900040e6:	4770      	bx	lr

900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900040e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900040ea:	b510      	push	{r4, lr}
900040ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900040ee:	b133      	cbz	r3, 900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900040f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900040f2:	b39b      	cbz	r3, 9000415c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900040f4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900040f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900040fa:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900040fc:	b923      	cbnz	r3, 90004108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900040fe:	4620      	mov	r0, r4
}
90004100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004104:	f014 bb18 	b.w	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004108:	f014 fc14 	bl	90018934 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000410c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000410e:	2b01      	cmp	r3, #1
90004110:	d92a      	bls.n	90004168 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90004112:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004114:	1c53      	adds	r3, r2, #1
90004116:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004118:	2b09      	cmp	r3, #9
9000411a:	d812      	bhi.n	90004142 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
9000411c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004120:	f640 103f 	movw	r0, #2367	; 0x93f
90004124:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004126:	4281      	cmp	r1, r0
90004128:	d1e9      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000412a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000412e:	0052      	lsls	r2, r2, #1
90004130:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90004132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004136:	4422      	add	r2, r4
90004138:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
9000413c:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000413e:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004140:	e7dd      	b.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004142:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004146:	f640 113f 	movw	r1, #2367	; 0x93f
9000414a:	89db      	ldrh	r3, [r3, #14]
9000414c:	428b      	cmp	r3, r1
9000414e:	d1d6      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004150:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004154:	2300      	movs	r3, #0
90004156:	0052      	lsls	r2, r2, #1
90004158:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000415a:	e7ea      	b.n	90004132 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000415c:	4b05      	ldr	r3, [pc, #20]	; (90004174 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000415e:	21c5      	movs	r1, #197	; 0xc5
90004160:	4a05      	ldr	r2, [pc, #20]	; (90004178 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004162:	4806      	ldr	r0, [pc, #24]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004164:	f023 fa0a 	bl	9002757c <__assert_func>
            assert(offset < used);
90004168:	4b05      	ldr	r3, [pc, #20]	; (90004180 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000416a:	21cb      	movs	r1, #203	; 0xcb
9000416c:	4a05      	ldr	r2, [pc, #20]	; (90004184 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000416e:	4803      	ldr	r0, [pc, #12]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004170:	f023 fa04 	bl	9002757c <__assert_func>
90004174:	9002a7f8 	.word	0x9002a7f8
90004178:	9002a804 	.word	0x9002a804
9000417c:	9002a8b0 	.word	0x9002a8b0
90004180:	9002a8fc 	.word	0x9002a8fc
90004184:	9002a90c 	.word	0x9002a90c

90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004188:	f014 ba9f 	b.w	900186ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000418c:	b510      	push	{r4, lr}
9000418e:	b086      	sub	sp, #24
90004190:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004194:	ac0a      	add	r4, sp, #40	; 0x28
{
90004196:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000419a:	461a      	mov	r2, r3
9000419c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000419e:	4661      	mov	r1, ip
900041a0:	9401      	str	r4, [sp, #4]
900041a2:	9300      	str	r3, [sp, #0]
900041a4:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900041a6:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900041a8:	f011 fbfc 	bl	900159a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900041ac:	b006      	add	sp, #24
900041ae:	bd10      	pop	{r4, pc}

900041b0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900041b0:	b9e0      	cbnz	r0, 900041ec <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900041b2:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900041b4:	4b13      	ldr	r3, [pc, #76]	; (90004204 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900041b6:	681b      	ldr	r3, [r3, #0]
900041b8:	b1cb      	cbz	r3, 900041ee <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041ba:	4c13      	ldr	r4, [pc, #76]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041bc:	4813      	ldr	r0, [pc, #76]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041be:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c2:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041c4:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c6:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041c8:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041ca:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041cc:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900041ce:	4b10      	ldr	r3, [pc, #64]	; (90004210 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900041d0:	2200      	movs	r2, #0
900041d2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900041d4:	f000 f83a 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
900041d8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900041da:	f000 f835 	bl	90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900041de:	4b0d      	ldr	r3, [pc, #52]	; (90004214 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900041e0:	4a0d      	ldr	r2, [pc, #52]	; (90004218 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900041e2:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900041e4:	4b0d      	ldr	r3, [pc, #52]	; (9000421c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900041e6:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900041e8:	8018      	strh	r0, [r3, #0]
    }
}
900041ea:	bd38      	pop	{r3, r4, r5, pc}
900041ec:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041ee:	4c0c      	ldr	r4, [pc, #48]	; (90004220 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900041f0:	4905      	ldr	r1, [pc, #20]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041f2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900041f4:	480b      	ldr	r0, [pc, #44]	; (90004224 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900041f6:	4b05      	ldr	r3, [pc, #20]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041f8:	4a0b      	ldr	r2, [pc, #44]	; (90004228 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900041fa:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900041fc:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900041fe:	2c00      	cmp	r4, #0
90004200:	d1e5      	bne.n	900041ce <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90004202:	bd38      	pop	{r3, r4, r5, pc}
90004204:	240096b8 	.word	0x240096b8
90004208:	240096bc 	.word	0x240096bc
9000420c:	240096c0 	.word	0x240096c0
90004210:	240096c4 	.word	0x240096c4
90004214:	2403975c 	.word	0x2403975c
90004218:	24039764 	.word	0x24039764
9000421c:	24039760 	.word	0x24039760
90004220:	90202270 	.word	0x90202270
90004224:	90202204 	.word	0x90202204
90004228:	902021e8 	.word	0x902021e8

9000422c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000422c:	4a04      	ldr	r2, [pc, #16]	; (90004240 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000422e:	4b05      	ldr	r3, [pc, #20]	; (90004244 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004230:	6812      	ldr	r2, [r2, #0]
90004232:	681b      	ldr	r3, [r3, #0]
90004234:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004238:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000423c:	4770      	bx	lr
9000423e:	bf00      	nop
90004240:	240096c0 	.word	0x240096c0
90004244:	240096bc 	.word	0x240096bc

90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004248:	2007      	movs	r0, #7
9000424a:	4770      	bx	lr

9000424c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000424c:	4800      	ldr	r0, [pc, #0]	; (90004250 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000424e:	4770      	bx	lr
90004250:	240096c8 	.word	0x240096c8

90004254 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004254:	b510      	push	{r4, lr}
};
90004256:	4c05      	ldr	r4, [pc, #20]	; (9000426c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004258:	f7ff fea2 	bl	90003fa0 <_Z23getFont_verdana_20_4bppv>
};
9000425c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000425e:	f7ff fee1 	bl	90004024 <_Z23getFont_verdana_40_4bppv>
};
90004262:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004264:	f7ff fe5c 	bl	90003f20 <_Z23getFont_verdana_10_4bppv>
};
90004268:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000426a:	bd10      	pop	{r4, pc}
9000426c:	240096c8 	.word	0x240096c8

90004270 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004274:	4770      	bx	lr
90004276:	bf00      	nop

90004278 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004278:	4770      	bx	lr
9000427a:	bf00      	nop

9000427c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000427c:	4770      	bx	lr
9000427e:	bf00      	nop

90004280 <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
90004280:	4770      	bx	lr
90004282:	bf00      	nop

90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
90004284:	4770      	bx	lr
90004286:	bf00      	nop

90004288 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004288:	4770      	bx	lr
9000428a:	bf00      	nop

9000428c <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000428c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000428e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004290:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004292:	6844      	ldr	r4, [r0, #4]
90004294:	f012 0f01 	tst.w	r2, #1
90004298:	eb04 0062 	add.w	r0, r4, r2, asr #1
9000429c:	d103      	bne.n	900042a6 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
9000429e:	689b      	ldr	r3, [r3, #8]
    }
900042a0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042a4:	4718      	bx	r3
900042a6:	ea4f 0c62 	mov.w	ip, r2, asr #1
900042aa:	689b      	ldr	r3, [r3, #8]
900042ac:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900042b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042b4:	58d3      	ldr	r3, [r2, r3]
900042b6:	4718      	bx	r3

900042b8 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900042b8:	6843      	ldr	r3, [r0, #4]
900042ba:	b13b      	cbz	r3, 900042cc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900042bc:	6883      	ldr	r3, [r0, #8]
900042be:	b10b      	cbz	r3, 900042c4 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900042c0:	2001      	movs	r0, #1
    }
900042c2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900042c4:	68c0      	ldr	r0, [r0, #12]
900042c6:	f000 0001 	and.w	r0, r0, #1
900042ca:	4770      	bx	lr
900042cc:	4618      	mov	r0, r3
900042ce:	4770      	bx	lr

900042d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900042d0:	b510      	push	{r4, lr}
900042d2:	4604      	mov	r4, r0
900042d4:	2110      	movs	r1, #16
900042d6:	f023 f923 	bl	90027520 <_ZdlPvj>
900042da:	4620      	mov	r0, r4
900042dc:	bd10      	pop	{r4, pc}
900042de:	bf00      	nop

900042e0 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
900042e0:	b510      	push	{r4, lr}
900042e2:	4604      	mov	r4, r0
}
900042e4:	f44f 7186 	mov.w	r1, #268	; 0x10c
900042e8:	f023 f91a 	bl	90027520 <_ZdlPvj>
900042ec:	4620      	mov	r0, r4
900042ee:	bd10      	pop	{r4, pc}

900042f0 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_main_menuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900042f0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &snake_game)
900042f2:	f100 036c 	add.w	r3, r0, #108	; 0x6c
{
900042f6:	4604      	mov	r4, r0
900042f8:	460d      	mov	r5, r1
    if (&src == &snake_game)
900042fa:	4299      	cmp	r1, r3
900042fc:	d003      	beq.n	90004306 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        //intr_snake_game
        //When snake_game clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
900042fe:	34b4      	adds	r4, #180	; 0xb4
90004300:	42a5      	cmp	r5, r4
90004302:	d007      	beq.n	90004314 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with no screen transition
        application().gotoscreen_tictactoe_gameScreenNoTransition();
    }
}
90004304:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &btn_tictactoe)
90004306:	34b4      	adds	r4, #180	; 0xb4
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004308:	f011 ffcc 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
9000430c:	f7ff fd82 	bl	90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004310:	42a5      	cmp	r5, r4
90004312:	d1f7      	bne.n	90004304 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
90004314:	f011 ffc6 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
}
90004318:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_tictactoe_gameScreenNoTransition();
9000431c:	f7ff bd88 	b.w	90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>

90004320 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
90004320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90004324:	b084      	sub	sp, #16
90004326:	4604      	mov	r4, r0
        : presenter(0)
90004328:	f013 fbf4 	bl	90017b14 <_ZN8touchgfx6ScreenC1Ev>
9000432c:	f44f 7380 	mov.w	r3, #256	; 0x100
90004330:	2500      	movs	r5, #0
    buttonCallback(this, &screen_main_menuViewBase::buttonCallbackHandler)
90004332:	4a6e      	ldr	r2, [pc, #440]	; (900044ec <_ZN24screen_main_menuViewBaseC1Ev+0x1cc>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004334:	496e      	ldr	r1, [pc, #440]	; (900044f0 <_ZN24screen_main_menuViewBaseC1Ev+0x1d0>)
90004336:	f104 096c 	add.w	r9, r4, #108	; 0x6c
9000433a:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
9000433e:	23ff      	movs	r3, #255	; 0xff
90004340:	f104 07b4 	add.w	r7, r4, #180	; 0xb4
90004344:	6022      	str	r2, [r4, #0]
90004346:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
9000434a:	4648      	mov	r0, r9
        : color(col)
9000434c:	66a5      	str	r5, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000434e:	1d26      	adds	r6, r4, #4
        return typedTextId < numberOfTypedTexts;
90004350:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 90004524 <_ZN24screen_main_menuViewBaseC1Ev+0x204>
90004354:	e9c4 510f 	strd	r5, r1, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004358:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
9000435c:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004360:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004364:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004368:	f00f fbe4 	bl	90013b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
9000436c:	4638      	mov	r0, r7
9000436e:	f00f fbe1 	bl	90013b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90004372:	4b60      	ldr	r3, [pc, #384]	; (900044f4 <_ZN24screen_main_menuViewBaseC1Ev+0x1d4>)
90004374:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004378:	4630      	mov	r0, r6
9000437a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
9000437e:	4b5e      	ldr	r3, [pc, #376]	; (900044f8 <_ZN24screen_main_menuViewBaseC1Ev+0x1d8>)
90004380:	f8c4 4100 	str.w	r4, [r4, #256]	; 0x100
90004384:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        rect.x = x;
90004388:	4b5c      	ldr	r3, [pc, #368]	; (900044fc <_ZN24screen_main_menuViewBaseC1Ev+0x1dc>)
9000438a:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
9000438e:	64a3      	str	r3, [r4, #72]	; 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004390:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004394:	6465      	str	r5, [r4, #68]	; 0x44
90004396:	66a3      	str	r3, [r4, #104]	; 0x68
90004398:	f00c fbd6 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000439c:	4b58      	ldr	r3, [pc, #352]	; (90004500 <_ZN24screen_main_menuViewBaseC1Ev+0x1e0>)
    snake_game.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000439e:	a902      	add	r1, sp, #8
900043a0:	aa03      	add	r2, sp, #12
900043a2:	6723      	str	r3, [r4, #112]	; 0x70
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900043a4:	2302      	movs	r3, #2
900043a6:	4648      	mov	r0, r9
900043a8:	f8ad 3008 	strh.w	r3, [sp, #8]
900043ac:	2303      	movs	r3, #3
900043ae:	f8ad 300c 	strh.w	r3, [sp, #12]
900043b2:	f00e fffc 	bl	900133ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900043b6:	2106      	movs	r1, #6
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
900043b8:	f8b8 3000 	ldrh.w	r3, [r8]
900043bc:	428b      	cmp	r3, r1
900043be:	f8a4 10a4 	strh.w	r1, [r4, #164]	; 0xa4
900043c2:	d925      	bls.n	90004410 <_ZN24screen_main_menuViewBaseC1Ev+0xf0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900043c4:	4b4f      	ldr	r3, [pc, #316]	; (90004504 <_ZN24screen_main_menuViewBaseC1Ev+0x1e4>)
900043c6:	681b      	ldr	r3, [r3, #0]
900043c8:	2b00      	cmp	r3, #0
900043ca:	f000 8088 	beq.w	900044de <_ZN24screen_main_menuViewBaseC1Ev+0x1be>
        return fonts[typedTexts[typedTextId].fontIdx];
900043ce:	7b1a      	ldrb	r2, [r3, #12]
900043d0:	4b4d      	ldr	r3, [pc, #308]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
900043d2:	681b      	ldr	r3, [r3, #0]
900043d4:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900043d8:	4b4c      	ldr	r3, [pc, #304]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
900043da:	6818      	ldr	r0, [r3, #0]
900043dc:	f7ff ff26 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900043e0:	f8da 3000 	ldr.w	r3, [sl]
900043e4:	4601      	mov	r1, r0
900043e6:	484a      	ldr	r0, [pc, #296]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
900043e8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900043ea:	4282      	cmp	r2, r0
900043ec:	d167      	bne.n	900044be <_ZN24screen_main_menuViewBaseC1Ev+0x19e>
        return fontHeight;
900043ee:	f8ba 5004 	ldrh.w	r5, [sl, #4]
900043f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900043f4:	4650      	mov	r0, sl
900043f6:	9101      	str	r1, [sp, #4]
900043f8:	4798      	blx	r3
900043fa:	fb15 f500 	smulbb	r5, r5, r0
900043fe:	f8da 3000 	ldr.w	r3, [sl]
90004402:	4650      	mov	r0, sl
90004404:	b2ad      	uxth	r5, r5
90004406:	9901      	ldr	r1, [sp, #4]
90004408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000440a:	4798      	blx	r3
9000440c:	4405      	add	r5, r0
9000440e:	b22d      	sxth	r5, r5
90004410:	4649      	mov	r1, r9
        color = col;
90004412:	f04f 33ff 	mov.w	r3, #4294967295
    snake_game.setAction(buttonCallback);
90004416:	f104 09fc 	add.w	r9, r4, #252	; 0xfc
9000441a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000441c:	f8a4 50b2 	strh.w	r5, [r4, #178]	; 0xb2
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90004420:	f8c4 9094 	str.w	r9, [r4, #148]	; 0x94
        colorPressed = col;
90004424:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
90004428:	f00c fb8e 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000442c:	4b39      	ldr	r3, [pc, #228]	; (90004514 <_ZN24screen_main_menuViewBaseC1Ev+0x1f4>)
    btn_tictactoe.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000442e:	a902      	add	r1, sp, #8
90004430:	aa03      	add	r2, sp, #12
90004432:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
90004436:	2302      	movs	r3, #2
90004438:	4638      	mov	r0, r7
9000443a:	f8ad 3008 	strh.w	r3, [sp, #8]
9000443e:	2303      	movs	r3, #3
90004440:	f8ad 300c 	strh.w	r3, [sp, #12]
90004444:	f00e ffb3 	bl	900133ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90004448:	2100      	movs	r1, #0
        if (typedText.hasValidId())
9000444a:	f8b8 3000 	ldrh.w	r3, [r8]
9000444e:	f8a4 10ec 	strh.w	r1, [r4, #236]	; 0xec
90004452:	b323      	cbz	r3, 9000449e <_ZN24screen_main_menuViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004454:	4b2b      	ldr	r3, [pc, #172]	; (90004504 <_ZN24screen_main_menuViewBaseC1Ev+0x1e4>)
90004456:	681b      	ldr	r3, [r3, #0]
90004458:	2b00      	cmp	r3, #0
9000445a:	d040      	beq.n	900044de <_ZN24screen_main_menuViewBaseC1Ev+0x1be>
        return fonts[typedTexts[typedTextId].fontIdx];
9000445c:	781a      	ldrb	r2, [r3, #0]
9000445e:	4b2a      	ldr	r3, [pc, #168]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
90004460:	681b      	ldr	r3, [r3, #0]
90004462:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004466:	4b29      	ldr	r3, [pc, #164]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
90004468:	6818      	ldr	r0, [r3, #0]
9000446a:	f7ff fedf 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000446e:	f8d8 3000 	ldr.w	r3, [r8]
90004472:	4601      	mov	r1, r0
90004474:	4826      	ldr	r0, [pc, #152]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
90004476:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90004478:	4282      	cmp	r2, r0
9000447a:	d128      	bne.n	900044ce <_ZN24screen_main_menuViewBaseC1Ev+0x1ae>
9000447c:	f8b8 5004 	ldrh.w	r5, [r8, #4]
90004480:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90004482:	4640      	mov	r0, r8
90004484:	9101      	str	r1, [sp, #4]
90004486:	4798      	blx	r3
90004488:	fb15 f500 	smulbb	r5, r5, r0
9000448c:	f8d8 3000 	ldr.w	r3, [r8]
90004490:	4640      	mov	r0, r8
90004492:	b2ad      	uxth	r5, r5
90004494:	9901      	ldr	r1, [sp, #4]
90004496:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004498:	4798      	blx	r3
9000449a:	4428      	add	r0, r5
9000449c:	b203      	sxth	r3, r0
9000449e:	f8a4 30fa 	strh.w	r3, [r4, #250]	; 0xfa
        color = col;
900044a2:	f04f 33ff 	mov.w	r3, #4294967295
900044a6:	4630      	mov	r0, r6
900044a8:	4639      	mov	r1, r7
900044aa:	f8c4 90dc 	str.w	r9, [r4, #220]	; 0xdc
        colorPressed = col;
900044ae:	e9c4 333c 	strd	r3, r3, [r4, #240]	; 0xf0
900044b2:	f00c fb49 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900044b6:	4620      	mov	r0, r4
900044b8:	b004      	add	sp, #16
900044ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900044be:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900044c0:	4650      	mov	r0, sl
900044c2:	4790      	blx	r2
900044c4:	f8da 3000 	ldr.w	r3, [sl]
900044c8:	4605      	mov	r5, r0
900044ca:	9901      	ldr	r1, [sp, #4]
900044cc:	e791      	b.n	900043f2 <_ZN24screen_main_menuViewBaseC1Ev+0xd2>
900044ce:	9101      	str	r1, [sp, #4]
900044d0:	4640      	mov	r0, r8
900044d2:	4790      	blx	r2
900044d4:	f8d8 3000 	ldr.w	r3, [r8]
900044d8:	4605      	mov	r5, r0
900044da:	9901      	ldr	r1, [sp, #4]
900044dc:	e7d0      	b.n	90004480 <_ZN24screen_main_menuViewBaseC1Ev+0x160>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900044de:	4b0e      	ldr	r3, [pc, #56]	; (90004518 <_ZN24screen_main_menuViewBaseC1Ev+0x1f8>)
900044e0:	216c      	movs	r1, #108	; 0x6c
900044e2:	4a0e      	ldr	r2, [pc, #56]	; (9000451c <_ZN24screen_main_menuViewBaseC1Ev+0x1fc>)
900044e4:	480e      	ldr	r0, [pc, #56]	; (90004520 <_ZN24screen_main_menuViewBaseC1Ev+0x200>)
900044e6:	f023 f849 	bl	9002757c <__assert_func>
900044ea:	bf00      	nop
900044ec:	9002aac8 	.word	0x9002aac8
900044f0:	9002b6d8 	.word	0x9002b6d8
900044f4:	9002aab0 	.word	0x9002aab0
900044f8:	900042f1 	.word	0x900042f1
900044fc:	011001e0 	.word	0x011001e0
90004500:	00330026 	.word	0x00330026
90004504:	2403975c 	.word	0x2403975c
90004508:	24039764 	.word	0x24039764
9000450c:	24039768 	.word	0x24039768
90004510:	900035cd 	.word	0x900035cd
90004514:	00a70026 	.word	0x00a70026
90004518:	9002a9e0 	.word	0x9002a9e0
9000451c:	9002aa24 	.word	0x9002aa24
90004520:	9002aa60 	.word	0x9002aa60
90004524:	24039760 	.word	0x24039760

90004528 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004528:	b530      	push	{r4, r5, lr}
9000452a:	b085      	sub	sp, #20
9000452c:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000452e:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004530:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004532:	466d      	mov	r5, sp
90004534:	4601      	mov	r1, r0
        rect.width = width;
90004536:	8102      	strh	r2, [r0, #8]
90004538:	343c      	adds	r4, #60	; 0x3c
9000453a:	4628      	mov	r0, r5
9000453c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004540:	4798      	blx	r3
90004542:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004546:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000454a:	b005      	add	sp, #20
9000454c:	bd30      	pop	{r4, r5, pc}
9000454e:	bf00      	nop

90004550 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004550:	b530      	push	{r4, r5, lr}
90004552:	b085      	sub	sp, #20
90004554:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004556:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004558:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000455a:	466d      	mov	r5, sp
9000455c:	4601      	mov	r1, r0
        rect.height = height;
9000455e:	8142      	strh	r2, [r0, #10]
90004560:	343c      	adds	r4, #60	; 0x3c
90004562:	4628      	mov	r0, r5
90004564:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004568:	4798      	blx	r3
9000456a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000456e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004572:	b005      	add	sp, #20
90004574:	bd30      	pop	{r4, r5, pc}
90004576:	bf00      	nop

90004578 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004578:	2200      	movs	r2, #0
9000457a:	6002      	str	r2, [r0, #0]
9000457c:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000457e:	4770      	bx	lr

90004580 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004580:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004584:	4770      	bx	lr
90004586:	bf00      	nop

90004588 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004588:	2000      	movs	r0, #0
9000458a:	4770      	bx	lr

9000458c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
9000458c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004590:	b112      	cbz	r2, 90004598 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004592:	6803      	ldr	r3, [r0, #0]
90004594:	695b      	ldr	r3, [r3, #20]
90004596:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004598:	4770      	bx	lr
9000459a:	bf00      	nop

9000459c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000459c:	2200      	movs	r2, #0
9000459e:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900045a2:	6082      	str	r2, [r0, #8]
900045a4:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900045a8:	4770      	bx	lr
900045aa:	bf00      	nop

900045ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900045ac:	6c80      	ldr	r0, [r0, #72]	; 0x48
900045ae:	4770      	bx	lr

900045b0 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
     * Virtual Action Handlers
     */
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
900045b0:	4770      	bx	lr
900045b2:	bf00      	nop

900045b4 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
900045b4:	4770      	bx	lr
900045b6:	bf00      	nop

900045b8 <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
900045b8:	4770      	bx	lr
900045ba:	bf00      	nop

900045bc <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
900045bc:	4770      	bx	lr
900045be:	bf00      	nop

900045c0 <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
900045c0:	4770      	bx	lr
900045c2:	bf00      	nop

900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
900045c4:	4770      	bx	lr
900045c6:	bf00      	nop

900045c8 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
900045c8:	4770      	bx	lr
900045ca:	bf00      	nop

900045cc <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900045cc:	4770      	bx	lr
900045ce:	bf00      	nop

900045d0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900045d0:	4770      	bx	lr
900045d2:	bf00      	nop

900045d4 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900045d4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900045d6:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900045d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900045da:	6844      	ldr	r4, [r0, #4]
900045dc:	f012 0f01 	tst.w	r2, #1
900045e0:	eb04 0062 	add.w	r0, r4, r2, asr #1
900045e4:	d103      	bne.n	900045ee <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900045e6:	689b      	ldr	r3, [r3, #8]
    }
900045e8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900045ec:	4718      	bx	r3
900045ee:	ea4f 0c62 	mov.w	ip, r2, asr #1
900045f2:	689b      	ldr	r3, [r3, #8]
900045f4:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900045f8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900045fc:	58d3      	ldr	r3, [r2, r3]
900045fe:	4718      	bx	r3

90004600 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004600:	6843      	ldr	r3, [r0, #4]
90004602:	b13b      	cbz	r3, 90004614 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004604:	6883      	ldr	r3, [r0, #8]
90004606:	b10b      	cbz	r3, 9000460c <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004608:	2001      	movs	r0, #1
    }
9000460a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000460c:	68c0      	ldr	r0, [r0, #12]
9000460e:	f000 0001 	and.w	r0, r0, #1
90004612:	4770      	bx	lr
90004614:	4618      	mov	r0, r3
90004616:	4770      	bx	lr

90004618 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004618:	b510      	push	{r4, lr}
9000461a:	4604      	mov	r4, r0
9000461c:	214c      	movs	r1, #76	; 0x4c
9000461e:	f022 ff7f 	bl	90027520 <_ZdlPvj>
90004622:	4620      	mov	r0, r4
90004624:	bd10      	pop	{r4, pc}
90004626:	bf00      	nop

90004628 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004628:	b510      	push	{r4, lr}
9000462a:	4604      	mov	r4, r0
9000462c:	2110      	movs	r1, #16
9000462e:	f022 ff77 	bl	90027520 <_ZdlPvj>
90004632:	4620      	mov	r0, r4
90004634:	bd10      	pop	{r4, pc}
90004636:	bf00      	nop

90004638 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004638:	b510      	push	{r4, lr}
9000463a:	4604      	mov	r4, r0
}
9000463c:	f44f 7164 	mov.w	r1, #912	; 0x390
90004640:	f022 ff6e 	bl	90027520 <_ZdlPvj>
90004644:	4620      	mov	r0, r4
90004646:	bd10      	pop	{r4, pc}

90004648 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90004648:	4b1b      	ldr	r3, [pc, #108]	; (900046b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000464a:	6802      	ldr	r2, [r0, #0]
9000464c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
9000464e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004650:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004652:	b323      	cbz	r3, 9000469e <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004654:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004656:	4919      	ldr	r1, [pc, #100]	; (900046bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004658:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000465a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000465c:	8809      	ldrh	r1, [r1, #0]
9000465e:	4291      	cmp	r1, r2
90004660:	d923      	bls.n	900046aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004662:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004666:	4b16      	ldr	r3, [pc, #88]	; (900046c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004668:	681b      	ldr	r3, [r3, #0]
9000466a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9000466e:	4a15      	ldr	r2, [pc, #84]	; (900046c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004670:	6803      	ldr	r3, [r0, #0]
90004672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004674:	4293      	cmp	r3, r2
90004676:	d107      	bne.n	90004688 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004678:	88c0      	ldrh	r0, [r0, #6]
9000467a:	4b13      	ldr	r3, [pc, #76]	; (900046c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000467c:	1a31      	subs	r1, r6, r0
9000467e:	429d      	cmp	r5, r3
90004680:	b209      	sxth	r1, r1
90004682:	d107      	bne.n	90004694 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004684:	80e1      	strh	r1, [r4, #6]
    }
90004686:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004688:	4798      	blx	r3
9000468a:	4b0f      	ldr	r3, [pc, #60]	; (900046c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000468c:	1a31      	subs	r1, r6, r0
9000468e:	429d      	cmp	r5, r3
90004690:	b209      	sxth	r1, r1
90004692:	d0f7      	beq.n	90004684 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004694:	4620      	mov	r0, r4
90004696:	462b      	mov	r3, r5
    }
90004698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000469c:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000469e:	4b0b      	ldr	r3, [pc, #44]	; (900046cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900046a0:	216c      	movs	r1, #108	; 0x6c
900046a2:	4a0b      	ldr	r2, [pc, #44]	; (900046d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046a4:	480b      	ldr	r0, [pc, #44]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046a6:	f022 ff69 	bl	9002757c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900046aa:	4b0b      	ldr	r3, [pc, #44]	; (900046d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900046ac:	216d      	movs	r1, #109	; 0x6d
900046ae:	4a08      	ldr	r2, [pc, #32]	; (900046d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046b0:	4808      	ldr	r0, [pc, #32]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046b2:	f022 ff63 	bl	9002757c <__assert_func>
900046b6:	bf00      	nop
900046b8:	2403975c 	.word	0x2403975c
900046bc:	24039760 	.word	0x24039760
900046c0:	24039764 	.word	0x24039764
900046c4:	900035c9 	.word	0x900035c9
900046c8:	90002299 	.word	0x90002299
900046cc:	9002a9e0 	.word	0x9002a9e0
900046d0:	9002aa24 	.word	0x9002aa24
900046d4:	9002aa60 	.word	0x9002aa60
900046d8:	9002aaf4 	.word	0x9002aaf4

900046dc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900046dc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_up)
900046de:	f500 739c 	add.w	r3, r0, #312	; 0x138
{
900046e2:	4604      	mov	r4, r0
900046e4:	460d      	mov	r5, r1
    if (&src == &btn_up)
900046e6:	4299      	cmp	r1, r3
900046e8:	d014      	beq.n	90004714 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_change_direction_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
900046ea:	f504 73f6 	add.w	r3, r4, #492	; 0x1ec
900046ee:	429d      	cmp	r5, r3
900046f0:	d02f      	beq.n	90004752 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
        //intr_change_direction_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_right)
900046f2:	f504 73ba 	add.w	r3, r4, #372	; 0x174
900046f6:	429d      	cmp	r5, r3
900046f8:	d023      	beq.n	90004742 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        //intr_change_direction_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
    if (&src == &btn_down)
900046fa:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
900046fe:	429d      	cmp	r5, r3
90004700:	d017      	beq.n	90004732 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        //intr_change_direction_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_snake_start)
90004702:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004706:	429d      	cmp	r5, r3
90004708:	d00b      	beq.n	90004722 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
9000470a:	f504 740a 	add.w	r4, r4, #552	; 0x228
9000470e:	42a5      	cmp	r5, r4
90004710:	d027      	beq.n	90004762 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
        //btn_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90004712:	bd38      	pop	{r3, r4, r5, pc}
        change_direction_up();
90004714:	6803      	ldr	r3, [r0, #0]
90004716:	4a16      	ldr	r2, [pc, #88]	; (90004770 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90004718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000471a:	4293      	cmp	r3, r2
9000471c:	d0e5      	beq.n	900046ea <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
9000471e:	4798      	blx	r3
90004720:	e7e3      	b.n	900046ea <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        game_snake_start();
90004722:	6823      	ldr	r3, [r4, #0]
90004724:	4a13      	ldr	r2, [pc, #76]	; (90004774 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
90004726:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004728:	4293      	cmp	r3, r2
9000472a:	d0ee      	beq.n	9000470a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
9000472c:	4620      	mov	r0, r4
9000472e:	4798      	blx	r3
90004730:	e7eb      	b.n	9000470a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_down();
90004732:	6823      	ldr	r3, [r4, #0]
90004734:	4a10      	ldr	r2, [pc, #64]	; (90004778 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
90004736:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004738:	4293      	cmp	r3, r2
9000473a:	d0e2      	beq.n	90004702 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
9000473c:	4620      	mov	r0, r4
9000473e:	4798      	blx	r3
90004740:	e7df      	b.n	90004702 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_right();
90004742:	6823      	ldr	r3, [r4, #0]
90004744:	4a0d      	ldr	r2, [pc, #52]	; (9000477c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
90004746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004748:	4293      	cmp	r3, r2
9000474a:	d0d6      	beq.n	900046fa <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
9000474c:	4620      	mov	r0, r4
9000474e:	4798      	blx	r3
90004750:	e7d3      	b.n	900046fa <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        change_direction_left();
90004752:	6823      	ldr	r3, [r4, #0]
90004754:	4a0a      	ldr	r2, [pc, #40]	; (90004780 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
90004756:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004758:	4293      	cmp	r3, r2
9000475a:	d0ca      	beq.n	900046f2 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000475c:	4620      	mov	r0, r4
9000475e:	4798      	blx	r3
90004760:	e7c7      	b.n	900046f2 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004762:	f011 fd9f 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
}
90004766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_main_menuScreenNoTransition();
9000476a:	f7ff bb45 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
9000476e:	bf00      	nop
90004770:	900045b1 	.word	0x900045b1
90004774:	900045c1 	.word	0x900045c1
90004778:	900045bd 	.word	0x900045bd
9000477c:	900045b9 	.word	0x900045b9
90004780:	900045b5 	.word	0x900045b5

90004784 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004784:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000478a:	4f25      	ldr	r7, [pc, #148]	; (90004820 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
9000478c:	4605      	mov	r5, r0
        setX(x);
9000478e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004790:	4690      	mov	r8, r2
90004792:	42be      	cmp	r6, r7
90004794:	d125      	bne.n	900047e2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004796:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004798:	80a9      	strh	r1, [r5, #4]
9000479a:	4922      	ldr	r1, [pc, #136]	; (90004824 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000479c:	428c      	cmp	r4, r1
9000479e:	d126      	bne.n	900047ee <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900047a0:	4921      	ldr	r1, [pc, #132]	; (90004828 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047a2:	fa1f f888 	uxth.w	r8, r8
900047a6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
900047a8:	680b      	ldr	r3, [r1, #0]
900047aa:	2b00      	cmp	r3, #0
900047ac:	d032      	beq.n	90004814 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
900047ae:	491f      	ldr	r1, [pc, #124]	; (9000482c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900047b0:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900047b2:	8809      	ldrh	r1, [r1, #0]
900047b4:	4291      	cmp	r1, r2
900047b6:	d927      	bls.n	90004808 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
900047b8:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900047bc:	4b1c      	ldr	r3, [pc, #112]	; (90004830 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900047be:	681b      	ldr	r3, [r3, #0]
900047c0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900047c4:	4a1b      	ldr	r2, [pc, #108]	; (90004834 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900047c6:	6803      	ldr	r3, [r0, #0]
900047c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900047ca:	4293      	cmp	r3, r2
900047cc:	d11a      	bne.n	90004804 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
900047ce:	88c0      	ldrh	r0, [r0, #6]
900047d0:	4b19      	ldr	r3, [pc, #100]	; (90004838 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900047d2:	eba8 0200 	sub.w	r2, r8, r0
900047d6:	429e      	cmp	r6, r3
900047d8:	b211      	sxth	r1, r2
900047da:	d10e      	bne.n	900047fa <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
900047dc:	80e9      	strh	r1, [r5, #6]
    }
900047de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
900047e2:	47b0      	blx	r6
        setBaselineY(baselineY);
900047e4:	682b      	ldr	r3, [r5, #0]
900047e6:	490f      	ldr	r1, [pc, #60]	; (90004824 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900047e8:	6e5c      	ldr	r4, [r3, #100]	; 0x64
900047ea:	428c      	cmp	r4, r1
900047ec:	d0d8      	beq.n	900047a0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
900047ee:	4641      	mov	r1, r8
900047f0:	4628      	mov	r0, r5
900047f2:	4623      	mov	r3, r4
    }
900047f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
900047f8:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047fa:	4628      	mov	r0, r5
900047fc:	4633      	mov	r3, r6
    }
900047fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004802:	4718      	bx	r3
90004804:	4798      	blx	r3
90004806:	e7e3      	b.n	900047d0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004808:	4b0c      	ldr	r3, [pc, #48]	; (9000483c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000480a:	216d      	movs	r1, #109	; 0x6d
9000480c:	4a0c      	ldr	r2, [pc, #48]	; (90004840 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000480e:	480d      	ldr	r0, [pc, #52]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004810:	f022 feb4 	bl	9002757c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004814:	4b0c      	ldr	r3, [pc, #48]	; (90004848 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004816:	216c      	movs	r1, #108	; 0x6c
90004818:	4a09      	ldr	r2, [pc, #36]	; (90004840 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000481a:	480a      	ldr	r0, [pc, #40]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
9000481c:	f022 feae 	bl	9002757c <__assert_func>
90004820:	90002295 	.word	0x90002295
90004824:	90004649 	.word	0x90004649
90004828:	2403975c 	.word	0x2403975c
9000482c:	24039760 	.word	0x24039760
90004830:	24039764 	.word	0x24039764
90004834:	900035c9 	.word	0x900035c9
90004838:	90002299 	.word	0x90002299
9000483c:	9002aaf4 	.word	0x9002aaf4
90004840:	9002aa24 	.word	0x9002aa24
90004844:	9002aa60 	.word	0x9002aa60
90004848:	9002a9e0 	.word	0x9002a9e0

9000484c <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
9000484c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004850:	4604      	mov	r4, r0
90004852:	2500      	movs	r5, #0
        : Widget(), alpha(255), color(0)
90004854:	f04f 08ff 	mov.w	r8, #255	; 0xff
          touchable(false),
90004858:	f44f 7980 	mov.w	r9, #256	; 0x100
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
9000485c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
90004860:	4edb      	ldr	r6, [pc, #876]	; (90004bd0 <_ZN25screen_snake_gameViewBaseC1Ev+0x384>)
90004862:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90004866:	ed2d 8b04 	vpush	{d8-d9}
9000486a:	b093      	sub	sp, #76	; 0x4c
9000486c:	f013 f952 	bl	90017b14 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004870:	4bd8      	ldr	r3, [pc, #864]	; (90004bd4 <_ZN25screen_snake_gameViewBaseC1Ev+0x388>)
90004872:	af10      	add	r7, sp, #64	; 0x40
90004874:	4650      	mov	r0, sl
90004876:	6023      	str	r3, [r4, #0]
90004878:	f64f 73ff 	movw	r3, #65535	; 0xffff
9000487c:	4639      	mov	r1, r7
9000487e:	6426      	str	r6, [r4, #64]	; 0x40
90004880:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
90004884:	63e5      	str	r5, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004886:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
90004888:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
9000488a:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
        : color(col)
9000488e:	66a5      	str	r5, [r4, #104]	; 0x68
90004890:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90004894:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004898:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
9000489c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900048a0:	f00d ffd6 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900048a4:	f504 739c 	add.w	r3, r4, #312	; 0x138
900048a8:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
900048ac:	4658      	mov	r0, fp
900048ae:	f884 80be 	strb.w	r8, [r4, #190]	; 0xbe
          touchable(false),
900048b2:	f8a4 90bc 	strh.w	r9, [r4, #188]	; 0xbc
        : color(col)
900048b6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900048ba:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
900048bc:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
900048c0:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
900048c4:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
900048c8:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
900048cc:	f00f f932 	bl	90013b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900048d0:	f884 8132 	strb.w	r8, [r4, #306]	; 0x132
900048d4:	9804      	ldr	r0, [sp, #16]
900048d6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
          touchable(false),
900048da:	f8a4 9130 	strh.w	r9, [r4, #304]	; 0x130
        : color(col)
900048de:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        : x(0), y(0), width(0), height(0)
900048e2:	e9c4 6543 	strd	r6, r5, [r4, #268]	; 0x10c
900048e6:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
900048ea:	f504 76ba 	add.w	r6, r4, #372	; 0x174
          parent(0),
900048ee:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
          nextDrawChainElement(0),
900048f2:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
900048f6:	f00e ffbf 	bl	90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>
900048fa:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
900048fe:	4630      	mov	r0, r6
90004900:	ee08 6a90 	vmov	s17, r6
90004904:	9305      	str	r3, [sp, #20]
90004906:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
9000490a:	f00e ffb5 	bl	90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>
9000490e:	9805      	ldr	r0, [sp, #20]
90004910:	f00e ffb2 	bl	90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004914:	f504 730a 	add.w	r3, r4, #552	; 0x228
90004918:	4630      	mov	r0, r6
9000491a:	ee09 6a10 	vmov	s18, r6
9000491e:	9306      	str	r3, [sp, #24]
90004920:	f00e ffaa 	bl	90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004924:	9806      	ldr	r0, [sp, #24]
90004926:	1d26      	adds	r6, r4, #4
90004928:	f00e ffa6 	bl	90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000492c:	f04f 32ff 	mov.w	r2, #4294967295
        : typedTextId(id)
90004930:	48a9      	ldr	r0, [pc, #676]	; (90004bd8 <_ZN25screen_snake_gameViewBaseC1Ev+0x38c>)
90004932:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004936:	49a9      	ldr	r1, [pc, #676]	; (90004bdc <_ZN25screen_snake_gameViewBaseC1Ev+0x390>)
90004938:	f8c4 22a4 	str.w	r2, [r4, #676]	; 0x2a4
9000493c:	f8a4 22d8 	strh.w	r2, [r4, #728]	; 0x2d8
90004940:	f8a4 3290 	strh.w	r3, [r4, #656]	; 0x290
90004944:	f8c4 829a 	str.w	r8, [r4, #666]	; 0x29a
90004948:	f8c4 82e2 	str.w	r8, [r4, #738]	; 0x2e2
9000494c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
90004950:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
90004954:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
          touchable(false),
90004958:	f8a4 9288 	strh.w	r9, [r4, #648]	; 0x288
        : color(col)
9000495c:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
90004960:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004964:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
              text(0)
90004968:	f8c4 52a8 	str.w	r5, [r4, #680]	; 0x2a8
9000496c:	f8a4 92d0 	strh.w	r9, [r4, #720]	; 0x2d0
        : color(col)
90004970:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004974:	f8a4 52e0 	strh.w	r5, [r4, #736]	; 0x2e0
        : x(0), y(0), width(0), height(0)
90004978:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
9000497c:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
          nextSibling(0),
90004980:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
          cachedAbsX(0),
90004984:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
90004988:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
9000498c:	e9c4 55ae 	strd	r5, r5, [r4, #696]	; 0x2b8
          nextSibling(0),
90004990:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90004994:	e9c4 55b2 	strd	r5, r5, [r4, #712]	; 0x2c8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004998:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
9000499c:	f8a4 3324 	strh.w	r3, [r4, #804]	; 0x324
        : TextAreaWithWildcardBase(), wc1(0)
900049a0:	4b8f      	ldr	r3, [pc, #572]	; (90004be0 <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
900049a2:	f8c4 832e 	str.w	r8, [r4, #814]	; 0x32e
900049a6:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
        : pobject(pObject), pmemfun(pmemfun_1)
900049aa:	4b8e      	ldr	r3, [pc, #568]	; (90004be4 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
        rect.x = x;
900049ac:	f8df 826c 	ldr.w	r8, [pc, #620]	; 90004c1c <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
900049b0:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
900049b4:	4b8c      	ldr	r3, [pc, #560]	; (90004be8 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
900049b6:	f8c4 22ec 	str.w	r2, [r4, #748]	; 0x2ec
900049ba:	f8c4 3388 	str.w	r3, [r4, #904]	; 0x388
        color = newColor;
900049be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900049c2:	f8c4 2338 	str.w	r2, [r4, #824]	; 0x338
900049c6:	f8c4 12f8 	str.w	r1, [r4, #760]	; 0x2f8
900049ca:	f104 0140 	add.w	r1, r4, #64	; 0x40
900049ce:	f8c4 0320 	str.w	r0, [r4, #800]	; 0x320
900049d2:	4630      	mov	r0, r6
900049d4:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
900049d8:	66a3      	str	r3, [r4, #104]	; 0x68
          touchable(false),
900049da:	f8a4 931c 	strh.w	r9, [r4, #796]	; 0x31c
        : color(col)
900049de:	f8c4 5328 	str.w	r5, [r4, #808]	; 0x328
900049e2:	f8a4 532c 	strh.w	r5, [r4, #812]	; 0x32c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900049e6:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
              text(0)
900049ea:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
900049ee:	f8c4 4384 	str.w	r4, [r4, #900]	; 0x384
900049f2:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        rect.x = x;
900049f6:	6465      	str	r5, [r4, #68]	; 0x44
900049f8:	e9c4 55bc 	strd	r5, r5, [r4, #752]	; 0x2f0
        : x(0), y(0), width(0), height(0)
900049fc:	e9c4 55bf 	strd	r5, r5, [r4, #764]	; 0x2fc
90004a00:	e9c4 55c1 	strd	r5, r5, [r4, #772]	; 0x304
          nextSibling(0),
90004a04:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
          cachedAbsX(0),
90004a08:	e9c4 55c5 	strd	r5, r5, [r4, #788]	; 0x314
90004a0c:	f00c f89c 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a10:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90004a12:	4650      	mov	r0, sl
90004a14:	4639      	mov	r1, r7
90004a16:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a1a:	f00e ff54 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004a1e:	4650      	mov	r0, sl
90004a20:	4629      	mov	r1, r5
        rect.x = x;
90004a22:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004a26:	f00d fece 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004a2a:	4651      	mov	r1, sl
90004a2c:	4630      	mov	r0, r6
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004a2e:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90004a32:	f00c f889 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a36:	f04f 1096 	mov.w	r0, #9830550	; 0x960096
90004a3a:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004a3e:	f104 0198 	add.w	r1, r4, #152	; 0x98
90004a42:	f504 783e 	add.w	r8, r4, #760	; 0x2f8
90004a46:	e9c4 0327 	strd	r0, r3, [r4, #156]	; 0x9c
90004a4a:	4b68      	ldr	r3, [pc, #416]	; (90004bec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
90004a4c:	4630      	mov	r0, r6
90004a4e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90004a52:	f00c f879 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a56:	4b66      	ldr	r3, [pc, #408]	; (90004bf0 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004a58:	a90f      	add	r1, sp, #60	; 0x3c
90004a5a:	463a      	mov	r2, r7
90004a5c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90004a60:	2302      	movs	r3, #2
90004a62:	4658      	mov	r0, fp
90004a64:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004a68:	2303      	movs	r3, #3
90004a6a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a6e:	f00e fc9e 	bl	900133ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
90004a72:	4b60      	ldr	r3, [pc, #384]	; (90004bf4 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
class TypedText
90004a74:	2105      	movs	r1, #5
90004a76:	881b      	ldrh	r3, [r3, #0]
90004a78:	f8a4 10fc 	strh.w	r1, [r4, #252]	; 0xfc
90004a7c:	428b      	cmp	r3, r1
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a7e:	4b5e      	ldr	r3, [pc, #376]	; (90004bf8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90004a80:	9307      	str	r3, [sp, #28]
90004a82:	d925      	bls.n	90004ad0 <_ZN25screen_snake_gameViewBaseC1Ev+0x284>
90004a84:	681b      	ldr	r3, [r3, #0]
90004a86:	2b00      	cmp	r3, #0
90004a88:	f000 81ee 	beq.w	90004e68 <_ZN25screen_snake_gameViewBaseC1Ev+0x61c>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a8c:	7a9a      	ldrb	r2, [r3, #10]
90004a8e:	4b5b      	ldr	r3, [pc, #364]	; (90004bfc <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
90004a90:	681b      	ldr	r3, [r3, #0]
90004a92:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004a96:	4b5a      	ldr	r3, [pc, #360]	; (90004c00 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
90004a98:	6818      	ldr	r0, [r3, #0]
90004a9a:	f7ff fbc7 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004a9e:	f8d9 2000 	ldr.w	r2, [r9]
90004aa2:	4601      	mov	r1, r0
90004aa4:	4857      	ldr	r0, [pc, #348]	; (90004c04 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90004aa6:	6b93      	ldr	r3, [r2, #56]	; 0x38
90004aa8:	4283      	cmp	r3, r0
90004aaa:	f040 81d5 	bne.w	90004e58 <_ZN25screen_snake_gameViewBaseC1Ev+0x60c>
        return fontHeight;
90004aae:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90004ab2:	6c93      	ldr	r3, [r2, #72]	; 0x48
90004ab4:	4648      	mov	r0, r9
90004ab6:	9103      	str	r1, [sp, #12]
90004ab8:	4798      	blx	r3
90004aba:	fb15 f500 	smulbb	r5, r5, r0
90004abe:	f8d9 3000 	ldr.w	r3, [r9]
90004ac2:	4648      	mov	r0, r9
90004ac4:	b2ad      	uxth	r5, r5
90004ac6:	9903      	ldr	r1, [sp, #12]
90004ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004aca:	4798      	blx	r3
90004acc:	4405      	add	r5, r0
90004ace:	b22d      	sxth	r5, r5
    btn_snake_start.setAction(buttonCallback);
90004ad0:	f504 7360 	add.w	r3, r4, #896	; 0x380
        color = col;
90004ad4:	f04f 32ff 	mov.w	r2, #4294967295
90004ad8:	4659      	mov	r1, fp
90004ada:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004adc:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
90004ae0:	f04f 0901 	mov.w	r9, #1
90004ae4:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004ae8:	2500      	movs	r5, #0
90004aea:	9303      	str	r3, [sp, #12]
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004aec:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
        colorPressed = col;
90004af0:	e9c4 2240 	strd	r2, r2, [r4, #256]	; 0x100
90004af4:	f00c f828 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004af8:	4943      	ldr	r1, [pc, #268]	; (90004c08 <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90004afa:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004afe:	4630      	mov	r0, r6
90004b00:	e9c4 1344 	strd	r1, r3, [r4, #272]	; 0x110
90004b04:	4b41      	ldr	r3, [pc, #260]	; (90004c0c <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
90004b06:	f504 7186 	add.w	r1, r4, #268	; 0x10c
90004b0a:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
90004b0e:	f00c f81b 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b12:	4b3f      	ldr	r3, [pc, #252]	; (90004c10 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90004b14:	ed9d 8a04 	vldr	s16, [sp, #16]
90004b18:	aa0f      	add	r2, sp, #60	; 0x3c
90004b1a:	9700      	str	r7, [sp, #0]
90004b1c:	a90d      	add	r1, sp, #52	; 0x34
90004b1e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90004b22:	230a      	movs	r3, #10
90004b24:	ee18 0a10 	vmov	r0, s16
90004b28:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b2c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b30:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b34:	4613      	mov	r3, r2
90004b36:	aa0e      	add	r2, sp, #56	; 0x38
90004b38:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b3c:	f00e fe06 	bl	9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90004b40:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b44:	9b03      	ldr	r3, [sp, #12]
90004b46:	ee18 1a10 	vmov	r1, s16
90004b4a:	4630      	mov	r0, r6
90004b4c:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
90004b50:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90004b54:	f884 b16a 	strb.w	fp, [r4, #362]	; 0x16a
90004b58:	f00b fff6 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b5c:	4b2d      	ldr	r3, [pc, #180]	; (90004c14 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90004b5e:	aa0f      	add	r2, sp, #60	; 0x3c
90004b60:	9700      	str	r7, [sp, #0]
90004b62:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
90004b66:	2309      	movs	r3, #9
90004b68:	a90d      	add	r1, sp, #52	; 0x34
90004b6a:	ee18 0a90 	vmov	r0, s17
90004b6e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b72:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b76:	4613      	mov	r3, r2
90004b78:	aa0e      	add	r2, sp, #56	; 0x38
90004b7a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b7e:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b82:	f00e fde3 	bl	9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004b86:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b8a:	9b03      	ldr	r3, [sp, #12]
90004b8c:	ee18 1a90 	vmov	r1, s17
90004b90:	4630      	mov	r0, r6
90004b92:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
90004b96:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
90004b9a:	f884 b1a6 	strb.w	fp, [r4, #422]	; 0x1a6
90004b9e:	f00b ffd3 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba2:	4b1d      	ldr	r3, [pc, #116]	; (90004c18 <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90004ba4:	ed9d 8a05 	vldr	s16, [sp, #20]
90004ba8:	aa0f      	add	r2, sp, #60	; 0x3c
90004baa:	9700      	str	r7, [sp, #0]
90004bac:	a90d      	add	r1, sp, #52	; 0x34
90004bae:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004bb2:	2307      	movs	r3, #7
90004bb4:	ee18 0a10 	vmov	r0, s16
90004bb8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004bbc:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004bc0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004bc4:	4613      	mov	r3, r2
90004bc6:	aa0e      	add	r2, sp, #56	; 0x38
90004bc8:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004bcc:	e028      	b.n	90004c20 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d4>
90004bce:	bf00      	nop
90004bd0:	9002b6d8 	.word	0x9002b6d8
90004bd4:	9002ac20 	.word	0x9002ac20
90004bd8:	9002a0f0 	.word	0x9002a0f0
90004bdc:	9002b648 	.word	0x9002b648
90004be0:	9002ab78 	.word	0x9002ab78
90004be4:	9002ac08 	.word	0x9002ac08
90004be8:	900046dd 	.word	0x900046dd
90004bec:	ff1eff00 	.word	0xff1eff00
90004bf0:	006f0078 	.word	0x006f0078
90004bf4:	24039760 	.word	0x24039760
90004bf8:	2403975c 	.word	0x2403975c
90004bfc:	24039764 	.word	0x24039764
90004c00:	24039768 	.word	0x24039768
90004c04:	900035cd 	.word	0x900035cd
90004c08:	001e0014 	.word	0x001e0014
90004c0c:	ffff0000 	.word	0xffff0000
90004c10:	0095018e 	.word	0x0095018e
90004c14:	00b901b2 	.word	0x00b901b2
90004c18:	00dd018e 	.word	0x00dd018e
90004c1c:	011001e0 	.word	0x011001e0
90004c20:	f00e fd94 	bl	9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c24:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004c28:	9b03      	ldr	r3, [sp, #12]
90004c2a:	ee18 1a10 	vmov	r1, s16
90004c2e:	4630      	mov	r0, r6
90004c30:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90004c34:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
90004c38:	f884 b1e2 	strb.w	fp, [r4, #482]	; 0x1e2
90004c3c:	f00b ff84 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c40:	4b92      	ldr	r3, [pc, #584]	; (90004e8c <_ZN25screen_snake_gameViewBaseC1Ev+0x640>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90004c42:	aa0f      	add	r2, sp, #60	; 0x3c
90004c44:	9700      	str	r7, [sp, #0]
90004c46:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
90004c4a:	2308      	movs	r3, #8
90004c4c:	a90d      	add	r1, sp, #52	; 0x34
90004c4e:	ee19 0a10 	vmov	r0, s18
90004c52:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004c56:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004c5a:	4613      	mov	r3, r2
90004c5c:	aa0e      	add	r2, sp, #56	; 0x38
90004c5e:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004c62:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c66:	f00e fd71 	bl	9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c6a:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004c6e:	9b03      	ldr	r3, [sp, #12]
90004c70:	ee19 1a10 	vmov	r1, s18
90004c74:	4630      	mov	r0, r6
90004c76:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
90004c7a:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
90004c7e:	f884 b21e 	strb.w	fp, [r4, #542]	; 0x21e
90004c82:	f00b ff61 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c86:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90004c8a:	aa0f      	add	r2, sp, #60	; 0x3c
90004c8c:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c90:	9700      	str	r7, [sp, #0]
90004c92:	a90d      	add	r1, sp, #52	; 0x34
90004c94:	f8dd 9018 	ldr.w	r9, [sp, #24]
90004c98:	4613      	mov	r3, r2
90004c9a:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
90004c9e:	200b      	movs	r0, #11
90004ca0:	aa0e      	add	r2, sp, #56	; 0x38
90004ca2:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004ca6:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
90004caa:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
90004cae:	4648      	mov	r0, r9
90004cb0:	f00e fd4c 	bl	9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004cb4:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004cb8:	9b03      	ldr	r3, [sp, #12]
90004cba:	4649      	mov	r1, r9
90004cbc:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
90004cc0:	4630      	mov	r0, r6
90004cc2:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
    lbl_score_val.setPosition(434, 0, 46, 24);
90004cc6:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
90004cca:	f00b ff3d 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90004cce:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004cd2:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        boundingArea = calculateBoundingArea();
90004cd6:	ad08      	add	r5, sp, #32
        color = newColor;
90004cd8:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
90004cdc:	f44f 73b4 	mov.w	r3, #360	; 0x168
        boundingArea = calculateBoundingArea();
90004ce0:	4651      	mov	r1, sl
90004ce2:	4628      	mov	r0, r5
90004ce4:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
90004ce8:	f00e f85c 	bl	90012da4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
90004cec:	4b68      	ldr	r3, [pc, #416]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
90004cee:	2204      	movs	r2, #4
90004cf0:	9310      	str	r3, [sp, #64]	; 0x40
90004cf2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90004cf6:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004cfa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004cfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8W6));
90004d02:	4639      	mov	r1, r7
90004d04:	4650      	mov	r0, sl
90004d06:	f00e faf5 	bl	900132f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004d0a:	4651      	mov	r1, sl
90004d0c:	4630      	mov	r0, r6
        alpha = newAlpha;
90004d0e:	f884 b29a 	strb.w	fp, [r4, #666]	; 0x29a
90004d12:	f00b ff19 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004d16:	f44f 72d9 	mov.w	r2, #434	; 0x1b2
        setX(x);
90004d1a:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        setY(y);
90004d1e:	495d      	ldr	r1, [pc, #372]	; (90004e94 <_ZN25screen_snake_gameViewBaseC1Ev+0x648>)
        rect.x = x;
90004d20:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
        setWidth(width);
90004d24:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90004d26:	428a      	cmp	r2, r1
90004d28:	f040 8092 	bne.w	90004e50 <_ZN25screen_snake_gameViewBaseC1Ev+0x604>
        rect.width = width;
90004d2c:	222e      	movs	r2, #46	; 0x2e
        boundingArea = calculateBoundingArea();
90004d2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d32:	4649      	mov	r1, r9
90004d34:	4628      	mov	r0, r5
90004d36:	f8a4 22b4 	strh.w	r2, [r4, #692]	; 0x2b4
90004d3a:	4798      	blx	r3
90004d3c:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
90004d40:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90004d48:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
90004d4c:	4952      	ldr	r1, [pc, #328]	; (90004e98 <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
90004d4e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90004d50:	428a      	cmp	r2, r1
90004d52:	d16f      	bne.n	90004e34 <_ZN25screen_snake_gameViewBaseC1Ev+0x5e8>
        rect.height = height;
90004d54:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90004d56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d5a:	4649      	mov	r1, r9
90004d5c:	4628      	mov	r0, r5
90004d5e:	f8a4 22b6 	strh.w	r2, [r4, #694]	; 0x2b6
90004d62:	4798      	blx	r3
90004d64:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004d68:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90004d70:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        color = newColor;
90004d74:	f04f 31ff 	mov.w	r1, #4294967295
90004d78:	4848      	ldr	r0, [pc, #288]	; (90004e9c <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
        boundingArea = calculateBoundingArea();
90004d7a:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90004d7e:	2300      	movs	r3, #0
        color = newColor;
90004d80:	f8c4 12dc 	str.w	r1, [r4, #732]	; 0x2dc
        linespace = space;
90004d84:	4282      	cmp	r2, r0
90004d86:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        boundingArea = calculateBoundingArea();
90004d8a:	d157      	bne.n	90004e3c <_ZN25screen_snake_gameViewBaseC1Ev+0x5f0>
90004d8c:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
90004d90:	e9c4 31ba 	strd	r3, r1, [r4, #744]	; 0x2e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004d94:	9b07      	ldr	r3, [sp, #28]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8AZ9).getText());
90004d96:	f504 7a50 	add.w	sl, r4, #832	; 0x340
90004d9a:	681b      	ldr	r3, [r3, #0]
90004d9c:	2b00      	cmp	r3, #0
90004d9e:	d069      	beq.n	90004e74 <_ZN25screen_snake_gameViewBaseC1Ev+0x628>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004da0:	4b3f      	ldr	r3, [pc, #252]	; (90004ea0 <_ZN25screen_snake_gameViewBaseC1Ev+0x654>)
90004da2:	881b      	ldrh	r3, [r3, #0]
90004da4:	2b02      	cmp	r3, #2
90004da6:	d96b      	bls.n	90004e80 <_ZN25screen_snake_gameViewBaseC1Ev+0x634>
        return texts->getText(typedTextId);
90004da8:	4b3e      	ldr	r3, [pc, #248]	; (90004ea4 <_ZN25screen_snake_gameViewBaseC1Ev+0x658>)
90004daa:	2102      	movs	r1, #2
90004dac:	6818      	ldr	r0, [r3, #0]
90004dae:	f7ff fa3d 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90004db2:	4a3d      	ldr	r2, [pc, #244]	; (90004ea8 <_ZN25screen_snake_gameViewBaseC1Ev+0x65c>)
90004db4:	4603      	mov	r3, r0
90004db6:	2120      	movs	r1, #32
90004db8:	4650      	mov	r0, sl
90004dba:	f014 fb63 	bl	90019484 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90004dbe:	4b34      	ldr	r3, [pc, #208]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G1O3));
90004dc0:	4639      	mov	r1, r7
90004dc2:	4648      	mov	r0, r9
90004dc4:	9310      	str	r3, [sp, #64]	; 0x40
90004dc6:	2303      	movs	r3, #3
        wc1 = value;
90004dc8:	f8c4 a2f4 	str.w	sl, [r4, #756]	; 0x2f4
90004dcc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90004dd0:	f00e fa90 	bl	900132f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90004dd4:	235a      	movs	r3, #90	; 0x5a
90004dd6:	4649      	mov	r1, r9
90004dd8:	4630      	mov	r0, r6
        linespace = space;
90004dda:	f04f 0900 	mov.w	r9, #0
        alpha = newAlpha;
90004dde:	f884 32e2 	strb.w	r3, [r4, #738]	; 0x2e2
90004de2:	f00b feb1 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004de6:	4b31      	ldr	r3, [pc, #196]	; (90004eac <_ZN25screen_snake_gameViewBaseC1Ev+0x660>)
        boundingArea = calculateBoundingArea();
90004de8:	4641      	mov	r1, r8
90004dea:	4628      	mov	r0, r5
90004dec:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
        color = newColor;
90004df0:	4b2f      	ldr	r3, [pc, #188]	; (90004eb0 <_ZN25screen_snake_gameViewBaseC1Ev+0x664>)
        linespace = space;
90004df2:	f8a4 932c 	strh.w	r9, [r4, #812]	; 0x32c
        color = newColor;
90004df6:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90004dfa:	f00d ffd3 	bl	90012da4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004dfe:	4b24      	ldr	r3, [pc, #144]	; (90004e90 <_ZN25screen_snake_gameViewBaseC1Ev+0x644>)
90004e00:	2201      	movs	r2, #1
90004e02:	9310      	str	r3, [sp, #64]	; 0x40
90004e04:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90004e08:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
90004e14:	4639      	mov	r1, r7
90004e16:	4640      	mov	r0, r8
90004e18:	f00e fa6c 	bl	900132f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004e1c:	4630      	mov	r0, r6
90004e1e:	4641      	mov	r1, r8
        visible = vis;
90004e20:	f884 931d 	strb.w	r9, [r4, #797]	; 0x31d
90004e24:	f00b fe90 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004e28:	4620      	mov	r0, r4
90004e2a:	b013      	add	sp, #76	; 0x4c
90004e2c:	ecbd 8b04 	vpop	{d8-d9}
90004e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90004e34:	2118      	movs	r1, #24
90004e36:	4648      	mov	r0, r9
90004e38:	4790      	blx	r2
90004e3a:	e799      	b.n	90004d70 <_ZN25screen_snake_gameViewBaseC1Ev+0x524>
90004e3c:	4649      	mov	r1, r9
90004e3e:	4628      	mov	r0, r5
90004e40:	4790      	blx	r2
90004e42:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004e46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004e4e:	e7a1      	b.n	90004d94 <_ZN25screen_snake_gameViewBaseC1Ev+0x548>
        setWidth(width);
90004e50:	212e      	movs	r1, #46	; 0x2e
90004e52:	4648      	mov	r0, r9
90004e54:	4790      	blx	r2
90004e56:	e777      	b.n	90004d48 <_ZN25screen_snake_gameViewBaseC1Ev+0x4fc>
90004e58:	9103      	str	r1, [sp, #12]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004e5a:	4648      	mov	r0, r9
90004e5c:	4798      	blx	r3
90004e5e:	f8d9 2000 	ldr.w	r2, [r9]
90004e62:	4605      	mov	r5, r0
90004e64:	9903      	ldr	r1, [sp, #12]
90004e66:	e624      	b.n	90004ab2 <_ZN25screen_snake_gameViewBaseC1Ev+0x266>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e68:	4b12      	ldr	r3, [pc, #72]	; (90004eb4 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
90004e6a:	216c      	movs	r1, #108	; 0x6c
90004e6c:	4a12      	ldr	r2, [pc, #72]	; (90004eb8 <_ZN25screen_snake_gameViewBaseC1Ev+0x66c>)
90004e6e:	4813      	ldr	r0, [pc, #76]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e70:	f022 fb84 	bl	9002757c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e74:	4b0f      	ldr	r3, [pc, #60]	; (90004eb4 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
90004e76:	2160      	movs	r1, #96	; 0x60
90004e78:	4a11      	ldr	r2, [pc, #68]	; (90004ec0 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e7a:	4810      	ldr	r0, [pc, #64]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e7c:	f022 fb7e 	bl	9002757c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e80:	4b10      	ldr	r3, [pc, #64]	; (90004ec4 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
90004e82:	2161      	movs	r1, #97	; 0x61
90004e84:	4a0e      	ldr	r2, [pc, #56]	; (90004ec0 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e86:	480d      	ldr	r0, [pc, #52]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
90004e88:	f022 fb78 	bl	9002757c <__assert_func>
90004e8c:	00b9016a 	.word	0x00b9016a
90004e90:	9002a0f0 	.word	0x9002a0f0
90004e94:	90004529 	.word	0x90004529
90004e98:	90004551 	.word	0x90004551
90004e9c:	9000459d 	.word	0x9000459d
90004ea0:	24039760 	.word	0x24039760
90004ea4:	24039768 	.word	0x24039768
90004ea8:	9002ab6c 	.word	0x9002ab6c
90004eac:	00700076 	.word	0x00700076
90004eb0:	ffff0000 	.word	0xffff0000
90004eb4:	9002a9e0 	.word	0x9002a9e0
90004eb8:	9002aa24 	.word	0x9002aa24
90004ebc:	9002aa60 	.word	0x9002aa60
90004ec0:	9002ab34 	.word	0x9002ab34
90004ec4:	9002aaf4 	.word	0x9002aaf4

90004ec8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90004ec8:	6a80      	ldr	r0, [r0, #40]	; 0x28
90004eca:	4770      	bx	lr

90004ecc <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ecc:	4770      	bx	lr
90004ece:	bf00      	nop

90004ed0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90004ed0:	4770      	bx	lr
90004ed2:	bf00      	nop

90004ed4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90004ed4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90004ed8:	b133      	cbz	r3, 90004ee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90004eda:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004edc:	f100 0374 	add.w	r3, r0, #116	; 0x74
90004ee0:	65c2      	str	r2, [r0, #92]	; 0x5c
90004ee2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004ee4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
90004ee6:	4770      	bx	lr
90004ee8:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004eea:	f100 0370 	add.w	r3, r0, #112	; 0x70
90004eee:	65c2      	str	r2, [r0, #92]	; 0x5c
90004ef0:	681b      	ldr	r3, [r3, #0]
90004ef2:	6603      	str	r3, [r0, #96]	; 0x60
    }
90004ef4:	4770      	bx	lr
90004ef6:	bf00      	nop

90004ef8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004ef8:	4770      	bx	lr
90004efa:	bf00      	nop

90004efc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004efc:	4770      	bx	lr
90004efe:	bf00      	nop

90004f00 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f00:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f02:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004f04:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004f06:	6844      	ldr	r4, [r0, #4]
90004f08:	f012 0f01 	tst.w	r2, #1
90004f0c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004f10:	d103      	bne.n	90004f1a <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90004f12:	689b      	ldr	r3, [r3, #8]
    }
90004f14:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f18:	4718      	bx	r3
90004f1a:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004f1e:	689b      	ldr	r3, [r3, #8]
90004f20:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004f24:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f28:	58d3      	ldr	r3, [r2, r3]
90004f2a:	4718      	bx	r3

90004f2c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004f2c:	6843      	ldr	r3, [r0, #4]
90004f2e:	b13b      	cbz	r3, 90004f40 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004f30:	6883      	ldr	r3, [r0, #8]
90004f32:	b10b      	cbz	r3, 90004f38 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004f34:	2001      	movs	r0, #1
    }
90004f36:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004f38:	68c0      	ldr	r0, [r0, #12]
90004f3a:	f000 0001 	and.w	r0, r0, #1
90004f3e:	4770      	bx	lr
90004f40:	4618      	mov	r0, r3
90004f42:	4770      	bx	lr

90004f44 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004f44:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004f48:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90004f4c:	4770      	bx	lr
90004f4e:	bf00      	nop

90004f50 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004f50:	b510      	push	{r4, lr}
90004f52:	4604      	mov	r4, r0
90004f54:	2178      	movs	r1, #120	; 0x78
90004f56:	f022 fae3 	bl	90027520 <_ZdlPvj>
90004f5a:	4620      	mov	r0, r4
90004f5c:	bd10      	pop	{r4, pc}
90004f5e:	bf00      	nop

90004f60 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f60:	b510      	push	{r4, lr}
90004f62:	4604      	mov	r4, r0
90004f64:	2110      	movs	r1, #16
90004f66:	f022 fadb 	bl	90027520 <_ZdlPvj>
90004f6a:	4620      	mov	r0, r4
90004f6c:	bd10      	pop	{r4, pc}
90004f6e:	bf00      	nop

90004f70 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90004f70:	4b03      	ldr	r3, [pc, #12]	; (90004f80 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90004f72:	b510      	push	{r4, lr}
90004f74:	4604      	mov	r4, r0
90004f76:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004f78:	f00f fc92 	bl	900148a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004f7c:	4620      	mov	r0, r4
90004f7e:	bd10      	pop	{r4, pc}
90004f80:	9002ae1c 	.word	0x9002ae1c

90004f84 <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90004f84:	4b07      	ldr	r3, [pc, #28]	; (90004fa4 <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
90004f86:	b500      	push	{lr}
90004f88:	b083      	sub	sp, #12
90004f8a:	6003      	str	r3, [r0, #0]
90004f8c:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004f8e:	f00f fc87 	bl	900148a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004f92:	9801      	ldr	r0, [sp, #4]
90004f94:	f242 6128 	movw	r1, #9768	; 0x2628
90004f98:	f022 fac2 	bl	90027520 <_ZdlPvj>
90004f9c:	9801      	ldr	r0, [sp, #4]
90004f9e:	b003      	add	sp, #12
90004fa0:	f85d fb04 	ldr.w	pc, [sp], #4
90004fa4:	9002ae1c 	.word	0x9002ae1c

90004fa8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_tictactoe_gameViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_pos1)
90004fa8:	f500 722a 	add.w	r2, r0, #680	; 0x2a8
90004fac:	428a      	cmp	r2, r1
90004fae:	d000      	beq.n	90004fb2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa>
        //intr_pos1
        //When btn_pos1 clicked call virtual function
        //Call pos1_clicked
        pos1_clicked();
    }
}
90004fb0:	4770      	bx	lr
        pos1_clicked();
90004fb2:	6803      	ldr	r3, [r0, #0]
90004fb4:	4a02      	ldr	r2, [pc, #8]	; (90004fc0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x18>)
90004fb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004fb8:	4293      	cmp	r3, r2
90004fba:	d0f9      	beq.n	90004fb0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
90004fbc:	4718      	bx	r3
90004fbe:	bf00      	nop
90004fc0:	90004ecd 	.word	0x90004ecd

90004fc4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90004fc4:	6b03      	ldr	r3, [r0, #48]	; 0x30
90004fc6:	b30b      	cbz	r3, 9000500c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90004fc8:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
90004fca:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
90004fcc:	68d1      	ldr	r1, [r2, #12]
90004fce:	4604      	mov	r4, r0
90004fd0:	481a      	ldr	r0, [pc, #104]	; (9000503c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
90004fd2:	4281      	cmp	r1, r0
90004fd4:	d11b      	bne.n	9000500e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90004fd6:	6858      	ldr	r0, [r3, #4]
90004fd8:	b180      	cbz	r0, 90004ffc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90004fda:	6899      	ldr	r1, [r3, #8]
90004fdc:	b1f1      	cbz	r1, 9000501c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
90004fde:	6892      	ldr	r2, [r2, #8]
90004fe0:	4917      	ldr	r1, [pc, #92]	; (90005040 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90004fe2:	428a      	cmp	r2, r1
90004fe4:	d124      	bne.n	90005030 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004fe6:	68da      	ldr	r2, [r3, #12]
90004fe8:	6858      	ldr	r0, [r3, #4]
90004fea:	eb00 0062 	add.w	r0, r0, r2, asr #1
90004fee:	07d2      	lsls	r2, r2, #31
90004ff0:	d405      	bmi.n	90004ffe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90004ff2:	4621      	mov	r1, r4
90004ff4:	689b      	ldr	r3, [r3, #8]
        }
    }
90004ff6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004ffa:	4718      	bx	r3
90004ffc:	bd70      	pop	{r4, r5, r6, pc}
90004ffe:	6899      	ldr	r1, [r3, #8]
90005000:	6803      	ldr	r3, [r0, #0]
90005002:	585b      	ldr	r3, [r3, r1]
90005004:	4621      	mov	r1, r4
90005006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000500a:	4718      	bx	r3
9000500c:	4770      	bx	lr
        if (action && action->isValid())
9000500e:	4618      	mov	r0, r3
90005010:	4788      	blx	r1
90005012:	2800      	cmp	r0, #0
90005014:	d0f2      	beq.n	90004ffc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
90005016:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005018:	681a      	ldr	r2, [r3, #0]
9000501a:	e7e0      	b.n	90004fde <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
9000501c:	68dd      	ldr	r5, [r3, #12]
9000501e:	07ee      	lsls	r6, r5, #31
90005020:	d5ec      	bpl.n	90004ffc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90005022:	6892      	ldr	r2, [r2, #8]
90005024:	4e06      	ldr	r6, [pc, #24]	; (90005040 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90005026:	42b2      	cmp	r2, r6
90005028:	d102      	bne.n	90005030 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
9000502a:	eb00 0065 	add.w	r0, r0, r5, asr #1
9000502e:	e7e7      	b.n	90005000 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90005030:	4621      	mov	r1, r4
90005032:	4618      	mov	r0, r3
    }
90005034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90005038:	4710      	bx	r2
9000503a:	bf00      	nop
9000503c:	90004f2d 	.word	0x90004f2d
90005040:	90004f01 	.word	0x90004f01

90005044 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005044:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005046:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005048:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000504a:	bf18      	it	ne
9000504c:	2201      	movne	r2, #1
        return pressed;
9000504e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
90005052:	460d      	mov	r5, r1
90005054:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005056:	42b2      	cmp	r2, r6
90005058:	d004      	beq.n	90005064 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
9000505a:	b116      	cbz	r6, 90005062 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000505c:	792b      	ldrb	r3, [r5, #4]
9000505e:	2b01      	cmp	r3, #1
90005060:	d00e      	beq.n	90005080 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
90005062:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005064:	fab3 f383 	clz	r3, r3
90005068:	095b      	lsrs	r3, r3, #5
9000506a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
9000506e:	6803      	ldr	r3, [r0, #0]
90005070:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
90005074:	4798      	blx	r3
            invalidate();
90005076:	6823      	ldr	r3, [r4, #0]
90005078:	4620      	mov	r0, r4
9000507a:	695b      	ldr	r3, [r3, #20]
9000507c:	4798      	blx	r3
9000507e:	e7ec      	b.n	9000505a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005080:	6823      	ldr	r3, [r4, #0]
90005082:	4a20      	ldr	r2, [pc, #128]	; (90005104 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005084:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005088:	4293      	cmp	r3, r2
9000508a:	d127      	bne.n	900050dc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
9000508c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000508e:	2b00      	cmp	r3, #0
90005090:	d0e7      	beq.n	90005062 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005092:	6819      	ldr	r1, [r3, #0]
90005094:	481c      	ldr	r0, [pc, #112]	; (90005108 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
90005096:	68ca      	ldr	r2, [r1, #12]
90005098:	4282      	cmp	r2, r0
9000509a:	d123      	bne.n	900050e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
9000509c:	685a      	ldr	r2, [r3, #4]
9000509e:	2a00      	cmp	r2, #0
900050a0:	d0df      	beq.n	90005062 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900050a2:	689d      	ldr	r5, [r3, #8]
900050a4:	b175      	cbz	r5, 900050c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
900050a6:	688e      	ldr	r6, [r1, #8]
900050a8:	4a18      	ldr	r2, [pc, #96]	; (9000510c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900050aa:	4296      	cmp	r6, r2
900050ac:	d123      	bne.n	900050f6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900050ae:	68d9      	ldr	r1, [r3, #12]
900050b0:	685a      	ldr	r2, [r3, #4]
900050b2:	eb02 0061 	add.w	r0, r2, r1, asr #1
900050b6:	07ca      	lsls	r2, r1, #31
900050b8:	d41b      	bmi.n	900050f2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
900050ba:	689b      	ldr	r3, [r3, #8]
900050bc:	4621      	mov	r1, r4
    }
900050be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900050c2:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
900050c4:	68d8      	ldr	r0, [r3, #12]
900050c6:	07c6      	lsls	r6, r0, #31
900050c8:	d5cb      	bpl.n	90005062 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900050ca:	688e      	ldr	r6, [r1, #8]
900050cc:	490f      	ldr	r1, [pc, #60]	; (9000510c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900050ce:	428e      	cmp	r6, r1
900050d0:	d111      	bne.n	900050f6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900050d2:	eb02 0060 	add.w	r0, r2, r0, asr #1
900050d6:	6803      	ldr	r3, [r0, #0]
900050d8:	595b      	ldr	r3, [r3, r5]
900050da:	e7ef      	b.n	900050bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900050dc:	4620      	mov	r0, r4
    }
900050de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900050e2:	4718      	bx	r3
        if (action && action->isValid())
900050e4:	4618      	mov	r0, r3
900050e6:	4790      	blx	r2
900050e8:	2800      	cmp	r0, #0
900050ea:	d0ba      	beq.n	90005062 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900050ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
900050ee:	6819      	ldr	r1, [r3, #0]
900050f0:	e7d9      	b.n	900050a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900050f2:	689d      	ldr	r5, [r3, #8]
900050f4:	e7ef      	b.n	900050d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900050f6:	4621      	mov	r1, r4
900050f8:	4618      	mov	r0, r3
900050fa:	4633      	mov	r3, r6
    }
900050fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005100:	4718      	bx	r3
90005102:	bf00      	nop
90005104:	90004fc5 	.word	0x90004fc5
90005108:	90004f2d 	.word	0x90004f2d
9000510c:	90004f01 	.word	0x90004f01

90005110 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
90005110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005114:	ed2d 8b06 	vpush	{d8-d10}
90005118:	b09f      	sub	sp, #124	; 0x7c
9000511a:	4683      	mov	fp, r0
9000511c:	f012 fcfa 	bl	90017b14 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90005120:	f44f 7280 	mov.w	r2, #256	; 0x100
    flexButtonCallback(this, &screen_tictactoe_gameViewBase::flexButtonCallbackHandler)
90005124:	482a      	ldr	r0, [pc, #168]	; (900051d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
90005126:	2400      	movs	r4, #0
90005128:	f8ab 2064 	strh.w	r2, [fp, #100]	; 0x64
        : Widget(), alpha(255), color(0)
9000512c:	22ff      	movs	r2, #255	; 0xff
9000512e:	4929      	ldr	r1, [pc, #164]	; (900051d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
90005130:	f10b 0a98 	add.w	sl, fp, #152	; 0x98
90005134:	f8cb 0000 	str.w	r0, [fp]
90005138:	f10b 006c 	add.w	r0, fp, #108	; 0x6c
9000513c:	f88b 2066 	strb.w	r2, [fp, #102]	; 0x66
90005140:	f64f 72ff 	movw	r2, #65535	; 0xffff
90005144:	f8cb 1040 	str.w	r1, [fp, #64]	; 0x40
90005148:	a91d      	add	r1, sp, #116	; 0x74
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000514a:	4e23      	ldr	r6, [pc, #140]	; (900051d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
9000514c:	ee0a 0a10 	vmov	s20, r0
90005150:	f8cb 403c 	str.w	r4, [fp, #60]	; 0x3c
        : color(col)
90005154:	f8cb 4068 	str.w	r4, [fp, #104]	; 0x68
90005158:	f8ad 2074 	strh.w	r2, [sp, #116]	; 0x74
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000515c:	4f1f      	ldr	r7, [pc, #124]	; (900051dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
        : x(0), y(0), width(0), height(0)
9000515e:	e9cb 4411 	strd	r4, r4, [fp, #68]	; 0x44
90005162:	e9cb 4413 	strd	r4, r4, [fp, #76]	; 0x4c
          nextSibling(0),
90005166:	e9cb 4415 	strd	r4, r4, [fp, #84]	; 0x54
          cachedAbsX(0),
9000516a:	e9cb 4417 	strd	r4, r4, [fp, #92]	; 0x5c
9000516e:	f00d fb6f 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005172:	4650      	mov	r0, sl
90005174:	f00d f940 	bl	900123f8 <_ZN8touchgfx4LineC1Ev>
90005178:	6832      	ldr	r2, [r6, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000517a:	f50b 7384 	add.w	r3, fp, #264	; 0x108
        : widgetWidth(0)
9000517e:	f8ab 410c 	strh.w	r4, [fp, #268]	; 0x10c
90005182:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
90005186:	f8cb 7108 	str.w	r7, [fp, #264]	; 0x108
9000518a:	9318      	str	r3, [sp, #96]	; 0x60
9000518c:	2900      	cmp	r1, #0
9000518e:	d02f      	beq.n	900051f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
90005190:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90005192:	2800      	cmp	r0, #0
90005194:	f001 8086 	beq.w	900062a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1194>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90005198:	6802      	ldr	r2, [r0, #0]
9000519a:	4c11      	ldr	r4, [pc, #68]	; (900051e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
9000519c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
9000519e:	42a1      	cmp	r1, r4
900051a0:	d033      	beq.n	9000520a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900051a2:	4788      	blx	r1
        return auxiliaryLCD;
900051a4:	6832      	ldr	r2, [r6, #0]
900051a6:	fab0 f580 	clz	r5, r0
900051aa:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900051ac:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900051ae:	b140      	cbz	r0, 900051c2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900051b0:	6802      	ldr	r2, [r0, #0]
900051b2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900051b4:	42a2      	cmp	r2, r4
900051b6:	d028      	beq.n	9000520a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900051b8:	4790      	blx	r2
900051ba:	2800      	cmp	r0, #0
900051bc:	bf08      	it	eq
900051be:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900051c2:	bb15      	cbnz	r5, 9000520a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900051c4:	4b07      	ldr	r3, [pc, #28]	; (900051e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
900051c6:	212c      	movs	r1, #44	; 0x2c
900051c8:	4a07      	ldr	r2, [pc, #28]	; (900051e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
900051ca:	4808      	ldr	r0, [pc, #32]	; (900051ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>)
900051cc:	f022 f9d6 	bl	9002757c <__assert_func>
900051d0:	9002ae1c 	.word	0x9002ae1c
900051d4:	9002b6d8 	.word	0x9002b6d8
900051d8:	24039704 	.word	0x24039704
900051dc:	90029f00 	.word	0x90029f00
900051e0:	90002339 	.word	0x90002339
900051e4:	9002ac60 	.word	0x9002ac60
900051e8:	9002acc0 	.word	0x9002acc0
900051ec:	9002acfc 	.word	0x9002acfc
        return instance->lcdRef;
900051f0:	6890      	ldr	r0, [r2, #8]
900051f2:	4ce1      	ldr	r4, [pc, #900]	; (90005578 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900051f4:	6801      	ldr	r1, [r0, #0]
900051f6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900051f8:	42a1      	cmp	r1, r4
900051fa:	d1d2      	bne.n	900051a2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
900051fc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900051fe:	b120      	cbz	r0, 9000520a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005200:	6802      	ldr	r2, [r0, #0]
90005202:	2501      	movs	r5, #1
90005204:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005206:	42a2      	cmp	r2, r4
90005208:	d1d6      	bne.n	900051b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
9000520a:	4ddc      	ldr	r5, [pc, #880]	; (9000557c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
9000520c:	f04f 0900 	mov.w	r9, #0
90005210:	f50b 708e 	add.w	r0, fp, #284	; 0x11c
90005214:	f50b 73c6 	add.w	r3, fp, #396	; 0x18c
90005218:	f105 0824 	add.w	r8, r5, #36	; 0x24
9000521c:	f8cb 5108 	str.w	r5, [fp, #264]	; 0x108
90005220:	f8cb 9114 	str.w	r9, [fp, #276]	; 0x114
90005224:	ee08 0a10 	vmov	s16, r0
90005228:	f8cb 8110 	str.w	r8, [fp, #272]	; 0x110
9000522c:	931a      	str	r3, [sp, #104]	; 0x68
9000522e:	f00d f8e3 	bl	900123f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005232:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
90005234:	f8ab 9190 	strh.w	r9, [fp, #400]	; 0x190
90005238:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
        : AbstractPainter()
9000523c:	f8cb 718c 	str.w	r7, [fp, #396]	; 0x18c
90005240:	2900      	cmp	r1, #0
90005242:	f001 8038 	beq.w	900062b6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11a6>
90005246:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90005248:	b900      	cbnz	r0, 9000524c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
9000524a:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000524c:	6802      	ldr	r2, [r0, #0]
9000524e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
90005250:	42a1      	cmp	r1, r4
90005252:	f041 809b 	bne.w	9000638c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x127c>
90005256:	f04f 0900 	mov.w	r9, #0
9000525a:	f50b 70d0 	add.w	r0, fp, #416	; 0x1a0
9000525e:	f50b 7304 	add.w	r3, fp, #528	; 0x210
90005262:	f8cb 518c 	str.w	r5, [fp, #396]	; 0x18c
90005266:	f8cb 8194 	str.w	r8, [fp, #404]	; 0x194
9000526a:	ee08 0a90 	vmov	s17, r0
9000526e:	f8cb 9198 	str.w	r9, [fp, #408]	; 0x198
90005272:	9319      	str	r3, [sp, #100]	; 0x64
90005274:	f00d f8c0 	bl	900123f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005278:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
9000527a:	f8ab 9214 	strh.w	r9, [fp, #532]	; 0x214
9000527e:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
90005282:	f8cb 7210 	str.w	r7, [fp, #528]	; 0x210
90005286:	2900      	cmp	r1, #0
90005288:	f001 8030 	beq.w	900062ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11dc>
9000528c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
9000528e:	b900      	cbnz	r0, 90005292 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
90005290:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90005292:	6802      	ldr	r2, [r0, #0]
90005294:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
90005296:	42a1      	cmp	r1, r4
90005298:	f041 808f 	bne.w	900063ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12aa>
9000529c:	f04f 0900 	mov.w	r9, #0
900052a0:	f50b 7009 	add.w	r0, fp, #548	; 0x224
900052a4:	f50b 7325 	add.w	r3, fp, #660	; 0x294
900052a8:	f8cb 5210 	str.w	r5, [fp, #528]	; 0x210
900052ac:	f8cb 8218 	str.w	r8, [fp, #536]	; 0x218
900052b0:	ee09 0a10 	vmov	s18, r0
900052b4:	f8cb 921c 	str.w	r9, [fp, #540]	; 0x21c
900052b8:	931b      	str	r3, [sp, #108]	; 0x6c
900052ba:	f00d f89d 	bl	900123f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900052be:	6832      	ldr	r2, [r6, #0]
        : widgetWidth(0)
900052c0:	f8ab 9298 	strh.w	r9, [fp, #664]	; 0x298
900052c4:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
900052c8:	f8cb 7294 	str.w	r7, [fp, #660]	; 0x294
900052cc:	2900      	cmp	r1, #0
900052ce:	f001 8028 	beq.w	90006322 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1212>
900052d2:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900052d4:	b900      	cbnz	r0, 900052d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
900052d6:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900052d8:	6802      	ldr	r2, [r0, #0]
900052da:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
900052dc:	42a1      	cmp	r1, r4
900052de:	f041 8061 	bne.w	900063a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1294>
900052e2:	f50b 722a 	add.w	r2, fp, #680	; 0x2a8
          touchable(false),
900052e6:	f44f 7380 	mov.w	r3, #256	; 0x100
900052ea:	2600      	movs	r6, #0
        : T(), up(), down()
900052ec:	4fa4      	ldr	r7, [pc, #656]	; (90005580 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
        : Box(), borderColor(0), borderSize(0)
900052ee:	4ca5      	ldr	r4, [pc, #660]	; (90005584 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>)
        : pressed(false), alpha(255), action(0)
900052f0:	f44f 497f 	mov.w	r9, #65280	; 0xff00
900052f4:	f8cb 5294 	str.w	r5, [fp, #660]	; 0x294
900052f8:	25ff      	movs	r5, #255	; 0xff
900052fa:	f8cb 829c 	str.w	r8, [fp, #668]	; 0x29c
        touchable = touch;
900052fe:	f240 1801 	movw	r8, #257	; 0x101
          touchable(false),
90005302:	f8ab 3300 	strh.w	r3, [fp, #768]	; 0x300
90005306:	4613      	mov	r3, r2
90005308:	ee09 2a90 	vmov	s19, r2
9000530c:	f50b 7248 	add.w	r2, fp, #800	; 0x320
        T::add(borderBox);
90005310:	4618      	mov	r0, r3
90005312:	f50b 7137 	add.w	r1, fp, #732	; 0x2dc
90005316:	f8cb 62a0 	str.w	r6, [fp, #672]	; 0x2a0
          firstChild(0)
9000531a:	f8cb 62d0 	str.w	r6, [fp, #720]	; 0x2d0
9000531e:	f8cb 62d8 	str.w	r6, [fp, #728]	; 0x2d8
90005322:	f8ab 630c 	strh.w	r6, [fp, #780]	; 0x30c
        touchable = touch;
90005326:	f8ab 82cc 	strh.w	r8, [fp, #716]	; 0x2cc
        : T(), up(), down()
9000532a:	f8cb 72a8 	str.w	r7, [fp, #680]	; 0x2a8
9000532e:	f88b 5302 	strb.w	r5, [fp, #770]	; 0x302
90005332:	f8cb 42dc 	str.w	r4, [fp, #732]	; 0x2dc
90005336:	f8ab 92d4 	strh.w	r9, [fp, #724]	; 0x2d4
9000533a:	e9cb 66ab 	strd	r6, r6, [fp, #684]	; 0x2ac
9000533e:	e9cb 66ad 	strd	r6, r6, [fp, #692]	; 0x2b4
          nextSibling(0),
90005342:	e9cb 66af 	strd	r6, r6, [fp, #700]	; 0x2bc
          cachedAbsX(0),
90005346:	e9cb 66b1 	strd	r6, r6, [fp, #708]	; 0x2c4
          nextSibling(0),
9000534a:	e9cb 66bc 	strd	r6, r6, [fp, #752]	; 0x2f0
          cachedAbsX(0),
9000534e:	e9cb 66be 	strd	r6, r6, [fp, #760]	; 0x2f8
        : color(col)
90005352:	e9cb 66c1 	strd	r6, r6, [fp, #772]	; 0x304
        : color(0)
90005356:	e9cb 66c4 	strd	r6, r6, [fp, #784]	; 0x310
9000535a:	e9cb 66c6 	strd	r6, r6, [fp, #792]	; 0x318
        rect.x = x;
9000535e:	e9cb 66b8 	strd	r6, r6, [fp, #736]	; 0x2e0
90005362:	e9cb 66ba 	strd	r6, r6, [fp, #744]	; 0x2e8
90005366:	9200      	str	r2, [sp, #0]
        T::add(borderBox);
90005368:	f00b fbee 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
9000536c:	f44f 7380 	mov.w	r3, #256	; 0x100
90005370:	f50b 7166 	add.w	r1, fp, #920	; 0x398
90005374:	f8cb 6348 	str.w	r6, [fp, #840]	; 0x348
90005378:	f8ab 3378 	strh.w	r3, [fp, #888]	; 0x378
9000537c:	f8cb 6350 	str.w	r6, [fp, #848]	; 0x350
        touchable = touch;
90005380:	f8ab 8344 	strh.w	r8, [fp, #836]	; 0x344
        : T(), up(), down()
90005384:	f8cb 7320 	str.w	r7, [fp, #800]	; 0x320
90005388:	f88b 537a 	strb.w	r5, [fp, #890]	; 0x37a
        : color(col)
9000538c:	f8cb 637c 	str.w	r6, [fp, #892]	; 0x37c
90005390:	f8cb 4354 	str.w	r4, [fp, #852]	; 0x354
90005394:	f8cb 6380 	str.w	r6, [fp, #896]	; 0x380
90005398:	f8ab 6384 	strh.w	r6, [fp, #900]	; 0x384
9000539c:	9101      	str	r1, [sp, #4]
        T::add(borderBox);
9000539e:	f50b 7155 	add.w	r1, fp, #852	; 0x354
900053a2:	f8ab 934c 	strh.w	r9, [fp, #844]	; 0x34c
        : x(0), y(0), width(0), height(0)
900053a6:	e9cb 66c9 	strd	r6, r6, [fp, #804]	; 0x324
900053aa:	e9cb 66cb 	strd	r6, r6, [fp, #812]	; 0x32c
          nextSibling(0),
900053ae:	e9cb 66cd 	strd	r6, r6, [fp, #820]	; 0x334
          cachedAbsX(0),
900053b2:	e9cb 66cf 	strd	r6, r6, [fp, #828]	; 0x33c
          nextSibling(0),
900053b6:	e9cb 66da 	strd	r6, r6, [fp, #872]	; 0x368
          cachedAbsX(0),
900053ba:	e9cb 66dc 	strd	r6, r6, [fp, #880]	; 0x370
        : color(0)
900053be:	e9cb 66e2 	strd	r6, r6, [fp, #904]	; 0x388
900053c2:	e9cb 66e4 	strd	r6, r6, [fp, #912]	; 0x390
        rect.x = x;
900053c6:	e9cb 66d6 	strd	r6, r6, [fp, #856]	; 0x358
900053ca:	e9cb 66d8 	strd	r6, r6, [fp, #864]	; 0x360
900053ce:	9800      	ldr	r0, [sp, #0]
900053d0:	f00b fbba 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
900053d4:	f44f 7280 	mov.w	r2, #256	; 0x100
900053d8:	f50b 7173 	add.w	r1, fp, #972	; 0x3cc
900053dc:	f8cb 63c0 	str.w	r6, [fp, #960]	; 0x3c0
900053e0:	f8ab 23f0 	strh.w	r2, [fp, #1008]	; 0x3f0
900053e4:	f50b 6282 	add.w	r2, fp, #1040	; 0x410
900053e8:	f8cb 63c8 	str.w	r6, [fp, #968]	; 0x3c8
900053ec:	9202      	str	r2, [sp, #8]
        touchable = touch;
900053ee:	f8ab 83bc 	strh.w	r8, [fp, #956]	; 0x3bc
        : T(), up(), down()
900053f2:	f8cb 7398 	str.w	r7, [fp, #920]	; 0x398
900053f6:	f88b 53f2 	strb.w	r5, [fp, #1010]	; 0x3f2
        : color(col)
900053fa:	f8cb 63f4 	str.w	r6, [fp, #1012]	; 0x3f4
900053fe:	f8cb 43cc 	str.w	r4, [fp, #972]	; 0x3cc
90005402:	f8cb 63f8 	str.w	r6, [fp, #1016]	; 0x3f8
90005406:	f8ab 63fc 	strh.w	r6, [fp, #1020]	; 0x3fc
        : color(0)
9000540a:	f8cb 6400 	str.w	r6, [fp, #1024]	; 0x400
9000540e:	f8cb 6404 	str.w	r6, [fp, #1028]	; 0x404
90005412:	f8cb 6408 	str.w	r6, [fp, #1032]	; 0x408
90005416:	f8cb 640c 	str.w	r6, [fp, #1036]	; 0x40c
9000541a:	f8ab 93c4 	strh.w	r9, [fp, #964]	; 0x3c4
        : x(0), y(0), width(0), height(0)
9000541e:	e9cb 66e7 	strd	r6, r6, [fp, #924]	; 0x39c
90005422:	e9cb 66e9 	strd	r6, r6, [fp, #932]	; 0x3a4
          nextSibling(0),
90005426:	e9cb 66eb 	strd	r6, r6, [fp, #940]	; 0x3ac
          cachedAbsX(0),
9000542a:	e9cb 66ed 	strd	r6, r6, [fp, #948]	; 0x3b4
          nextSibling(0),
9000542e:	e9cb 66f8 	strd	r6, r6, [fp, #992]	; 0x3e0
          cachedAbsX(0),
90005432:	e9cb 66fa 	strd	r6, r6, [fp, #1000]	; 0x3e8
        rect.x = x;
90005436:	e9cb 66f4 	strd	r6, r6, [fp, #976]	; 0x3d0
9000543a:	e9cb 66f6 	strd	r6, r6, [fp, #984]	; 0x3d8
        T::add(borderBox);
9000543e:	9801      	ldr	r0, [sp, #4]
90005440:	f00b fb82 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005444:	f44f 7380 	mov.w	r3, #256	; 0x100
90005448:	f50b 6191 	add.w	r1, fp, #1160	; 0x488
9000544c:	f8cb 6414 	str.w	r6, [fp, #1044]	; 0x414
90005450:	f8ab 3468 	strh.w	r3, [fp, #1128]	; 0x468
90005454:	f8cb 6418 	str.w	r6, [fp, #1048]	; 0x418
90005458:	f8cb 641c 	str.w	r6, [fp, #1052]	; 0x41c
9000545c:	f8cb 6420 	str.w	r6, [fp, #1056]	; 0x420
          parent(0),
90005460:	f8cb 6424 	str.w	r6, [fp, #1060]	; 0x424
          nextSibling(0),
90005464:	f8cb 6428 	str.w	r6, [fp, #1064]	; 0x428
          nextDrawChainElement(0),
90005468:	f8cb 642c 	str.w	r6, [fp, #1068]	; 0x42c
          cachedAbsX(0),
9000546c:	f8cb 6430 	str.w	r6, [fp, #1072]	; 0x430
90005470:	f8cb 6438 	str.w	r6, [fp, #1080]	; 0x438
90005474:	f8cb 6440 	str.w	r6, [fp, #1088]	; 0x440
        touchable = touch;
90005478:	f8ab 8434 	strh.w	r8, [fp, #1076]	; 0x434
        : T(), up(), down()
9000547c:	f8cb 7410 	str.w	r7, [fp, #1040]	; 0x410
          parent(0),
90005480:	f8cb 6458 	str.w	r6, [fp, #1112]	; 0x458
          nextSibling(0),
90005484:	f8cb 645c 	str.w	r6, [fp, #1116]	; 0x45c
          nextDrawChainElement(0),
90005488:	f8cb 6460 	str.w	r6, [fp, #1120]	; 0x460
          cachedAbsX(0),
9000548c:	f8cb 6464 	str.w	r6, [fp, #1124]	; 0x464
90005490:	f88b 546a 	strb.w	r5, [fp, #1130]	; 0x46a
        : color(col)
90005494:	f8cb 646c 	str.w	r6, [fp, #1132]	; 0x46c
90005498:	f8cb 4444 	str.w	r4, [fp, #1092]	; 0x444
9000549c:	f8cb 6470 	str.w	r6, [fp, #1136]	; 0x470
900054a0:	f8ab 6474 	strh.w	r6, [fp, #1140]	; 0x474
        : color(0)
900054a4:	f8cb 6478 	str.w	r6, [fp, #1144]	; 0x478
900054a8:	f8cb 647c 	str.w	r6, [fp, #1148]	; 0x47c
900054ac:	f8cb 6480 	str.w	r6, [fp, #1152]	; 0x480
900054b0:	f8cb 6484 	str.w	r6, [fp, #1156]	; 0x484
        rect.x = x;
900054b4:	f8cb 6448 	str.w	r6, [fp, #1096]	; 0x448
900054b8:	f8cb 644c 	str.w	r6, [fp, #1100]	; 0x44c
900054bc:	f8cb 6450 	str.w	r6, [fp, #1104]	; 0x450
900054c0:	f8cb 6454 	str.w	r6, [fp, #1108]	; 0x454
900054c4:	9103      	str	r1, [sp, #12]
        T::add(borderBox);
900054c6:	f20b 4144 	addw	r1, fp, #1092	; 0x444
900054ca:	f8ab 943c 	strh.w	r9, [fp, #1084]	; 0x43c
900054ce:	9802      	ldr	r0, [sp, #8]
900054d0:	f00b fb3a 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
900054d4:	f44f 7280 	mov.w	r2, #256	; 0x100
900054d8:	f50b 61a0 	add.w	r1, fp, #1280	; 0x500
        : x(0), y(0), width(0), height(0)
900054dc:	f8cb 648c 	str.w	r6, [fp, #1164]	; 0x48c
900054e0:	f8ab 24e0 	strh.w	r2, [fp, #1248]	; 0x4e0
900054e4:	f8cb 6490 	str.w	r6, [fp, #1168]	; 0x490
900054e8:	f8cb 6494 	str.w	r6, [fp, #1172]	; 0x494
900054ec:	f8cb 6498 	str.w	r6, [fp, #1176]	; 0x498
          parent(0),
900054f0:	f8cb 649c 	str.w	r6, [fp, #1180]	; 0x49c
          nextSibling(0),
900054f4:	f8cb 64a0 	str.w	r6, [fp, #1184]	; 0x4a0
          nextDrawChainElement(0),
900054f8:	f8cb 64a4 	str.w	r6, [fp, #1188]	; 0x4a4
          cachedAbsX(0),
900054fc:	f8cb 64a8 	str.w	r6, [fp, #1192]	; 0x4a8
90005500:	f8cb 64b0 	str.w	r6, [fp, #1200]	; 0x4b0
90005504:	f8cb 64b8 	str.w	r6, [fp, #1208]	; 0x4b8
        touchable = touch;
90005508:	f8ab 84ac 	strh.w	r8, [fp, #1196]	; 0x4ac
        : T(), up(), down()
9000550c:	f8cb 7488 	str.w	r7, [fp, #1160]	; 0x488
          parent(0),
90005510:	f8cb 64d0 	str.w	r6, [fp, #1232]	; 0x4d0
          nextSibling(0),
90005514:	f8cb 64d4 	str.w	r6, [fp, #1236]	; 0x4d4
          nextDrawChainElement(0),
90005518:	f8cb 64d8 	str.w	r6, [fp, #1240]	; 0x4d8
          cachedAbsX(0),
9000551c:	f8cb 64dc 	str.w	r6, [fp, #1244]	; 0x4dc
90005520:	f88b 54e2 	strb.w	r5, [fp, #1250]	; 0x4e2
        : color(col)
90005524:	f8cb 64e4 	str.w	r6, [fp, #1252]	; 0x4e4
90005528:	f8cb 44bc 	str.w	r4, [fp, #1212]	; 0x4bc
9000552c:	f8cb 64e8 	str.w	r6, [fp, #1256]	; 0x4e8
90005530:	f8ab 64ec 	strh.w	r6, [fp, #1260]	; 0x4ec
        : color(0)
90005534:	f8cb 64f0 	str.w	r6, [fp, #1264]	; 0x4f0
90005538:	f8cb 64f4 	str.w	r6, [fp, #1268]	; 0x4f4
9000553c:	f8cb 64f8 	str.w	r6, [fp, #1272]	; 0x4f8
90005540:	f8cb 64fc 	str.w	r6, [fp, #1276]	; 0x4fc
        rect.x = x;
90005544:	f8cb 64c0 	str.w	r6, [fp, #1216]	; 0x4c0
90005548:	f8cb 64c4 	str.w	r6, [fp, #1220]	; 0x4c4
9000554c:	f8cb 64c8 	str.w	r6, [fp, #1224]	; 0x4c8
90005550:	f8cb 64cc 	str.w	r6, [fp, #1228]	; 0x4cc
90005554:	9104      	str	r1, [sp, #16]
        T::add(borderBox);
90005556:	f20b 41bc 	addw	r1, fp, #1212	; 0x4bc
9000555a:	f8ab 94b4 	strh.w	r9, [fp, #1204]	; 0x4b4
9000555e:	9803      	ldr	r0, [sp, #12]
90005560:	f00b faf2 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005564:	f44f 7380 	mov.w	r3, #256	; 0x100
90005568:	f50b 61af 	add.w	r1, fp, #1400	; 0x578
        : x(0), y(0), width(0), height(0)
9000556c:	f8cb 6504 	str.w	r6, [fp, #1284]	; 0x504
90005570:	f8ab 3558 	strh.w	r3, [fp, #1368]	; 0x558
90005574:	e008      	b.n	90005588 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
90005576:	bf00      	nop
90005578:	90002339 	.word	0x90002339
9000557c:	9002b398 	.word	0x9002b398
90005580:	9002ad68 	.word	0x9002ad68
90005584:	9002b740 	.word	0x9002b740
90005588:	f8cb 6508 	str.w	r6, [fp, #1288]	; 0x508
9000558c:	f8cb 650c 	str.w	r6, [fp, #1292]	; 0x50c
90005590:	f8cb 6510 	str.w	r6, [fp, #1296]	; 0x510
          parent(0),
90005594:	f8cb 6514 	str.w	r6, [fp, #1300]	; 0x514
          nextSibling(0),
90005598:	f8cb 6518 	str.w	r6, [fp, #1304]	; 0x518
          nextDrawChainElement(0),
9000559c:	f8cb 651c 	str.w	r6, [fp, #1308]	; 0x51c
          cachedAbsX(0),
900055a0:	f8cb 6520 	str.w	r6, [fp, #1312]	; 0x520
900055a4:	f8cb 6528 	str.w	r6, [fp, #1320]	; 0x528
900055a8:	f8cb 6530 	str.w	r6, [fp, #1328]	; 0x530
        touchable = touch;
900055ac:	f8ab 8524 	strh.w	r8, [fp, #1316]	; 0x524
        : T(), up(), down()
900055b0:	f8cb 7500 	str.w	r7, [fp, #1280]	; 0x500
          parent(0),
900055b4:	f8cb 6548 	str.w	r6, [fp, #1352]	; 0x548
          nextSibling(0),
900055b8:	f8cb 654c 	str.w	r6, [fp, #1356]	; 0x54c
          nextDrawChainElement(0),
900055bc:	f8cb 6550 	str.w	r6, [fp, #1360]	; 0x550
          cachedAbsX(0),
900055c0:	f8cb 6554 	str.w	r6, [fp, #1364]	; 0x554
900055c4:	f88b 555a 	strb.w	r5, [fp, #1370]	; 0x55a
        : color(col)
900055c8:	f8cb 655c 	str.w	r6, [fp, #1372]	; 0x55c
900055cc:	f8cb 4534 	str.w	r4, [fp, #1332]	; 0x534
900055d0:	f8cb 6560 	str.w	r6, [fp, #1376]	; 0x560
900055d4:	f8ab 6564 	strh.w	r6, [fp, #1380]	; 0x564
        : color(0)
900055d8:	f8cb 6568 	str.w	r6, [fp, #1384]	; 0x568
900055dc:	f8cb 656c 	str.w	r6, [fp, #1388]	; 0x56c
900055e0:	f8cb 6570 	str.w	r6, [fp, #1392]	; 0x570
900055e4:	f8cb 6574 	str.w	r6, [fp, #1396]	; 0x574
        rect.x = x;
900055e8:	f8cb 6538 	str.w	r6, [fp, #1336]	; 0x538
900055ec:	f8cb 653c 	str.w	r6, [fp, #1340]	; 0x53c
900055f0:	f8cb 6540 	str.w	r6, [fp, #1344]	; 0x540
900055f4:	f8cb 6544 	str.w	r6, [fp, #1348]	; 0x544
900055f8:	9105      	str	r1, [sp, #20]
        T::add(borderBox);
900055fa:	f20b 5134 	addw	r1, fp, #1332	; 0x534
900055fe:	f8ab 952c 	strh.w	r9, [fp, #1324]	; 0x52c
90005602:	9804      	ldr	r0, [sp, #16]
90005604:	f00b faa0 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005608:	f44f 7280 	mov.w	r2, #256	; 0x100
9000560c:	f50b 61be 	add.w	r1, fp, #1520	; 0x5f0
        : x(0), y(0), width(0), height(0)
90005610:	f8cb 657c 	str.w	r6, [fp, #1404]	; 0x57c
90005614:	f8ab 25d0 	strh.w	r2, [fp, #1488]	; 0x5d0
90005618:	f8cb 6580 	str.w	r6, [fp, #1408]	; 0x580
9000561c:	f8cb 6584 	str.w	r6, [fp, #1412]	; 0x584
90005620:	f8cb 6588 	str.w	r6, [fp, #1416]	; 0x588
          parent(0),
90005624:	f8cb 658c 	str.w	r6, [fp, #1420]	; 0x58c
          nextSibling(0),
90005628:	f8cb 6590 	str.w	r6, [fp, #1424]	; 0x590
          nextDrawChainElement(0),
9000562c:	f8cb 6594 	str.w	r6, [fp, #1428]	; 0x594
          cachedAbsX(0),
90005630:	f8cb 6598 	str.w	r6, [fp, #1432]	; 0x598
90005634:	f8cb 65a0 	str.w	r6, [fp, #1440]	; 0x5a0
90005638:	f8cb 65a8 	str.w	r6, [fp, #1448]	; 0x5a8
        touchable = touch;
9000563c:	f8ab 859c 	strh.w	r8, [fp, #1436]	; 0x59c
        : T(), up(), down()
90005640:	f8cb 7578 	str.w	r7, [fp, #1400]	; 0x578
          parent(0),
90005644:	f8cb 65c0 	str.w	r6, [fp, #1472]	; 0x5c0
          nextSibling(0),
90005648:	f8cb 65c4 	str.w	r6, [fp, #1476]	; 0x5c4
          nextDrawChainElement(0),
9000564c:	f8cb 65c8 	str.w	r6, [fp, #1480]	; 0x5c8
          cachedAbsX(0),
90005650:	f8cb 65cc 	str.w	r6, [fp, #1484]	; 0x5cc
90005654:	f88b 55d2 	strb.w	r5, [fp, #1490]	; 0x5d2
        : color(col)
90005658:	f8cb 65d4 	str.w	r6, [fp, #1492]	; 0x5d4
9000565c:	f8cb 45ac 	str.w	r4, [fp, #1452]	; 0x5ac
90005660:	f8cb 65d8 	str.w	r6, [fp, #1496]	; 0x5d8
90005664:	f8ab 65dc 	strh.w	r6, [fp, #1500]	; 0x5dc
        : color(0)
90005668:	f8cb 65e0 	str.w	r6, [fp, #1504]	; 0x5e0
9000566c:	f8cb 65e4 	str.w	r6, [fp, #1508]	; 0x5e4
90005670:	f8cb 65e8 	str.w	r6, [fp, #1512]	; 0x5e8
90005674:	f8cb 65ec 	str.w	r6, [fp, #1516]	; 0x5ec
        rect.x = x;
90005678:	f8cb 65b0 	str.w	r6, [fp, #1456]	; 0x5b0
9000567c:	f8cb 65b4 	str.w	r6, [fp, #1460]	; 0x5b4
90005680:	f8cb 65b8 	str.w	r6, [fp, #1464]	; 0x5b8
90005684:	f8cb 65bc 	str.w	r6, [fp, #1468]	; 0x5bc
90005688:	9106      	str	r1, [sp, #24]
        T::add(borderBox);
9000568a:	f20b 51ac 	addw	r1, fp, #1452	; 0x5ac
9000568e:	f8ab 95a4 	strh.w	r9, [fp, #1444]	; 0x5a4
90005692:	9805      	ldr	r0, [sp, #20]
90005694:	f00b fa58 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005698:	f44f 7380 	mov.w	r3, #256	; 0x100
9000569c:	f50b 61cd 	add.w	r1, fp, #1640	; 0x668
        : x(0), y(0), width(0), height(0)
900056a0:	f8cb 65f4 	str.w	r6, [fp, #1524]	; 0x5f4
900056a4:	f8ab 3648 	strh.w	r3, [fp, #1608]	; 0x648
900056a8:	f8cb 65f8 	str.w	r6, [fp, #1528]	; 0x5f8
900056ac:	f8cb 65fc 	str.w	r6, [fp, #1532]	; 0x5fc
900056b0:	f8cb 6600 	str.w	r6, [fp, #1536]	; 0x600
          parent(0),
900056b4:	f8cb 6604 	str.w	r6, [fp, #1540]	; 0x604
          nextSibling(0),
900056b8:	f8cb 6608 	str.w	r6, [fp, #1544]	; 0x608
          nextDrawChainElement(0),
900056bc:	f8cb 660c 	str.w	r6, [fp, #1548]	; 0x60c
          cachedAbsX(0),
900056c0:	f8cb 6610 	str.w	r6, [fp, #1552]	; 0x610
900056c4:	f8cb 6618 	str.w	r6, [fp, #1560]	; 0x618
900056c8:	f8cb 6620 	str.w	r6, [fp, #1568]	; 0x620
        touchable = touch;
900056cc:	f8ab 8614 	strh.w	r8, [fp, #1556]	; 0x614
        : T(), up(), down()
900056d0:	f8cb 75f0 	str.w	r7, [fp, #1520]	; 0x5f0
          parent(0),
900056d4:	f8cb 6638 	str.w	r6, [fp, #1592]	; 0x638
          nextSibling(0),
900056d8:	f8cb 663c 	str.w	r6, [fp, #1596]	; 0x63c
          nextDrawChainElement(0),
900056dc:	f8cb 6640 	str.w	r6, [fp, #1600]	; 0x640
          cachedAbsX(0),
900056e0:	f8cb 6644 	str.w	r6, [fp, #1604]	; 0x644
900056e4:	f88b 564a 	strb.w	r5, [fp, #1610]	; 0x64a
        : color(col)
900056e8:	f8cb 664c 	str.w	r6, [fp, #1612]	; 0x64c
900056ec:	f8cb 4624 	str.w	r4, [fp, #1572]	; 0x624
900056f0:	f8cb 6650 	str.w	r6, [fp, #1616]	; 0x650
900056f4:	f8ab 6654 	strh.w	r6, [fp, #1620]	; 0x654
        : color(0)
900056f8:	f8cb 6658 	str.w	r6, [fp, #1624]	; 0x658
900056fc:	f8cb 665c 	str.w	r6, [fp, #1628]	; 0x65c
90005700:	f8cb 6660 	str.w	r6, [fp, #1632]	; 0x660
90005704:	f8cb 6664 	str.w	r6, [fp, #1636]	; 0x664
        rect.x = x;
90005708:	f8cb 6628 	str.w	r6, [fp, #1576]	; 0x628
9000570c:	f8cb 662c 	str.w	r6, [fp, #1580]	; 0x62c
90005710:	f8cb 6630 	str.w	r6, [fp, #1584]	; 0x630
90005714:	f8cb 6634 	str.w	r6, [fp, #1588]	; 0x634
90005718:	9107      	str	r1, [sp, #28]
        T::add(borderBox);
9000571a:	f20b 6124 	addw	r1, fp, #1572	; 0x624
9000571e:	f8ab 961c 	strh.w	r9, [fp, #1564]	; 0x61c
90005722:	9806      	ldr	r0, [sp, #24]
90005724:	f00b fa10 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
          touchable(false),
90005728:	f44f 7280 	mov.w	r2, #256	; 0x100
9000572c:	f88b 56c2 	strb.w	r5, [fp, #1730]	; 0x6c2
90005730:	f50b 65dc 	add.w	r5, fp, #1760	; 0x6e0
90005734:	f8ab 26c0 	strh.w	r2, [fp, #1728]	; 0x6c0
90005738:	f20b 619c 	addw	r1, fp, #1692	; 0x69c
9000573c:	9807      	ldr	r0, [sp, #28]
        touchable = touch;
9000573e:	f8ab 868c 	strh.w	r8, [fp, #1676]	; 0x68c
        : T(), up(), down()
90005742:	f8cb 7668 	str.w	r7, [fp, #1640]	; 0x668
90005746:	f20b 770c 	addw	r7, fp, #1804	; 0x70c
9000574a:	f8cb 469c 	str.w	r4, [fp, #1692]	; 0x69c
9000574e:	f64f 74ff 	movw	r4, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
90005752:	f8cb 666c 	str.w	r6, [fp, #1644]	; 0x66c
90005756:	f8cb 6670 	str.w	r6, [fp, #1648]	; 0x670
9000575a:	f8cb 6674 	str.w	r6, [fp, #1652]	; 0x674
9000575e:	f8cb 6678 	str.w	r6, [fp, #1656]	; 0x678
          parent(0),
90005762:	f8cb 667c 	str.w	r6, [fp, #1660]	; 0x67c
          nextSibling(0),
90005766:	f8cb 6680 	str.w	r6, [fp, #1664]	; 0x680
          nextDrawChainElement(0),
9000576a:	f8cb 6684 	str.w	r6, [fp, #1668]	; 0x684
          cachedAbsX(0),
9000576e:	f8cb 6688 	str.w	r6, [fp, #1672]	; 0x688
90005772:	f8cb 6690 	str.w	r6, [fp, #1680]	; 0x690
90005776:	f8cb 6698 	str.w	r6, [fp, #1688]	; 0x698
          parent(0),
9000577a:	f8cb 66b0 	str.w	r6, [fp, #1712]	; 0x6b0
          nextSibling(0),
9000577e:	f8cb 66b4 	str.w	r6, [fp, #1716]	; 0x6b4
          nextDrawChainElement(0),
90005782:	f8cb 66b8 	str.w	r6, [fp, #1720]	; 0x6b8
          cachedAbsX(0),
90005786:	f8cb 66bc 	str.w	r6, [fp, #1724]	; 0x6bc
        : color(col)
9000578a:	f8cb 66c4 	str.w	r6, [fp, #1732]	; 0x6c4
9000578e:	f8cb 66c8 	str.w	r6, [fp, #1736]	; 0x6c8
90005792:	f8ab 66cc 	strh.w	r6, [fp, #1740]	; 0x6cc
        : color(0)
90005796:	f8cb 66d0 	str.w	r6, [fp, #1744]	; 0x6d0
9000579a:	f8cb 66d4 	str.w	r6, [fp, #1748]	; 0x6d4
9000579e:	f8cb 66d8 	str.w	r6, [fp, #1752]	; 0x6d8
900057a2:	f8cb 66dc 	str.w	r6, [fp, #1756]	; 0x6dc
        rect.x = x;
900057a6:	f8cb 66a0 	str.w	r6, [fp, #1696]	; 0x6a0
900057aa:	f8cb 66a4 	str.w	r6, [fp, #1700]	; 0x6a4
900057ae:	f8cb 66a8 	str.w	r6, [fp, #1704]	; 0x6a8
900057b2:	f8cb 66ac 	str.w	r6, [fp, #1708]	; 0x6ac
900057b6:	f8ab 9694 	strh.w	r9, [fp, #1684]	; 0x694
        T::add(borderBox);
900057ba:	f00b f9c5 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057be:	a91d      	add	r1, sp, #116	; 0x74
900057c0:	4628      	mov	r0, r5
900057c2:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900057c6:	f00d f843 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900057ca:	f50b 63e7 	add.w	r3, fp, #1848	; 0x738
900057ce:	a91d      	add	r1, sp, #116	; 0x74
900057d0:	4638      	mov	r0, r7
900057d2:	9308      	str	r3, [sp, #32]
900057d4:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900057d8:	f00d f83a 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900057dc:	f20b 7264 	addw	r2, fp, #1892	; 0x764
900057e0:	a91d      	add	r1, sp, #116	; 0x74
900057e2:	9808      	ldr	r0, [sp, #32]
900057e4:	9209      	str	r2, [sp, #36]	; 0x24
900057e6:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900057ea:	f00d f831 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900057ee:	f50b 63f2 	add.w	r3, fp, #1936	; 0x790
900057f2:	a91d      	add	r1, sp, #116	; 0x74
900057f4:	9809      	ldr	r0, [sp, #36]	; 0x24
900057f6:	930a      	str	r3, [sp, #40]	; 0x28
900057f8:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900057fc:	f00d f828 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005800:	f20b 72bc 	addw	r2, fp, #1980	; 0x7bc
90005804:	a91d      	add	r1, sp, #116	; 0x74
90005806:	980a      	ldr	r0, [sp, #40]	; 0x28
90005808:	920b      	str	r2, [sp, #44]	; 0x2c
9000580a:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000580e:	f00d f81f 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005812:	f50b 63fd 	add.w	r3, fp, #2024	; 0x7e8
90005816:	a91d      	add	r1, sp, #116	; 0x74
90005818:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000581a:	930c      	str	r3, [sp, #48]	; 0x30
9000581c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005820:	f00d f816 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005824:	f60b 0214 	addw	r2, fp, #2068	; 0x814
90005828:	a91d      	add	r1, sp, #116	; 0x74
9000582a:	980c      	ldr	r0, [sp, #48]	; 0x30
9000582c:	920d      	str	r2, [sp, #52]	; 0x34
9000582e:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005832:	f00d f80d 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005836:	f50b 6304 	add.w	r3, fp, #2112	; 0x840
9000583a:	a91d      	add	r1, sp, #116	; 0x74
9000583c:	980d      	ldr	r0, [sp, #52]	; 0x34
9000583e:	930e      	str	r3, [sp, #56]	; 0x38
90005840:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005844:	f00d f804 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005848:	f60b 026c 	addw	r2, fp, #2156	; 0x86c
9000584c:	a91d      	add	r1, sp, #116	; 0x74
9000584e:	980e      	ldr	r0, [sp, #56]	; 0x38
90005850:	920f      	str	r2, [sp, #60]	; 0x3c
90005852:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005856:	f00c fffb 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000585a:	f60b 0398 	addw	r3, fp, #2200	; 0x898
9000585e:	a91d      	add	r1, sp, #116	; 0x74
90005860:	980f      	ldr	r0, [sp, #60]	; 0x3c
90005862:	9310      	str	r3, [sp, #64]	; 0x40
90005864:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
90005868:	f00c fff2 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000586c:	f60b 02c4 	addw	r2, fp, #2244	; 0x8c4
90005870:	a91d      	add	r1, sp, #116	; 0x74
90005872:	9810      	ldr	r0, [sp, #64]	; 0x40
90005874:	9211      	str	r2, [sp, #68]	; 0x44
90005876:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000587a:	f00c ffe9 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000587e:	f50b 630f 	add.w	r3, fp, #2288	; 0x8f0
90005882:	a91d      	add	r1, sp, #116	; 0x74
90005884:	9811      	ldr	r0, [sp, #68]	; 0x44
90005886:	9312      	str	r3, [sp, #72]	; 0x48
90005888:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000588c:	f00c ffe0 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005890:	f60b 121c 	addw	r2, fp, #2332	; 0x91c
90005894:	a91d      	add	r1, sp, #116	; 0x74
90005896:	9812      	ldr	r0, [sp, #72]	; 0x48
90005898:	9213      	str	r2, [sp, #76]	; 0x4c
9000589a:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
9000589e:	f00c ffd7 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058a2:	f60b 1348 	addw	r3, fp, #2376	; 0x948
900058a6:	a91d      	add	r1, sp, #116	; 0x74
900058a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
900058aa:	9314      	str	r3, [sp, #80]	; 0x50
900058ac:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058b0:	f00c ffce 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058b4:	f60b 1274 	addw	r2, fp, #2420	; 0x974
900058b8:	a91d      	add	r1, sp, #116	; 0x74
900058ba:	9814      	ldr	r0, [sp, #80]	; 0x50
900058bc:	9215      	str	r2, [sp, #84]	; 0x54
900058be:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058c2:	f00c ffc5 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058c6:	f50b 631a 	add.w	r3, fp, #2464	; 0x9a0
900058ca:	a91d      	add	r1, sp, #116	; 0x74
900058cc:	9815      	ldr	r0, [sp, #84]	; 0x54
900058ce:	9316      	str	r3, [sp, #88]	; 0x58
900058d0:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058d4:	f00c ffbc 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058d8:	f60b 12cc 	addw	r2, fp, #2508	; 0x9cc
900058dc:	a91d      	add	r1, sp, #116	; 0x74
900058de:	9816      	ldr	r0, [sp, #88]	; 0x58
900058e0:	9217      	str	r2, [sp, #92]	; 0x5c
900058e2:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058e6:	f00c ffb3 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058ea:	a91d      	add	r1, sp, #116	; 0x74
900058ec:	9817      	ldr	r0, [sp, #92]	; 0x5c
900058ee:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
900058f2:	f00c ffad 	bl	90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
900058f6:	f50b 5100 	add.w	r1, fp, #8192	; 0x2000
900058fa:	48e2      	ldr	r0, [pc, #904]	; (90005c84 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb74>)
900058fc:	f8df 83cc 	ldr.w	r8, [pc, #972]	; 90005ccc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>
90005900:	f10b 0404 	add.w	r4, fp, #4
90005904:	f8c1 0618 	str.w	r0, [r1, #1560]	; 0x618
90005908:	48df      	ldr	r0, [pc, #892]	; (90005c88 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
9000590a:	f8c1 6624 	str.w	r6, [r1, #1572]	; 0x624
9000590e:	f8c1 0620 	str.w	r0, [r1, #1568]	; 0x620
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005912:	f60b 10f8 	addw	r0, fp, #2552	; 0x9f8
90005916:	f8c1 b61c 	str.w	fp, [r1, #1564]	; 0x61c
9000591a:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
9000591e:	f00e ffb5 	bl	9001488c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        color = newColor;
90005922:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
90005926:	4620      	mov	r0, r4
90005928:	f8cb 6044 	str.w	r6, [fp, #68]	; 0x44
9000592c:	f8cb 1068 	str.w	r1, [fp, #104]	; 0x68
90005930:	f10b 0140 	add.w	r1, fp, #64	; 0x40
90005934:	f8cb 8048 	str.w	r8, [fp, #72]	; 0x48
90005938:	f00b f906 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000593c:	2104      	movs	r1, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
9000593e:	ee1a 0a10 	vmov	r0, s20
90005942:	f8ad 1074 	strh.w	r1, [sp, #116]	; 0x74
90005946:	a91d      	add	r1, sp, #116	; 0x74
90005948:	f00d ffbd 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000594c:	4631      	mov	r1, r6
9000594e:	ee1a 0a10 	vmov	r0, s20
90005952:	e9cb 681c 	strd	r6, r8, [fp, #112]	; 0x70
90005956:	f00c ff36 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000595a:	ee1a 1a10 	vmov	r1, s20
9000595e:	4620      	mov	r0, r4
90005960:	4eca      	ldr	r6, [pc, #808]	; (90005c8c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
90005962:	f00b f8f1 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005966:	f04f 31ff 	mov.w	r1, #4294967295
        canvasPainter = &painter;
9000596a:	9b18      	ldr	r3, [sp, #96]	; 0x60
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
9000596c:	22a0      	movs	r2, #160	; 0xa0
9000596e:	f8cb 1114 	str.w	r1, [fp, #276]	; 0x114
90005972:	4650      	mov	r0, sl
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005974:	f8ab 1118 	strh.w	r1, [fp, #280]	; 0x118
90005978:	49c5      	ldr	r1, [pc, #788]	; (90005c90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
9000597a:	f8cb 30c0 	str.w	r3, [fp, #192]	; 0xc0
9000597e:	e9cb 6127 	strd	r6, r1, [fp, #156]	; 0x9c
90005982:	4611      	mov	r1, r2
90005984:	f00c fe4e 	bl	90012624 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005988:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
9000598c:	21a0      	movs	r1, #160	; 0xa0
9000598e:	4650      	mov	r0, sl
90005990:	f00c fe53 	bl	9001263a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005994:	f8db 20d4 	ldr.w	r2, [fp, #212]	; 0xd4
90005998:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
9000599c:	d006      	beq.n	900059ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x89c>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
9000599e:	f44f 72a0 	mov.w	r2, #320	; 0x140

        updateCachedShape();
900059a2:	4650      	mov	r0, sl
        lineWidthQ5 = widthQ5;
900059a4:	f8cb 20d4 	str.w	r2, [fp, #212]	; 0xd4
        updateCachedShape();
900059a8:	f00c fd46 	bl	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
900059ac:	2101      	movs	r1, #1
900059ae:	4650      	mov	r0, sl
900059b0:	f00c fe4e 	bl	90012650 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
900059b4:	4651      	mov	r1, sl
900059b6:	4620      	mov	r0, r4
900059b8:	f00b f8c6 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900059bc:	f04f 31ff 	mov.w	r1, #4294967295
900059c0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
900059c2:	22a0      	movs	r2, #160	; 0xa0
900059c4:	48b3      	ldr	r0, [pc, #716]	; (90005c94 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
900059c6:	f8cb 1198 	str.w	r1, [fp, #408]	; 0x198
900059ca:	f8ab 119c 	strh.w	r1, [fp, #412]	; 0x19c
900059ce:	49b0      	ldr	r1, [pc, #704]	; (90005c90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
900059d0:	f8cb 3144 	str.w	r3, [fp, #324]	; 0x144
900059d4:	e9cb 0148 	strd	r0, r1, [fp, #288]	; 0x120
900059d8:	4611      	mov	r1, r2
900059da:	ee18 0a10 	vmov	r0, s16
900059de:	f00c fe21 	bl	90012624 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
900059e2:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
900059e6:	21a0      	movs	r1, #160	; 0xa0
900059e8:	ee18 0a10 	vmov	r0, s16
900059ec:	f00c fe25 	bl	9001263a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
900059f0:	f8db 2158 	ldr.w	r2, [fp, #344]	; 0x158
900059f4:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
900059f8:	d007      	beq.n	90005a0a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x8fa>
        lineWidthQ5 = widthQ5;
900059fa:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
900059fe:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90005a02:	f8cb 2158 	str.w	r2, [fp, #344]	; 0x158
        updateCachedShape();
90005a06:	f00c fd17 	bl	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005a0a:	2101      	movs	r1, #1
90005a0c:	ee18 0a10 	vmov	r0, s16
90005a10:	f00c fe1e 	bl	90012650 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005a14:	ee18 1a10 	vmov	r1, s16
90005a18:	4620      	mov	r0, r4
90005a1a:	f00b f895 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
90005a20:	f04f 31ff 	mov.w	r1, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005a24:	22a0      	movs	r2, #160	; 0xa0
90005a26:	f8cb 31c8 	str.w	r3, [fp, #456]	; 0x1c8
90005a2a:	ee18 0a90 	vmov	r0, s17
90005a2e:	4b9a      	ldr	r3, [pc, #616]	; (90005c98 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
90005a30:	f8cb 121c 	str.w	r1, [fp, #540]	; 0x21c
90005a34:	f8ab 1220 	strh.w	r1, [fp, #544]	; 0x220
90005a38:	4998      	ldr	r1, [pc, #608]	; (90005c9c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90005a3a:	e9cb 3169 	strd	r3, r1, [fp, #420]	; 0x1a4
90005a3e:	4611      	mov	r1, r2
90005a40:	f00c fdf0 	bl	90012624 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005a44:	22a0      	movs	r2, #160	; 0xa0
90005a46:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005a4a:	ee18 0a90 	vmov	r0, s17
90005a4e:	f00c fdf4 	bl	9001263a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005a52:	f8db 21dc 	ldr.w	r2, [fp, #476]	; 0x1dc
90005a56:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005a5a:	d007      	beq.n	90005a6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x95c>
        lineWidthQ5 = widthQ5;
90005a5c:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
90005a60:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90005a64:	f8cb 21dc 	str.w	r2, [fp, #476]	; 0x1dc
        updateCachedShape();
90005a68:	f00c fce6 	bl	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005a6c:	2101      	movs	r1, #1
90005a6e:	ee18 0a90 	vmov	r0, s17
90005a72:	f00c fded 	bl	90012650 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005a76:	ee18 1a90 	vmov	r1, s17
90005a7a:	4620      	mov	r0, r4
90005a7c:	f8df a250 	ldr.w	sl, [pc, #592]	; 90005cd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>
90005a80:	f00b f862 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a84:	f04f 31ff 	mov.w	r1, #4294967295
90005a88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005a8a:	22a0      	movs	r2, #160	; 0xa0
90005a8c:	f8cb 12a0 	str.w	r1, [fp, #672]	; 0x2a0
90005a90:	ee19 0a10 	vmov	r0, s18
90005a94:	f8ab 12a4 	strh.w	r1, [fp, #676]	; 0x2a4
90005a98:	4981      	ldr	r1, [pc, #516]	; (90005ca0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
90005a9a:	f8cb 324c 	str.w	r3, [fp, #588]	; 0x24c
90005a9e:	e9cb a18a 	strd	sl, r1, [fp, #552]	; 0x228
90005aa2:	4611      	mov	r1, r2
90005aa4:	f00c fdbe 	bl	90012624 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005aa8:	22a0      	movs	r2, #160	; 0xa0
90005aaa:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005aae:	ee19 0a10 	vmov	r0, s18
90005ab2:	f00c fdc2 	bl	9001263a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005ab6:	f8db 2260 	ldr.w	r2, [fp, #608]	; 0x260
90005aba:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
90005abe:	d007      	beq.n	90005ad0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c0>
        lineWidthQ5 = widthQ5;
90005ac0:	f44f 72a0 	mov.w	r2, #320	; 0x140
        updateCachedShape();
90005ac4:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90005ac8:	f8cb 2260 	str.w	r2, [fp, #608]	; 0x260
        updateCachedShape();
90005acc:	f00c fcb4 	bl	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005ad0:	2101      	movs	r1, #1
90005ad2:	ee19 0a10 	vmov	r0, s18
90005ad6:	f00c fdbb 	bl	90012650 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005ada:	ee19 1a10 	vmov	r1, s18
90005ade:	4620      	mov	r0, r4
90005ae0:	f04f 0900 	mov.w	r9, #0
90005ae4:	f00b f830 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ae8:	4a6e      	ldr	r2, [pc, #440]	; (90005ca4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
        borderUp = borderColorReleased;
90005aea:	486f      	ldr	r0, [pc, #444]	; (90005ca8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
        down = colorPressed;
90005aec:	496f      	ldr	r1, [pc, #444]	; (90005cac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
        borderUp = borderColorReleased;
90005aee:	f8cb 0318 	str.w	r0, [fp, #792]	; 0x318
        borderDown = borderColorPressed;
90005af2:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005af6:	f89b 62d4 	ldrb.w	r6, [fp, #724]	; 0x2d4
        borderDown = borderColorPressed;
90005afa:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005afe:	e9cb 92b8 	strd	r9, r2, [fp, #736]	; 0x2e0
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005b02:	2205      	movs	r2, #5
90005b04:	f8cb 031c 	str.w	r0, [fp, #796]	; 0x31c
        handlePressedUpdated();
90005b08:	f8db 02a8 	ldr.w	r0, [fp, #680]	; 0x2a8
90005b0c:	f8ab 230c 	strh.w	r2, [fp, #780]	; 0x30c
        down = colorPressed;
90005b10:	4a67      	ldr	r2, [pc, #412]	; (90005cb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005b12:	e9cb 21c4 	strd	r2, r1, [fp, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90005b16:	2e00      	cmp	r6, #0
90005b18:	f000 8434 	beq.w	90006384 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1274>
90005b1c:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005b1e:	f50b 7147 	add.w	r1, fp, #796	; 0x31c
90005b22:	f8cb 2304 	str.w	r2, [fp, #772]	; 0x304
90005b26:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005b28:	4e62      	ldr	r6, [pc, #392]	; (90005cb4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005b2a:	f8cb 2308 	str.w	r2, [fp, #776]	; 0x308
        alpha = newAlpha;
90005b2e:	2200      	movs	r2, #0
90005b30:	f88b 22d5 	strb.w	r2, [fp, #725]	; 0x2d5
        handleAlphaUpdated();
90005b34:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005b38:	42b1      	cmp	r1, r6
90005b3a:	f040 845a 	bne.w	900063f2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12e2>
        alpha = newAlpha;
90005b3e:	f88b 2302 	strb.w	r2, [fp, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90005b42:	f242 6218 	movw	r2, #9752	; 0x2618
90005b46:	f8df e18c 	ldr.w	lr, [pc, #396]	; 90005cd4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>
90005b4a:	ee19 1a90 	vmov	r1, s19
90005b4e:	4620      	mov	r0, r4
90005b50:	445a      	add	r2, fp
90005b52:	f04f 0800 	mov.w	r8, #0
        action = &callback;
90005b56:	f8cb 22d8 	str.w	r2, [fp, #728]	; 0x2d8
90005b5a:	4a52      	ldr	r2, [pc, #328]	; (90005ca4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
90005b5c:	e9cb e2ab 	strd	lr, r2, [fp, #684]	; 0x2ac
90005b60:	f00a fff2 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b64:	4a54      	ldr	r2, [pc, #336]	; (90005cb8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
        borderUp = borderColorReleased;
90005b66:	4850      	ldr	r0, [pc, #320]	; (90005ca8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
        down = colorPressed;
90005b68:	4950      	ldr	r1, [pc, #320]	; (90005cac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
        borderUp = borderColorReleased;
90005b6a:	f8cb 0390 	str.w	r0, [fp, #912]	; 0x390
        borderDown = borderColorPressed;
90005b6e:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005b72:	f89b 334c 	ldrb.w	r3, [fp, #844]	; 0x34c
        borderDown = borderColorPressed;
90005b76:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005b7a:	e9cb 82d6 	strd	r8, r2, [fp, #856]	; 0x358
        borderSize = size;
90005b7e:	2205      	movs	r2, #5
90005b80:	f8cb 0394 	str.w	r0, [fp, #916]	; 0x394
        handlePressedUpdated();
90005b84:	f8db 0320 	ldr.w	r0, [fp, #800]	; 0x320
90005b88:	f8ab 2384 	strh.w	r2, [fp, #900]	; 0x384
        down = colorPressed;
90005b8c:	4a48      	ldr	r2, [pc, #288]	; (90005cb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005b8e:	e9cb 21e2 	strd	r2, r1, [fp, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90005b92:	2b00      	cmp	r3, #0
90005b94:	f000 83f3 	beq.w	9000637e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x126e>
        color = newColor;
90005b98:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005b9a:	f50b 7165 	add.w	r1, fp, #916	; 0x394
90005b9e:	f8cb 237c 	str.w	r2, [fp, #892]	; 0x37c
90005ba2:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005ba4:	f8cb 2380 	str.w	r2, [fp, #896]	; 0x380
        alpha = newAlpha;
90005ba8:	2200      	movs	r2, #0
90005baa:	f88b 234d 	strb.w	r2, [fp, #845]	; 0x34d
        handleAlphaUpdated();
90005bae:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005bb2:	42b1      	cmp	r1, r6
90005bb4:	f040 8419 	bne.w	900063ea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12da>
        alpha = newAlpha;
90005bb8:	f88b 237a 	strb.w	r2, [fp, #890]	; 0x37a
90005bbc:	4a3e      	ldr	r2, [pc, #248]	; (90005cb8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90005bbe:	483f      	ldr	r0, [pc, #252]	; (90005cbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90005bc0:	9900      	ldr	r1, [sp, #0]
90005bc2:	e9cb 02c9 	strd	r0, r2, [fp, #804]	; 0x324
90005bc6:	4620      	mov	r0, r4
90005bc8:	f00a ffbe 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bcc:	4a3c      	ldr	r2, [pc, #240]	; (90005cc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
        borderUp = borderColorReleased;
90005bce:	4836      	ldr	r0, [pc, #216]	; (90005ca8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005bd0:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90005bd4:	4935      	ldr	r1, [pc, #212]	; (90005cac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
        borderUp = borderColorReleased;
90005bd6:	f8cb 0408 	str.w	r0, [fp, #1032]	; 0x408
        borderDown = borderColorPressed;
90005bda:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005bde:	f89b 33c4 	ldrb.w	r3, [fp, #964]	; 0x3c4
        borderDown = borderColorPressed;
90005be2:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005be6:	f8cb 1404 	str.w	r1, [fp, #1028]	; 0x404
90005bea:	e9cb c2f4 	strd	ip, r2, [fp, #976]	; 0x3d0
        borderSize = size;
90005bee:	2205      	movs	r2, #5
        borderDown = borderColorPressed;
90005bf0:	f8cb 040c 	str.w	r0, [fp, #1036]	; 0x40c
        handlePressedUpdated();
90005bf4:	f8db 0398 	ldr.w	r0, [fp, #920]	; 0x398
90005bf8:	f8ab 23fc 	strh.w	r2, [fp, #1020]	; 0x3fc
        up = colorReleased;
90005bfc:	4a2c      	ldr	r2, [pc, #176]	; (90005cb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005bfe:	f8cb 2400 	str.w	r2, [fp, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90005c02:	2b00      	cmp	r3, #0
90005c04:	f000 83b8 	beq.w	90006378 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1268>
        color = newColor;
90005c08:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c0a:	f20b 410c 	addw	r1, fp, #1036	; 0x40c
90005c0e:	f8cb 23f4 	str.w	r2, [fp, #1012]	; 0x3f4
90005c12:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005c14:	f8cb 23f8 	str.w	r2, [fp, #1016]	; 0x3f8
        alpha = newAlpha;
90005c18:	2200      	movs	r2, #0
90005c1a:	f88b 23c5 	strb.w	r2, [fp, #965]	; 0x3c5
        handleAlphaUpdated();
90005c1e:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005c22:	42b1      	cmp	r1, r6
90005c24:	f040 83de 	bne.w	900063e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12d4>
        alpha = newAlpha;
90005c28:	f88b 23f2 	strb.w	r2, [fp, #1010]	; 0x3f2
90005c2c:	4b25      	ldr	r3, [pc, #148]	; (90005cc4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90005c2e:	4620      	mov	r0, r4
90005c30:	4a23      	ldr	r2, [pc, #140]	; (90005cc0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90005c32:	9901      	ldr	r1, [sp, #4]
90005c34:	e9cb 32e7 	strd	r3, r2, [fp, #924]	; 0x39c
90005c38:	f00a ff86 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c3c:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005c3e:	481a      	ldr	r0, [pc, #104]	; (90005ca8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005c40:	f8cb 2448 	str.w	r2, [fp, #1096]	; 0x448
90005c44:	4a20      	ldr	r2, [pc, #128]	; (90005cc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
90005c46:	f8cb 0480 	str.w	r0, [fp, #1152]	; 0x480
        borderDown = borderColorPressed;
90005c4a:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005c4e:	f8cb 244c 	str.w	r2, [fp, #1100]	; 0x44c
        borderSize = size;
90005c52:	2205      	movs	r2, #5
90005c54:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005c58:	4914      	ldr	r1, [pc, #80]	; (90005cac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005c5a:	f8ab 2474 	strh.w	r2, [fp, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90005c5e:	f89b 343c 	ldrb.w	r3, [fp, #1084]	; 0x43c
        up = colorReleased;
90005c62:	4a13      	ldr	r2, [pc, #76]	; (90005cb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
        borderDown = borderColorPressed;
90005c64:	f8cb 0484 	str.w	r0, [fp, #1156]	; 0x484
        up = colorReleased;
90005c68:	f8cb 2478 	str.w	r2, [fp, #1144]	; 0x478
        handlePressedUpdated();
90005c6c:	f8db 0410 	ldr.w	r0, [fp, #1040]	; 0x410
        down = colorPressed;
90005c70:	f8cb 147c 	str.w	r1, [fp, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90005c74:	2b00      	cmp	r3, #0
90005c76:	f000 837c 	beq.w	90006372 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1262>
        color = newColor;
90005c7a:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c7c:	f20b 4184 	addw	r1, fp, #1156	; 0x484
90005c80:	e02a      	b.n	90005cd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90005c82:	bf00      	nop
90005c84:	9002ae04 	.word	0x9002ae04
90005c88:	90004fa9 	.word	0x90004fa9
90005c8c:	0007009c 	.word	0x0007009c
90005c90:	0102000f 	.word	0x0102000f
90005c94:	00070123 	.word	0x00070123
90005c98:	004e0038 	.word	0x004e0038
90005c9c:	000f0167 	.word	0x000f0167
90005ca0:	000f0166 	.word	0x000f0166
90005ca4:	00470064 	.word	0x00470064
90005ca8:	ff003366 	.word	0xff003366
90005cac:	ff0099cc 	.word	0xff0099cc
90005cb0:	ff006699 	.word	0xff006699
90005cb4:	90004f45 	.word	0x90004f45
90005cb8:	00610064 	.word	0x00610064
90005cbc:	00580038 	.word	0x00580038
90005cc0:	00610070 	.word	0x00610070
90005cc4:	0058012e 	.word	0x0058012e
90005cc8:	0061007c 	.word	0x0061007c
90005ccc:	011001e0 	.word	0x011001e0
90005cd0:	00b90038 	.word	0x00b90038
90005cd4:	00070038 	.word	0x00070038
90005cd8:	f8cb 246c 	str.w	r2, [fp, #1132]	; 0x46c
90005cdc:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005cde:	f8cb 2470 	str.w	r2, [fp, #1136]	; 0x470
        alpha = newAlpha;
90005ce2:	2200      	movs	r2, #0
90005ce4:	f88b 243d 	strb.w	r2, [fp, #1085]	; 0x43d
        handleAlphaUpdated();
90005ce8:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005cec:	42b1      	cmp	r1, r6
90005cee:	f040 8376 	bne.w	900063de <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12ce>
        alpha = newAlpha;
90005cf2:	f88b 246a 	strb.w	r2, [fp, #1130]	; 0x46a
90005cf6:	4ae2      	ldr	r2, [pc, #904]	; (90006080 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
90005cf8:	4620      	mov	r0, r4
90005cfa:	9902      	ldr	r1, [sp, #8]
90005cfc:	f8cb 2414 	str.w	r2, [fp, #1044]	; 0x414
90005d00:	4ae0      	ldr	r2, [pc, #896]	; (90006084 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>)
90005d02:	f8cb 2418 	str.w	r2, [fp, #1048]	; 0x418
90005d06:	f00a ff1f 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d0a:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005d0c:	48de      	ldr	r0, [pc, #888]	; (90006088 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
90005d0e:	f8cb 24c0 	str.w	r2, [fp, #1216]	; 0x4c0
90005d12:	4ade      	ldr	r2, [pc, #888]	; (9000608c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf7c>)
90005d14:	f8cb 04f8 	str.w	r0, [fp, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90005d18:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005d1c:	f8cb 24c4 	str.w	r2, [fp, #1220]	; 0x4c4
        borderSize = size;
90005d20:	2205      	movs	r2, #5
90005d22:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005d26:	49da      	ldr	r1, [pc, #872]	; (90006090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
90005d28:	f8ab 24ec 	strh.w	r2, [fp, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90005d2c:	f89b 34b4 	ldrb.w	r3, [fp, #1204]	; 0x4b4
        up = colorReleased;
90005d30:	4ad8      	ldr	r2, [pc, #864]	; (90006094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
        borderDown = borderColorPressed;
90005d32:	f8cb 04fc 	str.w	r0, [fp, #1276]	; 0x4fc
        up = colorReleased;
90005d36:	f8cb 24f0 	str.w	r2, [fp, #1264]	; 0x4f0
        handlePressedUpdated();
90005d3a:	f8db 0488 	ldr.w	r0, [fp, #1160]	; 0x488
        down = colorPressed;
90005d3e:	f8cb 14f4 	str.w	r1, [fp, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90005d42:	2b00      	cmp	r3, #0
90005d44:	f000 8312 	beq.w	9000636c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x125c>
        color = newColor;
90005d48:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005d4a:	f20b 41fc 	addw	r1, fp, #1276	; 0x4fc
90005d4e:	f8cb 24e4 	str.w	r2, [fp, #1252]	; 0x4e4
90005d52:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005d54:	f8cb 24e8 	str.w	r2, [fp, #1256]	; 0x4e8
        alpha = newAlpha;
90005d58:	2200      	movs	r2, #0
90005d5a:	f88b 24b5 	strb.w	r2, [fp, #1205]	; 0x4b5
        handleAlphaUpdated();
90005d5e:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005d62:	42b1      	cmp	r1, r6
90005d64:	f040 8338 	bne.w	900063d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12c8>
        alpha = newAlpha;
90005d68:	f88b 24e2 	strb.w	r2, [fp, #1250]	; 0x4e2
90005d6c:	4aca      	ldr	r2, [pc, #808]	; (90006098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf88>)
90005d6e:	4620      	mov	r0, r4
90005d70:	9903      	ldr	r1, [sp, #12]
90005d72:	f8cb 248c 	str.w	r2, [fp, #1164]	; 0x48c
90005d76:	4ac5      	ldr	r2, [pc, #788]	; (9000608c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf7c>)
90005d78:	f8cb 2490 	str.w	r2, [fp, #1168]	; 0x490
90005d7c:	f00a fee4 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d80:	2200      	movs	r2, #0
        borderUp = borderColorReleased;
90005d82:	48c1      	ldr	r0, [pc, #772]	; (90006088 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
90005d84:	f8cb 2538 	str.w	r2, [fp, #1336]	; 0x538
90005d88:	4ac4      	ldr	r2, [pc, #784]	; (9000609c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
90005d8a:	f8cb 0570 	str.w	r0, [fp, #1392]	; 0x570
        borderDown = borderColorPressed;
90005d8e:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005d92:	f8cb 253c 	str.w	r2, [fp, #1340]	; 0x53c
        borderSize = size;
90005d96:	2205      	movs	r2, #5
90005d98:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005d9c:	49bc      	ldr	r1, [pc, #752]	; (90006090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
90005d9e:	f8ab 2564 	strh.w	r2, [fp, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90005da2:	f89b 352c 	ldrb.w	r3, [fp, #1324]	; 0x52c
        up = colorReleased;
90005da6:	4abb      	ldr	r2, [pc, #748]	; (90006094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
        borderDown = borderColorPressed;
90005da8:	f8cb 0574 	str.w	r0, [fp, #1396]	; 0x574
        up = colorReleased;
90005dac:	f8cb 2568 	str.w	r2, [fp, #1384]	; 0x568
        handlePressedUpdated();
90005db0:	f8db 0500 	ldr.w	r0, [fp, #1280]	; 0x500
        down = colorPressed;
90005db4:	f8cb 156c 	str.w	r1, [fp, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90005db8:	2b00      	cmp	r3, #0
90005dba:	f000 82d4 	beq.w	90006366 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1256>
        color = newColor;
90005dbe:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005dc0:	f20b 5174 	addw	r1, fp, #1396	; 0x574
90005dc4:	f8cb 255c 	str.w	r2, [fp, #1372]	; 0x55c
90005dc8:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90005dca:	f8cb 2560 	str.w	r2, [fp, #1376]	; 0x560
        alpha = newAlpha;
90005dce:	2200      	movs	r2, #0
90005dd0:	f88b 252d 	strb.w	r2, [fp, #1325]	; 0x52d
        handleAlphaUpdated();
90005dd4:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90005dd8:	42b1      	cmp	r1, r6
90005dda:	f040 82fa 	bne.w	900063d2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12c2>
        alpha = newAlpha;
90005dde:	f88b 255a 	strb.w	r2, [fp, #1370]	; 0x55a
90005de2:	4aaf      	ldr	r2, [pc, #700]	; (900060a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf90>)
90005de4:	4620      	mov	r0, r4
90005de6:	4ead      	ldr	r6, [pc, #692]	; (9000609c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
90005de8:	9904      	ldr	r1, [sp, #16]
90005dea:	f8cb 2504 	str.w	r2, [fp, #1284]	; 0x504
90005dee:	f8cb 6508 	str.w	r6, [fp, #1288]	; 0x508
90005df2:	f00a fea9 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005df6:	48a4      	ldr	r0, [pc, #656]	; (90006088 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
90005df8:	2200      	movs	r2, #0
        down = colorPressed;
90005dfa:	49a5      	ldr	r1, [pc, #660]	; (90006090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
        borderUp = borderColorReleased;
90005dfc:	f8cb 05e8 	str.w	r0, [fp, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90005e00:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005e04:	f8cb 25b0 	str.w	r2, [fp, #1456]	; 0x5b0
        borderSize = size;
90005e08:	2205      	movs	r2, #5
90005e0a:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90005e0e:	f8cb 65b4 	str.w	r6, [fp, #1460]	; 0x5b4
90005e12:	f8ab 25dc 	strh.w	r2, [fp, #1500]	; 0x5dc
90005e16:	f8cb 05ec 	str.w	r0, [fp, #1516]	; 0x5ec
        up = colorReleased;
90005e1a:	4a9e      	ldr	r2, [pc, #632]	; (90006094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
        borderBox.setColor(T::getPressed() ? down : up);
90005e1c:	f89b 05a4 	ldrb.w	r0, [fp, #1444]	; 0x5a4
        up = colorReleased;
90005e20:	f8cb 25e0 	str.w	r2, [fp, #1504]	; 0x5e0
        down = colorPressed;
90005e24:	f8cb 15e4 	str.w	r1, [fp, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
90005e28:	2800      	cmp	r0, #0
90005e2a:	f000 8299 	beq.w	90006360 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1250>
        color = newColor;
90005e2e:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e30:	f20b 51ec 	addw	r1, fp, #1516	; 0x5ec
90005e34:	f8cb 25d4 	str.w	r2, [fp, #1492]	; 0x5d4
        alpha = newAlpha;
90005e38:	2600      	movs	r6, #0
90005e3a:	680a      	ldr	r2, [r1, #0]
90005e3c:	4620      	mov	r0, r4
90005e3e:	9905      	ldr	r1, [sp, #20]
        borderColor = colorBorder;
90005e40:	f8cb 25d8 	str.w	r2, [fp, #1496]	; 0x5d8
90005e44:	4a97      	ldr	r2, [pc, #604]	; (900060a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf94>)
90005e46:	f88b 65a5 	strb.w	r6, [fp, #1445]	; 0x5a5
90005e4a:	f8cb 257c 	str.w	r2, [fp, #1404]	; 0x57c
90005e4e:	4a93      	ldr	r2, [pc, #588]	; (9000609c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf8c>)
        alpha = newAlpha;
90005e50:	f88b 65d2 	strb.w	r6, [fp, #1490]	; 0x5d2
90005e54:	f8cb 2580 	str.w	r2, [fp, #1408]	; 0x580
90005e58:	f00a fe76 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005e5c:	488a      	ldr	r0, [pc, #552]	; (90006088 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
90005e5e:	4a92      	ldr	r2, [pc, #584]	; (900060a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>)
90005e60:	f8cb 0660 	str.w	r0, [fp, #1632]	; 0x660
        borderDown = borderColorPressed;
90005e64:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005e68:	f8cb 262c 	str.w	r2, [fp, #1580]	; 0x62c
        borderSize = size;
90005e6c:	2205      	movs	r2, #5
90005e6e:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        down = colorPressed;
90005e72:	4987      	ldr	r1, [pc, #540]	; (90006090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
90005e74:	f8ab 2654 	strh.w	r2, [fp, #1620]	; 0x654
        borderDown = borderColorPressed;
90005e78:	f8cb 0664 	str.w	r0, [fp, #1636]	; 0x664
        up = colorReleased;
90005e7c:	4a85      	ldr	r2, [pc, #532]	; (90006094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
        borderBox.setColor(T::getPressed() ? down : up);
90005e7e:	f89b 061c 	ldrb.w	r0, [fp, #1564]	; 0x61c
90005e82:	f8cb 6628 	str.w	r6, [fp, #1576]	; 0x628
        up = colorReleased;
90005e86:	f8cb 2658 	str.w	r2, [fp, #1624]	; 0x658
        down = colorPressed;
90005e8a:	f8cb 165c 	str.w	r1, [fp, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
90005e8e:	2800      	cmp	r0, #0
90005e90:	f000 8263 	beq.w	9000635a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x124a>
        color = newColor;
90005e94:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e96:	f20b 6164 	addw	r1, fp, #1636	; 0x664
90005e9a:	f8cb 264c 	str.w	r2, [fp, #1612]	; 0x64c
90005e9e:	2600      	movs	r6, #0
90005ea0:	680a      	ldr	r2, [r1, #0]
90005ea2:	4620      	mov	r0, r4
90005ea4:	f8df 8200 	ldr.w	r8, [pc, #512]	; 900060a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>
        borderColor = colorBorder;
90005ea8:	f8cb 2650 	str.w	r2, [fp, #1616]	; 0x650
90005eac:	4a7f      	ldr	r2, [pc, #508]	; (900060ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf9c>)
90005eae:	9906      	ldr	r1, [sp, #24]
90005eb0:	f8cb 25f4 	str.w	r2, [fp, #1524]	; 0x5f4
90005eb4:	f88b 661d 	strb.w	r6, [fp, #1565]	; 0x61d
        alpha = newAlpha;
90005eb8:	f88b 664a 	strb.w	r6, [fp, #1610]	; 0x64a
90005ebc:	f8cb 85f8 	str.w	r8, [fp, #1528]	; 0x5f8
90005ec0:	f00a fe42 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005ec4:	4870      	ldr	r0, [pc, #448]	; (90006088 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
        borderSize = size;
90005ec6:	2205      	movs	r2, #5
        down = colorPressed;
90005ec8:	4971      	ldr	r1, [pc, #452]	; (90006090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>)
        borderUp = borderColorReleased;
90005eca:	f8cb 06d8 	str.w	r0, [fp, #1752]	; 0x6d8
        borderDown = borderColorPressed;
90005ece:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
90005ed2:	f8ab 26cc 	strh.w	r2, [fp, #1740]	; 0x6cc
90005ed6:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
        up = colorReleased;
90005eda:	4a6e      	ldr	r2, [pc, #440]	; (90006094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf84>)
90005edc:	f8cb 66a0 	str.w	r6, [fp, #1696]	; 0x6a0
        borderDown = borderColorPressed;
90005ee0:	f8cb 06dc 	str.w	r0, [fp, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90005ee4:	f89b 0694 	ldrb.w	r0, [fp, #1684]	; 0x694
90005ee8:	f8cb 86a4 	str.w	r8, [fp, #1700]	; 0x6a4
        up = colorReleased;
90005eec:	f8cb 26d0 	str.w	r2, [fp, #1744]	; 0x6d0
        down = colorPressed;
90005ef0:	f8cb 16d4 	str.w	r1, [fp, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90005ef4:	2800      	cmp	r0, #0
90005ef6:	f000 822d 	beq.w	90006354 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1244>
        color = newColor;
90005efa:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005efc:	f20b 61dc 	addw	r1, fp, #1756	; 0x6dc
90005f00:	f8cb 26c4 	str.w	r2, [fp, #1732]	; 0x6c4
90005f04:	2600      	movs	r6, #0
90005f06:	680a      	ldr	r2, [r1, #0]
90005f08:	f04f 1850 	mov.w	r8, #5242960	; 0x500050
90005f0c:	f04f 0905 	mov.w	r9, #5
90005f10:	9907      	ldr	r1, [sp, #28]
        borderColor = colorBorder;
90005f12:	f8cb 26c8 	str.w	r2, [fp, #1736]	; 0x6c8
90005f16:	4620      	mov	r0, r4
90005f18:	4a65      	ldr	r2, [pc, #404]	; (900060b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa0>)
90005f1a:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 900060bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfac>
90005f1e:	f8cb 266c 	str.w	r2, [fp, #1644]	; 0x66c
90005f22:	4a61      	ldr	r2, [pc, #388]	; (900060a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf98>)
90005f24:	f88b 6695 	strb.w	r6, [fp, #1685]	; 0x695
90005f28:	f8cb 2670 	str.w	r2, [fp, #1648]	; 0x670
        alpha = newAlpha;
90005f2c:	f88b 66c2 	strb.w	r6, [fp, #1730]	; 0x6c2
90005f30:	f00a fe0a 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90005f34:	a91d      	add	r1, sp, #116	; 0x74
90005f36:	4628      	mov	r0, r5
90005f38:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90005f3c:	f00d fcc3 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005f40:	4631      	mov	r1, r6
90005f42:	4628      	mov	r0, r5
90005f44:	f8cb a6e4 	str.w	sl, [fp, #1764]	; 0x6e4
90005f48:	f8cb 86e8 	str.w	r8, [fp, #1768]	; 0x6e8
90005f4c:	f00c fc3b 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005f50:	4629      	mov	r1, r5
90005f52:	4620      	mov	r0, r4
90005f54:	2506      	movs	r5, #6
        visible = vis;
90005f56:	f88b 6705 	strb.w	r6, [fp, #1797]	; 0x705
90005f5a:	f00a fdf5 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90005f5e:	a91d      	add	r1, sp, #116	; 0x74
90005f60:	4638      	mov	r0, r7
90005f62:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90005f66:	f00d fcae 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005f6a:	4631      	mov	r1, r6
90005f6c:	4638      	mov	r0, r7
        rect.x = x;
90005f6e:	f8cb a710 	str.w	sl, [fp, #1808]	; 0x710
90005f72:	f8cb 8714 	str.w	r8, [fp, #1812]	; 0x714
90005f76:	f00c fc26 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005f7a:	4639      	mov	r1, r7
90005f7c:	4620      	mov	r0, r4
        visible = vis;
90005f7e:	f88b 6731 	strb.w	r6, [fp, #1841]	; 0x731
90005f82:	f00a fde1 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90005f86:	f8dd a020 	ldr.w	sl, [sp, #32]
        rect.x = x;
90005f8a:	4f4a      	ldr	r7, [pc, #296]	; (900060b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa4>)
90005f8c:	a91d      	add	r1, sp, #116	; 0x74
90005f8e:	4650      	mov	r0, sl
90005f90:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90005f94:	f00d fc97 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005f98:	4631      	mov	r1, r6
90005f9a:	4650      	mov	r0, sl
90005f9c:	f8cb 773c 	str.w	r7, [fp, #1852]	; 0x73c
90005fa0:	f8cb 8740 	str.w	r8, [fp, #1856]	; 0x740
90005fa4:	f00c fc0f 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005fa8:	4651      	mov	r1, sl
90005faa:	4620      	mov	r0, r4
        visible = vis;
90005fac:	f88b 675d 	strb.w	r6, [fp, #1885]	; 0x75d
90005fb0:	f00a fdca 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90005fb4:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
90005fb8:	a91d      	add	r1, sp, #116	; 0x74
90005fba:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90005fbe:	4650      	mov	r0, sl
90005fc0:	f00d fc81 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005fc4:	4631      	mov	r1, r6
90005fc6:	4650      	mov	r0, sl
        rect.x = x;
90005fc8:	f8cb 7768 	str.w	r7, [fp, #1896]	; 0x768
90005fcc:	f8cb 876c 	str.w	r8, [fp, #1900]	; 0x76c
90005fd0:	3776      	adds	r7, #118	; 0x76
90005fd2:	f00c fbf8 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005fd6:	4651      	mov	r1, sl
90005fd8:	4620      	mov	r0, r4
        visible = vis;
90005fda:	f88b 6789 	strb.w	r6, [fp, #1929]	; 0x789
90005fde:	f00a fdb3 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90005fe2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
90005fe6:	a91d      	add	r1, sp, #116	; 0x74
90005fe8:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90005fec:	4650      	mov	r0, sl
90005fee:	f00d fc6a 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005ff2:	4631      	mov	r1, r6
90005ff4:	4650      	mov	r0, sl
        rect.x = x;
90005ff6:	f8cb 7794 	str.w	r7, [fp, #1940]	; 0x794
90005ffa:	f8cb 8798 	str.w	r8, [fp, #1944]	; 0x798
90005ffe:	f00c fbe2 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006002:	4651      	mov	r1, sl
90006004:	4620      	mov	r0, r4
        visible = vis;
90006006:	f88b 67b5 	strb.w	r6, [fp, #1973]	; 0x7b5
9000600a:	f00a fd9d 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000600e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
90006012:	a91d      	add	r1, sp, #116	; 0x74
90006014:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006018:	4650      	mov	r0, sl
9000601a:	f00d fc54 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000601e:	4631      	mov	r1, r6
90006020:	4650      	mov	r0, sl
        rect.x = x;
90006022:	f8cb 77c0 	str.w	r7, [fp, #1984]	; 0x7c0
90006026:	f8cb 87c4 	str.w	r8, [fp, #1988]	; 0x7c4
9000602a:	f00c fbcc 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000602e:	4651      	mov	r1, sl
90006030:	4620      	mov	r0, r4
        visible = vis;
90006032:	f88b 67e1 	strb.w	r6, [fp, #2017]	; 0x7e1
90006036:	f00a fd87 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000603a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
        rect.x = x;
9000603e:	4f1e      	ldr	r7, [pc, #120]	; (900060b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa8>)
90006040:	a91d      	add	r1, sp, #116	; 0x74
90006042:	4650      	mov	r0, sl
90006044:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
90006048:	f00d fc3d 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000604c:	4631      	mov	r1, r6
9000604e:	4650      	mov	r0, sl
90006050:	f8cb 77ec 	str.w	r7, [fp, #2028]	; 0x7ec
90006054:	f8cb 87f0 	str.w	r8, [fp, #2032]	; 0x7f0
90006058:	f00c fbb5 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000605c:	4651      	mov	r1, sl
9000605e:	4620      	mov	r0, r4
        visible = vis;
90006060:	f88b 680d 	strb.w	r6, [fp, #2061]	; 0x80d
90006064:	f00a fd70 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006068:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
9000606c:	a91d      	add	r1, sp, #116	; 0x74
9000606e:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006072:	4650      	mov	r0, sl
90006074:	f00d fc27 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006078:	4631      	mov	r1, r6
9000607a:	4650      	mov	r0, sl
9000607c:	e020      	b.n	900060c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfb0>
9000607e:	bf00      	nop
90006080:	005800a7 	.word	0x005800a7
90006084:	0061007c 	.word	0x0061007c
90006088:	ff003366 	.word	0xff003366
9000608c:	00470064 	.word	0x00470064
90006090:	ff0099cc 	.word	0xff0099cc
90006094:	ff006699 	.word	0xff006699
90006098:	00c20038 	.word	0x00c20038
9000609c:	0047007c 	.word	0x0047007c
900060a0:	000700a7 	.word	0x000700a7
900060a4:	00c200a7 	.word	0x00c200a7
900060a8:	00470071 	.word	0x00470071
900060ac:	0007012e 	.word	0x0007012e
900060b0:	00c2012e 	.word	0x00c2012e
900060b4:	fffe00bc 	.word	0xfffe00bc
900060b8:	00600042 	.word	0x00600042
900060bc:	fffe0042 	.word	0xfffe0042
        rect.x = x;
900060c0:	f8cb 7818 	str.w	r7, [fp, #2072]	; 0x818
900060c4:	f8cb 881c 	str.w	r8, [fp, #2076]	; 0x81c
900060c8:	377a      	adds	r7, #122	; 0x7a
900060ca:	f00c fb7c 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900060ce:	4651      	mov	r1, sl
900060d0:	4620      	mov	r0, r4
        visible = vis;
900060d2:	f88b 6839 	strb.w	r6, [fp, #2105]	; 0x839
900060d6:	f00a fd37 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900060da:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
900060de:	a91d      	add	r1, sp, #116	; 0x74
900060e0:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
900060e4:	4650      	mov	r0, sl
900060e6:	f00d fbee 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900060ea:	4631      	mov	r1, r6
900060ec:	4650      	mov	r0, sl
        rect.x = x;
900060ee:	f8cb 7844 	str.w	r7, [fp, #2116]	; 0x844
900060f2:	f8cb 8848 	str.w	r8, [fp, #2120]	; 0x848
900060f6:	f00c fb66 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900060fa:	4651      	mov	r1, sl
900060fc:	4620      	mov	r0, r4
        visible = vis;
900060fe:	f88b 6865 	strb.w	r6, [fp, #2149]	; 0x865
90006102:	f00a fd21 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006106:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
9000610a:	a91d      	add	r1, sp, #116	; 0x74
9000610c:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
90006110:	4650      	mov	r0, sl
90006112:	f00d fbd8 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006116:	4631      	mov	r1, r6
90006118:	4650      	mov	r0, sl
        rect.x = x;
9000611a:	f8cb 7870 	str.w	r7, [fp, #2160]	; 0x870
9000611e:	f8cb 8874 	str.w	r8, [fp, #2164]	; 0x874
90006122:	3776      	adds	r7, #118	; 0x76
90006124:	f00c fb4f 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006128:	4651      	mov	r1, sl
9000612a:	4620      	mov	r0, r4
        visible = vis;
9000612c:	f88b 6891 	strb.w	r6, [fp, #2193]	; 0x891
90006130:	f00a fd0a 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006134:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
90006138:	a91d      	add	r1, sp, #116	; 0x74
9000613a:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
9000613e:	4650      	mov	r0, sl
90006140:	f00d fbc1 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006144:	4631      	mov	r1, r6
90006146:	4650      	mov	r0, sl
        rect.x = x;
90006148:	f8cb 789c 	str.w	r7, [fp, #2204]	; 0x89c
9000614c:	f8cb 88a0 	str.w	r8, [fp, #2208]	; 0x8a0
90006150:	f00c fb39 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006154:	4651      	mov	r1, sl
90006156:	4620      	mov	r0, r4
        visible = vis;
90006158:	f88b 68bd 	strb.w	r6, [fp, #2237]	; 0x8bd
9000615c:	f00a fcf4 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006160:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
90006164:	a91d      	add	r1, sp, #116	; 0x74
90006166:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
9000616a:	4650      	mov	r0, sl
9000616c:	f00d fbab 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006170:	4631      	mov	r1, r6
90006172:	4650      	mov	r0, sl
        rect.x = x;
90006174:	f8cb 78c8 	str.w	r7, [fp, #2248]	; 0x8c8
90006178:	f8cb 88cc 	str.w	r8, [fp, #2252]	; 0x8cc
9000617c:	f00c fb23 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006180:	4651      	mov	r1, sl
90006182:	4620      	mov	r0, r4
        visible = vis;
90006184:	f88b 68e9 	strb.w	r6, [fp, #2281]	; 0x8e9
90006188:	f00a fcde 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000618c:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
        rect.x = x;
90006190:	4f9a      	ldr	r7, [pc, #616]	; (900063fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12ec>)
90006192:	a91d      	add	r1, sp, #116	; 0x74
90006194:	4650      	mov	r0, sl
90006196:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
9000619a:	f00d fb94 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000619e:	4631      	mov	r1, r6
900061a0:	4650      	mov	r0, sl
900061a2:	f8cb 78f4 	str.w	r7, [fp, #2292]	; 0x8f4
900061a6:	f8cb 88f8 	str.w	r8, [fp, #2296]	; 0x8f8
900061aa:	f00c fb0c 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900061ae:	4651      	mov	r1, sl
900061b0:	4620      	mov	r0, r4
        visible = vis;
900061b2:	f88b 6915 	strb.w	r6, [fp, #2325]	; 0x915
900061b6:	f00a fcc7 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900061ba:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
900061be:	a91d      	add	r1, sp, #116	; 0x74
900061c0:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
900061c4:	4650      	mov	r0, sl
900061c6:	f00d fb7e 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900061ca:	4631      	mov	r1, r6
900061cc:	4650      	mov	r0, sl
        rect.x = x;
900061ce:	f8cb 7920 	str.w	r7, [fp, #2336]	; 0x920
900061d2:	f8cb 8924 	str.w	r8, [fp, #2340]	; 0x924
900061d6:	377e      	adds	r7, #126	; 0x7e
900061d8:	f00c faf5 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900061dc:	4651      	mov	r1, sl
900061de:	4620      	mov	r0, r4
        visible = vis;
900061e0:	f88b 6941 	strb.w	r6, [fp, #2369]	; 0x941
900061e4:	f00a fcb0 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900061e8:	f8dd a050 	ldr.w	sl, [sp, #80]	; 0x50
900061ec:	a91d      	add	r1, sp, #116	; 0x74
900061ee:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
900061f2:	4650      	mov	r0, sl
900061f4:	f00d fb67 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900061f8:	4631      	mov	r1, r6
900061fa:	4650      	mov	r0, sl
        rect.x = x;
900061fc:	f8cb 794c 	str.w	r7, [fp, #2380]	; 0x94c
90006200:	f8cb 8950 	str.w	r8, [fp, #2384]	; 0x950
90006204:	f00c fadf 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006208:	4651      	mov	r1, sl
9000620a:	4620      	mov	r0, r4
        visible = vis;
9000620c:	f88b 696d 	strb.w	r6, [fp, #2413]	; 0x96d
90006210:	f00a fc9a 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006214:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90006218:	a91d      	add	r1, sp, #116	; 0x74
9000621a:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
9000621e:	4650      	mov	r0, sl
90006220:	f00d fb51 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006224:	4631      	mov	r1, r6
90006226:	4650      	mov	r0, sl
        rect.x = x;
90006228:	f8cb 7978 	str.w	r7, [fp, #2424]	; 0x978
9000622c:	f8cb 897c 	str.w	r8, [fp, #2428]	; 0x97c
90006230:	3772      	adds	r7, #114	; 0x72
90006232:	f00c fac8 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006236:	4651      	mov	r1, sl
90006238:	4620      	mov	r0, r4
        visible = vis;
9000623a:	f88b 6999 	strb.w	r6, [fp, #2457]	; 0x999
9000623e:	f00a fc83 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006242:	f8ad 9074 	strh.w	r9, [sp, #116]	; 0x74
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006246:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
9000624a:	a91d      	add	r1, sp, #116	; 0x74
9000624c:	4648      	mov	r0, r9
9000624e:	f00d fb3a 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006252:	4631      	mov	r1, r6
90006254:	4648      	mov	r0, r9
        rect.x = x;
90006256:	f8cb 79a4 	str.w	r7, [fp, #2468]	; 0x9a4
9000625a:	f8cb 89a8 	str.w	r8, [fp, #2472]	; 0x9a8
9000625e:	f00c fab2 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006262:	4649      	mov	r1, r9
90006264:	4620      	mov	r0, r4
        visible = vis;
90006266:	f88b 69c5 	strb.w	r6, [fp, #2501]	; 0x9c5
9000626a:	f00a fc6d 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000626e:	f8ad 5074 	strh.w	r5, [sp, #116]	; 0x74
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006272:	9d17      	ldr	r5, [sp, #92]	; 0x5c
90006274:	a91d      	add	r1, sp, #116	; 0x74
90006276:	4628      	mov	r0, r5
90006278:	f00d fb25 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000627c:	4631      	mov	r1, r6
9000627e:	4628      	mov	r0, r5
        rect.x = x;
90006280:	f8cb 79d0 	str.w	r7, [fp, #2512]	; 0x9d0
90006284:	f8cb 89d4 	str.w	r8, [fp, #2516]	; 0x9d4
90006288:	f00c fa9d 	bl	900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000628c:	4620      	mov	r0, r4
9000628e:	4629      	mov	r1, r5
        visible = vis;
90006290:	f88b 69f1 	strb.w	r6, [fp, #2545]	; 0x9f1
90006294:	f00a fc58 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006298:	4658      	mov	r0, fp
9000629a:	b01f      	add	sp, #124	; 0x7c
9000629c:	ecbd 8b06 	vpop	{d8-d10}
900062a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900062a4:	6890      	ldr	r0, [r2, #8]
900062a6:	4c56      	ldr	r4, [pc, #344]	; (90006400 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12f0>)
900062a8:	6802      	ldr	r2, [r0, #0]
900062aa:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
900062ac:	42a1      	cmp	r1, r4
900062ae:	f43e afac 	beq.w	9000520a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900062b2:	f7fe bf76 	b.w	900051a2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900062b6:	6890      	ldr	r0, [r2, #8]
900062b8:	6801      	ldr	r1, [r0, #0]
900062ba:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900062bc:	42a1      	cmp	r1, r4
900062be:	d165      	bne.n	9000638c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x127c>
        return auxiliaryLCD;
900062c0:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900062c2:	2800      	cmp	r0, #0
900062c4:	f43e afc7 	beq.w	90005256 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
900062c8:	6802      	ldr	r2, [r0, #0]
900062ca:	f04f 0901 	mov.w	r9, #1
900062ce:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900062d0:	42a2      	cmp	r2, r4
900062d2:	f43e afc0 	beq.w	90005256 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900062d6:	4790      	blx	r2
900062d8:	2800      	cmp	r0, #0
900062da:	bf08      	it	eq
900062dc:	f049 0901 	orreq.w	r9, r9, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900062e0:	f1b9 0f00 	cmp.w	r9, #0
900062e4:	f47e afb7 	bne.w	90005256 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900062e8:	f7fe bf6c 	b.w	900051c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
900062ec:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900062ee:	6801      	ldr	r1, [r0, #0]
900062f0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900062f2:	42a1      	cmp	r1, r4
900062f4:	d161      	bne.n	900063ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x12aa>
        return auxiliaryLCD;
900062f6:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900062f8:	2800      	cmp	r0, #0
900062fa:	f43e afcf 	beq.w	9000529c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
900062fe:	6802      	ldr	r2, [r0, #0]
90006300:	f04f 0901 	mov.w	r9, #1
90006304:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006306:	42a2      	cmp	r2, r4
90006308:	f43e afc8 	beq.w	9000529c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000630c:	4790      	blx	r2
9000630e:	2800      	cmp	r0, #0
90006310:	bf08      	it	eq
90006312:	f049 0901 	orreq.w	r9, r9, #1
90006316:	f1b9 0f00 	cmp.w	r9, #0
9000631a:	f47e afbf 	bne.w	9000529c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000631e:	f7fe bf51 	b.w	900051c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006322:	6890      	ldr	r0, [r2, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006324:	6801      	ldr	r1, [r0, #0]
90006326:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90006328:	42a1      	cmp	r1, r4
9000632a:	d13b      	bne.n	900063a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1294>
        return auxiliaryLCD;
9000632c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000632e:	2800      	cmp	r0, #0
90006330:	f43e afd7 	beq.w	900052e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006334:	6802      	ldr	r2, [r0, #0]
90006336:	2601      	movs	r6, #1
90006338:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000633a:	42a2      	cmp	r2, r4
9000633c:	f43e afd1 	beq.w	900052e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006340:	4790      	blx	r2
90006342:	2800      	cmp	r0, #0
90006344:	bf08      	it	eq
90006346:	f046 0601 	orreq.w	r6, r6, #1
9000634a:	2e00      	cmp	r6, #0
9000634c:	f47e afc9 	bne.w	900052e2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006350:	f7fe bf38 	b.w	900051c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90006354:	f50b 61db 	add.w	r1, fp, #1752	; 0x6d8
90006358:	e5d2      	b.n	90005f00 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdf0>
9000635a:	f50b 61cc 	add.w	r1, fp, #1632	; 0x660
9000635e:	e59c      	b.n	90005e9a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8a>
90006360:	f50b 61bd 	add.w	r1, fp, #1512	; 0x5e8
90006364:	e566      	b.n	90005e34 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd24>
90006366:	f50b 61ae 	add.w	r1, fp, #1392	; 0x570
9000636a:	e52b      	b.n	90005dc4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcb4>
9000636c:	f50b 619f 	add.w	r1, fp, #1272	; 0x4f8
90006370:	e4ed      	b.n	90005d4e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc3e>
90006372:	f50b 6190 	add.w	r1, fp, #1152	; 0x480
90006376:	e4af      	b.n	90005cd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90006378:	f50b 6181 	add.w	r1, fp, #1032	; 0x408
9000637c:	e447      	b.n	90005c0e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xafe>
9000637e:	f50b 7164 	add.w	r1, fp, #912	; 0x390
90006382:	e40c      	b.n	90005b9e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8e>
90006384:	f50b 7146 	add.w	r1, fp, #792	; 0x318
90006388:	f7ff bbcb 	b.w	90005b22 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa12>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000638c:	4788      	blx	r1
9000638e:	6832      	ldr	r2, [r6, #0]
90006390:	fab0 f980 	clz	r9, r0
90006394:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
90006396:	ea4f 1959 	mov.w	r9, r9, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000639a:	2800      	cmp	r0, #0
9000639c:	d0a0      	beq.n	900062e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11d0>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000639e:	6802      	ldr	r2, [r0, #0]
900063a0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900063a2:	e795      	b.n	900062d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11c0>
        bool compat = HAL::lcd().framebufferFormat() == format;
900063a4:	4788      	blx	r1
900063a6:	6832      	ldr	r2, [r6, #0]
900063a8:	fab0 f680 	clz	r6, r0
900063ac:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900063ae:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900063b0:	2800      	cmp	r0, #0
900063b2:	d0ca      	beq.n	9000634a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x123a>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900063b4:	6802      	ldr	r2, [r0, #0]
900063b6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900063b8:	e7bf      	b.n	9000633a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x122a>
        bool compat = HAL::lcd().framebufferFormat() == format;
900063ba:	4788      	blx	r1
900063bc:	6832      	ldr	r2, [r6, #0]
900063be:	fab0 f980 	clz	r9, r0
900063c2:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
900063c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900063c8:	2800      	cmp	r0, #0
900063ca:	d0a4      	beq.n	90006316 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1206>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900063cc:	6802      	ldr	r2, [r0, #0]
900063ce:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900063d0:	e799      	b.n	90006306 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x11f6>
        handleAlphaUpdated();
900063d2:	9804      	ldr	r0, [sp, #16]
900063d4:	4788      	blx	r1
900063d6:	e504      	b.n	90005de2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcd2>
900063d8:	9803      	ldr	r0, [sp, #12]
900063da:	4788      	blx	r1
900063dc:	e4c6      	b.n	90005d6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc5c>
900063de:	9802      	ldr	r0, [sp, #8]
900063e0:	4788      	blx	r1
900063e2:	e488      	b.n	90005cf6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbe6>
900063e4:	9801      	ldr	r0, [sp, #4]
900063e6:	4788      	blx	r1
900063e8:	e420      	b.n	90005c2c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb1c>
900063ea:	9800      	ldr	r0, [sp, #0]
900063ec:	4788      	blx	r1
900063ee:	f7ff bbe5 	b.w	90005bbc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xaac>
900063f2:	ee19 0a90 	vmov	r0, s19
900063f6:	4788      	blx	r1
900063f8:	f7ff bba3 	b.w	90005b42 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa32>
900063fc:	00c30042 	.word	0x00c30042
90006400:	90002339 	.word	0x90002339

90006404 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006404:	4770      	bx	lr
90006406:	bf00      	nop

90006408 <_ZN19FrontendApplicationD0Ev>:
90006408:	b510      	push	{r4, lr}
9000640a:	4604      	mov	r4, r0
9000640c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90006410:	f021 f886 	bl	90027520 <_ZdlPvj>
90006414:	4620      	mov	r0, r4
90006416:	bd10      	pop	{r4, pc}

90006418 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006418:	b510      	push	{r4, lr}
9000641a:	4604      	mov	r4, r0
    {
        model.tick();
9000641c:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90006420:	f000 f814 	bl	9000644c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006424:	4620      	mov	r0, r4
    }
90006426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
9000642a:	f00f bfe5 	b.w	900163f8 <_ZN8touchgfx11Application15handleTickEventEv>
9000642e:	bf00      	nop

90006430 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006430:	b510      	push	{r4, lr}
90006432:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006434:	f7fd fc94 	bl	90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006438:	4b01      	ldr	r3, [pc, #4]	; (90006440 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
9000643a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
9000643c:	6023      	str	r3, [r4, #0]
}
9000643e:	bd10      	pop	{r4, pc}
90006440:	9002ae54 	.word	0x9002ae54

90006444 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90006444:	2200      	movs	r2, #0
90006446:	6002      	str	r2, [r0, #0]
{

}
90006448:	4770      	bx	lr
9000644a:	bf00      	nop

9000644c <_ZN5Model4tickEv>:

void Model::tick()
{

}
9000644c:	4770      	bx	lr
9000644e:	bf00      	nop

90006450 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
90006450:	4770      	bx	lr
90006452:	bf00      	nop

90006454 <_ZThn4_N25screen_main_menuPresenterD1Ev>:
90006454:	3804      	subs	r0, #4
90006456:	4770      	bx	lr

90006458 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
90006458:	4770      	bx	lr
9000645a:	bf00      	nop

9000645c <_ZN25screen_main_menuPresenterD0Ev>:
9000645c:	b510      	push	{r4, lr}
9000645e:	4604      	mov	r4, r0
90006460:	2110      	movs	r1, #16
90006462:	f021 f85d 	bl	90027520 <_ZdlPvj>
90006466:	4620      	mov	r0, r4
90006468:	bd10      	pop	{r4, pc}
9000646a:	bf00      	nop

9000646c <_ZThn4_N25screen_main_menuPresenterD0Ev>:
9000646c:	b500      	push	{lr}
9000646e:	3804      	subs	r0, #4
90006470:	b083      	sub	sp, #12
90006472:	2110      	movs	r1, #16
90006474:	9001      	str	r0, [sp, #4]
90006476:	f021 f853 	bl	90027520 <_ZdlPvj>
9000647a:	9801      	ldr	r0, [sp, #4]
9000647c:	b003      	add	sp, #12
9000647e:	f85d fb04 	ldr.w	pc, [sp], #4
90006482:	bf00      	nop

90006484 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
90006484:	4a06      	ldr	r2, [pc, #24]	; (900064a0 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
90006486:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
90006488:	b410      	push	{r4}
    ModelListener() : model(0) {}
9000648a:	2400      	movs	r4, #0
9000648c:	6084      	str	r4, [r0, #8]
    : view(v)
9000648e:	f102 0408 	add.w	r4, r2, #8
90006492:	3220      	adds	r2, #32
90006494:	e9c0 4200 	strd	r4, r2, [r0]
}
90006498:	f85d 4b04 	ldr.w	r4, [sp], #4
9000649c:	4770      	bx	lr
9000649e:	bf00      	nop
900064a0:	9002aea0 	.word	0x9002aea0

900064a4 <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
900064a4:	4770      	bx	lr
900064a6:	bf00      	nop

900064a8 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
900064a8:	4b03      	ldr	r3, [pc, #12]	; (900064b8 <_ZN20screen_main_menuViewD1Ev+0x10>)
900064aa:	b510      	push	{r4, lr}
900064ac:	4604      	mov	r4, r0
900064ae:	6003      	str	r3, [r0, #0]
900064b0:	f7fd fee6 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
900064b4:	4620      	mov	r0, r4
900064b6:	bd10      	pop	{r4, pc}
900064b8:	9002aed0 	.word	0x9002aed0

900064bc <_ZN20screen_main_menuViewD0Ev>:
900064bc:	4b06      	ldr	r3, [pc, #24]	; (900064d8 <_ZN20screen_main_menuViewD0Ev+0x1c>)
900064be:	b510      	push	{r4, lr}
900064c0:	4604      	mov	r4, r0
900064c2:	6003      	str	r3, [r0, #0]
900064c4:	f7fd fedc 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
900064c8:	f44f 7186 	mov.w	r1, #268	; 0x10c
900064cc:	4620      	mov	r0, r4
900064ce:	f021 f827 	bl	90027520 <_ZdlPvj>
900064d2:	4620      	mov	r0, r4
900064d4:	bd10      	pop	{r4, pc}
900064d6:	bf00      	nop
900064d8:	9002aed0 	.word	0x9002aed0

900064dc <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
900064dc:	b510      	push	{r4, lr}
900064de:	4604      	mov	r4, r0
900064e0:	f7fd ff1e 	bl	90004320 <_ZN24screen_main_menuViewBaseC1Ev>
900064e4:	4b01      	ldr	r3, [pc, #4]	; (900064ec <_ZN20screen_main_menuViewC1Ev+0x10>)
}
900064e6:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
900064e8:	6023      	str	r3, [r4, #0]
}
900064ea:	bd10      	pop	{r4, pc}
900064ec:	9002aed0 	.word	0x9002aed0

900064f0 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
900064f0:	f7fd bec8 	b.w	90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>

900064f4 <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
900064f4:	4770      	bx	lr
900064f6:	bf00      	nop

900064f8 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
900064f8:	3804      	subs	r0, #4
900064fa:	4770      	bx	lr

900064fc <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
900064fc:	4770      	bx	lr
900064fe:	bf00      	nop

90006500 <_ZN26screen_snake_gamePresenterD0Ev>:
90006500:	b510      	push	{r4, lr}
90006502:	4604      	mov	r4, r0
90006504:	2110      	movs	r1, #16
90006506:	f021 f80b 	bl	90027520 <_ZdlPvj>
9000650a:	4620      	mov	r0, r4
9000650c:	bd10      	pop	{r4, pc}
9000650e:	bf00      	nop

90006510 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90006510:	b500      	push	{lr}
90006512:	3804      	subs	r0, #4
90006514:	b083      	sub	sp, #12
90006516:	2110      	movs	r1, #16
90006518:	9001      	str	r0, [sp, #4]
9000651a:	f021 f801 	bl	90027520 <_ZdlPvj>
9000651e:	9801      	ldr	r0, [sp, #4]
90006520:	b003      	add	sp, #12
90006522:	f85d fb04 	ldr.w	pc, [sp], #4
90006526:	bf00      	nop

90006528 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
90006528:	4a06      	ldr	r2, [pc, #24]	; (90006544 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
9000652a:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
9000652c:	b410      	push	{r4}
9000652e:	2400      	movs	r4, #0
90006530:	6084      	str	r4, [r0, #8]
    : view(v)
90006532:	f102 0408 	add.w	r4, r2, #8
90006536:	3220      	adds	r2, #32
90006538:	e9c0 4200 	strd	r4, r2, [r0]
}
9000653c:	f85d 4b04 	ldr.w	r4, [sp], #4
90006540:	4770      	bx	lr
90006542:	bf00      	nop
90006544:	9002aefc 	.word	0x9002aefc

90006548 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
90006548:	4770      	bx	lr
9000654a:	bf00      	nop

9000654c <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
9000654c:	4b01      	ldr	r3, [pc, #4]	; (90006554 <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
9000654e:	2201      	movs	r2, #1
90006550:	801a      	strh	r2, [r3, #0]
}
90006552:	4770      	bx	lr
90006554:	24000030 	.word	0x24000030

90006558 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
90006558:	4b01      	ldr	r3, [pc, #4]	; (90006560 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
9000655a:	2203      	movs	r2, #3
9000655c:	801a      	strh	r2, [r3, #0]
}
9000655e:	4770      	bx	lr
90006560:	24000030 	.word	0x24000030

90006564 <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
90006564:	4b01      	ldr	r3, [pc, #4]	; (9000656c <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
90006566:	2202      	movs	r2, #2
90006568:	801a      	strh	r2, [r3, #0]
}
9000656a:	4770      	bx	lr
9000656c:	24000030 	.word	0x24000030

90006570 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
90006570:	4b01      	ldr	r3, [pc, #4]	; (90006578 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
90006572:	2200      	movs	r2, #0
90006574:	801a      	strh	r2, [r3, #0]
}
90006576:	4770      	bx	lr
90006578:	24000030 	.word	0x24000030

9000657c <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
9000657c:	4b09      	ldr	r3, [pc, #36]	; (900065a4 <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
9000657e:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
90006582:	4a09      	ldr	r2, [pc, #36]	; (900065a8 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
90006584:	681b      	ldr	r3, [r3, #0]
90006586:	6810      	ldr	r0, [r2, #0]
90006588:	689a      	ldr	r2, [r3, #8]
9000658a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9000658e:	8893      	ldrh	r3, [r2, #4]
90006590:	88d2      	ldrh	r2, [r2, #6]
90006592:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90006596:	fb13 f302 	smulbb	r3, r3, r2
9000659a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
9000659e:	4418      	add	r0, r3
900065a0:	4770      	bx	lr
900065a2:	bf00      	nop
900065a4:	2401f6e0 	.word	0x2401f6e0
900065a8:	24000034 	.word	0x24000034

900065ac <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
900065ac:	4b0a      	ldr	r3, [pc, #40]	; (900065d8 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
900065ae:	f04f 0c46 	mov.w	ip, #70	; 0x46
900065b2:	4a0a      	ldr	r2, [pc, #40]	; (900065dc <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
900065b4:	681b      	ldr	r3, [r3, #0]
900065b6:	6810      	ldr	r0, [r2, #0]
900065b8:	689a      	ldr	r2, [r3, #8]
900065ba:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900065be:	8893      	ldrh	r3, [r2, #4]
900065c0:	88d2      	ldrh	r2, [r2, #6]
900065c2:	fb0c 0001 	mla	r0, ip, r1, r0
900065c6:	fb13 f302 	smulbb	r3, r3, r2
900065ca:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900065ce:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
900065d2:	4418      	add	r0, r3
900065d4:	4770      	bx	lr
900065d6:	bf00      	nop
900065d8:	2401f6e0 	.word	0x2401f6e0
900065dc:	24000034 	.word	0x24000034

900065e0 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
900065e0:	4b03      	ldr	r3, [pc, #12]	; (900065f0 <_ZN21screen_snake_gameViewD1Ev+0x10>)
900065e2:	b510      	push	{r4, lr}
900065e4:	4604      	mov	r4, r0
900065e6:	6003      	str	r3, [r0, #0]
900065e8:	f7fd ffec 	bl	900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>
900065ec:	4620      	mov	r0, r4
900065ee:	bd10      	pop	{r4, pc}
900065f0:	9002af30 	.word	0x9002af30

900065f4 <_ZN21screen_snake_gameViewD0Ev>:
900065f4:	4b06      	ldr	r3, [pc, #24]	; (90006610 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
900065f6:	b510      	push	{r4, lr}
900065f8:	4604      	mov	r4, r0
900065fa:	6003      	str	r3, [r0, #0]
900065fc:	f7fd ffe2 	bl	900045c4 <_ZN25screen_snake_gameViewBaseD1Ev>
90006600:	f44f 7164 	mov.w	r1, #912	; 0x390
90006604:	4620      	mov	r0, r4
90006606:	f020 ff8b 	bl	90027520 <_ZdlPvj>
9000660a:	4620      	mov	r0, r4
9000660c:	bd10      	pop	{r4, pc}
9000660e:	bf00      	nop
90006610:	9002af30 	.word	0x9002af30

90006614 <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90006614:	b510      	push	{r4, lr}
90006616:	4604      	mov	r4, r0
90006618:	f7fe f918 	bl	9000484c <_ZN25screen_snake_gameViewBaseC1Ev>
9000661c:	4b01      	ldr	r3, [pc, #4]	; (90006624 <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
9000661e:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90006620:	6023      	str	r3, [r4, #0]
}
90006622:	bd10      	pop	{r4, pc}
90006624:	9002af30 	.word	0x9002af30

90006628 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006628:	4b0e      	ldr	r3, [pc, #56]	; (90006664 <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
9000662a:	2200      	movs	r2, #0
          touchable(false),
9000662c:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006630:	21ff      	movs	r1, #255	; 0xff
90006632:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90006636:	b410      	push	{r4}
90006638:	4c0b      	ldr	r4, [pc, #44]	; (90006668 <_GLOBAL__sub_I_game_started+0x40>)
9000663a:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
9000663e:	601c      	str	r4, [r3, #0]
90006640:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90006644:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
90006646:	e9c3 2201 	strd	r2, r2, [r3, #4]
9000664a:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
9000664e:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90006652:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006656:	332c      	adds	r3, #44	; 0x2c
90006658:	4283      	cmp	r3, r0
9000665a:	d1ee      	bne.n	9000663a <_GLOBAL__sub_I_game_started+0x12>
}
9000665c:	f85d 4b04 	ldr.w	r4, [sp], #4
90006660:	4770      	bx	lr
90006662:	bf00      	nop
90006664:	240096e0 	.word	0x240096e0
90006668:	9002b6d8 	.word	0x9002b6d8

9000666c <_GLOBAL__sub_D_game_started>:
9000666c:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
9000666e:	4c05      	ldr	r4, [pc, #20]	; (90006684 <_GLOBAL__sub_D_game_started+0x18>)
90006670:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
90006674:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90006678:	681b      	ldr	r3, [r3, #0]
9000667a:	4620      	mov	r0, r4
9000667c:	4798      	blx	r3
9000667e:	42ac      	cmp	r4, r5
90006680:	d1f8      	bne.n	90006674 <_GLOBAL__sub_D_game_started+0x8>
}
90006682:	bd38      	pop	{r3, r4, r5, pc}
90006684:	2401f6e0 	.word	0x2401f6e0

90006688 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
90006688:	f7fd bf9e 	b.w	900045c8 <_ZN25screen_snake_gameViewBase11setupScreenEv>

9000668c <_ZN21screen_snake_gameView16game_snake_startEv>:
{
9000668c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
90006690:	2400      	movs	r4, #0
90006692:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
90006694:	30c4      	adds	r0, #196	; 0xc4
class Drawable
90006696:	4d2c      	ldr	r5, [pc, #176]	; (90006748 <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
        visible = vis;
90006698:	f886 40e9 	strb.w	r4, [r6, #233]	; 0xe9
9000669c:	f010 fea3 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
900066a0:	f506 700a 	add.w	r0, r6, #552	; 0x228
900066a4:	f886 424d 	strb.w	r4, [r6, #589]	; 0x24d
900066a8:	f010 fe9d 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	snake_head.invalidate();
900066ac:	f106 0098 	add.w	r0, r6, #152	; 0x98
900066b0:	f886 40bd 	strb.w	r4, [r6, #189]	; 0xbd
900066b4:	f010 fe97 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
900066b8:	f506 703e 	add.w	r0, r6, #760	; 0x2f8
900066bc:	f886 431d 	strb.w	r4, [r6, #797]	; 0x31d
900066c0:	f010 fe91 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
class Drawable
900066c4:	f44f 7380 	mov.w	r3, #256	; 0x100
	if( head != NULL )
900066c8:	4f20      	ldr	r7, [pc, #128]	; (9000674c <_ZN21screen_snake_gameView16game_snake_startEv+0xc0>)
900066ca:	84ab      	strh	r3, [r5, #36]	; 0x24
class Box : public Widget
900066cc:	23ff      	movs	r3, #255	; 0xff
900066ce:	62ac      	str	r4, [r5, #40]	; 0x28
900066d0:	f885 3026 	strb.w	r3, [r5, #38]	; 0x26
900066d4:	683b      	ldr	r3, [r7, #0]
900066d6:	e9c5 4401 	strd	r4, r4, [r5, #4]
900066da:	e9c5 4403 	strd	r4, r4, [r5, #12]
900066de:	e9c5 4405 	strd	r4, r4, [r5, #20]
900066e2:	e9c5 4407 	strd	r4, r4, [r5, #28]
900066e6:	b343      	cbz	r3, 9000673a <_ZN21screen_snake_gameView16game_snake_startEv+0xae>
		head = (snake_piece*)malloc(sizeof(snake_piece));
900066e8:	2014      	movs	r0, #20
900066ea:	f020 ff6b 	bl	900275c4 <malloc>
900066ee:	4603      	mov	r3, r0
900066f0:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
900066f2:	b310      	cbz	r0, 9000673a <_ZN21screen_snake_gameView16game_snake_startEv+0xae>
        rect.x = x;
900066f4:	4a16      	ldr	r2, [pc, #88]	; (90006750 <_ZN21screen_snake_gameView16game_snake_startEv+0xc4>)
900066f6:	4629      	mov	r1, r5
	head->pixel = &snake_pixels[0];
900066f8:	609d      	str	r5, [r3, #8]
900066fa:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
900066fe:	1d30      	adds	r0, r6, #4
90006700:	e9c5 2301 	strd	r2, r3, [r5, #4]
        color = newColor;
90006704:	4b13      	ldr	r3, [pc, #76]	; (90006754 <_ZN21screen_snake_gameView16game_snake_startEv+0xc8>)
90006706:	62ab      	str	r3, [r5, #40]	; 0x28
90006708:	f00a fa1e 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
9000670c:	683b      	ldr	r3, [r7, #0]
        return parent;
9000670e:	689b      	ldr	r3, [r3, #8]
90006710:	6958      	ldr	r0, [r3, #20]
90006712:	6803      	ldr	r3, [r0, #0]
90006714:	695b      	ldr	r3, [r3, #20]
90006716:	4798      	blx	r3
	head->next = NULL;
90006718:	683b      	ldr	r3, [r7, #0]
	tail = head;
9000671a:	490f      	ldr	r1, [pc, #60]	; (90006758 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
	snake_length = 1;
9000671c:	2201      	movs	r2, #1
	snake_direction = SNAKE_DOWN;
9000671e:	480f      	ldr	r0, [pc, #60]	; (9000675c <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
	head->prev = NULL;
90006720:	e9c3 4400 	strd	r4, r4, [r3]
	head->old_y = 0;
90006724:	e9c3 4403 	strd	r4, r4, [r3, #12]
	tail = head;
90006728:	600b      	str	r3, [r1, #0]
	snake_direction = SNAKE_DOWN;
9000672a:	2403      	movs	r4, #3
	snake_length = 1;
9000672c:	490c      	ldr	r1, [pc, #48]	; (90006760 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
	game_started = true;
9000672e:	4b0d      	ldr	r3, [pc, #52]	; (90006764 <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
	snake_direction = SNAKE_DOWN;
90006730:	8004      	strh	r4, [r0, #0]
	snake_length = 1;
90006732:	600a      	str	r2, [r1, #0]
	game_started = true;
90006734:	701a      	strb	r2, [r3, #0]
}
90006736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		error();
9000673a:	6833      	ldr	r3, [r6, #0]
9000673c:	4630      	mov	r0, r6
9000673e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90006740:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90006744:	4718      	bx	r3
90006746:	bf00      	nop
90006748:	240096e0 	.word	0x240096e0
9000674c:	240096dc 	.word	0x240096dc
90006750:	0014000a 	.word	0x0014000a
90006754:	ff00ff32 	.word	0xff00ff32
90006758:	2401f6e0 	.word	0x2401f6e0
9000675c:	24000030 	.word	0x24000030
90006760:	24000034 	.word	0x24000034
90006764:	240096d8 	.word	0x240096d8

90006768 <_ZN21screen_snake_gameView15handleTickEventEv>:
void screen_snake_gameView::handleTickEvent() {
90006768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
9000676c:	4fbb      	ldr	r7, [pc, #748]	; (90006a5c <_ZN21screen_snake_gameView15handleTickEventEv+0x2f4>)
void screen_snake_gameView::handleTickEvent() {
9000676e:	b083      	sub	sp, #12
90006770:	4681      	mov	r9, r0
	if( game_started )
90006772:	783e      	ldrb	r6, [r7, #0]
90006774:	2e00      	cmp	r6, #0
90006776:	f000 81cb 	beq.w	90006b10 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
		if( ++tick % SNAKE_SPEED == 0 )
9000677a:	4eb9      	ldr	r6, [pc, #740]	; (90006a60 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f8>)
9000677c:	49b9      	ldr	r1, [pc, #740]	; (90006a64 <_ZN21screen_snake_gameView15handleTickEventEv+0x2fc>)
9000677e:	6833      	ldr	r3, [r6, #0]
90006780:	4ab9      	ldr	r2, [pc, #740]	; (90006a68 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90006782:	3301      	adds	r3, #1
90006784:	fb01 2203 	mla	r2, r1, r3, r2
90006788:	6033      	str	r3, [r6, #0]
9000678a:	4bb8      	ldr	r3, [pc, #736]	; (90006a6c <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
9000678c:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90006790:	f240 81bb 	bls.w	90006b0a <_ZN21screen_snake_gameView15handleTickEventEv+0x3a2>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90006794:	f8df a308 	ldr.w	sl, [pc, #776]	; 90006aa0 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>
90006798:	f8da c000 	ldr.w	ip, [sl]
9000679c:	f8dc 5008 	ldr.w	r5, [ip, #8]
        return rect.x;
900067a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900067a4:	b293      	uxth	r3, r2
900067a6:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900067aa:	f240 8209 	bls.w	90006bc0 <_ZN21screen_snake_gameView15handleTickEventEv+0x458>
				game_started = false;
900067ae:	2300      	movs	r3, #0
900067b0:	703b      	strb	r3, [r7, #0]
			snake_piece *snake_part = head->next;
900067b2:	f8dc 3000 	ldr.w	r3, [ip]
			while( snake_part != NULL )
900067b6:	b913      	cbnz	r3, 900067be <_ZN21screen_snake_gameView15handleTickEventEv+0x56>
900067b8:	e00f      	b.n	900067da <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				snake_part = snake_part->next;
900067ba:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
900067bc:	b16b      	cbz	r3, 900067da <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
900067be:	6899      	ldr	r1, [r3, #8]
900067c0:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
900067c4:	4294      	cmp	r4, r2
900067c6:	d1f8      	bne.n	900067ba <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
900067c8:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
900067cc:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900067d0:	4288      	cmp	r0, r1
900067d2:	d1f2      	bne.n	900067ba <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
					game_started = false;
900067d4:	2300      	movs	r3, #0
900067d6:	703b      	strb	r3, [r7, #0]
					tick = 0;
900067d8:	6033      	str	r3, [r6, #0]
900067da:	f9b9 0110 	ldrsh.w	r0, [r9, #272]	; 0x110
900067de:	4629      	mov	r1, r5
900067e0:	4663      	mov	r3, ip
900067e2:	e006      	b.n	900067f2 <_ZN21screen_snake_gameView15handleTickEventEv+0x8a>
				snake_part = snake_part->next;
900067e4:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
900067e6:	2b00      	cmp	r3, #0
900067e8:	f000 80e4 	beq.w	900069b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x24c>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
900067ec:	6899      	ldr	r1, [r3, #8]
900067ee:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
900067f2:	4290      	cmp	r0, r2
900067f4:	d1f6      	bne.n	900067e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
900067f6:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
900067fa:	f9b9 2112 	ldrsh.w	r2, [r9, #274]	; 0x112
900067fe:	4291      	cmp	r1, r2
90006800:	d1f0      	bne.n	900067e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
					snake_length++;
90006802:	4d9b      	ldr	r5, [pc, #620]	; (90006a70 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006804:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
90006808:	682c      	ldr	r4, [r5, #0]
9000680a:	1c63      	adds	r3, r4, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
9000680c:	4293      	cmp	r3, r2
					snake_length++;
9000680e:	602b      	str	r3, [r5, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006810:	f000 81e9 	beq.w	90006be6 <_ZN21screen_snake_gameView15handleTickEventEv+0x47e>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90006814:	2014      	movs	r0, #20
90006816:	f020 fed5 	bl	900275c4 <malloc>
					if( new_piece == NULL ) {
9000681a:	4680      	mov	r8, r0
9000681c:	2800      	cmp	r0, #0
9000681e:	f000 8308 	beq.w	90006e32 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
					snake_pixels[snake_length-1] = Box();
90006822:	222c      	movs	r2, #44	; 0x2c
90006824:	f8df b27c 	ldr.w	fp, [pc, #636]	; 90006aa4 <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
class Drawable
90006828:	2100      	movs	r1, #0
9000682a:	f44f 7380 	mov.w	r3, #256	; 0x100
9000682e:	fb04 f202 	mul.w	r2, r4, r2
90006832:	eb0b 0702 	add.w	r7, fp, r2
90006836:	84bb      	strh	r3, [r7, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
90006838:	6087      	str	r7, [r0, #8]
class Box : public Widget
9000683a:	20ff      	movs	r0, #255	; 0xff
9000683c:	e9c7 1101 	strd	r1, r1, [r7, #4]
90006840:	e9c7 1103 	strd	r1, r1, [r7, #12]
90006844:	e9c7 1105 	strd	r1, r1, [r7, #20]
90006848:	e9c7 1107 	strd	r1, r1, [r7, #28]
        setX(x);
9000684c:	f85b 3002 	ldr.w	r3, [fp, r2]
90006850:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006852:	f887 0026 	strb.w	r0, [r7, #38]	; 0x26
90006856:	f10b 0028 	add.w	r0, fp, #40	; 0x28
9000685a:	5081      	str	r1, [r0, r2]
9000685c:	4a85      	ldr	r2, [pc, #532]	; (90006a74 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
9000685e:	4293      	cmp	r3, r2
90006860:	f040 820a 	bne.w	90006c78 <_ZN21screen_snake_gameView15handleTickEventEv+0x510>
        rect.x = x;
90006864:	80b9      	strh	r1, [r7, #4]
        setY(y);
90006866:	232c      	movs	r3, #44	; 0x2c
90006868:	4983      	ldr	r1, [pc, #524]	; (90006a78 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
9000686a:	fb04 f303 	mul.w	r3, r4, r3
9000686e:	f85b 2003 	ldr.w	r2, [fp, r3]
90006872:	445b      	add	r3, fp
90006874:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006876:	428a      	cmp	r2, r1
90006878:	f040 82bd 	bne.w	90006df6 <_ZN21screen_snake_gameView15handleTickEventEv+0x68e>
        rect.y = y;
9000687c:	2200      	movs	r2, #0
9000687e:	80da      	strh	r2, [r3, #6]
        setWidth(width);
90006880:	222c      	movs	r2, #44	; 0x2c
90006882:	210a      	movs	r1, #10
90006884:	4638      	mov	r0, r7
90006886:	fb04 f202 	mul.w	r2, r4, r2
					tail->next = new_piece;
9000688a:	4c7c      	ldr	r4, [pc, #496]	; (90006a7c <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
9000688c:	f85b 3002 	ldr.w	r3, [fp, r2]
90006890:	9201      	str	r2, [sp, #4]
90006892:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90006894:	4798      	blx	r3
        setHeight(height);
90006896:	9a01      	ldr	r2, [sp, #4]
90006898:	4638      	mov	r0, r7
9000689a:	210a      	movs	r1, #10
9000689c:	f85b 3002 	ldr.w	r3, [fp, r2]
900068a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900068a2:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
900068a4:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
900068a8:	4b75      	ldr	r3, [pc, #468]	; (90006a80 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
900068aa:	f109 0004 	add.w	r0, r9, #4
900068ae:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
900068b0:	2301      	movs	r3, #1
900068b2:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
900068b6:	f00a f947 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
900068ba:	f8d8 3008 	ldr.w	r3, [r8, #8]
900068be:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
900068c0:	6803      	ldr	r3, [r0, #0]
900068c2:	695b      	ldr	r3, [r3, #20]
900068c4:	4798      	blx	r3
					tail->next = new_piece;
900068c6:	6823      	ldr	r3, [r4, #0]
					int food_new_x = pseudo_random(tick) % 480;
900068c8:	f8d9 2000 	ldr.w	r2, [r9]
					tail->next = new_piece;
900068cc:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
900068d0:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
900068d4:	2300      	movs	r3, #0
900068d6:	486b      	ldr	r0, [pc, #428]	; (90006a84 <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
900068d8:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % 480;
900068dc:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
900068de:	f8c4 8000 	str.w	r8, [r4]
					new_piece->old_y = 0;
900068e2:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % 480;
900068e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
900068e8:	4283      	cmp	r3, r0
900068ea:	f040 827e 	bne.w	90006dea <_ZN21screen_snake_gameView15handleTickEventEv+0x682>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
900068ee:	f8d8 6008 	ldr.w	r6, [r8, #8]
900068f2:	6828      	ldr	r0, [r5, #0]
900068f4:	88b3      	ldrh	r3, [r6, #4]
900068f6:	88f6      	ldrh	r6, [r6, #6]
900068f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900068fc:	fb13 f306 	smulbb	r3, r3, r6
90006900:	ebc1 1601 	rsb	r6, r1, r1, lsl #4
90006904:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90006908:	eb00 0046 	add.w	r0, r0, r6, lsl #1
9000690c:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % 480;
9000690e:	4b5e      	ldr	r3, [pc, #376]	; (90006a88 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
					int food_new_y = pseudo_random2(tick) % 272;
90006910:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % 480;
90006912:	fb83 6300 	smull	r6, r3, r3, r0
90006916:	17c6      	asrs	r6, r0, #31
90006918:	4403      	add	r3, r0
9000691a:	ebc6 2623 	rsb	r6, r6, r3, asr #8
9000691e:	4b5b      	ldr	r3, [pc, #364]	; (90006a8c <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
90006920:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
90006924:	429a      	cmp	r2, r3
90006926:	eba0 1646 	sub.w	r6, r0, r6, lsl #5
					int food_new_y = pseudo_random2(tick) % 272;
9000692a:	f040 825b 	bne.w	90006de4 <_ZN21screen_snake_gameView15handleTickEventEv+0x67c>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
9000692e:	6823      	ldr	r3, [r4, #0]
90006930:	6898      	ldr	r0, [r3, #8]
90006932:	682b      	ldr	r3, [r5, #0]
90006934:	8882      	ldrh	r2, [r0, #4]
90006936:	88c0      	ldrh	r0, [r0, #6]
90006938:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000693c:	fb12 f200 	smulbb	r2, r2, r0
90006940:	2046      	movs	r0, #70	; 0x46
90006942:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90006946:	fb00 3301 	mla	r3, r0, r1, r3
9000694a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
9000694e:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % 272;
90006950:	4a4f      	ldr	r2, [pc, #316]	; (90006a90 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
					food_new_x = food_new_x - (food_new_x % 10);
90006952:	4950      	ldr	r1, [pc, #320]	; (90006a94 <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					int food_new_y = pseudo_random2(tick) % 272;
90006954:	fb82 3200 	smull	r3, r2, r2, r0
90006958:	17c3      	asrs	r3, r0, #31
9000695a:	ebc3 13e2 	rsb	r3, r3, r2, asr #7
					food_new_x = food_new_x - (food_new_x % 10);
9000695e:	17f2      	asrs	r2, r6, #31
					int food_new_y = pseudo_random2(tick) % 272;
90006960:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90006964:	eba0 1303 	sub.w	r3, r0, r3, lsl #4
					food_new_x = food_new_x - (food_new_x % 10);
90006968:	fb81 0606 	smull	r0, r6, r1, r6
					food_new_y = food_new_y - (food_new_y % 10);
9000696c:	fb81 0103 	smull	r0, r1, r1, r3
90006970:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90006972:	ebc2 02a6 	rsb	r2, r2, r6, asr #2
					food.invalidate();
90006976:	f509 7086 	add.w	r0, r9, #268	; 0x10c
					food_new_y = food_new_y - (food_new_y % 10);
9000697a:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
9000697e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90006982:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90006986:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90006988:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
9000698a:	f8a9 2110 	strh.w	r2, [r9, #272]	; 0x110
9000698e:	f8a9 3112 	strh.w	r3, [r9, #274]	; 0x112
					food.invalidate();
90006992:	f010 fd28 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90006996:	682b      	ldr	r3, [r5, #0]
90006998:	4a3f      	ldr	r2, [pc, #252]	; (90006a98 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
9000699a:	2120      	movs	r1, #32
9000699c:	f509 7050 	add.w	r0, r9, #832	; 0x340
900069a0:	f012 fd70 	bl	90019484 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
900069a4:	f509 702b 	add.w	r0, r9, #684	; 0x2ac
900069a8:	f010 fd1d 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
900069ac:	f8da c000 	ldr.w	ip, [sl]
900069b0:	f8dc 5008 	ldr.w	r5, [ip, #8]
			if( snake_direction == SNAKE_RIGHT )
900069b4:	4b39      	ldr	r3, [pc, #228]	; (90006a9c <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
900069b6:	f9b3 3000 	ldrsh.w	r3, [r3]
900069ba:	2b00      	cmp	r3, #0
900069bc:	f040 80f2 	bne.w	90006ba4 <_ZN21screen_snake_gameView15handleTickEventEv+0x43c>
        return rect.x;
900069c0:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
900069c4:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
900069c8:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
900069ca:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
900069ce:	330a      	adds	r3, #10
900069d0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 90006a74 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>
900069d4:	b219      	sxth	r1, r3
900069d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
900069d8:	f8cc 4010 	str.w	r4, [ip, #16]
900069dc:	4543      	cmp	r3, r8
900069de:	f040 81fb 	bne.w	90006dd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x670>
        rect.x = x;
900069e2:	80a9      	strh	r1, [r5, #4]
        setY(y);
900069e4:	6b53      	ldr	r3, [r2, #52]	; 0x34
900069e6:	4f24      	ldr	r7, [pc, #144]	; (90006a78 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
900069e8:	42bb      	cmp	r3, r7
900069ea:	f040 81f1 	bne.w	90006dd0 <_ZN21screen_snake_gameView15handleTickEventEv+0x668>
        rect.y = y;
900069ee:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
900069f0:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
900069f4:	689b      	ldr	r3, [r3, #8]
900069f6:	6958      	ldr	r0, [r3, #20]
900069f8:	6803      	ldr	r3, [r0, #0]
900069fa:	695b      	ldr	r3, [r3, #20]
900069fc:	4798      	blx	r3
				snake_piece *piece = head->next;
900069fe:	f8da 3000 	ldr.w	r3, [sl]
90006a02:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006a04:	b97c      	cbnz	r4, 90006a26 <_ZN21screen_snake_gameView15handleTickEventEv+0x2be>
90006a06:	e1eb      	b.n	90006de0 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        setY(y);
90006a08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006a0a:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90006a0c:	42bb      	cmp	r3, r7
90006a0e:	d120      	bne.n	90006a52 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ea>
        return parent;
90006a10:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006a12:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006a16:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006a18:	6803      	ldr	r3, [r0, #0]
90006a1a:	695b      	ldr	r3, [r3, #20]
90006a1c:	4798      	blx	r3
					piece = piece->next;
90006a1e:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006a20:	2c00      	cmp	r4, #0
90006a22:	f000 80d3 	beq.w	90006bcc <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006a26:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006a2a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006a2e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006a32:	60e3      	str	r3, [r4, #12]
        setX(x);
90006a34:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006a36:	6121      	str	r1, [r4, #16]
90006a38:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006a3a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006a3e:	4546      	cmp	r6, r8
90006a40:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006a44:	d0e0      	beq.n	90006a08 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a0>
        setX(x);
90006a46:	4628      	mov	r0, r5
90006a48:	47b0      	blx	r6
        setY(y);
90006a4a:	682b      	ldr	r3, [r5, #0]
90006a4c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006a4e:	42bb      	cmp	r3, r7
90006a50:	d0de      	beq.n	90006a10 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a8>
90006a52:	4649      	mov	r1, r9
90006a54:	4628      	mov	r0, r5
90006a56:	4798      	blx	r3
        return parent;
90006a58:	68a3      	ldr	r3, [r4, #8]
90006a5a:	e7dc      	b.n	90006a16 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
90006a5c:	240096d8 	.word	0x240096d8
90006a60:	240096d4 	.word	0x240096d4
90006a64:	cccccccd 	.word	0xcccccccd
90006a68:	19999998 	.word	0x19999998
90006a6c:	19999999 	.word	0x19999999
90006a70:	24000034 	.word	0x24000034
90006a74:	90002295 	.word	0x90002295
90006a78:	90002299 	.word	0x90002299
90006a7c:	2401f6e0 	.word	0x2401f6e0
90006a80:	ffff8200 	.word	0xffff8200
90006a84:	9000657d 	.word	0x9000657d
90006a88:	88888889 	.word	0x88888889
90006a8c:	900065ad 	.word	0x900065ad
90006a90:	78787879 	.word	0x78787879
90006a94:	66666667 	.word	0x66666667
90006a98:	9002af24 	.word	0x9002af24
90006a9c:	24000030 	.word	0x24000030
90006aa0:	240096dc 	.word	0x240096dc
90006aa4:	240096e0 	.word	0x240096e0
			else if (head != tail ) {
90006aa8:	4c9e      	ldr	r4, [pc, #632]	; (90006d24 <_ZN21screen_snake_gameView15handleTickEventEv+0x5bc>)
90006aaa:	f8da 3000 	ldr.w	r3, [sl]
90006aae:	6820      	ldr	r0, [r4, #0]
90006ab0:	4283      	cmp	r3, r0
90006ab2:	d003      	beq.n	90006abc <_ZN21screen_snake_gameView15handleTickEventEv+0x354>
				free(tail);
90006ab4:	f020 fd8e 	bl	900275d4 <free>
		if( head != NULL ) {
90006ab8:	f8da 0000 	ldr.w	r0, [sl]
90006abc:	b1d0      	cbz	r0, 90006af4 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			tail = head;
90006abe:	6020      	str	r0, [r4, #0]
			head->next = NULL;
90006ac0:	2300      	movs	r3, #0
			head->pixel->setXY(20, 50);
90006ac2:	6884      	ldr	r4, [r0, #8]
			head->next = NULL;
90006ac4:	6003      	str	r3, [r0, #0]
        setX(x);
90006ac6:	6823      	ldr	r3, [r4, #0]
90006ac8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006aca:	4542      	cmp	r2, r8
90006acc:	f040 8082 	bne.w	90006bd4 <_ZN21screen_snake_gameView15handleTickEventEv+0x46c>
        rect.x = x;
90006ad0:	2214      	movs	r2, #20
90006ad2:	80a2      	strh	r2, [r4, #4]
        setY(y);
90006ad4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006ad6:	42bb      	cmp	r3, r7
90006ad8:	f040 8081 	bne.w	90006bde <_ZN21screen_snake_gameView15handleTickEventEv+0x476>
        rect.y = y;
90006adc:	2332      	movs	r3, #50	; 0x32
90006ade:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90006ae0:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006ae4:	689b      	ldr	r3, [r3, #8]
90006ae6:	6958      	ldr	r0, [r3, #20]
90006ae8:	6803      	ldr	r3, [r0, #0]
90006aea:	695b      	ldr	r3, [r3, #20]
90006aec:	4798      	blx	r3
			snake_length = 1;
90006aee:	4b8e      	ldr	r3, [pc, #568]	; (90006d28 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c0>)
90006af0:	2201      	movs	r2, #1
90006af2:	601a      	str	r2, [r3, #0]
        visible = vis;
90006af4:	2401      	movs	r4, #1
		btn_back.invalidate();
90006af6:	f509 700a 	add.w	r0, r9, #552	; 0x228
90006afa:	f889 424d 	strb.w	r4, [r9, #589]	; 0x24d
90006afe:	f010 fc72 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
90006b02:	4b8a      	ldr	r3, [pc, #552]	; (90006d2c <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>)
90006b04:	681a      	ldr	r2, [r3, #0]
90006b06:	2a00      	cmp	r2, #0
90006b08:	dc41      	bgt.n	90006b8e <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
}
90006b0a:	b003      	add	sp, #12
90006b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if( head != NULL ) {
90006b10:	f8df a220 	ldr.w	sl, [pc, #544]	; 90006d34 <_ZN21screen_snake_gameView15handleTickEventEv+0x5cc>
90006b14:	f8da 0000 	ldr.w	r0, [sl]
90006b18:	2800      	cmp	r0, #0
90006b1a:	d0eb      	beq.n	90006af4 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			old = head->next;
90006b1c:	6804      	ldr	r4, [r0, #0]
		while( old != NULL ) {
90006b1e:	f8df 8218 	ldr.w	r8, [pc, #536]	; 90006d38 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90006b22:	4f83      	ldr	r7, [pc, #524]	; (90006d30 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006b24:	2c00      	cmp	r4, #0
90006b26:	f000 8182 	beq.w	90006e2e <_ZN21screen_snake_gameView15handleTickEventEv+0x6c6>
			old->pixel->setXY(-1, -1);
90006b2a:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90006b2c:	f64f 7bff 	movw	fp, #65535	; 0xffff
        setX(x);
90006b30:	682b      	ldr	r3, [r5, #0]
90006b32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006b34:	4542      	cmp	r2, r8
90006b36:	d119      	bne.n	90006b6c <_ZN21screen_snake_gameView15handleTickEventEv+0x404>
        setY(y);
90006b38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006b3a:	f8a5 b004 	strh.w	fp, [r5, #4]
        rect.y = y;
90006b3e:	42bb      	cmp	r3, r7
90006b40:	d11c      	bne.n	90006b7c <_ZN21screen_snake_gameView15handleTickEventEv+0x414>
			old->pixel->setVisible(false);
90006b42:	68a3      	ldr	r3, [r4, #8]
90006b44:	f8a5 b006 	strh.w	fp, [r5, #6]
        return parent;
90006b48:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90006b4a:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90006b4e:	6803      	ldr	r3, [r0, #0]
90006b50:	695b      	ldr	r3, [r3, #20]
90006b52:	4798      	blx	r3
			old = old->next;
90006b54:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90006b56:	2c00      	cmp	r4, #0
90006b58:	d0a6      	beq.n	90006aa8 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
				free(old->prev);
90006b5a:	6860      	ldr	r0, [r4, #4]
90006b5c:	f020 fd3a 	bl	900275d4 <free>
			old->pixel->setXY(-1, -1);
90006b60:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90006b62:	6066      	str	r6, [r4, #4]
        setX(x);
90006b64:	682b      	ldr	r3, [r5, #0]
90006b66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006b68:	4542      	cmp	r2, r8
90006b6a:	d0e5      	beq.n	90006b38 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
90006b6c:	f04f 31ff 	mov.w	r1, #4294967295
90006b70:	4628      	mov	r0, r5
90006b72:	4790      	blx	r2
        setY(y);
90006b74:	682b      	ldr	r3, [r5, #0]
90006b76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006b78:	42bb      	cmp	r3, r7
90006b7a:	d0e2      	beq.n	90006b42 <_ZN21screen_snake_gameView15handleTickEventEv+0x3da>
90006b7c:	4628      	mov	r0, r5
90006b7e:	f04f 31ff 	mov.w	r1, #4294967295
90006b82:	4798      	blx	r3
			old->pixel->setVisible(false);
90006b84:	68a3      	ldr	r3, [r4, #8]
        return parent;
90006b86:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90006b88:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
90006b8c:	e7df      	b.n	90006b4e <_ZN21screen_snake_gameView15handleTickEventEv+0x3e6>
			tick = 0;
90006b8e:	2200      	movs	r2, #0
			lbl_game_over.invalidate();
90006b90:	f509 703e 	add.w	r0, r9, #760	; 0x2f8
        visible = vis;
90006b94:	f889 431d 	strb.w	r4, [r9, #797]	; 0x31d
			tick = 0;
90006b98:	601a      	str	r2, [r3, #0]
}
90006b9a:	b003      	add	sp, #12
90006b9c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_game_over.invalidate();
90006ba0:	f010 bc21 	b.w	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
			else if( snake_direction == SNAKE_LEFT )
90006ba4:	2b02      	cmp	r3, #2
90006ba6:	d06a      	beq.n	90006c7e <_ZN21screen_snake_gameView15handleTickEventEv+0x516>
			else if( snake_direction == SNAKE_UP )
90006ba8:	2b01      	cmp	r3, #1
90006baa:	f000 80c7 	beq.w	90006d3c <_ZN21screen_snake_gameView15handleTickEventEv+0x5d4>
			else if( snake_direction == SNAKE_DOWN )
90006bae:	2b03      	cmp	r3, #3
90006bb0:	d01c      	beq.n	90006bec <_ZN21screen_snake_gameView15handleTickEventEv+0x484>
        return parent;
90006bb2:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90006bb4:	6803      	ldr	r3, [r0, #0]
90006bb6:	695b      	ldr	r3, [r3, #20]
}
90006bb8:	b003      	add	sp, #12
90006bba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
90006bbe:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
90006bc0:	88eb      	ldrh	r3, [r5, #6]
90006bc2:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90006bc6:	f63f adf2 	bhi.w	900067ae <_ZN21screen_snake_gameView15handleTickEventEv+0x46>
90006bca:	e5f2      	b.n	900067b2 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
			head->pixel->getParent()->invalidate();
90006bcc:	f8da 3000 	ldr.w	r3, [sl]
90006bd0:	689d      	ldr	r5, [r3, #8]
90006bd2:	e7ee      	b.n	90006bb2 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
        setX(x);
90006bd4:	2114      	movs	r1, #20
90006bd6:	4620      	mov	r0, r4
90006bd8:	4790      	blx	r2
        setY(y);
90006bda:	6823      	ldr	r3, [r4, #0]
90006bdc:	e77a      	b.n	90006ad4 <_ZN21screen_snake_gameView15handleTickEventEv+0x36c>
90006bde:	2132      	movs	r1, #50	; 0x32
90006be0:	4620      	mov	r0, r4
90006be2:	4798      	blx	r3
90006be4:	e77c      	b.n	90006ae0 <_ZN21screen_snake_gameView15handleTickEventEv+0x378>
						game_started = false;
90006be6:	2300      	movs	r3, #0
90006be8:	703b      	strb	r3, [r7, #0]
90006bea:	e613      	b.n	90006814 <_ZN21screen_snake_gameView15handleTickEventEv+0xac>
        return rect.y;
90006bec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90006bf0:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90006bf4:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
90006bf8:	330a      	adds	r3, #10
90006bfa:	f8df 813c 	ldr.w	r8, [pc, #316]	; 90006d38 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90006bfe:	b21c      	sxth	r4, r3
        setX(x);
90006c00:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90006c02:	f8cc 100c 	str.w	r1, [ip, #12]
90006c06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006c08:	4542      	cmp	r2, r8
90006c0a:	f040 810c 	bne.w	90006e26 <_ZN21screen_snake_gameView15handleTickEventEv+0x6be>
        rect.x = x;
90006c0e:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006c10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006c12:	4f47      	ldr	r7, [pc, #284]	; (90006d30 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006c14:	42bb      	cmp	r3, r7
90006c16:	f040 8102 	bne.w	90006e1e <_ZN21screen_snake_gameView15handleTickEventEv+0x6b6>
        rect.y = y;
90006c1a:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006c1c:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006c20:	689b      	ldr	r3, [r3, #8]
90006c22:	6958      	ldr	r0, [r3, #20]
90006c24:	6803      	ldr	r3, [r0, #0]
90006c26:	695b      	ldr	r3, [r3, #20]
90006c28:	4798      	blx	r3
				snake_piece *piece = head->next;
90006c2a:	f8da 3000 	ldr.w	r3, [sl]
90006c2e:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006c30:	b974      	cbnz	r4, 90006c50 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e8>
90006c32:	e0d5      	b.n	90006de0 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006c34:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006c36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006c38:	42bb      	cmp	r3, r7
90006c3a:	d16d      	bne.n	90006d18 <_ZN21screen_snake_gameView15handleTickEventEv+0x5b0>
        return parent;
90006c3c:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006c3e:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006c42:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006c44:	6803      	ldr	r3, [r0, #0]
90006c46:	695b      	ldr	r3, [r3, #20]
90006c48:	4798      	blx	r3
					piece = piece->next;
90006c4a:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006c4c:	2c00      	cmp	r4, #0
90006c4e:	d0bd      	beq.n	90006bcc <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006c50:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006c54:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006c58:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006c5c:	60e3      	str	r3, [r4, #12]
        setX(x);
90006c5e:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006c60:	6121      	str	r1, [r4, #16]
90006c62:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006c64:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006c68:	4546      	cmp	r6, r8
90006c6a:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006c6e:	d0e1      	beq.n	90006c34 <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        setX(x);
90006c70:	4628      	mov	r0, r5
90006c72:	47b0      	blx	r6
        setY(y);
90006c74:	682b      	ldr	r3, [r5, #0]
90006c76:	e7de      	b.n	90006c36 <_ZN21screen_snake_gameView15handleTickEventEv+0x4ce>
        setX(x);
90006c78:	4638      	mov	r0, r7
90006c7a:	4798      	blx	r3
90006c7c:	e5f3      	b.n	90006866 <_ZN21screen_snake_gameView15handleTickEventEv+0xfe>
90006c7e:	682a      	ldr	r2, [r5, #0]
        return rect.x;
90006c80:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90006c84:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90006d38 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setX(x);
90006c88:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
90006c8a:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
90006c8e:	4546      	cmp	r6, r8
				head->old_x = head->pixel->getX();
90006c90:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90006c94:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
90006c98:	f8cc 4010 	str.w	r4, [ip, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90006c9c:	b219      	sxth	r1, r3
        setX(x);
90006c9e:	f040 80b2 	bne.w	90006e06 <_ZN21screen_snake_gameView15handleTickEventEv+0x69e>
        rect.x = x;
90006ca2:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006ca4:	6b53      	ldr	r3, [r2, #52]	; 0x34
90006ca6:	4f22      	ldr	r7, [pc, #136]	; (90006d30 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006ca8:	42bb      	cmp	r3, r7
90006caa:	f040 80a8 	bne.w	90006dfe <_ZN21screen_snake_gameView15handleTickEventEv+0x696>
        rect.y = y;
90006cae:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006cb0:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006cb4:	689b      	ldr	r3, [r3, #8]
90006cb6:	6958      	ldr	r0, [r3, #20]
90006cb8:	6803      	ldr	r3, [r0, #0]
90006cba:	695b      	ldr	r3, [r3, #20]
90006cbc:	4798      	blx	r3
				snake_piece *piece = head->next;
90006cbe:	f8da 3000 	ldr.w	r3, [sl]
90006cc2:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006cc4:	b97c      	cbnz	r4, 90006ce6 <_ZN21screen_snake_gameView15handleTickEventEv+0x57e>
90006cc6:	e08b      	b.n	90006de0 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006cc8:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006cca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006ccc:	42bb      	cmp	r3, r7
90006cce:	d11e      	bne.n	90006d0e <_ZN21screen_snake_gameView15handleTickEventEv+0x5a6>
        return parent;
90006cd0:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006cd2:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006cd6:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006cd8:	6803      	ldr	r3, [r0, #0]
90006cda:	695b      	ldr	r3, [r3, #20]
90006cdc:	4798      	blx	r3
					piece = piece->next;
90006cde:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006ce0:	2c00      	cmp	r4, #0
90006ce2:	f43f af73 	beq.w	90006bcc <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006ce6:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006cea:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006cee:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006cf2:	60e3      	str	r3, [r4, #12]
        setX(x);
90006cf4:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006cf6:	6121      	str	r1, [r4, #16]
90006cf8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006cfa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006cfe:	4546      	cmp	r6, r8
90006d00:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006d04:	d0e0      	beq.n	90006cc8 <_ZN21screen_snake_gameView15handleTickEventEv+0x560>
        setX(x);
90006d06:	4628      	mov	r0, r5
90006d08:	47b0      	blx	r6
        setY(y);
90006d0a:	682b      	ldr	r3, [r5, #0]
90006d0c:	e7dd      	b.n	90006cca <_ZN21screen_snake_gameView15handleTickEventEv+0x562>
90006d0e:	4649      	mov	r1, r9
90006d10:	4628      	mov	r0, r5
90006d12:	4798      	blx	r3
        return parent;
90006d14:	68a3      	ldr	r3, [r4, #8]
90006d16:	e7de      	b.n	90006cd6 <_ZN21screen_snake_gameView15handleTickEventEv+0x56e>
        setY(y);
90006d18:	4649      	mov	r1, r9
90006d1a:	4628      	mov	r0, r5
90006d1c:	4798      	blx	r3
        return parent;
90006d1e:	68a3      	ldr	r3, [r4, #8]
90006d20:	e78f      	b.n	90006c42 <_ZN21screen_snake_gameView15handleTickEventEv+0x4da>
90006d22:	bf00      	nop
90006d24:	2401f6e0 	.word	0x2401f6e0
90006d28:	24000034 	.word	0x24000034
90006d2c:	240096d4 	.word	0x240096d4
90006d30:	90002299 	.word	0x90002299
90006d34:	240096dc 	.word	0x240096dc
90006d38:	90002295 	.word	0x90002295
        return rect.y;
90006d3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90006d40:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90006d44:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
90006d48:	3b0a      	subs	r3, #10
90006d4a:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 90006e44 <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
90006d4e:	b21c      	sxth	r4, r3
        setX(x);
90006d50:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90006d52:	f8cc 100c 	str.w	r1, [ip, #12]
90006d56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006d58:	4542      	cmp	r2, r8
90006d5a:	d15c      	bne.n	90006e16 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ae>
        rect.x = x;
90006d5c:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006d5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006d60:	4f36      	ldr	r7, [pc, #216]	; (90006e3c <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>)
90006d62:	42bb      	cmp	r3, r7
90006d64:	d153      	bne.n	90006e0e <_ZN21screen_snake_gameView15handleTickEventEv+0x6a6>
        rect.y = y;
90006d66:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006d68:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006d6c:	689b      	ldr	r3, [r3, #8]
90006d6e:	6958      	ldr	r0, [r3, #20]
90006d70:	6803      	ldr	r3, [r0, #0]
90006d72:	695b      	ldr	r3, [r3, #20]
90006d74:	4798      	blx	r3
				snake_piece *piece = head->next;
90006d76:	f8da 3000 	ldr.w	r3, [sl]
90006d7a:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006d7c:	b97c      	cbnz	r4, 90006d9e <_ZN21screen_snake_gameView15handleTickEventEv+0x636>
90006d7e:	e02f      	b.n	90006de0 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90006d80:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006d82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006d84:	42bb      	cmp	r3, r7
90006d86:	d11e      	bne.n	90006dc6 <_ZN21screen_snake_gameView15handleTickEventEv+0x65e>
        return parent;
90006d88:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006d8a:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006d8e:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006d90:	6803      	ldr	r3, [r0, #0]
90006d92:	695b      	ldr	r3, [r3, #20]
90006d94:	4798      	blx	r3
					piece = piece->next;
90006d96:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006d98:	2c00      	cmp	r4, #0
90006d9a:	f43f af17 	beq.w	90006bcc <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006d9e:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006da2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006da6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006daa:	60e3      	str	r3, [r4, #12]
        setX(x);
90006dac:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006dae:	6121      	str	r1, [r4, #16]
90006db0:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006db2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006db6:	4546      	cmp	r6, r8
90006db8:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006dbc:	d0e0      	beq.n	90006d80 <_ZN21screen_snake_gameView15handleTickEventEv+0x618>
        setX(x);
90006dbe:	4628      	mov	r0, r5
90006dc0:	47b0      	blx	r6
        setY(y);
90006dc2:	682b      	ldr	r3, [r5, #0]
90006dc4:	e7dd      	b.n	90006d82 <_ZN21screen_snake_gameView15handleTickEventEv+0x61a>
90006dc6:	4649      	mov	r1, r9
90006dc8:	4628      	mov	r0, r5
90006dca:	4798      	blx	r3
        return parent;
90006dcc:	68a3      	ldr	r3, [r4, #8]
90006dce:	e7de      	b.n	90006d8e <_ZN21screen_snake_gameView15handleTickEventEv+0x626>
        setY(y);
90006dd0:	4621      	mov	r1, r4
90006dd2:	4628      	mov	r0, r5
90006dd4:	4798      	blx	r3
90006dd6:	e60b      	b.n	900069f0 <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
        setX(x);
90006dd8:	4628      	mov	r0, r5
90006dda:	4798      	blx	r3
        setY(y);
90006ddc:	682a      	ldr	r2, [r5, #0]
90006dde:	e601      	b.n	900069e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x27c>
			head->pixel->getParent()->invalidate();
90006de0:	689d      	ldr	r5, [r3, #8]
90006de2:	e6e6      	b.n	90006bb2 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
					int food_new_y = pseudo_random2(tick) % 272;
90006de4:	4648      	mov	r0, r9
90006de6:	4790      	blx	r2
90006de8:	e5b2      	b.n	90006950 <_ZN21screen_snake_gameView15handleTickEventEv+0x1e8>
					int food_new_x = pseudo_random(tick) % 480;
90006dea:	4648      	mov	r0, r9
90006dec:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % 272;
90006dee:	6831      	ldr	r1, [r6, #0]
90006df0:	f8d9 2000 	ldr.w	r2, [r9]
90006df4:	e58b      	b.n	9000690e <_ZN21screen_snake_gameView15handleTickEventEv+0x1a6>
90006df6:	2100      	movs	r1, #0
90006df8:	4638      	mov	r0, r7
90006dfa:	4790      	blx	r2
90006dfc:	e540      	b.n	90006880 <_ZN21screen_snake_gameView15handleTickEventEv+0x118>
90006dfe:	4621      	mov	r1, r4
90006e00:	4628      	mov	r0, r5
90006e02:	4798      	blx	r3
90006e04:	e754      	b.n	90006cb0 <_ZN21screen_snake_gameView15handleTickEventEv+0x548>
        setX(x);
90006e06:	4628      	mov	r0, r5
90006e08:	47b0      	blx	r6
        setY(y);
90006e0a:	682a      	ldr	r2, [r5, #0]
90006e0c:	e74a      	b.n	90006ca4 <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
90006e0e:	4621      	mov	r1, r4
90006e10:	4628      	mov	r0, r5
90006e12:	4798      	blx	r3
90006e14:	e7a8      	b.n	90006d68 <_ZN21screen_snake_gameView15handleTickEventEv+0x600>
        setX(x);
90006e16:	4628      	mov	r0, r5
90006e18:	4790      	blx	r2
        setY(y);
90006e1a:	682b      	ldr	r3, [r5, #0]
90006e1c:	e79f      	b.n	90006d5e <_ZN21screen_snake_gameView15handleTickEventEv+0x5f6>
90006e1e:	4621      	mov	r1, r4
90006e20:	4628      	mov	r0, r5
90006e22:	4798      	blx	r3
90006e24:	e6fa      	b.n	90006c1c <_ZN21screen_snake_gameView15handleTickEventEv+0x4b4>
        setX(x);
90006e26:	4628      	mov	r0, r5
90006e28:	4790      	blx	r2
        setY(y);
90006e2a:	682b      	ldr	r3, [r5, #0]
90006e2c:	e6f0      	b.n	90006c10 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a8>
90006e2e:	4c04      	ldr	r4, [pc, #16]	; (90006e40 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d8>)
90006e30:	e645      	b.n	90006abe <_ZN21screen_snake_gameView15handleTickEventEv+0x356>
						error();
90006e32:	f8d9 3000 	ldr.w	r3, [r9]
90006e36:	4648      	mov	r0, r9
90006e38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90006e3a:	e6bd      	b.n	90006bb8 <_ZN21screen_snake_gameView15handleTickEventEv+0x450>
90006e3c:	90002299 	.word	0x90002299
90006e40:	2401f6e0 	.word	0x2401f6e0
90006e44:	90002295 	.word	0x90002295

90006e48 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90006e48:	b500      	push	{lr}
          touchable(false),
90006e4a:	f44f 7180 	mov.w	r1, #256	; 0x100
90006e4e:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90006e50:	4a0f      	ldr	r2, [pc, #60]	; (90006e90 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
90006e52:	2300      	movs	r3, #0
          touchable(false),
90006e54:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90006e58:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
90006e5c:	490d      	ldr	r1, [pc, #52]	; (90006e94 <_ZN21screen_snake_gameView5errorEv+0x4c>)
90006e5e:	3004      	adds	r0, #4
90006e60:	9201      	str	r2, [sp, #4]
        color = newColor;
90006e62:	4a0d      	ldr	r2, [pc, #52]	; (90006e98 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
90006e64:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90006e68:	920b      	str	r2, [sp, #44]	; 0x2c
90006e6a:	e9cd 3102 	strd	r3, r1, [sp, #8]
90006e6e:	a901      	add	r1, sp, #4
          nextSibling(0),
90006e70:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
90006e74:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90006e78:	e9cd 3304 	strd	r3, r3, [sp, #16]
90006e7c:	f009 fe64 	bl	90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90006e80:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
90006e82:	6803      	ldr	r3, [r0, #0]
90006e84:	695b      	ldr	r3, [r3, #20]
90006e86:	4798      	blx	r3
}
90006e88:	b00d      	add	sp, #52	; 0x34
90006e8a:	f85d fb04 	ldr.w	pc, [sp], #4
90006e8e:	bf00      	nop
90006e90:	9002b6d8 	.word	0x9002b6d8
90006e94:	011001e0 	.word	0x011001e0
90006e98:	ffff0000 	.word	0xffff0000

90006e9c <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
90006e9c:	4770      	bx	lr
90006e9e:	bf00      	nop

90006ea0 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
90006ea0:	3804      	subs	r0, #4
90006ea2:	4770      	bx	lr

90006ea4 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
90006ea4:	4770      	bx	lr
90006ea6:	bf00      	nop

90006ea8 <_ZN30screen_tictactoe_gamePresenterD0Ev>:
90006ea8:	b510      	push	{r4, lr}
90006eaa:	4604      	mov	r4, r0
90006eac:	2110      	movs	r1, #16
90006eae:	f020 fb37 	bl	90027520 <_ZdlPvj>
90006eb2:	4620      	mov	r0, r4
90006eb4:	bd10      	pop	{r4, pc}
90006eb6:	bf00      	nop

90006eb8 <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
90006eb8:	b500      	push	{lr}
90006eba:	3804      	subs	r0, #4
90006ebc:	b083      	sub	sp, #12
90006ebe:	2110      	movs	r1, #16
90006ec0:	9001      	str	r0, [sp, #4]
90006ec2:	f020 fb2d 	bl	90027520 <_ZdlPvj>
90006ec6:	9801      	ldr	r0, [sp, #4]
90006ec8:	b003      	add	sp, #12
90006eca:	f85d fb04 	ldr.w	pc, [sp], #4
90006ece:	bf00      	nop

90006ed0 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
90006ed0:	4a06      	ldr	r2, [pc, #24]	; (90006eec <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
90006ed2:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
90006ed4:	b410      	push	{r4}
90006ed6:	2400      	movs	r4, #0
90006ed8:	6084      	str	r4, [r0, #8]
    : view(v)
90006eda:	f102 0408 	add.w	r4, r2, #8
90006ede:	3220      	adds	r2, #32
90006ee0:	e9c0 4200 	strd	r4, r2, [r0]
}
90006ee4:	f85d 4b04 	ldr.w	r4, [sp], #4
90006ee8:	4770      	bx	lr
90006eea:	bf00      	nop
90006eec:	9002af7c 	.word	0x9002af7c

90006ef0 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90006ef0:	4770      	bx	lr
90006ef2:	bf00      	nop

90006ef4 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90006ef4:	4b22      	ldr	r3, [pc, #136]	; (90006f80 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
90006ef6:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90006ef8:	eb02 0342 	add.w	r3, r2, r2, lsl #1
		symbol = 'O';
90006efc:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int y, int x) {
90006efe:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90006f00:	4d20      	ldr	r5, [pc, #128]	; (90006f84 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
90006f02:	bf14      	ite	ne
90006f04:	2458      	movne	r4, #88	; 0x58
90006f06:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90006f08:	f815 c003 	ldrb.w	ip, [r5, r3]
90006f0c:	442b      	add	r3, r5
90006f0e:	45a4      	cmp	ip, r4
90006f10:	d109      	bne.n	90006f26 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90006f12:	f893 e001 	ldrb.w	lr, [r3, #1]
90006f16:	45e6      	cmp	lr, ip
90006f18:	d105      	bne.n	90006f26 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90006f1a:	789b      	ldrb	r3, [r3, #2]
90006f1c:	4573      	cmp	r3, lr
90006f1e:	d102      	bne.n	90006f26 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90006f20:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
90006f24:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
90006f26:	5c6b      	ldrb	r3, [r5, r1]
90006f28:	42a3      	cmp	r3, r4
90006f2a:	d107      	bne.n	90006f3c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90006f2c:	186b      	adds	r3, r5, r1
90006f2e:	f893 c003 	ldrb.w	ip, [r3, #3]
90006f32:	45a4      	cmp	ip, r4
90006f34:	d102      	bne.n	90006f3c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90006f36:	799b      	ldrb	r3, [r3, #6]
90006f38:	42a3      	cmp	r3, r4
90006f3a:	d0f1      	beq.n	90006f20 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90006f3c:	428a      	cmp	r2, r1
90006f3e:	d00a      	beq.n	90006f56 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90006f40:	4411      	add	r1, r2
90006f42:	2902      	cmp	r1, #2
90006f44:	d011      	beq.n	90006f6a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
90006f46:	4b10      	ldr	r3, [pc, #64]	; (90006f88 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
90006f48:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90006f4c:	2b09      	cmp	r3, #9
90006f4e:	bf14      	ite	ne
90006f50:	2000      	movne	r0, #0
90006f52:	2003      	moveq	r0, #3
}
90006f54:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
90006f56:	782b      	ldrb	r3, [r5, #0]
90006f58:	42a3      	cmp	r3, r4
90006f5a:	d1f1      	bne.n	90006f40 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90006f5c:	792b      	ldrb	r3, [r5, #4]
90006f5e:	42a3      	cmp	r3, r4
90006f60:	d1ee      	bne.n	90006f40 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90006f62:	7a2b      	ldrb	r3, [r5, #8]
90006f64:	42a3      	cmp	r3, r4
90006f66:	d0db      	beq.n	90006f20 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90006f68:	e7ea      	b.n	90006f40 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
90006f6a:	78ab      	ldrb	r3, [r5, #2]
90006f6c:	42a3      	cmp	r3, r4
90006f6e:	d1ea      	bne.n	90006f46 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90006f70:	792b      	ldrb	r3, [r5, #4]
90006f72:	42a3      	cmp	r3, r4
90006f74:	d1e7      	bne.n	90006f46 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90006f76:	79ab      	ldrb	r3, [r5, #6]
90006f78:	42a3      	cmp	r3, r4
90006f7a:	d0d1      	beq.n	90006f20 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90006f7c:	e7e3      	b.n	90006f46 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90006f7e:	bf00      	nop
90006f80:	24000038 	.word	0x24000038
90006f84:	2401f6e4 	.word	0x2401f6e4
90006f88:	2401f6f0 	.word	0x2401f6f0

90006f8c <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
90006f8c:	4b03      	ldr	r3, [pc, #12]	; (90006f9c <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
90006f8e:	b510      	push	{r4, lr}
90006f90:	4604      	mov	r4, r0
90006f92:	6003      	str	r3, [r0, #0]
90006f94:	f7fd ffec 	bl	90004f70 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90006f98:	4620      	mov	r0, r4
90006f9a:	bd10      	pop	{r4, pc}
90006f9c:	9002afac 	.word	0x9002afac

90006fa0 <_ZN25screen_tictactoe_gameViewD0Ev>:
90006fa0:	4b06      	ldr	r3, [pc, #24]	; (90006fbc <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
90006fa2:	b510      	push	{r4, lr}
90006fa4:	4604      	mov	r4, r0
90006fa6:	6003      	str	r3, [r0, #0]
90006fa8:	f7fd ffe2 	bl	90004f70 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90006fac:	f242 6128 	movw	r1, #9768	; 0x2628
90006fb0:	4620      	mov	r0, r4
90006fb2:	f020 fab5 	bl	90027520 <_ZdlPvj>
90006fb6:	4620      	mov	r0, r4
90006fb8:	bd10      	pop	{r4, pc}
90006fba:	bf00      	nop
90006fbc:	9002afac 	.word	0x9002afac

90006fc0 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90006fc0:	b510      	push	{r4, lr}
90006fc2:	4604      	mov	r4, r0
90006fc4:	f7fe f8a4 	bl	90005110 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
90006fc8:	4b05      	ldr	r3, [pc, #20]	; (90006fe0 <_ZN25screen_tictactoe_gameViewC1Ev+0x20>)
90006fca:	2200      	movs	r2, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
90006fcc:	4805      	ldr	r0, [pc, #20]	; (90006fe4 <_ZN25screen_tictactoe_gameViewC1Ev+0x24>)
	turn = 1;
90006fce:	4906      	ldr	r1, [pc, #24]	; (90006fe8 <_ZN25screen_tictactoe_gameViewC1Ev+0x28>)
			board[i][j] = 0;
90006fd0:	721a      	strb	r2, [r3, #8]
screen_tictactoe_gameView::screen_tictactoe_gameView()
90006fd2:	6020      	str	r0, [r4, #0]
}
90006fd4:	4620      	mov	r0, r4
			board[i][j] = 0;
90006fd6:	e9c3 2200 	strd	r2, r2, [r3]
	turn = 1;
90006fda:	2301      	movs	r3, #1
90006fdc:	700b      	strb	r3, [r1, #0]
}
90006fde:	bd10      	pop	{r4, pc}
90006fe0:	2401f6e4 	.word	0x2401f6e4
90006fe4:	9002afac 	.word	0x9002afac
90006fe8:	24000038 	.word	0x24000038

90006fec <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
90006fec:	f7fd bf70 	b.w	90004ed0 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

90006ff0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90006ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][0] != 0 ) {
90006ff2:	4d2a      	ldr	r5, [pc, #168]	; (9000709c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xac>)
90006ff4:	782b      	ldrb	r3, [r5, #0]
90006ff6:	b35b      	cbz	r3, 90007050 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x60>
		if( turn ) {
90006ff8:	4e29      	ldr	r6, [pc, #164]	; (900070a0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb0>)
90006ffa:	4604      	mov	r4, r0
        visible = vis;
90006ffc:	2201      	movs	r2, #1
90006ffe:	7833      	ldrb	r3, [r6, #0]
90007000:	bb3b      	cbnz	r3, 90007052 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
			board[0][0] = 'O';
90007002:	234f      	movs	r3, #79	; 0x4f
90007004:	f880 2705 	strb.w	r2, [r0, #1797]	; 0x705
			pos1_circle.invalidate();
90007008:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
9000700c:	702b      	strb	r3, [r5, #0]
			pos1_circle.invalidate();
9000700e:	f010 f9ea 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007012:	4a24      	ldr	r2, [pc, #144]	; (900070a4 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb4>)
90007014:	8813      	ldrh	r3, [r2, #0]
90007016:	3301      	adds	r3, #1
90007018:	b21b      	sxth	r3, r3
9000701a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
9000701c:	6822      	ldr	r2, [r4, #0]
9000701e:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007020:	4a21      	ldr	r2, [pc, #132]	; (900070a8 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb8>)
90007022:	4297      	cmp	r7, r2
90007024:	d11e      	bne.n	90007064 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x74>
	if(turn)
90007026:	7830      	ldrb	r0, [r6, #0]
        if(board[x][i] != symbol)
90007028:	782a      	ldrb	r2, [r5, #0]
		symbol = 'O';
9000702a:	2800      	cmp	r0, #0
9000702c:	bf14      	ite	ne
9000702e:	2458      	movne	r4, #88	; 0x58
90007030:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007032:	42a2      	cmp	r2, r4
90007034:	d12d      	bne.n	90007092 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa2>
90007036:	7869      	ldrb	r1, [r5, #1]
90007038:	4291      	cmp	r1, r2
9000703a:	d11e      	bne.n	9000707a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8a>
9000703c:	78aa      	ldrb	r2, [r5, #2]
9000703e:	428a      	cmp	r2, r1
90007040:	d11b      	bne.n	9000707a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8a>
                if( turn )
90007042:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007046:	4a19      	ldr	r2, [pc, #100]	; (900070ac <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
90007048:	2101      	movs	r1, #1
			result = temp_result;
9000704a:	4b19      	ldr	r3, [pc, #100]	; (900070b0 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
			game_over = true;
9000704c:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000704e:	8018      	strh	r0, [r3, #0]
}
90007050:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][0] = 'X';
90007052:	2358      	movs	r3, #88	; 0x58
90007054:	f880 2731 	strb.w	r2, [r0, #1841]	; 0x731
			pos1_cross.invalidate();
90007058:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
9000705c:	702b      	strb	r3, [r5, #0]
			pos1_cross.invalidate();
9000705e:	f010 f9c2 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007062:	e7d6      	b.n	90007012 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x22>
		short temp_result = is_game_over(0, 0);
90007064:	2200      	movs	r2, #0
90007066:	4620      	mov	r0, r4
90007068:	4611      	mov	r1, r2
9000706a:	47b8      	blx	r7
		if( temp_result != 0 ) {
9000706c:	2800      	cmp	r0, #0
9000706e:	d1ea      	bne.n	90007046 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x56>
		turn = !turn;
90007070:	7833      	ldrb	r3, [r6, #0]
90007072:	f083 0301 	eor.w	r3, r3, #1
90007076:	7033      	strb	r3, [r6, #0]
}
90007078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
9000707a:	78ea      	ldrb	r2, [r5, #3]
9000707c:	42a2      	cmp	r2, r4
9000707e:	d102      	bne.n	90007086 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x96>
90007080:	79aa      	ldrb	r2, [r5, #6]
90007082:	42a2      	cmp	r2, r4
90007084:	d0dd      	beq.n	90007042 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x52>
            if(board[i][i] != symbol)
90007086:	792a      	ldrb	r2, [r5, #4]
90007088:	42a2      	cmp	r2, r4
9000708a:	d102      	bne.n	90007092 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa2>
9000708c:	7a2a      	ldrb	r2, [r5, #8]
9000708e:	42a2      	cmp	r2, r4
90007090:	d0d7      	beq.n	90007042 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x52>
	if( turn_number == 9 )
90007092:	2b09      	cmp	r3, #9
90007094:	d1ec      	bne.n	90007070 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x80>
		return 3;
90007096:	2003      	movs	r0, #3
90007098:	e7d5      	b.n	90007046 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x56>
9000709a:	bf00      	nop
9000709c:	2401f6e4 	.word	0x2401f6e4
900070a0:	24000038 	.word	0x24000038
900070a4:	2401f6f0 	.word	0x2401f6f0
900070a8:	90006ef5 	.word	0x90006ef5
900070ac:	2401f6ed 	.word	0x2401f6ed
900070b0:	2401f6ee 	.word	0x2401f6ee

900070b4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
900070b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][1] != 0 ) {
900070b6:	4e27      	ldr	r6, [pc, #156]	; (90007154 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>)
900070b8:	7873      	ldrb	r3, [r6, #1]
900070ba:	b35b      	cbz	r3, 90007114 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x60>
		if( turn ) {
900070bc:	4d26      	ldr	r5, [pc, #152]	; (90007158 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa4>)
900070be:	4604      	mov	r4, r0
900070c0:	2201      	movs	r2, #1
900070c2:	782b      	ldrb	r3, [r5, #0]
900070c4:	bb3b      	cbnz	r3, 90007116 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
			board[0][1] = 'O';
900070c6:	234f      	movs	r3, #79	; 0x4f
900070c8:	f880 2789 	strb.w	r2, [r0, #1929]	; 0x789
			pos2_circle.invalidate();
900070cc:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
900070d0:	7073      	strb	r3, [r6, #1]
			pos2_circle.invalidate();
900070d2:	f010 f988 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900070d6:	4a21      	ldr	r2, [pc, #132]	; (9000715c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa8>)
900070d8:	8813      	ldrh	r3, [r2, #0]
900070da:	3301      	adds	r3, #1
900070dc:	b21b      	sxth	r3, r3
900070de:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
900070e0:	6822      	ldr	r2, [r4, #0]
900070e2:	6d17      	ldr	r7, [r2, #80]	; 0x50
900070e4:	4a1e      	ldr	r2, [pc, #120]	; (90007160 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>)
900070e6:	4297      	cmp	r7, r2
900070e8:	d11e      	bne.n	90007128 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x74>
	if(turn)
900070ea:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900070ec:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
900070ee:	2800      	cmp	r0, #0
900070f0:	bf14      	ite	ne
900070f2:	2458      	movne	r4, #88	; 0x58
900070f4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900070f6:	42a2      	cmp	r2, r4
900070f8:	d127      	bne.n	9000714a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x96>
900070fa:	7931      	ldrb	r1, [r6, #4]
900070fc:	4291      	cmp	r1, r2
900070fe:	d11e      	bne.n	9000713e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x8a>
90007100:	7972      	ldrb	r2, [r6, #5]
90007102:	428a      	cmp	r2, r1
90007104:	d11b      	bne.n	9000713e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x8a>
            if( turn )
90007106:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000710a:	4a16      	ldr	r2, [pc, #88]	; (90007164 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb0>)
9000710c:	2101      	movs	r1, #1
			result = temp_result;
9000710e:	4b16      	ldr	r3, [pc, #88]	; (90007168 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
			game_over = true;
90007110:	7011      	strb	r1, [r2, #0]
			result = temp_result;
90007112:	8018      	strh	r0, [r3, #0]
}
90007114:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][1] = 'X';
90007116:	2358      	movs	r3, #88	; 0x58
90007118:	f880 275d 	strb.w	r2, [r0, #1885]	; 0x75d
			pos2_cross.invalidate();
9000711c:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90007120:	7073      	strb	r3, [r6, #1]
			pos2_cross.invalidate();
90007122:	f010 f960 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007126:	e7d6      	b.n	900070d6 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x22>
		short temp_result = is_game_over(0, 1);
90007128:	2201      	movs	r2, #1
9000712a:	2100      	movs	r1, #0
9000712c:	4620      	mov	r0, r4
9000712e:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007130:	2800      	cmp	r0, #0
90007132:	d1ea      	bne.n	9000710a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x56>
		turn = !turn;
90007134:	7828      	ldrb	r0, [r5, #0]
90007136:	f080 0001 	eor.w	r0, r0, #1
9000713a:	7028      	strb	r0, [r5, #0]
}
9000713c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
9000713e:	7832      	ldrb	r2, [r6, #0]
90007140:	42a2      	cmp	r2, r4
90007142:	d102      	bne.n	9000714a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x96>
90007144:	79b2      	ldrb	r2, [r6, #6]
90007146:	42a2      	cmp	r2, r4
90007148:	d0dd      	beq.n	90007106 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x52>
	if( turn_number == 9 )
9000714a:	2b09      	cmp	r3, #9
9000714c:	d1f3      	bne.n	90007136 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
		return 3;
9000714e:	2003      	movs	r0, #3
90007150:	e7db      	b.n	9000710a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x56>
90007152:	bf00      	nop
90007154:	2401f6e4 	.word	0x2401f6e4
90007158:	24000038 	.word	0x24000038
9000715c:	2401f6f0 	.word	0x2401f6f0
90007160:	90006ef5 	.word	0x90006ef5
90007164:	2401f6ed 	.word	0x2401f6ed
90007168:	2401f6ee 	.word	0x2401f6ee

9000716c <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
9000716c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[0][2] != 0 ) {
9000716e:	4e2a      	ldr	r6, [pc, #168]	; (90007218 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>)
90007170:	78b3      	ldrb	r3, [r6, #2]
90007172:	b35b      	cbz	r3, 900071cc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x60>
		if( turn ) {
90007174:	4d29      	ldr	r5, [pc, #164]	; (9000721c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb0>)
90007176:	4604      	mov	r4, r0
90007178:	2201      	movs	r2, #1
9000717a:	782b      	ldrb	r3, [r5, #0]
9000717c:	bb3b      	cbnz	r3, 900071ce <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
			board[0][2] = 'O';
9000717e:	234f      	movs	r3, #79	; 0x4f
90007180:	f880 27e1 	strb.w	r2, [r0, #2017]	; 0x7e1
			pos3_circle.invalidate();
90007184:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
90007188:	70b3      	strb	r3, [r6, #2]
			pos3_circle.invalidate();
9000718a:	f010 f92c 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000718e:	4a24      	ldr	r2, [pc, #144]	; (90007220 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb4>)
90007190:	8813      	ldrh	r3, [r2, #0]
90007192:	3301      	adds	r3, #1
90007194:	b21b      	sxth	r3, r3
90007196:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
90007198:	6822      	ldr	r2, [r4, #0]
9000719a:	6d17      	ldr	r7, [r2, #80]	; 0x50
9000719c:	4a21      	ldr	r2, [pc, #132]	; (90007224 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>)
9000719e:	4297      	cmp	r7, r2
900071a0:	d11e      	bne.n	900071e0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x74>
	if(turn)
900071a2:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900071a4:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
900071a6:	2800      	cmp	r0, #0
900071a8:	bf14      	ite	ne
900071aa:	2258      	movne	r2, #88	; 0x58
900071ac:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
900071ae:	42a2      	cmp	r2, r4
900071b0:	d12d      	bne.n	9000720e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xa2>
900071b2:	79f1      	ldrb	r1, [r6, #7]
900071b4:	4291      	cmp	r1, r2
900071b6:	d11e      	bne.n	900071f6 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x8a>
900071b8:	7a37      	ldrb	r7, [r6, #8]
900071ba:	428f      	cmp	r7, r1
900071bc:	d11b      	bne.n	900071f6 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x8a>
                if( turn )
900071be:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900071c2:	4a19      	ldr	r2, [pc, #100]	; (90007228 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xbc>)
900071c4:	2101      	movs	r1, #1
			result = temp_result;
900071c6:	4b19      	ldr	r3, [pc, #100]	; (9000722c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
			game_over = true;
900071c8:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900071ca:	8018      	strh	r0, [r3, #0]
}
900071cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[0][2] = 'X';
900071ce:	2358      	movs	r3, #88	; 0x58
900071d0:	f880 27b5 	strb.w	r2, [r0, #1973]	; 0x7b5
			pos3_cross.invalidate();
900071d4:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
900071d8:	70b3      	strb	r3, [r6, #2]
			pos3_cross.invalidate();
900071da:	f010 f904 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
900071de:	e7d6      	b.n	9000718e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x22>
		short temp_result = is_game_over(0, 2);
900071e0:	2202      	movs	r2, #2
900071e2:	2100      	movs	r1, #0
900071e4:	4620      	mov	r0, r4
900071e6:	47b8      	blx	r7
		if( temp_result != 0 ) {
900071e8:	2800      	cmp	r0, #0
900071ea:	d1ea      	bne.n	900071c2 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x56>
		turn = !turn;
900071ec:	7828      	ldrb	r0, [r5, #0]
900071ee:	f080 0001 	eor.w	r0, r0, #1
900071f2:	7028      	strb	r0, [r5, #0]
}
900071f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900071f6:	7831      	ldrb	r1, [r6, #0]
900071f8:	42a1      	cmp	r1, r4
900071fa:	d102      	bne.n	90007202 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x96>
900071fc:	78f1      	ldrb	r1, [r6, #3]
900071fe:	42a1      	cmp	r1, r4
90007200:	d0dd      	beq.n	900071be <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
90007202:	78b1      	ldrb	r1, [r6, #2]
90007204:	4291      	cmp	r1, r2
90007206:	d102      	bne.n	9000720e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xa2>
90007208:	7931      	ldrb	r1, [r6, #4]
9000720a:	4291      	cmp	r1, r2
9000720c:	d0d7      	beq.n	900071be <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x52>
	if( turn_number == 9 )
9000720e:	2b09      	cmp	r3, #9
90007210:	d1ed      	bne.n	900071ee <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
		return 3;
90007212:	2003      	movs	r0, #3
90007214:	e7d5      	b.n	900071c2 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x56>
90007216:	bf00      	nop
90007218:	2401f6e4 	.word	0x2401f6e4
9000721c:	24000038 	.word	0x24000038
90007220:	2401f6f0 	.word	0x2401f6f0
90007224:	90006ef5 	.word	0x90006ef5
90007228:	2401f6ed 	.word	0x2401f6ed
9000722c:	2401f6ee 	.word	0x2401f6ee

90007230 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90007230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][0] != 0 ) {
90007232:	4e28      	ldr	r6, [pc, #160]	; (900072d4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa4>)
90007234:	78f3      	ldrb	r3, [r6, #3]
90007236:	b35b      	cbz	r3, 90007290 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x60>
		if( turn ) {
90007238:	4d27      	ldr	r5, [pc, #156]	; (900072d8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa8>)
9000723a:	4604      	mov	r4, r0
9000723c:	2201      	movs	r2, #1
9000723e:	782b      	ldrb	r3, [r5, #0]
90007240:	bb3b      	cbnz	r3, 90007292 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
			board[1][0] = 'O';
90007242:	234f      	movs	r3, #79	; 0x4f
90007244:	f880 2839 	strb.w	r2, [r0, #2105]	; 0x839
			pos4_circle.invalidate();
90007248:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
9000724c:	70f3      	strb	r3, [r6, #3]
			pos4_circle.invalidate();
9000724e:	f010 f8ca 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007252:	4a22      	ldr	r2, [pc, #136]	; (900072dc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xac>)
90007254:	8813      	ldrh	r3, [r2, #0]
90007256:	3301      	adds	r3, #1
90007258:	b21b      	sxth	r3, r3
9000725a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
9000725c:	6822      	ldr	r2, [r4, #0]
9000725e:	6d17      	ldr	r7, [r2, #80]	; 0x50
90007260:	4a1f      	ldr	r2, [pc, #124]	; (900072e0 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
90007262:	4297      	cmp	r7, r2
90007264:	d11e      	bne.n	900072a4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x74>
	if(turn)
90007266:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
90007268:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
9000726a:	2800      	cmp	r0, #0
9000726c:	bf14      	ite	ne
9000726e:	2458      	movne	r4, #88	; 0x58
90007270:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007272:	42a2      	cmp	r2, r4
90007274:	d121      	bne.n	900072ba <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x8a>
90007276:	7871      	ldrb	r1, [r6, #1]
90007278:	4291      	cmp	r1, r2
9000727a:	d127      	bne.n	900072cc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
9000727c:	78b2      	ldrb	r2, [r6, #2]
9000727e:	428a      	cmp	r2, r1
90007280:	d11e      	bne.n	900072c0 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
            if( turn )
90007282:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007286:	4a17      	ldr	r2, [pc, #92]	; (900072e4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90007288:	2101      	movs	r1, #1
			result = temp_result;
9000728a:	4b17      	ldr	r3, [pc, #92]	; (900072e8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
			game_over = true;
9000728c:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000728e:	8018      	strh	r0, [r3, #0]
}
90007290:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][0] = 'X';
90007292:	2358      	movs	r3, #88	; 0x58
90007294:	f880 280d 	strb.w	r2, [r0, #2061]	; 0x80d
			pos4_cross.invalidate();
90007298:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
9000729c:	70f3      	strb	r3, [r6, #3]
			pos4_cross.invalidate();
9000729e:	f010 f8a2 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
900072a2:	e7d6      	b.n	90007252 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x22>
		short temp_result = is_game_over(1, 0);
900072a4:	2200      	movs	r2, #0
900072a6:	2101      	movs	r1, #1
900072a8:	4620      	mov	r0, r4
900072aa:	47b8      	blx	r7
		if( temp_result != 0 ) {
900072ac:	2800      	cmp	r0, #0
900072ae:	d1ea      	bne.n	90007286 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x56>
		turn = !turn;
900072b0:	7828      	ldrb	r0, [r5, #0]
900072b2:	f080 0001 	eor.w	r0, r0, #1
900072b6:	7028      	strb	r0, [r5, #0]
}
900072b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900072ba:	7872      	ldrb	r2, [r6, #1]
900072bc:	42a2      	cmp	r2, r4
900072be:	d105      	bne.n	900072cc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
900072c0:	7932      	ldrb	r2, [r6, #4]
900072c2:	42a2      	cmp	r2, r4
900072c4:	d102      	bne.n	900072cc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9c>
900072c6:	79f2      	ldrb	r2, [r6, #7]
900072c8:	42a2      	cmp	r2, r4
900072ca:	d0da      	beq.n	90007282 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x52>
	if( turn_number == 9 )
900072cc:	2b09      	cmp	r3, #9
900072ce:	d1f0      	bne.n	900072b2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
		return 3;
900072d0:	2003      	movs	r0, #3
900072d2:	e7d8      	b.n	90007286 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x56>
900072d4:	2401f6e4 	.word	0x2401f6e4
900072d8:	24000038 	.word	0x24000038
900072dc:	2401f6f0 	.word	0x2401f6f0
900072e0:	90006ef5 	.word	0x90006ef5
900072e4:	2401f6ed 	.word	0x2401f6ed
900072e8:	2401f6ee 	.word	0x2401f6ee

900072ec <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
900072ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][1] != 0 ) {
900072ee:	4d39      	ldr	r5, [pc, #228]	; (900073d4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>)
900072f0:	792b      	ldrb	r3, [r5, #4]
900072f2:	b35b      	cbz	r3, 9000734c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x60>
		if( turn ) {
900072f4:	4e38      	ldr	r6, [pc, #224]	; (900073d8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xec>)
900072f6:	4604      	mov	r4, r0
900072f8:	2201      	movs	r2, #1
900072fa:	7833      	ldrb	r3, [r6, #0]
900072fc:	bb3b      	cbnz	r3, 9000734e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
			board[1][1] = 'O';
900072fe:	234f      	movs	r3, #79	; 0x4f
90007300:	f880 2891 	strb.w	r2, [r0, #2193]	; 0x891
			pos5_circle.invalidate();
90007304:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90007308:	712b      	strb	r3, [r5, #4]
			pos5_circle.invalidate();
9000730a:	f010 f86c 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000730e:	4a33      	ldr	r2, [pc, #204]	; (900073dc <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf0>)
90007310:	8813      	ldrh	r3, [r2, #0]
90007312:	3301      	adds	r3, #1
90007314:	b21b      	sxth	r3, r3
90007316:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90007318:	6822      	ldr	r2, [r4, #0]
9000731a:	6d17      	ldr	r7, [r2, #80]	; 0x50
9000731c:	4a30      	ldr	r2, [pc, #192]	; (900073e0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf4>)
9000731e:	4297      	cmp	r7, r2
90007320:	d11e      	bne.n	90007360 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x74>
	if(turn)
90007322:	7832      	ldrb	r2, [r6, #0]
        if(board[x][i] != symbol)
90007324:	78e9      	ldrb	r1, [r5, #3]
		symbol = 'O';
90007326:	2a00      	cmp	r2, #0
90007328:	bf14      	ite	ne
9000732a:	2458      	movne	r4, #88	; 0x58
9000732c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000732e:	42a1      	cmp	r1, r4
90007330:	d121      	bne.n	90007376 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8a>
90007332:	7928      	ldrb	r0, [r5, #4]
90007334:	4288      	cmp	r0, r1
90007336:	d11e      	bne.n	90007376 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8a>
90007338:	7969      	ldrb	r1, [r5, #5]
9000733a:	4281      	cmp	r1, r0
9000733c:	d134      	bne.n	900073a8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbc>
                if( turn )
9000733e:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
90007342:	4a28      	ldr	r2, [pc, #160]	; (900073e4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90007344:	2101      	movs	r1, #1
			result = temp_result;
90007346:	4b28      	ldr	r3, [pc, #160]	; (900073e8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
			game_over = true;
90007348:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000734a:	8018      	strh	r0, [r3, #0]
}
9000734c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][1] = 'X';
9000734e:	2358      	movs	r3, #88	; 0x58
90007350:	f880 2865 	strb.w	r2, [r0, #2149]	; 0x865
			pos5_cross.invalidate();
90007354:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
90007358:	712b      	strb	r3, [r5, #4]
			pos5_cross.invalidate();
9000735a:	f010 f844 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000735e:	e7d6      	b.n	9000730e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x22>
		short temp_result = is_game_over(1, 1);
90007360:	2201      	movs	r2, #1
90007362:	4620      	mov	r0, r4
90007364:	4611      	mov	r1, r2
90007366:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007368:	2800      	cmp	r0, #0
9000736a:	d1ea      	bne.n	90007342 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x56>
		turn = !turn;
9000736c:	7833      	ldrb	r3, [r6, #0]
9000736e:	f083 0301 	eor.w	r3, r3, #1
90007372:	7033      	strb	r3, [r6, #0]
}
90007374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
90007376:	7869      	ldrb	r1, [r5, #1]
90007378:	42a1      	cmp	r1, r4
9000737a:	d123      	bne.n	900073c4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd8>
9000737c:	7929      	ldrb	r1, [r5, #4]
9000737e:	42a1      	cmp	r1, r4
90007380:	d116      	bne.n	900073b0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90007382:	79e9      	ldrb	r1, [r5, #7]
90007384:	42a1      	cmp	r1, r4
90007386:	d0da      	beq.n	9000733e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
            if(board[i][i] != symbol)
90007388:	7829      	ldrb	r1, [r5, #0]
9000738a:	42a1      	cmp	r1, r4
9000738c:	d113      	bne.n	900073b6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xca>
9000738e:	7a29      	ldrb	r1, [r5, #8]
90007390:	42a1      	cmp	r1, r4
90007392:	d0d4      	beq.n	9000733e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
90007394:	78a9      	ldrb	r1, [r5, #2]
90007396:	42a1      	cmp	r1, r4
90007398:	d102      	bne.n	900073a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
9000739a:	79a9      	ldrb	r1, [r5, #6]
9000739c:	42a1      	cmp	r1, r4
9000739e:	d0ce      	beq.n	9000733e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x52>
	if( turn_number == 9 )
900073a0:	2b09      	cmp	r3, #9
900073a2:	d1e3      	bne.n	9000736c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x80>
		return 3;
900073a4:	2003      	movs	r0, #3
900073a6:	e7cc      	b.n	90007342 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x56>
        if(board[i][y] != symbol)
900073a8:	7869      	ldrb	r1, [r5, #1]
900073aa:	42a1      	cmp	r1, r4
900073ac:	d0e9      	beq.n	90007382 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x96>
900073ae:	e7eb      	b.n	90007388 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9c>
            if(board[i][i] != symbol)
900073b0:	7829      	ldrb	r1, [r5, #0]
900073b2:	42a1      	cmp	r1, r4
900073b4:	d0f4      	beq.n	900073a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
            if(board[i][(3-1)-i] != symbol)
900073b6:	78a9      	ldrb	r1, [r5, #2]
900073b8:	42a1      	cmp	r1, r4
900073ba:	d1f1      	bne.n	900073a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
900073bc:	7929      	ldrb	r1, [r5, #4]
900073be:	42a1      	cmp	r1, r4
900073c0:	d0eb      	beq.n	9000739a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xae>
900073c2:	e7ed      	b.n	900073a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
            if(board[i][i] != symbol)
900073c4:	7829      	ldrb	r1, [r5, #0]
900073c6:	42a1      	cmp	r1, r4
900073c8:	d1f5      	bne.n	900073b6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xca>
900073ca:	7929      	ldrb	r1, [r5, #4]
900073cc:	42a1      	cmp	r1, r4
900073ce:	d0de      	beq.n	9000738e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa2>
900073d0:	e7e6      	b.n	900073a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb4>
900073d2:	bf00      	nop
900073d4:	2401f6e4 	.word	0x2401f6e4
900073d8:	24000038 	.word	0x24000038
900073dc:	2401f6f0 	.word	0x2401f6f0
900073e0:	90006ef5 	.word	0x90006ef5
900073e4:	2401f6ed 	.word	0x2401f6ed
900073e8:	2401f6ee 	.word	0x2401f6ee

900073ec <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
900073ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[1][2] != 0 ) {
900073ee:	4e28      	ldr	r6, [pc, #160]	; (90007490 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xa4>)
900073f0:	7973      	ldrb	r3, [r6, #5]
900073f2:	b35b      	cbz	r3, 9000744c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x60>
		if( turn ) {
900073f4:	4d27      	ldr	r5, [pc, #156]	; (90007494 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xa8>)
900073f6:	4604      	mov	r4, r0
900073f8:	2201      	movs	r2, #1
900073fa:	782b      	ldrb	r3, [r5, #0]
900073fc:	bb3b      	cbnz	r3, 9000744e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
			board[1][2] = 'O';
900073fe:	234f      	movs	r3, #79	; 0x4f
90007400:	f880 28e9 	strb.w	r2, [r0, #2281]	; 0x8e9
			pos6_circle.invalidate();
90007404:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
90007408:	7173      	strb	r3, [r6, #5]
			pos6_circle.invalidate();
9000740a:	f00f ffec 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000740e:	4a22      	ldr	r2, [pc, #136]	; (90007498 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>)
90007410:	8813      	ldrh	r3, [r2, #0]
90007412:	3301      	adds	r3, #1
90007414:	b21b      	sxth	r3, r3
90007416:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
90007418:	6822      	ldr	r2, [r4, #0]
9000741a:	6d17      	ldr	r7, [r2, #80]	; 0x50
9000741c:	4a1f      	ldr	r2, [pc, #124]	; (9000749c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb0>)
9000741e:	4297      	cmp	r7, r2
90007420:	d11e      	bne.n	90007460 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x74>
	if(turn)
90007422:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
90007424:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90007426:	2800      	cmp	r0, #0
90007428:	bf14      	ite	ne
9000742a:	2458      	movne	r4, #88	; 0x58
9000742c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000742e:	42a2      	cmp	r2, r4
90007430:	d121      	bne.n	90007476 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
90007432:	79f1      	ldrb	r1, [r6, #7]
90007434:	4291      	cmp	r1, r2
90007436:	d11e      	bne.n	90007476 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
90007438:	7a32      	ldrb	r2, [r6, #8]
9000743a:	428a      	cmp	r2, r1
9000743c:	d11b      	bne.n	90007476 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x8a>
            if( turn )
9000743e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007442:	4a17      	ldr	r2, [pc, #92]	; (900074a0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
90007444:	2101      	movs	r1, #1
			result = temp_result;
90007446:	4b17      	ldr	r3, [pc, #92]	; (900074a4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
			game_over = true;
90007448:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000744a:	8018      	strh	r0, [r3, #0]
}
9000744c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[1][2] = 'X';
9000744e:	2358      	movs	r3, #88	; 0x58
90007450:	f880 28bd 	strb.w	r2, [r0, #2237]	; 0x8bd
			pos6_cross.invalidate();
90007454:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
90007458:	7173      	strb	r3, [r6, #5]
			pos6_cross.invalidate();
9000745a:	f00f ffc4 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000745e:	e7d6      	b.n	9000740e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x22>
		short temp_result = is_game_over(1, 2);
90007460:	2202      	movs	r2, #2
90007462:	2101      	movs	r1, #1
90007464:	4620      	mov	r0, r4
90007466:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007468:	2800      	cmp	r0, #0
9000746a:	d1ea      	bne.n	90007442 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x56>
		turn = !turn;
9000746c:	7828      	ldrb	r0, [r5, #0]
9000746e:	f080 0001 	eor.w	r0, r0, #1
90007472:	7028      	strb	r0, [r5, #0]
}
90007474:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
90007476:	7872      	ldrb	r2, [r6, #1]
90007478:	42a2      	cmp	r2, r4
9000747a:	d105      	bne.n	90007488 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9c>
9000747c:	7932      	ldrb	r2, [r6, #4]
9000747e:	42a2      	cmp	r2, r4
90007480:	d102      	bne.n	90007488 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9c>
90007482:	79f2      	ldrb	r2, [r6, #7]
90007484:	42a2      	cmp	r2, r4
90007486:	d0da      	beq.n	9000743e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x52>
	if( turn_number == 9 )
90007488:	2b09      	cmp	r3, #9
9000748a:	d1f0      	bne.n	9000746e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
		return 3;
9000748c:	2003      	movs	r0, #3
9000748e:	e7d8      	b.n	90007442 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x56>
90007490:	2401f6e4 	.word	0x2401f6e4
90007494:	24000038 	.word	0x24000038
90007498:	2401f6f0 	.word	0x2401f6f0
9000749c:	90006ef5 	.word	0x90006ef5
900074a0:	2401f6ed 	.word	0x2401f6ed
900074a4:	2401f6ee 	.word	0x2401f6ee

900074a8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
900074a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][0] != 0 ) {
900074aa:	4e2b      	ldr	r6, [pc, #172]	; (90007558 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb0>)
900074ac:	79b3      	ldrb	r3, [r6, #6]
900074ae:	b35b      	cbz	r3, 90007508 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
		if( turn ) {
900074b0:	4d2a      	ldr	r5, [pc, #168]	; (9000755c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>)
900074b2:	4604      	mov	r4, r0
900074b4:	2201      	movs	r2, #1
900074b6:	782b      	ldrb	r3, [r5, #0]
900074b8:	bb3b      	cbnz	r3, 9000750a <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x62>
			board[2][0] = 'O';
900074ba:	234f      	movs	r3, #79	; 0x4f
900074bc:	f880 2915 	strb.w	r2, [r0, #2325]	; 0x915
			pos7_circle.invalidate();
900074c0:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
900074c4:	71b3      	strb	r3, [r6, #6]
			pos7_circle.invalidate();
900074c6:	f00f ff8e 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900074ca:	4a25      	ldr	r2, [pc, #148]	; (90007560 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb8>)
900074cc:	8813      	ldrh	r3, [r2, #0]
900074ce:	3301      	adds	r3, #1
900074d0:	b21b      	sxth	r3, r3
900074d2:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
900074d4:	6822      	ldr	r2, [r4, #0]
900074d6:	6d17      	ldr	r7, [r2, #80]	; 0x50
900074d8:	4a22      	ldr	r2, [pc, #136]	; (90007564 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
900074da:	4297      	cmp	r7, r2
900074dc:	d11e      	bne.n	9000751c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x74>
	if(turn)
900074de:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900074e0:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
900074e2:	2800      	cmp	r0, #0
900074e4:	bf14      	ite	ne
900074e6:	2458      	movne	r4, #88	; 0x58
900074e8:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900074ea:	42a2      	cmp	r2, r4
900074ec:	d121      	bne.n	90007532 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x8a>
900074ee:	7871      	ldrb	r1, [r6, #1]
900074f0:	4291      	cmp	r1, r2
900074f2:	d11e      	bne.n	90007532 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x8a>
900074f4:	78b2      	ldrb	r2, [r6, #2]
900074f6:	428a      	cmp	r2, r1
900074f8:	d12a      	bne.n	90007550 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
                if( turn )
900074fa:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900074fe:	4a1a      	ldr	r2, [pc, #104]	; (90007568 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
90007500:	2101      	movs	r1, #1
			result = temp_result;
90007502:	4b1a      	ldr	r3, [pc, #104]	; (9000756c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
			game_over = true;
90007504:	7011      	strb	r1, [r2, #0]
			result = temp_result;
90007506:	8018      	strh	r0, [r3, #0]
}
90007508:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][0] = 'X';
9000750a:	2358      	movs	r3, #88	; 0x58
9000750c:	f880 2941 	strb.w	r2, [r0, #2369]	; 0x941
			pos7_cross.invalidate();
90007510:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
90007514:	71b3      	strb	r3, [r6, #6]
			pos7_cross.invalidate();
90007516:	f00f ff66 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000751a:	e7d6      	b.n	900074ca <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x22>
		short temp_result = is_game_over(2, 0);
9000751c:	2200      	movs	r2, #0
9000751e:	2102      	movs	r1, #2
90007520:	4620      	mov	r0, r4
90007522:	47b8      	blx	r7
		if( temp_result != 0 ) {
90007524:	2800      	cmp	r0, #0
90007526:	d1ea      	bne.n	900074fe <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x56>
		turn = !turn;
90007528:	7828      	ldrb	r0, [r5, #0]
9000752a:	f080 0001 	eor.w	r0, r0, #1
9000752e:	7028      	strb	r0, [r5, #0]
}
90007530:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
90007532:	78b2      	ldrb	r2, [r6, #2]
90007534:	42a2      	cmp	r2, r4
90007536:	d10b      	bne.n	90007550 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
90007538:	7972      	ldrb	r2, [r6, #5]
9000753a:	42a2      	cmp	r2, r4
9000753c:	d102      	bne.n	90007544 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
9000753e:	7a32      	ldrb	r2, [r6, #8]
90007540:	42a2      	cmp	r2, r4
90007542:	d0da      	beq.n	900074fa <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x52>
            if(board[i][(3-1)-i] != symbol)
90007544:	7932      	ldrb	r2, [r6, #4]
90007546:	42a2      	cmp	r2, r4
90007548:	d102      	bne.n	90007550 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
9000754a:	79b2      	ldrb	r2, [r6, #6]
9000754c:	42a2      	cmp	r2, r4
9000754e:	d0d4      	beq.n	900074fa <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x52>
	if( turn_number == 9 )
90007550:	2b09      	cmp	r3, #9
90007552:	d1ea      	bne.n	9000752a <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x82>
		return 3;
90007554:	2003      	movs	r0, #3
90007556:	e7d2      	b.n	900074fe <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x56>
90007558:	2401f6e4 	.word	0x2401f6e4
9000755c:	24000038 	.word	0x24000038
90007560:	2401f6f0 	.word	0x2401f6f0
90007564:	90006ef5 	.word	0x90006ef5
90007568:	2401f6ed 	.word	0x2401f6ed
9000756c:	2401f6ee 	.word	0x2401f6ee

90007570 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90007570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][1] != 0 ) {
90007572:	4e28      	ldr	r6, [pc, #160]	; (90007614 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xa4>)
90007574:	79f3      	ldrb	r3, [r6, #7]
90007576:	b35b      	cbz	r3, 900075d0 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x60>
		if( turn ) {
90007578:	4d27      	ldr	r5, [pc, #156]	; (90007618 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xa8>)
9000757a:	4604      	mov	r4, r0
9000757c:	2201      	movs	r2, #1
9000757e:	782b      	ldrb	r3, [r5, #0]
90007580:	bb3b      	cbnz	r3, 900075d2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
			board[2][1] = 'O';
90007582:	234f      	movs	r3, #79	; 0x4f
90007584:	f880 296d 	strb.w	r2, [r0, #2413]	; 0x96d
			pos8_circle.invalidate();
90007588:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
9000758c:	71f3      	strb	r3, [r6, #7]
			pos8_circle.invalidate();
9000758e:	f00f ff2a 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007592:	4a22      	ldr	r2, [pc, #136]	; (9000761c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>)
90007594:	8813      	ldrh	r3, [r2, #0]
90007596:	3301      	adds	r3, #1
90007598:	b21b      	sxth	r3, r3
9000759a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
9000759c:	6822      	ldr	r2, [r4, #0]
9000759e:	6d17      	ldr	r7, [r2, #80]	; 0x50
900075a0:	4a1f      	ldr	r2, [pc, #124]	; (90007620 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb0>)
900075a2:	4297      	cmp	r7, r2
900075a4:	d11e      	bne.n	900075e4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x74>
	if(turn)
900075a6:	7828      	ldrb	r0, [r5, #0]
        if(board[x][i] != symbol)
900075a8:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
900075aa:	2800      	cmp	r0, #0
900075ac:	bf14      	ite	ne
900075ae:	2458      	movne	r4, #88	; 0x58
900075b0:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900075b2:	42a2      	cmp	r2, r4
900075b4:	d121      	bne.n	900075fa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x8a>
900075b6:	7931      	ldrb	r1, [r6, #4]
900075b8:	4291      	cmp	r1, r2
900075ba:	d11e      	bne.n	900075fa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x8a>
900075bc:	7972      	ldrb	r2, [r6, #5]
900075be:	428a      	cmp	r2, r1
900075c0:	d124      	bne.n	9000760c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
            if( turn )
900075c2:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900075c6:	4a17      	ldr	r2, [pc, #92]	; (90007624 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
900075c8:	2101      	movs	r1, #1
			result = temp_result;
900075ca:	4b17      	ldr	r3, [pc, #92]	; (90007628 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
			game_over = true;
900075cc:	7011      	strb	r1, [r2, #0]
			result = temp_result;
900075ce:	8018      	strh	r0, [r3, #0]
}
900075d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][1] = 'X';
900075d2:	2358      	movs	r3, #88	; 0x58
900075d4:	f880 2999 	strb.w	r2, [r0, #2457]	; 0x999
			pos8_cross.invalidate();
900075d8:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
900075dc:	71f3      	strb	r3, [r6, #7]
			pos8_cross.invalidate();
900075de:	f00f ff02 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
900075e2:	e7d6      	b.n	90007592 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x22>
		short temp_result = is_game_over(2, 1);
900075e4:	2201      	movs	r2, #1
900075e6:	2102      	movs	r1, #2
900075e8:	4620      	mov	r0, r4
900075ea:	47b8      	blx	r7
		if( temp_result != 0 ) {
900075ec:	2800      	cmp	r0, #0
900075ee:	d1ea      	bne.n	900075c6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x56>
		turn = !turn;
900075f0:	7828      	ldrb	r0, [r5, #0]
900075f2:	f080 0001 	eor.w	r0, r0, #1
900075f6:	7028      	strb	r0, [r5, #0]
}
900075f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900075fa:	78b2      	ldrb	r2, [r6, #2]
900075fc:	42a2      	cmp	r2, r4
900075fe:	d105      	bne.n	9000760c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
90007600:	7972      	ldrb	r2, [r6, #5]
90007602:	42a2      	cmp	r2, r4
90007604:	d102      	bne.n	9000760c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9c>
90007606:	7a32      	ldrb	r2, [r6, #8]
90007608:	42a2      	cmp	r2, r4
9000760a:	d0da      	beq.n	900075c2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x52>
	if( turn_number == 9 )
9000760c:	2b09      	cmp	r3, #9
9000760e:	d1f0      	bne.n	900075f2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
		return 3;
90007610:	2003      	movs	r0, #3
90007612:	e7d8      	b.n	900075c6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x56>
90007614:	2401f6e4 	.word	0x2401f6e4
90007618:	24000038 	.word	0x24000038
9000761c:	2401f6f0 	.word	0x2401f6f0
90007620:	90006ef5 	.word	0x90006ef5
90007624:	2401f6ed 	.word	0x2401f6ed
90007628:	2401f6ee 	.word	0x2401f6ee

9000762c <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
9000762c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( board[2][2] != 0 ) {
9000762e:	4d2d      	ldr	r5, [pc, #180]	; (900076e4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xb8>)
90007630:	7a2b      	ldrb	r3, [r5, #8]
90007632:	b35b      	cbz	r3, 9000768c <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x60>
		if( turn ) {
90007634:	4e2c      	ldr	r6, [pc, #176]	; (900076e8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbc>)
90007636:	4604      	mov	r4, r0
90007638:	2201      	movs	r2, #1
9000763a:	7833      	ldrb	r3, [r6, #0]
9000763c:	bb3b      	cbnz	r3, 9000768e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
			board[2][2] = 'O';
9000763e:	234f      	movs	r3, #79	; 0x4f
90007640:	f880 29c5 	strb.w	r2, [r0, #2501]	; 0x9c5
			pos9_circle.invalidate();
90007644:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
90007648:	722b      	strb	r3, [r5, #8]
			pos9_circle.invalidate();
9000764a:	f00f fecc 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000764e:	4a27      	ldr	r2, [pc, #156]	; (900076ec <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc0>)
90007650:	8813      	ldrh	r3, [r2, #0]
90007652:	3301      	adds	r3, #1
90007654:	b21b      	sxth	r3, r3
90007656:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90007658:	6822      	ldr	r2, [r4, #0]
9000765a:	6d17      	ldr	r7, [r2, #80]	; 0x50
9000765c:	4a24      	ldr	r2, [pc, #144]	; (900076f0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc4>)
9000765e:	4297      	cmp	r7, r2
90007660:	d11e      	bne.n	900076a0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x74>
	if(turn)
90007662:	7830      	ldrb	r0, [r6, #0]
        if(board[x][i] != symbol)
90007664:	79aa      	ldrb	r2, [r5, #6]
		symbol = 'O';
90007666:	2800      	cmp	r0, #0
90007668:	bf14      	ite	ne
9000766a:	2458      	movne	r4, #88	; 0x58
9000766c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000766e:	42a2      	cmp	r2, r4
90007670:	d121      	bne.n	900076b6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
90007672:	79e9      	ldrb	r1, [r5, #7]
90007674:	4291      	cmp	r1, r2
90007676:	d11e      	bne.n	900076b6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
90007678:	7a2a      	ldrb	r2, [r5, #8]
9000767a:	428a      	cmp	r2, r1
9000767c:	d11b      	bne.n	900076b6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8a>
                if( turn )
9000767e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007682:	4a1c      	ldr	r2, [pc, #112]	; (900076f4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
90007684:	2101      	movs	r1, #1
			result = temp_result;
90007686:	4b1c      	ldr	r3, [pc, #112]	; (900076f8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
			game_over = true;
90007688:	7011      	strb	r1, [r2, #0]
			result = temp_result;
9000768a:	8018      	strh	r0, [r3, #0]
}
9000768c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			board[2][2] = 'X';
9000768e:	2358      	movs	r3, #88	; 0x58
90007690:	f880 29f1 	strb.w	r2, [r0, #2545]	; 0x9f1
			pos9_cross.invalidate();
90007694:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90007698:	722b      	strb	r3, [r5, #8]
			pos9_cross.invalidate();
9000769a:	f00f fea4 	bl	900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000769e:	e7d6      	b.n	9000764e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x22>
		short temp_result = is_game_over(2, 2);
900076a0:	2202      	movs	r2, #2
900076a2:	4620      	mov	r0, r4
900076a4:	4611      	mov	r1, r2
900076a6:	47b8      	blx	r7
		if( temp_result != 0 ) {
900076a8:	2800      	cmp	r0, #0
900076aa:	d1ea      	bne.n	90007682 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x56>
		turn = !turn;
900076ac:	7833      	ldrb	r3, [r6, #0]
900076ae:	f083 0301 	eor.w	r3, r3, #1
900076b2:	7033      	strb	r3, [r6, #0]
}
900076b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if(board[i][y] != symbol)
900076b6:	78aa      	ldrb	r2, [r5, #2]
900076b8:	42a2      	cmp	r2, r4
900076ba:	d105      	bne.n	900076c8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9c>
900076bc:	796a      	ldrb	r2, [r5, #5]
900076be:	42a2      	cmp	r2, r4
900076c0:	d102      	bne.n	900076c8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9c>
900076c2:	7a2a      	ldrb	r2, [r5, #8]
900076c4:	42a2      	cmp	r2, r4
900076c6:	d0da      	beq.n	9000767e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x52>
            if(board[i][i] != symbol)
900076c8:	782a      	ldrb	r2, [r5, #0]
900076ca:	42a2      	cmp	r2, r4
900076cc:	d105      	bne.n	900076da <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xae>
900076ce:	792a      	ldrb	r2, [r5, #4]
900076d0:	42a2      	cmp	r2, r4
900076d2:	d102      	bne.n	900076da <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xae>
900076d4:	7a2a      	ldrb	r2, [r5, #8]
900076d6:	42a2      	cmp	r2, r4
900076d8:	d0d1      	beq.n	9000767e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x52>
	if( turn_number == 9 )
900076da:	2b09      	cmp	r3, #9
900076dc:	d1e6      	bne.n	900076ac <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x80>
		return 3;
900076de:	2003      	movs	r0, #3
900076e0:	e7cf      	b.n	90007682 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x56>
900076e2:	bf00      	nop
900076e4:	2401f6e4 	.word	0x2401f6e4
900076e8:	24000038 	.word	0x24000038
900076ec:	2401f6f0 	.word	0x2401f6f0
900076f0:	90006ef5 	.word	0x90006ef5
900076f4:	2401f6ed 	.word	0x2401f6ed
900076f8:	2401f6ee 	.word	0x2401f6ee

900076fc <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900076fc:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007700:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90007702:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90007706:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000770a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000770c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000770e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90007712:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90007716:	4770      	bx	lr

90007718 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90007718:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000771c:	2b01      	cmp	r3, #1
9000771e:	d102      	bne.n	90007726 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90007720:	2300      	movs	r3, #0
90007722:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90007726:	2000      	movs	r0, #0
90007728:	4770      	bx	lr
9000772a:	bf00      	nop

9000772c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
9000772c:	2000      	movs	r0, #0
9000772e:	4770      	bx	lr

90007730 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007730:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90007732:	6904      	ldr	r4, [r0, #16]
90007734:	8900      	ldrh	r0, [r0, #8]
90007736:	46a4      	mov	ip, r4
}
90007738:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000773c:	4760      	bx	ip
9000773e:	bf00      	nop

90007740 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007740:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90007742:	68c4      	ldr	r4, [r0, #12]
90007744:	8900      	ldrh	r0, [r0, #8]
90007746:	46a4      	mov	ip, r4
}
90007748:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000774c:	4760      	bx	ip
9000774e:	bf00      	nop

90007750 <FT5336_GestureConfig>:
{
90007750:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90007752:	f100 0518 	add.w	r5, r0, #24
{
90007756:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90007758:	7809      	ldrb	r1, [r1, #0]
9000775a:	4628      	mov	r0, r5
9000775c:	f000 f96c 	bl	90007a38 <ft5336_radian_value>
90007760:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90007762:	7931      	ldrb	r1, [r6, #4]
90007764:	4628      	mov	r0, r5
90007766:	f000 f975 	bl	90007a54 <ft5336_offset_left_right>
9000776a:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
9000776c:	7a31      	ldrb	r1, [r6, #8]
9000776e:	4628      	mov	r0, r5
90007770:	f000 f97e 	bl	90007a70 <ft5336_offset_up_down>
90007774:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007776:	7b31      	ldrb	r1, [r6, #12]
90007778:	4628      	mov	r0, r5
9000777a:	f000 f987 	bl	90007a8c <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000777e:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007780:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90007782:	4628      	mov	r0, r5
90007784:	f000 f990 	bl	90007aa8 <ft5336_distance_up_down>
90007788:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000778a:	7d31      	ldrb	r1, [r6, #20]
9000778c:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000778e:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90007790:	f000 f998 	bl	90007ac4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90007794:	42c4      	cmn	r4, r0
}
90007796:	bf14      	ite	ne
90007798:	f04f 30ff 	movne.w	r0, #4294967295
9000779c:	2000      	moveq	r0, #0
9000779e:	bd70      	pop	{r4, r5, r6, pc}

900077a0 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
900077a0:	3018      	adds	r0, #24
900077a2:	f000 b9ab 	b.w	90007afc <ft5336_chip_id>
900077a6:	bf00      	nop

900077a8 <FT5336_GetState>:
{
900077a8:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900077aa:	f100 0518 	add.w	r5, r0, #24
{
900077ae:	b083      	sub	sp, #12
900077b0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900077b2:	4628      	mov	r0, r5
900077b4:	a901      	add	r1, sp, #4
900077b6:	f000 f931 	bl	90007a1c <ft5336_td_status>
900077ba:	bb10      	cbnz	r0, 90007802 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900077bc:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900077c0:	2b05      	cmp	r3, #5
900077c2:	bf94      	ite	ls
900077c4:	4619      	movls	r1, r3
900077c6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900077c8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900077ca:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900077cc:	4628      	mov	r0, r5
900077ce:	2103      	movs	r1, #3
900077d0:	eb0d 0203 	add.w	r2, sp, r3
900077d4:	f000 f910 	bl	900079f8 <ft5336_read_reg>
900077d8:	b9b0      	cbnz	r0, 90007808 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900077da:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900077de:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900077e2:	0212      	lsls	r2, r2, #8
900077e4:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900077e8:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900077ea:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900077ee:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900077f2:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900077f4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900077f8:	430b      	orrs	r3, r1
900077fa:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900077fe:	b003      	add	sp, #12
90007800:	bd30      	pop	{r4, r5, pc}
90007802:	f04f 31ff 	mov.w	r1, #4294967295
90007806:	e7df      	b.n	900077c8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90007808:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000780c:	e7f7      	b.n	900077fe <FT5336_GetState+0x56>
9000780e:	bf00      	nop

90007810 <FT5336_GetMultiTouchState>:
{
90007810:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007812:	f100 0518 	add.w	r5, r0, #24
{
90007816:	b088      	sub	sp, #32
90007818:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000781a:	4628      	mov	r0, r5
9000781c:	4669      	mov	r1, sp
9000781e:	f000 f8fd 	bl	90007a1c <ft5336_td_status>
90007822:	2800      	cmp	r0, #0
90007824:	f040 809a 	bne.w	9000795c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90007828:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000782c:	2b05      	cmp	r3, #5
9000782e:	bf94      	ite	ls
90007830:	4619      	movls	r1, r3
90007832:	2100      	movhi	r1, #0
90007834:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90007836:	231e      	movs	r3, #30
90007838:	466a      	mov	r2, sp
9000783a:	4628      	mov	r0, r5
9000783c:	2103      	movs	r1, #3
9000783e:	f000 f8db 	bl	900079f8 <ft5336_read_reg>
90007842:	2800      	cmp	r0, #0
90007844:	f040 808d 	bne.w	90007962 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007848:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000784c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007850:	020a      	lsls	r2, r1, #8
90007852:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007856:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007858:	f89d c007 	ldrb.w	ip, [sp, #7]
9000785c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007860:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007862:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007866:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000786a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000786c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007870:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007872:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007874:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007876:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007878:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000787c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000787e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007882:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007886:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007888:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000788a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000788e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007890:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007892:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007894:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007898:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000789a:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000789c:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900078a0:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900078a4:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078a6:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900078a8:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078aa:	ea45 050c 	orr.w	r5, r5, ip
900078ae:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078b2:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900078b6:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078b8:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078ba:	0212      	lsls	r2, r2, #8
900078bc:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900078c0:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078c2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900078c6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078ca:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900078cc:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078ce:	f89d 300e 	ldrb.w	r3, [sp, #14]
900078d2:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078d4:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078d8:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078da:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078dc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078e0:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078e2:	f89d 200f 	ldrb.w	r2, [sp, #15]
900078e6:	4313      	orrs	r3, r2
900078e8:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900078ea:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078ec:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078f0:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078f4:	020a      	lsls	r2, r1, #8
900078f6:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900078fa:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900078fc:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007900:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007902:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007906:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007908:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000790c:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000790e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007910:	f89d 1018 	ldrb.w	r1, [sp, #24]
90007914:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007916:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007918:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000791a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000791e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007920:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007924:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007926:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000792a:	f89d 301d 	ldrb.w	r3, [sp, #29]
9000792e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007930:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007932:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007934:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007938:	6625      	str	r5, [r4, #96]	; 0x60
9000793a:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000793c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007940:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007942:	021b      	lsls	r3, r3, #8
90007944:	f89d 101b 	ldrb.w	r1, [sp, #27]
90007948:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
9000794c:	430b      	orrs	r3, r1
9000794e:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007950:	f89d 3019 	ldrb.w	r3, [sp, #25]
90007954:	4313      	orrs	r3, r2
90007956:	6163      	str	r3, [r4, #20]
}
90007958:	b008      	add	sp, #32
9000795a:	bd70      	pop	{r4, r5, r6, pc}
9000795c:	f04f 31ff 	mov.w	r1, #4294967295
90007960:	e768      	b.n	90007834 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90007962:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007966:	e7f7      	b.n	90007958 <FT5336_GetMultiTouchState+0x148>

90007968 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007968:	3018      	adds	r0, #24
9000796a:	f000 b84d 	b.w	90007a08 <ft5336_gest_id>
9000796e:	bf00      	nop

90007970 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90007970:	2101      	movs	r1, #1
90007972:	3018      	adds	r0, #24
90007974:	f000 b8b4 	b.w	90007ae0 <ft5336_g_mode>

90007978 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007978:	2100      	movs	r1, #0
9000797a:	3018      	adds	r0, #24
9000797c:	f000 b8b0 	b.w	90007ae0 <ft5336_g_mode>

90007980 <FT5336_Init>:
{
90007980:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90007982:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90007986:	b98d      	cbnz	r5, 900079ac <FT5336_Init+0x2c>
    pObj->IO.Init();
90007988:	4606      	mov	r6, r0
9000798a:	4604      	mov	r4, r0
9000798c:	f856 3b18 	ldr.w	r3, [r6], #24
90007990:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007992:	4629      	mov	r1, r5
90007994:	4630      	mov	r0, r6
90007996:	f000 f8a3 	bl	90007ae0 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000799a:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
9000799c:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
900079a0:	bf18      	it	ne
900079a2:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900079a4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
900079a8:	4240      	negs	r0, r0
}
900079aa:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
900079ac:	2000      	movs	r0, #0
}
900079ae:	bd70      	pop	{r4, r5, r6, pc}

900079b0 <FT5336_ClearIT>:
900079b0:	2000      	movs	r0, #0
900079b2:	4770      	bx	lr

900079b4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900079b4:	b1c0      	cbz	r0, 900079e8 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900079b6:	890a      	ldrh	r2, [r1, #8]
{
900079b8:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900079ba:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900079be:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900079c0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900079c4:	694a      	ldr	r2, [r1, #20]
900079c6:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900079ca:	4909      	ldr	r1, [pc, #36]	; (900079f0 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900079cc:	60c5      	str	r5, [r0, #12]
900079ce:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900079d2:	4a08      	ldr	r2, [pc, #32]	; (900079f4 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900079d4:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900079d8:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900079da:	b10b      	cbz	r3, 900079e0 <FT5336_RegisterBusIO+0x2c>
}
900079dc:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900079de:	4718      	bx	r3
}
900079e0:	f04f 30ff 	mov.w	r0, #4294967295
900079e4:	bc30      	pop	{r4, r5}
900079e6:	4770      	bx	lr
900079e8:	f04f 30ff 	mov.w	r0, #4294967295
900079ec:	4770      	bx	lr
900079ee:	bf00      	nop
900079f0:	90007731 	.word	0x90007731
900079f4:	90007741 	.word	0x90007741

900079f8 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900079f8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900079fa:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900079fe:	46a4      	mov	ip, r4
}
90007a00:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007a04:	4760      	bx	ip
90007a06:	bf00      	nop

90007a08 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007a08:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007a0a:	2301      	movs	r3, #1
{
90007a0c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007a0e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90007a12:	4619      	mov	r1, r3
90007a14:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90007a16:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007a1a:	4760      	bx	ip

90007a1c <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90007a1c:	b538      	push	{r3, r4, r5, lr}
90007a1e:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007a20:	2301      	movs	r3, #1
90007a22:	2102      	movs	r1, #2
90007a24:	4622      	mov	r2, r4
90007a26:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90007a2a:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90007a2c:	b918      	cbnz	r0, 90007a36 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90007a2e:	7823      	ldrb	r3, [r4, #0]
90007a30:	f003 030f 	and.w	r3, r3, #15
90007a34:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90007a36:	bd38      	pop	{r3, r4, r5, pc}

90007a38 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90007a38:	b510      	push	{r4, lr}
90007a3a:	460c      	mov	r4, r1
90007a3c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a3e:	2301      	movs	r3, #1
90007a40:	2191      	movs	r1, #145	; 0x91
{
90007a42:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a46:	f10d 0207 	add.w	r2, sp, #7
90007a4a:	6804      	ldr	r4, [r0, #0]
90007a4c:	6880      	ldr	r0, [r0, #8]
90007a4e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90007a50:	b002      	add	sp, #8
90007a52:	bd10      	pop	{r4, pc}

90007a54 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007a54:	b510      	push	{r4, lr}
90007a56:	460c      	mov	r4, r1
90007a58:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a5a:	2301      	movs	r3, #1
90007a5c:	2192      	movs	r1, #146	; 0x92
{
90007a5e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a62:	f10d 0207 	add.w	r2, sp, #7
90007a66:	6804      	ldr	r4, [r0, #0]
90007a68:	6880      	ldr	r0, [r0, #8]
90007a6a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90007a6c:	b002      	add	sp, #8
90007a6e:	bd10      	pop	{r4, pc}

90007a70 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007a70:	b510      	push	{r4, lr}
90007a72:	460c      	mov	r4, r1
90007a74:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a76:	2301      	movs	r3, #1
90007a78:	2193      	movs	r1, #147	; 0x93
{
90007a7a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a7e:	f10d 0207 	add.w	r2, sp, #7
90007a82:	6804      	ldr	r4, [r0, #0]
90007a84:	6880      	ldr	r0, [r0, #8]
90007a86:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90007a88:	b002      	add	sp, #8
90007a8a:	bd10      	pop	{r4, pc}

90007a8c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007a8c:	b510      	push	{r4, lr}
90007a8e:	460c      	mov	r4, r1
90007a90:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a92:	2301      	movs	r3, #1
90007a94:	2194      	movs	r1, #148	; 0x94
{
90007a96:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007a9a:	f10d 0207 	add.w	r2, sp, #7
90007a9e:	6804      	ldr	r4, [r0, #0]
90007aa0:	6880      	ldr	r0, [r0, #8]
90007aa2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90007aa4:	b002      	add	sp, #8
90007aa6:	bd10      	pop	{r4, pc}

90007aa8 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007aa8:	b510      	push	{r4, lr}
90007aaa:	460c      	mov	r4, r1
90007aac:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007aae:	2301      	movs	r3, #1
90007ab0:	2195      	movs	r1, #149	; 0x95
{
90007ab2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007ab6:	f10d 0207 	add.w	r2, sp, #7
90007aba:	6804      	ldr	r4, [r0, #0]
90007abc:	6880      	ldr	r0, [r0, #8]
90007abe:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90007ac0:	b002      	add	sp, #8
90007ac2:	bd10      	pop	{r4, pc}

90007ac4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90007ac4:	b510      	push	{r4, lr}
90007ac6:	460c      	mov	r4, r1
90007ac8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007aca:	2301      	movs	r3, #1
90007acc:	2196      	movs	r1, #150	; 0x96
{
90007ace:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007ad2:	f10d 0207 	add.w	r2, sp, #7
90007ad6:	6804      	ldr	r4, [r0, #0]
90007ad8:	6880      	ldr	r0, [r0, #8]
90007ada:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007adc:	b002      	add	sp, #8
90007ade:	bd10      	pop	{r4, pc}

90007ae0 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007ae0:	b510      	push	{r4, lr}
90007ae2:	460c      	mov	r4, r1
90007ae4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007ae6:	2301      	movs	r3, #1
90007ae8:	21a4      	movs	r1, #164	; 0xa4
{
90007aea:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007aee:	f10d 0207 	add.w	r2, sp, #7
90007af2:	6804      	ldr	r4, [r0, #0]
90007af4:	6880      	ldr	r0, [r0, #8]
90007af6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90007af8:	b002      	add	sp, #8
90007afa:	bd10      	pop	{r4, pc}

90007afc <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007afc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007afe:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90007b02:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b04:	2301      	movs	r3, #1
90007b06:	46a4      	mov	ip, r4
90007b08:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90007b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007b0e:	4760      	bx	ip

90007b10 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90007b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007b12:	680b      	ldr	r3, [r1, #0]
{
90007b14:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90007b16:	4c2a      	ldr	r4, [pc, #168]	; (90007bc0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b18:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90007b1c:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90007b1e:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90007b20:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b22:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90007b24:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90007b26:	2301      	movs	r3, #1
90007b28:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90007b2a:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b2c:	f005 fd2a 	bl	9000d584 <HAL_SDRAM_SendCommand>
90007b30:	2800      	cmp	r0, #0
90007b32:	d142      	bne.n	90007bba <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90007b34:	f000 ff46 	bl	900089c4 <HAL_GetTick>
90007b38:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90007b3a:	f000 ff43 	bl	900089c4 <HAL_GetTick>
90007b3e:	4286      	cmp	r6, r0
90007b40:	d0fb      	beq.n	90007b3a <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007b42:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007b44:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90007b46:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b48:	491d      	ldr	r1, [pc, #116]	; (90007bc0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007b4a:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90007b4c:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90007b4e:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b50:	4638      	mov	r0, r7
90007b52:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90007b56:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90007b58:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b5a:	f005 fd13 	bl	9000d584 <HAL_SDRAM_SendCommand>
90007b5e:	bb60      	cbnz	r0, 90007bba <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b60:	4917      	ldr	r1, [pc, #92]	; (90007bc0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90007b62:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90007b66:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b68:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90007b6a:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90007b6e:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b70:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90007b74:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b76:	f005 fd05 	bl	9000d584 <HAL_SDRAM_SendCommand>
90007b7a:	b9f0      	cbnz	r0, 90007bba <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b7c:	4910      	ldr	r1, [pc, #64]	; (90007bc0 <MT48LC4M32B2_Init+0xb0>)
90007b7e:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007b80:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90007b84:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90007b86:	696a      	ldr	r2, [r5, #20]
90007b88:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90007b8a:	69aa      	ldr	r2, [r5, #24]
90007b8c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90007b8e:	69ea      	ldr	r2, [r5, #28]
90007b90:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90007b92:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90007b94:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007b96:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90007b98:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007b9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007ba0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007ba2:	f005 fcef 	bl	9000d584 <HAL_SDRAM_SendCommand>
90007ba6:	b940      	cbnz	r0, 90007bba <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007ba8:	68a9      	ldr	r1, [r5, #8]
90007baa:	4638      	mov	r0, r7
90007bac:	f005 fd0a 	bl	9000d5c4 <HAL_SDRAM_ProgramRefreshRate>
90007bb0:	3800      	subs	r0, #0
90007bb2:	bf18      	it	ne
90007bb4:	2001      	movne	r0, #1
90007bb6:	4240      	negs	r0, r0
}
90007bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007bba:	f04f 30ff 	mov.w	r0, #4294967295
}
90007bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90007bc0:	2401f6f4 	.word	0x2401f6f4

90007bc4 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90007bc4:	4a10      	ldr	r2, [pc, #64]	; (90007c08 <BSP_I2C4_DeInit+0x44>)
{
90007bc6:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007bc8:	6813      	ldr	r3, [r2, #0]
90007bca:	3b01      	subs	r3, #1
90007bcc:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90007bce:	b10b      	cbz	r3, 90007bd4 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90007bd0:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90007bd2:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90007bd4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90007bd8:	480c      	ldr	r0, [pc, #48]	; (90007c0c <BSP_I2C4_DeInit+0x48>)
90007bda:	f001 faaf 	bl	9000913c <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007bde:	480b      	ldr	r0, [pc, #44]	; (90007c0c <BSP_I2C4_DeInit+0x48>)
90007be0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90007be4:	f001 faaa 	bl	9000913c <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007be8:	4a09      	ldr	r2, [pc, #36]	; (90007c10 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007bea:	480a      	ldr	r0, [pc, #40]	; (90007c14 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007bec:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90007bf0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90007bf4:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007bf8:	f001 fd48 	bl	9000968c <HAL_I2C_DeInit>
90007bfc:	2800      	cmp	r0, #0
90007bfe:	d0e7      	beq.n	90007bd0 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90007c00:	f06f 0007 	mvn.w	r0, #7
}
90007c04:	bd08      	pop	{r3, pc}
90007c06:	bf00      	nop
90007c08:	2401f704 	.word	0x2401f704
90007c0c:	58020c00 	.word	0x58020c00
90007c10:	58024400 	.word	0x58024400
90007c14:	2402010c 	.word	0x2402010c

90007c18 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90007c18:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90007c1a:	2201      	movs	r2, #1
{
90007c1c:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90007c1e:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90007c22:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90007c26:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90007c2a:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90007c2e:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90007c30:	f001 fcd4 	bl	900095dc <HAL_I2C_Init>
90007c34:	b108      	cbz	r0, 90007c3a <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90007c36:	2001      	movs	r0, #1
}
90007c38:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90007c3a:	4601      	mov	r1, r0
90007c3c:	4620      	mov	r0, r4
90007c3e:	f001 ffe3 	bl	90009c08 <HAL_I2CEx_ConfigAnalogFilter>
90007c42:	2800      	cmp	r0, #0
90007c44:	d1f7      	bne.n	90007c36 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90007c46:	4601      	mov	r1, r0
90007c48:	4620      	mov	r0, r4
90007c4a:	f002 f807 	bl	90009c5c <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90007c4e:	3800      	subs	r0, #0
90007c50:	bf18      	it	ne
90007c52:	2001      	movne	r0, #1
}
90007c54:	bd10      	pop	{r4, pc}
90007c56:	bf00      	nop

90007c58 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90007c58:	4b99      	ldr	r3, [pc, #612]	; (90007ec0 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90007c5a:	489a      	ldr	r0, [pc, #616]	; (90007ec4 <BSP_I2C4_Init+0x26c>)
90007c5c:	4a9a      	ldr	r2, [pc, #616]	; (90007ec8 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90007c5e:	6819      	ldr	r1, [r3, #0]
{
90007c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007c64:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90007c66:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90007c68:	9103      	str	r1, [sp, #12]
90007c6a:	b119      	cbz	r1, 90007c74 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90007c6c:	2000      	movs	r0, #0
}
90007c6e:	b01f      	add	sp, #124	; 0x7c
90007c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90007c74:	2201      	movs	r2, #1
90007c76:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90007c78:	f001 ffc0 	bl	90009bfc <HAL_I2C_GetState>
90007c7c:	2800      	cmp	r0, #0
90007c7e:	d1f5      	bne.n	90007c6c <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007c80:	4c92      	ldr	r4, [pc, #584]	; (90007ecc <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007c82:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90007c86:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007c88:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007c8a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007c8e:	2600      	movs	r6, #0
90007c90:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007c92:	f043 0308 	orr.w	r3, r3, #8
90007c96:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90007c9a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90007c9e:	f003 0308 	and.w	r3, r3, #8
90007ca2:	9315      	str	r3, [sp, #84]	; 0x54
90007ca4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007ca6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90007caa:	f043 0308 	orr.w	r3, r3, #8
90007cae:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90007cb2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007cb6:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007cb8:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007cbc:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007cc0:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007cc2:	a918      	add	r1, sp, #96	; 0x60
90007cc4:	4882      	ldr	r0, [pc, #520]	; (90007ed0 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007cc6:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007cc8:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007ccc:	f001 f904 	bl	90008ed8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007cd0:	2312      	movs	r3, #18
90007cd2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007cd6:	a918      	add	r1, sp, #96	; 0x60
90007cd8:	487d      	ldr	r0, [pc, #500]	; (90007ed0 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007cda:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007cdc:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90007ce0:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007ce4:	f001 f8f8 	bl	90008ed8 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007ce8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90007cec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90007cf0:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90007cf4:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90007cf8:	f003 0380 	and.w	r3, r3, #128	; 0x80
90007cfc:	9317      	str	r3, [sp, #92]	; 0x5c
90007cfe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90007d00:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90007d04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90007d08:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90007d0c:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90007d10:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90007d14:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007d18:	f004 fc94 	bl	9000c644 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007d1c:	2800      	cmp	r0, #0
90007d1e:	f000 81f6 	beq.w	9000810e <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007d22:	4b6c      	ldr	r3, [pc, #432]	; (90007ed4 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90007d24:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007d28:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007d2a:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007d2e:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90007edc <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007d32:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007d34:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90007d38:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007d3a:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007d3c:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007d40:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90007d44:	4b64      	ldr	r3, [pc, #400]	; (90007ed8 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90007d46:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007d4a:	0079      	lsls	r1, r7, #1
90007d4c:	681b      	ldr	r3, [r3, #0]
90007d4e:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90007d52:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90007d56:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007d58:	4699      	mov	r9, r3
90007d5a:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007d5c:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90007d60:	46b8      	mov	r8, r7
90007d62:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90007d66:	bf94      	ite	ls
90007d68:	2101      	movls	r1, #1
90007d6a:	2100      	movhi	r1, #0
90007d6c:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90007d70:	f001 0101 	and.w	r1, r1, #1
90007d74:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90007d78:	bf38      	it	cc
90007d7a:	2100      	movcc	r1, #0
90007d7c:	429c      	cmp	r4, r3
90007d7e:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90007d82:	9105      	str	r1, [sp, #20]
90007d84:	bf8c      	ite	hi
90007d86:	2100      	movhi	r1, #0
90007d88:	2101      	movls	r1, #1
90007d8a:	459c      	cmp	ip, r3
90007d8c:	bf38      	it	cc
90007d8e:	2100      	movcc	r1, #0
90007d90:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90007d94:	9106      	str	r1, [sp, #24]
90007d96:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90007d9a:	9104      	str	r1, [sp, #16]
90007d9c:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90007da0:	9111      	str	r1, [sp, #68]	; 0x44
90007da2:	bf94      	ite	ls
90007da4:	2101      	movls	r1, #1
90007da6:	2100      	movhi	r1, #0
90007da8:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90007dac:	f001 0e01 	and.w	lr, r1, #1
90007db0:	bf38      	it	cc
90007db2:	f04f 0e00 	movcc.w	lr, #0
90007db6:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007db8:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007dbc:	f8cd e01c 	str.w	lr, [sp, #28]
90007dc0:	bf8c      	ite	hi
90007dc2:	f04f 0e00 	movhi.w	lr, #0
90007dc6:	f04f 0e01 	movls.w	lr, #1
90007dca:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007dcc:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007dce:	bf38      	it	cc
90007dd0:	f04f 0e00 	movcc.w	lr, #0
90007dd4:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90007dd8:	bf98      	it	ls
90007dda:	2101      	movls	r1, #1
90007ddc:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007de0:	f8cd e020 	str.w	lr, [sp, #32]
90007de4:	f001 0101 	and.w	r1, r1, #1
90007de8:	bf38      	it	cc
90007dea:	2100      	movcc	r1, #0
90007dec:	4284      	cmp	r4, r0
90007dee:	9109      	str	r1, [sp, #36]	; 0x24
90007df0:	4601      	mov	r1, r0
90007df2:	bf8c      	ite	hi
90007df4:	2000      	movhi	r0, #0
90007df6:	2001      	movls	r0, #1
90007df8:	458c      	cmp	ip, r1
90007dfa:	bf38      	it	cc
90007dfc:	2000      	movcc	r0, #0
90007dfe:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90007e02:	900b      	str	r0, [sp, #44]	; 0x2c
90007e04:	bf94      	ite	ls
90007e06:	2001      	movls	r0, #1
90007e08:	2000      	movhi	r0, #0
90007e0a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90007e0e:	f000 0001 	and.w	r0, r0, #1
90007e12:	bf38      	it	cc
90007e14:	2000      	movcc	r0, #0
90007e16:	900c      	str	r0, [sp, #48]	; 0x30
90007e18:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90007e1c:	4284      	cmp	r4, r0
90007e1e:	bf8c      	ite	hi
90007e20:	f04f 0e00 	movhi.w	lr, #0
90007e24:	f04f 0e01 	movls.w	lr, #1
90007e28:	4584      	cmp	ip, r0
90007e2a:	bf38      	it	cc
90007e2c:	f04f 0e00 	movcc.w	lr, #0
90007e30:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90007e34:	4670      	mov	r0, lr
90007e36:	bf94      	ite	ls
90007e38:	2001      	movls	r0, #1
90007e3a:	2000      	movhi	r0, #0
90007e3c:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90007e40:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90007e44:	f04f 0e00 	mov.w	lr, #0
90007e48:	f000 0001 	and.w	r0, r0, #1
90007e4c:	bf38      	it	cc
90007e4e:	2000      	movcc	r0, #0
90007e50:	900e      	str	r0, [sp, #56]	; 0x38
90007e52:	9804      	ldr	r0, [sp, #16]
90007e54:	4284      	cmp	r4, r0
90007e56:	4602      	mov	r2, r0
90007e58:	bf8c      	ite	hi
90007e5a:	2200      	movhi	r2, #0
90007e5c:	2201      	movls	r2, #1
90007e5e:	4584      	cmp	ip, r0
90007e60:	bf38      	it	cc
90007e62:	2200      	movcc	r2, #0
90007e64:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90007e68:	920f      	str	r2, [sp, #60]	; 0x3c
90007e6a:	bf94      	ite	ls
90007e6c:	2201      	movls	r2, #1
90007e6e:	2200      	movhi	r2, #0
90007e70:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90007e74:	f002 0201 	and.w	r2, r2, #1
90007e78:	bf38      	it	cc
90007e7a:	2200      	movcc	r2, #0
90007e7c:	9210      	str	r2, [sp, #64]	; 0x40
90007e7e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90007e80:	4294      	cmp	r4, r2
90007e82:	4613      	mov	r3, r2
90007e84:	bf8c      	ite	hi
90007e86:	2300      	movhi	r3, #0
90007e88:	2301      	movls	r3, #1
90007e8a:	4594      	cmp	ip, r2
90007e8c:	bf38      	it	cc
90007e8e:	2300      	movcc	r3, #0
90007e90:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90007e94:	9311      	str	r3, [sp, #68]	; 0x44
90007e96:	bf94      	ite	ls
90007e98:	2301      	movls	r3, #1
90007e9a:	2300      	movhi	r3, #0
90007e9c:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90007ea0:	f003 0301 	and.w	r3, r3, #1
90007ea4:	bf38      	it	cc
90007ea6:	2300      	movcc	r3, #0
90007ea8:	9312      	str	r3, [sp, #72]	; 0x48
90007eaa:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90007eae:	429c      	cmp	r4, r3
90007eb0:	bf8c      	ite	hi
90007eb2:	2200      	movhi	r2, #0
90007eb4:	2201      	movls	r2, #1
90007eb6:	459c      	cmp	ip, r3
90007eb8:	bf38      	it	cc
90007eba:	2200      	movcc	r2, #0
90007ebc:	9204      	str	r2, [sp, #16]
90007ebe:	e014      	b.n	90007eea <BSP_I2C4_Init+0x292>
90007ec0:	2401f704 	.word	0x2401f704
90007ec4:	2402010c 	.word	0x2402010c
90007ec8:	58001c00 	.word	0x58001c00
90007ecc:	58024400 	.word	0x58024400
90007ed0:	58020c00 	.word	0x58020c00
90007ed4:	3b9aca00 	.word	0x3b9aca00
90007ed8:	24020108 	.word	0x24020108
90007edc:	2401f708 	.word	0x2401f708
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007ee0:	f1be 0f10 	cmp.w	lr, #16
90007ee4:	44b8      	add	r8, r7
90007ee6:	f000 826c 	beq.w	900083c2 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90007eea:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90007eee:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007ef0:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90007ef4:	d3f4      	bcc.n	90007ee0 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90007ef6:	ebbb 0205 	subs.w	r2, fp, r5
90007efa:	bf18      	it	ne
90007efc:	2201      	movne	r2, #1
90007efe:	2c00      	cmp	r4, #0
90007f00:	bf18      	it	ne
90007f02:	2200      	movne	r2, #0
90007f04:	2a00      	cmp	r2, #0
90007f06:	f040 824a 	bne.w	9000839e <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007f0a:	45bc      	cmp	ip, r7
90007f0c:	bf34      	ite	cc
90007f0e:	2200      	movcc	r2, #0
90007f10:	2201      	movcs	r2, #1
90007f12:	42bc      	cmp	r4, r7
90007f14:	bf88      	it	hi
90007f16:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90007f18:	45ab      	cmp	fp, r5
90007f1a:	bf0c      	ite	eq
90007f1c:	2200      	moveq	r2, #0
90007f1e:	f002 0201 	andne.w	r2, r2, #1
90007f22:	2a00      	cmp	r2, #0
90007f24:	f000 80fd 	beq.w	90008122 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f28:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007f2c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007f30:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f32:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007f36:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f3a:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007f3e:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f40:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007f42:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007f44:	f200 81a5 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90007f48:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007f4a:	9906      	ldr	r1, [sp, #24]
90007f4c:	45ab      	cmp	fp, r5
90007f4e:	bf0c      	ite	eq
90007f50:	2100      	moveq	r1, #0
90007f52:	f001 0101 	andne.w	r1, r1, #1
90007f56:	2900      	cmp	r1, #0
90007f58:	f000 80ff 	beq.w	9000815a <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f5c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007f60:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007f64:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f66:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007f6a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f6e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007f72:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f74:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007f76:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007f78:	f200 818b 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90007f7c:	460a      	mov	r2, r1
90007f7e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007f80:	9908      	ldr	r1, [sp, #32]
90007f82:	45ab      	cmp	fp, r5
90007f84:	bf0c      	ite	eq
90007f86:	2100      	moveq	r1, #0
90007f88:	f001 0101 	andne.w	r1, r1, #1
90007f8c:	2900      	cmp	r1, #0
90007f8e:	f000 80ff 	beq.w	90008190 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f92:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007f96:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007f9a:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007f9c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007fa0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fa4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007fa8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007faa:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007fac:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007fae:	f200 8170 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90007fb2:	460a      	mov	r2, r1
90007fb4:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007fb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
90007fb8:	45ab      	cmp	fp, r5
90007fba:	bf0c      	ite	eq
90007fbc:	2100      	moveq	r1, #0
90007fbe:	f001 0101 	andne.w	r1, r1, #1
90007fc2:	2900      	cmp	r1, #0
90007fc4:	f000 80fe 	beq.w	900081c4 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fc8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007fcc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007fd0:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fd2:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007fd6:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fda:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007fde:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007fe0:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007fe2:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007fe4:	f200 8155 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90007fe8:	460a      	mov	r2, r1
90007fea:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007fec:	990d      	ldr	r1, [sp, #52]	; 0x34
90007fee:	45ab      	cmp	fp, r5
90007ff0:	bf0c      	ite	eq
90007ff2:	2100      	moveq	r1, #0
90007ff4:	f001 0101 	andne.w	r1, r1, #1
90007ff8:	2900      	cmp	r1, #0
90007ffa:	f000 80fd 	beq.w	900081f8 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007ffe:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008002:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008006:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008008:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000800c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008010:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008014:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008016:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008018:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000801a:	f200 813a 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
9000801e:	460a      	mov	r2, r1
90008020:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008022:	990f      	ldr	r1, [sp, #60]	; 0x3c
90008024:	45ab      	cmp	fp, r5
90008026:	bf0c      	ite	eq
90008028:	2100      	moveq	r1, #0
9000802a:	f001 0101 	andne.w	r1, r1, #1
9000802e:	2900      	cmp	r1, #0
90008030:	f000 80fc 	beq.w	9000822c <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008034:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008038:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000803c:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000803e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008042:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008046:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000804a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000804c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000804e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008050:	f200 811f 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90008054:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008056:	9e11      	ldr	r6, [sp, #68]	; 0x44
90008058:	455d      	cmp	r5, fp
9000805a:	bf0c      	ite	eq
9000805c:	2600      	moveq	r6, #0
9000805e:	f006 0601 	andne.w	r6, r6, #1
90008062:	2e00      	cmp	r6, #0
90008064:	f000 80fb 	beq.w	9000825e <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008068:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000806c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008070:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008072:	4650      	mov	r0, sl
90008074:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008078:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000807c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008080:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008082:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008084:	f200 8105 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90008088:	4631      	mov	r1, r6
9000808a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000808c:	9e04      	ldr	r6, [sp, #16]
9000808e:	455d      	cmp	r5, fp
90008090:	bf0c      	ite	eq
90008092:	2600      	moveq	r6, #0
90008094:	f006 0601 	andne.w	r6, r6, #1
90008098:	2e00      	cmp	r6, #0
9000809a:	f000 817c 	beq.w	90008396 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000809e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900080a2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900080a6:	4650      	mov	r0, sl
900080a8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
900080ac:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900080b0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900080b4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900080b6:	f04f 030f 	mov.w	r3, #15
900080ba:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900080bc:	f200 80e9 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
900080c0:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900080c2:	e70d      	b.n	90007ee0 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900080c4:	9a07      	ldr	r2, [sp, #28]
900080c6:	9b08      	ldr	r3, [sp, #32]
900080c8:	3214      	adds	r2, #20
900080ca:	3301      	adds	r3, #1
900080cc:	9207      	str	r2, [sp, #28]
900080ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900080d0:	9308      	str	r3, [sp, #32]
900080d2:	4293      	cmp	r3, r2
900080d4:	f040 80ff 	bne.w	900082d6 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
900080d8:	297f      	cmp	r1, #127	; 0x7f
900080da:	d818      	bhi.n	9000810e <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900080dc:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900080e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
900080e2:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900080e6:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900080ea:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900080ec:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900080ee:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900080f0:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900080f4:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900080f8:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900080fc:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900080fe:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008100:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008102:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008106:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008108:	430b      	orrs	r3, r1
9000810a:	4313      	orrs	r3, r2
9000810c:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000810e:	9903      	ldr	r1, [sp, #12]
90008110:	48b5      	ldr	r0, [pc, #724]	; (900083e8 <BSP_I2C4_Init+0x790>)
90008112:	f7ff fd81 	bl	90007c18 <MX_I2C4_Init>
90008116:	2800      	cmp	r0, #0
90008118:	f43f ada8 	beq.w	90007c6c <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
9000811c:	f06f 0007 	mvn.w	r0, #7
  return ret;
90008120:	e5a5      	b.n	90007c6e <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90008122:	4632      	mov	r2, r6
90008124:	9905      	ldr	r1, [sp, #20]
90008126:	45ab      	cmp	fp, r5
90008128:	bf0c      	ite	eq
9000812a:	2100      	moveq	r1, #0
9000812c:	f001 0101 	andne.w	r1, r1, #1
90008130:	2900      	cmp	r1, #0
90008132:	f43f af0a 	beq.w	90007f4a <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008136:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000813a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000813e:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008140:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008144:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008148:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000814c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000814e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008150:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008152:	f200 809e 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
90008156:	460a      	mov	r2, r1
90008158:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000815a:	9907      	ldr	r1, [sp, #28]
9000815c:	45ab      	cmp	fp, r5
9000815e:	bf0c      	ite	eq
90008160:	2100      	moveq	r1, #0
90008162:	f001 0101 	andne.w	r1, r1, #1
90008166:	2900      	cmp	r1, #0
90008168:	f43f af0a 	beq.w	90007f80 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000816c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008170:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008174:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008176:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000817a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000817e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008182:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008184:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008186:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008188:	f200 8083 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
9000818c:	460a      	mov	r2, r1
9000818e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008190:	9909      	ldr	r1, [sp, #36]	; 0x24
90008192:	45ab      	cmp	fp, r5
90008194:	bf0c      	ite	eq
90008196:	2100      	moveq	r1, #0
90008198:	f001 0101 	andne.w	r1, r1, #1
9000819c:	2900      	cmp	r1, #0
9000819e:	f43f af0a 	beq.w	90007fb6 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081a2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900081a6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081aa:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081ac:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081b0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081b4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081b8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081ba:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900081bc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081be:	d868      	bhi.n	90008292 <BSP_I2C4_Init+0x63a>
900081c0:	460a      	mov	r2, r1
900081c2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900081c4:	990c      	ldr	r1, [sp, #48]	; 0x30
900081c6:	45ab      	cmp	fp, r5
900081c8:	bf0c      	ite	eq
900081ca:	2100      	moveq	r1, #0
900081cc:	f001 0101 	andne.w	r1, r1, #1
900081d0:	2900      	cmp	r1, #0
900081d2:	f43f af0b 	beq.w	90007fec <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081d6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900081da:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081de:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081e0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081e4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081e8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900081ec:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900081ee:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900081f0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900081f2:	d84e      	bhi.n	90008292 <BSP_I2C4_Init+0x63a>
900081f4:	460a      	mov	r2, r1
900081f6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900081f8:	990e      	ldr	r1, [sp, #56]	; 0x38
900081fa:	45ab      	cmp	fp, r5
900081fc:	bf0c      	ite	eq
900081fe:	2100      	moveq	r1, #0
90008200:	f001 0101 	andne.w	r1, r1, #1
90008204:	2900      	cmp	r1, #0
90008206:	f43f af0c 	beq.w	90008022 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000820a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000820e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008212:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008214:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008218:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000821c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008220:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008222:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008224:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008226:	d834      	bhi.n	90008292 <BSP_I2C4_Init+0x63a>
90008228:	460a      	mov	r2, r1
9000822a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000822c:	9910      	ldr	r1, [sp, #64]	; 0x40
9000822e:	45ab      	cmp	fp, r5
90008230:	bf0c      	ite	eq
90008232:	2100      	moveq	r1, #0
90008234:	f001 0101 	andne.w	r1, r1, #1
90008238:	2900      	cmp	r1, #0
9000823a:	f000 80ae 	beq.w	9000839a <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000823e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008242:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008246:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008248:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000824c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008250:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008254:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008256:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008258:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000825a:	d81a      	bhi.n	90008292 <BSP_I2C4_Init+0x63a>
9000825c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000825e:	9e12      	ldr	r6, [sp, #72]	; 0x48
90008260:	455d      	cmp	r5, fp
90008262:	bf0c      	ite	eq
90008264:	2600      	moveq	r6, #0
90008266:	f006 0601 	andne.w	r6, r6, #1
9000826a:	2e00      	cmp	r6, #0
9000826c:	f43f af0e 	beq.w	9000808c <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008270:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008274:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008278:	4650      	mov	r0, sl
9000827a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000827e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008282:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008286:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008288:	f04f 030e 	mov.w	r3, #14
9000828c:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000828e:	f67f af17 	bls.w	900080c0 <BSP_I2C4_Init+0x468>
90008292:	4b56      	ldr	r3, [pc, #344]	; (900083ec <BSP_I2C4_Init+0x794>)
90008294:	900b      	str	r0, [sp, #44]	; 0x2c
90008296:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000829a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000829e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900082a0:	f240 4201 	movw	r2, #1025	; 0x401
900082a4:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900082a8:	f640 1ac4 	movw	sl, #2500	; 0x9c4
900082ac:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900082ae:	f240 4b12 	movw	fp, #1042	; 0x412
900082b2:	920d      	str	r2, [sp, #52]	; 0x34
900082b4:	9a02      	ldr	r2, [sp, #8]
900082b6:	4296      	cmp	r6, r2
900082b8:	bf38      	it	cc
900082ba:	4616      	movcc	r6, r2
900082bc:	4a4c      	ldr	r2, [pc, #304]	; (900083f0 <BSP_I2C4_Init+0x798>)
900082be:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900082c0:	2200      	movs	r2, #0
900082c2:	9208      	str	r2, [sp, #32]
900082c4:	f04f 32ff 	mov.w	r2, #4294967295
900082c8:	4611      	mov	r1, r2
900082ca:	f103 0232 	add.w	r2, r3, #50	; 0x32
900082ce:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
900082d2:	920c      	str	r2, [sp, #48]	; 0x30
900082d4:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900082d6:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900082d8:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900082dc:	6818      	ldr	r0, [r3, #0]
900082de:	9b02      	ldr	r3, [sp, #8]
900082e0:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900082e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900082e6:	1a1b      	subs	r3, r3, r0
900082e8:	ea4f 0943 	mov.w	r9, r3, lsl #1
900082ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900082ee:	eb03 0e00 	add.w	lr, r3, r0
900082f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900082f4:	4403      	add	r3, r0
900082f6:	9309      	str	r3, [sp, #36]	; 0x24
900082f8:	e006      	b.n	90008308 <BSP_I2C4_Init+0x6b0>
900082fa:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900082fe:	4486      	add	lr, r0
90008300:	eba9 0900 	sub.w	r9, r9, r0
90008304:	f43f aede 	beq.w	900080c4 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90008308:	f240 5214 	movw	r2, #1300	; 0x514
9000830c:	f8cd 8004 	str.w	r8, [sp, #4]
90008310:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008314:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90008318:	4596      	cmp	lr, r2
9000831a:	d9ee      	bls.n	900082fa <BSP_I2C4_Init+0x6a2>
9000831c:	9a02      	ldr	r2, [sp, #8]
9000831e:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90008322:	d2ea      	bcs.n	900082fa <BSP_I2C4_Init+0x6a2>
90008324:	f640 0c34 	movw	ip, #2100	; 0x834
90008328:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000832a:	f8cd 9018 	str.w	r9, [sp, #24]
9000832e:	2200      	movs	r2, #0
90008330:	ebac 0c03 	sub.w	ip, ip, r3
90008334:	9b09      	ldr	r3, [sp, #36]	; 0x24
90008336:	4689      	mov	r9, r1
90008338:	4473      	add	r3, lr
9000833a:	e9cd e804 	strd	lr, r8, [sp, #16]
9000833e:	f8dd 8020 	ldr.w	r8, [sp, #32]
90008342:	f8dd e01c 	ldr.w	lr, [sp, #28]
90008346:	e005      	b.n	90008354 <BSP_I2C4_Init+0x6fc>
90008348:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000834c:	4403      	add	r3, r0
9000834e:	eba4 0400 	sub.w	r4, r4, r0
90008352:	d01a      	beq.n	9000838a <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008354:	eb0c 0103 	add.w	r1, ip, r3
90008358:	4617      	mov	r7, r2
9000835a:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000835e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008360:	42b1      	cmp	r1, r6
90008362:	d9f1      	bls.n	90008348 <BSP_I2C4_Init+0x6f0>
90008364:	455d      	cmp	r5, fp
90008366:	d8ef      	bhi.n	90008348 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90008368:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000836c:	bf28      	it	cs
9000836e:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90008370:	458a      	cmp	sl, r1
90008372:	d9e9      	bls.n	90008348 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90008374:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008376:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000837a:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000837c:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000837e:	4403      	add	r3, r0
90008380:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90008384:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008388:	d1e4      	bne.n	90008354 <BSP_I2C4_Init+0x6fc>
9000838a:	4649      	mov	r1, r9
9000838c:	f8dd 9018 	ldr.w	r9, [sp, #24]
90008390:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90008394:	e7b1      	b.n	900082fa <BSP_I2C4_Init+0x6a2>
90008396:	460e      	mov	r6, r1
90008398:	e5a2      	b.n	90007ee0 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000839a:	4611      	mov	r1, r2
9000839c:	e65b      	b.n	90008056 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000839e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900083a2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083a6:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083a8:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083ac:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083b0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900083b4:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900083b6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900083b8:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900083ba:	f63f af6a 	bhi.w	90008292 <BSP_I2C4_Init+0x63a>
900083be:	46ab      	mov	fp, r5
900083c0:	e6b0      	b.n	90008124 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900083c2:	3501      	adds	r5, #1
900083c4:	9b02      	ldr	r3, [sp, #8]
900083c6:	2d10      	cmp	r5, #16
900083c8:	441f      	add	r7, r3
900083ca:	f47f acc7 	bne.w	90007d5c <BSP_I2C4_Init+0x104>
900083ce:	b126      	cbz	r6, 900083da <BSP_I2C4_Init+0x782>
900083d0:	4b06      	ldr	r3, [pc, #24]	; (900083ec <BSP_I2C4_Init+0x794>)
900083d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900083d6:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900083da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900083dc:	2b00      	cmp	r3, #0
900083de:	f43f ae96 	beq.w	9000810e <BSP_I2C4_Init+0x4b6>
900083e2:	4b03      	ldr	r3, [pc, #12]	; (900083f0 <BSP_I2C4_Init+0x798>)
900083e4:	930b      	str	r3, [sp, #44]	; 0x2c
900083e6:	e75a      	b.n	9000829e <BSP_I2C4_Init+0x646>
900083e8:	2402010c 	.word	0x2402010c
900083ec:	24020108 	.word	0x24020108
900083f0:	2401f708 	.word	0x2401f708

900083f4 <BSP_I2C4_WriteReg>:
{
900083f4:	b530      	push	{r4, r5, lr}
900083f6:	4614      	mov	r4, r2
900083f8:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900083fa:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900083fe:	460a      	mov	r2, r1
90008400:	9301      	str	r3, [sp, #4]
90008402:	4601      	mov	r1, r0
90008404:	2301      	movs	r3, #1
90008406:	4809      	ldr	r0, [pc, #36]	; (9000842c <BSP_I2C4_WriteReg+0x38>)
90008408:	9502      	str	r5, [sp, #8]
9000840a:	9400      	str	r4, [sp, #0]
9000840c:	f001 f958 	bl	900096c0 <HAL_I2C_Mem_Write>
90008410:	b908      	cbnz	r0, 90008416 <BSP_I2C4_WriteReg+0x22>
}
90008412:	b005      	add	sp, #20
90008414:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008416:	4805      	ldr	r0, [pc, #20]	; (9000842c <BSP_I2C4_WriteReg+0x38>)
90008418:	f001 fbf4 	bl	90009c04 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000841c:	2804      	cmp	r0, #4
9000841e:	bf0c      	ite	eq
90008420:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008424:	f06f 0003 	mvnne.w	r0, #3
90008428:	e7f3      	b.n	90008412 <BSP_I2C4_WriteReg+0x1e>
9000842a:	bf00      	nop
9000842c:	2402010c 	.word	0x2402010c

90008430 <BSP_I2C4_ReadReg>:
{
90008430:	b530      	push	{r4, r5, lr}
90008432:	4614      	mov	r4, r2
90008434:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90008436:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000843a:	460a      	mov	r2, r1
9000843c:	9301      	str	r3, [sp, #4]
9000843e:	4601      	mov	r1, r0
90008440:	2301      	movs	r3, #1
90008442:	4809      	ldr	r0, [pc, #36]	; (90008468 <BSP_I2C4_ReadReg+0x38>)
90008444:	9502      	str	r5, [sp, #8]
90008446:	9400      	str	r4, [sp, #0]
90008448:	f001 fa6e 	bl	90009928 <HAL_I2C_Mem_Read>
9000844c:	b908      	cbnz	r0, 90008452 <BSP_I2C4_ReadReg+0x22>
}
9000844e:	b005      	add	sp, #20
90008450:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008452:	4805      	ldr	r0, [pc, #20]	; (90008468 <BSP_I2C4_ReadReg+0x38>)
90008454:	f001 fbd6 	bl	90009c04 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90008458:	2804      	cmp	r0, #4
9000845a:	bf0c      	ite	eq
9000845c:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008460:	f06f 0003 	mvnne.w	r0, #3
90008464:	e7f3      	b.n	9000844e <BSP_I2C4_ReadReg+0x1e>
90008466:	bf00      	nop
90008468:	2402010c 	.word	0x2402010c

9000846c <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000846c:	f000 baaa 	b.w	900089c4 <HAL_GetTick>

90008470 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90008470:	b970      	cbnz	r0, 90008490 <BSP_SDRAM_DeInit+0x20>
{
90008472:	b510      	push	{r4, lr}
90008474:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90008476:	4808      	ldr	r0, [pc, #32]	; (90008498 <BSP_SDRAM_DeInit+0x28>)
90008478:	f005 f876 	bl	9000d568 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000847c:	207a      	movs	r0, #122	; 0x7a
9000847e:	f000 fb0b 	bl	90008a98 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008482:	4b06      	ldr	r3, [pc, #24]	; (9000849c <BSP_SDRAM_DeInit+0x2c>)
90008484:	4806      	ldr	r0, [pc, #24]	; (900084a0 <BSP_SDRAM_DeInit+0x30>)
90008486:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90008488:	f003 f98e 	bl	9000b7a8 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000848c:	4620      	mov	r0, r4
}
9000848e:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90008490:	f06f 0001 	mvn.w	r0, #1
}
90008494:	4770      	bx	lr
90008496:	bf00      	nop
90008498:	24020160 	.word	0x24020160
9000849c:	52000040 	.word	0x52000040
900084a0:	24020194 	.word	0x24020194

900084a4 <MX_SDRAM_BANK2_Init>:
{
900084a4:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900084a6:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
900084a8:	2200      	movs	r2, #0
{
900084aa:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
900084ac:	4c13      	ldr	r4, [pc, #76]	; (900084fc <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
900084ae:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900084b0:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900084b2:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
900084b4:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900084b6:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900084b8:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900084ba:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900084bc:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
900084c0:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900084c2:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900084c4:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
900084c6:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900084c8:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900084ca:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900084ce:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900084d0:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900084d4:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900084d6:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900084d8:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900084dc:	2204      	movs	r2, #4
900084de:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900084e2:	2202      	movs	r2, #2
900084e4:	2302      	movs	r3, #2
900084e6:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900084ea:	4b05      	ldr	r3, [pc, #20]	; (90008500 <MX_SDRAM_BANK2_Init+0x5c>)
900084ec:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900084ee:	f005 f811 	bl	9000d514 <HAL_SDRAM_Init>
}
900084f2:	3800      	subs	r0, #0
900084f4:	bf18      	it	ne
900084f6:	2001      	movne	r0, #1
900084f8:	b009      	add	sp, #36	; 0x24
900084fa:	bd30      	pop	{r4, r5, pc}
900084fc:	24020160 	.word	0x24020160
90008500:	52004140 	.word	0x52004140

90008504 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90008504:	2800      	cmp	r0, #0
90008506:	f040 80d2 	bne.w	900086ae <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000850a:	4b6c      	ldr	r3, [pc, #432]	; (900086bc <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000850c:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000850e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008512:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90008516:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90008518:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
9000851c:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
9000851e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008522:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008524:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008528:	4c65      	ldr	r4, [pc, #404]	; (900086c0 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000852a:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000852e:	4e65      	ldr	r6, [pc, #404]	; (900086c4 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008530:	9201      	str	r2, [sp, #4]
90008532:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90008534:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008538:	f042 0201 	orr.w	r2, r2, #1
9000853c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90008540:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008544:	f002 0201 	and.w	r2, r2, #1
90008548:	9202      	str	r2, [sp, #8]
9000854a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000854c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008550:	f042 0208 	orr.w	r2, r2, #8
90008554:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008558:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000855c:	f002 0208 	and.w	r2, r2, #8
90008560:	9203      	str	r2, [sp, #12]
90008562:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90008564:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008568:	f042 0210 	orr.w	r2, r2, #16
9000856c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008570:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008574:	f002 0210 	and.w	r2, r2, #16
90008578:	9204      	str	r2, [sp, #16]
9000857a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000857c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008580:	f042 0220 	orr.w	r2, r2, #32
90008584:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008588:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000858c:	f002 0220 	and.w	r2, r2, #32
90008590:	9205      	str	r2, [sp, #20]
90008592:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90008594:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008598:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000859c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900085a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900085a4:	f002 0240 	and.w	r2, r2, #64	; 0x40
900085a8:	9206      	str	r2, [sp, #24]
900085aa:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900085ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900085b0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900085b4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900085b8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900085bc:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900085be:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
900085c0:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900085c4:	e9cd 0108 	strd	r0, r1, [sp, #32]
900085c8:	2001      	movs	r0, #1
900085ca:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
900085cc:	9307      	str	r3, [sp, #28]
900085ce:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900085d0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900085d4:	a908      	add	r1, sp, #32
900085d6:	483c      	ldr	r0, [pc, #240]	; (900086c8 <BSP_SDRAM_Init+0x1c4>)
900085d8:	f000 fc7e 	bl	90008ed8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900085dc:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900085e0:	a908      	add	r1, sp, #32
900085e2:	483a      	ldr	r0, [pc, #232]	; (900086cc <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900085e4:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900085e6:	f000 fc77 	bl	90008ed8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900085ea:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900085ee:	a908      	add	r1, sp, #32
900085f0:	4837      	ldr	r0, [pc, #220]	; (900086d0 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900085f2:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900085f4:	f000 fc70 	bl	90008ed8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900085f8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900085fc:	a908      	add	r1, sp, #32
900085fe:	4835      	ldr	r0, [pc, #212]	; (900086d4 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008600:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008602:	f000 fc69 	bl	90008ed8 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008606:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008608:	a908      	add	r1, sp, #32
9000860a:	4833      	ldr	r0, [pc, #204]	; (900086d8 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000860c:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000860e:	f000 fc63 	bl	90008ed8 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008612:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008614:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008618:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000861c:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000861e:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90008620:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008622:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008624:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008628:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000862a:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000862c:	4a2b      	ldr	r2, [pc, #172]	; (900086dc <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000862e:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008630:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008632:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008634:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90008638:	f640 0308 	movw	r3, #2056	; 0x808
9000863c:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000863e:	2320      	movs	r3, #32
90008640:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90008642:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90008646:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000864a:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
9000864c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90008650:	f003 f8aa 	bl	9000b7a8 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90008654:	4620      	mov	r0, r4
90008656:	f003 f82d 	bl	9000b6b4 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000865a:	462a      	mov	r2, r5
9000865c:	210f      	movs	r1, #15
9000865e:	207a      	movs	r0, #122	; 0x7a
90008660:	f000 f9ce 	bl	90008a00 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90008664:	207a      	movs	r0, #122	; 0x7a
90008666:	f000 fa09 	bl	90008a7c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000866a:	2210      	movs	r2, #16
9000866c:	2104      	movs	r1, #4
9000866e:	4630      	mov	r0, r6
90008670:	f7ff ff18 	bl	900084a4 <MX_SDRAM_BANK2_Init>
90008674:	b9f0      	cbnz	r0, 900086b4 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90008676:	491a      	ldr	r1, [pc, #104]	; (900086e0 <BSP_SDRAM_Init+0x1dc>)
90008678:	2208      	movs	r2, #8
9000867a:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000867c:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000867e:	e9c1 2300 	strd	r2, r3, [r1]
90008682:	f240 6203 	movw	r2, #1539	; 0x603
90008686:	2300      	movs	r3, #0
90008688:	e9c1 2302 	strd	r2, r3, [r1, #8]
9000868c:	2200      	movs	r2, #0
9000868e:	2330      	movs	r3, #48	; 0x30
90008690:	e9c1 2304 	strd	r2, r3, [r1, #16]
90008694:	2200      	movs	r2, #0
90008696:	f44f 7300 	mov.w	r3, #512	; 0x200
9000869a:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000869e:	f7ff fa37 	bl	90007b10 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
900086a2:	2800      	cmp	r0, #0
900086a4:	bf18      	it	ne
900086a6:	f06f 0004 	mvnne.w	r0, #4
}
900086aa:	b00e      	add	sp, #56	; 0x38
900086ac:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900086ae:	f06f 0001 	mvn.w	r0, #1
}
900086b2:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900086b4:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900086b8:	e7f7      	b.n	900086aa <BSP_SDRAM_Init+0x1a6>
900086ba:	bf00      	nop
900086bc:	58024400 	.word	0x58024400
900086c0:	24020200 	.word	0x24020200
900086c4:	24020160 	.word	0x24020160
900086c8:	58020c00 	.word	0x58020c00
900086cc:	58021000 	.word	0x58021000
900086d0:	58021400 	.word	0x58021400
900086d4:	58021800 	.word	0x58021800
900086d8:	58021c00 	.word	0x58021c00
900086dc:	52000040 	.word	0x52000040
900086e0:	24020270 	.word	0x24020270

900086e4 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900086e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900086e8:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900086ea:	2800      	cmp	r0, #0
900086ec:	d16b      	bne.n	900087c6 <BSP_TS_Init+0xe2>
900086ee:	680b      	ldr	r3, [r1, #0]
900086f0:	460c      	mov	r4, r1
900086f2:	1e5a      	subs	r2, r3, #1
900086f4:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900086f8:	d265      	bcs.n	900087c6 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900086fa:	684a      	ldr	r2, [r1, #4]
900086fc:	1e51      	subs	r1, r2, #1
900086fe:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90008702:	d260      	bcs.n	900087c6 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90008704:	4293      	cmp	r3, r2
90008706:	bf28      	it	cs
90008708:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000870a:	68e2      	ldr	r2, [r4, #12]
9000870c:	429a      	cmp	r2, r3
9000870e:	d85a      	bhi.n	900087c6 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90008710:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90008712:	4b31      	ldr	r3, [pc, #196]	; (900087d8 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008714:	4d31      	ldr	r5, [pc, #196]	; (900087dc <BSP_TS_Init+0xf8>)
90008716:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90008718:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000871c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000871e:	4a30      	ldr	r2, [pc, #192]	; (900087e0 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008720:	4b30      	ldr	r3, [pc, #192]	; (900087e4 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90008722:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008724:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90008726:	4a30      	ldr	r2, [pc, #192]	; (900087e8 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90008728:	4b30      	ldr	r3, [pc, #192]	; (900087ec <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000872a:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000872c:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000872e:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90008730:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008732:	f7ff f93f 	bl	900079b4 <FT5336_RegisterBusIO>
90008736:	2800      	cmp	r0, #0
90008738:	d14b      	bne.n	900087d2 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000873a:	a901      	add	r1, sp, #4
9000873c:	4628      	mov	r0, r5
9000873e:	f7ff f82f 	bl	900077a0 <FT5336_ReadID>
90008742:	2800      	cmp	r0, #0
90008744:	d145      	bne.n	900087d2 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90008746:	9b01      	ldr	r3, [sp, #4]
90008748:	2b51      	cmp	r3, #81	; 0x51
9000874a:	d142      	bne.n	900087d2 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000874c:	4b28      	ldr	r3, [pc, #160]	; (900087f0 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000874e:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90008750:	4f28      	ldr	r7, [pc, #160]	; (900087f4 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008752:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 900087fc <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90008756:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008758:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000875c:	681b      	ldr	r3, [r3, #0]
9000875e:	4798      	blx	r3
90008760:	4606      	mov	r6, r0
90008762:	2800      	cmp	r0, #0
90008764:	d135      	bne.n	900087d2 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008766:	4d24      	ldr	r5, [pc, #144]	; (900087f8 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008768:	a902      	add	r1, sp, #8
9000876a:	6838      	ldr	r0, [r7, #0]
9000876c:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008770:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008774:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008776:	e9c5 7200 	strd	r7, r2, [r5]
9000877a:	68a2      	ldr	r2, [r4, #8]
9000877c:	60aa      	str	r2, [r5, #8]
9000877e:	68e2      	ldr	r2, [r4, #12]
90008780:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008782:	4798      	blx	r3
90008784:	2800      	cmp	r0, #0
90008786:	db18      	blt.n	900087ba <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90008788:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000878c:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008790:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008792:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008796:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008798:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000879a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000879c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000879e:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900087a2:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900087a6:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900087a8:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900087aa:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900087ac:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900087ae:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900087b0:	63eb      	str	r3, [r5, #60]	; 0x3c
}
900087b2:	4630      	mov	r0, r6
900087b4:	b008      	add	sp, #32
900087b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900087ba:	f06f 0604 	mvn.w	r6, #4
}
900087be:	4630      	mov	r0, r6
900087c0:	b008      	add	sp, #32
900087c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900087c6:	f06f 0601 	mvn.w	r6, #1
}
900087ca:	4630      	mov	r0, r6
900087cc:	b008      	add	sp, #32
900087ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
900087d2:	f04f 36ff 	mov.w	r6, #4294967295
900087d6:	e7ec      	b.n	900087b2 <BSP_TS_Init+0xce>
900087d8:	90007c59 	.word	0x90007c59
900087dc:	24020290 	.word	0x24020290
900087e0:	90007bc5 	.word	0x90007bc5
900087e4:	90008431 	.word	0x90008431
900087e8:	900083f5 	.word	0x900083f5
900087ec:	9000846d 	.word	0x9000846d
900087f0:	2400003c 	.word	0x2400003c
900087f4:	240202b8 	.word	0x240202b8
900087f8:	240202bc 	.word	0x240202bc
900087fc:	240202fc 	.word	0x240202fc

90008800 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90008800:	2800      	cmp	r0, #0
90008802:	d157      	bne.n	900088b4 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008804:	4b2d      	ldr	r3, [pc, #180]	; (900088bc <BSP_TS_GetState+0xbc>)
90008806:	4a2e      	ldr	r2, [pc, #184]	; (900088c0 <BSP_TS_GetState+0xc0>)
90008808:	681b      	ldr	r3, [r3, #0]
9000880a:	6810      	ldr	r0, [r2, #0]
9000880c:	691b      	ldr	r3, [r3, #16]
{
9000880e:	b5f0      	push	{r4, r5, r6, r7, lr}
90008810:	b085      	sub	sp, #20
90008812:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008814:	a901      	add	r1, sp, #4
90008816:	4798      	blx	r3
90008818:	2800      	cmp	r0, #0
9000881a:	db41      	blt.n	900088a0 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
9000881c:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000881e:	4b29      	ldr	r3, [pc, #164]	; (900088c4 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
90008820:	b93d      	cbnz	r5, 90008832 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90008822:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90008824:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90008826:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90008828:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000882a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000882e:	b005      	add	sp, #20
90008830:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008832:	6898      	ldr	r0, [r3, #8]
90008834:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90008836:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000883a:	d435      	bmi.n	900088a8 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000883c:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
9000883e:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008840:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008842:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008846:	bf1c      	itt	ne
90008848:	f106 32ff 	addne.w	r2, r6, #4294967295
9000884c:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90008850:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90008854:	6958      	ldr	r0, [r3, #20]
90008856:	bf18      	it	ne
90008858:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000885a:	681f      	ldr	r7, [r3, #0]
9000885c:	fb07 f202 	mul.w	r2, r7, r2
90008860:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008864:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90008866:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008868:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000886c:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000886e:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008870:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008872:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008874:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008878:	bf8c      	ite	hi
9000887a:	1b90      	subhi	r0, r2, r6
9000887c:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000887e:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008880:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008882:	bf8c      	ite	hi
90008884:	1b4f      	subhi	r7, r1, r5
90008886:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008888:	42b8      	cmp	r0, r7
9000888a:	bf38      	it	cc
9000888c:	4638      	movcc	r0, r7
9000888e:	68df      	ldr	r7, [r3, #12]
90008890:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90008892:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008896:	d20a      	bcs.n	900088ae <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90008898:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
9000889a:	62d9      	str	r1, [r3, #44]	; 0x2c
}
9000889c:	b005      	add	sp, #20
9000889e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
900088a0:	f06f 0004 	mvn.w	r0, #4
}
900088a4:	b005      	add	sp, #20
900088a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
900088a8:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
900088aa:	463a      	mov	r2, r7
900088ac:	e7c8      	b.n	90008840 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900088ae:	e9c4 6501 	strd	r6, r5, [r4, #4]
900088b2:	e7bc      	b.n	9000882e <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
900088b4:	f06f 0001 	mvn.w	r0, #1
}
900088b8:	4770      	bx	lr
900088ba:	bf00      	nop
900088bc:	240202fc 	.word	0x240202fc
900088c0:	240202b8 	.word	0x240202b8
900088c4:	240202bc 	.word	0x240202bc

900088c8 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900088c8:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900088ca:	4c19      	ldr	r4, [pc, #100]	; (90008930 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900088cc:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900088ce:	4b19      	ldr	r3, [pc, #100]	; (90008934 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900088d0:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
900088d4:	4818      	ldr	r0, [pc, #96]	; (90008938 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900088d6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
900088da:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
900088de:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900088e0:	4c16      	ldr	r4, [pc, #88]	; (9000893c <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900088e2:	f041 0101 	orr.w	r1, r1, #1
900088e6:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
900088e8:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900088ea:	6819      	ldr	r1, [r3, #0]
900088ec:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900088ee:	4914      	ldr	r1, [pc, #80]	; (90008940 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
900088f0:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900088f2:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900088f4:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900088f6:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900088f8:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
900088fa:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
900088fc:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
900088fe:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90008900:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90008902:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90008904:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90008906:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90008908:	6818      	ldr	r0, [r3, #0]
9000890a:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
9000890e:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90008910:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008912:	6823      	ldr	r3, [r4, #0]
90008914:	4019      	ands	r1, r3
90008916:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000891a:	d203      	bcs.n	90008924 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000891c:	4b09      	ldr	r3, [pc, #36]	; (90008944 <SystemInit+0x7c>)
9000891e:	2201      	movs	r2, #1
90008920:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008924:	4a08      	ldr	r2, [pc, #32]	; (90008948 <SystemInit+0x80>)
90008926:	4b02      	ldr	r3, [pc, #8]	; (90008930 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90008928:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000892c:	609a      	str	r2, [r3, #8]
}
9000892e:	4770      	bx	lr
90008930:	e000ed00 	.word	0xe000ed00
90008934:	58024400 	.word	0x58024400
90008938:	eaf6ed7f 	.word	0xeaf6ed7f
9000893c:	5c001000 	.word	0x5c001000
90008940:	ffff0000 	.word	0xffff0000
90008944:	51008000 	.word	0x51008000
90008948:	90000000 	.word	0x90000000

9000894c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000894c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000894e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008950:	4c12      	ldr	r4, [pc, #72]	; (9000899c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008952:	f000 f843 	bl	900089dc <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008956:	f003 fc65 	bl	9000c224 <HAL_RCC_GetSysClockFreq>
9000895a:	4b11      	ldr	r3, [pc, #68]	; (900089a0 <HAL_Init+0x54>)
9000895c:	4911      	ldr	r1, [pc, #68]	; (900089a4 <HAL_Init+0x58>)
9000895e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008960:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008962:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008966:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000896a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000896c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000896e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008972:	490d      	ldr	r1, [pc, #52]	; (900089a8 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008974:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008978:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000897a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000897e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008980:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008982:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008984:	f7fa fd2a 	bl	900033dc <HAL_InitTick>
90008988:	b110      	cbz	r0, 90008990 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000898a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000898c:	4620      	mov	r0, r4
9000898e:	bd10      	pop	{r4, pc}
90008990:	4604      	mov	r4, r0
  HAL_MspInit();
90008992:	f7fa fae1 	bl	90002f58 <HAL_MspInit>
}
90008996:	4620      	mov	r0, r4
90008998:	bd10      	pop	{r4, pc}
9000899a:	bf00      	nop
9000899c:	24000070 	.word	0x24000070
900089a0:	58024400 	.word	0x58024400
900089a4:	9002b000 	.word	0x9002b000
900089a8:	2400006c 	.word	0x2400006c

900089ac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
900089ac:	4a03      	ldr	r2, [pc, #12]	; (900089bc <HAL_IncTick+0x10>)
900089ae:	4b04      	ldr	r3, [pc, #16]	; (900089c0 <HAL_IncTick+0x14>)
900089b0:	6811      	ldr	r1, [r2, #0]
900089b2:	781b      	ldrb	r3, [r3, #0]
900089b4:	440b      	add	r3, r1
900089b6:	6013      	str	r3, [r2, #0]
}
900089b8:	4770      	bx	lr
900089ba:	bf00      	nop
900089bc:	24020300 	.word	0x24020300
900089c0:	24000074 	.word	0x24000074

900089c4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
900089c4:	4b01      	ldr	r3, [pc, #4]	; (900089cc <HAL_GetTick+0x8>)
900089c6:	6818      	ldr	r0, [r3, #0]
}
900089c8:	4770      	bx	lr
900089ca:	bf00      	nop
900089cc:	24020300 	.word	0x24020300

900089d0 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
900089d0:	4b01      	ldr	r3, [pc, #4]	; (900089d8 <HAL_GetREVID+0x8>)
900089d2:	6818      	ldr	r0, [r3, #0]
}
900089d4:	0c00      	lsrs	r0, r0, #16
900089d6:	4770      	bx	lr
900089d8:	5c001000 	.word	0x5c001000

900089dc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900089dc:	4906      	ldr	r1, [pc, #24]	; (900089f8 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900089de:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900089e2:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900089e4:	4b05      	ldr	r3, [pc, #20]	; (900089fc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900089e6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900089e8:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900089ec:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900089f0:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900089f2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900089f4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900089f6:	4770      	bx	lr
900089f8:	e000ed00 	.word	0xe000ed00
900089fc:	05fa0000 	.word	0x05fa0000

90008a00 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90008a00:	4b1b      	ldr	r3, [pc, #108]	; (90008a70 <HAL_NVIC_SetPriority+0x70>)
90008a02:	68db      	ldr	r3, [r3, #12]
90008a04:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90008a08:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008a0a:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008a0e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90008a12:	f1be 0f04 	cmp.w	lr, #4
90008a16:	bf28      	it	cs
90008a18:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008a1c:	f1bc 0f06 	cmp.w	ip, #6
90008a20:	d91a      	bls.n	90008a58 <HAL_NVIC_SetPriority+0x58>
90008a22:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90008a24:	f04f 3cff 	mov.w	ip, #4294967295
90008a28:	fa0c fc03 	lsl.w	ip, ip, r3
90008a2c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008a30:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90008a34:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90008a36:	fa0c fc0e 	lsl.w	ip, ip, lr
90008a3a:	ea21 010c 	bic.w	r1, r1, ip
90008a3e:	fa01 f103 	lsl.w	r1, r1, r3
90008a42:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90008a46:	db0a      	blt.n	90008a5e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008a48:	0109      	lsls	r1, r1, #4
90008a4a:	4b0a      	ldr	r3, [pc, #40]	; (90008a74 <HAL_NVIC_SetPriority+0x74>)
90008a4c:	b2c9      	uxtb	r1, r1
90008a4e:	4403      	add	r3, r0
90008a50:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008a54:	f85d fb04 	ldr.w	pc, [sp], #4
90008a58:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90008a5a:	4613      	mov	r3, r2
90008a5c:	e7e8      	b.n	90008a30 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008a5e:	f000 000f 	and.w	r0, r0, #15
90008a62:	0109      	lsls	r1, r1, #4
90008a64:	4b04      	ldr	r3, [pc, #16]	; (90008a78 <HAL_NVIC_SetPriority+0x78>)
90008a66:	b2c9      	uxtb	r1, r1
90008a68:	4403      	add	r3, r0
90008a6a:	7619      	strb	r1, [r3, #24]
90008a6c:	f85d fb04 	ldr.w	pc, [sp], #4
90008a70:	e000ed00 	.word	0xe000ed00
90008a74:	e000e100 	.word	0xe000e100
90008a78:	e000ecfc 	.word	0xe000ecfc

90008a7c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008a7c:	2800      	cmp	r0, #0
90008a7e:	db07      	blt.n	90008a90 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008a80:	2301      	movs	r3, #1
90008a82:	f000 011f 	and.w	r1, r0, #31
90008a86:	4a03      	ldr	r2, [pc, #12]	; (90008a94 <HAL_NVIC_EnableIRQ+0x18>)
90008a88:	0940      	lsrs	r0, r0, #5
90008a8a:	408b      	lsls	r3, r1
90008a8c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90008a90:	4770      	bx	lr
90008a92:	bf00      	nop
90008a94:	e000e100 	.word	0xe000e100

90008a98 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008a98:	2800      	cmp	r0, #0
90008a9a:	db0c      	blt.n	90008ab6 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008a9c:	0943      	lsrs	r3, r0, #5
90008a9e:	2201      	movs	r2, #1
90008aa0:	f000 001f 	and.w	r0, r0, #31
90008aa4:	4904      	ldr	r1, [pc, #16]	; (90008ab8 <HAL_NVIC_DisableIRQ+0x20>)
90008aa6:	3320      	adds	r3, #32
90008aa8:	4082      	lsls	r2, r0
90008aaa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90008aae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008ab2:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008ab6:	4770      	bx	lr
90008ab8:	e000e100 	.word	0xe000e100

90008abc <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90008abc:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008ac0:	4b04      	ldr	r3, [pc, #16]	; (90008ad4 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90008ac2:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008ac4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90008ac6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90008aca:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90008acc:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
90008ad0:	4770      	bx	lr
90008ad2:	bf00      	nop
90008ad4:	e000ed00 	.word	0xe000ed00

90008ad8 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008ad8:	4b06      	ldr	r3, [pc, #24]	; (90008af4 <HAL_MPU_Enable+0x1c>)
90008ada:	f040 0001 	orr.w	r0, r0, #1
90008ade:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90008ae2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90008ae4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90008ae8:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008aea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008aee:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90008af2:	4770      	bx	lr
90008af4:	e000ed00 	.word	0xe000ed00

90008af8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008af8:	4a17      	ldr	r2, [pc, #92]	; (90008b58 <HAL_MPU_ConfigRegion+0x60>)
90008afa:	7843      	ldrb	r3, [r0, #1]
90008afc:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90008b00:	7801      	ldrb	r1, [r0, #0]
90008b02:	b321      	cbz	r1, 90008b4e <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90008b04:	6843      	ldr	r3, [r0, #4]
{
90008b06:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90008b08:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008b0c:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008b0e:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008b12:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90008b14:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008b18:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008b1c:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b20:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90008b22:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b24:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90008b28:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b2c:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90008b30:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008b34:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90008b38:	7a01      	ldrb	r1, [r0, #8]
90008b3a:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90008b3e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008b42:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008b46:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90008b4a:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90008b4e:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90008b52:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90008b56:	4770      	bx	lr
90008b58:	e000ed00 	.word	0xe000ed00

90008b5c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008b5c:	2800      	cmp	r0, #0
90008b5e:	d036      	beq.n	90008bce <HAL_CRC_Init+0x72>
{
90008b60:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90008b62:	7f43      	ldrb	r3, [r0, #29]
90008b64:	4604      	mov	r4, r0
90008b66:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90008b6a:	b363      	cbz	r3, 90008bc6 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008b6c:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008b6e:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008b70:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008b72:	b9f3      	cbnz	r3, 90008bb2 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90008b74:	6823      	ldr	r3, [r4, #0]
90008b76:	4a17      	ldr	r2, [pc, #92]	; (90008bd4 <HAL_CRC_Init+0x78>)
90008b78:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008b7a:	689a      	ldr	r2, [r3, #8]
90008b7c:	f022 0218 	bic.w	r2, r2, #24
90008b80:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90008b82:	7962      	ldrb	r2, [r4, #5]
90008b84:	b18a      	cbz	r2, 90008baa <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90008b86:	6922      	ldr	r2, [r4, #16]
90008b88:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008b8a:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008b8c:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008b90:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90008b94:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90008b96:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008b98:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008b9a:	689a      	ldr	r2, [r3, #8]
90008b9c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90008ba0:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90008ba2:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008ba4:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90008ba6:	7761      	strb	r1, [r4, #29]
}
90008ba8:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008baa:	f04f 32ff 	mov.w	r2, #4294967295
90008bae:	611a      	str	r2, [r3, #16]
90008bb0:	e7eb      	b.n	90008b8a <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90008bb2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90008bb6:	4620      	mov	r0, r4
90008bb8:	f000 f80e 	bl	90008bd8 <HAL_CRCEx_Polynomial_Set>
90008bbc:	b908      	cbnz	r0, 90008bc2 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008bbe:	6823      	ldr	r3, [r4, #0]
90008bc0:	e7df      	b.n	90008b82 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90008bc2:	2001      	movs	r0, #1
}
90008bc4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90008bc6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008bc8:	f7fa f9e0 	bl	90002f8c <HAL_CRC_MspInit>
90008bcc:	e7ce      	b.n	90008b6c <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008bce:	2001      	movs	r0, #1
}
90008bd0:	4770      	bx	lr
90008bd2:	bf00      	nop
90008bd4:	04c11db7 	.word	0x04c11db7

90008bd8 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008bd8:	07cb      	lsls	r3, r1, #31
90008bda:	d51a      	bpl.n	90008c12 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008bdc:	231e      	movs	r3, #30
{
90008bde:	b410      	push	{r4}
90008be0:	e001      	b.n	90008be6 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008be2:	3b01      	subs	r3, #1
90008be4:	d317      	bcc.n	90008c16 <HAL_CRCEx_Polynomial_Set+0x3e>
90008be6:	fa21 fc03 	lsr.w	ip, r1, r3
90008bea:	f01c 0f01 	tst.w	ip, #1
90008bee:	d0f8      	beq.n	90008be2 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
90008bf0:	2a18      	cmp	r2, #24
90008bf2:	d811      	bhi.n	90008c18 <HAL_CRCEx_Polynomial_Set+0x40>
90008bf4:	e8df f002 	tbb	[pc, r2]
90008bf8:	10101016 	.word	0x10101016
90008bfc:	10101010 	.word	0x10101010
90008c00:	10101024 	.word	0x10101024
90008c04:	10101010 	.word	0x10101010
90008c08:	10101021 	.word	0x10101021
90008c0c:	10101010 	.word	0x10101010
90008c10:	14          	.byte	0x14
90008c11:	00          	.byte	0x00
    status =  HAL_ERROR;
90008c12:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90008c14:	4770      	bx	lr
    switch (PolyLength)
90008c16:	b12a      	cbz	r2, 90008c24 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
90008c18:	2001      	movs	r0, #1
}
90008c1a:	f85d 4b04 	ldr.w	r4, [sp], #4
90008c1e:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90008c20:	2b06      	cmp	r3, #6
90008c22:	d8f9      	bhi.n	90008c18 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008c24:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008c26:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90008c28:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90008c2a:	68a3      	ldr	r3, [r4, #8]
90008c2c:	f023 0318 	bic.w	r3, r3, #24
90008c30:	4313      	orrs	r3, r2
90008c32:	60a3      	str	r3, [r4, #8]
}
90008c34:	f85d 4b04 	ldr.w	r4, [sp], #4
90008c38:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90008c3a:	2b07      	cmp	r3, #7
90008c3c:	d9f2      	bls.n	90008c24 <HAL_CRCEx_Polynomial_Set+0x4c>
90008c3e:	e7eb      	b.n	90008c18 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90008c40:	2b0f      	cmp	r3, #15
90008c42:	d9ef      	bls.n	90008c24 <HAL_CRCEx_Polynomial_Set+0x4c>
90008c44:	e7e8      	b.n	90008c18 <HAL_CRCEx_Polynomial_Set+0x40>
90008c46:	bf00      	nop

90008c48 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90008c48:	2800      	cmp	r0, #0
90008c4a:	d035      	beq.n	90008cb8 <HAL_DMA2D_Init+0x70>
{
90008c4c:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90008c4e:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90008c52:	4604      	mov	r4, r0
90008c54:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90008c58:	b34b      	cbz	r3, 90008cae <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c5a:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008c5c:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c5e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008c60:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c64:	69e1      	ldr	r1, [r4, #28]
90008c66:	681d      	ldr	r5, [r3, #0]
90008c68:	4814      	ldr	r0, [pc, #80]	; (90008cbc <HAL_DMA2D_Init+0x74>)
90008c6a:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008c6c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c6e:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008c70:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c72:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008c74:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008c76:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008c78:	4302      	orrs	r2, r0
90008c7a:	6b59      	ldr	r1, [r3, #52]	; 0x34
90008c7c:	4810      	ldr	r0, [pc, #64]	; (90008cc0 <HAL_DMA2D_Init+0x78>)
90008c7e:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008c80:	4910      	ldr	r1, [pc, #64]	; (90008cc4 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008c82:	4302      	orrs	r2, r0
90008c84:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008c86:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90008c88:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008c8a:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008c8e:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008c90:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008c92:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008c94:	6b59      	ldr	r1, [r3, #52]	; 0x34
90008c96:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008c9a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008c9c:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90008ca0:	430a      	orrs	r2, r1
90008ca2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008ca4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008ca6:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008ca8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90008cac:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008cae:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90008cb2:	f7fa f983 	bl	90002fbc <HAL_DMA2D_MspInit>
90008cb6:	e7d0      	b.n	90008c5a <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008cb8:	2001      	movs	r0, #1
}
90008cba:	4770      	bx	lr
90008cbc:	fff8ffbf 	.word	0xfff8ffbf
90008cc0:	fffffef8 	.word	0xfffffef8
90008cc4:	ffff0000 	.word	0xffff0000

90008cc8 <HAL_DMA2D_LineEventCallback>:
90008cc8:	4770      	bx	lr
90008cca:	bf00      	nop

90008ccc <HAL_DMA2D_CLUTLoadingCpltCallback>:
90008ccc:	4770      	bx	lr
90008cce:	bf00      	nop

90008cd0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008cd0:	6803      	ldr	r3, [r0, #0]
{
90008cd2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008cd4:	685d      	ldr	r5, [r3, #4]
{
90008cd6:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008cd8:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008cda:	07ea      	lsls	r2, r5, #31
90008cdc:	d501      	bpl.n	90008ce2 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90008cde:	05f1      	lsls	r1, r6, #23
90008ce0:	d456      	bmi.n	90008d90 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90008ce2:	06aa      	lsls	r2, r5, #26
90008ce4:	d501      	bpl.n	90008cea <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90008ce6:	04b3      	lsls	r3, r6, #18
90008ce8:	d43b      	bmi.n	90008d62 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90008cea:	0728      	lsls	r0, r5, #28
90008cec:	d501      	bpl.n	90008cf2 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008cee:	0531      	lsls	r1, r6, #20
90008cf0:	d421      	bmi.n	90008d36 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90008cf2:	076a      	lsls	r2, r5, #29
90008cf4:	d501      	bpl.n	90008cfa <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90008cf6:	0573      	lsls	r3, r6, #21
90008cf8:	d472      	bmi.n	90008de0 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90008cfa:	07a8      	lsls	r0, r5, #30
90008cfc:	d501      	bpl.n	90008d02 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90008cfe:	05b1      	lsls	r1, r6, #22
90008d00:	d404      	bmi.n	90008d0c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90008d02:	06ea      	lsls	r2, r5, #27
90008d04:	d501      	bpl.n	90008d0a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90008d06:	04f3      	lsls	r3, r6, #19
90008d08:	d457      	bmi.n	90008dba <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90008d0a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008d0c:	6823      	ldr	r3, [r4, #0]
90008d0e:	681a      	ldr	r2, [r3, #0]
90008d10:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90008d14:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90008d16:	2202      	movs	r2, #2
90008d18:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008d1a:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008d1c:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008d1e:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008d20:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008d22:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008d26:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90008d2a:	6a23      	ldr	r3, [r4, #32]
90008d2c:	2b00      	cmp	r3, #0
90008d2e:	d0e8      	beq.n	90008d02 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008d30:	4620      	mov	r0, r4
90008d32:	4798      	blx	r3
90008d34:	e7e5      	b.n	90008d02 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90008d36:	6823      	ldr	r3, [r4, #0]
90008d38:	681a      	ldr	r2, [r3, #0]
90008d3a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90008d3e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008d40:	2208      	movs	r2, #8
90008d42:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008d44:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90008d46:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008d48:	4313      	orrs	r3, r2
90008d4a:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008d4c:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008d50:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008d52:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90008d54:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008d58:	2b00      	cmp	r3, #0
90008d5a:	d0ca      	beq.n	90008cf2 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008d5c:	4620      	mov	r0, r4
90008d5e:	4798      	blx	r3
90008d60:	e7c7      	b.n	90008cf2 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90008d62:	6823      	ldr	r3, [r4, #0]
90008d64:	681a      	ldr	r2, [r3, #0]
90008d66:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90008d6a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008d6c:	2220      	movs	r2, #32
90008d6e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008d70:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90008d72:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008d74:	f043 0302 	orr.w	r3, r3, #2
90008d78:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008d7a:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008d7e:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008d80:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90008d82:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008d86:	2b00      	cmp	r3, #0
90008d88:	d0af      	beq.n	90008cea <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008d8a:	4620      	mov	r0, r4
90008d8c:	4798      	blx	r3
90008d8e:	e7ac      	b.n	90008cea <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008d90:	681a      	ldr	r2, [r3, #0]
90008d92:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90008d96:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008d98:	6e42      	ldr	r2, [r0, #100]	; 0x64
90008d9a:	f042 0201 	orr.w	r2, r2, #1
90008d9e:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008da0:	2201      	movs	r2, #1
90008da2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008da4:	2304      	movs	r3, #4
90008da6:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008daa:	2300      	movs	r3, #0
90008dac:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008db0:	6a43      	ldr	r3, [r0, #36]	; 0x24
90008db2:	2b00      	cmp	r3, #0
90008db4:	d095      	beq.n	90008ce2 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90008db6:	4798      	blx	r3
90008db8:	e793      	b.n	90008ce2 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008dba:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008dbc:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008dbe:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008dc0:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008dc2:	681a      	ldr	r2, [r3, #0]
90008dc4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90008dc8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008dca:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008dcc:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008dce:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008dd0:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008dd4:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008dd6:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008dda:	f7ff ff77 	bl	90008ccc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008dde:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008de0:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008de2:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008de4:	681a      	ldr	r2, [r3, #0]
90008de6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
90008dea:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008dec:	2204      	movs	r2, #4
90008dee:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008df0:	f7ff ff6a 	bl	90008cc8 <HAL_DMA2D_LineEventCallback>
90008df4:	e781      	b.n	90008cfa <HAL_DMA2D_IRQHandler+0x2a>
90008df6:	bf00      	nop

90008df8 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008df8:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90008dfc:	2a01      	cmp	r2, #1
90008dfe:	d065      	beq.n	90008ecc <HAL_DMA2D_ConfigLayer+0xd4>
90008e00:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e02:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008e06:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e08:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008e0c:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90008e0e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008e10:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90008e14:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008e18:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e1a:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90008e1c:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008e1e:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008e20:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e24:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90008e28:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008e2a:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008e2e:	ea42 0204 	orr.w	r2, r2, r4
90008e32:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008e36:	d922      	bls.n	90008e7e <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008e38:	6b45      	ldr	r5, [r0, #52]	; 0x34
90008e3a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008e3e:	b981      	cbnz	r1, 90008e62 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008e40:	6818      	ldr	r0, [r3, #0]
90008e42:	4923      	ldr	r1, [pc, #140]	; (90008ed0 <HAL_DMA2D_ConfigLayer+0xd8>)
90008e44:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008e46:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008e48:	4029      	ands	r1, r5
90008e4a:	4311      	orrs	r1, r2
90008e4c:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008e4e:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008e50:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008e52:	2101      	movs	r1, #1

  return HAL_OK;
90008e54:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008e56:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90008e5a:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90008e5e:	bc70      	pop	{r4, r5, r6}
90008e60:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008e62:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008e64:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008e66:	d129      	bne.n	90008ebc <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008e68:	69e5      	ldr	r5, [r4, #28]
90008e6a:	491a      	ldr	r1, [pc, #104]	; (90008ed4 <HAL_DMA2D_ConfigLayer+0xdc>)
90008e6c:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008e6e:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008e70:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008e72:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90008e76:	4311      	orrs	r1, r2
90008e78:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008e7a:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008e7c:	e7e8      	b.n	90008e50 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008e7e:	6b44      	ldr	r4, [r0, #52]	; 0x34
90008e80:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90008e84:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008e86:	b961      	cbnz	r1, 90008ea2 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008e88:	6819      	ldr	r1, [r3, #0]
90008e8a:	4a11      	ldr	r2, [pc, #68]	; (90008ed0 <HAL_DMA2D_ConfigLayer+0xd8>)
90008e8c:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008e8e:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008e90:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008e92:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008e94:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008e98:	4322      	orrs	r2, r4
90008e9a:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008e9c:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008e9e:	6288      	str	r0, [r1, #40]	; 0x28
90008ea0:	e7d6      	b.n	90008e50 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ea2:	6819      	ldr	r1, [r3, #0]
90008ea4:	4a0a      	ldr	r2, [pc, #40]	; (90008ed0 <HAL_DMA2D_ConfigLayer+0xd8>)
90008ea6:	69cd      	ldr	r5, [r1, #28]
90008ea8:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008eaa:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008eac:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008eae:	6b44      	ldr	r4, [r0, #52]	; 0x34
90008eb0:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008eb4:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008eb6:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008eb8:	620c      	str	r4, [r1, #32]
90008eba:	e7c9      	b.n	90008e50 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ebc:	69e5      	ldr	r5, [r4, #28]
90008ebe:	4904      	ldr	r1, [pc, #16]	; (90008ed0 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ec0:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008ec2:	4029      	ands	r1, r5
90008ec4:	4311      	orrs	r1, r2
90008ec6:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008ec8:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008eca:	e7c1      	b.n	90008e50 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
90008ecc:	2002      	movs	r0, #2
}
90008ece:	4770      	bx	lr
90008ed0:	00ccfff0 	.word	0x00ccfff0
90008ed4:	00c0fff0 	.word	0x00c0fff0

90008ed8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008edc:	680c      	ldr	r4, [r1, #0]
{
90008ede:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008ee0:	2c00      	cmp	r4, #0
90008ee2:	f000 80a7 	beq.w	90009034 <HAL_GPIO_Init+0x15c>
90008ee6:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008eea:	4f8a      	ldr	r7, [pc, #552]	; (90009114 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
90008eec:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008eee:	2201      	movs	r2, #1
90008ef0:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90008ef2:	ea12 0e04 	ands.w	lr, r2, r4
90008ef6:	f000 8096 	beq.w	90009026 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008efa:	684d      	ldr	r5, [r1, #4]
90008efc:	f005 0903 	and.w	r9, r5, #3
90008f00:	f109 36ff 	add.w	r6, r9, #4294967295
90008f04:	2e01      	cmp	r6, #1
90008f06:	f240 8098 	bls.w	9000903a <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008f0a:	f1b9 0f03 	cmp.w	r9, #3
90008f0e:	f040 80d2 	bne.w	900090b6 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008f12:	fa09 f20c 	lsl.w	r2, r9, ip
90008f16:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
90008f1a:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008f1c:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008f20:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008f24:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008f28:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008f2a:	d07c      	beq.n	90009026 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008f2c:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90008f30:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008f34:	f003 0903 	and.w	r9, r3, #3
90008f38:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008f3a:	f042 0202 	orr.w	r2, r2, #2
90008f3e:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008f42:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008f46:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
90008f4a:	f508 6880 	add.w	r8, r8, #1024	; 0x400
90008f4e:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008f52:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008f56:	f002 0202 	and.w	r2, r2, #2
90008f5a:	9201      	str	r2, [sp, #4]
90008f5c:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
90008f5e:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008f62:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008f66:	4e6c      	ldr	r6, [pc, #432]	; (90009118 <HAL_GPIO_Init+0x240>)
90008f68:	42b0      	cmp	r0, r6
90008f6a:	d028      	beq.n	90008fbe <HAL_GPIO_Init+0xe6>
90008f6c:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90008f70:	42b0      	cmp	r0, r6
90008f72:	f000 80ac 	beq.w	900090ce <HAL_GPIO_Init+0x1f6>
90008f76:	4e69      	ldr	r6, [pc, #420]	; (9000911c <HAL_GPIO_Init+0x244>)
90008f78:	42b0      	cmp	r0, r6
90008f7a:	f000 80ad 	beq.w	900090d8 <HAL_GPIO_Init+0x200>
90008f7e:	4e68      	ldr	r6, [pc, #416]	; (90009120 <HAL_GPIO_Init+0x248>)
90008f80:	42b0      	cmp	r0, r6
90008f82:	f000 809f 	beq.w	900090c4 <HAL_GPIO_Init+0x1ec>
90008f86:	4e67      	ldr	r6, [pc, #412]	; (90009124 <HAL_GPIO_Init+0x24c>)
90008f88:	42b0      	cmp	r0, r6
90008f8a:	f000 80af 	beq.w	900090ec <HAL_GPIO_Init+0x214>
90008f8e:	4e66      	ldr	r6, [pc, #408]	; (90009128 <HAL_GPIO_Init+0x250>)
90008f90:	42b0      	cmp	r0, r6
90008f92:	f000 80b0 	beq.w	900090f6 <HAL_GPIO_Init+0x21e>
90008f96:	4e65      	ldr	r6, [pc, #404]	; (9000912c <HAL_GPIO_Init+0x254>)
90008f98:	42b0      	cmp	r0, r6
90008f9a:	f000 80a2 	beq.w	900090e2 <HAL_GPIO_Init+0x20a>
90008f9e:	4e64      	ldr	r6, [pc, #400]	; (90009130 <HAL_GPIO_Init+0x258>)
90008fa0:	42b0      	cmp	r0, r6
90008fa2:	f000 80ad 	beq.w	90009100 <HAL_GPIO_Init+0x228>
90008fa6:	4e63      	ldr	r6, [pc, #396]	; (90009134 <HAL_GPIO_Init+0x25c>)
90008fa8:	42b0      	cmp	r0, r6
90008faa:	f000 80ae 	beq.w	9000910a <HAL_GPIO_Init+0x232>
90008fae:	4e62      	ldr	r6, [pc, #392]	; (90009138 <HAL_GPIO_Init+0x260>)
90008fb0:	42b0      	cmp	r0, r6
90008fb2:	bf0c      	ite	eq
90008fb4:	2609      	moveq	r6, #9
90008fb6:	260a      	movne	r6, #10
90008fb8:	fa06 f609 	lsl.w	r6, r6, r9
90008fbc:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
90008fbe:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008fc2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008fc6:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
90008fca:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
90008fce:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90008fd0:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90008fd4:	bf0c      	ite	eq
90008fd6:	4032      	andeq	r2, r6
          temp |= iocurrent;
90008fd8:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008fdc:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
90008fe0:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
90008fe4:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90008fe8:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90008fec:	bf0c      	ite	eq
90008fee:	4032      	andeq	r2, r6
          temp |= iocurrent;
90008ff0:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008ff4:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
90008ff8:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
90008ffc:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90009000:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90009004:	bf0c      	ite	eq
90009006:	4032      	andeq	r2, r6
          temp |= iocurrent;
90009008:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000900c:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000900e:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
90009012:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
90009016:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000901a:	bf54      	ite	pl
9000901c:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000901e:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
90009022:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
90009026:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90009028:	f10c 0c02 	add.w	ip, ip, #2
9000902c:	fa34 f203 	lsrs.w	r2, r4, r3
90009030:	f47f af5d 	bne.w	90008eee <HAL_GPIO_Init+0x16>
  }
}
90009034:	b003      	add	sp, #12
90009036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000903a:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000903e:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009040:	fa08 f80c 	lsl.w	r8, r8, ip
90009044:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90009048:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000904a:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000904e:	fa06 f60c 	lsl.w	r6, r6, ip
90009052:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
90009056:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009058:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000905c:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009060:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90009062:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009066:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90009068:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000906a:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000906c:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009070:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009072:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009076:	fa06 f60c 	lsl.w	r6, r6, ip
9000907a:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000907e:	fa09 f20c 	lsl.w	r2, r9, ip
90009082:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009084:	f47f af49 	bne.w	90008f1a <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90009088:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000908c:	f003 0b07 	and.w	fp, r3, #7
90009090:	260f      	movs	r6, #15
90009092:	eb00 0989 	add.w	r9, r0, r9, lsl #2
90009096:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000909a:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000909e:	fa06 f60b 	lsl.w	r6, r6, fp
900090a2:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900090a6:	690e      	ldr	r6, [r1, #16]
900090a8:	fa06 f60b 	lsl.w	r6, r6, fp
900090ac:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
900090b0:	f8c9 6020 	str.w	r6, [r9, #32]
900090b4:	e731      	b.n	90008f1a <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900090b6:	f04f 0803 	mov.w	r8, #3
900090ba:	fa08 f80c 	lsl.w	r8, r8, ip
900090be:	ea6f 0808 	mvn.w	r8, r8
900090c2:	e7d2      	b.n	9000906a <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900090c4:	2603      	movs	r6, #3
900090c6:	fa06 f609 	lsl.w	r6, r6, r9
900090ca:	4332      	orrs	r2, r6
900090cc:	e777      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
900090ce:	2601      	movs	r6, #1
900090d0:	fa06 f609 	lsl.w	r6, r6, r9
900090d4:	4332      	orrs	r2, r6
900090d6:	e772      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
900090d8:	2602      	movs	r6, #2
900090da:	fa06 f609 	lsl.w	r6, r6, r9
900090de:	4332      	orrs	r2, r6
900090e0:	e76d      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
900090e2:	2606      	movs	r6, #6
900090e4:	fa06 f609 	lsl.w	r6, r6, r9
900090e8:	4332      	orrs	r2, r6
900090ea:	e768      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
900090ec:	2604      	movs	r6, #4
900090ee:	fa06 f609 	lsl.w	r6, r6, r9
900090f2:	4332      	orrs	r2, r6
900090f4:	e763      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
900090f6:	2605      	movs	r6, #5
900090f8:	fa06 f609 	lsl.w	r6, r6, r9
900090fc:	4332      	orrs	r2, r6
900090fe:	e75e      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
90009100:	2607      	movs	r6, #7
90009102:	fa06 f609 	lsl.w	r6, r6, r9
90009106:	4332      	orrs	r2, r6
90009108:	e759      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
9000910a:	2608      	movs	r6, #8
9000910c:	fa06 f609 	lsl.w	r6, r6, r9
90009110:	4332      	orrs	r2, r6
90009112:	e754      	b.n	90008fbe <HAL_GPIO_Init+0xe6>
90009114:	58024400 	.word	0x58024400
90009118:	58020000 	.word	0x58020000
9000911c:	58020800 	.word	0x58020800
90009120:	58020c00 	.word	0x58020c00
90009124:	58021000 	.word	0x58021000
90009128:	58021400 	.word	0x58021400
9000912c:	58021800 	.word	0x58021800
90009130:	58021c00 	.word	0x58021c00
90009134:	58022000 	.word	0x58022000
90009138:	58022400 	.word	0x58022400

9000913c <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000913c:	2900      	cmp	r1, #0
9000913e:	f000 80a4 	beq.w	9000928a <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
90009142:	2300      	movs	r3, #0
{
90009144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009148:	f8df 9168 	ldr.w	r9, [pc, #360]	; 900092b4 <HAL_GPIO_DeInit+0x178>
9000914c:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000914e:	f8df 8168 	ldr.w	r8, [pc, #360]	; 900092b8 <HAL_GPIO_DeInit+0x17c>
90009152:	f8df a168 	ldr.w	sl, [pc, #360]	; 900092bc <HAL_GPIO_DeInit+0x180>
90009156:	f8df b168 	ldr.w	fp, [pc, #360]	; 900092c0 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000915a:	f04f 0e01 	mov.w	lr, #1
9000915e:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
90009162:	ea12 0c01 	ands.w	ip, r2, r1
90009166:	d06b      	beq.n	90009240 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90009168:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000916c:	f003 0403 	and.w	r4, r3, #3
90009170:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009172:	4540      	cmp	r0, r8
90009174:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009176:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000917a:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000917c:	fa06 f604 	lsl.w	r6, r6, r4
90009180:	ea07 0706 	and.w	r7, r7, r6
90009184:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009186:	d01f      	beq.n	900091c8 <HAL_GPIO_DeInit+0x8c>
90009188:	4550      	cmp	r0, sl
9000918a:	d01a      	beq.n	900091c2 <HAL_GPIO_DeInit+0x86>
9000918c:	4558      	cmp	r0, fp
9000918e:	d05e      	beq.n	9000924e <HAL_GPIO_DeInit+0x112>
90009190:	4f43      	ldr	r7, [pc, #268]	; (900092a0 <HAL_GPIO_DeInit+0x164>)
90009192:	42b8      	cmp	r0, r7
90009194:	d065      	beq.n	90009262 <HAL_GPIO_DeInit+0x126>
90009196:	4f43      	ldr	r7, [pc, #268]	; (900092a4 <HAL_GPIO_DeInit+0x168>)
90009198:	42b8      	cmp	r0, r7
9000919a:	d067      	beq.n	9000926c <HAL_GPIO_DeInit+0x130>
9000919c:	4f42      	ldr	r7, [pc, #264]	; (900092a8 <HAL_GPIO_DeInit+0x16c>)
9000919e:	42b8      	cmp	r0, r7
900091a0:	d05a      	beq.n	90009258 <HAL_GPIO_DeInit+0x11c>
900091a2:	4f42      	ldr	r7, [pc, #264]	; (900092ac <HAL_GPIO_DeInit+0x170>)
900091a4:	42b8      	cmp	r0, r7
900091a6:	d06b      	beq.n	90009280 <HAL_GPIO_DeInit+0x144>
900091a8:	4f41      	ldr	r7, [pc, #260]	; (900092b0 <HAL_GPIO_DeInit+0x174>)
900091aa:	42b8      	cmp	r0, r7
900091ac:	d06e      	beq.n	9000928c <HAL_GPIO_DeInit+0x150>
900091ae:	f8df e114 	ldr.w	lr, [pc, #276]	; 900092c4 <HAL_GPIO_DeInit+0x188>
900091b2:	4570      	cmp	r0, lr
900091b4:	d05f      	beq.n	90009276 <HAL_GPIO_DeInit+0x13a>
900091b6:	f8df e110 	ldr.w	lr, [pc, #272]	; 900092c8 <HAL_GPIO_DeInit+0x18c>
900091ba:	4570      	cmp	r0, lr
900091bc:	d06b      	beq.n	90009296 <HAL_GPIO_DeInit+0x15a>
900091be:	f04f 0e0a 	mov.w	lr, #10
900091c2:	fa0e f404 	lsl.w	r4, lr, r4
900091c6:	e000      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
900091c8:	2400      	movs	r4, #0
900091ca:	9f01      	ldr	r7, [sp, #4]
900091cc:	42a7      	cmp	r7, r4
900091ce:	d119      	bne.n	90009204 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900091d0:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
900091d4:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
900091d8:	ea27 070c 	bic.w	r7, r7, ip
900091dc:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900091e0:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
900091e4:	ea27 070c 	bic.w	r7, r7, ip
900091e8:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
900091ec:	6867      	ldr	r7, [r4, #4]
900091ee:	ea27 070c 	bic.w	r7, r7, ip
900091f2:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900091f4:	6827      	ldr	r7, [r4, #0]
900091f6:	ea27 070c 	bic.w	r7, r7, ip
900091fa:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900091fc:	68ac      	ldr	r4, [r5, #8]
900091fe:	ea24 0406 	bic.w	r4, r4, r6
90009202:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009204:	005d      	lsls	r5, r3, #1
90009206:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009208:	f003 0607 	and.w	r6, r3, #7
9000920c:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000920e:	40ac      	lsls	r4, r5
90009210:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009212:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009214:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009216:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009218:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000921a:	08dd      	lsrs	r5, r3, #3
9000921c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90009220:	6a2e      	ldr	r6, [r5, #32]
90009222:	ea26 0607 	bic.w	r6, r6, r7
90009226:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009228:	68c5      	ldr	r5, [r0, #12]
9000922a:	ea25 0504 	bic.w	r5, r5, r4
9000922e:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90009230:	6845      	ldr	r5, [r0, #4]
90009232:	ea25 0202 	bic.w	r2, r5, r2
90009236:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009238:	6882      	ldr	r2, [r0, #8]
9000923a:	ea22 0204 	bic.w	r2, r2, r4
9000923e:	6082      	str	r2, [r0, #8]
    }

    position++;
90009240:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90009242:	fa31 f203 	lsrs.w	r2, r1, r3
90009246:	d188      	bne.n	9000915a <HAL_GPIO_DeInit+0x1e>
  }
}
90009248:	b003      	add	sp, #12
9000924a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000924e:	f04f 0e02 	mov.w	lr, #2
90009252:	fa0e f404 	lsl.w	r4, lr, r4
90009256:	e7b8      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
90009258:	f04f 0e05 	mov.w	lr, #5
9000925c:	fa0e f404 	lsl.w	r4, lr, r4
90009260:	e7b3      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
90009262:	f04f 0e03 	mov.w	lr, #3
90009266:	fa0e f404 	lsl.w	r4, lr, r4
9000926a:	e7ae      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
9000926c:	f04f 0e04 	mov.w	lr, #4
90009270:	fa0e f404 	lsl.w	r4, lr, r4
90009274:	e7a9      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
90009276:	f04f 0e08 	mov.w	lr, #8
9000927a:	fa0e f404 	lsl.w	r4, lr, r4
9000927e:	e7a4      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
90009280:	f04f 0e06 	mov.w	lr, #6
90009284:	fa0e f404 	lsl.w	r4, lr, r4
90009288:	e79f      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
9000928a:	4770      	bx	lr
9000928c:	f04f 0e07 	mov.w	lr, #7
90009290:	fa0e f404 	lsl.w	r4, lr, r4
90009294:	e799      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
90009296:	f04f 0e09 	mov.w	lr, #9
9000929a:	fa0e f404 	lsl.w	r4, lr, r4
9000929e:	e794      	b.n	900091ca <HAL_GPIO_DeInit+0x8e>
900092a0:	58020c00 	.word	0x58020c00
900092a4:	58021000 	.word	0x58021000
900092a8:	58021400 	.word	0x58021400
900092ac:	58021800 	.word	0x58021800
900092b0:	58021c00 	.word	0x58021c00
900092b4:	58000400 	.word	0x58000400
900092b8:	58020000 	.word	0x58020000
900092bc:	58020400 	.word	0x58020400
900092c0:	58020800 	.word	0x58020800
900092c4:	58022000 	.word	0x58022000
900092c8:	58022400 	.word	0x58022400

900092cc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900092cc:	6903      	ldr	r3, [r0, #16]
900092ce:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900092d0:	bf14      	ite	ne
900092d2:	2001      	movne	r0, #1
900092d4:	2000      	moveq	r0, #0
900092d6:	4770      	bx	lr

900092d8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900092d8:	b902      	cbnz	r2, 900092dc <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900092da:	0409      	lsls	r1, r1, #16
900092dc:	6181      	str	r1, [r0, #24]
  }
}
900092de:	4770      	bx	lr

900092e0 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900092e0:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900092e2:	ea01 0203 	and.w	r2, r1, r3
900092e6:	ea21 0103 	bic.w	r1, r1, r3
900092ea:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900092ee:	6181      	str	r1, [r0, #24]
}
900092f0:	4770      	bx	lr
900092f2:	bf00      	nop

900092f4 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900092f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900092f8:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900092fa:	f04f 0820 	mov.w	r8, #32
{
900092fe:	4605      	mov	r5, r0
90009300:	460e      	mov	r6, r1
90009302:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009304:	6998      	ldr	r0, [r3, #24]
90009306:	f010 0902 	ands.w	r9, r0, #2
9000930a:	f040 809e 	bne.w	9000944a <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000930e:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009310:	f014 0410 	ands.w	r4, r4, #16
90009314:	d068      	beq.n	900093e8 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009316:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
90009318:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000931a:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000931c:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000931e:	1c71      	adds	r1, r6, #1
90009320:	699a      	ldr	r2, [r3, #24]
90009322:	d163      	bne.n	900093ec <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90009324:	0690      	lsls	r0, r2, #26
90009326:	f100 8093 	bmi.w	90009450 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000932a:	f1ba 0f00 	cmp.w	sl, #0
9000932e:	d104      	bne.n	9000933a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90009330:	699c      	ldr	r4, [r3, #24]
90009332:	06a1      	lsls	r1, r4, #26
90009334:	d5fc      	bpl.n	90009330 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009336:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000933a:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000933e:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90009340:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009342:	05d0      	lsls	r0, r2, #23
90009344:	d530      	bpl.n	900093a8 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009346:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000934a:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000934c:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009350:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009352:	d504      	bpl.n	9000935e <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009354:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009358:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000935c:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000935e:	0591      	lsls	r1, r2, #22
90009360:	d504      	bpl.n	9000936c <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009362:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009366:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000936a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000936c:	699a      	ldr	r2, [r3, #24]
9000936e:	0790      	lsls	r0, r2, #30
90009370:	d501      	bpl.n	90009376 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
90009372:	2200      	movs	r2, #0
90009374:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009376:	699a      	ldr	r2, [r3, #24]
90009378:	07d1      	lsls	r1, r2, #31
9000937a:	d403      	bmi.n	90009384 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000937c:	699a      	ldr	r2, [r3, #24]
9000937e:	f042 0201 	orr.w	r2, r2, #1
90009382:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009384:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009386:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009388:	4834      	ldr	r0, [pc, #208]	; (9000945c <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000938a:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000938c:	4002      	ands	r2, r0
      return HAL_ERROR;
9000938e:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009390:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009392:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009394:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009398:	4323      	orrs	r3, r4
9000939a:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000939c:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900093a0:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
900093a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900093a8:	0550      	lsls	r0, r2, #21
900093aa:	d4d3      	bmi.n	90009354 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900093ac:	0592      	lsls	r2, r2, #22
900093ae:	d4d8      	bmi.n	90009362 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
900093b0:	2900      	cmp	r1, #0
900093b2:	d1db      	bne.n	9000936c <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
900093b4:	1c72      	adds	r2, r6, #1
900093b6:	d0a5      	beq.n	90009304 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900093b8:	f7ff fb04 	bl	900089c4 <HAL_GetTick>
900093bc:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900093be:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900093c0:	42b0      	cmp	r0, r6
900093c2:	d801      	bhi.n	900093c8 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
900093c4:	2e00      	cmp	r6, #0
900093c6:	d19d      	bne.n	90009304 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900093c8:	699a      	ldr	r2, [r3, #24]
900093ca:	f012 0202 	ands.w	r2, r2, #2
900093ce:	d199      	bne.n	90009304 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900093d0:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900093d2:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
900093d4:	2001      	movs	r0, #1
900093d6:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900093da:	430b      	orrs	r3, r1
900093dc:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900093de:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900093e2:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
900093e6:	e7dd      	b.n	900093a4 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
900093e8:	4621      	mov	r1, r4
900093ea:	e7a9      	b.n	90009340 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900093ec:	0692      	lsls	r2, r2, #26
900093ee:	d42f      	bmi.n	90009450 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900093f0:	f1ba 0f00 	cmp.w	sl, #0
900093f4:	d1a1      	bne.n	9000933a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900093f6:	f7ff fae5 	bl	900089c4 <HAL_GetTick>
900093fa:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900093fc:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900093fe:	4286      	cmp	r6, r0
90009400:	d301      	bcc.n	90009406 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
90009402:	2e00      	cmp	r6, #0
90009404:	d18b      	bne.n	9000931e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009406:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009408:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000940c:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000940e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009410:	0409      	lsls	r1, r1, #16
90009412:	d50b      	bpl.n	9000942c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
90009414:	0441      	lsls	r1, r0, #17
90009416:	d409      	bmi.n	9000942c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
90009418:	2a20      	cmp	r2, #32
9000941a:	d007      	beq.n	9000942c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000941c:	685a      	ldr	r2, [r3, #4]
9000941e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009422:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009424:	f7ff face 	bl	900089c4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009428:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000942a:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000942c:	699a      	ldr	r2, [r3, #24]
9000942e:	0690      	lsls	r0, r2, #26
90009430:	f53f af75 	bmi.w	9000931e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009434:	f7ff fac6 	bl	900089c4 <HAL_GetTick>
90009438:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000943a:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000943c:	2819      	cmp	r0, #25
9000943e:	d9f5      	bls.n	9000942c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009440:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90009444:	f04f 0a01 	mov.w	sl, #1
90009448:	e769      	b.n	9000931e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000944a:	2000      	movs	r0, #0
}
9000944c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90009450:	f1ba 0f00 	cmp.w	sl, #0
90009454:	f43f af6f 	beq.w	90009336 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90009458:	e76f      	b.n	9000933a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000945a:	bf00      	nop
9000945c:	fe00e800 	.word	0xfe00e800

90009460 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90009460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009464:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009466:	6802      	ldr	r2, [r0, #0]
{
90009468:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000946a:	6991      	ldr	r1, [r2, #24]
9000946c:	068c      	lsls	r4, r1, #26
9000946e:	d469      	bmi.n	90009544 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90009470:	4606      	mov	r6, r0
90009472:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009474:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009478:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000947a:	f014 0410 	ands.w	r4, r4, #16
9000947e:	d064      	beq.n	9000954a <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90009480:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009482:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
90009484:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009486:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000948a:	46aa      	mov	sl, r5
9000948c:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000948e:	699a      	ldr	r2, [r3, #24]
90009490:	d15d      	bne.n	9000954e <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90009492:	0690      	lsls	r0, r2, #26
90009494:	f100 8083 	bmi.w	9000959e <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009498:	f1ba 0f00 	cmp.w	sl, #0
9000949c:	d104      	bne.n	900094a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000949e:	699c      	ldr	r4, [r3, #24]
900094a0:	06a1      	lsls	r1, r4, #26
900094a2:	d5fc      	bpl.n	9000949e <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900094a4:	2220      	movs	r2, #32
900094a6:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900094a8:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
900094ac:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900094ae:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900094b0:	05d0      	lsls	r0, r2, #23
900094b2:	d530      	bpl.n	90009516 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900094b4:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900094b8:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900094ba:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900094be:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900094c0:	d504      	bpl.n	900094cc <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900094c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900094c6:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900094ca:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900094cc:	0591      	lsls	r1, r2, #22
900094ce:	d504      	bpl.n	900094da <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900094d0:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900094d4:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900094d8:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900094da:	699a      	ldr	r2, [r3, #24]
900094dc:	0795      	lsls	r5, r2, #30
900094de:	d501      	bpl.n	900094e4 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
900094e0:	2200      	movs	r2, #0
900094e2:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900094e4:	699a      	ldr	r2, [r3, #24]
900094e6:	07d0      	lsls	r0, r2, #31
900094e8:	d403      	bmi.n	900094f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900094ea:	699a      	ldr	r2, [r3, #24]
900094ec:	f042 0201 	orr.w	r2, r2, #1
900094f0:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900094f2:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
900094f4:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900094f6:	4837      	ldr	r0, [pc, #220]	; (900095d4 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
900094f8:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
900094fa:	4002      	ands	r2, r0
      return HAL_ERROR;
900094fc:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900094fe:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009500:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
90009502:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009506:	4323      	orrs	r3, r4
90009508:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000950a:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000950e:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90009512:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009516:	0550      	lsls	r0, r2, #21
90009518:	d4d3      	bmi.n	900094c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000951a:	0592      	lsls	r2, r2, #22
9000951c:	d4d8      	bmi.n	900094d0 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000951e:	2900      	cmp	r1, #0
90009520:	d1db      	bne.n	900094da <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009522:	f7ff fa4f 	bl	900089c4 <HAL_GetTick>
90009526:	eba0 0008 	sub.w	r0, r0, r8
9000952a:	42b8      	cmp	r0, r7
9000952c:	d801      	bhi.n	90009532 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000952e:	2f00      	cmp	r7, #0
90009530:	d132      	bne.n	90009598 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009532:	6832      	ldr	r2, [r6, #0]
90009534:	6991      	ldr	r1, [r2, #24]
90009536:	4613      	mov	r3, r2
90009538:	f011 0120 	ands.w	r1, r1, #32
9000953c:	d034      	beq.n	900095a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000953e:	6991      	ldr	r1, [r2, #24]
90009540:	0689      	lsls	r1, r1, #26
90009542:	d599      	bpl.n	90009478 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90009544:	2000      	movs	r0, #0
}
90009546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000954a:	4621      	mov	r1, r4
9000954c:	e7af      	b.n	900094ae <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000954e:	0692      	lsls	r2, r2, #26
90009550:	d425      	bmi.n	9000959e <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009552:	f1ba 0f00 	cmp.w	sl, #0
90009556:	d1a7      	bne.n	900094a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009558:	f7ff fa34 	bl	900089c4 <HAL_GetTick>
9000955c:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000955e:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009560:	4287      	cmp	r7, r0
90009562:	d301      	bcc.n	90009568 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
90009564:	2f00      	cmp	r7, #0
90009566:	d191      	bne.n	9000948c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009568:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000956a:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000956e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009570:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009572:	0409      	lsls	r1, r1, #16
90009574:	d503      	bpl.n	9000957e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
90009576:	0441      	lsls	r1, r0, #17
90009578:	d401      	bmi.n	9000957e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000957a:	2a20      	cmp	r2, #32
9000957c:	d121      	bne.n	900095c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000957e:	699a      	ldr	r2, [r3, #24]
90009580:	0690      	lsls	r0, r2, #26
90009582:	d483      	bmi.n	9000948c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009584:	f7ff fa1e 	bl	900089c4 <HAL_GetTick>
90009588:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000958a:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000958c:	2819      	cmp	r0, #25
9000958e:	d9f6      	bls.n	9000957e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009590:	2520      	movs	r5, #32
              status = HAL_ERROR;
90009592:	f04f 0a01 	mov.w	sl, #1
90009596:	e779      	b.n	9000948c <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009598:	6833      	ldr	r3, [r6, #0]
9000959a:	461a      	mov	r2, r3
9000959c:	e7cf      	b.n	9000953e <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000959e:	f1ba 0f00 	cmp.w	sl, #0
900095a2:	f43f af7f 	beq.w	900094a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
900095a6:	e77f      	b.n	900094a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900095a8:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900095aa:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
900095ac:	2001      	movs	r0, #1
900095ae:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900095b2:	4313      	orrs	r3, r2
900095b4:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900095b6:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900095ba:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900095be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900095c2:	685a      	ldr	r2, [r3, #4]
900095c4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900095c8:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900095ca:	f7ff f9fb 	bl	900089c4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900095ce:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
900095d0:	4604      	mov	r4, r0
900095d2:	e7d4      	b.n	9000957e <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
900095d4:	fe00e800 	.word	0xfe00e800

900095d8 <HAL_I2C_MspInit>:
}
900095d8:	4770      	bx	lr
900095da:	bf00      	nop

900095dc <HAL_I2C_Init>:
  if (hi2c == NULL)
900095dc:	2800      	cmp	r0, #0
900095de:	d04e      	beq.n	9000967e <HAL_I2C_Init+0xa2>
{
900095e0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900095e2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
900095e6:	4604      	mov	r4, r0
900095e8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900095ec:	2b00      	cmp	r3, #0
900095ee:	d041      	beq.n	90009674 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
900095f0:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900095f2:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900095f4:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900095f6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
900095fa:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900095fc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009600:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90009602:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009606:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009608:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000960a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000960c:	689a      	ldr	r2, [r3, #8]
9000960e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90009612:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009614:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009616:	d029      	beq.n	9000966c <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009618:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000961c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000961e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009620:	d102      	bne.n	90009628 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
90009622:	f44f 6200 	mov.w	r2, #2048	; 0x800
90009626:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009628:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000962a:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000962e:	4915      	ldr	r1, [pc, #84]	; (90009684 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009630:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009632:	4301      	orrs	r1, r0
90009634:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90009636:	68d9      	ldr	r1, [r3, #12]
90009638:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000963c:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000963e:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009642:	4302      	orrs	r2, r0
90009644:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009648:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000964c:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000964e:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009650:	4301      	orrs	r1, r0
  return HAL_OK;
90009652:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009654:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90009656:	6819      	ldr	r1, [r3, #0]
90009658:	f041 0101 	orr.w	r1, r1, #1
9000965c:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000965e:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90009660:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90009664:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009666:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000966a:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000966c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90009670:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009672:	e7d9      	b.n	90009628 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
90009674:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90009678:	f7ff ffae 	bl	900095d8 <HAL_I2C_MspInit>
9000967c:	e7b8      	b.n	900095f0 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000967e:	2001      	movs	r0, #1
}
90009680:	4770      	bx	lr
90009682:	bf00      	nop
90009684:	02008000 	.word	0x02008000

90009688 <HAL_I2C_MspDeInit>:
90009688:	4770      	bx	lr
9000968a:	bf00      	nop

9000968c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000968c:	b1b0      	cbz	r0, 900096bc <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000968e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009690:	2324      	movs	r3, #36	; 0x24
{
90009692:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009694:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90009698:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000969a:	6813      	ldr	r3, [r2, #0]
9000969c:	f023 0301 	bic.w	r3, r3, #1
900096a0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900096a2:	f7ff fff1 	bl	90009688 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900096a6:	2300      	movs	r3, #0
900096a8:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
900096aa:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
900096ac:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
900096b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
900096b4:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900096b6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
900096ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900096bc:	2001      	movs	r0, #1
}
900096be:	4770      	bx	lr

900096c0 <HAL_I2C_Mem_Write>:
{
900096c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900096c4:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900096c6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
900096ca:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
900096ce:	2b20      	cmp	r3, #32
{
900096d0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
900096d2:	d132      	bne.n	9000973a <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
900096d4:	9b08      	ldr	r3, [sp, #32]
900096d6:	4604      	mov	r4, r0
900096d8:	b34b      	cbz	r3, 9000972e <HAL_I2C_Mem_Write+0x6e>
900096da:	f1ba 0f00 	cmp.w	sl, #0
900096de:	d026      	beq.n	9000972e <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
900096e0:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
900096e4:	2b01      	cmp	r3, #1
900096e6:	d028      	beq.n	9000973a <HAL_I2C_Mem_Write+0x7a>
900096e8:	2301      	movs	r3, #1
900096ea:	460e      	mov	r6, r1
900096ec:	4691      	mov	r9, r2
900096ee:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
900096f2:	f7ff f967 	bl	900089c4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900096f6:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900096f8:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900096fa:	699a      	ldr	r2, [r3, #24]
900096fc:	0411      	lsls	r1, r2, #16
900096fe:	d51f      	bpl.n	90009740 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009700:	f7ff f960 	bl	900089c4 <HAL_GetTick>
90009704:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009706:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009708:	2819      	cmp	r0, #25
9000970a:	d9f6      	bls.n	900096fa <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000970c:	699a      	ldr	r2, [r3, #24]
9000970e:	0412      	lsls	r2, r2, #16
90009710:	d5f3      	bpl.n	900096fa <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009712:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009714:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009716:	2200      	movs	r2, #0
      return HAL_ERROR;
90009718:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000971a:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000971c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009720:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009722:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009726:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000972a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000972e:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90009732:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009734:	6463      	str	r3, [r4, #68]	; 0x44
}
90009736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000973a:	2002      	movs	r0, #2
}
9000973c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009740:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90009742:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009744:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009748:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000974a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000974e:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90009750:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009752:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009754:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90009758:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000975a:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000975c:	496d      	ldr	r1, [pc, #436]	; (90009914 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000975e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009762:	685a      	ldr	r2, [r3, #4]
90009764:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009766:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000976a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000976e:	496a      	ldr	r1, [pc, #424]	; (90009918 <HAL_I2C_Mem_Write+0x258>)
90009770:	4332      	orrs	r2, r6
90009772:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009774:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90009776:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009778:	4639      	mov	r1, r7
9000977a:	f7ff fdbb 	bl	900092f4 <I2C_WaitOnTXISFlagUntilTimeout>
9000977e:	2800      	cmp	r0, #0
90009780:	d175      	bne.n	9000986e <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009782:	f1b8 0f01 	cmp.w	r8, #1
90009786:	d00a      	beq.n	9000979e <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009788:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000978c:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000978e:	4639      	mov	r1, r7
90009790:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009792:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009794:	462a      	mov	r2, r5
90009796:	f7ff fdad 	bl	900092f4 <I2C_WaitOnTXISFlagUntilTimeout>
9000979a:	2800      	cmp	r0, #0
9000979c:	d167      	bne.n	9000986e <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000979e:	fa5f f389 	uxtb.w	r3, r9
900097a2:	6822      	ldr	r2, [r4, #0]
900097a4:	6293      	str	r3, [r2, #40]	; 0x28
900097a6:	1c78      	adds	r0, r7, #1
900097a8:	d14a      	bne.n	90009840 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900097aa:	6993      	ldr	r3, [r2, #24]
900097ac:	0619      	lsls	r1, r3, #24
900097ae:	d5fc      	bpl.n	900097aa <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900097b0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900097b2:	b29b      	uxth	r3, r3
900097b4:	2bff      	cmp	r3, #255	; 0xff
900097b6:	f240 808a 	bls.w	900098ce <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
900097ba:	6853      	ldr	r3, [r2, #4]
900097bc:	4957      	ldr	r1, [pc, #348]	; (9000991c <HAL_I2C_Mem_Write+0x25c>)
900097be:	400b      	ands	r3, r1
900097c0:	4957      	ldr	r1, [pc, #348]	; (90009920 <HAL_I2C_Mem_Write+0x260>)
900097c2:	4333      	orrs	r3, r6
900097c4:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900097c6:	23ff      	movs	r3, #255	; 0xff
900097c8:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900097ca:	6051      	str	r1, [r2, #4]
900097cc:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000991c <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900097d0:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
900097d4:	f8df 9148 	ldr.w	r9, [pc, #328]	; 90009920 <HAL_I2C_Mem_Write+0x260>
900097d8:	e004      	b.n	900097e4 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
900097da:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900097dc:	b29b      	uxth	r3, r3
900097de:	2b00      	cmp	r3, #0
900097e0:	f000 8083 	beq.w	900098ea <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900097e4:	462a      	mov	r2, r5
900097e6:	4639      	mov	r1, r7
900097e8:	4620      	mov	r0, r4
900097ea:	f7ff fd83 	bl	900092f4 <I2C_WaitOnTXISFlagUntilTimeout>
900097ee:	2800      	cmp	r0, #0
900097f0:	d16b      	bne.n	900098ca <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900097f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
900097f4:	6821      	ldr	r1, [r4, #0]
900097f6:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
900097fa:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900097fc:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
900097fe:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90009800:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90009802:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90009804:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009806:	3a01      	subs	r2, #1
      hi2c->XferSize--;
90009808:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000980a:	b292      	uxth	r2, r2
9000980c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000980e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
90009810:	b292      	uxth	r2, r2
90009812:	2a00      	cmp	r2, #0
90009814:	d0e1      	beq.n	900097da <HAL_I2C_Mem_Write+0x11a>
90009816:	2b00      	cmp	r3, #0
90009818:	d1df      	bne.n	900097da <HAL_I2C_Mem_Write+0x11a>
9000981a:	1c78      	adds	r0, r7, #1
9000981c:	d12c      	bne.n	90009878 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000981e:	698b      	ldr	r3, [r1, #24]
90009820:	061a      	lsls	r2, r3, #24
90009822:	d5fc      	bpl.n	9000981e <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009824:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009826:	b29b      	uxth	r3, r3
90009828:	2bff      	cmp	r3, #255	; 0xff
9000982a:	d940      	bls.n	900098ae <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000982c:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000982e:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009832:	ea03 0308 	and.w	r3, r3, r8
90009836:	4333      	orrs	r3, r6
90009838:	ea43 0309 	orr.w	r3, r3, r9
9000983c:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000983e:	e7cc      	b.n	900097da <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009840:	6993      	ldr	r3, [r2, #24]
90009842:	061b      	lsls	r3, r3, #24
90009844:	d4b4      	bmi.n	900097b0 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009846:	f7ff f8bd 	bl	900089c4 <HAL_GetTick>
9000984a:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000984c:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000984e:	4287      	cmp	r7, r0
90009850:	d301      	bcc.n	90009856 <HAL_I2C_Mem_Write+0x196>
90009852:	2f00      	cmp	r7, #0
90009854:	d1a7      	bne.n	900097a6 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009856:	6993      	ldr	r3, [r2, #24]
90009858:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000985c:	d1a3      	bne.n	900097a6 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000985e:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009860:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009862:	430a      	orrs	r2, r1
90009864:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009866:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000986a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000986e:	2300      	movs	r3, #0
      return HAL_ERROR;
90009870:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90009872:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90009876:	e75e      	b.n	90009736 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009878:	698b      	ldr	r3, [r1, #24]
9000987a:	061b      	lsls	r3, r3, #24
9000987c:	d4d2      	bmi.n	90009824 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000987e:	f7ff f8a1 	bl	900089c4 <HAL_GetTick>
90009882:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009884:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009886:	4287      	cmp	r7, r0
90009888:	d301      	bcc.n	9000988e <HAL_I2C_Mem_Write+0x1ce>
9000988a:	2f00      	cmp	r7, #0
9000988c:	d1c5      	bne.n	9000981a <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000988e:	698b      	ldr	r3, [r1, #24]
90009890:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009894:	d1c1      	bne.n	9000981a <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009896:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009898:	2120      	movs	r1, #32
          return HAL_ERROR;
9000989a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000989c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900098a0:	430a      	orrs	r2, r1
900098a2:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900098a4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900098a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
900098ac:	e743      	b.n	90009736 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
900098ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900098b0:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900098b2:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
900098b4:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900098b6:	684b      	ldr	r3, [r1, #4]
900098b8:	ea03 0308 	and.w	r3, r3, r8
900098bc:	4333      	orrs	r3, r6
900098be:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900098c2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
900098c6:	604b      	str	r3, [r1, #4]
}
900098c8:	e787      	b.n	900097da <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
900098ca:	2001      	movs	r0, #1
900098cc:	e733      	b.n	90009736 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
900098ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900098d0:	4812      	ldr	r0, [pc, #72]	; (9000991c <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
900098d2:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900098d4:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
900098d6:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900098d8:	6853      	ldr	r3, [r2, #4]
900098da:	4003      	ands	r3, r0
900098dc:	4333      	orrs	r3, r6
900098de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900098e2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
900098e6:	6053      	str	r3, [r2, #4]
}
900098e8:	e770      	b.n	900097cc <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900098ea:	462a      	mov	r2, r5
900098ec:	4639      	mov	r1, r7
900098ee:	4620      	mov	r0, r4
900098f0:	f7ff fdb6 	bl	90009460 <I2C_WaitOnSTOPFlagUntilTimeout>
900098f4:	2800      	cmp	r0, #0
900098f6:	d1e8      	bne.n	900098ca <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900098f8:	6823      	ldr	r3, [r4, #0]
900098fa:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900098fc:	4d09      	ldr	r5, [pc, #36]	; (90009924 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900098fe:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009900:	685a      	ldr	r2, [r3, #4]
90009902:	402a      	ands	r2, r5
90009904:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009906:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000990a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000990e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90009912:	e710      	b.n	90009736 <HAL_I2C_Mem_Write+0x76>
90009914:	fc009800 	.word	0xfc009800
90009918:	01002000 	.word	0x01002000
9000991c:	fc009c00 	.word	0xfc009c00
90009920:	01ff0000 	.word	0x01ff0000
90009924:	fe00e800 	.word	0xfe00e800

90009928 <HAL_I2C_Mem_Read>:
{
90009928:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000992c:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000992e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90009932:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
90009936:	2b20      	cmp	r3, #32
{
90009938:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000993a:	d137      	bne.n	900099ac <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000993c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000993e:	4683      	mov	fp, r0
90009940:	b36b      	cbz	r3, 9000999e <HAL_I2C_Mem_Read+0x76>
90009942:	f1b9 0f00 	cmp.w	r9, #0
90009946:	d02a      	beq.n	9000999e <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90009948:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000994c:	2b01      	cmp	r3, #1
9000994e:	d02d      	beq.n	900099ac <HAL_I2C_Mem_Read+0x84>
90009950:	2301      	movs	r3, #1
90009952:	460f      	mov	r7, r1
90009954:	4690      	mov	r8, r2
90009956:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000995a:	f7ff f833 	bl	900089c4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000995e:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90009962:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009964:	699a      	ldr	r2, [r3, #24]
90009966:	0410      	lsls	r0, r2, #16
90009968:	d523      	bpl.n	900099b2 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000996a:	f7ff f82b 	bl	900089c4 <HAL_GetTick>
9000996e:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009970:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009974:	2819      	cmp	r0, #25
90009976:	d9f5      	bls.n	90009964 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009978:	699a      	ldr	r2, [r3, #24]
9000997a:	0411      	lsls	r1, r2, #16
9000997c:	d5f2      	bpl.n	90009964 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000997e:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009982:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009984:	2200      	movs	r2, #0
      return HAL_ERROR;
90009986:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009988:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000998a:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000998e:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009992:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009996:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000999a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000999e:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900099a2:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900099a4:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
900099a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
900099ac:	2002      	movs	r0, #2
}
900099ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900099b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900099b4:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900099b6:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900099ba:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900099bc:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900099c0:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
900099c2:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900099c6:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900099c8:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
900099cc:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900099d0:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
900099d4:	4983      	ldr	r1, [pc, #524]	; (90009be4 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
900099d6:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900099da:	685a      	ldr	r2, [r3, #4]
900099dc:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900099de:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
900099e0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900099e4:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
900099e6:	433a      	orrs	r2, r7
900099e8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
900099ec:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900099ee:	4632      	mov	r2, r6
900099f0:	f7ff fc80 	bl	900092f4 <I2C_WaitOnTXISFlagUntilTimeout>
900099f4:	2800      	cmp	r0, #0
900099f6:	f040 8091 	bne.w	90009b1c <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900099fa:	2c01      	cmp	r4, #1
900099fc:	d00c      	beq.n	90009a18 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900099fe:	ea4f 2218 	mov.w	r2, r8, lsr #8
90009a02:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a06:	4629      	mov	r1, r5
90009a08:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009a0a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009a0c:	4632      	mov	r2, r6
90009a0e:	f7ff fc71 	bl	900092f4 <I2C_WaitOnTXISFlagUntilTimeout>
90009a12:	2800      	cmp	r0, #0
90009a14:	f040 8082 	bne.w	90009b1c <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009a18:	fa5f f388 	uxtb.w	r3, r8
90009a1c:	f8db 4000 	ldr.w	r4, [fp]
90009a20:	62a3      	str	r3, [r4, #40]	; 0x28
90009a22:	1c6a      	adds	r2, r5, #1
90009a24:	d160      	bne.n	90009ae8 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009a26:	69a3      	ldr	r3, [r4, #24]
90009a28:	065b      	lsls	r3, r3, #25
90009a2a:	d5fc      	bpl.n	90009a26 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009a2c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009a30:	b29b      	uxth	r3, r3
90009a32:	2bff      	cmp	r3, #255	; 0xff
90009a34:	f240 80ae 	bls.w	90009b94 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
90009a38:	6863      	ldr	r3, [r4, #4]
90009a3a:	4a6a      	ldr	r2, [pc, #424]	; (90009be4 <HAL_I2C_Mem_Read+0x2bc>)
90009a3c:	4013      	ands	r3, r2
90009a3e:	4a6a      	ldr	r2, [pc, #424]	; (90009be8 <HAL_I2C_Mem_Read+0x2c0>)
90009a40:	433b      	orrs	r3, r7
90009a42:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009a44:	23ff      	movs	r3, #255	; 0xff
90009a46:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009a4a:	6062      	str	r2, [r4, #4]
90009a4c:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 90009bf4 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009a50:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90009a54:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 90009bf8 <HAL_I2C_Mem_Read+0x2d0>
90009a58:	1c69      	adds	r1, r5, #1
90009a5a:	d127      	bne.n	90009aac <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009a5c:	69a3      	ldr	r3, [r4, #24]
90009a5e:	075a      	lsls	r2, r3, #29
90009a60:	d5fc      	bpl.n	90009a5c <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009a62:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009a64:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90009a68:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90009a6a:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
90009a6e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
90009a72:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90009a74:	3301      	adds	r3, #1
      hi2c->XferCount--;
90009a76:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90009a78:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90009a7c:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
90009a80:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90009a84:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009a86:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90009a8a:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009a8c:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90009a8e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009a92:	b10a      	cbz	r2, 90009a98 <HAL_I2C_Mem_Read+0x170>
90009a94:	2b00      	cmp	r3, #0
90009a96:	d046      	beq.n	90009b26 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90009a98:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009a9c:	b29b      	uxth	r3, r3
90009a9e:	2b00      	cmp	r3, #0
90009aa0:	f000 8088 	beq.w	90009bb4 <HAL_I2C_Mem_Read+0x28c>
90009aa4:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009aa6:	f8db 4000 	ldr.w	r4, [fp]
90009aaa:	d0d7      	beq.n	90009a5c <HAL_I2C_Mem_Read+0x134>
90009aac:	69a3      	ldr	r3, [r4, #24]
90009aae:	075b      	lsls	r3, r3, #29
90009ab0:	d4d7      	bmi.n	90009a62 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009ab2:	f7fe ff87 	bl	900089c4 <HAL_GetTick>
90009ab6:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009ab8:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009abc:	4285      	cmp	r5, r0
90009abe:	d301      	bcc.n	90009ac4 <HAL_I2C_Mem_Read+0x19c>
90009ac0:	2d00      	cmp	r5, #0
90009ac2:	d1c9      	bne.n	90009a58 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009ac4:	69a3      	ldr	r3, [r4, #24]
90009ac6:	f013 0304 	ands.w	r3, r3, #4
90009aca:	d1c5      	bne.n	90009a58 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009acc:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009ad0:	2120      	movs	r1, #32
          return HAL_ERROR;
90009ad2:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009ad4:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009ad8:	430a      	orrs	r2, r1
90009ada:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009ade:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009ae2:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90009ae6:	e75f      	b.n	900099a8 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009ae8:	69a3      	ldr	r3, [r4, #24]
90009aea:	0658      	lsls	r0, r3, #25
90009aec:	d49e      	bmi.n	90009a2c <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009aee:	f7fe ff69 	bl	900089c4 <HAL_GetTick>
90009af2:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009af4:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009af8:	4285      	cmp	r5, r0
90009afa:	d301      	bcc.n	90009b00 <HAL_I2C_Mem_Read+0x1d8>
90009afc:	2d00      	cmp	r5, #0
90009afe:	d190      	bne.n	90009a22 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b00:	69a3      	ldr	r3, [r4, #24]
90009b02:	f013 0340 	ands.w	r3, r3, #64	; 0x40
90009b06:	d18c      	bne.n	90009a22 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b08:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b0c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009b0e:	430a      	orrs	r2, r1
90009b10:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009b14:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009b18:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90009b1c:	2300      	movs	r3, #0
      return HAL_ERROR;
90009b1e:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90009b20:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
90009b24:	e740      	b.n	900099a8 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009b26:	f8db 2000 	ldr.w	r2, [fp]
90009b2a:	1c68      	adds	r0, r5, #1
90009b2c:	d111      	bne.n	90009b52 <HAL_I2C_Mem_Read+0x22a>
90009b2e:	6993      	ldr	r3, [r2, #24]
90009b30:	0619      	lsls	r1, r3, #24
90009b32:	d5fc      	bpl.n	90009b2e <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009b34:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009b38:	b29b      	uxth	r3, r3
90009b3a:	2bff      	cmp	r3, #255	; 0xff
90009b3c:	d91a      	bls.n	90009b74 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
90009b3e:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009b40:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009b44:	ea03 0308 	and.w	r3, r3, r8
90009b48:	433b      	orrs	r3, r7
90009b4a:	ea43 0309 	orr.w	r3, r3, r9
90009b4e:	6053      	str	r3, [r2, #4]
}
90009b50:	e7a2      	b.n	90009a98 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009b52:	6993      	ldr	r3, [r2, #24]
90009b54:	061b      	lsls	r3, r3, #24
90009b56:	d4ed      	bmi.n	90009b34 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b58:	f7fe ff34 	bl	900089c4 <HAL_GetTick>
90009b5c:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b5e:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b62:	4285      	cmp	r5, r0
90009b64:	d301      	bcc.n	90009b6a <HAL_I2C_Mem_Read+0x242>
90009b66:	2d00      	cmp	r5, #0
90009b68:	d1df      	bne.n	90009b2a <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009b6a:	6993      	ldr	r3, [r2, #24]
90009b6c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009b70:	d1db      	bne.n	90009b2a <HAL_I2C_Mem_Read+0x202>
90009b72:	e7ab      	b.n	90009acc <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90009b74:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90009b78:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b7a:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90009b7c:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009b80:	6853      	ldr	r3, [r2, #4]
90009b82:	ea03 0308 	and.w	r3, r3, r8
90009b86:	433b      	orrs	r3, r7
90009b88:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009b8c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009b90:	6053      	str	r3, [r2, #4]
}
90009b92:	e781      	b.n	90009a98 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90009b94:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009b98:	4912      	ldr	r1, [pc, #72]	; (90009be4 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90009b9a:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009b9c:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90009b9e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009ba2:	6863      	ldr	r3, [r4, #4]
90009ba4:	400b      	ands	r3, r1
90009ba6:	433b      	orrs	r3, r7
90009ba8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009bac:	4a0f      	ldr	r2, [pc, #60]	; (90009bec <HAL_I2C_Mem_Read+0x2c4>)
90009bae:	431a      	orrs	r2, r3
90009bb0:	6062      	str	r2, [r4, #4]
}
90009bb2:	e74b      	b.n	90009a4c <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009bb4:	4632      	mov	r2, r6
90009bb6:	4629      	mov	r1, r5
90009bb8:	4658      	mov	r0, fp
90009bba:	f7ff fc51 	bl	90009460 <I2C_WaitOnSTOPFlagUntilTimeout>
90009bbe:	b970      	cbnz	r0, 90009bde <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009bc0:	f8db 3000 	ldr.w	r3, [fp]
90009bc4:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009bc6:	4c0a      	ldr	r4, [pc, #40]	; (90009bf0 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009bc8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009bca:	685a      	ldr	r2, [r3, #4]
90009bcc:	4022      	ands	r2, r4
90009bce:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009bd0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009bd4:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009bd8:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90009bdc:	e6e4      	b.n	900099a8 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
90009bde:	2001      	movs	r0, #1
90009be0:	e6e2      	b.n	900099a8 <HAL_I2C_Mem_Read+0x80>
90009be2:	bf00      	nop
90009be4:	fc009800 	.word	0xfc009800
90009be8:	01ff2400 	.word	0x01ff2400
90009bec:	02002400 	.word	0x02002400
90009bf0:	fe00e800 	.word	0xfe00e800
90009bf4:	fc009c00 	.word	0xfc009c00
90009bf8:	01ff0000 	.word	0x01ff0000

90009bfc <HAL_I2C_GetState>:
  return hi2c->State;
90009bfc:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90009c00:	4770      	bx	lr
90009c02:	bf00      	nop

90009c04 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009c04:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90009c06:	4770      	bx	lr

90009c08 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009c08:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90009c0c:	2a20      	cmp	r2, #32
90009c0e:	d123      	bne.n	90009c58 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009c10:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009c14:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90009c18:	4603      	mov	r3, r0
90009c1a:	2a01      	cmp	r2, #1
90009c1c:	d01c      	beq.n	90009c58 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009c1e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c20:	2024      	movs	r0, #36	; 0x24
{
90009c22:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c24:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009c28:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009c2c:	6810      	ldr	r0, [r2, #0]
90009c2e:	f020 0001 	bic.w	r0, r0, #1
90009c32:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009c34:	6810      	ldr	r0, [r2, #0]
90009c36:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
90009c3a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009c3c:	6810      	ldr	r0, [r2, #0]
90009c3e:	4301      	orrs	r1, r0

    return HAL_OK;
90009c40:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009c42:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009c44:	6811      	ldr	r1, [r2, #0]
90009c46:	f041 0101 	orr.w	r1, r1, #1
90009c4a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009c4c:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009c50:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009c54:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90009c58:	2002      	movs	r0, #2
}
90009c5a:	4770      	bx	lr

90009c5c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009c5c:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90009c60:	2a20      	cmp	r2, #32
90009c62:	d122      	bne.n	90009caa <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009c64:	4603      	mov	r3, r0
{
90009c66:	b500      	push	{lr}
90009c68:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009c6c:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90009c70:	2a01      	cmp	r2, #1
90009c72:	d01c      	beq.n	90009cae <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009c74:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c76:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009c78:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90009c7c:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90009c80:	6810      	ldr	r0, [r2, #0]
90009c82:	f020 0001 	bic.w	r0, r0, #1
90009c86:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009c88:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90009c8a:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90009c8e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009c92:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009c94:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009c96:	6811      	ldr	r1, [r2, #0]
90009c98:	f041 0101 	orr.w	r1, r1, #1
90009c9c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009c9e:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009ca2:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009ca6:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90009caa:	2002      	movs	r0, #2
}
90009cac:	4770      	bx	lr
    return HAL_BUSY;
90009cae:	2002      	movs	r0, #2
}
90009cb0:	f85d fb04 	ldr.w	pc, [sp], #4

90009cb4 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009cb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009cb8:	460d      	mov	r5, r1
90009cba:	4614      	mov	r4, r2
90009cbc:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009cbe:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90009cc0:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90009cc2:	2701      	movs	r7, #1
  p = 0;
90009cc4:	f04f 0800 	mov.w	r8, #0
90009cc8:	e006      	b.n	90009cd8 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90009cca:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90009cce:	eb06 0308 	add.w	r3, r6, r8
90009cd2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90009cd6:	d837      	bhi.n	90009d48 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009cd8:	eb05 0008 	add.w	r0, r5, r8
90009cdc:	4632      	mov	r2, r6
90009cde:	4639      	mov	r1, r7
    while (i != 0UL)
90009ce0:	b116      	cbz	r6, 90009ce8 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90009ce2:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90009ce4:	f01d fed2 	bl	90027a8c <memset>
  for (l = 0; l < 16UL; l++)
90009ce8:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90009cea:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90009cee:	d1ec      	bne.n	90009cca <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90009cf0:	2300      	movs	r3, #0
90009cf2:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90009cf6:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009cfa:	7828      	ldrb	r0, [r5, #0]
90009cfc:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90009cfe:	b300      	cbz	r0, 90009d42 <JPEG_Bits_To_SizeCodes+0x8e>
90009d00:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009d04:	2701      	movs	r7, #1
  p = 0;
90009d06:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90009d08:	4288      	cmp	r0, r1
90009d0a:	d10f      	bne.n	90009d2c <JPEG_Bits_To_SizeCodes+0x78>
90009d0c:	eb02 0008 	add.w	r0, r2, r8
90009d10:	1c56      	adds	r6, r2, #1
90009d12:	eb05 0c02 	add.w	ip, r5, r2
90009d16:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90009d1a:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90009d1c:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90009d20:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009d22:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009d26:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009d28:	458e      	cmp	lr, r1
90009d2a:	d0f7      	beq.n	90009d1c <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90009d2c:	291f      	cmp	r1, #31
90009d2e:	d80b      	bhi.n	90009d48 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009d30:	fa07 f001 	lsl.w	r0, r7, r1
90009d34:	4298      	cmp	r0, r3
90009d36:	d907      	bls.n	90009d48 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90009d38:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009d3a:	005b      	lsls	r3, r3, #1
    si++;
90009d3c:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90009d3e:	2800      	cmp	r0, #0
90009d40:	d1e2      	bne.n	90009d08 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
90009d42:	2000      	movs	r0, #0
}
90009d44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90009d48:	2001      	movs	r0, #1
}
90009d4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90009d4e:	bf00      	nop

90009d50 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009d50:	b5f0      	push	{r4, r5, r6, r7, lr}
90009d52:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
90009d56:	460d      	mov	r5, r1
90009d58:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009d5a:	ab01      	add	r3, sp, #4
90009d5c:	aa43      	add	r2, sp, #268	; 0x10c
90009d5e:	a902      	add	r1, sp, #8
90009d60:	f7ff ffa8 	bl	90009cb4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009d64:	b9d0      	cbnz	r0, 90009d9c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90009d66:	9f01      	ldr	r7, [sp, #4]
90009d68:	b1c7      	cbz	r7, 90009d9c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009d6a:	370f      	adds	r7, #15
90009d6c:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90009d70:	a902      	add	r1, sp, #8
90009d72:	f104 0c0f 	add.w	ip, r4, #15
90009d76:	4427      	add	r7, r4
90009d78:	e009      	b.n	90009d8e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d7a:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009d7e:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d80:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d84:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d88:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009d8a:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009d8c:	d006      	beq.n	90009d9c <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009d8e:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009d92:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009d94:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009d98:	d9ef      	bls.n	90009d7a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009d9a:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009d9c:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90009da0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009da2:	bf00      	nop

90009da4 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009da8:	6804      	ldr	r4, [r0, #0]
{
90009daa:	b093      	sub	sp, #76	; 0x4c
90009dac:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009dae:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
90009db2:	429a      	cmp	r2, r3
90009db4:	f000 809d 	beq.w	90009ef2 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009db8:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
90009dbc:	429a      	cmp	r2, r3
90009dbe:	d003      	beq.n	90009dc8 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009dc0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009dc2:	b013      	add	sp, #76	; 0x4c
90009dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009dc8:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009dcc:	a903      	add	r1, sp, #12
90009dce:	f7ff ffbf 	bl	90009d50 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009dd2:	2800      	cmp	r0, #0
90009dd4:	d1f5      	bne.n	90009dc2 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009dd6:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dda:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dde:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009de2:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009de4:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009de8:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dea:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009dee:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009df2:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
90009df6:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009dfa:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
90009dfe:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e00:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009e04:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e08:	f89d c014 	ldrb.w	ip, [sp, #20]
90009e0c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e10:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e14:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e18:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e1c:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e1e:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e22:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90009e26:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
90009e2a:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e2e:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e32:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e36:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009e3a:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e3e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009e40:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e44:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009e48:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e4c:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009e4e:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e52:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e54:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90009e58:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e5c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e60:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009e64:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e68:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e6c:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e6e:	9b01      	ldr	r3, [sp, #4]
90009e70:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e74:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009e78:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e7c:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009e80:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e84:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90009e86:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e8a:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e8e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90009e92:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e96:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e9a:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009e9e:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
90009ea2:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90009ea6:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009eaa:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eae:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
90009eb2:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009eb4:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
90009eb8:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90009eba:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90009ebe:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ec2:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
90009ec6:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ec8:	f89d 2020 	ldrb.w	r2, [sp, #32]
90009ecc:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90009ece:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009ed2:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009ed6:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009eda:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009edc:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009ee0:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009ee4:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009ee8:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009eec:	b013      	add	sp, #76	; 0x4c
90009eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009ef2:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
90009ef6:	e769      	b.n	90009dcc <JPEG_Set_HuffDC_Mem+0x28>

90009ef8 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009ef8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009efc:	6804      	ldr	r4, [r0, #0]
{
90009efe:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
90009f02:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009f04:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90009f08:	429a      	cmp	r2, r3
90009f0a:	d042      	beq.n	90009f92 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009f0c:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
90009f10:	429a      	cmp	r2, r3
90009f12:	d004      	beq.n	90009f1e <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009f14:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009f16:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90009f1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009f1e:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009f22:	4628      	mov	r0, r5
90009f24:	466b      	mov	r3, sp
90009f26:	f20d 4234 	addw	r2, sp, #1076	; 0x434
90009f2a:	a901      	add	r1, sp, #4
90009f2c:	f7ff fec2 	bl	90009cb4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009f30:	2800      	cmp	r0, #0
90009f32:	d1f0      	bne.n	90009f16 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009f34:	9b00      	ldr	r3, [sp, #0]
90009f36:	b37b      	cbz	r3, 90009f98 <JPEG_Set_HuffAC_Mem+0xa0>
90009f38:	330f      	adds	r3, #15
90009f3a:	f20d 4734 	addw	r7, sp, #1076	; 0x434
90009f3e:	f10d 0c04 	add.w	ip, sp, #4
90009f42:	f105 020f 	add.w	r2, r5, #15
90009f46:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f4a:	ae42      	add	r6, sp, #264	; 0x108
90009f4c:	e011      	b.n	90009f72 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
90009f4e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009f52:	2ba1      	cmp	r3, #161	; 0xa1
90009f54:	d8de      	bhi.n	90009f14 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f56:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f5a:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009f5e:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
90009f62:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f64:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009f68:	4631      	mov	r1, r6
90009f6a:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009f6e:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009f70:	d013      	beq.n	90009f9a <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009f72:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009f76:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
90009f78:	2900      	cmp	r1, #0
90009f7a:	d0ec      	beq.n	90009f56 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
90009f7c:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009f7e:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009f82:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90009f84:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009f88:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009f8c:	d1df      	bne.n	90009f4e <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
90009f8e:	23a1      	movs	r3, #161	; 0xa1
90009f90:	e7e1      	b.n	90009f56 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009f92:	f204 6444 	addw	r4, r4, #1604	; 0x644
90009f96:	e7c4      	b.n	90009f22 <JPEG_Set_HuffAC_Mem+0x2a>
90009f98:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
90009f9a:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
90009f9e:	4a1a      	ldr	r2, [pc, #104]	; (9000a008 <JPEG_Set_HuffAC_Mem+0x110>)
90009fa0:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
90009fa4:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
90009fa8:	6023      	str	r3, [r4, #0]
90009faa:	6063      	str	r3, [r4, #4]
90009fac:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
90009fb0:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009fb2:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009fb6:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009fb8:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
90009fbc:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
90009fc0:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90009fc2:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
90009fc6:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009fc8:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
90009fcc:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fce:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fd2:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fd6:	0212      	lsls	r2, r2, #8
90009fd8:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fdc:	021b      	lsls	r3, r3, #8
90009fde:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fe2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
90009fe6:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fe8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009fec:	433a      	orrs	r2, r7
    while (i > 1UL)
90009fee:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009ff0:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90009ff4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009ff8:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90009ffc:	d1e7      	bne.n	90009fce <JPEG_Set_HuffAC_Mem+0xd6>
}
90009ffe:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a002:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a006:	bf00      	nop
9000a008:	0fd10fd0 	.word	0x0fd10fd0

9000a00c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a00c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a00e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000a012:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a014:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a016:	f003 0303 	and.w	r3, r3, #3
9000a01a:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a01c:	6803      	ldr	r3, [r0, #0]
9000a01e:	685a      	ldr	r2, [r3, #4]
9000a020:	bf0c      	ite	eq
9000a022:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a026:	f022 0208 	bicne.w	r2, r2, #8
9000a02a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a02c:	681a      	ldr	r2, [r3, #0]
9000a02e:	f022 0201 	bic.w	r2, r2, #1
9000a032:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a034:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a036:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a03a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a03c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a03e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000a042:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a044:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a046:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000a04a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a04c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a04e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a052:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000a054:	681a      	ldr	r2, [r3, #0]
9000a056:	f042 0201 	orr.w	r2, r2, #1
9000a05a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a05c:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a05e:	f002 020c 	and.w	r2, r2, #12
9000a062:	2a08      	cmp	r2, #8
9000a064:	d00a      	beq.n	9000a07c <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a066:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a068:	f002 020c 	and.w	r2, r2, #12
9000a06c:	2a0c      	cmp	r2, #12
9000a06e:	d000      	beq.n	9000a072 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000a070:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a072:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a074:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a078:	631a      	str	r2, [r3, #48]	; 0x30
}
9000a07a:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000a07c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a07e:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000a082:	631a      	str	r2, [r3, #48]	; 0x30
9000a084:	4770      	bx	lr
9000a086:	bf00      	nop

9000a088 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a088:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a08a:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000a08c:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a08e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000a090:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a092:	42aa      	cmp	r2, r5
9000a094:	d32d      	bcc.n	9000a0f2 <JPEG_DMA_StartProcess+0x6a>
9000a096:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a098:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a09a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a09c:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a09e:	42b3      	cmp	r3, r6
9000a0a0:	d327      	bcc.n	9000a0f2 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0a2:	4f1b      	ldr	r7, [pc, #108]	; (9000a110 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a0a4:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000a11c <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0a8:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a0aa:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a0ae:	4919      	ldr	r1, [pc, #100]	; (9000a114 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a0b0:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a0b2:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000a0b4:	4918      	ldr	r1, [pc, #96]	; (9000a118 <JPEG_DMA_StartProcess+0x90>)
9000a0b6:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000a0b8:	b1a5      	cbz	r5, 9000a0e4 <JPEG_DMA_StartProcess+0x5c>
9000a0ba:	b19e      	cbz	r6, 9000a0e4 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0bc:	fbb2 f1f5 	udiv	r1, r2, r5
9000a0c0:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0c4:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0c6:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0c8:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a0ca:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0cc:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000a0ce:	fbb3 f2f6 	udiv	r2, r3, r6
9000a0d2:	fb06 3212 	mls	r2, r6, r2, r3
9000a0d6:	1a9b      	subs	r3, r3, r2
9000a0d8:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0da:	9500      	str	r5, [sp, #0]
9000a0dc:	69e2      	ldr	r2, [r4, #28]
9000a0de:	f001 fbb5 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a0e2:	b148      	cbz	r0, 9000a0f8 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a0e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000a0e6:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a0e8:	f043 0304 	orr.w	r3, r3, #4
9000a0ec:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000a0ee:	b003      	add	sp, #12
9000a0f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000a0f2:	2001      	movs	r0, #1
}
9000a0f4:	b003      	add	sp, #12
9000a0f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a0f8:	6822      	ldr	r2, [r4, #0]
9000a0fa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a0fc:	69a1      	ldr	r1, [r4, #24]
9000a0fe:	3240      	adds	r2, #64	; 0x40
9000a100:	9500      	str	r5, [sp, #0]
9000a102:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a104:	f001 fba2 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a108:	2800      	cmp	r0, #0
9000a10a:	d0f3      	beq.n	9000a0f4 <JPEG_DMA_StartProcess+0x6c>
9000a10c:	e7ea      	b.n	9000a0e4 <JPEG_DMA_StartProcess+0x5c>
9000a10e:	bf00      	nop
9000a110:	9000a641 	.word	0x9000a641
9000a114:	9000a8b9 	.word	0x9000a8b9
9000a118:	9000a939 	.word	0x9000a939
9000a11c:	9000a66d 	.word	0x9000a66d

9000a120 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a120:	6803      	ldr	r3, [r0, #0]
9000a122:	685a      	ldr	r2, [r3, #4]
9000a124:	f002 0203 	and.w	r2, r2, #3
9000a128:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000a12a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000a12e:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a130:	f000 8094 	beq.w	9000a25c <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a134:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a136:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a138:	f014 0403 	ands.w	r4, r4, #3
9000a13c:	d172      	bne.n	9000a224 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a13e:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a140:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a142:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a144:	68da      	ldr	r2, [r3, #12]
9000a146:	0c12      	lsrs	r2, r2, #16
9000a148:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a14a:	4a5f      	ldr	r2, [pc, #380]	; (9000a2c8 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000a14c:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000a150:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000a154:	2600      	movs	r6, #0
9000a156:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a15a:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000a15e:	f241 3488 	movw	r4, #5000	; 0x1388
9000a162:	e033      	b.n	9000a1cc <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a164:	f892 8001 	ldrb.w	r8, [r2, #1]
9000a168:	fb0e f707 	mul.w	r7, lr, r7
9000a16c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a16e:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a172:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a176:	2f64      	cmp	r7, #100	; 0x64
9000a178:	d961      	bls.n	9000a23e <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000a17a:	fbb4 f7f7 	udiv	r7, r4, r7
9000a17e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a180:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000a184:	2f01      	cmp	r7, #1
9000a186:	d03d      	beq.n	9000a204 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a188:	f892 8002 	ldrb.w	r8, [r2, #2]
9000a18c:	fb0e f707 	mul.w	r7, lr, r7
9000a190:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a192:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a196:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a19a:	2f64      	cmp	r7, #100	; 0x64
9000a19c:	d94a      	bls.n	9000a234 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000a19e:	fbb4 f7f7 	udiv	r7, r4, r7
9000a1a2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a1a4:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000a1a6:	2b01      	cmp	r3, #1
9000a1a8:	d030      	beq.n	9000a20c <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a1aa:	78d7      	ldrb	r7, [r2, #3]
9000a1ac:	fb0e f303 	mul.w	r3, lr, r3
9000a1b0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a1b2:	5dcf      	ldrb	r7, [r1, r7]
9000a1b4:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000a1b8:	2b64      	cmp	r3, #100	; 0x64
9000a1ba:	d94a      	bls.n	9000a252 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000a1bc:	fbb4 f3f3 	udiv	r3, r4, r3
9000a1c0:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a1c2:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000a1c4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a1c8:	4295      	cmp	r5, r2
9000a1ca:	d025      	beq.n	9000a218 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000a1cc:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a1d0:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000a1d2:	2f01      	cmp	r7, #1
9000a1d4:	d02c      	beq.n	9000a230 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a1d6:	f892 8000 	ldrb.w	r8, [r2]
9000a1da:	fb0e f707 	mul.w	r7, lr, r7
9000a1de:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a1e0:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a1e4:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a1e8:	2f64      	cmp	r7, #100	; 0x64
9000a1ea:	d92d      	bls.n	9000a248 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000a1ec:	fbb4 f7f7 	udiv	r7, r4, r7
9000a1f0:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a1f2:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a1f6:	2f01      	cmp	r7, #1
9000a1f8:	d1b4      	bne.n	9000a164 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a1fa:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a1fe:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a200:	2f01      	cmp	r7, #1
9000a202:	d1c1      	bne.n	9000a188 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a204:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a206:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a208:	2b01      	cmp	r3, #1
9000a20a:	d1ce      	bne.n	9000a1aa <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a20c:	3204      	adds	r2, #4
        quality += 100UL;
9000a20e:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000a210:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a214:	4295      	cmp	r5, r2
9000a216:	d1d9      	bne.n	9000a1cc <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000a218:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a21a:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a21c:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a220:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000a224:	f002 0203 	and.w	r2, r2, #3
9000a228:	2a03      	cmp	r2, #3
9000a22a:	d14a      	bne.n	9000a2c2 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000a22c:	2430      	movs	r4, #48	; 0x30
9000a22e:	e016      	b.n	9000a25e <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000a230:	3664      	adds	r6, #100	; 0x64
9000a232:	e7de      	b.n	9000a1f2 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000a234:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a238:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a23c:	e7b2      	b.n	9000a1a4 <HAL_JPEG_GetInfo.part.0+0x84>
9000a23e:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a242:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a246:	e79b      	b.n	9000a180 <HAL_JPEG_GetInfo.part.0+0x60>
9000a248:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a24c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a250:	e7cf      	b.n	9000a1f2 <HAL_JPEG_GetInfo.part.0+0xd2>
9000a252:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000a256:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a25a:	e7b2      	b.n	9000a1c2 <HAL_JPEG_GetInfo.part.0+0xa2>
9000a25c:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a25e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a260:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a264:	0c12      	lsrs	r2, r2, #16
9000a266:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a26a:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a26c:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a26e:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a270:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a272:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a274:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a278:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a27c:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a280:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000a284:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a288:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a28c:	d108      	bne.n	9000a2a0 <HAL_JPEG_GetInfo.part.0+0x180>
9000a28e:	2d01      	cmp	r5, #1
9000a290:	d106      	bne.n	9000a2a0 <HAL_JPEG_GetInfo.part.0+0x180>
9000a292:	f016 0f0f 	tst.w	r6, #15
9000a296:	bf0c      	ite	eq
9000a298:	2401      	moveq	r4, #1
9000a29a:	2400      	movne	r4, #0
9000a29c:	0064      	lsls	r4, r4, #1
9000a29e:	e754      	b.n	9000a14a <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a2a0:	ea42 020c 	orr.w	r2, r2, ip
9000a2a4:	f012 040f 	ands.w	r4, r2, #15
9000a2a8:	f43f af4f 	beq.w	9000a14a <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a2ac:	ea4c 0206 	orr.w	r2, ip, r6
9000a2b0:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000a2b4:	2d03      	cmp	r5, #3
9000a2b6:	bf08      	it	eq
9000a2b8:	2a00      	cmpeq	r2, #0
9000a2ba:	bf0c      	ite	eq
9000a2bc:	2401      	moveq	r4, #1
9000a2be:	2400      	movne	r4, #0
9000a2c0:	e743      	b.n	9000a14a <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000a2c2:	2001      	movs	r0, #1
}
9000a2c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a2c8:	9002b230 	.word	0x9002b230

9000a2cc <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a2cc:	2800      	cmp	r0, #0
9000a2ce:	f000 810b 	beq.w	9000a4e8 <HAL_JPEG_Init+0x21c>
{
9000a2d2:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a2d4:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a2d8:	4604      	mov	r4, r0
9000a2da:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a2de:	2b00      	cmp	r3, #0
9000a2e0:	f000 80fd 	beq.w	9000a4de <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000a2e4:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a2e6:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000a2e8:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a2ea:	4880      	ldr	r0, [pc, #512]	; (9000a4ec <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a2ec:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a2f0:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a2f2:	f041 0101 	orr.w	r1, r1, #1
9000a2f6:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a2f8:	6811      	ldr	r1, [r2, #0]
9000a2fa:	f021 0101 	bic.w	r1, r1, #1
9000a2fe:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a300:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a302:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000a306:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a308:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a30a:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000a30e:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a310:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a312:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000a316:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a318:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000a31a:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000a31e:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a320:	4973      	ldr	r1, [pc, #460]	; (9000a4f0 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a322:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a324:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000a326:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a328:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a32c:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000a330:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000a334:	4b6f      	ldr	r3, [pc, #444]	; (9000a4f4 <HAL_JPEG_Init+0x228>)
9000a336:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000a33a:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a33e:	486e      	ldr	r0, [pc, #440]	; (9000a4f8 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a340:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a344:	4b6d      	ldr	r3, [pc, #436]	; (9000a4fc <HAL_JPEG_Init+0x230>)
9000a346:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000a34a:	496d      	ldr	r1, [pc, #436]	; (9000a500 <HAL_JPEG_Init+0x234>)
9000a34c:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a350:	4b6c      	ldr	r3, [pc, #432]	; (9000a504 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a352:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a356:	486c      	ldr	r0, [pc, #432]	; (9000a508 <HAL_JPEG_Init+0x23c>)
9000a358:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000a35c:	496b      	ldr	r1, [pc, #428]	; (9000a50c <HAL_JPEG_Init+0x240>)
9000a35e:	4b6c      	ldr	r3, [pc, #432]	; (9000a510 <HAL_JPEG_Init+0x244>)
9000a360:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000a364:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000a368:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a36c:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000a370:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000a374:	4967      	ldr	r1, [pc, #412]	; (9000a514 <HAL_JPEG_Init+0x248>)
9000a376:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a378:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a37c:	430b      	orrs	r3, r1
  *address = value;
9000a37e:	4966      	ldr	r1, [pc, #408]	; (9000a518 <HAL_JPEG_Init+0x24c>)
9000a380:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000a384:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a388:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000a38c:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a38e:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a392:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a394:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a398:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000a39c:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a39e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a3a2:	ea43 030c 	orr.w	r3, r3, ip
9000a3a6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a3aa:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000a3ae:	d1eb      	bne.n	9000a388 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000a3b0:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3b4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000a3b8:	4856      	ldr	r0, [pc, #344]	; (9000a514 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3ba:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000a3bc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a3be:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000a3c2:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000a3c6:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a3ca:	4003      	ands	r3, r0
  *address = value;
9000a3cc:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a3d0:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000a3d4:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000a3d8:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a3dc:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000a3e0:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a3e4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a3e6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000a3ea:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000a3ee:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000a3f2:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a3f4:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a3f6:	4b49      	ldr	r3, [pc, #292]	; (9000a51c <HAL_JPEG_Init+0x250>)
  *address = value;
9000a3f8:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a3fc:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a400:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000a404:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000a408:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000a40c:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000a410:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000a412:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000a416:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000a41a:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000a41e:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a420:	483f      	ldr	r0, [pc, #252]	; (9000a520 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000a422:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a424:	4b3f      	ldr	r3, [pc, #252]	; (9000a524 <HAL_JPEG_Init+0x258>)
  *address = value;
9000a426:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a42a:	493f      	ldr	r1, [pc, #252]	; (9000a528 <HAL_JPEG_Init+0x25c>)
9000a42c:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000a430:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a434:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000a438:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000a43c:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a440:	493a      	ldr	r1, [pc, #232]	; (9000a52c <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000a442:	b29b      	uxth	r3, r3
9000a444:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000a448:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000a44c:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a450:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000a454:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a456:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000a45a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000a45c:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a460:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000a464:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000a466:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000a46a:	ea43 030e 	orr.w	r3, r3, lr
9000a46e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a472:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000a476:	d1eb      	bne.n	9000a450 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000a478:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000a47c:	4926      	ldr	r1, [pc, #152]	; (9000a518 <HAL_JPEG_Init+0x24c>)
9000a47e:	4620      	mov	r0, r4
9000a480:	f7ff fd3a 	bl	90009ef8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a484:	b118      	cbz	r0, 9000a48e <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a486:	2301      	movs	r3, #1
    return HAL_ERROR;
9000a488:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000a48a:	6523      	str	r3, [r4, #80]	; 0x50
}
9000a48c:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000a48e:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000a490:	4620      	mov	r0, r4
9000a492:	4926      	ldr	r1, [pc, #152]	; (9000a52c <HAL_JPEG_Init+0x260>)
9000a494:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000a498:	f7ff fd2e 	bl	90009ef8 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000a49c:	2800      	cmp	r0, #0
9000a49e:	d1f2      	bne.n	9000a486 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000a4a0:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000a4a2:	4620      	mov	r0, r4
9000a4a4:	4922      	ldr	r1, [pc, #136]	; (9000a530 <HAL_JPEG_Init+0x264>)
9000a4a6:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000a4aa:	f7ff fc7b 	bl	90009da4 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000a4ae:	2800      	cmp	r0, #0
9000a4b0:	d1e9      	bne.n	9000a486 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000a4b2:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000a4b4:	4620      	mov	r0, r4
9000a4b6:	491f      	ldr	r1, [pc, #124]	; (9000a534 <HAL_JPEG_Init+0x268>)
9000a4b8:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000a4bc:	f7ff fc72 	bl	90009da4 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000a4c0:	2800      	cmp	r0, #0
9000a4c2:	d1e0      	bne.n	9000a486 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a4c4:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4c6:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000a4c8:	6853      	ldr	r3, [r2, #4]
9000a4ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000a4ce:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000a4d0:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000a4d2:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a4d4:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000a4d8:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000a4da:	6560      	str	r0, [r4, #84]	; 0x54
}
9000a4dc:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000a4de:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000a4e2:	f7f8 fd8f 	bl	90003004 <HAL_JPEG_MspInit>
9000a4e6:	e6fd      	b.n	9000a2e4 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000a4e8:	2001      	movs	r0, #1
}
9000a4ea:	4770      	bx	lr
9000a4ec:	9002b1f0 	.word	0x9002b1f0
9000a4f0:	9002b178 	.word	0x9002b178
9000a4f4:	01050100 	.word	0x01050100
9000a4f8:	0b0a0908 	.word	0x0b0a0908
9000a4fc:	07060504 	.word	0x07060504
9000a500:	03020100 	.word	0x03020100
9000a504:	7d010000 	.word	0x7d010000
9000a508:	04040505 	.word	0x04040505
9000a50c:	03040203 	.word	0x03040203
9000a510:	03010200 	.word	0x03010200
9000a514:	ffff0000 	.word	0xffff0000
9000a518:	9002b0c4 	.word	0x9002b0c4
9000a51c:	09080706 	.word	0x09080706
9000a520:	01000404 	.word	0x01000404
9000a524:	04040201 	.word	0x04040201
9000a528:	05070403 	.word	0x05070403
9000a52c:	9002b010 	.word	0x9002b010
9000a530:	9002b1d4 	.word	0x9002b1d4
9000a534:	9002b1b8 	.word	0x9002b1b8

9000a538 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a538:	2b00      	cmp	r3, #0
9000a53a:	bf18      	it	ne
9000a53c:	2900      	cmpne	r1, #0
9000a53e:	d03b      	beq.n	9000a5b8 <HAL_JPEG_Decode_DMA+0x80>
{
9000a540:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000a542:	fab0 f580 	clz	r5, r0
9000a546:	4604      	mov	r4, r0
9000a548:	096d      	lsrs	r5, r5, #5
9000a54a:	b330      	cbz	r0, 9000a59a <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000a54c:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000a550:	f1bc 0f01 	cmp.w	ip, #1
9000a554:	d02e      	beq.n	9000a5b4 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a556:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000a55a:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a55e:	45f4      	cmp	ip, lr
9000a560:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000a564:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000a568:	d119      	bne.n	9000a59e <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000a56a:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000a56c:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000a570:	9b04      	ldr	r3, [sp, #16]
9000a572:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000a574:	2304      	movs	r3, #4
9000a576:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000a57a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a57c:	f023 030f 	bic.w	r3, r3, #15
9000a580:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000a582:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a584:	f043 030e 	orr.w	r3, r3, #14
9000a588:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000a58a:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000a58c:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000a58e:	f7ff fd3d 	bl	9000a00c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000a592:	f7ff fd79 	bl	9000a088 <JPEG_DMA_StartProcess>
9000a596:	b930      	cbnz	r0, 9000a5a6 <HAL_JPEG_Decode_DMA+0x6e>
}
9000a598:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000a59a:	2001      	movs	r0, #1
}
9000a59c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000a59e:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000a5a0:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000a5a4:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a5a6:	2306      	movs	r3, #6
      return HAL_ERROR;
9000a5a8:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000a5aa:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a5ae:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000a5b2:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000a5b4:	2002      	movs	r0, #2
}
9000a5b6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000a5b8:	2001      	movs	r0, #1
}
9000a5ba:	4770      	bx	lr

9000a5bc <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a5bc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a5be:	f003 030c 	and.w	r3, r3, #12
9000a5c2:	2b0c      	cmp	r3, #12
9000a5c4:	d01a      	beq.n	9000a5fc <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a5c6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a5c8:	f003 030c 	and.w	r3, r3, #12
9000a5cc:	2b08      	cmp	r3, #8
9000a5ce:	d001      	beq.n	9000a5d4 <HAL_JPEG_Pause+0x18>
}
9000a5d0:	2000      	movs	r0, #0
9000a5d2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a5d4:	07ca      	lsls	r2, r1, #31
9000a5d6:	d41f      	bmi.n	9000a618 <HAL_JPEG_Pause+0x5c>
9000a5d8:	f04f 3cff 	mov.w	ip, #4294967295
9000a5dc:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a5e0:	078b      	lsls	r3, r1, #30
9000a5e2:	d504      	bpl.n	9000a5ee <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a5e4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a5e6:	4694      	mov	ip, r2
9000a5e8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000a5ec:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a5ee:	6802      	ldr	r2, [r0, #0]
}
9000a5f0:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a5f2:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a5f4:	ea03 030c 	and.w	r3, r3, ip
9000a5f8:	6313      	str	r3, [r2, #48]	; 0x30
}
9000a5fa:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a5fc:	07cb      	lsls	r3, r1, #31
9000a5fe:	d503      	bpl.n	9000a608 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a600:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a602:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000a606:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a608:	0789      	lsls	r1, r1, #30
9000a60a:	d5e1      	bpl.n	9000a5d0 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000a60c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a60e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000a612:	6543      	str	r3, [r0, #84]	; 0x54
}
9000a614:	2000      	movs	r0, #0
9000a616:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a618:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a61a:	f06f 0c06 	mvn.w	ip, #6
9000a61e:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000a622:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000a626:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a628:	e7da      	b.n	9000a5e0 <HAL_JPEG_Pause+0x24>
9000a62a:	bf00      	nop

9000a62c <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000a62c:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000a62e:	6282      	str	r2, [r0, #40]	; 0x28
}
9000a630:	4770      	bx	lr
9000a632:	bf00      	nop

9000a634 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000a634:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000a636:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000a638:	4770      	bx	lr
9000a63a:	bf00      	nop

9000a63c <HAL_JPEG_EncodeCpltCallback>:
9000a63c:	4770      	bx	lr
9000a63e:	bf00      	nop

9000a640 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a640:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a642:	2101      	movs	r1, #1
{
9000a644:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a646:	6803      	ldr	r3, [r0, #0]
9000a648:	681a      	ldr	r2, [r3, #0]
9000a64a:	f022 0201 	bic.w	r2, r2, #1
9000a64e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a650:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a652:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a656:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000a658:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a65c:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000a65e:	f043 0304 	orr.w	r3, r3, #4
9000a662:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000a664:	f7f7 f876 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000a668:	bd08      	pop	{r3, pc}
9000a66a:	bf00      	nop

9000a66c <JPEG_MDMAInCpltCallback>:
{
9000a66c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a66e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a670:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000a674:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a676:	6822      	ldr	r2, [r4, #0]
9000a678:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a67a:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000a67e:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000a680:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a682:	400b      	ands	r3, r1
9000a684:	2b0c      	cmp	r3, #12
9000a686:	d001      	beq.n	9000a68c <JPEG_MDMAInCpltCallback+0x20>
}
9000a688:	b003      	add	sp, #12
9000a68a:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a68c:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a68e:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a690:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a692:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a694:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a696:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a69a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a69c:	1a9b      	subs	r3, r3, r2
9000a69e:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a6a0:	6a21      	ldr	r1, [r4, #32]
9000a6a2:	f7f6 ffe3 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000a6a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a6a8:	42ab      	cmp	r3, r5
9000a6aa:	d311      	bcc.n	9000a6d0 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000a6ac:	b305      	cbz	r5, 9000a6f0 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a6ae:	fbb3 f2f5 	udiv	r2, r3, r5
9000a6b2:	fb05 3212 	mls	r2, r5, r2, r3
9000a6b6:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a6b8:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a6ba:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a6bc:	04d1      	lsls	r1, r2, #19
9000a6be:	d400      	bmi.n	9000a6c2 <JPEG_MDMAInCpltCallback+0x56>
9000a6c0:	b963      	cbnz	r3, 9000a6dc <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a6c2:	6822      	ldr	r2, [r4, #0]
9000a6c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a6c6:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000a6ca:	6313      	str	r3, [r2, #48]	; 0x30
}
9000a6cc:	b003      	add	sp, #12
9000a6ce:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000a6d0:	b1cb      	cbz	r3, 9000a706 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000a6d2:	0798      	lsls	r0, r3, #30
9000a6d4:	d119      	bne.n	9000a70a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a6d6:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a6d8:	04d2      	lsls	r2, r2, #19
9000a6da:	d4f2      	bmi.n	9000a6c2 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a6dc:	6822      	ldr	r2, [r4, #0]
9000a6de:	2501      	movs	r5, #1
9000a6e0:	69a1      	ldr	r1, [r4, #24]
9000a6e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a6e4:	3240      	adds	r2, #64	; 0x40
9000a6e6:	9500      	str	r5, [sp, #0]
9000a6e8:	f001 f8b0 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a6ec:	2800      	cmp	r0, #0
9000a6ee:	d0e8      	beq.n	9000a6c2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a6f0:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6f2:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a6f4:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a6f6:	f043 0304 	orr.w	r3, r3, #4
9000a6fa:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a6fc:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a700:	f7f7 f828 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000a704:	e7c0      	b.n	9000a688 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a706:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a708:	e7db      	b.n	9000a6c2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a70a:	f023 0303 	bic.w	r3, r3, #3
9000a70e:	3304      	adds	r3, #4
9000a710:	e7d2      	b.n	9000a6b8 <JPEG_MDMAInCpltCallback+0x4c>
9000a712:	bf00      	nop

9000a714 <JPEG_DMA_PollResidualData>:
{
9000a714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a716:	6802      	ldr	r2, [r0, #0]
9000a718:	2610      	movs	r6, #16
{
9000a71a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a71c:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000a71e:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000a722:	d11d      	bne.n	9000a760 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a724:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000a726:	06df      	lsls	r7, r3, #27
9000a728:	d51a      	bpl.n	9000a760 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a72a:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a72c:	69e7      	ldr	r7, [r4, #28]
9000a72e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a730:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a732:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a734:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a736:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a738:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000a73a:	69e2      	ldr	r2, [r4, #28]
9000a73c:	443a      	add	r2, r7
9000a73e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a740:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a742:	69e2      	ldr	r2, [r4, #28]
9000a744:	4402      	add	r2, r0
9000a746:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a748:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a74a:	69e2      	ldr	r2, [r4, #28]
9000a74c:	440a      	add	r2, r1
9000a74e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a750:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a752:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a754:	3304      	adds	r3, #4
9000a756:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a758:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a75a:	4293      	cmp	r3, r2
9000a75c:	d021      	beq.n	9000a7a2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a75e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a760:	3e01      	subs	r6, #1
9000a762:	d1db      	bne.n	9000a71c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a764:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a766:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000a768:	06d8      	lsls	r0, r3, #27
9000a76a:	d501      	bpl.n	9000a770 <JPEG_DMA_PollResidualData+0x5c>
9000a76c:	048b      	lsls	r3, r1, #18
9000a76e:	d417      	bmi.n	9000a7a0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a770:	6813      	ldr	r3, [r2, #0]
9000a772:	f023 0301 	bic.w	r3, r3, #1
9000a776:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a778:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a77a:	b9eb      	cbnz	r3, 9000a7b8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a77c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000a77e:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a780:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a782:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a784:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a788:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a78c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a790:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a792:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a794:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a796:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a79a:	d00a      	beq.n	9000a7b2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a79c:	f7ff ff4e 	bl	9000a63c <HAL_JPEG_EncodeCpltCallback>
}
9000a7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a7a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a7a4:	4620      	mov	r0, r4
9000a7a6:	69e1      	ldr	r1, [r4, #28]
9000a7a8:	f7f6 ff80 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a7ac:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a7ae:	6265      	str	r5, [r4, #36]	; 0x24
9000a7b0:	e7d6      	b.n	9000a760 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a7b2:	f7f6 ffd1 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000a7b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a7b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a7ba:	4620      	mov	r0, r4
9000a7bc:	69e1      	ldr	r1, [r4, #28]
9000a7be:	f7f6 ff75 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a7c2:	2300      	movs	r3, #0
9000a7c4:	6263      	str	r3, [r4, #36]	; 0x24
9000a7c6:	e7d9      	b.n	9000a77c <JPEG_DMA_PollResidualData+0x68>

9000a7c8 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a7c8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a7ca:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000a7ce:	d028      	beq.n	9000a822 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a7d0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a7d2:	f003 030c 	and.w	r3, r3, #12
9000a7d6:	2b0c      	cmp	r3, #12
{
9000a7d8:	b570      	push	{r4, r5, r6, lr}
9000a7da:	4604      	mov	r4, r0
9000a7dc:	b082      	sub	sp, #8
9000a7de:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a7e0:	d007      	beq.n	9000a7f2 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a7e2:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a7e4:	f003 030c 	and.w	r3, r3, #12
9000a7e8:	2b08      	cmp	r3, #8
9000a7ea:	d037      	beq.n	9000a85c <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000a7ec:	2000      	movs	r0, #0
}
9000a7ee:	b002      	add	sp, #8
9000a7f0:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a7f2:	07c8      	lsls	r0, r1, #31
9000a7f4:	d417      	bmi.n	9000a826 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a7f6:	07a9      	lsls	r1, r5, #30
9000a7f8:	d5f8      	bpl.n	9000a7ec <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a7fa:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a7fc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000a800:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a802:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a804:	041a      	lsls	r2, r3, #16
9000a806:	d453      	bmi.n	9000a8b0 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a808:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a80a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000a80c:	2a00      	cmp	r2, #0
9000a80e:	d13e      	bne.n	9000a88e <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a810:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a812:	2206      	movs	r2, #6
          return HAL_ERROR;
9000a814:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a816:	f043 0304 	orr.w	r3, r3, #4
9000a81a:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a81c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000a820:	e7e5      	b.n	9000a7ee <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000a822:	2001      	movs	r0, #1
}
9000a824:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a826:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a828:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a82a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a82e:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a830:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000a832:	2a00      	cmp	r2, #0
9000a834:	d0ec      	beq.n	9000a810 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a836:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a838:	fbb3 f1f2 	udiv	r1, r3, r2
9000a83c:	fb02 3211 	mls	r2, r2, r1, r3
9000a840:	1a9b      	subs	r3, r3, r2
9000a842:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000a844:	2b00      	cmp	r3, #0
9000a846:	d0d6      	beq.n	9000a7f6 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a848:	6822      	ldr	r2, [r4, #0]
9000a84a:	2601      	movs	r6, #1
9000a84c:	3240      	adds	r2, #64	; 0x40
9000a84e:	9600      	str	r6, [sp, #0]
9000a850:	69a1      	ldr	r1, [r4, #24]
9000a852:	f000 fffb 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a856:	2800      	cmp	r0, #0
9000a858:	d0cd      	beq.n	9000a7f6 <HAL_JPEG_Resume+0x2e>
9000a85a:	e7d9      	b.n	9000a810 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a85c:	f011 0101 	ands.w	r1, r1, #1
9000a860:	d013      	beq.n	9000a88a <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a862:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a864:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a866:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a868:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000a86c:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a86e:	07ab      	lsls	r3, r5, #30
9000a870:	d504      	bpl.n	9000a87c <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a872:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a874:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a876:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000a87a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a87c:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000a87e:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a880:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000a882:	430b      	orrs	r3, r1
9000a884:	6313      	str	r3, [r2, #48]	; 0x30
}
9000a886:	b002      	add	sp, #8
9000a888:	bd70      	pop	{r4, r5, r6, pc}
9000a88a:	2228      	movs	r2, #40	; 0x28
9000a88c:	e7ef      	b.n	9000a86e <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a88e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a890:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a892:	fbb3 f1f2 	udiv	r1, r3, r2
9000a896:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a89a:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a89c:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a89e:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a8a0:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a8a2:	9500      	str	r5, [sp, #0]
9000a8a4:	69e2      	ldr	r2, [r4, #28]
9000a8a6:	f000 ffd1 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a8aa:	2800      	cmp	r0, #0
9000a8ac:	d09e      	beq.n	9000a7ec <HAL_JPEG_Resume+0x24>
9000a8ae:	e7af      	b.n	9000a810 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a8b0:	4620      	mov	r0, r4
9000a8b2:	f7ff ff2f 	bl	9000a714 <JPEG_DMA_PollResidualData>
9000a8b6:	e799      	b.n	9000a7ec <HAL_JPEG_Resume+0x24>

9000a8b8 <JPEG_MDMAOutCpltCallback>:
{
9000a8b8:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a8ba:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a8bc:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000a8c0:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a8c2:	6823      	ldr	r3, [r4, #0]
9000a8c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a8c6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a8ca:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a8cc:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a8ce:	400a      	ands	r2, r1
9000a8d0:	2a0c      	cmp	r2, #12
9000a8d2:	d001      	beq.n	9000a8d8 <JPEG_MDMAOutCpltCallback+0x20>
}
9000a8d4:	b003      	add	sp, #12
9000a8d6:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a8d8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a8da:	0692      	lsls	r2, r2, #26
9000a8dc:	d505      	bpl.n	9000a8ea <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a8de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a8e0:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a8e4:	631a      	str	r2, [r3, #48]	; 0x30
}
9000a8e6:	b003      	add	sp, #12
9000a8e8:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a8ea:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8ec:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a8ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000a8f0:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8f2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a8f4:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a8f8:	1a9b      	subs	r3, r3, r2
9000a8fa:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a8fe:	f7f6 fed5 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a902:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a904:	049b      	lsls	r3, r3, #18
9000a906:	d501      	bpl.n	9000a90c <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a908:	6823      	ldr	r3, [r4, #0]
9000a90a:	e7e8      	b.n	9000a8de <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a90c:	6821      	ldr	r1, [r4, #0]
9000a90e:	2501      	movs	r5, #1
9000a910:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000a912:	69e2      	ldr	r2, [r4, #28]
9000a914:	3144      	adds	r1, #68	; 0x44
9000a916:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a918:	9500      	str	r5, [sp, #0]
9000a91a:	f000 ff97 	bl	9000b84c <HAL_MDMA_Start_IT>
9000a91e:	2800      	cmp	r0, #0
9000a920:	d0f2      	beq.n	9000a908 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a922:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a924:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a926:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a928:	f043 0304 	orr.w	r3, r3, #4
9000a92c:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a92e:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a932:	f7f6 ff0f 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000a936:	e7cd      	b.n	9000a8d4 <JPEG_MDMAOutCpltCallback+0x1c>

9000a938 <JPEG_MDMAOutAbortCallback>:
{
9000a938:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a93a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a93c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a93e:	041a      	lsls	r2, r3, #16
9000a940:	d400      	bmi.n	9000a944 <JPEG_MDMAOutAbortCallback+0xc>
}
9000a942:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a944:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000a946:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000a948:	681b      	ldr	r3, [r3, #0]
9000a94a:	695b      	ldr	r3, [r3, #20]
9000a94c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a950:	1ad3      	subs	r3, r2, r3
9000a952:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a954:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a956:	429a      	cmp	r2, r3
9000a958:	d025      	beq.n	9000a9a6 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a95a:	6822      	ldr	r2, [r4, #0]
9000a95c:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000a95e:	f015 0510 	ands.w	r5, r5, #16
9000a962:	d118      	bne.n	9000a996 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a964:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a966:	bb4b      	cbnz	r3, 9000a9bc <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a968:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a96a:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a96c:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a96e:	f023 0301 	bic.w	r3, r3, #1
9000a972:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a974:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a976:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a978:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a97c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a980:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a984:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a986:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a988:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a98a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a98e:	d012      	beq.n	9000a9b6 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a990:	f7ff fe54 	bl	9000a63c <HAL_JPEG_EncodeCpltCallback>
}
9000a994:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a996:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a998:	049b      	lsls	r3, r3, #18
9000a99a:	d4d2      	bmi.n	9000a942 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a99c:	4620      	mov	r0, r4
}
9000a99e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a9a2:	f7ff beb7 	b.w	9000a714 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a9a8:	4620      	mov	r0, r4
9000a9aa:	69e1      	ldr	r1, [r4, #28]
9000a9ac:	f7f6 fe7e 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a9b0:	2300      	movs	r3, #0
9000a9b2:	6263      	str	r3, [r4, #36]	; 0x24
9000a9b4:	e7d1      	b.n	9000a95a <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a9b6:	f7f6 fecf 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000a9ba:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a9be:	4620      	mov	r0, r4
9000a9c0:	69e1      	ldr	r1, [r4, #28]
9000a9c2:	f7f6 fe73 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a9c6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a9c8:	6265      	str	r5, [r4, #36]	; 0x24
9000a9ca:	e7cd      	b.n	9000a968 <JPEG_MDMAOutAbortCallback+0x30>

9000a9cc <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a9cc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a9ce:	f003 0303 	and.w	r3, r3, #3
9000a9d2:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a9d4:	6803      	ldr	r3, [r0, #0]
{
9000a9d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a9da:	4604      	mov	r4, r0
9000a9dc:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a9de:	d01f      	beq.n	9000aa20 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a9e0:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a9e2:	04d7      	lsls	r7, r2, #19
9000a9e4:	d407      	bmi.n	9000a9f6 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a9e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a9e8:	0796      	lsls	r6, r2, #30
9000a9ea:	f100 811d 	bmi.w	9000ac28 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a9ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a9f0:	0750      	lsls	r0, r2, #29
9000a9f2:	f100 81b1 	bmi.w	9000ad58 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a9f6:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000a9f8:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000a9fc:	d107      	bne.n	9000aa0e <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a9fe:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000aa00:	f016 0608 	ands.w	r6, r6, #8
9000aa04:	d14c      	bne.n	9000aaa0 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000aa06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aa08:	06d2      	lsls	r2, r2, #27
9000aa0a:	f100 81e3 	bmi.w	9000add4 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aa0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aa10:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000aa14:	2a20      	cmp	r2, #32
9000aa16:	d01a      	beq.n	9000aa4e <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000aa18:	2000      	movs	r0, #0
}
9000aa1a:	b002      	add	sp, #8
9000aa1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aa20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aa22:	0652      	lsls	r2, r2, #25
9000aa24:	d5dc      	bpl.n	9000a9e0 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000aa26:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000aa28:	9101      	str	r1, [sp, #4]
9000aa2a:	f7ff fb79 	bl	9000a120 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000aa2e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aa30:	9901      	ldr	r1, [sp, #4]
9000aa32:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000aa34:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aa36:	f7f6 fde3 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000aa3a:	6823      	ldr	r3, [r4, #0]
9000aa3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aa3e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000aa42:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000aa44:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000aa46:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000aa4a:	639a      	str	r2, [r3, #56]	; 0x38
9000aa4c:	e7c8      	b.n	9000a9e0 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa4e:	681a      	ldr	r2, [r3, #0]
9000aa50:	f022 0201 	bic.w	r2, r2, #1
9000aa54:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000aa56:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000aa58:	f002 020c 	and.w	r2, r2, #12
9000aa5c:	2a08      	cmp	r2, #8
9000aa5e:	f000 81e6 	beq.w	9000ae2e <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000aa62:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000aa64:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000aa68:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000aa6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aa6c:	2b00      	cmp	r3, #0
9000aa6e:	f040 81e3 	bne.w	9000ae38 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000aa72:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000aa74:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa76:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa78:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa7a:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aa7e:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa80:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000aa84:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa88:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa8a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa8c:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa90:	f000 81c9 	beq.w	9000ae26 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000aa94:	f7ff fdd2 	bl	9000a63c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000aa98:	4628      	mov	r0, r5
}
9000aa9a:	b002      	add	sp, #8
9000aa9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000aaa0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aaa2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000aaa4:	3220      	adds	r2, #32
9000aaa6:	4296      	cmp	r6, r2
9000aaa8:	f0c0 81e4 	bcc.w	9000ae74 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000aaac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aaae:	69e1      	ldr	r1, [r4, #28]
9000aab0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aab2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aab4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aab6:	69e2      	ldr	r2, [r4, #28]
9000aab8:	440a      	add	r2, r1
9000aaba:	0a19      	lsrs	r1, r3, #8
9000aabc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aabe:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aac0:	69e2      	ldr	r2, [r4, #28]
9000aac2:	440a      	add	r2, r1
9000aac4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aac6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aac8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aaca:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aacc:	69e2      	ldr	r2, [r4, #28]
9000aace:	440a      	add	r2, r1
9000aad0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aad2:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aad4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000aad6:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aad8:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000aada:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000aadc:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000aade:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aae0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000aae2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aae4:	69e2      	ldr	r2, [r4, #28]
9000aae6:	440a      	add	r2, r1
9000aae8:	0a19      	lsrs	r1, r3, #8
9000aaea:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aaec:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aaee:	69e2      	ldr	r2, [r4, #28]
9000aaf0:	440a      	add	r2, r1
9000aaf2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aaf4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aaf6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aaf8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aafa:	69e2      	ldr	r2, [r4, #28]
9000aafc:	440a      	add	r2, r1
9000aafe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab00:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab02:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ab04:	3304      	adds	r3, #4
9000ab06:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ab08:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab0c:	69e1      	ldr	r1, [r4, #28]
9000ab0e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ab10:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab12:	69e2      	ldr	r2, [r4, #28]
9000ab14:	440a      	add	r2, r1
9000ab16:	0a19      	lsrs	r1, r3, #8
9000ab18:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab1a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab1c:	69e2      	ldr	r2, [r4, #28]
9000ab1e:	440a      	add	r2, r1
9000ab20:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab22:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab24:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab26:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab28:	69e2      	ldr	r2, [r4, #28]
9000ab2a:	440a      	add	r2, r1
9000ab2c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab30:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ab32:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab34:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ab36:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ab38:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab3c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ab3e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab40:	69e2      	ldr	r2, [r4, #28]
9000ab42:	440a      	add	r2, r1
9000ab44:	0a19      	lsrs	r1, r3, #8
9000ab46:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab48:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab4a:	69e2      	ldr	r2, [r4, #28]
9000ab4c:	440a      	add	r2, r1
9000ab4e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab50:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab52:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab54:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab56:	69e2      	ldr	r2, [r4, #28]
9000ab58:	440a      	add	r2, r1
9000ab5a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab5e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ab60:	3304      	adds	r3, #4
9000ab62:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ab64:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab66:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab68:	69e1      	ldr	r1, [r4, #28]
9000ab6a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ab6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab6e:	69e2      	ldr	r2, [r4, #28]
9000ab70:	440a      	add	r2, r1
9000ab72:	0a19      	lsrs	r1, r3, #8
9000ab74:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab76:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab78:	69e2      	ldr	r2, [r4, #28]
9000ab7a:	440a      	add	r2, r1
9000ab7c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab7e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ab80:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ab82:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab84:	69e2      	ldr	r2, [r4, #28]
9000ab86:	440a      	add	r2, r1
9000ab88:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ab8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ab8c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000ab8e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab90:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000ab92:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ab94:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ab96:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ab98:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ab9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ab9c:	69e2      	ldr	r2, [r4, #28]
9000ab9e:	440a      	add	r2, r1
9000aba0:	0a19      	lsrs	r1, r3, #8
9000aba2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aba4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000aba6:	69e2      	ldr	r2, [r4, #28]
9000aba8:	440a      	add	r2, r1
9000abaa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abac:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abae:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000abb2:	69e2      	ldr	r2, [r4, #28]
9000abb4:	440a      	add	r2, r1
9000abb6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000abb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000abba:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000abbc:	3304      	adds	r3, #4
9000abbe:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000abc0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000abc2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000abc4:	69e1      	ldr	r1, [r4, #28]
9000abc6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000abc8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000abca:	69e2      	ldr	r2, [r4, #28]
9000abcc:	440a      	add	r2, r1
9000abce:	0a19      	lsrs	r1, r3, #8
9000abd0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abd2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000abd4:	69e2      	ldr	r2, [r4, #28]
9000abd6:	440a      	add	r2, r1
9000abd8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abda:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000abdc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000abde:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000abe0:	69e2      	ldr	r2, [r4, #28]
9000abe2:	440a      	add	r2, r1
9000abe4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000abe6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000abe8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000abea:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000abec:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000abee:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000abf0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000abf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000abf4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000abf6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000abf8:	69e2      	ldr	r2, [r4, #28]
9000abfa:	440a      	add	r2, r1
9000abfc:	0a19      	lsrs	r1, r3, #8
9000abfe:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac00:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac02:	69e2      	ldr	r2, [r4, #28]
9000ac04:	440a      	add	r2, r1
9000ac06:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac08:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ac0a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ac0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ac0e:	69e2      	ldr	r2, [r4, #28]
9000ac10:	440a      	add	r2, r1
9000ac12:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ac14:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ac16:	3304      	adds	r3, #4
9000ac18:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ac1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ac1c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ac1e:	429a      	cmp	r2, r3
9000ac20:	f000 82ae 	beq.w	9000b180 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ac24:	6823      	ldr	r3, [r4, #0]
9000ac26:	e6f2      	b.n	9000aa0e <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ac28:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ac2a:	2a00      	cmp	r2, #0
9000ac2c:	f000 810c 	beq.w	9000ae48 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ac30:	6a21      	ldr	r1, [r4, #32]
9000ac32:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ac34:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ac36:	f240 81a4 	bls.w	9000af82 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ac3a:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ac3c:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000ac3e:	04cd      	lsls	r5, r1, #19
9000ac40:	f53f aed9 	bmi.w	9000a9f6 <JPEG_Process+0x2a>
9000ac44:	2a00      	cmp	r2, #0
9000ac46:	f43f aed6 	beq.w	9000a9f6 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000ac4a:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000ac4c:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000ac50:	f240 8203 	bls.w	9000b05a <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac54:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000ac56:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac58:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac5a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac5c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac5e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac60:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac62:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac64:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ac68:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac6a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac6e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ac70:	6a21      	ldr	r1, [r4, #32]
9000ac72:	3104      	adds	r1, #4
9000ac74:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac76:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac78:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac7a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac7c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac7e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac80:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ac82:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac84:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ac88:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac8a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac8e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ac90:	6a21      	ldr	r1, [r4, #32]
9000ac92:	3104      	adds	r1, #4
9000ac94:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ac96:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac98:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ac9a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ac9c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ac9e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aca0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aca2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aca4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aca8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acaa:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acae:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000acb0:	6a21      	ldr	r1, [r4, #32]
9000acb2:	3104      	adds	r1, #4
9000acb4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000acb6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acb8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acba:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acbc:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acbe:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acc0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000acc2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acc4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000acc8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acca:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acce:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000acd0:	6a21      	ldr	r1, [r4, #32]
9000acd2:	3104      	adds	r1, #4
9000acd4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000acd6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acd8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acda:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acdc:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acde:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ace0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ace2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ace4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ace8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acea:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acee:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000acf0:	6a21      	ldr	r1, [r4, #32]
9000acf2:	3104      	adds	r1, #4
9000acf4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000acf6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acf8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000acfa:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000acfc:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000acfe:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad00:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad02:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad04:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ad08:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad0a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad0e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ad10:	6a21      	ldr	r1, [r4, #32]
9000ad12:	3104      	adds	r1, #4
9000ad14:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ad16:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad18:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad1a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad1c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad1e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad20:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad22:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad24:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ad28:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad2a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad2e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ad30:	6a21      	ldr	r1, [r4, #32]
9000ad32:	3104      	adds	r1, #4
9000ad34:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ad36:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad38:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad3a:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad3c:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ad3e:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad40:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ad42:	7849      	ldrb	r1, [r1, #1]
9000ad44:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ad48:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ad4a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad4e:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ad50:	6a22      	ldr	r2, [r4, #32]
9000ad52:	3204      	adds	r2, #4
9000ad54:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ad56:	e64e      	b.n	9000a9f6 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ad58:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ad5a:	2a00      	cmp	r2, #0
9000ad5c:	d074      	beq.n	9000ae48 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ad5e:	6a21      	ldr	r1, [r4, #32]
9000ad60:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ad62:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ad64:	f200 8164 	bhi.w	9000b030 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ad68:	428a      	cmp	r2, r1
9000ad6a:	f040 810c 	bne.w	9000af86 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ad6e:	6a21      	ldr	r1, [r4, #32]
9000ad70:	4620      	mov	r0, r4
9000ad72:	f7f6 fc7b 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ad76:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ad78:	2a04      	cmp	r2, #4
9000ad7a:	d902      	bls.n	9000ad82 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ad7c:	f022 0203 	bic.w	r2, r2, #3
9000ad80:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000ad82:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ad84:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ad86:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ad88:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000ad8a:	04c9      	lsls	r1, r1, #19
9000ad8c:	f53f ae33 	bmi.w	9000a9f6 <JPEG_Process+0x2a>
9000ad90:	2a00      	cmp	r2, #0
9000ad92:	f43f ae30 	beq.w	9000a9f6 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000ad96:	0891      	lsrs	r1, r2, #2
9000ad98:	f040 8203 	bne.w	9000b1a2 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ad9c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ad9e:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000ada0:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ada2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000ada4:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ada8:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000adaa:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000adac:	d010      	beq.n	9000add0 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000adae:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000adb0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000adb2:	5c69      	ldrb	r1, [r5, r1]
9000adb4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000adb8:	6a21      	ldr	r1, [r4, #32]
9000adba:	f101 0101 	add.w	r1, r1, #1
9000adbe:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000adc0:	d106      	bne.n	9000add0 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000adc2:	6a22      	ldr	r2, [r4, #32]
9000adc4:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000adc6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000adc8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000adcc:	3201      	adds	r2, #1
9000adce:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000add0:	6418      	str	r0, [r3, #64]	; 0x40
9000add2:	e610      	b.n	9000a9f6 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000add4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000add6:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000add8:	3204      	adds	r2, #4
9000adda:	4295      	cmp	r5, r2
9000addc:	f0c0 80d5 	bcc.w	9000af8a <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000ade0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ade2:	69e1      	ldr	r1, [r4, #28]
9000ade4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ade6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ade8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000adea:	69e2      	ldr	r2, [r4, #28]
9000adec:	440a      	add	r2, r1
9000adee:	0a19      	lsrs	r1, r3, #8
9000adf0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000adf2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000adf4:	69e2      	ldr	r2, [r4, #28]
9000adf6:	440a      	add	r2, r1
9000adf8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000adfa:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000adfc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000adfe:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ae00:	69e2      	ldr	r2, [r4, #28]
9000ae02:	440a      	add	r2, r1
9000ae04:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ae06:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ae08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000ae0a:	3304      	adds	r3, #4
9000ae0c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ae0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ae10:	429a      	cmp	r2, r3
9000ae12:	f47f af07 	bne.w	9000ac24 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ae16:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ae18:	4620      	mov	r0, r4
9000ae1a:	69e1      	ldr	r1, [r4, #28]
9000ae1c:	f7f6 fc46 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ae20:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ae22:	6266      	str	r6, [r4, #36]	; 0x24
9000ae24:	e5f3      	b.n	9000aa0e <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ae26:	f7f6 fc97 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000ae2a:	4628      	mov	r0, r5
9000ae2c:	e5f5      	b.n	9000aa1a <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ae2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000ae30:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000ae34:	631a      	str	r2, [r3, #48]	; 0x30
9000ae36:	e614      	b.n	9000aa62 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ae38:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ae3a:	4620      	mov	r0, r4
9000ae3c:	69e1      	ldr	r1, [r4, #28]
9000ae3e:	f7f6 fc35 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ae42:	2300      	movs	r3, #0
9000ae44:	6263      	str	r3, [r4, #36]	; 0x24
9000ae46:	e614      	b.n	9000aa72 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ae48:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ae4a:	f002 020c 	and.w	r2, r2, #12
9000ae4e:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ae50:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ae52:	f000 80fd 	beq.w	9000b050 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ae56:	f002 020c 	and.w	r2, r2, #12
9000ae5a:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ae5c:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ae5e:	f47f adca 	bne.w	9000a9f6 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ae62:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000ae66:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000ae68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000ae6a:	f022 0206 	bic.w	r2, r2, #6
9000ae6e:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ae70:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ae72:	e5c0      	b.n	9000a9f6 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000ae74:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ae76:	4296      	cmp	r6, r2
9000ae78:	f67f adc9 	bls.w	9000aa0e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000ae7c:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000ae7e:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000ae80:	0880      	lsrs	r0, r0, #2
9000ae82:	d020      	beq.n	9000aec6 <JPEG_Process+0x4fa>
9000ae84:	4629      	mov	r1, r5
9000ae86:	e000      	b.n	9000ae8a <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000ae88:	6823      	ldr	r3, [r4, #0]
9000ae8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000ae8c:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ae8e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ae90:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000ae92:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000ae94:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000ae96:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000ae98:	69e2      	ldr	r2, [r4, #28]
9000ae9a:	4432      	add	r2, r6
9000ae9c:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000aea0:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aea2:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000aea4:	69e2      	ldr	r2, [r4, #28]
9000aea6:	4432      	add	r2, r6
9000aea8:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aeac:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000aeb0:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000aeb2:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000aeb4:	69e2      	ldr	r2, [r4, #28]
9000aeb6:	4432      	add	r2, r6
9000aeb8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000aeba:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aebc:	f103 0304 	add.w	r3, r3, #4
9000aec0:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000aec2:	d1e1      	bne.n	9000ae88 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000aec4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000aec6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aec8:	42b3      	cmp	r3, r6
9000aeca:	f000 8161 	beq.w	9000b190 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000aece:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000aed2:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000aed4:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000aed8:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000aeda:	d00e      	beq.n	9000aefa <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aedc:	f005 0303 	and.w	r3, r5, #3
9000aee0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aee2:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000aee4:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aee6:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000aee8:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aeea:	fa27 f303 	lsr.w	r3, r7, r3
9000aeee:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000aef0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000aef2:	f103 0301 	add.w	r3, r3, #1
9000aef6:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000aef8:	d1f0      	bne.n	9000aedc <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000aefa:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aefe:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af00:	69e1      	ldr	r1, [r4, #28]
9000af02:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000af04:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000af08:	f7f6 fbd0 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000af0c:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000af0e:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000af12:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af14:	f63f ae86 	bhi.w	9000ac24 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af18:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000af1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af1e:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000af20:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af24:	fa27 f003 	lsr.w	r0, r7, r3
9000af28:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000af2a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af2c:	f102 0201 	add.w	r2, r2, #1
9000af30:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af32:	f43f ae77 	beq.w	9000ac24 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af36:	f103 0208 	add.w	r2, r3, #8
9000af3a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000af3c:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000af3e:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af42:	fa27 f202 	lsr.w	r2, r7, r2
9000af46:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000af48:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af4a:	f102 0201 	add.w	r2, r2, #1
9000af4e:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af50:	f108 0202 	add.w	r2, r8, #2
9000af54:	f43f ae66 	beq.w	9000ac24 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af58:	3310      	adds	r3, #16
9000af5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000af5c:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000af5e:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af60:	fa27 f303 	lsr.w	r3, r7, r3
9000af64:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000af66:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000af68:	f103 0301 	add.w	r3, r3, #1
9000af6c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af6e:	f47f ae59 	bne.w	9000ac24 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000af72:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000af74:	0e3f      	lsrs	r7, r7, #24
9000af76:	69e2      	ldr	r2, [r4, #28]
9000af78:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000af7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000af7c:	3301      	adds	r3, #1
9000af7e:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000af80:	e650      	b.n	9000ac24 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000af82:	428a      	cmp	r2, r1
9000af84:	d056      	beq.n	9000b034 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000af86:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000af88:	e535      	b.n	9000a9f6 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000af8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af8c:	4295      	cmp	r5, r2
9000af8e:	f67f ad3e 	bls.w	9000aa0e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000af92:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000af94:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000af96:	0880      	lsrs	r0, r0, #2
9000af98:	d020      	beq.n	9000afdc <JPEG_Process+0x610>
9000af9a:	4631      	mov	r1, r6
9000af9c:	e000      	b.n	9000afa0 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000af9e:	6823      	ldr	r3, [r4, #0]
9000afa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000afa2:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000afa4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000afa6:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000afa8:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000afaa:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000afac:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000afae:	69e2      	ldr	r2, [r4, #28]
9000afb0:	442a      	add	r2, r5
9000afb2:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000afb6:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afb8:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000afba:	69e2      	ldr	r2, [r4, #28]
9000afbc:	442a      	add	r2, r5
9000afbe:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afc2:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000afc6:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000afc8:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000afca:	69e2      	ldr	r2, [r4, #28]
9000afcc:	442a      	add	r2, r5
9000afce:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000afd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000afd2:	f103 0304 	add.w	r3, r3, #4
9000afd6:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000afd8:	d1e1      	bne.n	9000af9e <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000afda:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000afdc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000afde:	429d      	cmp	r5, r3
9000afe0:	f000 80d6 	beq.w	9000b190 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000afe4:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000afe8:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000afea:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000afee:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000aff0:	d00e      	beq.n	9000b010 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000aff2:	f006 0303 	and.w	r3, r6, #3
9000aff6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000aff8:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000affa:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000affc:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000affe:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b000:	fa27 f303 	lsr.w	r3, r7, r3
9000b004:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b006:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b008:	f103 0301 	add.w	r3, r3, #1
9000b00c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b00e:	d1f0      	bne.n	9000aff2 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000b010:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b014:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b016:	69e1      	ldr	r1, [r4, #28]
9000b018:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b01a:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b01e:	f7f6 fb45 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b022:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b024:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b028:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b02a:	f67f af75 	bls.w	9000af18 <JPEG_Process+0x54c>
9000b02e:	e5f9      	b.n	9000ac24 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b030:	1a52      	subs	r2, r2, r1
9000b032:	e6a9      	b.n	9000ad88 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b034:	6a21      	ldr	r1, [r4, #32]
9000b036:	4620      	mov	r0, r4
9000b038:	f7f6 fb18 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b03c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b03e:	2a04      	cmp	r2, #4
9000b040:	d902      	bls.n	9000b048 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b042:	f022 0203 	bic.w	r2, r2, #3
9000b046:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000b048:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b04a:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b04c:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000b04e:	e5f5      	b.n	9000ac3c <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b050:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000b054:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b056:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b058:	e4cd      	b.n	9000a9f6 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000b05a:	2a03      	cmp	r2, #3
9000b05c:	f240 80a4 	bls.w	9000b1a8 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000b060:	2900      	cmp	r1, #0
9000b062:	f43f acc8 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b066:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b068:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b06a:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b06c:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b070:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b072:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b074:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b076:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b07a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b07c:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b080:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b084:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b088:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b08a:	6a20      	ldr	r0, [r4, #32]
9000b08c:	f100 0004 	add.w	r0, r0, #4
9000b090:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b092:	f43f acb0 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b096:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b098:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b09a:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b09e:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0a0:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0a2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0a4:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b0a8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0aa:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b0ae:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0b2:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b0b6:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b0b8:	6a20      	ldr	r0, [r4, #32]
9000b0ba:	f100 0004 	add.w	r0, r0, #4
9000b0be:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b0c0:	f43f ac99 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b0c4:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b0c6:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0c8:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b0cc:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0ce:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0d0:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0d2:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b0d6:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0d8:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b0dc:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0e0:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b0e4:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b0e6:	6a20      	ldr	r0, [r4, #32]
9000b0e8:	f100 0004 	add.w	r0, r0, #4
9000b0ec:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b0ee:	f43f ac82 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b0f2:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b0f4:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0f6:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b0fa:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b0fc:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b0fe:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b100:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b104:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b106:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b10a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b10e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b112:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b114:	6a20      	ldr	r0, [r4, #32]
9000b116:	f100 0004 	add.w	r0, r0, #4
9000b11a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b11c:	f43f ac6b 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b120:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b122:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b124:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b128:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b12a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b12c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b12e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b132:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b134:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b138:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b13c:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b140:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b142:	6a20      	ldr	r0, [r4, #32]
9000b144:	f100 0004 	add.w	r0, r0, #4
9000b148:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b14a:	f43f ac54 	beq.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b14e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b150:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b152:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b156:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b158:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b15a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b15c:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b160:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b162:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b166:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b16a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b16e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b170:	6a20      	ldr	r0, [r4, #32]
9000b172:	f100 0004 	add.w	r0, r0, #4
9000b176:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b178:	f47f ac3d 	bne.w	9000a9f6 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b17c:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b17e:	e5db      	b.n	9000ad38 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b180:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b182:	4620      	mov	r0, r4
9000b184:	69e1      	ldr	r1, [r4, #28]
9000b186:	f7f6 fa91 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b18a:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b18c:	6265      	str	r5, [r4, #36]	; 0x24
9000b18e:	e43e      	b.n	9000aa0e <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b190:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b192:	4620      	mov	r0, r4
9000b194:	69e1      	ldr	r1, [r4, #28]
9000b196:	f7f6 fa89 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b19a:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b19c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b19e:	6262      	str	r2, [r4, #36]	; 0x24
9000b1a0:	e435      	b.n	9000aa0e <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000b1a2:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b1a4:	69a0      	ldr	r0, [r4, #24]
9000b1a6:	e5c7      	b.n	9000ad38 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1a8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b1aa:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b1ac:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1ae:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b1b0:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1b4:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000b1b6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b1b8:	d010      	beq.n	9000b1dc <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1ba:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b1bc:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1be:	5c28      	ldrb	r0, [r5, r0]
9000b1c0:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000b1c4:	6a20      	ldr	r0, [r4, #32]
9000b1c6:	f100 0001 	add.w	r0, r0, #1
9000b1ca:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b1cc:	d106      	bne.n	9000b1dc <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1ce:	6a22      	ldr	r2, [r4, #32]
9000b1d0:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000b1d2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b1d4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000b1d8:	3201      	adds	r2, #1
9000b1da:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b1dc:	6419      	str	r1, [r3, #64]	; 0x40
9000b1de:	e40a      	b.n	9000a9f6 <JPEG_Process+0x2a>

9000b1e0 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000b1e0:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000b1e4:	3b03      	subs	r3, #3
9000b1e6:	2b01      	cmp	r3, #1
9000b1e8:	d900      	bls.n	9000b1ec <HAL_JPEG_IRQHandler+0xc>
9000b1ea:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b1ec:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b1ee:	f003 030c 	and.w	r3, r3, #12
9000b1f2:	2b08      	cmp	r3, #8
{
9000b1f4:	b530      	push	{r4, r5, lr}
9000b1f6:	4604      	mov	r4, r0
9000b1f8:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b1fa:	d006      	beq.n	9000b20a <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b1fc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b1fe:	f003 030c 	and.w	r3, r3, #12
9000b202:	2b0c      	cmp	r3, #12
9000b204:	d006      	beq.n	9000b214 <HAL_JPEG_IRQHandler+0x34>
}
9000b206:	b003      	add	sp, #12
9000b208:	bd30      	pop	{r4, r5, pc}
9000b20a:	b003      	add	sp, #12
9000b20c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b210:	f7ff bbdc 	b.w	9000a9cc <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b214:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b216:	f003 0303 	and.w	r3, r3, #3
9000b21a:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b21c:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b21e:	d045      	beq.n	9000b2ac <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b220:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b222:	0692      	lsls	r2, r2, #26
9000b224:	d5ef      	bpl.n	9000b206 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b226:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b228:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b22a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b22e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b230:	681a      	ldr	r2, [r3, #0]
9000b232:	f022 0201 	bic.w	r2, r2, #1
9000b236:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b238:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b23a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b23e:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b240:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b242:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b246:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b248:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b24c:	2b02      	cmp	r3, #2
9000b24e:	d052      	beq.n	9000b2f6 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b250:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000b252:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b256:	2b02      	cmp	r3, #2
9000b258:	d03f      	beq.n	9000b2da <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b25a:	6803      	ldr	r3, [r0, #0]
9000b25c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b25e:	695b      	ldr	r3, [r3, #20]
9000b260:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b264:	1ad3      	subs	r3, r2, r3
9000b266:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b268:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b26a:	429a      	cmp	r2, r3
9000b26c:	d046      	beq.n	9000b2fc <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b26e:	6822      	ldr	r2, [r4, #0]
9000b270:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000b272:	f015 0510 	ands.w	r5, r5, #16
9000b276:	d135      	bne.n	9000b2e4 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000b278:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b27a:	2b00      	cmp	r3, #0
9000b27c:	d149      	bne.n	9000b312 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b27e:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b280:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b282:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b284:	f023 0301 	bic.w	r3, r3, #1
9000b288:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b28a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b28c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b28e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b292:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b296:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b29a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b29c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b29e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b2a0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b2a4:	d032      	beq.n	9000b30c <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b2a6:	f7ff f9c9 	bl	9000a63c <HAL_JPEG_EncodeCpltCallback>
9000b2aa:	e7ac      	b.n	9000b206 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b2ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b2ae:	0651      	lsls	r1, r2, #25
9000b2b0:	d5b6      	bpl.n	9000b220 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b2b2:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b2b4:	9101      	str	r1, [sp, #4]
9000b2b6:	f7fe ff33 	bl	9000a120 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b2ba:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b2bc:	9901      	ldr	r1, [sp, #4]
9000b2be:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b2c0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b2c2:	f7f6 f99d 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b2c6:	6823      	ldr	r3, [r4, #0]
9000b2c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b2ca:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000b2ce:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b2d0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b2d2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000b2d6:	639a      	str	r2, [r3, #56]	; 0x38
9000b2d8:	e7a2      	b.n	9000b220 <HAL_JPEG_IRQHandler+0x40>
}
9000b2da:	b003      	add	sp, #12
9000b2dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b2e0:	f000 bb30 	b.w	9000b944 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b2e4:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b2e6:	049b      	lsls	r3, r3, #18
9000b2e8:	d48d      	bmi.n	9000b206 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000b2ea:	4620      	mov	r0, r4
}
9000b2ec:	b003      	add	sp, #12
9000b2ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b2f2:	f7ff ba0f 	b.w	9000a714 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b2f6:	f000 fb25 	bl	9000b944 <HAL_MDMA_Abort_IT>
9000b2fa:	e7a9      	b.n	9000b250 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b2fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b2fe:	4620      	mov	r0, r4
9000b300:	69e1      	ldr	r1, [r4, #28]
9000b302:	f7f6 f9d3 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b306:	2300      	movs	r3, #0
9000b308:	6263      	str	r3, [r4, #36]	; 0x24
9000b30a:	e7b0      	b.n	9000b26e <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b30c:	f7f6 fa24 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000b310:	e779      	b.n	9000b206 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b312:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b314:	4620      	mov	r0, r4
9000b316:	69e1      	ldr	r1, [r4, #28]
9000b318:	f7f6 f9c8 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b31c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b31e:	6265      	str	r5, [r4, #36]	; 0x24
9000b320:	e7ad      	b.n	9000b27e <HAL_JPEG_IRQHandler+0x9e>
9000b322:	bf00      	nop

9000b324 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b324:	2800      	cmp	r0, #0
9000b326:	d067      	beq.n	9000b3f8 <HAL_LTDC_Init+0xd4>
{
9000b328:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b32a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000b32e:	4604      	mov	r4, r0
9000b330:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b334:	2b00      	cmp	r3, #0
9000b336:	d05a      	beq.n	9000b3ee <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b338:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b33a:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b33c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b340:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b344:	4302      	orrs	r2, r0
9000b346:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b348:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b34a:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b34c:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b34e:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b352:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b354:	4929      	ldr	r1, [pc, #164]	; (9000b3fc <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b356:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b358:	6998      	ldr	r0, [r3, #24]
9000b35a:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b35c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b35e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b360:	689a      	ldr	r2, [r3, #8]
9000b362:	400a      	ands	r2, r1
9000b364:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b366:	689a      	ldr	r2, [r3, #8]
9000b368:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b36c:	69a0      	ldr	r0, [r4, #24]
9000b36e:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b370:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b372:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000b374:	68da      	ldr	r2, [r3, #12]
9000b376:	400a      	ands	r2, r1
9000b378:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b37a:	68da      	ldr	r2, [r3, #12]
9000b37c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b380:	6a20      	ldr	r0, [r4, #32]
9000b382:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b384:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b386:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000b388:	691a      	ldr	r2, [r3, #16]
9000b38a:	400a      	ands	r2, r1
9000b38c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b38e:	691a      	ldr	r2, [r3, #16]
9000b390:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b394:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000b396:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b398:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b39a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000b39c:	695a      	ldr	r2, [r3, #20]
9000b39e:	400a      	ands	r2, r1
9000b3a0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000b3a2:	695a      	ldr	r2, [r3, #20]
9000b3a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000b3a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b3aa:	430a      	orrs	r2, r1
9000b3ac:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b3ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b3b0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b3b4:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b3b8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b3bc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b3be:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000b3c0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000b3c4:	432a      	orrs	r2, r5
9000b3c6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b3ca:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b3cc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b3d0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b3d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b3d4:	f042 0206 	orr.w	r2, r2, #6
9000b3d8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b3da:	699a      	ldr	r2, [r3, #24]
9000b3dc:	f042 0201 	orr.w	r2, r2, #1
9000b3e0:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b3e2:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b3e4:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b3e8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000b3ec:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b3ee:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b3f2:	f7f7 fe93 	bl	9000311c <HAL_LTDC_MspInit>
9000b3f6:	e79f      	b.n	9000b338 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b3f8:	2001      	movs	r0, #1
}
9000b3fa:	4770      	bx	lr
9000b3fc:	f000f800 	.word	0xf000f800

9000b400 <HAL_LTDC_ErrorCallback>:
9000b400:	4770      	bx	lr
9000b402:	bf00      	nop

9000b404 <HAL_LTDC_ReloadEventCallback>:
9000b404:	4770      	bx	lr
9000b406:	bf00      	nop

9000b408 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b408:	6803      	ldr	r3, [r0, #0]
{
9000b40a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000b40c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000b40e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000b410:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000b412:	076a      	lsls	r2, r5, #29
9000b414:	d501      	bpl.n	9000b41a <HAL_LTDC_IRQHandler+0x12>
9000b416:	0771      	lsls	r1, r6, #29
9000b418:	d41d      	bmi.n	9000b456 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000b41a:	07aa      	lsls	r2, r5, #30
9000b41c:	d501      	bpl.n	9000b422 <HAL_LTDC_IRQHandler+0x1a>
9000b41e:	07b3      	lsls	r3, r6, #30
9000b420:	d42d      	bmi.n	9000b47e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000b422:	07e8      	lsls	r0, r5, #31
9000b424:	d501      	bpl.n	9000b42a <HAL_LTDC_IRQHandler+0x22>
9000b426:	07f1      	lsls	r1, r6, #31
9000b428:	d440      	bmi.n	9000b4ac <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000b42a:	072a      	lsls	r2, r5, #28
9000b42c:	d501      	bpl.n	9000b432 <HAL_LTDC_IRQHandler+0x2a>
9000b42e:	0733      	lsls	r3, r6, #28
9000b430:	d400      	bmi.n	9000b434 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000b432:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b434:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b436:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000b438:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000b43a:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000b43c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b43e:	f022 0208 	bic.w	r2, r2, #8
9000b442:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000b444:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b446:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000b448:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b44c:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000b450:	f7ff ffd8 	bl	9000b404 <HAL_LTDC_ReloadEventCallback>
}
9000b454:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000b456:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b458:	f022 0204 	bic.w	r2, r2, #4
9000b45c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000b45e:	2204      	movs	r2, #4
9000b460:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000b462:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000b466:	f043 0301 	orr.w	r3, r3, #1
9000b46a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000b46e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b470:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b474:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b478:	f7ff ffc2 	bl	9000b400 <HAL_LTDC_ErrorCallback>
9000b47c:	e7cd      	b.n	9000b41a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b47e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000b480:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000b482:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b484:	f022 0202 	bic.w	r2, r2, #2
9000b488:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000b48a:	2202      	movs	r2, #2
9000b48c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b48e:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000b490:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000b494:	f043 0302 	orr.w	r3, r3, #2
9000b498:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000b49c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000b49e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b4a2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000b4a6:	f7ff ffab 	bl	9000b400 <HAL_LTDC_ErrorCallback>
9000b4aa:	e7ba      	b.n	9000b422 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b4ac:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000b4ae:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b4b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b4b2:	f022 0201 	bic.w	r2, r2, #1
9000b4b6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000b4b8:	2201      	movs	r2, #1
9000b4ba:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000b4bc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000b4be:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000b4c2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000b4c6:	f7f7 f99f 	bl	90002808 <HAL_LTDC_LineEventCallback>
9000b4ca:	e7ae      	b.n	9000b42a <HAL_LTDC_IRQHandler+0x22>

9000b4cc <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000b4cc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000b4d0:	2b01      	cmp	r3, #1
9000b4d2:	f000 80c0 	beq.w	9000b656 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4d6:	2302      	movs	r3, #2
{
9000b4d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b4dc:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b4e0:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b4e4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000b4e8:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b4ea:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b4ee:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b4f0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b4f4:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b4f6:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000b4fa:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b4fc:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000b500:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b502:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b506:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b50a:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000b66c <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b50e:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000b512:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000b516:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b518:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b51a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b51e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b520:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b522:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b526:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000b528:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000b52c:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000b52e:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000b530:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b534:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b536:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000b538:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b53c:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000b540:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b542:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b544:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000b548:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000b54c:	440b      	add	r3, r1
9000b54e:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000b552:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b556:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b55a:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b55e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b562:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000b566:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000b568:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b56c:	68ab      	ldr	r3, [r5, #8]
9000b56e:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000b572:	3301      	adds	r3, #1
9000b574:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000b578:	4403      	add	r3, r0
9000b57a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b57e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000b580:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000b584:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000b588:	f023 0307 	bic.w	r3, r3, #7
9000b58c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000b590:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b594:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000b598:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000b59a:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000b59e:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000b5a2:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000b5a6:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000b5aa:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000b5ae:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000b5b2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000b5b6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000b5ba:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000b5be:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000b5c2:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000b5c6:	696b      	ldr	r3, [r5, #20]
9000b5c8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b5cc:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b5d0:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b5d2:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b5d6:	6a28      	ldr	r0, [r5, #32]
9000b5d8:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000b5da:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000b5de:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000b5e2:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000b5e6:	2300      	movs	r3, #0
9000b5e8:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000b5ec:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000b5ee:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b5f2:	bb59      	cbnz	r1, 9000b64c <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000b5f4:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b5f6:	1abf      	subs	r7, r7, r2
9000b5f8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000b5fa:	fb03 f707 	mul.w	r7, r3, r7
9000b5fe:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b602:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b604:	3707      	adds	r7, #7
9000b606:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000b60a:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000b60e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000b612:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000b616:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000b61a:	4b12      	ldr	r3, [pc, #72]	; (9000b664 <HAL_LTDC_ConfigLayer+0x198>)
9000b61c:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000b620:	400b      	ands	r3, r1
9000b622:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000b626:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b62a:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000b62c:	f859 3006 	ldr.w	r3, [r9, r6]
9000b630:	4313      	orrs	r3, r2
9000b632:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000b636:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000b638:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000b63c:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000b63e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000b642:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000b646:	b003      	add	sp, #12
9000b648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000b64c:	3901      	subs	r1, #1
9000b64e:	2906      	cmp	r1, #6
9000b650:	d903      	bls.n	9000b65a <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000b652:	2301      	movs	r3, #1
9000b654:	e7cf      	b.n	9000b5f6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000b656:	2002      	movs	r0, #2
}
9000b658:	4770      	bx	lr
9000b65a:	4b03      	ldr	r3, [pc, #12]	; (9000b668 <HAL_LTDC_ConfigLayer+0x19c>)
9000b65c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000b660:	e7c9      	b.n	9000b5f6 <HAL_LTDC_ConfigLayer+0x12a>
9000b662:	bf00      	nop
9000b664:	fffff800 	.word	0xfffff800
9000b668:	9002b270 	.word	0x9002b270
9000b66c:	fffff8f8 	.word	0xfffff8f8

9000b670 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000b670:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000b674:	2a01      	cmp	r2, #1
9000b676:	d019      	beq.n	9000b6ac <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b678:	6802      	ldr	r2, [r0, #0]
9000b67a:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b67c:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000b67e:	f04f 0c00 	mov.w	ip, #0
{
9000b682:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b684:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b688:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000b68a:	4c09      	ldr	r4, [pc, #36]	; (9000b6b0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000b68c:	f020 0001 	bic.w	r0, r0, #1
9000b690:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b692:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000b694:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000b696:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000b698:	4301      	orrs	r1, r0
9000b69a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000b69c:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000b6a0:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000b6a2:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000b6a6:	f85d 4b04 	ldr.w	r4, [sp], #4
9000b6aa:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000b6ac:	2002      	movs	r0, #2
}
9000b6ae:	4770      	bx	lr
9000b6b0:	50001000 	.word	0x50001000

9000b6b4 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000b6b4:	b538      	push	{r3, r4, r5, lr}
9000b6b6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000b6b8:	f7fd f984 	bl	900089c4 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000b6bc:	2c00      	cmp	r4, #0
9000b6be:	d05a      	beq.n	9000b776 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000b6c0:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b6c2:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000b6c4:	2100      	movs	r1, #0
9000b6c6:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b6c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000b6cc:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b6d0:	68da      	ldr	r2, [r3, #12]
9000b6d2:	f022 0201 	bic.w	r2, r2, #1
9000b6d6:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b6d8:	e005      	b.n	9000b6e6 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b6da:	f7fd f973 	bl	900089c4 <HAL_GetTick>
9000b6de:	1b43      	subs	r3, r0, r5
9000b6e0:	2b05      	cmp	r3, #5
9000b6e2:	d841      	bhi.n	9000b768 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b6e4:	6823      	ldr	r3, [r4, #0]
9000b6e6:	68da      	ldr	r2, [r3, #12]
9000b6e8:	07d2      	lsls	r2, r2, #31
9000b6ea:	d4f6      	bmi.n	9000b6da <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b6ec:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b6f0:	69e0      	ldr	r0, [r4, #28]
9000b6f2:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b6f4:	68e1      	ldr	r1, [r4, #12]
9000b6f6:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b6f8:	4302      	orrs	r2, r0
9000b6fa:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b6fc:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b6fe:	4302      	orrs	r2, r0
9000b700:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b702:	4302      	orrs	r2, r0
9000b704:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000b706:	4302      	orrs	r2, r0
9000b708:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000b70a:	4302      	orrs	r2, r0
9000b70c:	68a0      	ldr	r0, [r4, #8]
9000b70e:	4302      	orrs	r2, r0
9000b710:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000b712:	3801      	subs	r0, #1
9000b714:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b718:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b71a:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b71c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b720:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b722:	d103      	bne.n	9000b72c <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b724:	691a      	ldr	r2, [r3, #16]
9000b726:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000b72a:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b72c:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b72e:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000b730:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b732:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b734:	db30      	blt.n	9000b798 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b736:	b292      	uxth	r2, r2
9000b738:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b73a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000b73c:	2a00      	cmp	r2, #0
9000b73e:	db1c      	blt.n	9000b77a <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b740:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b742:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b746:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b74a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b74c:	d021      	beq.n	9000b792 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b74e:	b2c0      	uxtb	r0, r0
9000b750:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b752:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b754:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b756:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000b758:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b75a:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b75c:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b75e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000b762:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000b766:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b768:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b76a:	2303      	movs	r3, #3
      return HAL_ERROR;
9000b76c:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b76e:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b770:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000b774:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000b776:	2001      	movs	r0, #1
}
9000b778:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b77a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b77c:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b77e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b782:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000b786:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b788:	6a19      	ldr	r1, [r3, #32]
9000b78a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b78e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b790:	d1dd      	bne.n	9000b74e <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b792:	2200      	movs	r2, #0
9000b794:	629a      	str	r2, [r3, #40]	; 0x28
9000b796:	e7dc      	b.n	9000b752 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b798:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b79a:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b79c:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b7a0:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b7a2:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b7a4:	621a      	str	r2, [r3, #32]
9000b7a6:	e7c8      	b.n	9000b73a <HAL_MDMA_Init+0x86>

9000b7a8 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b7a8:	b1f8      	cbz	r0, 9000b7ea <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b7aa:	6802      	ldr	r2, [r0, #0]
9000b7ac:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b7ae:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b7b0:	68d0      	ldr	r0, [r2, #12]
{
9000b7b2:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b7b4:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b7b8:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b7ba:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b7bc:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b7be:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b7c0:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b7c2:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b7c4:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b7c6:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b7c8:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b7ca:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000b7cc:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000b7ce:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000b7d0:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b7d2:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b7d4:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000b7d6:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b7da:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000b7de:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b7e2:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000b7e4:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000b7e8:	4770      	bx	lr
    return HAL_ERROR;
9000b7ea:	2001      	movs	r0, #1
}
9000b7ec:	4770      	bx	lr
9000b7ee:	bf00      	nop

9000b7f0 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b7f0:	b310      	cbz	r0, 9000b838 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000b7f2:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b7f4:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000b7f8:	2801      	cmp	r0, #1
9000b7fa:	d01f      	beq.n	9000b83c <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000b7fc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b7fe:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b802:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000b806:	45f4      	cmp	ip, lr
9000b808:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b80c:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b810:	d004      	beq.n	9000b81c <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000b812:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b814:	2200      	movs	r2, #0
9000b816:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000b81a:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b81c:	681d      	ldr	r5, [r3, #0]
9000b81e:	692c      	ldr	r4, [r5, #16]
9000b820:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000b824:	d1f6      	bne.n	9000b814 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b826:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000b828:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b82a:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000b82c:	b941      	cbnz	r1, 9000b840 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b82e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000b832:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b834:	612a      	str	r2, [r5, #16]
9000b836:	e7ed      	b.n	9000b814 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b838:	2001      	movs	r0, #1
9000b83a:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b83c:	2002      	movs	r0, #2
}
9000b83e:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b840:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000b844:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b846:	612a      	str	r2, [r5, #16]
9000b848:	e7e4      	b.n	9000b814 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000b84a:	bf00      	nop

9000b84c <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b84c:	2800      	cmp	r0, #0
9000b84e:	d06f      	beq.n	9000b930 <HAL_MDMA_Start_IT+0xe4>
9000b850:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000b852:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000b856:	2801      	cmp	r0, #1
9000b858:	d072      	beq.n	9000b940 <HAL_MDMA_Start_IT+0xf4>
9000b85a:	2001      	movs	r0, #1
9000b85c:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b860:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000b864:	2801      	cmp	r0, #1
9000b866:	d004      	beq.n	9000b872 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000b868:	2300      	movs	r3, #0
    return HAL_BUSY;
9000b86a:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000b86c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000b870:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b872:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b874:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b878:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000b87c:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b87e:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b880:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b884:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000b888:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b88c:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b890:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b894:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000b898:	68e5      	ldr	r5, [r4, #12]
9000b89a:	f025 0501 	bic.w	r5, r5, #1
9000b89e:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b8a0:	6965      	ldr	r5, [r4, #20]
9000b8a2:	ea00 0005 	and.w	r0, r0, r5
9000b8a6:	ea40 0003 	orr.w	r0, r0, r3
9000b8aa:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b8ac:	6963      	ldr	r3, [r4, #20]
9000b8ae:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b8b2:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000b8b6:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b8b8:	f04f 031f 	mov.w	r3, #31
9000b8bc:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b8be:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b8c0:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b8c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b8c4:	bf0c      	ite	eq
9000b8c6:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b8ca:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b8ce:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b8d2:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b8d6:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b8d8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b8da:	bf0c      	ite	eq
9000b8dc:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b8e0:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000b8e4:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b8e6:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000b8ea:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b8ec:	68e3      	ldr	r3, [r4, #12]
9000b8ee:	f043 0306 	orr.w	r3, r3, #6
9000b8f2:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b8f4:	b11a      	cbz	r2, 9000b8fe <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b8f6:	68e3      	ldr	r3, [r4, #12]
9000b8f8:	f043 0310 	orr.w	r3, r3, #16
9000b8fc:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b8fe:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000b902:	b11b      	cbz	r3, 9000b90c <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b904:	68e3      	ldr	r3, [r4, #12]
9000b906:	f043 0308 	orr.w	r3, r3, #8
9000b90a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b90c:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000b910:	b11b      	cbz	r3, 9000b91a <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b912:	68e3      	ldr	r3, [r4, #12]
9000b914:	f043 0320 	orr.w	r3, r3, #32
9000b918:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b91a:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b91c:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b920:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b924:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b928:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b92a:	d003      	beq.n	9000b934 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000b92c:	2000      	movs	r0, #0
}
9000b92e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000b930:	2001      	movs	r0, #1
9000b932:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b934:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000b936:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b938:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b93c:	60e3      	str	r3, [r4, #12]
}
9000b93e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000b940:	2002      	movs	r0, #2
}
9000b942:	4770      	bx	lr

9000b944 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b944:	4603      	mov	r3, r0
9000b946:	b188      	cbz	r0, 9000b96c <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b948:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000b94c:	2a02      	cmp	r2, #2
9000b94e:	d003      	beq.n	9000b958 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b950:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000b952:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b954:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000b956:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b958:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b95a:	2104      	movs	r1, #4
  return HAL_OK;
9000b95c:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b95e:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b962:	68d3      	ldr	r3, [r2, #12]
9000b964:	f023 0301 	bic.w	r3, r3, #1
9000b968:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000b96a:	4770      	bx	lr
    return HAL_ERROR;
9000b96c:	2001      	movs	r0, #1
}
9000b96e:	4770      	bx	lr

9000b970 <HAL_MDMA_IRQHandler>:
{
9000b970:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b972:	2300      	movs	r3, #0
{
9000b974:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b976:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000b97a:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b97c:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b97e:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b980:	4b57      	ldr	r3, [pc, #348]	; (9000bae0 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b982:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b984:	4a57      	ldr	r2, [pc, #348]	; (9000bae4 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b986:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b988:	6823      	ldr	r3, [r4, #0]
9000b98a:	441a      	add	r2, r3
9000b98c:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b990:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b994:	4202      	tst	r2, r0
9000b996:	f000 80a0 	beq.w	9000bada <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b99a:	681a      	ldr	r2, [r3, #0]
9000b99c:	07d1      	lsls	r1, r2, #31
9000b99e:	d529      	bpl.n	9000b9f4 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b9a0:	68da      	ldr	r2, [r3, #12]
9000b9a2:	0792      	lsls	r2, r2, #30
9000b9a4:	d526      	bpl.n	9000b9f4 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b9a6:	68da      	ldr	r2, [r3, #12]
9000b9a8:	f022 0202 	bic.w	r2, r2, #2
9000b9ac:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b9ae:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b9b0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b9b2:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b9b4:	bf54      	ite	pl
9000b9b6:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b9ba:	f041 0102 	orrmi.w	r1, r1, #2
9000b9be:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b9c0:	0591      	lsls	r1, r2, #22
9000b9c2:	d503      	bpl.n	9000b9cc <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b9c4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000b9c6:	f041 0104 	orr.w	r1, r1, #4
9000b9ca:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b9cc:	05d0      	lsls	r0, r2, #23
9000b9ce:	d503      	bpl.n	9000b9d8 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b9d0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000b9d2:	f041 0108 	orr.w	r1, r1, #8
9000b9d6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b9d8:	0551      	lsls	r1, r2, #21
9000b9da:	d503      	bpl.n	9000b9e4 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b9dc:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000b9de:	f041 0110 	orr.w	r1, r1, #16
9000b9e2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b9e4:	0510      	lsls	r0, r2, #20
9000b9e6:	d503      	bpl.n	9000b9f0 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b9e8:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000b9ea:	f042 0220 	orr.w	r2, r2, #32
9000b9ee:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b9f0:	2201      	movs	r2, #1
9000b9f2:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b9f4:	681a      	ldr	r2, [r3, #0]
9000b9f6:	06d1      	lsls	r1, r2, #27
9000b9f8:	d509      	bpl.n	9000ba0e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b9fa:	68da      	ldr	r2, [r3, #12]
9000b9fc:	0692      	lsls	r2, r2, #26
9000b9fe:	d506      	bpl.n	9000ba0e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000ba00:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000ba02:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000ba04:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000ba06:	b112      	cbz	r2, 9000ba0e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000ba08:	4620      	mov	r0, r4
9000ba0a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000ba0c:	6823      	ldr	r3, [r4, #0]
9000ba0e:	681a      	ldr	r2, [r3, #0]
9000ba10:	0710      	lsls	r0, r2, #28
9000ba12:	d509      	bpl.n	9000ba28 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000ba14:	68da      	ldr	r2, [r3, #12]
9000ba16:	06d1      	lsls	r1, r2, #27
9000ba18:	d506      	bpl.n	9000ba28 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ba1a:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000ba1c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ba1e:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000ba20:	b112      	cbz	r2, 9000ba28 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000ba22:	4620      	mov	r0, r4
9000ba24:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000ba26:	6823      	ldr	r3, [r4, #0]
9000ba28:	681a      	ldr	r2, [r3, #0]
9000ba2a:	0752      	lsls	r2, r2, #29
9000ba2c:	d509      	bpl.n	9000ba42 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000ba2e:	68da      	ldr	r2, [r3, #12]
9000ba30:	0710      	lsls	r0, r2, #28
9000ba32:	d506      	bpl.n	9000ba42 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ba34:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ba36:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ba38:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ba3a:	b112      	cbz	r2, 9000ba42 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000ba3c:	4620      	mov	r0, r4
9000ba3e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000ba40:	6823      	ldr	r3, [r4, #0]
9000ba42:	681a      	ldr	r2, [r3, #0]
9000ba44:	0791      	lsls	r1, r2, #30
9000ba46:	d516      	bpl.n	9000ba76 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000ba48:	68da      	ldr	r2, [r3, #12]
9000ba4a:	0752      	lsls	r2, r2, #29
9000ba4c:	d513      	bpl.n	9000ba76 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ba4e:	68da      	ldr	r2, [r3, #12]
9000ba50:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000ba54:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000ba56:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000ba5a:	2a04      	cmp	r2, #4
9000ba5c:	d034      	beq.n	9000bac8 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ba5e:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000ba60:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ba62:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000ba64:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000ba66:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000ba68:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000ba6c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000ba70:	b10b      	cbz	r3, 9000ba76 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000ba72:	4620      	mov	r0, r4
9000ba74:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000ba76:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000ba78:	2b00      	cmp	r3, #0
9000ba7a:	d02e      	beq.n	9000bada <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000ba7c:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ba7e:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000ba80:	4b19      	ldr	r3, [pc, #100]	; (9000bae8 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ba82:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000ba86:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000ba8a:	68cb      	ldr	r3, [r1, #12]
9000ba8c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ba90:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000ba92:	60cb      	str	r3, [r1, #12]
9000ba94:	e002      	b.n	9000ba9c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000ba96:	68cb      	ldr	r3, [r1, #12]
9000ba98:	07d8      	lsls	r0, r3, #31
9000ba9a:	d504      	bpl.n	9000baa6 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000ba9c:	9b01      	ldr	r3, [sp, #4]
9000ba9e:	3301      	adds	r3, #1
9000baa0:	4293      	cmp	r3, r2
9000baa2:	9301      	str	r3, [sp, #4]
9000baa4:	d9f7      	bls.n	9000ba96 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000baa6:	2300      	movs	r3, #0
9000baa8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000baac:	68cb      	ldr	r3, [r1, #12]
9000baae:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bab0:	bf4c      	ite	mi
9000bab2:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000bab4:	2301      	movpl	r3, #1
9000bab6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000baba:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000babc:	b16b      	cbz	r3, 9000bada <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000babe:	4620      	mov	r0, r4
}
9000bac0:	b003      	add	sp, #12
9000bac2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000bac6:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000bac8:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000baca:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000bacc:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000bace:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000bad2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000bad6:	2b00      	cmp	r3, #0
9000bad8:	d1f1      	bne.n	9000babe <HAL_MDMA_IRQHandler+0x14e>
}
9000bada:	b003      	add	sp, #12
9000badc:	bd30      	pop	{r4, r5, pc}
9000bade:	bf00      	nop
9000bae0:	2400006c 	.word	0x2400006c
9000bae4:	adffffc0 	.word	0xadffffc0
9000bae8:	1b4e81b5 	.word	0x1b4e81b5

9000baec <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000baec:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000baee:	4c10      	ldr	r4, [pc, #64]	; (9000bb30 <HAL_PWREx_ConfigSupply+0x44>)
9000baf0:	68e3      	ldr	r3, [r4, #12]
9000baf2:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000baf6:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000baf8:	d105      	bne.n	9000bb06 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000bafa:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000bafe:	1a18      	subs	r0, r3, r0
9000bb00:	bf18      	it	ne
9000bb02:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000bb04:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000bb06:	f023 0307 	bic.w	r3, r3, #7
9000bb0a:	4303      	orrs	r3, r0
9000bb0c:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000bb0e:	f7fc ff59 	bl	900089c4 <HAL_GetTick>
9000bb12:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bb14:	e005      	b.n	9000bb22 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000bb16:	f7fc ff55 	bl	900089c4 <HAL_GetTick>
9000bb1a:	1b40      	subs	r0, r0, r5
9000bb1c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000bb20:	d804      	bhi.n	9000bb2c <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000bb22:	6863      	ldr	r3, [r4, #4]
9000bb24:	049b      	lsls	r3, r3, #18
9000bb26:	d5f6      	bpl.n	9000bb16 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000bb28:	2000      	movs	r0, #0
}
9000bb2a:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000bb2c:	2001      	movs	r0, #1
}
9000bb2e:	bd38      	pop	{r3, r4, r5, pc}
9000bb30:	58024800 	.word	0x58024800

9000bb34 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bb34:	4b3b      	ldr	r3, [pc, #236]	; (9000bc24 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000bb36:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bb38:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bb3a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bb3c:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000bb3e:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bb42:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bb44:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bb48:	d038      	beq.n	9000bbbc <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bb4a:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bb4e:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bb52:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bb56:	fb05 f101 	mul.w	r1, r5, r1
9000bb5a:	2a01      	cmp	r2, #1
9000bb5c:	ee07 1a90 	vmov	s15, r1
9000bb60:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000bb64:	d002      	beq.n	9000bb6c <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000bb66:	2a02      	cmp	r2, #2
9000bb68:	d04e      	beq.n	9000bc08 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000bb6a:	b34a      	cbz	r2, 9000bbc0 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bb6c:	ee07 0a90 	vmov	s15, r0
9000bb70:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000bc28 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000bb74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bb78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000bb7a:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000bb7e:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000bc2c <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000bb82:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bb86:	ee07 3a90 	vmov	s15, r3
9000bb8a:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000bb8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bb92:	eee7 7a25 	vfma.f32	s15, s14, s11
9000bb96:	ee77 7a86 	vadd.f32	s15, s15, s12
9000bb9a:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bb9e:	4b21      	ldr	r3, [pc, #132]	; (9000bc24 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000bba0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000bba2:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bba6:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bba8:	ee07 3a90 	vmov	s15, r3
9000bbac:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000bbb0:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000bbb4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000bbb8:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000bbbc:	bc30      	pop	{r4, r5}
9000bbbe:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bbc0:	681a      	ldr	r2, [r3, #0]
9000bbc2:	0692      	lsls	r2, r2, #26
9000bbc4:	d527      	bpl.n	9000bc16 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbc6:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbc8:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbcc:	4a18      	ldr	r2, [pc, #96]	; (9000bc30 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbce:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000bbd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbd4:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bbdc:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000bc2c <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000bbe0:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbe4:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbe6:	ee06 3a90 	vmov	s13, r3
9000bbea:	ee06 2a10 	vmov	s12, r2
9000bbee:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000bbf2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bbf6:	eee7 6a05 	vfma.f32	s13, s14, s10
9000bbfa:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000bbfe:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000bc02:	ee66 6a87 	vmul.f32	s13, s13, s14
9000bc06:	e7ca      	b.n	9000bb9e <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc08:	ee07 0a90 	vmov	s15, r0
9000bc0c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000bc34 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000bc10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bc14:	e7b0      	b.n	9000bb78 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc16:	ee07 0a90 	vmov	s15, r0
9000bc1a:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000bc38 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000bc1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bc22:	e7a9      	b.n	9000bb78 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000bc24:	58024400 	.word	0x58024400
9000bc28:	4a742400 	.word	0x4a742400
9000bc2c:	39000000 	.word	0x39000000
9000bc30:	03d09000 	.word	0x03d09000
9000bc34:	4bbebc20 	.word	0x4bbebc20
9000bc38:	4c742400 	.word	0x4c742400

9000bc3c <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000bc3c:	2800      	cmp	r0, #0
9000bc3e:	f000 81e8 	beq.w	9000c012 <HAL_RCC_OscConfig+0x3d6>
{
9000bc42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000bc44:	6803      	ldr	r3, [r0, #0]
9000bc46:	4604      	mov	r4, r0
9000bc48:	07d9      	lsls	r1, r3, #31
9000bc4a:	d52e      	bpl.n	9000bcaa <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bc4c:	49a4      	ldr	r1, [pc, #656]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bc4e:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bc50:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bc52:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000bc56:	2a10      	cmp	r2, #16
9000bc58:	f000 8107 	beq.w	9000be6a <HAL_RCC_OscConfig+0x22e>
9000bc5c:	2a18      	cmp	r2, #24
9000bc5e:	f000 80ff 	beq.w	9000be60 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bc62:	6863      	ldr	r3, [r4, #4]
9000bc64:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000bc68:	f000 812a 	beq.w	9000bec0 <HAL_RCC_OscConfig+0x284>
9000bc6c:	2b00      	cmp	r3, #0
9000bc6e:	f000 8168 	beq.w	9000bf42 <HAL_RCC_OscConfig+0x306>
9000bc72:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000bc76:	4b9a      	ldr	r3, [pc, #616]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bc78:	681a      	ldr	r2, [r3, #0]
9000bc7a:	f000 8289 	beq.w	9000c190 <HAL_RCC_OscConfig+0x554>
9000bc7e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000bc82:	601a      	str	r2, [r3, #0]
9000bc84:	681a      	ldr	r2, [r3, #0]
9000bc86:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000bc8a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000bc8c:	f7fc fe9a 	bl	900089c4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bc90:	4e93      	ldr	r6, [pc, #588]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000bc92:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bc94:	e005      	b.n	9000bca2 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000bc96:	f7fc fe95 	bl	900089c4 <HAL_GetTick>
9000bc9a:	1b40      	subs	r0, r0, r5
9000bc9c:	2864      	cmp	r0, #100	; 0x64
9000bc9e:	f200 814e 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bca2:	6833      	ldr	r3, [r6, #0]
9000bca4:	039b      	lsls	r3, r3, #14
9000bca6:	d5f6      	bpl.n	9000bc96 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000bca8:	6823      	ldr	r3, [r4, #0]
9000bcaa:	079d      	lsls	r5, r3, #30
9000bcac:	f100 808a 	bmi.w	9000bdc4 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bcb0:	06d9      	lsls	r1, r3, #27
9000bcb2:	d533      	bpl.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bcb4:	4a8a      	ldr	r2, [pc, #552]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bcb6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bcb8:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bcba:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000bcbe:	2b08      	cmp	r3, #8
9000bcc0:	f000 80e3 	beq.w	9000be8a <HAL_RCC_OscConfig+0x24e>
9000bcc4:	2b18      	cmp	r3, #24
9000bcc6:	f000 80db 	beq.w	9000be80 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000bcca:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000bccc:	4d84      	ldr	r5, [pc, #528]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000bcce:	2b00      	cmp	r3, #0
9000bcd0:	f000 816f 	beq.w	9000bfb2 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000bcd4:	682b      	ldr	r3, [r5, #0]
9000bcd6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000bcda:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bcdc:	f7fc fe72 	bl	900089c4 <HAL_GetTick>
9000bce0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bce2:	e005      	b.n	9000bcf0 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000bce4:	f7fc fe6e 	bl	900089c4 <HAL_GetTick>
9000bce8:	1b80      	subs	r0, r0, r6
9000bcea:	2802      	cmp	r0, #2
9000bcec:	f200 8127 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000bcf0:	682b      	ldr	r3, [r5, #0]
9000bcf2:	05db      	lsls	r3, r3, #23
9000bcf4:	d5f6      	bpl.n	9000bce4 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bcf6:	f7fc fe6b 	bl	900089d0 <HAL_GetREVID>
9000bcfa:	f241 0303 	movw	r3, #4099	; 0x1003
9000bcfe:	4298      	cmp	r0, r3
9000bd00:	f200 826d 	bhi.w	9000c1de <HAL_RCC_OscConfig+0x5a2>
9000bd04:	6a22      	ldr	r2, [r4, #32]
9000bd06:	686b      	ldr	r3, [r5, #4]
9000bd08:	2a20      	cmp	r2, #32
9000bd0a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000bd0e:	bf0c      	ite	eq
9000bd10:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000bd14:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000bd18:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bd1a:	6823      	ldr	r3, [r4, #0]
9000bd1c:	071d      	lsls	r5, r3, #28
9000bd1e:	d516      	bpl.n	9000bd4e <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bd20:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000bd22:	4d6f      	ldr	r5, [pc, #444]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000bd24:	2b00      	cmp	r3, #0
9000bd26:	f000 8122 	beq.w	9000bf6e <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000bd2a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bd2c:	f043 0301 	orr.w	r3, r3, #1
9000bd30:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000bd32:	f7fc fe47 	bl	900089c4 <HAL_GetTick>
9000bd36:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bd38:	e005      	b.n	9000bd46 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000bd3a:	f7fc fe43 	bl	900089c4 <HAL_GetTick>
9000bd3e:	1b80      	subs	r0, r0, r6
9000bd40:	2802      	cmp	r0, #2
9000bd42:	f200 80fc 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000bd46:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bd48:	0798      	lsls	r0, r3, #30
9000bd4a:	d5f6      	bpl.n	9000bd3a <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000bd4c:	6823      	ldr	r3, [r4, #0]
9000bd4e:	069a      	lsls	r2, r3, #26
9000bd50:	d516      	bpl.n	9000bd80 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bd52:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000bd54:	4d62      	ldr	r5, [pc, #392]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000bd56:	2b00      	cmp	r3, #0
9000bd58:	f000 811a 	beq.w	9000bf90 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000bd5c:	682b      	ldr	r3, [r5, #0]
9000bd5e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000bd62:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bd64:	f7fc fe2e 	bl	900089c4 <HAL_GetTick>
9000bd68:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bd6a:	e005      	b.n	9000bd78 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000bd6c:	f7fc fe2a 	bl	900089c4 <HAL_GetTick>
9000bd70:	1b80      	subs	r0, r0, r6
9000bd72:	2802      	cmp	r0, #2
9000bd74:	f200 80e3 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000bd78:	682b      	ldr	r3, [r5, #0]
9000bd7a:	049f      	lsls	r7, r3, #18
9000bd7c:	d5f6      	bpl.n	9000bd6c <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000bd7e:	6823      	ldr	r3, [r4, #0]
9000bd80:	0759      	lsls	r1, r3, #29
9000bd82:	f100 80a3 	bmi.w	9000becc <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000bd86:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000bd88:	b1d0      	cbz	r0, 9000bdc0 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000bd8a:	4d55      	ldr	r5, [pc, #340]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bd8c:	692b      	ldr	r3, [r5, #16]
9000bd8e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000bd92:	2b18      	cmp	r3, #24
9000bd94:	f000 81ae 	beq.w	9000c0f4 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000bd98:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bd9a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000bd9c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000bda0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000bda2:	f000 8142 	beq.w	9000c02a <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000bda6:	f7fc fe0d 	bl	900089c4 <HAL_GetTick>
9000bdaa:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bdac:	e005      	b.n	9000bdba <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000bdae:	f7fc fe09 	bl	900089c4 <HAL_GetTick>
9000bdb2:	1b00      	subs	r0, r0, r4
9000bdb4:	2802      	cmp	r0, #2
9000bdb6:	f200 80c2 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000bdba:	682b      	ldr	r3, [r5, #0]
9000bdbc:	019b      	lsls	r3, r3, #6
9000bdbe:	d4f6      	bmi.n	9000bdae <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000bdc0:	2000      	movs	r0, #0
}
9000bdc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000bdc4:	4a46      	ldr	r2, [pc, #280]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bdc6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000bdc8:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bdca:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000bdce:	d12d      	bne.n	9000be2c <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000bdd0:	4b43      	ldr	r3, [pc, #268]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bdd2:	68e2      	ldr	r2, [r4, #12]
9000bdd4:	681b      	ldr	r3, [r3, #0]
9000bdd6:	0759      	lsls	r1, r3, #29
9000bdd8:	d501      	bpl.n	9000bdde <HAL_RCC_OscConfig+0x1a2>
9000bdda:	2a00      	cmp	r2, #0
9000bddc:	d04e      	beq.n	9000be7c <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000bdde:	4d40      	ldr	r5, [pc, #256]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bde0:	682b      	ldr	r3, [r5, #0]
9000bde2:	f023 0319 	bic.w	r3, r3, #25
9000bde6:	4313      	orrs	r3, r2
9000bde8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bdea:	f7fc fdeb 	bl	900089c4 <HAL_GetTick>
9000bdee:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bdf0:	e005      	b.n	9000bdfe <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bdf2:	f7fc fde7 	bl	900089c4 <HAL_GetTick>
9000bdf6:	1b80      	subs	r0, r0, r6
9000bdf8:	2802      	cmp	r0, #2
9000bdfa:	f200 80a0 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bdfe:	682b      	ldr	r3, [r5, #0]
9000be00:	075b      	lsls	r3, r3, #29
9000be02:	d5f6      	bpl.n	9000bdf2 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000be04:	f7fc fde4 	bl	900089d0 <HAL_GetREVID>
9000be08:	f241 0303 	movw	r3, #4099	; 0x1003
9000be0c:	4298      	cmp	r0, r3
9000be0e:	f200 80f7 	bhi.w	9000c000 <HAL_RCC_OscConfig+0x3c4>
9000be12:	6922      	ldr	r2, [r4, #16]
9000be14:	686b      	ldr	r3, [r5, #4]
9000be16:	2a40      	cmp	r2, #64	; 0x40
9000be18:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000be1c:	bf0c      	ite	eq
9000be1e:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000be22:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000be26:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000be28:	6823      	ldr	r3, [r4, #0]
9000be2a:	e741      	b.n	9000bcb0 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000be2c:	2b18      	cmp	r3, #24
9000be2e:	f000 80e3 	beq.w	9000bff8 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000be32:	4d2b      	ldr	r5, [pc, #172]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000be34:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000be36:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000be38:	2a00      	cmp	r2, #0
9000be3a:	f000 80cc 	beq.w	9000bfd6 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000be3e:	f023 0319 	bic.w	r3, r3, #25
9000be42:	4313      	orrs	r3, r2
9000be44:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000be46:	f7fc fdbd 	bl	900089c4 <HAL_GetTick>
9000be4a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000be4c:	e004      	b.n	9000be58 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000be4e:	f7fc fdb9 	bl	900089c4 <HAL_GetTick>
9000be52:	1b80      	subs	r0, r0, r6
9000be54:	2802      	cmp	r0, #2
9000be56:	d872      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000be58:	682b      	ldr	r3, [r5, #0]
9000be5a:	075f      	lsls	r7, r3, #29
9000be5c:	d5f7      	bpl.n	9000be4e <HAL_RCC_OscConfig+0x212>
9000be5e:	e7d1      	b.n	9000be04 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000be60:	f001 0103 	and.w	r1, r1, #3
9000be64:	2902      	cmp	r1, #2
9000be66:	f47f aefc 	bne.w	9000bc62 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000be6a:	4a1d      	ldr	r2, [pc, #116]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000be6c:	6812      	ldr	r2, [r2, #0]
9000be6e:	0392      	lsls	r2, r2, #14
9000be70:	f57f af1b 	bpl.w	9000bcaa <HAL_RCC_OscConfig+0x6e>
9000be74:	6862      	ldr	r2, [r4, #4]
9000be76:	2a00      	cmp	r2, #0
9000be78:	f47f af17 	bne.w	9000bcaa <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000be7c:	2001      	movs	r0, #1
}
9000be7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000be80:	f002 0203 	and.w	r2, r2, #3
9000be84:	2a01      	cmp	r2, #1
9000be86:	f47f af20 	bne.w	9000bcca <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000be8a:	4b15      	ldr	r3, [pc, #84]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000be8c:	681b      	ldr	r3, [r3, #0]
9000be8e:	05da      	lsls	r2, r3, #23
9000be90:	d502      	bpl.n	9000be98 <HAL_RCC_OscConfig+0x25c>
9000be92:	69e3      	ldr	r3, [r4, #28]
9000be94:	2b80      	cmp	r3, #128	; 0x80
9000be96:	d1f1      	bne.n	9000be7c <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000be98:	f7fc fd9a 	bl	900089d0 <HAL_GetREVID>
9000be9c:	f241 0303 	movw	r3, #4099	; 0x1003
9000bea0:	4298      	cmp	r0, r3
9000bea2:	f200 80b8 	bhi.w	9000c016 <HAL_RCC_OscConfig+0x3da>
9000bea6:	6a22      	ldr	r2, [r4, #32]
9000bea8:	2a20      	cmp	r2, #32
9000beaa:	f000 81a7 	beq.w	9000c1fc <HAL_RCC_OscConfig+0x5c0>
9000beae:	490c      	ldr	r1, [pc, #48]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000beb0:	684b      	ldr	r3, [r1, #4]
9000beb2:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000beb6:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000beba:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bebc:	6823      	ldr	r3, [r4, #0]
9000bebe:	e72d      	b.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bec0:	4a07      	ldr	r2, [pc, #28]	; (9000bee0 <HAL_RCC_OscConfig+0x2a4>)
9000bec2:	6813      	ldr	r3, [r2, #0]
9000bec4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000bec8:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000beca:	e6df      	b.n	9000bc8c <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000becc:	4d05      	ldr	r5, [pc, #20]	; (9000bee4 <HAL_RCC_OscConfig+0x2a8>)
9000bece:	682b      	ldr	r3, [r5, #0]
9000bed0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000bed4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000bed6:	f7fc fd75 	bl	900089c4 <HAL_GetTick>
9000beda:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bedc:	e009      	b.n	9000bef2 <HAL_RCC_OscConfig+0x2b6>
9000bede:	bf00      	nop
9000bee0:	58024400 	.word	0x58024400
9000bee4:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000bee8:	f7fc fd6c 	bl	900089c4 <HAL_GetTick>
9000beec:	1b80      	subs	r0, r0, r6
9000beee:	2864      	cmp	r0, #100	; 0x64
9000bef0:	d825      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bef2:	682b      	ldr	r3, [r5, #0]
9000bef4:	05da      	lsls	r2, r3, #23
9000bef6:	d5f7      	bpl.n	9000bee8 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bef8:	68a3      	ldr	r3, [r4, #8]
9000befa:	2b01      	cmp	r3, #1
9000befc:	f000 8178 	beq.w	9000c1f0 <HAL_RCC_OscConfig+0x5b4>
9000bf00:	2b00      	cmp	r3, #0
9000bf02:	f000 8153 	beq.w	9000c1ac <HAL_RCC_OscConfig+0x570>
9000bf06:	2b05      	cmp	r3, #5
9000bf08:	4ba5      	ldr	r3, [pc, #660]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
9000bf0a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000bf0c:	f000 817f 	beq.w	9000c20e <HAL_RCC_OscConfig+0x5d2>
9000bf10:	f022 0201 	bic.w	r2, r2, #1
9000bf14:	671a      	str	r2, [r3, #112]	; 0x70
9000bf16:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000bf18:	f022 0204 	bic.w	r2, r2, #4
9000bf1c:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000bf1e:	f7fc fd51 	bl	900089c4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bf22:	4e9f      	ldr	r6, [pc, #636]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bf24:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000bf28:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bf2a:	e004      	b.n	9000bf36 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bf2c:	f7fc fd4a 	bl	900089c4 <HAL_GetTick>
9000bf30:	1b40      	subs	r0, r0, r5
9000bf32:	42b8      	cmp	r0, r7
9000bf34:	d803      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000bf36:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000bf38:	079b      	lsls	r3, r3, #30
9000bf3a:	d5f7      	bpl.n	9000bf2c <HAL_RCC_OscConfig+0x2f0>
9000bf3c:	e723      	b.n	9000bd86 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000bf3e:	2003      	movs	r0, #3
}
9000bf40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bf42:	4d97      	ldr	r5, [pc, #604]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
9000bf44:	682b      	ldr	r3, [r5, #0]
9000bf46:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000bf4a:	602b      	str	r3, [r5, #0]
9000bf4c:	682b      	ldr	r3, [r5, #0]
9000bf4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000bf52:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bf54:	f7fc fd36 	bl	900089c4 <HAL_GetTick>
9000bf58:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000bf5a:	e004      	b.n	9000bf66 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000bf5c:	f7fc fd32 	bl	900089c4 <HAL_GetTick>
9000bf60:	1b80      	subs	r0, r0, r6
9000bf62:	2864      	cmp	r0, #100	; 0x64
9000bf64:	d8eb      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000bf66:	682b      	ldr	r3, [r5, #0]
9000bf68:	039f      	lsls	r7, r3, #14
9000bf6a:	d4f7      	bmi.n	9000bf5c <HAL_RCC_OscConfig+0x320>
9000bf6c:	e69c      	b.n	9000bca8 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000bf6e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bf70:	f023 0301 	bic.w	r3, r3, #1
9000bf74:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000bf76:	f7fc fd25 	bl	900089c4 <HAL_GetTick>
9000bf7a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000bf7c:	e004      	b.n	9000bf88 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000bf7e:	f7fc fd21 	bl	900089c4 <HAL_GetTick>
9000bf82:	1b80      	subs	r0, r0, r6
9000bf84:	2802      	cmp	r0, #2
9000bf86:	d8da      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000bf88:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000bf8a:	0799      	lsls	r1, r3, #30
9000bf8c:	d4f7      	bmi.n	9000bf7e <HAL_RCC_OscConfig+0x342>
9000bf8e:	e6dd      	b.n	9000bd4c <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000bf90:	682b      	ldr	r3, [r5, #0]
9000bf92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000bf96:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000bf98:	f7fc fd14 	bl	900089c4 <HAL_GetTick>
9000bf9c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000bf9e:	e004      	b.n	9000bfaa <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000bfa0:	f7fc fd10 	bl	900089c4 <HAL_GetTick>
9000bfa4:	1b80      	subs	r0, r0, r6
9000bfa6:	2802      	cmp	r0, #2
9000bfa8:	d8c9      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000bfaa:	682b      	ldr	r3, [r5, #0]
9000bfac:	0498      	lsls	r0, r3, #18
9000bfae:	d4f7      	bmi.n	9000bfa0 <HAL_RCC_OscConfig+0x364>
9000bfb0:	e6e5      	b.n	9000bd7e <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000bfb2:	682b      	ldr	r3, [r5, #0]
9000bfb4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000bfb8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bfba:	f7fc fd03 	bl	900089c4 <HAL_GetTick>
9000bfbe:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000bfc0:	e004      	b.n	9000bfcc <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000bfc2:	f7fc fcff 	bl	900089c4 <HAL_GetTick>
9000bfc6:	1b80      	subs	r0, r0, r6
9000bfc8:	2802      	cmp	r0, #2
9000bfca:	d8b8      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000bfcc:	682b      	ldr	r3, [r5, #0]
9000bfce:	05df      	lsls	r7, r3, #23
9000bfd0:	d4f7      	bmi.n	9000bfc2 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bfd2:	6823      	ldr	r3, [r4, #0]
9000bfd4:	e6a2      	b.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000bfd6:	f023 0301 	bic.w	r3, r3, #1
9000bfda:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000bfdc:	f7fc fcf2 	bl	900089c4 <HAL_GetTick>
9000bfe0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000bfe2:	e004      	b.n	9000bfee <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000bfe4:	f7fc fcee 	bl	900089c4 <HAL_GetTick>
9000bfe8:	1b80      	subs	r0, r0, r6
9000bfea:	2802      	cmp	r0, #2
9000bfec:	d8a7      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000bfee:	682b      	ldr	r3, [r5, #0]
9000bff0:	0758      	lsls	r0, r3, #29
9000bff2:	d4f7      	bmi.n	9000bfe4 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000bff4:	6823      	ldr	r3, [r4, #0]
9000bff6:	e65b      	b.n	9000bcb0 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000bff8:	0790      	lsls	r0, r2, #30
9000bffa:	f47f af1a 	bne.w	9000be32 <HAL_RCC_OscConfig+0x1f6>
9000bffe:	e6e7      	b.n	9000bdd0 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c000:	686b      	ldr	r3, [r5, #4]
9000c002:	6922      	ldr	r2, [r4, #16]
9000c004:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000c008:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c00c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c00e:	6823      	ldr	r3, [r4, #0]
9000c010:	e64e      	b.n	9000bcb0 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000c012:	2001      	movs	r0, #1
}
9000c014:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c016:	4a62      	ldr	r2, [pc, #392]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
9000c018:	6a21      	ldr	r1, [r4, #32]
9000c01a:	68d3      	ldr	r3, [r2, #12]
9000c01c:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c020:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c024:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c026:	6823      	ldr	r3, [r4, #0]
9000c028:	e678      	b.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000c02a:	f7fc fccb 	bl	900089c4 <HAL_GetTick>
9000c02e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c030:	e004      	b.n	9000c03c <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c032:	f7fc fcc7 	bl	900089c4 <HAL_GetTick>
9000c036:	1b80      	subs	r0, r0, r6
9000c038:	2802      	cmp	r0, #2
9000c03a:	d880      	bhi.n	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c03c:	682b      	ldr	r3, [r5, #0]
9000c03e:	0199      	lsls	r1, r3, #6
9000c040:	d4f7      	bmi.n	9000c032 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c042:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000c044:	4b57      	ldr	r3, [pc, #348]	; (9000c1a4 <HAL_RCC_OscConfig+0x568>)
9000c046:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c048:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c04a:	4957      	ldr	r1, [pc, #348]	; (9000c1a8 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c04c:	4e54      	ldr	r6, [pc, #336]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c04e:	4313      	orrs	r3, r2
9000c050:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c052:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000c056:	62ab      	str	r3, [r5, #40]	; 0x28
9000c058:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000c05c:	3b01      	subs	r3, #1
9000c05e:	3a01      	subs	r2, #1
9000c060:	025b      	lsls	r3, r3, #9
9000c062:	0412      	lsls	r2, r2, #16
9000c064:	b29b      	uxth	r3, r3
9000c066:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c06a:	4313      	orrs	r3, r2
9000c06c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000c06e:	3a01      	subs	r2, #1
9000c070:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c074:	4313      	orrs	r3, r2
9000c076:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000c078:	3a01      	subs	r2, #1
9000c07a:	0612      	lsls	r2, r2, #24
9000c07c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c080:	4313      	orrs	r3, r2
9000c082:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000c084:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c086:	f023 0301 	bic.w	r3, r3, #1
9000c08a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c08c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000c08e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000c090:	4011      	ands	r1, r2
9000c092:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000c096:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000c098:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c09a:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000c09c:	f023 030c 	bic.w	r3, r3, #12
9000c0a0:	4313      	orrs	r3, r2
9000c0a2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000c0a4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c0a6:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000c0a8:	f023 0302 	bic.w	r3, r3, #2
9000c0ac:	4313      	orrs	r3, r2
9000c0ae:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000c0b0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c0b2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c0b6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c0b8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c0ba:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000c0be:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000c0c0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c0c2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000c0c6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000c0c8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c0ca:	f043 0301 	orr.w	r3, r3, #1
9000c0ce:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000c0d0:	682b      	ldr	r3, [r5, #0]
9000c0d2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000c0d6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c0d8:	f7fc fc74 	bl	900089c4 <HAL_GetTick>
9000c0dc:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c0de:	e005      	b.n	9000c0ec <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c0e0:	f7fc fc70 	bl	900089c4 <HAL_GetTick>
9000c0e4:	1b00      	subs	r0, r0, r4
9000c0e6:	2802      	cmp	r0, #2
9000c0e8:	f63f af29 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c0ec:	6833      	ldr	r3, [r6, #0]
9000c0ee:	019a      	lsls	r2, r3, #6
9000c0f0:	d5f6      	bpl.n	9000c0e0 <HAL_RCC_OscConfig+0x4a4>
9000c0f2:	e665      	b.n	9000bdc0 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c0f4:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000c0f6:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000c0f8:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c0fa:	f43f ae62 	beq.w	9000bdc2 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c0fe:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c102:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000c104:	428b      	cmp	r3, r1
9000c106:	f47f aeb9 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c10a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c10e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c110:	429a      	cmp	r2, r3
9000c112:	f47f aeb3 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c116:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000c118:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000c11c:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c11e:	429a      	cmp	r2, r3
9000c120:	f47f aeac 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c124:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c126:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000c12a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c12c:	429a      	cmp	r2, r3
9000c12e:	f47f aea5 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c132:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000c134:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000c138:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c13a:	429a      	cmp	r2, r3
9000c13c:	f47f ae9e 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000c140:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000c142:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000c146:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c148:	429e      	cmp	r6, r3
9000c14a:	f47f ae97 	bne.w	9000be7c <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c14e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c150:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c152:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c156:	429a      	cmp	r2, r3
9000c158:	f43f ae32 	beq.w	9000bdc0 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000c15c:	4a10      	ldr	r2, [pc, #64]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
9000c15e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c160:	f023 0301 	bic.w	r3, r3, #1
9000c164:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000c166:	f7fc fc2d 	bl	900089c4 <HAL_GetTick>
9000c16a:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c16c:	f7fc fc2a 	bl	900089c4 <HAL_GetTick>
9000c170:	42a8      	cmp	r0, r5
9000c172:	d0fb      	beq.n	9000c16c <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c174:	4a0a      	ldr	r2, [pc, #40]	; (9000c1a0 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000c176:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c178:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000c17a:	4b0b      	ldr	r3, [pc, #44]	; (9000c1a8 <HAL_RCC_OscConfig+0x56c>)
9000c17c:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000c17e:	4023      	ands	r3, r4
9000c180:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c184:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c186:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c188:	f043 0301 	orr.w	r3, r3, #1
9000c18c:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000c18e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c190:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000c194:	601a      	str	r2, [r3, #0]
9000c196:	681a      	ldr	r2, [r3, #0]
9000c198:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000c19c:	601a      	str	r2, [r3, #0]
9000c19e:	e575      	b.n	9000bc8c <HAL_RCC_OscConfig+0x50>
9000c1a0:	58024400 	.word	0x58024400
9000c1a4:	fffffc0c 	.word	0xfffffc0c
9000c1a8:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c1ac:	4d1c      	ldr	r5, [pc, #112]	; (9000c220 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c1ae:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c1b2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c1b4:	f023 0301 	bic.w	r3, r3, #1
9000c1b8:	672b      	str	r3, [r5, #112]	; 0x70
9000c1ba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c1bc:	f023 0304 	bic.w	r3, r3, #4
9000c1c0:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c1c2:	f7fc fbff 	bl	900089c4 <HAL_GetTick>
9000c1c6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c1c8:	e005      	b.n	9000c1d6 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c1ca:	f7fc fbfb 	bl	900089c4 <HAL_GetTick>
9000c1ce:	1b80      	subs	r0, r0, r6
9000c1d0:	42b8      	cmp	r0, r7
9000c1d2:	f63f aeb4 	bhi.w	9000bf3e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c1d6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c1d8:	0798      	lsls	r0, r3, #30
9000c1da:	d4f6      	bmi.n	9000c1ca <HAL_RCC_OscConfig+0x58e>
9000c1dc:	e5d3      	b.n	9000bd86 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c1de:	68eb      	ldr	r3, [r5, #12]
9000c1e0:	6a22      	ldr	r2, [r4, #32]
9000c1e2:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c1e6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c1ea:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c1ec:	6823      	ldr	r3, [r4, #0]
9000c1ee:	e595      	b.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c1f0:	4a0b      	ldr	r2, [pc, #44]	; (9000c220 <HAL_RCC_OscConfig+0x5e4>)
9000c1f2:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000c1f4:	f043 0301 	orr.w	r3, r3, #1
9000c1f8:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c1fa:	e690      	b.n	9000bf1e <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c1fc:	4a08      	ldr	r2, [pc, #32]	; (9000c220 <HAL_RCC_OscConfig+0x5e4>)
9000c1fe:	6853      	ldr	r3, [r2, #4]
9000c200:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c204:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000c208:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c20a:	6823      	ldr	r3, [r4, #0]
9000c20c:	e586      	b.n	9000bd1c <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c20e:	f042 0204 	orr.w	r2, r2, #4
9000c212:	671a      	str	r2, [r3, #112]	; 0x70
9000c214:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c216:	f042 0201 	orr.w	r2, r2, #1
9000c21a:	671a      	str	r2, [r3, #112]	; 0x70
9000c21c:	e67f      	b.n	9000bf1e <HAL_RCC_OscConfig+0x2e2>
9000c21e:	bf00      	nop
9000c220:	58024400 	.word	0x58024400

9000c224 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c224:	4a47      	ldr	r2, [pc, #284]	; (9000c344 <HAL_RCC_GetSysClockFreq+0x120>)
9000c226:	6913      	ldr	r3, [r2, #16]
9000c228:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c22c:	2b10      	cmp	r3, #16
9000c22e:	d004      	beq.n	9000c23a <HAL_RCC_GetSysClockFreq+0x16>
9000c230:	2b18      	cmp	r3, #24
9000c232:	d00d      	beq.n	9000c250 <HAL_RCC_GetSysClockFreq+0x2c>
9000c234:	b11b      	cbz	r3, 9000c23e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000c236:	4844      	ldr	r0, [pc, #272]	; (9000c348 <HAL_RCC_GetSysClockFreq+0x124>)
9000c238:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c23a:	4844      	ldr	r0, [pc, #272]	; (9000c34c <HAL_RCC_GetSysClockFreq+0x128>)
9000c23c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c23e:	6813      	ldr	r3, [r2, #0]
9000c240:	0699      	lsls	r1, r3, #26
9000c242:	d54a      	bpl.n	9000c2da <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c244:	6813      	ldr	r3, [r2, #0]
9000c246:	4842      	ldr	r0, [pc, #264]	; (9000c350 <HAL_RCC_GetSysClockFreq+0x12c>)
9000c248:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c24c:	40d8      	lsrs	r0, r3
9000c24e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c250:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000c252:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c254:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c256:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000c258:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c25c:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c25e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c262:	d038      	beq.n	9000c2d6 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c264:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c268:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c26c:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c270:	fb05 f101 	mul.w	r1, r5, r1
9000c274:	2b01      	cmp	r3, #1
9000c276:	ee07 1a90 	vmov	s15, r1
9000c27a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000c27e:	d002      	beq.n	9000c286 <HAL_RCC_GetSysClockFreq+0x62>
9000c280:	2b02      	cmp	r3, #2
9000c282:	d02c      	beq.n	9000c2de <HAL_RCC_GetSysClockFreq+0xba>
9000c284:	b393      	cbz	r3, 9000c2ec <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c286:	ee07 0a90 	vmov	s15, r0
9000c28a:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000c354 <HAL_RCC_GetSysClockFreq+0x130>
9000c28e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c292:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c294:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000c298:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000c358 <HAL_RCC_GetSysClockFreq+0x134>
9000c29c:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c2a0:	ee07 3a90 	vmov	s15, r3
9000c2a4:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000c2a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c2ac:	eee7 7a25 	vfma.f32	s15, s14, s11
9000c2b0:	ee77 7a86 	vadd.f32	s15, s15, s12
9000c2b4:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c2b8:	4b22      	ldr	r3, [pc, #136]	; (9000c344 <HAL_RCC_GetSysClockFreq+0x120>)
9000c2ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c2bc:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c2c0:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c2c2:	ee07 3a90 	vmov	s15, r3
9000c2c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c2ca:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000c2ce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c2d2:	ee17 0a90 	vmov	r0, s15
}
9000c2d6:	bc30      	pop	{r4, r5}
9000c2d8:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c2da:	481d      	ldr	r0, [pc, #116]	; (9000c350 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000c2dc:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c2de:	ee07 0a90 	vmov	s15, r0
9000c2e2:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000c35c <HAL_RCC_GetSysClockFreq+0x138>
9000c2e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c2ea:	e7d2      	b.n	9000c292 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c2ec:	6813      	ldr	r3, [r2, #0]
9000c2ee:	069b      	lsls	r3, r3, #26
9000c2f0:	d520      	bpl.n	9000c334 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c2f2:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c2f4:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c2f8:	4915      	ldr	r1, [pc, #84]	; (9000c350 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c2fa:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000c2fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c300:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c304:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c308:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000c358 <HAL_RCC_GetSysClockFreq+0x134>
9000c30c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c310:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c312:	ee06 3a90 	vmov	s13, r3
9000c316:	ee06 1a10 	vmov	s12, r1
9000c31a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c31e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c322:	eee7 6a05 	vfma.f32	s13, s14, s10
9000c326:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c32a:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000c32e:	ee66 6a87 	vmul.f32	s13, s13, s14
9000c332:	e7c1      	b.n	9000c2b8 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c334:	ee07 0a90 	vmov	s15, r0
9000c338:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000c360 <HAL_RCC_GetSysClockFreq+0x13c>
9000c33c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c340:	e7a7      	b.n	9000c292 <HAL_RCC_GetSysClockFreq+0x6e>
9000c342:	bf00      	nop
9000c344:	58024400 	.word	0x58024400
9000c348:	003d0900 	.word	0x003d0900
9000c34c:	017d7840 	.word	0x017d7840
9000c350:	03d09000 	.word	0x03d09000
9000c354:	4a742400 	.word	0x4a742400
9000c358:	39000000 	.word	0x39000000
9000c35c:	4bbebc20 	.word	0x4bbebc20
9000c360:	4c742400 	.word	0x4c742400

9000c364 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c364:	2800      	cmp	r0, #0
9000c366:	f000 810c 	beq.w	9000c582 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c36a:	4a8c      	ldr	r2, [pc, #560]	; (9000c59c <HAL_RCC_ClockConfig+0x238>)
9000c36c:	6813      	ldr	r3, [r2, #0]
9000c36e:	f003 030f 	and.w	r3, r3, #15
9000c372:	428b      	cmp	r3, r1
{
9000c374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c378:	4604      	mov	r4, r0
9000c37a:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c37c:	d20c      	bcs.n	9000c398 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c37e:	6813      	ldr	r3, [r2, #0]
9000c380:	f023 030f 	bic.w	r3, r3, #15
9000c384:	430b      	orrs	r3, r1
9000c386:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c388:	6813      	ldr	r3, [r2, #0]
9000c38a:	f003 030f 	and.w	r3, r3, #15
9000c38e:	428b      	cmp	r3, r1
9000c390:	d002      	beq.n	9000c398 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c392:	2001      	movs	r0, #1
}
9000c394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c398:	6823      	ldr	r3, [r4, #0]
9000c39a:	075f      	lsls	r7, r3, #29
9000c39c:	d50b      	bpl.n	9000c3b6 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c39e:	4980      	ldr	r1, [pc, #512]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c3a0:	6920      	ldr	r0, [r4, #16]
9000c3a2:	698a      	ldr	r2, [r1, #24]
9000c3a4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c3a8:	4290      	cmp	r0, r2
9000c3aa:	d904      	bls.n	9000c3b6 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c3ac:	698a      	ldr	r2, [r1, #24]
9000c3ae:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c3b2:	4302      	orrs	r2, r0
9000c3b4:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c3b6:	071e      	lsls	r6, r3, #28
9000c3b8:	d50b      	bpl.n	9000c3d2 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c3ba:	4979      	ldr	r1, [pc, #484]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c3bc:	6960      	ldr	r0, [r4, #20]
9000c3be:	69ca      	ldr	r2, [r1, #28]
9000c3c0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c3c4:	4290      	cmp	r0, r2
9000c3c6:	d904      	bls.n	9000c3d2 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c3c8:	69ca      	ldr	r2, [r1, #28]
9000c3ca:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c3ce:	4302      	orrs	r2, r0
9000c3d0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c3d2:	06d8      	lsls	r0, r3, #27
9000c3d4:	d50b      	bpl.n	9000c3ee <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c3d6:	4972      	ldr	r1, [pc, #456]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c3d8:	69a0      	ldr	r0, [r4, #24]
9000c3da:	69ca      	ldr	r2, [r1, #28]
9000c3dc:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c3e0:	4290      	cmp	r0, r2
9000c3e2:	d904      	bls.n	9000c3ee <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c3e4:	69ca      	ldr	r2, [r1, #28]
9000c3e6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000c3ea:	4302      	orrs	r2, r0
9000c3ec:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c3ee:	0699      	lsls	r1, r3, #26
9000c3f0:	d50b      	bpl.n	9000c40a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c3f2:	496b      	ldr	r1, [pc, #428]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c3f4:	69e0      	ldr	r0, [r4, #28]
9000c3f6:	6a0a      	ldr	r2, [r1, #32]
9000c3f8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c3fc:	4290      	cmp	r0, r2
9000c3fe:	d904      	bls.n	9000c40a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c400:	6a0a      	ldr	r2, [r1, #32]
9000c402:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c406:	4302      	orrs	r2, r0
9000c408:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c40a:	079a      	lsls	r2, r3, #30
9000c40c:	f140 80ab 	bpl.w	9000c566 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c410:	4863      	ldr	r0, [pc, #396]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c412:	68e1      	ldr	r1, [r4, #12]
9000c414:	6982      	ldr	r2, [r0, #24]
9000c416:	f002 020f 	and.w	r2, r2, #15
9000c41a:	4291      	cmp	r1, r2
9000c41c:	d904      	bls.n	9000c428 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c41e:	6982      	ldr	r2, [r0, #24]
9000c420:	f022 020f 	bic.w	r2, r2, #15
9000c424:	430a      	orrs	r2, r1
9000c426:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c428:	07d8      	lsls	r0, r3, #31
9000c42a:	d530      	bpl.n	9000c48e <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000c42c:	4a5c      	ldr	r2, [pc, #368]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c42e:	68a1      	ldr	r1, [r4, #8]
9000c430:	6993      	ldr	r3, [r2, #24]
9000c432:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000c436:	430b      	orrs	r3, r1
9000c438:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c43a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c43c:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000c43e:	2902      	cmp	r1, #2
9000c440:	f000 80a1 	beq.w	9000c586 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000c444:	2903      	cmp	r1, #3
9000c446:	f000 8098 	beq.w	9000c57a <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000c44a:	2901      	cmp	r1, #1
9000c44c:	f000 80a1 	beq.w	9000c592 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c450:	0758      	lsls	r0, r3, #29
9000c452:	d59e      	bpl.n	9000c392 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c454:	4e52      	ldr	r6, [pc, #328]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c456:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000c45a:	6933      	ldr	r3, [r6, #16]
9000c45c:	f023 0307 	bic.w	r3, r3, #7
9000c460:	430b      	orrs	r3, r1
9000c462:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000c464:	f7fc faae 	bl	900089c4 <HAL_GetTick>
9000c468:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c46a:	e005      	b.n	9000c478 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000c46c:	f7fc faaa 	bl	900089c4 <HAL_GetTick>
9000c470:	1bc0      	subs	r0, r0, r7
9000c472:	4540      	cmp	r0, r8
9000c474:	f200 808b 	bhi.w	9000c58e <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000c478:	6933      	ldr	r3, [r6, #16]
9000c47a:	6862      	ldr	r2, [r4, #4]
9000c47c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c480:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000c484:	d1f2      	bne.n	9000c46c <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000c486:	6823      	ldr	r3, [r4, #0]
9000c488:	0799      	lsls	r1, r3, #30
9000c48a:	d506      	bpl.n	9000c49a <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000c48c:	68e1      	ldr	r1, [r4, #12]
9000c48e:	4844      	ldr	r0, [pc, #272]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c490:	6982      	ldr	r2, [r0, #24]
9000c492:	f002 020f 	and.w	r2, r2, #15
9000c496:	428a      	cmp	r2, r1
9000c498:	d869      	bhi.n	9000c56e <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000c49a:	4940      	ldr	r1, [pc, #256]	; (9000c59c <HAL_RCC_ClockConfig+0x238>)
9000c49c:	680a      	ldr	r2, [r1, #0]
9000c49e:	f002 020f 	and.w	r2, r2, #15
9000c4a2:	42aa      	cmp	r2, r5
9000c4a4:	d90a      	bls.n	9000c4bc <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c4a6:	680a      	ldr	r2, [r1, #0]
9000c4a8:	f022 020f 	bic.w	r2, r2, #15
9000c4ac:	432a      	orrs	r2, r5
9000c4ae:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c4b0:	680a      	ldr	r2, [r1, #0]
9000c4b2:	f002 020f 	and.w	r2, r2, #15
9000c4b6:	42aa      	cmp	r2, r5
9000c4b8:	f47f af6b 	bne.w	9000c392 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c4bc:	075a      	lsls	r2, r3, #29
9000c4be:	d50b      	bpl.n	9000c4d8 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c4c0:	4937      	ldr	r1, [pc, #220]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c4c2:	6920      	ldr	r0, [r4, #16]
9000c4c4:	698a      	ldr	r2, [r1, #24]
9000c4c6:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c4ca:	4290      	cmp	r0, r2
9000c4cc:	d204      	bcs.n	9000c4d8 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c4ce:	698a      	ldr	r2, [r1, #24]
9000c4d0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c4d4:	4302      	orrs	r2, r0
9000c4d6:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c4d8:	071f      	lsls	r7, r3, #28
9000c4da:	d50b      	bpl.n	9000c4f4 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c4dc:	4930      	ldr	r1, [pc, #192]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c4de:	6960      	ldr	r0, [r4, #20]
9000c4e0:	69ca      	ldr	r2, [r1, #28]
9000c4e2:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c4e6:	4290      	cmp	r0, r2
9000c4e8:	d204      	bcs.n	9000c4f4 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c4ea:	69ca      	ldr	r2, [r1, #28]
9000c4ec:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c4f0:	4302      	orrs	r2, r0
9000c4f2:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c4f4:	06de      	lsls	r6, r3, #27
9000c4f6:	d50b      	bpl.n	9000c510 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c4f8:	4929      	ldr	r1, [pc, #164]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c4fa:	69a0      	ldr	r0, [r4, #24]
9000c4fc:	69ca      	ldr	r2, [r1, #28]
9000c4fe:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c502:	4290      	cmp	r0, r2
9000c504:	d204      	bcs.n	9000c510 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c506:	69ca      	ldr	r2, [r1, #28]
9000c508:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000c50c:	4302      	orrs	r2, r0
9000c50e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c510:	069d      	lsls	r5, r3, #26
9000c512:	d50b      	bpl.n	9000c52c <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c514:	4a22      	ldr	r2, [pc, #136]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c516:	69e1      	ldr	r1, [r4, #28]
9000c518:	6a13      	ldr	r3, [r2, #32]
9000c51a:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000c51e:	4299      	cmp	r1, r3
9000c520:	d204      	bcs.n	9000c52c <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000c522:	6a13      	ldr	r3, [r2, #32]
9000c524:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000c528:	430b      	orrs	r3, r1
9000c52a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c52c:	f7ff fe7a 	bl	9000c224 <HAL_RCC_GetSysClockFreq>
9000c530:	4a1b      	ldr	r2, [pc, #108]	; (9000c5a0 <HAL_RCC_ClockConfig+0x23c>)
9000c532:	4603      	mov	r3, r0
9000c534:	481b      	ldr	r0, [pc, #108]	; (9000c5a4 <HAL_RCC_ClockConfig+0x240>)
9000c536:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c538:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c53a:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000c53e:	4d1a      	ldr	r5, [pc, #104]	; (9000c5a8 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c540:	f002 020f 	and.w	r2, r2, #15
9000c544:	4c19      	ldr	r4, [pc, #100]	; (9000c5ac <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c546:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c548:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c54a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000c54e:	4818      	ldr	r0, [pc, #96]	; (9000c5b0 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c550:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000c554:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000c556:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000c558:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c55a:	40d3      	lsrs	r3, r2
9000c55c:	6023      	str	r3, [r4, #0]
}
9000c55e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000c562:	f7f6 bf3b 	b.w	900033dc <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000c566:	07da      	lsls	r2, r3, #31
9000c568:	f53f af60 	bmi.w	9000c42c <HAL_RCC_ClockConfig+0xc8>
9000c56c:	e795      	b.n	9000c49a <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000c56e:	6982      	ldr	r2, [r0, #24]
9000c570:	f022 020f 	bic.w	r2, r2, #15
9000c574:	430a      	orrs	r2, r1
9000c576:	6182      	str	r2, [r0, #24]
9000c578:	e78f      	b.n	9000c49a <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c57a:	019f      	lsls	r7, r3, #6
9000c57c:	f53f af6a 	bmi.w	9000c454 <HAL_RCC_ClockConfig+0xf0>
9000c580:	e707      	b.n	9000c392 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000c582:	2001      	movs	r0, #1
}
9000c584:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c586:	039b      	lsls	r3, r3, #14
9000c588:	f53f af64 	bmi.w	9000c454 <HAL_RCC_ClockConfig+0xf0>
9000c58c:	e701      	b.n	9000c392 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000c58e:	2003      	movs	r0, #3
9000c590:	e700      	b.n	9000c394 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c592:	05de      	lsls	r6, r3, #23
9000c594:	f53f af5e 	bmi.w	9000c454 <HAL_RCC_ClockConfig+0xf0>
9000c598:	e6fb      	b.n	9000c392 <HAL_RCC_ClockConfig+0x2e>
9000c59a:	bf00      	nop
9000c59c:	52002000 	.word	0x52002000
9000c5a0:	58024400 	.word	0x58024400
9000c5a4:	9002b000 	.word	0x9002b000
9000c5a8:	2400006c 	.word	0x2400006c
9000c5ac:	24000070 	.word	0x24000070
9000c5b0:	24000078 	.word	0x24000078

9000c5b4 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c5b4:	4a1c      	ldr	r2, [pc, #112]	; (9000c628 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000c5b6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c5b8:	6913      	ldr	r3, [r2, #16]
9000c5ba:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c5be:	2b10      	cmp	r3, #16
9000c5c0:	d021      	beq.n	9000c606 <HAL_RCC_GetPCLK1Freq+0x52>
9000c5c2:	2b18      	cmp	r3, #24
9000c5c4:	d02a      	beq.n	9000c61c <HAL_RCC_GetPCLK1Freq+0x68>
9000c5c6:	b303      	cbz	r3, 9000c60a <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000c5c8:	4818      	ldr	r0, [pc, #96]	; (9000c62c <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c5ca:	4a17      	ldr	r2, [pc, #92]	; (9000c628 <HAL_RCC_GetPCLK1Freq+0x74>)
9000c5cc:	4918      	ldr	r1, [pc, #96]	; (9000c630 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000c5ce:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c5d0:	4c18      	ldr	r4, [pc, #96]	; (9000c634 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c5d2:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000c5d6:	4d18      	ldr	r5, [pc, #96]	; (9000c638 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c5d8:	5ccb      	ldrb	r3, [r1, r3]
9000c5da:	f003 031f 	and.w	r3, r3, #31
9000c5de:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c5e0:	6993      	ldr	r3, [r2, #24]
9000c5e2:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000c5e6:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c5e8:	5ccb      	ldrb	r3, [r1, r3]
9000c5ea:	f003 031f 	and.w	r3, r3, #31
9000c5ee:	fa20 f303 	lsr.w	r3, r0, r3
9000c5f2:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000c5f4:	69d2      	ldr	r2, [r2, #28]
9000c5f6:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000c5fa:	5c88      	ldrb	r0, [r1, r2]
9000c5fc:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000c600:	fa23 f000 	lsr.w	r0, r3, r0
9000c604:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c606:	480d      	ldr	r0, [pc, #52]	; (9000c63c <HAL_RCC_GetPCLK1Freq+0x88>)
9000c608:	e7df      	b.n	9000c5ca <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c60a:	6813      	ldr	r3, [r2, #0]
9000c60c:	069b      	lsls	r3, r3, #26
9000c60e:	d508      	bpl.n	9000c622 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c610:	6813      	ldr	r3, [r2, #0]
9000c612:	480b      	ldr	r0, [pc, #44]	; (9000c640 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c614:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c618:	40d8      	lsrs	r0, r3
9000c61a:	e7d6      	b.n	9000c5ca <HAL_RCC_GetPCLK1Freq+0x16>
9000c61c:	f7ff fa8a 	bl	9000bb34 <HAL_RCC_GetSysClockFreq.part.0>
9000c620:	e7d3      	b.n	9000c5ca <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c622:	4807      	ldr	r0, [pc, #28]	; (9000c640 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000c624:	e7d1      	b.n	9000c5ca <HAL_RCC_GetPCLK1Freq+0x16>
9000c626:	bf00      	nop
9000c628:	58024400 	.word	0x58024400
9000c62c:	003d0900 	.word	0x003d0900
9000c630:	9002b000 	.word	0x9002b000
9000c634:	24000070 	.word	0x24000070
9000c638:	2400006c 	.word	0x2400006c
9000c63c:	017d7840 	.word	0x017d7840
9000c640:	03d09000 	.word	0x03d09000

9000c644 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c644:	4a1c      	ldr	r2, [pc, #112]	; (9000c6b8 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000c646:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c648:	6913      	ldr	r3, [r2, #16]
9000c64a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c64e:	2b10      	cmp	r3, #16
9000c650:	d021      	beq.n	9000c696 <HAL_RCC_GetPCLK2Freq+0x52>
9000c652:	2b18      	cmp	r3, #24
9000c654:	d02a      	beq.n	9000c6ac <HAL_RCC_GetPCLK2Freq+0x68>
9000c656:	b303      	cbz	r3, 9000c69a <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000c658:	4818      	ldr	r0, [pc, #96]	; (9000c6bc <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c65a:	4a17      	ldr	r2, [pc, #92]	; (9000c6b8 <HAL_RCC_GetPCLK2Freq+0x74>)
9000c65c:	4918      	ldr	r1, [pc, #96]	; (9000c6c0 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000c65e:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c660:	4c18      	ldr	r4, [pc, #96]	; (9000c6c4 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c662:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000c666:	4d18      	ldr	r5, [pc, #96]	; (9000c6c8 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000c668:	5ccb      	ldrb	r3, [r1, r3]
9000c66a:	f003 031f 	and.w	r3, r3, #31
9000c66e:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c670:	6993      	ldr	r3, [r2, #24]
9000c672:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000c676:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000c678:	5ccb      	ldrb	r3, [r1, r3]
9000c67a:	f003 031f 	and.w	r3, r3, #31
9000c67e:	fa20 f303 	lsr.w	r3, r0, r3
9000c682:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000c684:	69d2      	ldr	r2, [r2, #28]
9000c686:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000c68a:	5c88      	ldrb	r0, [r1, r2]
9000c68c:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000c690:	fa23 f000 	lsr.w	r0, r3, r0
9000c694:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c696:	480d      	ldr	r0, [pc, #52]	; (9000c6cc <HAL_RCC_GetPCLK2Freq+0x88>)
9000c698:	e7df      	b.n	9000c65a <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c69a:	6813      	ldr	r3, [r2, #0]
9000c69c:	069b      	lsls	r3, r3, #26
9000c69e:	d508      	bpl.n	9000c6b2 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c6a0:	6813      	ldr	r3, [r2, #0]
9000c6a2:	480b      	ldr	r0, [pc, #44]	; (9000c6d0 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c6a4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c6a8:	40d8      	lsrs	r0, r3
9000c6aa:	e7d6      	b.n	9000c65a <HAL_RCC_GetPCLK2Freq+0x16>
9000c6ac:	f7ff fa42 	bl	9000bb34 <HAL_RCC_GetSysClockFreq.part.0>
9000c6b0:	e7d3      	b.n	9000c65a <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c6b2:	4807      	ldr	r0, [pc, #28]	; (9000c6d0 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000c6b4:	e7d1      	b.n	9000c65a <HAL_RCC_GetPCLK2Freq+0x16>
9000c6b6:	bf00      	nop
9000c6b8:	58024400 	.word	0x58024400
9000c6bc:	003d0900 	.word	0x003d0900
9000c6c0:	9002b000 	.word	0x9002b000
9000c6c4:	24000070 	.word	0x24000070
9000c6c8:	2400006c 	.word	0x2400006c
9000c6cc:	017d7840 	.word	0x017d7840
9000c6d0:	03d09000 	.word	0x03d09000

9000c6d4 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c6d4:	4b13      	ldr	r3, [pc, #76]	; (9000c724 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c6d6:	223f      	movs	r2, #63	; 0x3f
9000c6d8:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c6da:	691a      	ldr	r2, [r3, #16]
9000c6dc:	f002 0207 	and.w	r2, r2, #7
9000c6e0:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c6e2:	699a      	ldr	r2, [r3, #24]
9000c6e4:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000c6e8:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c6ea:	699a      	ldr	r2, [r3, #24]
9000c6ec:	f002 020f 	and.w	r2, r2, #15
9000c6f0:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c6f2:	699a      	ldr	r2, [r3, #24]
9000c6f4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c6f8:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c6fa:	69da      	ldr	r2, [r3, #28]
9000c6fc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c700:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c702:	69da      	ldr	r2, [r3, #28]
9000c704:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c708:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c70a:	6a1b      	ldr	r3, [r3, #32]
{
9000c70c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c70e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c712:	4c05      	ldr	r4, [pc, #20]	; (9000c728 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c714:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c716:	6823      	ldr	r3, [r4, #0]
}
9000c718:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c71c:	f003 030f 	and.w	r3, r3, #15
9000c720:	600b      	str	r3, [r1, #0]
}
9000c722:	4770      	bx	lr
9000c724:	58024400 	.word	0x58024400
9000c728:	52002000 	.word	0x52002000

9000c72c <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000c72c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c72e:	4c3a      	ldr	r4, [pc, #232]	; (9000c818 <RCCEx_PLL2_Config+0xec>)
9000c730:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c732:	f003 0303 	and.w	r3, r3, #3
9000c736:	2b03      	cmp	r3, #3
9000c738:	d067      	beq.n	9000c80a <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c73a:	6823      	ldr	r3, [r4, #0]
9000c73c:	4606      	mov	r6, r0
9000c73e:	460f      	mov	r7, r1
9000c740:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000c744:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c746:	f7fc f93d 	bl	900089c4 <HAL_GetTick>
9000c74a:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c74c:	e004      	b.n	9000c758 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c74e:	f7fc f939 	bl	900089c4 <HAL_GetTick>
9000c752:	1b43      	subs	r3, r0, r5
9000c754:	2b02      	cmp	r3, #2
9000c756:	d856      	bhi.n	9000c806 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c758:	6823      	ldr	r3, [r4, #0]
9000c75a:	011a      	lsls	r2, r3, #4
9000c75c:	d4f7      	bmi.n	9000c74e <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c75e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c760:	6832      	ldr	r2, [r6, #0]
9000c762:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000c766:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c76a:	62a3      	str	r3, [r4, #40]	; 0x28
9000c76c:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c770:	3b01      	subs	r3, #1
9000c772:	3a01      	subs	r2, #1
9000c774:	025b      	lsls	r3, r3, #9
9000c776:	0412      	lsls	r2, r2, #16
9000c778:	b29b      	uxth	r3, r3
9000c77a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c77e:	4313      	orrs	r3, r2
9000c780:	6872      	ldr	r2, [r6, #4]
9000c782:	3a01      	subs	r2, #1
9000c784:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c788:	4313      	orrs	r3, r2
9000c78a:	6932      	ldr	r2, [r6, #16]
9000c78c:	3a01      	subs	r2, #1
9000c78e:	0612      	lsls	r2, r2, #24
9000c790:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c794:	4313      	orrs	r3, r2
9000c796:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c798:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c79a:	6972      	ldr	r2, [r6, #20]
9000c79c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000c7a0:	4313      	orrs	r3, r2
9000c7a2:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c7a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c7a6:	69b3      	ldr	r3, [r6, #24]
9000c7a8:	f022 0220 	bic.w	r2, r2, #32
9000c7ac:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c7ae:	4b1b      	ldr	r3, [pc, #108]	; (9000c81c <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c7b0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c7b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c7b4:	f022 0210 	bic.w	r2, r2, #16
9000c7b8:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c7ba:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000c7bc:	69f2      	ldr	r2, [r6, #28]
9000c7be:	400b      	ands	r3, r1
9000c7c0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c7c4:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c7c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c7c8:	f043 0310 	orr.w	r3, r3, #16
9000c7cc:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c7ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c7d0:	b1ef      	cbz	r7, 9000c80e <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c7d2:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c7d4:	bf0c      	ite	eq
9000c7d6:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c7da:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000c7de:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c7e0:	4c0d      	ldr	r4, [pc, #52]	; (9000c818 <RCCEx_PLL2_Config+0xec>)
9000c7e2:	6823      	ldr	r3, [r4, #0]
9000c7e4:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000c7e8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c7ea:	f7fc f8eb 	bl	900089c4 <HAL_GetTick>
9000c7ee:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c7f0:	e004      	b.n	9000c7fc <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c7f2:	f7fc f8e7 	bl	900089c4 <HAL_GetTick>
9000c7f6:	1b40      	subs	r0, r0, r5
9000c7f8:	2802      	cmp	r0, #2
9000c7fa:	d804      	bhi.n	9000c806 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c7fc:	6823      	ldr	r3, [r4, #0]
9000c7fe:	011b      	lsls	r3, r3, #4
9000c800:	d5f7      	bpl.n	9000c7f2 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000c802:	2000      	movs	r0, #0
}
9000c804:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c806:	2003      	movs	r0, #3
}
9000c808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c80a:	2001      	movs	r0, #1
}
9000c80c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c80e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000c812:	62e3      	str	r3, [r4, #44]	; 0x2c
9000c814:	e7e4      	b.n	9000c7e0 <RCCEx_PLL2_Config+0xb4>
9000c816:	bf00      	nop
9000c818:	58024400 	.word	0x58024400
9000c81c:	ffff0007 	.word	0xffff0007

9000c820 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000c820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c822:	4c3a      	ldr	r4, [pc, #232]	; (9000c90c <RCCEx_PLL3_Config+0xec>)
9000c824:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c826:	f003 0303 	and.w	r3, r3, #3
9000c82a:	2b03      	cmp	r3, #3
9000c82c:	d067      	beq.n	9000c8fe <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c82e:	6823      	ldr	r3, [r4, #0]
9000c830:	4606      	mov	r6, r0
9000c832:	460f      	mov	r7, r1
9000c834:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000c838:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c83a:	f7fc f8c3 	bl	900089c4 <HAL_GetTick>
9000c83e:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c840:	e004      	b.n	9000c84c <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c842:	f7fc f8bf 	bl	900089c4 <HAL_GetTick>
9000c846:	1b43      	subs	r3, r0, r5
9000c848:	2b02      	cmp	r3, #2
9000c84a:	d856      	bhi.n	9000c8fa <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c84c:	6823      	ldr	r3, [r4, #0]
9000c84e:	009a      	lsls	r2, r3, #2
9000c850:	d4f7      	bmi.n	9000c842 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c852:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c854:	6832      	ldr	r2, [r6, #0]
9000c856:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000c85a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c85e:	62a3      	str	r3, [r4, #40]	; 0x28
9000c860:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c864:	3b01      	subs	r3, #1
9000c866:	3a01      	subs	r2, #1
9000c868:	025b      	lsls	r3, r3, #9
9000c86a:	0412      	lsls	r2, r2, #16
9000c86c:	b29b      	uxth	r3, r3
9000c86e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c872:	4313      	orrs	r3, r2
9000c874:	6872      	ldr	r2, [r6, #4]
9000c876:	3a01      	subs	r2, #1
9000c878:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c87c:	4313      	orrs	r3, r2
9000c87e:	6932      	ldr	r2, [r6, #16]
9000c880:	3a01      	subs	r2, #1
9000c882:	0612      	lsls	r2, r2, #24
9000c884:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c888:	4313      	orrs	r3, r2
9000c88a:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000c88c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c88e:	6972      	ldr	r2, [r6, #20]
9000c890:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000c894:	4313      	orrs	r3, r2
9000c896:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c898:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c89a:	69b3      	ldr	r3, [r6, #24]
9000c89c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000c8a0:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c8a2:	4b1b      	ldr	r3, [pc, #108]	; (9000c910 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c8a4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000c8a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c8a8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000c8ac:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c8ae:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000c8b0:	69f2      	ldr	r2, [r6, #28]
9000c8b2:	400b      	ands	r3, r1
9000c8b4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c8b8:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000c8ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c8bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c8c0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c8c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c8c4:	b1ef      	cbz	r7, 9000c902 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c8c6:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000c8c8:	bf0c      	ite	eq
9000c8ca:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000c8ce:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000c8d2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000c8d4:	4c0d      	ldr	r4, [pc, #52]	; (9000c90c <RCCEx_PLL3_Config+0xec>)
9000c8d6:	6823      	ldr	r3, [r4, #0]
9000c8d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000c8dc:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c8de:	f7fc f871 	bl	900089c4 <HAL_GetTick>
9000c8e2:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c8e4:	e004      	b.n	9000c8f0 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c8e6:	f7fc f86d 	bl	900089c4 <HAL_GetTick>
9000c8ea:	1b40      	subs	r0, r0, r5
9000c8ec:	2802      	cmp	r0, #2
9000c8ee:	d804      	bhi.n	9000c8fa <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c8f0:	6823      	ldr	r3, [r4, #0]
9000c8f2:	009b      	lsls	r3, r3, #2
9000c8f4:	d5f7      	bpl.n	9000c8e6 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000c8f6:	2000      	movs	r0, #0
}
9000c8f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c8fa:	2003      	movs	r0, #3
}
9000c8fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000c8fe:	2001      	movs	r0, #1
}
9000c900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c902:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000c906:	62e3      	str	r3, [r4, #44]	; 0x2c
9000c908:	e7e4      	b.n	9000c8d4 <RCCEx_PLL3_Config+0xb4>
9000c90a:	bf00      	nop
9000c90c:	58024400 	.word	0x58024400
9000c910:	ffff0007 	.word	0xffff0007

9000c914 <HAL_RCCEx_PeriphCLKConfig>:
{
9000c914:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c918:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000c91c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c91e:	011d      	lsls	r5, r3, #4
9000c920:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000c924:	d523      	bpl.n	9000c96e <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c926:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000c928:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000c92c:	f000 8553 	beq.w	9000d3d6 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000c930:	d812      	bhi.n	9000c958 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000c932:	2900      	cmp	r1, #0
9000c934:	f000 85a9 	beq.w	9000d48a <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000c938:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000c93c:	f040 85a2 	bne.w	9000d484 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c940:	2102      	movs	r1, #2
9000c942:	3008      	adds	r0, #8
9000c944:	f7ff fef2 	bl	9000c72c <RCCEx_PLL2_Config>
9000c948:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000c94a:	2e00      	cmp	r6, #0
9000c94c:	f040 8522 	bne.w	9000d394 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c950:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c952:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c956:	e003      	b.n	9000c960 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c958:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000c95c:	f040 8592 	bne.w	9000d484 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c960:	4dae      	ldr	r5, [pc, #696]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000c962:	2600      	movs	r6, #0
9000c964:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000c966:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000c96a:	4301      	orrs	r1, r0
9000c96c:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c96e:	05d8      	lsls	r0, r3, #23
9000c970:	d50a      	bpl.n	9000c988 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c972:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000c974:	2904      	cmp	r1, #4
9000c976:	d806      	bhi.n	9000c986 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000c978:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c97c:	053d0536 	.word	0x053d0536
9000c980:	0323051a 	.word	0x0323051a
9000c984:	0323      	.short	0x0323
9000c986:	2601      	movs	r6, #1
9000c988:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c98a:	0599      	lsls	r1, r3, #22
9000c98c:	d51d      	bpl.n	9000c9ca <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c98e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000c990:	2980      	cmp	r1, #128	; 0x80
9000c992:	f000 8516 	beq.w	9000d3c2 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000c996:	f200 80f9 	bhi.w	9000cb8c <HAL_RCCEx_PeriphCLKConfig+0x278>
9000c99a:	2900      	cmp	r1, #0
9000c99c:	f000 8433 	beq.w	9000d206 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000c9a0:	2940      	cmp	r1, #64	; 0x40
9000c9a2:	f040 80fa 	bne.w	9000cb9a <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c9a6:	2100      	movs	r1, #0
9000c9a8:	f104 0008 	add.w	r0, r4, #8
9000c9ac:	f7ff febe 	bl	9000c72c <RCCEx_PLL2_Config>
9000c9b0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c9b2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c9b6:	2d00      	cmp	r5, #0
9000c9b8:	f040 83fe 	bne.w	9000d1b8 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000c9bc:	4f97      	ldr	r7, [pc, #604]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000c9be:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000c9c0:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c9c2:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000c9c6:	4301      	orrs	r1, r0
9000c9c8:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c9ca:	055f      	lsls	r7, r3, #21
9000c9cc:	d521      	bpl.n	9000ca12 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c9ce:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000c9d2:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000c9d6:	f000 8521 	beq.w	9000d41c <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000c9da:	f200 80e1 	bhi.w	9000cba0 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000c9de:	2900      	cmp	r1, #0
9000c9e0:	f000 8418 	beq.w	9000d214 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000c9e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000c9e8:	f040 80e2 	bne.w	9000cbb0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c9ec:	2100      	movs	r1, #0
9000c9ee:	f104 0008 	add.w	r0, r4, #8
9000c9f2:	f7ff fe9b 	bl	9000c72c <RCCEx_PLL2_Config>
9000c9f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c9f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c9fc:	2d00      	cmp	r5, #0
9000c9fe:	f040 83e2 	bne.w	9000d1c6 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000ca02:	4f86      	ldr	r7, [pc, #536]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ca04:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000ca08:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ca0a:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000ca0e:	4301      	orrs	r1, r0
9000ca10:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000ca12:	0518      	lsls	r0, r3, #20
9000ca14:	d521      	bpl.n	9000ca5a <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000ca16:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000ca1a:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000ca1e:	f000 84bd 	beq.w	9000d39c <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000ca22:	f200 80c8 	bhi.w	9000cbb6 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000ca26:	2900      	cmp	r1, #0
9000ca28:	f000 83e7 	beq.w	9000d1fa <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000ca2c:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000ca30:	f040 80c9 	bne.w	9000cbc6 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ca34:	2100      	movs	r1, #0
9000ca36:	f104 0008 	add.w	r0, r4, #8
9000ca3a:	f7ff fe77 	bl	9000c72c <RCCEx_PLL2_Config>
9000ca3e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000ca40:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ca44:	2d00      	cmp	r5, #0
9000ca46:	f040 83b5 	bne.w	9000d1b4 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000ca4a:	4f74      	ldr	r7, [pc, #464]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ca4c:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000ca50:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ca52:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000ca56:	4301      	orrs	r1, r0
9000ca58:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000ca5a:	0199      	lsls	r1, r3, #6
9000ca5c:	d518      	bpl.n	9000ca90 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000ca5e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000ca60:	2920      	cmp	r1, #32
9000ca62:	f000 841f 	beq.w	9000d2a4 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000ca66:	f200 80b1 	bhi.w	9000cbcc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000ca6a:	b139      	cbz	r1, 9000ca7c <HAL_RCCEx_PeriphCLKConfig+0x168>
9000ca6c:	2910      	cmp	r1, #16
9000ca6e:	f040 80b0 	bne.w	9000cbd2 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ca72:	486a      	ldr	r0, [pc, #424]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ca74:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ca76:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ca7a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000ca7c:	2d00      	cmp	r5, #0
9000ca7e:	f040 83d8 	bne.w	9000d232 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000ca82:	4f66      	ldr	r7, [pc, #408]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ca84:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000ca86:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000ca88:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000ca8c:	4301      	orrs	r1, r0
9000ca8e:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000ca90:	04df      	lsls	r7, r3, #19
9000ca92:	d51f      	bpl.n	9000cad4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000ca94:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000ca96:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000ca9a:	f000 84b5 	beq.w	9000d408 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000ca9e:	f200 809b 	bhi.w	9000cbd8 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000caa2:	2900      	cmp	r1, #0
9000caa4:	f000 83a3 	beq.w	9000d1ee <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000caa8:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000caac:	f040 809c 	bne.w	9000cbe8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cab0:	2100      	movs	r1, #0
9000cab2:	f104 0008 	add.w	r0, r4, #8
9000cab6:	f7ff fe39 	bl	9000c72c <RCCEx_PLL2_Config>
9000caba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cabc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cac0:	2d00      	cmp	r5, #0
9000cac2:	f040 837b 	bne.w	9000d1bc <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000cac6:	4f55      	ldr	r7, [pc, #340]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cac8:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000caca:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cacc:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000cad0:	4301      	orrs	r1, r0
9000cad2:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cad4:	0498      	lsls	r0, r3, #18
9000cad6:	d51d      	bpl.n	9000cb14 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cad8:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000cada:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000cade:	f000 8410 	beq.w	9000d302 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000cae2:	f200 8084 	bhi.w	9000cbee <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000cae6:	b159      	cbz	r1, 9000cb00 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cae8:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000caec:	f040 8087 	bne.w	9000cbfe <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000caf0:	2101      	movs	r1, #1
9000caf2:	f104 0008 	add.w	r0, r4, #8
9000caf6:	f7ff fe19 	bl	9000c72c <RCCEx_PLL2_Config>
9000cafa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cafc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb00:	2d00      	cmp	r5, #0
9000cb02:	f040 839a 	bne.w	9000d23a <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000cb06:	4f45      	ldr	r7, [pc, #276]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cb08:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000cb0a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cb0c:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000cb10:	4301      	orrs	r1, r0
9000cb12:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000cb14:	0459      	lsls	r1, r3, #17
9000cb16:	d51d      	bpl.n	9000cb54 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cb18:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000cb1c:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000cb20:	f000 83fb 	beq.w	9000d31a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000cb24:	d86e      	bhi.n	9000cc04 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000cb26:	b151      	cbz	r1, 9000cb3e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000cb28:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000cb2c:	d172      	bne.n	9000cc14 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000cb2e:	2101      	movs	r1, #1
9000cb30:	f104 0008 	add.w	r0, r4, #8
9000cb34:	f7ff fdfa 	bl	9000c72c <RCCEx_PLL2_Config>
9000cb38:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cb3a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb3e:	2d00      	cmp	r5, #0
9000cb40:	f040 837f 	bne.w	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000cb44:	4f35      	ldr	r7, [pc, #212]	; (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cb46:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000cb4a:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cb4c:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000cb50:	4301      	orrs	r1, r0
9000cb52:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000cb54:	041f      	lsls	r7, r3, #16
9000cb56:	d50d      	bpl.n	9000cb74 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000cb58:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000cb5a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000cb5e:	f000 83c8 	beq.w	9000d2f2 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000cb62:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000cb66:	f000 823b 	beq.w	9000cfe0 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000cb6a:	2900      	cmp	r1, #0
9000cb6c:	f000 8240 	beq.w	9000cff0 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000cb70:	2601      	movs	r6, #1
9000cb72:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cb74:	01d8      	lsls	r0, r3, #7
9000cb76:	d562      	bpl.n	9000cc3e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000cb78:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000cb7a:	2903      	cmp	r1, #3
9000cb7c:	f200 84bf 	bhi.w	9000d4fe <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000cb80:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cb84:	004e0053 	.word	0x004e0053
9000cb88:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000cb8c:	29c0      	cmp	r1, #192	; 0xc0
9000cb8e:	f43f af12 	beq.w	9000c9b6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000cb92:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000cb96:	f43f af0e 	beq.w	9000c9b6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000cb9a:	2601      	movs	r6, #1
9000cb9c:	4635      	mov	r5, r6
9000cb9e:	e714      	b.n	9000c9ca <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cba0:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000cba4:	f43f af2a 	beq.w	9000c9fc <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000cba8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000cbac:	f43f af26 	beq.w	9000c9fc <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000cbb0:	2601      	movs	r6, #1
9000cbb2:	4635      	mov	r5, r6
9000cbb4:	e72d      	b.n	9000ca12 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000cbb6:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000cbba:	f43f af43 	beq.w	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000cbbe:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000cbc2:	f43f af3f 	beq.w	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000cbc6:	2601      	movs	r6, #1
9000cbc8:	4635      	mov	r5, r6
9000cbca:	e746      	b.n	9000ca5a <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000cbcc:	2930      	cmp	r1, #48	; 0x30
9000cbce:	f43f af55 	beq.w	9000ca7c <HAL_RCCEx_PeriphCLKConfig+0x168>
9000cbd2:	2601      	movs	r6, #1
9000cbd4:	4635      	mov	r5, r6
9000cbd6:	e75b      	b.n	9000ca90 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000cbd8:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000cbdc:	f43f af70 	beq.w	9000cac0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000cbe0:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000cbe4:	f43f af6c 	beq.w	9000cac0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000cbe8:	2601      	movs	r6, #1
9000cbea:	4635      	mov	r5, r6
9000cbec:	e772      	b.n	9000cad4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000cbee:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000cbf2:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000cbf6:	d083      	beq.n	9000cb00 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cbf8:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000cbfc:	d080      	beq.n	9000cb00 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000cbfe:	2601      	movs	r6, #1
9000cc00:	4635      	mov	r5, r6
9000cc02:	e787      	b.n	9000cb14 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000cc04:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000cc08:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000cc0c:	d097      	beq.n	9000cb3e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000cc0e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000cc12:	d094      	beq.n	9000cb3e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000cc14:	2601      	movs	r6, #1
9000cc16:	4635      	mov	r5, r6
9000cc18:	e79c      	b.n	9000cb54 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000cc1a:	bf00      	nop
9000cc1c:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc20:	4839      	ldr	r0, [pc, #228]	; (9000cd08 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000cc22:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000cc24:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000cc28:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000cc2a:	2d00      	cmp	r5, #0
9000cc2c:	f040 8303 	bne.w	9000d236 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000cc30:	4f35      	ldr	r7, [pc, #212]	; (9000cd08 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000cc32:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000cc34:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000cc36:	f021 0103 	bic.w	r1, r1, #3
9000cc3a:	4301      	orrs	r1, r0
9000cc3c:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000cc3e:	0259      	lsls	r1, r3, #9
9000cc40:	f100 826a 	bmi.w	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cc44:	07d8      	lsls	r0, r3, #31
9000cc46:	d52f      	bpl.n	9000cca8 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000cc48:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000cc4a:	2928      	cmp	r1, #40	; 0x28
9000cc4c:	d82a      	bhi.n	9000cca4 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000cc4e:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cc52:	020a      	.short	0x020a
9000cc54:	00290029 	.word	0x00290029
9000cc58:	00290029 	.word	0x00290029
9000cc5c:	00290029 	.word	0x00290029
9000cc60:	02020029 	.word	0x02020029
9000cc64:	00290029 	.word	0x00290029
9000cc68:	00290029 	.word	0x00290029
9000cc6c:	00290029 	.word	0x00290029
9000cc70:	04070029 	.word	0x04070029
9000cc74:	00290029 	.word	0x00290029
9000cc78:	00290029 	.word	0x00290029
9000cc7c:	00290029 	.word	0x00290029
9000cc80:	020a0029 	.word	0x020a0029
9000cc84:	00290029 	.word	0x00290029
9000cc88:	00290029 	.word	0x00290029
9000cc8c:	00290029 	.word	0x00290029
9000cc90:	020a0029 	.word	0x020a0029
9000cc94:	00290029 	.word	0x00290029
9000cc98:	00290029 	.word	0x00290029
9000cc9c:	00290029 	.word	0x00290029
9000cca0:	020a0029 	.word	0x020a0029
9000cca4:	2601      	movs	r6, #1
9000cca6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000cca8:	0799      	lsls	r1, r3, #30
9000ccaa:	d51d      	bpl.n	9000cce8 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000ccac:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000ccae:	2905      	cmp	r1, #5
9000ccb0:	f200 8421 	bhi.w	9000d4f6 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000ccb4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ccb8:	0006000e 	.word	0x0006000e
9000ccbc:	000e03c8 	.word	0x000e03c8
9000ccc0:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ccc4:	2101      	movs	r1, #1
9000ccc6:	f104 0008 	add.w	r0, r4, #8
9000ccca:	f7ff fd2f 	bl	9000c72c <RCCEx_PLL2_Config>
9000ccce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000ccd0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ccd4:	2d00      	cmp	r5, #0
9000ccd6:	f040 82b8 	bne.w	9000d24a <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000ccda:	4f0b      	ldr	r7, [pc, #44]	; (9000cd08 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ccdc:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000ccde:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000cce0:	f021 0107 	bic.w	r1, r1, #7
9000cce4:	4301      	orrs	r1, r0
9000cce6:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000cce8:	075f      	lsls	r7, r3, #29
9000ccea:	d522      	bpl.n	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000ccec:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000ccf0:	2905      	cmp	r1, #5
9000ccf2:	f200 8408 	bhi.w	9000d506 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000ccf6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ccfa:	0011      	.short	0x0011
9000ccfc:	039b0009 	.word	0x039b0009
9000cd00:	00110011 	.word	0x00110011
9000cd04:	0011      	.short	0x0011
9000cd06:	bf00      	nop
9000cd08:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000cd0c:	2101      	movs	r1, #1
9000cd0e:	f104 0008 	add.w	r0, r4, #8
9000cd12:	f7ff fd0b 	bl	9000c72c <RCCEx_PLL2_Config>
9000cd16:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cd18:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd1c:	2d00      	cmp	r5, #0
9000cd1e:	f040 8286 	bne.w	9000d22e <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000cd22:	4fae      	ldr	r7, [pc, #696]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cd24:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000cd28:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cd2a:	f021 0107 	bic.w	r1, r1, #7
9000cd2e:	4301      	orrs	r1, r0
9000cd30:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cd32:	0698      	lsls	r0, r3, #26
9000cd34:	d51f      	bpl.n	9000cd76 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cd36:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000cd3a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000cd3e:	f000 82f7 	beq.w	9000d330 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000cd42:	f200 810b 	bhi.w	9000cf5c <HAL_RCCEx_PeriphCLKConfig+0x648>
9000cd46:	b159      	cbz	r1, 9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000cd48:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000cd4c:	f040 8110 	bne.w	9000cf70 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cd50:	2100      	movs	r1, #0
9000cd52:	f104 0008 	add.w	r0, r4, #8
9000cd56:	f7ff fce9 	bl	9000c72c <RCCEx_PLL2_Config>
9000cd5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cd5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd60:	2d00      	cmp	r5, #0
9000cd62:	f040 8260 	bne.w	9000d226 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000cd66:	4f9d      	ldr	r7, [pc, #628]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cd68:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000cd6c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000cd6e:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000cd72:	4301      	orrs	r1, r0
9000cd74:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cd76:	0659      	lsls	r1, r3, #25
9000cd78:	d51f      	bpl.n	9000cdba <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cd7a:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000cd7e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000cd82:	f000 829b 	beq.w	9000d2bc <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000cd86:	f200 80f6 	bhi.w	9000cf76 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000cd8a:	b159      	cbz	r1, 9000cda4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000cd8c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000cd90:	f040 80fb 	bne.w	9000cf8a <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cd94:	2100      	movs	r1, #0
9000cd96:	f104 0008 	add.w	r0, r4, #8
9000cd9a:	f7ff fcc7 	bl	9000c72c <RCCEx_PLL2_Config>
9000cd9e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cda0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cda4:	2d00      	cmp	r5, #0
9000cda6:	f040 824e 	bne.w	9000d246 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000cdaa:	4f8c      	ldr	r7, [pc, #560]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cdac:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000cdb0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cdb2:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000cdb6:	4301      	orrs	r1, r0
9000cdb8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000cdba:	061f      	lsls	r7, r3, #24
9000cdbc:	d51f      	bpl.n	9000cdfe <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cdbe:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000cdc2:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000cdc6:	f000 8289 	beq.w	9000d2dc <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000cdca:	f200 80e1 	bhi.w	9000cf90 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000cdce:	b159      	cbz	r1, 9000cde8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000cdd0:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000cdd4:	f040 80e6 	bne.w	9000cfa4 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cdd8:	2100      	movs	r1, #0
9000cdda:	f104 0008 	add.w	r0, r4, #8
9000cdde:	f7ff fca5 	bl	9000c72c <RCCEx_PLL2_Config>
9000cde2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cde4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cde8:	2d00      	cmp	r5, #0
9000cdea:	f040 8228 	bne.w	9000d23e <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000cdee:	4f7b      	ldr	r7, [pc, #492]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cdf0:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000cdf4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000cdf6:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000cdfa:	4301      	orrs	r1, r0
9000cdfc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000cdfe:	0718      	lsls	r0, r3, #28
9000ce00:	d50b      	bpl.n	9000ce1a <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000ce02:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000ce06:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000ce0a:	f000 82a9 	beq.w	9000d360 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ce0e:	4f73      	ldr	r7, [pc, #460]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ce10:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ce12:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000ce16:	4301      	orrs	r1, r0
9000ce18:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000ce1a:	06d9      	lsls	r1, r3, #27
9000ce1c:	d50b      	bpl.n	9000ce36 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000ce1e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000ce22:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000ce26:	f000 82a8 	beq.w	9000d37a <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000ce2a:	4f6c      	ldr	r7, [pc, #432]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ce2c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ce2e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000ce32:	4301      	orrs	r1, r0
9000ce34:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000ce36:	031f      	lsls	r7, r3, #12
9000ce38:	d50e      	bpl.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000ce3a:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000ce3e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ce42:	f000 80f4 	beq.w	9000d02e <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000ce46:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000ce4a:	f000 80f8 	beq.w	9000d03e <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000ce4e:	2900      	cmp	r1, #0
9000ce50:	f000 821c 	beq.w	9000d28c <HAL_RCCEx_PeriphCLKConfig+0x978>
9000ce54:	2601      	movs	r6, #1
9000ce56:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ce58:	0358      	lsls	r0, r3, #13
9000ce5a:	d50f      	bpl.n	9000ce7c <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000ce5c:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000ce60:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000ce64:	f000 80cf 	beq.w	9000d006 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000ce68:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000ce6c:	f000 80d3 	beq.w	9000d016 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000ce70:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000ce74:	f000 8202 	beq.w	9000d27c <HAL_RCCEx_PeriphCLKConfig+0x968>
9000ce78:	2601      	movs	r6, #1
9000ce7a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ce7c:	03d9      	lsls	r1, r3, #15
9000ce7e:	d509      	bpl.n	9000ce94 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000ce80:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000ce82:	2900      	cmp	r1, #0
9000ce84:	f000 81f1 	beq.w	9000d26a <HAL_RCCEx_PeriphCLKConfig+0x956>
9000ce88:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ce8c:	f000 819d 	beq.w	9000d1ca <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000ce90:	2601      	movs	r6, #1
9000ce92:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000ce94:	009f      	lsls	r7, r3, #2
9000ce96:	f100 80f1 	bmi.w	9000d07c <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ce9a:	0398      	lsls	r0, r3, #14
9000ce9c:	d50c      	bpl.n	9000ceb8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000ce9e:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000cea2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000cea6:	f000 81d8 	beq.w	9000d25a <HAL_RCCEx_PeriphCLKConfig+0x946>
9000ceaa:	d97e      	bls.n	9000cfaa <HAL_RCCEx_PeriphCLKConfig+0x696>
9000ceac:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000ceb0:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000ceb4:	d07b      	beq.n	9000cfae <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000ceb6:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000ceb8:	02d9      	lsls	r1, r3, #11
9000ceba:	d506      	bpl.n	9000ceca <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000cebc:	4847      	ldr	r0, [pc, #284]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cebe:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000cec0:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000cec2:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000cec6:	4329      	orrs	r1, r5
9000cec8:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000ceca:	00df      	lsls	r7, r3, #3
9000cecc:	d507      	bpl.n	9000cede <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000cece:	4843      	ldr	r0, [pc, #268]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ced0:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000ced4:	6901      	ldr	r1, [r0, #16]
9000ced6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000ceda:	4329      	orrs	r1, r5
9000cedc:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000cede:	029d      	lsls	r5, r3, #10
9000cee0:	d506      	bpl.n	9000cef0 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000cee2:	483e      	ldr	r0, [pc, #248]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cee4:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000cee6:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000cee8:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000ceec:	4329      	orrs	r1, r5
9000ceee:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000cef0:	0058      	lsls	r0, r3, #1
9000cef2:	d509      	bpl.n	9000cf08 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000cef4:	4939      	ldr	r1, [pc, #228]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cef6:	6908      	ldr	r0, [r1, #16]
9000cef8:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000cefc:	6108      	str	r0, [r1, #16]
9000cefe:	6908      	ldr	r0, [r1, #16]
9000cf00:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000cf04:	4328      	orrs	r0, r5
9000cf06:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000cf08:	2b00      	cmp	r3, #0
9000cf0a:	da06      	bge.n	9000cf1a <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000cf0c:	4833      	ldr	r0, [pc, #204]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cf0e:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000cf10:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000cf12:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000cf16:	4329      	orrs	r1, r5
9000cf18:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000cf1a:	0219      	lsls	r1, r3, #8
9000cf1c:	d507      	bpl.n	9000cf2e <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000cf1e:	492f      	ldr	r1, [pc, #188]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cf20:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000cf24:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000cf26:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000cf2a:	4303      	orrs	r3, r0
9000cf2c:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000cf2e:	07d3      	lsls	r3, r2, #31
9000cf30:	f100 80b0 	bmi.w	9000d094 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000cf34:	0797      	lsls	r7, r2, #30
9000cf36:	f100 80ba 	bmi.w	9000d0ae <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000cf3a:	0755      	lsls	r5, r2, #29
9000cf3c:	f100 80c4 	bmi.w	9000d0c8 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000cf40:	0710      	lsls	r0, r2, #28
9000cf42:	f100 80ce 	bmi.w	9000d0e2 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000cf46:	06d1      	lsls	r1, r2, #27
9000cf48:	f100 80d8 	bmi.w	9000d0fc <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cf4c:	0692      	lsls	r2, r2, #26
9000cf4e:	f100 8125 	bmi.w	9000d19c <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000cf52:	1e30      	subs	r0, r6, #0
9000cf54:	bf18      	it	ne
9000cf56:	2001      	movne	r0, #1
}
9000cf58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000cf5c:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000cf60:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000cf64:	f43f aefc 	beq.w	9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000cf68:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000cf6c:	f43f aef8 	beq.w	9000cd60 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000cf70:	2601      	movs	r6, #1
9000cf72:	4635      	mov	r5, r6
9000cf74:	e6ff      	b.n	9000cd76 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000cf76:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000cf7a:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000cf7e:	f43f af11 	beq.w	9000cda4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000cf82:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000cf86:	f43f af0d 	beq.w	9000cda4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000cf8a:	2601      	movs	r6, #1
9000cf8c:	4635      	mov	r5, r6
9000cf8e:	e714      	b.n	9000cdba <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000cf90:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000cf94:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000cf98:	f43f af26 	beq.w	9000cde8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000cf9c:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000cfa0:	f43f af22 	beq.w	9000cde8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000cfa4:	2601      	movs	r6, #1
9000cfa6:	4635      	mov	r5, r6
9000cfa8:	e729      	b.n	9000cdfe <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000cfaa:	2900      	cmp	r1, #0
9000cfac:	d183      	bne.n	9000ceb6 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000cfae:	2d00      	cmp	r5, #0
9000cfb0:	f040 8151 	bne.w	9000d256 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000cfb4:	4d09      	ldr	r5, [pc, #36]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cfb6:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000cfb8:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000cfbc:	4301      	orrs	r1, r0
9000cfbe:	6569      	str	r1, [r5, #84]	; 0x54
9000cfc0:	e77a      	b.n	9000ceb8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000cfc2:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000cfc4:	2d00      	cmp	r5, #0
9000cfc6:	f040 80fb 	bne.w	9000d1c0 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000cfca:	4f04      	ldr	r7, [pc, #16]	; (9000cfdc <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000cfcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000cfce:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cfd0:	f021 0107 	bic.w	r1, r1, #7
9000cfd4:	4301      	orrs	r1, r0
9000cfd6:	6539      	str	r1, [r7, #80]	; 0x50
9000cfd8:	e4d7      	b.n	9000c98a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000cfda:	bf00      	nop
9000cfdc:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000cfe0:	2101      	movs	r1, #1
9000cfe2:	f104 0008 	add.w	r0, r4, #8
9000cfe6:	f7ff fba1 	bl	9000c72c <RCCEx_PLL2_Config>
9000cfea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cfec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cff0:	2d00      	cmp	r5, #0
9000cff2:	f040 811a 	bne.w	9000d22a <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000cff6:	4fb7      	ldr	r7, [pc, #732]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000cff8:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000cffa:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cffc:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d000:	4301      	orrs	r1, r0
9000d002:	6539      	str	r1, [r7, #80]	; 0x50
9000d004:	e5b6      	b.n	9000cb74 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d006:	2101      	movs	r1, #1
9000d008:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d00c:	f7ff fc08 	bl	9000c820 <RCCEx_PLL3_Config>
9000d010:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d012:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d016:	2d00      	cmp	r5, #0
9000d018:	f040 811b 	bne.w	9000d252 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d01c:	4fad      	ldr	r7, [pc, #692]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d01e:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000d022:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d024:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000d028:	4301      	orrs	r1, r0
9000d02a:	6579      	str	r1, [r7, #84]	; 0x54
9000d02c:	e726      	b.n	9000ce7c <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d02e:	2102      	movs	r1, #2
9000d030:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d034:	f7ff fbf4 	bl	9000c820 <RCCEx_PLL3_Config>
9000d038:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d03a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d03e:	2d00      	cmp	r5, #0
9000d040:	f040 8105 	bne.w	9000d24e <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d044:	4fa3      	ldr	r7, [pc, #652]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d046:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000d04a:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d04c:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000d050:	4301      	orrs	r1, r0
9000d052:	65b9      	str	r1, [r7, #88]	; 0x58
9000d054:	e700      	b.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d056:	2101      	movs	r1, #1
9000d058:	f104 0008 	add.w	r0, r4, #8
9000d05c:	f7ff fb66 	bl	9000c72c <RCCEx_PLL2_Config>
9000d060:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d062:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d066:	2d00      	cmp	r5, #0
9000d068:	f040 80db 	bne.w	9000d222 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d06c:	4f99      	ldr	r7, [pc, #612]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d06e:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000d070:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d072:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000d076:	4301      	orrs	r1, r0
9000d078:	6579      	str	r1, [r7, #84]	; 0x54
9000d07a:	e615      	b.n	9000cca8 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d07c:	2102      	movs	r1, #2
9000d07e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d082:	f7ff fbcd 	bl	9000c820 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d086:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d08a:	2800      	cmp	r0, #0
9000d08c:	f43f af05 	beq.w	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000d090:	2601      	movs	r6, #1
9000d092:	e702      	b.n	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d094:	2100      	movs	r1, #0
9000d096:	f104 0008 	add.w	r0, r4, #8
9000d09a:	f7ff fb47 	bl	9000c72c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d09e:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d0a0:	2800      	cmp	r0, #0
9000d0a2:	f43f af47 	beq.w	9000cf34 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d0a6:	0797      	lsls	r7, r2, #30
9000d0a8:	4606      	mov	r6, r0
9000d0aa:	f57f af46 	bpl.w	9000cf3a <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d0ae:	2101      	movs	r1, #1
9000d0b0:	f104 0008 	add.w	r0, r4, #8
9000d0b4:	f7ff fb3a 	bl	9000c72c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d0b8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d0ba:	2800      	cmp	r0, #0
9000d0bc:	f43f af3d 	beq.w	9000cf3a <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d0c0:	0755      	lsls	r5, r2, #29
9000d0c2:	4606      	mov	r6, r0
9000d0c4:	f57f af3c 	bpl.w	9000cf40 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d0c8:	2102      	movs	r1, #2
9000d0ca:	f104 0008 	add.w	r0, r4, #8
9000d0ce:	f7ff fb2d 	bl	9000c72c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d0d2:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d0d4:	2800      	cmp	r0, #0
9000d0d6:	f43f af33 	beq.w	9000cf40 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d0da:	4606      	mov	r6, r0
9000d0dc:	0710      	lsls	r0, r2, #28
9000d0de:	f57f af32 	bpl.w	9000cf46 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d0e2:	2100      	movs	r1, #0
9000d0e4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d0e8:	f7ff fb9a 	bl	9000c820 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d0ec:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d0ee:	2800      	cmp	r0, #0
9000d0f0:	f43f af29 	beq.w	9000cf46 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d0f4:	06d1      	lsls	r1, r2, #27
9000d0f6:	4606      	mov	r6, r0
9000d0f8:	f57f af28 	bpl.w	9000cf4c <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d0fc:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000d100:	2101      	movs	r1, #1
9000d102:	4628      	mov	r0, r5
9000d104:	f7ff fb8c 	bl	9000c820 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d108:	2800      	cmp	r0, #0
9000d10a:	f000 80c9 	beq.w	9000d2a0 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d10e:	6863      	ldr	r3, [r4, #4]
9000d110:	069b      	lsls	r3, r3, #26
9000d112:	d54c      	bpl.n	9000d1ae <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000d114:	4606      	mov	r6, r0
9000d116:	e043      	b.n	9000d1a0 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d118:	4f6f      	ldr	r7, [pc, #444]	; (9000d2d8 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000d11a:	683b      	ldr	r3, [r7, #0]
9000d11c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000d120:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d122:	f7fb fc4f 	bl	900089c4 <HAL_GetTick>
9000d126:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d128:	e006      	b.n	9000d138 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d12a:	f7fb fc4b 	bl	900089c4 <HAL_GetTick>
9000d12e:	eba0 0008 	sub.w	r0, r0, r8
9000d132:	2864      	cmp	r0, #100	; 0x64
9000d134:	f200 81a0 	bhi.w	9000d478 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d138:	683b      	ldr	r3, [r7, #0]
9000d13a:	05da      	lsls	r2, r3, #23
9000d13c:	d5f5      	bpl.n	9000d12a <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000d13e:	2d00      	cmp	r5, #0
9000d140:	f040 81d4 	bne.w	9000d4ec <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d144:	4a63      	ldr	r2, [pc, #396]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d146:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000d14a:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000d14c:	4059      	eors	r1, r3
9000d14e:	f411 7f40 	tst.w	r1, #768	; 0x300
9000d152:	d00b      	beq.n	9000d16c <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d154:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d156:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d158:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d15c:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000d160:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d162:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000d164:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000d168:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000d16a:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d16c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000d170:	f000 819e 	beq.w	9000d4b0 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d174:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000d178:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000d17c:	f000 81ac 	beq.w	9000d4d8 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000d180:	4954      	ldr	r1, [pc, #336]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d182:	690a      	ldr	r2, [r1, #16]
9000d184:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000d188:	610a      	str	r2, [r1, #16]
9000d18a:	4852      	ldr	r0, [pc, #328]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d18c:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d190:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000d192:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d194:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d198:	6701      	str	r1, [r0, #112]	; 0x70
9000d19a:	e553      	b.n	9000cc44 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d19c:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d1a0:	2102      	movs	r1, #2
9000d1a2:	4628      	mov	r0, r5
9000d1a4:	f7ff fb3c 	bl	9000c820 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d1a8:	2800      	cmp	r0, #0
9000d1aa:	f43f aed2 	beq.w	9000cf52 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000d1ae:	2001      	movs	r0, #1
}
9000d1b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000d1b4:	462e      	mov	r6, r5
9000d1b6:	e450      	b.n	9000ca5a <HAL_RCCEx_PeriphCLKConfig+0x146>
9000d1b8:	462e      	mov	r6, r5
9000d1ba:	e406      	b.n	9000c9ca <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000d1bc:	462e      	mov	r6, r5
9000d1be:	e489      	b.n	9000cad4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000d1c0:	462e      	mov	r6, r5
9000d1c2:	f7ff bbe2 	b.w	9000c98a <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d1c6:	462e      	mov	r6, r5
9000d1c8:	e423      	b.n	9000ca12 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d1ca:	2102      	movs	r1, #2
9000d1cc:	f104 0008 	add.w	r0, r4, #8
9000d1d0:	f7ff faac 	bl	9000c72c <RCCEx_PLL2_Config>
9000d1d4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d1d6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d1da:	2d00      	cmp	r5, #0
9000d1dc:	d14c      	bne.n	9000d278 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000d1de:	4f3d      	ldr	r7, [pc, #244]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1e0:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000d1e2:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d1e4:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000d1e8:	4301      	orrs	r1, r0
9000d1ea:	64f9      	str	r1, [r7, #76]	; 0x4c
9000d1ec:	e652      	b.n	9000ce94 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d1ee:	4839      	ldr	r0, [pc, #228]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1f0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d1f2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d1f6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d1f8:	e462      	b.n	9000cac0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d1fa:	4836      	ldr	r0, [pc, #216]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d1fc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d1fe:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d202:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d204:	e41e      	b.n	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d206:	4833      	ldr	r0, [pc, #204]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d208:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d20a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d20e:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d210:	f7ff bbd1 	b.w	9000c9b6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d214:	482f      	ldr	r0, [pc, #188]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d216:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d218:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d21c:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d21e:	f7ff bbed 	b.w	9000c9fc <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d222:	462e      	mov	r6, r5
9000d224:	e540      	b.n	9000cca8 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000d226:	462e      	mov	r6, r5
9000d228:	e5a5      	b.n	9000cd76 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000d22a:	462e      	mov	r6, r5
9000d22c:	e4a2      	b.n	9000cb74 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000d22e:	462e      	mov	r6, r5
9000d230:	e57f      	b.n	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000d232:	462e      	mov	r6, r5
9000d234:	e42c      	b.n	9000ca90 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000d236:	462e      	mov	r6, r5
9000d238:	e501      	b.n	9000cc3e <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000d23a:	462e      	mov	r6, r5
9000d23c:	e46a      	b.n	9000cb14 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000d23e:	462e      	mov	r6, r5
9000d240:	e5dd      	b.n	9000cdfe <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000d242:	462e      	mov	r6, r5
9000d244:	e486      	b.n	9000cb54 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000d246:	462e      	mov	r6, r5
9000d248:	e5b7      	b.n	9000cdba <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000d24a:	462e      	mov	r6, r5
9000d24c:	e54c      	b.n	9000cce8 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000d24e:	462e      	mov	r6, r5
9000d250:	e602      	b.n	9000ce58 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000d252:	462e      	mov	r6, r5
9000d254:	e612      	b.n	9000ce7c <HAL_RCCEx_PeriphCLKConfig+0x568>
9000d256:	462e      	mov	r6, r5
9000d258:	e62e      	b.n	9000ceb8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d25a:	4f1e      	ldr	r7, [pc, #120]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d25c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000d25e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000d262:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000d264:	2d00      	cmp	r5, #0
9000d266:	d1f6      	bne.n	9000d256 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000d268:	e6a4      	b.n	9000cfb4 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d26a:	481a      	ldr	r0, [pc, #104]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d26c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d26e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d272:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d274:	2d00      	cmp	r5, #0
9000d276:	d0b2      	beq.n	9000d1de <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000d278:	462e      	mov	r6, r5
9000d27a:	e60b      	b.n	9000ce94 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d27c:	4815      	ldr	r0, [pc, #84]	; (9000d2d4 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d27e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d280:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d284:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d286:	2d00      	cmp	r5, #0
9000d288:	d1e3      	bne.n	9000d252 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000d28a:	e6c7      	b.n	9000d01c <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d28c:	f104 0008 	add.w	r0, r4, #8
9000d290:	f7ff fa4c 	bl	9000c72c <RCCEx_PLL2_Config>
9000d294:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d296:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d29a:	2d00      	cmp	r5, #0
9000d29c:	d1d7      	bne.n	9000d24e <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000d29e:	e6d1      	b.n	9000d044 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d2a0:	6862      	ldr	r2, [r4, #4]
9000d2a2:	e653      	b.n	9000cf4c <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d2a4:	2102      	movs	r1, #2
9000d2a6:	f104 0008 	add.w	r0, r4, #8
9000d2aa:	f7ff fa3f 	bl	9000c72c <RCCEx_PLL2_Config>
9000d2ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d2b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2b4:	2d00      	cmp	r5, #0
9000d2b6:	d1bc      	bne.n	9000d232 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000d2b8:	f7ff bbe3 	b.w	9000ca82 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d2bc:	2102      	movs	r1, #2
9000d2be:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d2c2:	f7ff faad 	bl	9000c820 <RCCEx_PLL3_Config>
9000d2c6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d2c8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2cc:	2d00      	cmp	r5, #0
9000d2ce:	d1ba      	bne.n	9000d246 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000d2d0:	e56b      	b.n	9000cdaa <HAL_RCCEx_PeriphCLKConfig+0x496>
9000d2d2:	bf00      	nop
9000d2d4:	58024400 	.word	0x58024400
9000d2d8:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d2dc:	2102      	movs	r1, #2
9000d2de:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d2e2:	f7ff fa9d 	bl	9000c820 <RCCEx_PLL3_Config>
9000d2e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d2e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2ec:	2d00      	cmp	r5, #0
9000d2ee:	d1a6      	bne.n	9000d23e <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000d2f0:	e57d      	b.n	9000cdee <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d2f2:	4886      	ldr	r0, [pc, #536]	; (9000d50c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d2f4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d2f6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d2fa:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d2fc:	2d00      	cmp	r5, #0
9000d2fe:	d194      	bne.n	9000d22a <HAL_RCCEx_PeriphCLKConfig+0x916>
9000d300:	e679      	b.n	9000cff6 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d302:	2101      	movs	r1, #1
9000d304:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d308:	f7ff fa8a 	bl	9000c820 <RCCEx_PLL3_Config>
9000d30c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d30e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d312:	2d00      	cmp	r5, #0
9000d314:	d191      	bne.n	9000d23a <HAL_RCCEx_PeriphCLKConfig+0x926>
9000d316:	f7ff bbf6 	b.w	9000cb06 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d31a:	2101      	movs	r1, #1
9000d31c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d320:	f7ff fa7e 	bl	9000c820 <RCCEx_PLL3_Config>
9000d324:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d326:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d32a:	2d00      	cmp	r5, #0
9000d32c:	d189      	bne.n	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000d32e:	e409      	b.n	9000cb44 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d330:	2102      	movs	r1, #2
9000d332:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d336:	f7ff fa73 	bl	9000c820 <RCCEx_PLL3_Config>
9000d33a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d33c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d340:	2d00      	cmp	r5, #0
9000d342:	f47f af70 	bne.w	9000d226 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000d346:	e50e      	b.n	9000cd66 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d348:	2102      	movs	r1, #2
9000d34a:	f104 0008 	add.w	r0, r4, #8
9000d34e:	f7ff f9ed 	bl	9000c72c <RCCEx_PLL2_Config>
9000d352:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d354:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d358:	2d00      	cmp	r5, #0
9000d35a:	f47f af6c 	bne.w	9000d236 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000d35e:	e467      	b.n	9000cc30 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d360:	2102      	movs	r1, #2
9000d362:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d366:	f7ff fa5b 	bl	9000c820 <RCCEx_PLL3_Config>
9000d36a:	2800      	cmp	r0, #0
9000d36c:	f040 8094 	bne.w	9000d498 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d370:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d374:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d378:	e549      	b.n	9000ce0e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d37a:	2102      	movs	r1, #2
9000d37c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d380:	f7ff fa4e 	bl	9000c820 <RCCEx_PLL3_Config>
9000d384:	2800      	cmp	r0, #0
9000d386:	f040 808d 	bne.w	9000d4a4 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d38a:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d38e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d392:	e54a      	b.n	9000ce2a <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d394:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d398:	f7ff bae9 	b.w	9000c96e <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d39c:	2100      	movs	r1, #0
9000d39e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d3a2:	f7ff fa3d 	bl	9000c820 <RCCEx_PLL3_Config>
9000d3a6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d3a8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d3ac:	f7ff bb4a 	b.w	9000ca44 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d3b0:	2100      	movs	r1, #0
9000d3b2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d3b6:	f7ff fa33 	bl	9000c820 <RCCEx_PLL3_Config>
9000d3ba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d3bc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d3c0:	e600      	b.n	9000cfc4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d3c2:	2100      	movs	r1, #0
9000d3c4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d3c8:	f7ff fa2a 	bl	9000c820 <RCCEx_PLL3_Config>
9000d3cc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d3ce:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d3d2:	f7ff baf0 	b.w	9000c9b6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d3d6:	2102      	movs	r1, #2
9000d3d8:	3028      	adds	r0, #40	; 0x28
9000d3da:	f7ff fa21 	bl	9000c820 <RCCEx_PLL3_Config>
9000d3de:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000d3e0:	2e00      	cmp	r6, #0
9000d3e2:	f43f aab5 	beq.w	9000c950 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000d3e6:	e7d5      	b.n	9000d394 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3e8:	4848      	ldr	r0, [pc, #288]	; (9000d50c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000d3ea:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d3ec:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d3ee:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d3f2:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d3f4:	e5e6      	b.n	9000cfc4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d3f6:	2100      	movs	r1, #0
9000d3f8:	f104 0008 	add.w	r0, r4, #8
9000d3fc:	f7ff f996 	bl	9000c72c <RCCEx_PLL2_Config>
9000d400:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d402:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d406:	e5dd      	b.n	9000cfc4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d408:	2100      	movs	r1, #0
9000d40a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d40e:	f7ff fa07 	bl	9000c820 <RCCEx_PLL3_Config>
9000d412:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d414:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d418:	f7ff bb52 	b.w	9000cac0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d41c:	2100      	movs	r1, #0
9000d41e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d422:	f7ff f9fd 	bl	9000c820 <RCCEx_PLL3_Config>
9000d426:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d428:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d42c:	f7ff bae6 	b.w	9000c9fc <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d430:	2101      	movs	r1, #1
9000d432:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d436:	f7ff f9f3 	bl	9000c820 <RCCEx_PLL3_Config>
9000d43a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d43c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d440:	2d00      	cmp	r5, #0
9000d442:	f47f aef4 	bne.w	9000d22e <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000d446:	e46c      	b.n	9000cd22 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d448:	2101      	movs	r1, #1
9000d44a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d44e:	f7ff f9e7 	bl	9000c820 <RCCEx_PLL3_Config>
9000d452:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d454:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d458:	2d00      	cmp	r5, #0
9000d45a:	f47f aef6 	bne.w	9000d24a <HAL_RCCEx_PeriphCLKConfig+0x936>
9000d45e:	e43c      	b.n	9000ccda <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d460:	2101      	movs	r1, #1
9000d462:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d466:	f7ff f9db 	bl	9000c820 <RCCEx_PLL3_Config>
9000d46a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d46c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d470:	2d00      	cmp	r5, #0
9000d472:	f47f aed6 	bne.w	9000d222 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000d476:	e5f9      	b.n	9000d06c <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000d478:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d47a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d47e:	4635      	mov	r5, r6
9000d480:	f7ff bbe0 	b.w	9000cc44 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d484:	2601      	movs	r6, #1
9000d486:	f7ff ba72 	b.w	9000c96e <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d48a:	4d20      	ldr	r5, [pc, #128]	; (9000d50c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d48c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000d48e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000d492:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000d494:	f7ff ba64 	b.w	9000c960 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d498:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000d49c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d49e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d4a2:	e4b4      	b.n	9000ce0e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d4a4:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000d4a8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d4aa:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d4ae:	e4bc      	b.n	9000ce2a <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000d4b0:	f7fb fa88 	bl	900089c4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d4b4:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000d50c <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000d4b8:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d4ba:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d4be:	e004      	b.n	9000d4ca <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d4c0:	f7fb fa80 	bl	900089c4 <HAL_GetTick>
9000d4c4:	1bc0      	subs	r0, r0, r7
9000d4c6:	4548      	cmp	r0, r9
9000d4c8:	d8d6      	bhi.n	9000d478 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d4ca:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000d4ce:	079b      	lsls	r3, r3, #30
9000d4d0:	d5f6      	bpl.n	9000d4c0 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d4d2:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000d4d6:	e64d      	b.n	9000d174 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000d4d8:	480c      	ldr	r0, [pc, #48]	; (9000d50c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d4da:	4a0d      	ldr	r2, [pc, #52]	; (9000d510 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000d4dc:	6901      	ldr	r1, [r0, #16]
9000d4de:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d4e2:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000d4e6:	430a      	orrs	r2, r1
9000d4e8:	6102      	str	r2, [r0, #16]
9000d4ea:	e64e      	b.n	9000d18a <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d4ec:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d4f0:	462e      	mov	r6, r5
9000d4f2:	f7ff bba7 	b.w	9000cc44 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d4f6:	2601      	movs	r6, #1
9000d4f8:	4635      	mov	r5, r6
9000d4fa:	f7ff bbf5 	b.w	9000cce8 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000d4fe:	2601      	movs	r6, #1
9000d500:	4635      	mov	r5, r6
9000d502:	f7ff bb9c 	b.w	9000cc3e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d506:	2601      	movs	r6, #1
9000d508:	4635      	mov	r5, r6
9000d50a:	e412      	b.n	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000d50c:	58024400 	.word	0x58024400
9000d510:	00ffffcf 	.word	0x00ffffcf

9000d514 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d514:	b318      	cbz	r0, 9000d55e <HAL_SDRAM_Init+0x4a>
{
9000d516:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d518:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000d51c:	4604      	mov	r4, r0
9000d51e:	460d      	mov	r5, r1
9000d520:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d524:	b1b3      	cbz	r3, 9000d554 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d526:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d528:	2302      	movs	r3, #2
9000d52a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d52e:	f851 0b04 	ldr.w	r0, [r1], #4
9000d532:	f000 fa39 	bl	9000d9a8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d536:	6862      	ldr	r2, [r4, #4]
9000d538:	4629      	mov	r1, r5
9000d53a:	6820      	ldr	r0, [r4, #0]
9000d53c:	f000 fa72 	bl	9000da24 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d540:	4a08      	ldr	r2, [pc, #32]	; (9000d564 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d542:	2101      	movs	r1, #1

  return HAL_OK;
9000d544:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d546:	6813      	ldr	r3, [r2, #0]
9000d548:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000d54c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d54e:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000d552:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d554:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d558:	f7f5 fe8e 	bl	90003278 <HAL_SDRAM_MspInit>
9000d55c:	e7e3      	b.n	9000d526 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d55e:	2001      	movs	r0, #1
}
9000d560:	4770      	bx	lr
9000d562:	bf00      	nop
9000d564:	52004000 	.word	0x52004000

9000d568 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d568:	b510      	push	{r4, lr}
9000d56a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d56c:	f7f5 ff00 	bl	90003370 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d570:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d574:	f000 faa4 	bl	9000dac0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d578:	2000      	movs	r0, #0
9000d57a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d57e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000d582:	bd10      	pop	{r4, pc}

9000d584 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d584:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d586:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000d58a:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d58c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d58e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d590:	d004      	beq.n	9000d59c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d592:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000d596:	2e01      	cmp	r6, #1
9000d598:	d001      	beq.n	9000d59e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d59a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d59c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d59e:	2302      	movs	r3, #2
9000d5a0:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d5a2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d5a4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d5a8:	f000 fa9e 	bl	9000dae8 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d5ac:	682b      	ldr	r3, [r5, #0]
9000d5ae:	2b02      	cmp	r3, #2
9000d5b0:	d003      	beq.n	9000d5ba <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000d5b2:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d5b4:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000d5b8:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d5ba:	2305      	movs	r3, #5
  return HAL_OK;
9000d5bc:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d5be:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000d5c2:	bd70      	pop	{r4, r5, r6, pc}

9000d5c4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d5c4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d5c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000d5ca:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d5cc:	2b02      	cmp	r3, #2
9000d5ce:	b2d8      	uxtb	r0, r3
9000d5d0:	d005      	beq.n	9000d5de <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d5d2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000d5d6:	2b01      	cmp	r3, #1
9000d5d8:	b2dd      	uxtb	r5, r3
9000d5da:	d001      	beq.n	9000d5e0 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d5dc:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d5de:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d5e0:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d5e2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d5e4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d5e8:	f000 fa96 	bl	9000db18 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d5ec:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d5ee:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000d5f2:	bd38      	pop	{r3, r4, r5, pc}

9000d5f4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d5f4:	4770      	bx	lr
9000d5f6:	bf00      	nop

9000d5f8 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d5f8:	2800      	cmp	r0, #0
9000d5fa:	f000 80a5 	beq.w	9000d748 <HAL_TIM_Base_Init+0x150>
{
9000d5fe:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d600:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d604:	4604      	mov	r4, r0
9000d606:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d60a:	2b00      	cmp	r3, #0
9000d60c:	d076      	beq.n	9000d6fc <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d60e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d610:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d612:	494e      	ldr	r1, [pc, #312]	; (9000d74c <HAL_TIM_Base_Init+0x154>)
9000d614:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000d618:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d61c:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000d620:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d622:	fab1 f181 	clz	r1, r1
9000d626:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000d62a:	d027      	beq.n	9000d67c <HAL_TIM_Base_Init+0x84>
9000d62c:	bb31      	cbnz	r1, 9000d67c <HAL_TIM_Base_Init+0x84>
9000d62e:	4848      	ldr	r0, [pc, #288]	; (9000d750 <HAL_TIM_Base_Init+0x158>)
9000d630:	4d48      	ldr	r5, [pc, #288]	; (9000d754 <HAL_TIM_Base_Init+0x15c>)
9000d632:	4282      	cmp	r2, r0
9000d634:	d067      	beq.n	9000d706 <HAL_TIM_Base_Init+0x10e>
9000d636:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000d63a:	4282      	cmp	r2, r0
9000d63c:	d063      	beq.n	9000d706 <HAL_TIM_Base_Init+0x10e>
9000d63e:	1b55      	subs	r5, r2, r5
9000d640:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000d644:	fab5 f585 	clz	r5, r5
9000d648:	4282      	cmp	r2, r0
9000d64a:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000d64e:	d063      	beq.n	9000d718 <HAL_TIM_Base_Init+0x120>
9000d650:	2d00      	cmp	r5, #0
9000d652:	d161      	bne.n	9000d718 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d654:	4840      	ldr	r0, [pc, #256]	; (9000d758 <HAL_TIM_Base_Init+0x160>)
9000d656:	4941      	ldr	r1, [pc, #260]	; (9000d75c <HAL_TIM_Base_Init+0x164>)
9000d658:	428a      	cmp	r2, r1
9000d65a:	bf18      	it	ne
9000d65c:	4282      	cmpne	r2, r0
9000d65e:	d065      	beq.n	9000d72c <HAL_TIM_Base_Init+0x134>
9000d660:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000d664:	428a      	cmp	r2, r1
9000d666:	d061      	beq.n	9000d72c <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d668:	69a0      	ldr	r0, [r4, #24]
9000d66a:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d66e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d670:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000d672:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d674:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d676:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d678:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d67a:	e023      	b.n	9000d6c4 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d67c:	4d35      	ldr	r5, [pc, #212]	; (9000d754 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d67e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d682:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d684:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000d686:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d688:	fab5 f585 	clz	r5, r5
9000d68c:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d68e:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d690:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d694:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d696:	69a0      	ldr	r0, [r4, #24]
9000d698:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000d69c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000d69e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d6a0:	68e3      	ldr	r3, [r4, #12]
9000d6a2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d6a4:	6863      	ldr	r3, [r4, #4]
9000d6a6:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d6a8:	b951      	cbnz	r1, 9000d6c0 <HAL_TIM_Base_Init+0xc8>
9000d6aa:	b94d      	cbnz	r5, 9000d6c0 <HAL_TIM_Base_Init+0xc8>
9000d6ac:	492a      	ldr	r1, [pc, #168]	; (9000d758 <HAL_TIM_Base_Init+0x160>)
9000d6ae:	4b2b      	ldr	r3, [pc, #172]	; (9000d75c <HAL_TIM_Base_Init+0x164>)
9000d6b0:	429a      	cmp	r2, r3
9000d6b2:	bf18      	it	ne
9000d6b4:	428a      	cmpne	r2, r1
9000d6b6:	d003      	beq.n	9000d6c0 <HAL_TIM_Base_Init+0xc8>
9000d6b8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000d6bc:	429a      	cmp	r2, r3
9000d6be:	d101      	bne.n	9000d6c4 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d6c0:	6963      	ldr	r3, [r4, #20]
9000d6c2:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d6c4:	2301      	movs	r3, #1
  return HAL_OK;
9000d6c6:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000d6c8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d6ca:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d6ce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000d6d2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000d6d6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000d6da:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000d6de:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000d6e2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d6e6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000d6ea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000d6ee:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000d6f2:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d6f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d6fa:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000d6fc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d700:	f7ff ff78 	bl	9000d5f4 <HAL_TIM_Base_MspInit>
9000d704:	e783      	b.n	9000d60e <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d706:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d708:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d70c:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d70e:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000d712:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d714:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d716:	e7ba      	b.n	9000d68e <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000d718:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d71a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000d71e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d720:	480f      	ldr	r0, [pc, #60]	; (9000d760 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d722:	4282      	cmp	r2, r0
9000d724:	d0b3      	beq.n	9000d68e <HAL_TIM_Base_Init+0x96>
9000d726:	2d00      	cmp	r5, #0
9000d728:	d1b1      	bne.n	9000d68e <HAL_TIM_Base_Init+0x96>
9000d72a:	e793      	b.n	9000d654 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d72c:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d72e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d732:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d734:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d736:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d738:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000d73c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000d73e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000d740:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d742:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d744:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d746:	e7b1      	b.n	9000d6ac <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000d748:	2001      	movs	r0, #1
}
9000d74a:	4770      	bx	lr
9000d74c:	40010000 	.word	0x40010000
9000d750:	40000400 	.word	0x40000400
9000d754:	40010400 	.word	0x40010400
9000d758:	40014000 	.word	0x40014000
9000d75c:	40014400 	.word	0x40014400
9000d760:	40000c00 	.word	0x40000c00

9000d764 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d764:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d768:	2b01      	cmp	r3, #1
9000d76a:	d141      	bne.n	9000d7f0 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d76c:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d76e:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d770:	4b24      	ldr	r3, [pc, #144]	; (9000d804 <HAL_TIM_Base_Start_IT+0xa0>)
9000d772:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000d776:	bf18      	it	ne
9000d778:	429a      	cmpne	r2, r3
{
9000d77a:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d77c:	bf0c      	ite	eq
9000d77e:	2301      	moveq	r3, #1
9000d780:	2300      	movne	r3, #0
9000d782:	4d21      	ldr	r5, [pc, #132]	; (9000d808 <HAL_TIM_Base_Start_IT+0xa4>)
9000d784:	4c21      	ldr	r4, [pc, #132]	; (9000d80c <HAL_TIM_Base_Start_IT+0xa8>)
9000d786:	42aa      	cmp	r2, r5
9000d788:	bf08      	it	eq
9000d78a:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d78e:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d792:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d794:	42a2      	cmp	r2, r4
9000d796:	bf08      	it	eq
9000d798:	f043 0301 	orreq.w	r3, r3, #1
9000d79c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d7a0:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d7a4:	481a      	ldr	r0, [pc, #104]	; (9000d810 <HAL_TIM_Base_Start_IT+0xac>)
9000d7a6:	42a2      	cmp	r2, r4
9000d7a8:	bf08      	it	eq
9000d7aa:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d7ae:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d7b0:	4282      	cmp	r2, r0
9000d7b2:	bf08      	it	eq
9000d7b4:	f043 0301 	orreq.w	r3, r3, #1
9000d7b8:	4916      	ldr	r1, [pc, #88]	; (9000d814 <HAL_TIM_Base_Start_IT+0xb0>)
9000d7ba:	428a      	cmp	r2, r1
9000d7bc:	bf08      	it	eq
9000d7be:	f043 0301 	orreq.w	r3, r3, #1
9000d7c2:	b933      	cbnz	r3, 9000d7d2 <HAL_TIM_Base_Start_IT+0x6e>
9000d7c4:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000d7c8:	1a10      	subs	r0, r2, r0
9000d7ca:	fab0 f080 	clz	r0, r0
9000d7ce:	0940      	lsrs	r0, r0, #5
9000d7d0:	b198      	cbz	r0, 9000d7fa <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d7d2:	6891      	ldr	r1, [r2, #8]
9000d7d4:	4b10      	ldr	r3, [pc, #64]	; (9000d818 <HAL_TIM_Base_Start_IT+0xb4>)
9000d7d6:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d7d8:	2b06      	cmp	r3, #6
9000d7da:	d00b      	beq.n	9000d7f4 <HAL_TIM_Base_Start_IT+0x90>
9000d7dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000d7e0:	d008      	beq.n	9000d7f4 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000d7e2:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000d7e4:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000d7e6:	f043 0301 	orr.w	r3, r3, #1
9000d7ea:	6013      	str	r3, [r2, #0]
}
9000d7ec:	bc30      	pop	{r4, r5}
9000d7ee:	4770      	bx	lr
    return HAL_ERROR;
9000d7f0:	2001      	movs	r0, #1
}
9000d7f2:	4770      	bx	lr
  return HAL_OK;
9000d7f4:	2000      	movs	r0, #0
}
9000d7f6:	bc30      	pop	{r4, r5}
9000d7f8:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000d7fa:	6813      	ldr	r3, [r2, #0]
9000d7fc:	f043 0301 	orr.w	r3, r3, #1
9000d800:	6013      	str	r3, [r2, #0]
9000d802:	e7f3      	b.n	9000d7ec <HAL_TIM_Base_Start_IT+0x88>
9000d804:	40010000 	.word	0x40010000
9000d808:	40000400 	.word	0x40000400
9000d80c:	40000800 	.word	0x40000800
9000d810:	40010400 	.word	0x40010400
9000d814:	40001800 	.word	0x40001800
9000d818:	00010007 	.word	0x00010007

9000d81c <HAL_TIM_OC_DelayElapsedCallback>:
9000d81c:	4770      	bx	lr
9000d81e:	bf00      	nop

9000d820 <HAL_TIM_IC_CaptureCallback>:
9000d820:	4770      	bx	lr
9000d822:	bf00      	nop

9000d824 <HAL_TIM_PWM_PulseFinishedCallback>:
9000d824:	4770      	bx	lr
9000d826:	bf00      	nop

9000d828 <HAL_TIM_TriggerCallback>:
9000d828:	4770      	bx	lr
9000d82a:	bf00      	nop

9000d82c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000d82c:	6803      	ldr	r3, [r0, #0]
9000d82e:	691a      	ldr	r2, [r3, #16]
9000d830:	0791      	lsls	r1, r2, #30
{
9000d832:	b510      	push	{r4, lr}
9000d834:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000d836:	d502      	bpl.n	9000d83e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000d838:	68da      	ldr	r2, [r3, #12]
9000d83a:	0792      	lsls	r2, r2, #30
9000d83c:	d468      	bmi.n	9000d910 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000d83e:	691a      	ldr	r2, [r3, #16]
9000d840:	0752      	lsls	r2, r2, #29
9000d842:	d502      	bpl.n	9000d84a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000d844:	68da      	ldr	r2, [r3, #12]
9000d846:	0750      	lsls	r0, r2, #29
9000d848:	d44f      	bmi.n	9000d8ea <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000d84a:	691a      	ldr	r2, [r3, #16]
9000d84c:	0711      	lsls	r1, r2, #28
9000d84e:	d502      	bpl.n	9000d856 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000d850:	68da      	ldr	r2, [r3, #12]
9000d852:	0712      	lsls	r2, r2, #28
9000d854:	d437      	bmi.n	9000d8c6 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000d856:	691a      	ldr	r2, [r3, #16]
9000d858:	06d0      	lsls	r0, r2, #27
9000d85a:	d502      	bpl.n	9000d862 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000d85c:	68da      	ldr	r2, [r3, #12]
9000d85e:	06d1      	lsls	r1, r2, #27
9000d860:	d41e      	bmi.n	9000d8a0 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000d862:	691a      	ldr	r2, [r3, #16]
9000d864:	07d2      	lsls	r2, r2, #31
9000d866:	d502      	bpl.n	9000d86e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000d868:	68da      	ldr	r2, [r3, #12]
9000d86a:	07d0      	lsls	r0, r2, #31
9000d86c:	d469      	bmi.n	9000d942 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000d86e:	691a      	ldr	r2, [r3, #16]
9000d870:	0611      	lsls	r1, r2, #24
9000d872:	d502      	bpl.n	9000d87a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000d874:	68da      	ldr	r2, [r3, #12]
9000d876:	0612      	lsls	r2, r2, #24
9000d878:	d46b      	bmi.n	9000d952 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000d87a:	691a      	ldr	r2, [r3, #16]
9000d87c:	05d0      	lsls	r0, r2, #23
9000d87e:	d502      	bpl.n	9000d886 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000d880:	68da      	ldr	r2, [r3, #12]
9000d882:	0611      	lsls	r1, r2, #24
9000d884:	d46d      	bmi.n	9000d962 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000d886:	691a      	ldr	r2, [r3, #16]
9000d888:	0652      	lsls	r2, r2, #25
9000d88a:	d502      	bpl.n	9000d892 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000d88c:	68da      	ldr	r2, [r3, #12]
9000d88e:	0650      	lsls	r0, r2, #25
9000d890:	d46f      	bmi.n	9000d972 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000d892:	691a      	ldr	r2, [r3, #16]
9000d894:	0691      	lsls	r1, r2, #26
9000d896:	d502      	bpl.n	9000d89e <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000d898:	68da      	ldr	r2, [r3, #12]
9000d89a:	0692      	lsls	r2, r2, #26
9000d89c:	d449      	bmi.n	9000d932 <HAL_TIM_IRQHandler+0x106>
}
9000d89e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000d8a0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d8a4:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000d8a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000d8a8:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d8aa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000d8ac:	69db      	ldr	r3, [r3, #28]
9000d8ae:	f413 7f40 	tst.w	r3, #768	; 0x300
9000d8b2:	d16f      	bne.n	9000d994 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d8b4:	f7ff ffb2 	bl	9000d81c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d8b8:	4620      	mov	r0, r4
9000d8ba:	f7ff ffb3 	bl	9000d824 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d8be:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000d8c0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d8c2:	7722      	strb	r2, [r4, #28]
9000d8c4:	e7cd      	b.n	9000d862 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000d8c6:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d8ca:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000d8cc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000d8ce:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d8d0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000d8d2:	69db      	ldr	r3, [r3, #28]
9000d8d4:	079b      	lsls	r3, r3, #30
9000d8d6:	d15a      	bne.n	9000d98e <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d8d8:	f7ff ffa0 	bl	9000d81c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d8dc:	4620      	mov	r0, r4
9000d8de:	f7ff ffa1 	bl	9000d824 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d8e2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000d8e4:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d8e6:	7722      	strb	r2, [r4, #28]
9000d8e8:	e7b5      	b.n	9000d856 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000d8ea:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d8ee:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000d8f0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000d8f2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d8f4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000d8f6:	699b      	ldr	r3, [r3, #24]
9000d8f8:	f413 7f40 	tst.w	r3, #768	; 0x300
9000d8fc:	d144      	bne.n	9000d988 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d8fe:	f7ff ff8d 	bl	9000d81c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d902:	4620      	mov	r0, r4
9000d904:	f7ff ff8e 	bl	9000d824 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d908:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000d90a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d90c:	7722      	strb	r2, [r4, #28]
9000d90e:	e79c      	b.n	9000d84a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000d910:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d914:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000d916:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d918:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000d91a:	699b      	ldr	r3, [r3, #24]
9000d91c:	0799      	lsls	r1, r3, #30
9000d91e:	d130      	bne.n	9000d982 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000d920:	f7ff ff7c 	bl	9000d81c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d924:	4620      	mov	r0, r4
9000d926:	f7ff ff7d 	bl	9000d824 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d92a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000d92c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d92e:	7722      	strb	r2, [r4, #28]
9000d930:	e785      	b.n	9000d83e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000d932:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000d936:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000d938:	611a      	str	r2, [r3, #16]
}
9000d93a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000d93e:	f000 b82d 	b.w	9000d99c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000d942:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000d946:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000d948:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000d94a:	f7f5 faf9 	bl	90002f40 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000d94e:	6823      	ldr	r3, [r4, #0]
9000d950:	e78d      	b.n	9000d86e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000d952:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000d956:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000d958:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000d95a:	f000 f821 	bl	9000d9a0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000d95e:	6823      	ldr	r3, [r4, #0]
9000d960:	e78b      	b.n	9000d87a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d962:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000d966:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d968:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000d96a:	f000 f81b 	bl	9000d9a4 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000d96e:	6823      	ldr	r3, [r4, #0]
9000d970:	e789      	b.n	9000d886 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000d972:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000d976:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000d978:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000d97a:	f7ff ff55 	bl	9000d828 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000d97e:	6823      	ldr	r3, [r4, #0]
9000d980:	e787      	b.n	9000d892 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000d982:	f7ff ff4d 	bl	9000d820 <HAL_TIM_IC_CaptureCallback>
9000d986:	e7d0      	b.n	9000d92a <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000d988:	f7ff ff4a 	bl	9000d820 <HAL_TIM_IC_CaptureCallback>
9000d98c:	e7bc      	b.n	9000d908 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000d98e:	f7ff ff47 	bl	9000d820 <HAL_TIM_IC_CaptureCallback>
9000d992:	e7a6      	b.n	9000d8e2 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000d994:	f7ff ff44 	bl	9000d820 <HAL_TIM_IC_CaptureCallback>
9000d998:	e791      	b.n	9000d8be <HAL_TIM_IRQHandler+0x92>
9000d99a:	bf00      	nop

9000d99c <HAL_TIMEx_CommutCallback>:
9000d99c:	4770      	bx	lr
9000d99e:	bf00      	nop

9000d9a0 <HAL_TIMEx_BreakCallback>:
9000d9a0:	4770      	bx	lr
9000d9a2:	bf00      	nop

9000d9a4 <HAL_TIMEx_Break2Callback>:
9000d9a4:	4770      	bx	lr
9000d9a6:	bf00      	nop

9000d9a8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000d9a8:	680b      	ldr	r3, [r1, #0]
{
9000d9aa:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000d9ac:	b9d3      	cbnz	r3, 9000d9e4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d9ae:	6804      	ldr	r4, [r0, #0]
9000d9b0:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000d9b4:	684a      	ldr	r2, [r1, #4]
9000d9b6:	4023      	ands	r3, r4
9000d9b8:	4313      	orrs	r3, r2
9000d9ba:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000d9be:	4323      	orrs	r3, r4
9000d9c0:	4313      	orrs	r3, r2
9000d9c2:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000d9c6:	4323      	orrs	r3, r4
9000d9c8:	4313      	orrs	r3, r2
9000d9ca:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000d9ce:	4323      	orrs	r3, r4
9000d9d0:	4313      	orrs	r3, r2
9000d9d2:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000d9d6:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000d9d8:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d9dc:	4313      	orrs	r3, r2
9000d9de:	6003      	str	r3, [r0, #0]
}
9000d9e0:	2000      	movs	r0, #0
9000d9e2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d9e4:	6802      	ldr	r2, [r0, #0]
9000d9e6:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000d9ea:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000d9ee:	4322      	orrs	r2, r4
9000d9f0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000d9f2:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d9f4:	4b0a      	ldr	r3, [pc, #40]	; (9000da20 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d9f6:	4322      	orrs	r2, r4
9000d9f8:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d9fa:	6842      	ldr	r2, [r0, #4]
9000d9fc:	4013      	ands	r3, r2
9000d9fe:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000da02:	4323      	orrs	r3, r4
9000da04:	4313      	orrs	r3, r2
9000da06:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000da0a:	4323      	orrs	r3, r4
9000da0c:	4313      	orrs	r3, r2
9000da0e:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000da12:	4323      	orrs	r3, r4
}
9000da14:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000da18:	4313      	orrs	r3, r2
9000da1a:	6043      	str	r3, [r0, #4]
}
9000da1c:	2000      	movs	r0, #0
9000da1e:	4770      	bx	lr
9000da20:	ffff8000 	.word	0xffff8000

9000da24 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000da24:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000da26:	bb0a      	cbnz	r2, 9000da6c <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da28:	6883      	ldr	r3, [r0, #8]
9000da2a:	e9d1 2400 	ldrd	r2, r4, [r1]
9000da2e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000da32:	3c01      	subs	r4, #1
9000da34:	3a01      	subs	r2, #1
9000da36:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000da3a:	4313      	orrs	r3, r2
9000da3c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000da40:	3c01      	subs	r4, #1
9000da42:	3a01      	subs	r2, #1
9000da44:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000da48:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000da4c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000da50:	698a      	ldr	r2, [r1, #24]
9000da52:	3d01      	subs	r5, #1
9000da54:	1e61      	subs	r1, r4, #1
9000da56:	3a01      	subs	r2, #1
9000da58:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000da5c:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000da60:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000da64:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da66:	6083      	str	r3, [r0, #8]
}
9000da68:	2000      	movs	r0, #0
9000da6a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da6c:	6885      	ldr	r5, [r0, #8]
9000da6e:	68ca      	ldr	r2, [r1, #12]
9000da70:	4b12      	ldr	r3, [pc, #72]	; (9000dabc <FMC_SDRAM_Timing_Init+0x98>)
9000da72:	1e54      	subs	r4, r2, #1
9000da74:	694a      	ldr	r2, [r1, #20]
9000da76:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000da78:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da7a:	3a01      	subs	r2, #1
9000da7c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000da80:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da84:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000da88:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000da8c:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000da8e:	68c3      	ldr	r3, [r0, #12]
9000da90:	3c01      	subs	r4, #1
9000da92:	3a01      	subs	r2, #1
9000da94:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000da98:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000da9c:	690c      	ldr	r4, [r1, #16]
9000da9e:	4313      	orrs	r3, r2
9000daa0:	698a      	ldr	r2, [r1, #24]
9000daa2:	1e61      	subs	r1, r4, #1
9000daa4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000daa8:	3a01      	subs	r2, #1
9000daaa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000daae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000dab2:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000dab4:	60c3      	str	r3, [r0, #12]
}
9000dab6:	2000      	movs	r0, #0
9000dab8:	4770      	bx	lr
9000daba:	bf00      	nop
9000dabc:	ff0f0fff 	.word	0xff0f0fff

9000dac0 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000dac0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000dac2:	2200      	movs	r2, #0
{
9000dac4:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000dac6:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000daca:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000dace:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000dad2:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000dad6:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000dad8:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000dadc:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000dade:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000dae0:	619a      	str	r2, [r3, #24]
}
9000dae2:	bc30      	pop	{r4, r5}
9000dae4:	4770      	bx	lr
9000dae6:	bf00      	nop

9000dae8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000dae8:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000daea:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000daee:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000daf0:	6900      	ldr	r0, [r0, #16]
9000daf2:	4323      	orrs	r3, r4
9000daf4:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000daf8:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000dafc:	4c05      	ldr	r4, [pc, #20]	; (9000db14 <FMC_SDRAM_SendCommand+0x2c>)
9000dafe:	3901      	subs	r1, #1
9000db00:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000db02:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db04:	4323      	orrs	r3, r4
}
9000db06:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000db0a:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000db0e:	6113      	str	r3, [r2, #16]
}
9000db10:	4770      	bx	lr
9000db12:	bf00      	nop
9000db14:	ffc00000 	.word	0xffc00000

9000db18 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000db18:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000db1a:	4b05      	ldr	r3, [pc, #20]	; (9000db30 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000db1c:	2000      	movs	r0, #0
{
9000db1e:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000db20:	6954      	ldr	r4, [r2, #20]
9000db22:	4023      	ands	r3, r4
}
9000db24:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000db28:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000db2c:	6151      	str	r1, [r2, #20]
}
9000db2e:	4770      	bx	lr
9000db30:	ffffc001 	.word	0xffffc001

9000db34 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000db34:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000db36:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000db3a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000db3c:	f002 fcdc 	bl	900104f8 <xTaskGetSchedulerState>
9000db40:	2801      	cmp	r0, #1
9000db42:	d100      	bne.n	9000db46 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000db44:	bd08      	pop	{r3, pc}
9000db46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000db4a:	f000 bcdb 	b.w	9000e504 <xPortSysTickHandler>
9000db4e:	bf00      	nop

9000db50 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000db50:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000db54:	b92b      	cbnz	r3, 9000db62 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000db56:	4b06      	ldr	r3, [pc, #24]	; (9000db70 <osKernelInitialize+0x20>)
9000db58:	6818      	ldr	r0, [r3, #0]
9000db5a:	b928      	cbnz	r0, 9000db68 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000db5c:	2201      	movs	r2, #1
9000db5e:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000db60:	4770      	bx	lr
    stat = osErrorISR;
9000db62:	f06f 0005 	mvn.w	r0, #5
9000db66:	4770      	bx	lr
    } else {
      stat = osError;
9000db68:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000db6c:	4770      	bx	lr
9000db6e:	bf00      	nop
9000db70:	24020564 	.word	0x24020564

9000db74 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000db74:	b510      	push	{r4, lr}
9000db76:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000db7a:	b974      	cbnz	r4, 9000db9a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000db7c:	4b08      	ldr	r3, [pc, #32]	; (9000dba0 <osKernelStart+0x2c>)
9000db7e:	681a      	ldr	r2, [r3, #0]
9000db80:	2a01      	cmp	r2, #1
9000db82:	d107      	bne.n	9000db94 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000db84:	4907      	ldr	r1, [pc, #28]	; (9000dba4 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000db86:	2202      	movs	r2, #2
9000db88:	77cc      	strb	r4, [r1, #31]
9000db8a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000db8c:	f002 fa42 	bl	90010014 <vTaskStartScheduler>
      stat = osOK;
9000db90:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000db92:	bd10      	pop	{r4, pc}
      stat = osError;
9000db94:	f04f 30ff 	mov.w	r0, #4294967295
}
9000db98:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000db9a:	f06f 0005 	mvn.w	r0, #5
}
9000db9e:	bd10      	pop	{r4, pc}
9000dba0:	24020564 	.word	0x24020564
9000dba4:	e000ed00 	.word	0xe000ed00

9000dba8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dba8:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000dbaa:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000dbac:	b087      	sub	sp, #28
9000dbae:	4614      	mov	r4, r2
  hTask = NULL;
9000dbb0:	9505      	str	r5, [sp, #20]
9000dbb2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000dbb6:	bb5a      	cbnz	r2, 9000dc10 <osThreadNew+0x68>
9000dbb8:	4606      	mov	r6, r0
9000dbba:	b348      	cbz	r0, 9000dc10 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000dbbc:	b1e4      	cbz	r4, 9000dbf8 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000dbbe:	69a7      	ldr	r7, [r4, #24]
9000dbc0:	bb4f      	cbnz	r7, 9000dc16 <osThreadNew+0x6e>
9000dbc2:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dbc4:	6863      	ldr	r3, [r4, #4]
9000dbc6:	07db      	lsls	r3, r3, #31
9000dbc8:	d422      	bmi.n	9000dc10 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000dbca:	6963      	ldr	r3, [r4, #20]
9000dbcc:	b33b      	cbz	r3, 9000dc1e <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000dbce:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dbd2:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000dbd4:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000dbd6:	b338      	cbz	r0, 9000dc28 <osThreadNew+0x80>
9000dbd8:	68e2      	ldr	r2, [r4, #12]
9000dbda:	2a5f      	cmp	r2, #95	; 0x5f
9000dbdc:	d918      	bls.n	9000dc10 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000dbde:	6924      	ldr	r4, [r4, #16]
9000dbe0:	b1b3      	cbz	r3, 9000dc10 <osThreadNew+0x68>
9000dbe2:	b1ac      	cbz	r4, 9000dc10 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000dbe4:	460b      	mov	r3, r1
9000dbe6:	4662      	mov	r2, ip
9000dbe8:	4629      	mov	r1, r5
9000dbea:	9700      	str	r7, [sp, #0]
9000dbec:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000dbf0:	4630      	mov	r0, r6
9000dbf2:	f002 f873 	bl	9000fcdc <xTaskCreateStatic>
9000dbf6:	e00c      	b.n	9000dc12 <osThreadNew+0x6a>
9000dbf8:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000dbfa:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dbfc:	460b      	mov	r3, r1
9000dbfe:	4621      	mov	r1, r4
9000dc00:	ac05      	add	r4, sp, #20
9000dc02:	4630      	mov	r0, r6
9000dc04:	9700      	str	r7, [sp, #0]
9000dc06:	9401      	str	r4, [sp, #4]
9000dc08:	f002 f912 	bl	9000fe30 <xTaskCreate>
9000dc0c:	2801      	cmp	r0, #1
9000dc0e:	d009      	beq.n	9000dc24 <osThreadNew+0x7c>
        return (NULL);
9000dc10:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000dc12:	b007      	add	sp, #28
9000dc14:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000dc16:	1e7a      	subs	r2, r7, #1
9000dc18:	2a37      	cmp	r2, #55	; 0x37
9000dc1a:	d9d3      	bls.n	9000dbc4 <osThreadNew+0x1c>
9000dc1c:	e7f8      	b.n	9000dc10 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000dc1e:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000dc22:	e7d6      	b.n	9000dbd2 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000dc24:	9805      	ldr	r0, [sp, #20]
9000dc26:	e7f4      	b.n	9000dc12 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000dc28:	68e3      	ldr	r3, [r4, #12]
9000dc2a:	2b00      	cmp	r3, #0
9000dc2c:	d1f1      	bne.n	9000dc12 <osThreadNew+0x6a>
9000dc2e:	6923      	ldr	r3, [r4, #16]
9000dc30:	2b00      	cmp	r3, #0
9000dc32:	d1ee      	bne.n	9000dc12 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000dc34:	fa1f f28c 	uxth.w	r2, ip
9000dc38:	462c      	mov	r4, r5
9000dc3a:	e7df      	b.n	9000dbfc <osThreadNew+0x54>

9000dc3c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000dc3c:	b510      	push	{r4, lr}
9000dc3e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000dc42:	b92c      	cbnz	r4, 9000dc50 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000dc44:	b900      	cbnz	r0, 9000dc48 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000dc46:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000dc48:	f002 f98e 	bl	9000ff68 <vTaskDelay>
    stat = osOK;
9000dc4c:	4620      	mov	r0, r4
}
9000dc4e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dc50:	f06f 0005 	mvn.w	r0, #5
}
9000dc54:	bd10      	pop	{r4, pc}
9000dc56:	bf00      	nop

9000dc58 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000dc58:	b570      	push	{r4, r5, r6, lr}
9000dc5a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000dc5e:	b9db      	cbnz	r3, 9000dc98 <osMutexNew+0x40>
    if (attr != NULL) {
9000dc60:	4604      	mov	r4, r0
9000dc62:	b1e0      	cbz	r0, 9000dc9e <osMutexNew+0x46>
      type = attr->attr_bits;
9000dc64:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000dc66:	0733      	lsls	r3, r6, #28
9000dc68:	d416      	bmi.n	9000dc98 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000dc6a:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000dc6c:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000dc70:	68c3      	ldr	r3, [r0, #12]
9000dc72:	b181      	cbz	r1, 9000dc96 <osMutexNew+0x3e>
9000dc74:	2b4f      	cmp	r3, #79	; 0x4f
9000dc76:	d90f      	bls.n	9000dc98 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000dc78:	b31e      	cbz	r6, 9000dcc2 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000dc7a:	2004      	movs	r0, #4
9000dc7c:	f001 f854 	bl	9000ed28 <xQueueCreateMutexStatic>
9000dc80:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000dc82:	b14d      	cbz	r5, 9000dc98 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000dc84:	6821      	ldr	r1, [r4, #0]
9000dc86:	4628      	mov	r0, r5
9000dc88:	f001 fd84 	bl	9000f794 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000dc8c:	b12e      	cbz	r6, 9000dc9a <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000dc8e:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000dc92:	4628      	mov	r0, r5
9000dc94:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000dc96:	b163      	cbz	r3, 9000dcb2 <osMutexNew+0x5a>
  hMutex = NULL;
9000dc98:	2500      	movs	r5, #0
}
9000dc9a:	4628      	mov	r0, r5
9000dc9c:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000dc9e:	2001      	movs	r0, #1
9000dca0:	f001 f8b2 	bl	9000ee08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000dca4:	4605      	mov	r5, r0
9000dca6:	2800      	cmp	r0, #0
9000dca8:	d0f6      	beq.n	9000dc98 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000dcaa:	4621      	mov	r1, r4
9000dcac:	f001 fd72 	bl	9000f794 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000dcb0:	e7f3      	b.n	9000dc9a <osMutexNew+0x42>
            if (rmtx != 0U) {
9000dcb2:	b15e      	cbz	r6, 9000dccc <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000dcb4:	2004      	movs	r0, #4
9000dcb6:	f001 f8a7 	bl	9000ee08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000dcba:	4605      	mov	r5, r0
9000dcbc:	2800      	cmp	r0, #0
9000dcbe:	d1e1      	bne.n	9000dc84 <osMutexNew+0x2c>
9000dcc0:	e7ea      	b.n	9000dc98 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000dcc2:	2001      	movs	r0, #1
9000dcc4:	f001 f830 	bl	9000ed28 <xQueueCreateMutexStatic>
9000dcc8:	4605      	mov	r5, r0
9000dcca:	e7da      	b.n	9000dc82 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000dccc:	2001      	movs	r0, #1
9000dcce:	f001 f89b 	bl	9000ee08 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000dcd2:	4605      	mov	r5, r0
9000dcd4:	e7d5      	b.n	9000dc82 <osMutexNew+0x2a>
9000dcd6:	bf00      	nop

9000dcd8 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000dcd8:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000dcdc:	f000 0301 	and.w	r3, r0, #1
9000dce0:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000dce4:	b9a8      	cbnz	r0, 9000dd12 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000dce6:	b1ba      	cbz	r2, 9000dd18 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000dce8:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000dcea:	b510      	push	{r4, lr}
9000dcec:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000dcee:	b953      	cbnz	r3, 9000dd06 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000dcf0:	f001 fb02 	bl	9000f2f8 <xQueueSemaphoreTake>
9000dcf4:	2801      	cmp	r0, #1
9000dcf6:	d00a      	beq.n	9000dd0e <osMutexAcquire+0x36>
          stat = osErrorResource;
9000dcf8:	2c00      	cmp	r4, #0
9000dcfa:	bf14      	ite	ne
9000dcfc:	f06f 0001 	mvnne.w	r0, #1
9000dd00:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000dd04:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000dd06:	f001 fc7f 	bl	9000f608 <xQueueTakeMutexRecursive>
9000dd0a:	2801      	cmp	r0, #1
9000dd0c:	d1f4      	bne.n	9000dcf8 <osMutexAcquire+0x20>
  stat = osOK;
9000dd0e:	2000      	movs	r0, #0
}
9000dd10:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dd12:	f06f 0005 	mvn.w	r0, #5
9000dd16:	4770      	bx	lr
    stat = osErrorParameter;
9000dd18:	f06f 0003 	mvn.w	r0, #3
}
9000dd1c:	4770      	bx	lr
9000dd1e:	bf00      	nop

9000dd20 <osMutexRelease>:
9000dd20:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000dd24:	b9ba      	cbnz	r2, 9000dd56 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000dd26:	b510      	push	{r4, lr}
9000dd28:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000dd2c:	b1b4      	cbz	r4, 9000dd5c <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000dd2e:	f000 0301 	and.w	r3, r0, #1
9000dd32:	b943      	cbnz	r3, 9000dd46 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000dd34:	461a      	mov	r2, r3
9000dd36:	4619      	mov	r1, r3
9000dd38:	4620      	mov	r0, r4
9000dd3a:	f000 fe73 	bl	9000ea24 <xQueueGenericSend>
9000dd3e:	2801      	cmp	r0, #1
9000dd40:	d106      	bne.n	9000dd50 <osMutexRelease+0x30>
  stat = osOK;
9000dd42:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000dd44:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000dd46:	4620      	mov	r0, r4
9000dd48:	f001 f83e 	bl	9000edc8 <xQueueGiveMutexRecursive>
9000dd4c:	2801      	cmp	r0, #1
9000dd4e:	d0f8      	beq.n	9000dd42 <osMutexRelease+0x22>
        stat = osErrorResource;
9000dd50:	f06f 0002 	mvn.w	r0, #2
}
9000dd54:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000dd56:	f06f 0005 	mvn.w	r0, #5
}
9000dd5a:	4770      	bx	lr
    stat = osErrorParameter;
9000dd5c:	f06f 0003 	mvn.w	r0, #3
}
9000dd60:	bd10      	pop	{r4, pc}
9000dd62:	bf00      	nop

9000dd64 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000dd64:	b5f0      	push	{r4, r5, r6, r7, lr}
9000dd66:	b083      	sub	sp, #12
9000dd68:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000dd6c:	b98e      	cbnz	r6, 9000dd92 <osSemaphoreNew+0x2e>
9000dd6e:	4605      	mov	r5, r0
9000dd70:	b178      	cbz	r0, 9000dd92 <osSemaphoreNew+0x2e>
9000dd72:	4288      	cmp	r0, r1
9000dd74:	460f      	mov	r7, r1
9000dd76:	d30c      	bcc.n	9000dd92 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000dd78:	4614      	mov	r4, r2
9000dd7a:	b182      	cbz	r2, 9000dd9e <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000dd7c:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000dd80:	b15a      	cbz	r2, 9000dd9a <osSemaphoreNew+0x36>
9000dd82:	2b4f      	cmp	r3, #79	; 0x4f
9000dd84:	d905      	bls.n	9000dd92 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000dd86:	2801      	cmp	r0, #1
9000dd88:	d032      	beq.n	9000ddf0 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000dd8a:	f000 fda3 	bl	9000e8d4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000dd8e:	4605      	mov	r5, r0
9000dd90:	b978      	cbnz	r0, 9000ddb2 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000dd92:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000dd94:	4628      	mov	r0, r5
9000dd96:	b003      	add	sp, #12
9000dd98:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000dd9a:	2b00      	cmp	r3, #0
9000dd9c:	d1f9      	bne.n	9000dd92 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000dd9e:	2d01      	cmp	r5, #1
9000dda0:	d00f      	beq.n	9000ddc2 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000dda2:	4628      	mov	r0, r5
9000dda4:	4639      	mov	r1, r7
9000dda6:	f000 fdf7 	bl	9000e998 <xQueueCreateCountingSemaphore>
9000ddaa:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000ddac:	2d00      	cmp	r5, #0
9000ddae:	d0f0      	beq.n	9000dd92 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000ddb0:	b104      	cbz	r4, 9000ddb4 <osSemaphoreNew+0x50>
          name = attr->name;
9000ddb2:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000ddb4:	4628      	mov	r0, r5
9000ddb6:	4621      	mov	r1, r4
9000ddb8:	f001 fcec 	bl	9000f794 <vQueueAddToRegistry>
}
9000ddbc:	4628      	mov	r0, r5
9000ddbe:	b003      	add	sp, #12
9000ddc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000ddc2:	4628      	mov	r0, r5
9000ddc4:	2203      	movs	r2, #3
9000ddc6:	2100      	movs	r1, #0
9000ddc8:	f000 fd42 	bl	9000e850 <xQueueGenericCreate>
9000ddcc:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000ddce:	2d00      	cmp	r5, #0
9000ddd0:	d0df      	beq.n	9000dd92 <osSemaphoreNew+0x2e>
9000ddd2:	2f00      	cmp	r7, #0
9000ddd4:	d0ea      	beq.n	9000ddac <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000ddd6:	2300      	movs	r3, #0
9000ddd8:	4628      	mov	r0, r5
9000ddda:	461a      	mov	r2, r3
9000dddc:	4619      	mov	r1, r3
9000ddde:	f000 fe21 	bl	9000ea24 <xQueueGenericSend>
9000dde2:	2801      	cmp	r0, #1
9000dde4:	d0e4      	beq.n	9000ddb0 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000dde6:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000dde8:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000ddea:	f001 fc8d 	bl	9000f708 <vQueueDelete>
      if (hSemaphore != NULL) {
9000ddee:	e7d1      	b.n	9000dd94 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000ddf0:	4613      	mov	r3, r2
9000ddf2:	2203      	movs	r2, #3
9000ddf4:	4631      	mov	r1, r6
9000ddf6:	9200      	str	r2, [sp, #0]
9000ddf8:	4632      	mov	r2, r6
9000ddfa:	f000 fcbd 	bl	9000e778 <xQueueGenericCreateStatic>
9000ddfe:	4605      	mov	r5, r0
9000de00:	e7e5      	b.n	9000ddce <osSemaphoreNew+0x6a>
9000de02:	bf00      	nop

9000de04 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000de04:	b370      	cbz	r0, 9000de64 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000de06:	b510      	push	{r4, lr}
9000de08:	460c      	mov	r4, r1
9000de0a:	b082      	sub	sp, #8
9000de0c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000de10:	b1c3      	cbz	r3, 9000de44 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000de12:	bb21      	cbnz	r1, 9000de5e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000de14:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000de16:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000de18:	f001 fc16 	bl	9000f648 <xQueueReceiveFromISR>
9000de1c:	2801      	cmp	r0, #1
9000de1e:	d11a      	bne.n	9000de56 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000de20:	9b01      	ldr	r3, [sp, #4]
9000de22:	b913      	cbnz	r3, 9000de2a <osSemaphoreAcquire+0x26>
  stat = osOK;
9000de24:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000de26:	b002      	add	sp, #8
9000de28:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000de2a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000de2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000de32:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000de36:	f3bf 8f4f 	dsb	sy
9000de3a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000de3e:	4620      	mov	r0, r4
}
9000de40:	b002      	add	sp, #8
9000de42:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000de44:	f001 fa58 	bl	9000f2f8 <xQueueSemaphoreTake>
9000de48:	2801      	cmp	r0, #1
9000de4a:	d0eb      	beq.n	9000de24 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000de4c:	b11c      	cbz	r4, 9000de56 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000de4e:	f06f 0001 	mvn.w	r0, #1
}
9000de52:	b002      	add	sp, #8
9000de54:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000de56:	f06f 0002 	mvn.w	r0, #2
}
9000de5a:	b002      	add	sp, #8
9000de5c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000de5e:	f06f 0003 	mvn.w	r0, #3
9000de62:	e7e0      	b.n	9000de26 <osSemaphoreAcquire+0x22>
9000de64:	f06f 0003 	mvn.w	r0, #3
}
9000de68:	4770      	bx	lr
9000de6a:	bf00      	nop

9000de6c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000de6c:	b330      	cbz	r0, 9000debc <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000de6e:	b510      	push	{r4, lr}
9000de70:	b082      	sub	sp, #8
9000de72:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000de76:	b1ab      	cbz	r3, 9000dea4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000de78:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000de7a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000de7c:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000de7e:	f001 f865 	bl	9000ef4c <xQueueGiveFromISR>
9000de82:	2801      	cmp	r0, #1
9000de84:	d117      	bne.n	9000deb6 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000de86:	9b01      	ldr	r3, [sp, #4]
9000de88:	b193      	cbz	r3, 9000deb0 <osSemaphoreRelease+0x44>
9000de8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000de8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000de92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000de96:	f3bf 8f4f 	dsb	sy
9000de9a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000de9e:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000dea0:	b002      	add	sp, #8
9000dea2:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000dea4:	461a      	mov	r2, r3
9000dea6:	4619      	mov	r1, r3
9000dea8:	f000 fdbc 	bl	9000ea24 <xQueueGenericSend>
9000deac:	2801      	cmp	r0, #1
9000deae:	d102      	bne.n	9000deb6 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000deb0:	2000      	movs	r0, #0
}
9000deb2:	b002      	add	sp, #8
9000deb4:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000deb6:	f06f 0002 	mvn.w	r0, #2
9000deba:	e7fa      	b.n	9000deb2 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000debc:	f06f 0003 	mvn.w	r0, #3
}
9000dec0:	4770      	bx	lr
9000dec2:	bf00      	nop

9000dec4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000dec4:	b5f0      	push	{r4, r5, r6, r7, lr}
9000dec6:	b083      	sub	sp, #12
9000dec8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000decc:	b987      	cbnz	r7, 9000def0 <osMessageQueueNew+0x2c>
9000dece:	4605      	mov	r5, r0
9000ded0:	b170      	cbz	r0, 9000def0 <osMessageQueueNew+0x2c>
9000ded2:	b169      	cbz	r1, 9000def0 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000ded4:	4614      	mov	r4, r2
9000ded6:	b17a      	cbz	r2, 9000def8 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000ded8:	6893      	ldr	r3, [r2, #8]
9000deda:	b1cb      	cbz	r3, 9000df10 <osMessageQueueNew+0x4c>
9000dedc:	68d2      	ldr	r2, [r2, #12]
9000dede:	2a4f      	cmp	r2, #79	; 0x4f
9000dee0:	d906      	bls.n	9000def0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000dee2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000dee4:	b122      	cbz	r2, 9000def0 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000dee6:	fb01 f505 	mul.w	r5, r1, r5
9000deea:	6966      	ldr	r6, [r4, #20]
9000deec:	42ae      	cmp	r6, r5
9000deee:	d21f      	bcs.n	9000df30 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000def0:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000def2:	4628      	mov	r0, r5
9000def4:	b003      	add	sp, #12
9000def6:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000def8:	f000 fcaa 	bl	9000e850 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000defc:	4605      	mov	r5, r0
9000defe:	2800      	cmp	r0, #0
9000df00:	d0f6      	beq.n	9000def0 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000df02:	4628      	mov	r0, r5
9000df04:	4621      	mov	r1, r4
9000df06:	f001 fc45 	bl	9000f794 <vQueueAddToRegistry>
}
9000df0a:	4628      	mov	r0, r5
9000df0c:	b003      	add	sp, #12
9000df0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000df10:	68d3      	ldr	r3, [r2, #12]
9000df12:	2b00      	cmp	r3, #0
9000df14:	d1ec      	bne.n	9000def0 <osMessageQueueNew+0x2c>
9000df16:	6913      	ldr	r3, [r2, #16]
9000df18:	2b00      	cmp	r3, #0
9000df1a:	d1e9      	bne.n	9000def0 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000df1c:	6952      	ldr	r2, [r2, #20]
9000df1e:	2a00      	cmp	r2, #0
9000df20:	d1e6      	bne.n	9000def0 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000df22:	f000 fc95 	bl	9000e850 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000df26:	4605      	mov	r5, r0
9000df28:	2800      	cmp	r0, #0
9000df2a:	d0e1      	beq.n	9000def0 <osMessageQueueNew+0x2c>
        name = attr->name;
9000df2c:	6824      	ldr	r4, [r4, #0]
9000df2e:	e7e8      	b.n	9000df02 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000df30:	9700      	str	r7, [sp, #0]
9000df32:	f000 fc21 	bl	9000e778 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000df36:	4605      	mov	r5, r0
9000df38:	2800      	cmp	r0, #0
9000df3a:	d1f7      	bne.n	9000df2c <osMessageQueueNew+0x68>
9000df3c:	e7d8      	b.n	9000def0 <osMessageQueueNew+0x2c>
9000df3e:	bf00      	nop

9000df40 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000df40:	b530      	push	{r4, r5, lr}
9000df42:	461c      	mov	r4, r3
9000df44:	b083      	sub	sp, #12
9000df46:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000df4a:	b30b      	cbz	r3, 9000df90 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000df4c:	3c00      	subs	r4, #0
9000df4e:	bf18      	it	ne
9000df50:	2401      	movne	r4, #1
9000df52:	2900      	cmp	r1, #0
9000df54:	bf08      	it	eq
9000df56:	f044 0401 	orreq.w	r4, r4, #1
9000df5a:	bb7c      	cbnz	r4, 9000dfbc <osMessageQueuePut+0x7c>
9000df5c:	fab0 f480 	clz	r4, r0
9000df60:	0964      	lsrs	r4, r4, #5
9000df62:	b358      	cbz	r0, 9000dfbc <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000df64:	4623      	mov	r3, r4
9000df66:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000df68:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000df6a:	f000 ff85 	bl	9000ee78 <xQueueGenericSendFromISR>
9000df6e:	2801      	cmp	r0, #1
9000df70:	d120      	bne.n	9000dfb4 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000df72:	9b01      	ldr	r3, [sp, #4]
9000df74:	b1db      	cbz	r3, 9000dfae <osMessageQueuePut+0x6e>
9000df76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000df7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000df7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000df82:	f3bf 8f4f 	dsb	sy
9000df86:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000df8a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000df8c:	b003      	add	sp, #12
9000df8e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000df90:	b1a0      	cbz	r0, 9000dfbc <osMessageQueuePut+0x7c>
9000df92:	fab1 f381 	clz	r3, r1
9000df96:	095b      	lsrs	r3, r3, #5
9000df98:	b181      	cbz	r1, 9000dfbc <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000df9a:	4622      	mov	r2, r4
9000df9c:	f000 fd42 	bl	9000ea24 <xQueueGenericSend>
9000dfa0:	2801      	cmp	r0, #1
9000dfa2:	d004      	beq.n	9000dfae <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000dfa4:	b134      	cbz	r4, 9000dfb4 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000dfa6:	f06f 0001 	mvn.w	r0, #1
}
9000dfaa:	b003      	add	sp, #12
9000dfac:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000dfae:	2000      	movs	r0, #0
}
9000dfb0:	b003      	add	sp, #12
9000dfb2:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000dfb4:	f06f 0002 	mvn.w	r0, #2
}
9000dfb8:	b003      	add	sp, #12
9000dfba:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000dfbc:	f06f 0003 	mvn.w	r0, #3
9000dfc0:	e7e4      	b.n	9000df8c <osMessageQueuePut+0x4c>
9000dfc2:	bf00      	nop

9000dfc4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000dfc4:	b530      	push	{r4, r5, lr}
9000dfc6:	461c      	mov	r4, r3
9000dfc8:	b083      	sub	sp, #12
9000dfca:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000dfce:	b303      	cbz	r3, 9000e012 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000dfd0:	3c00      	subs	r4, #0
9000dfd2:	bf18      	it	ne
9000dfd4:	2401      	movne	r4, #1
9000dfd6:	2900      	cmp	r1, #0
9000dfd8:	bf08      	it	eq
9000dfda:	f044 0401 	orreq.w	r4, r4, #1
9000dfde:	bb5c      	cbnz	r4, 9000e038 <osMessageQueueGet+0x74>
9000dfe0:	fab0 f480 	clz	r4, r0
9000dfe4:	0964      	lsrs	r4, r4, #5
9000dfe6:	b338      	cbz	r0, 9000e038 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000dfe8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000dfea:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000dfec:	f001 fb2c 	bl	9000f648 <xQueueReceiveFromISR>
9000dff0:	2801      	cmp	r0, #1
9000dff2:	d11d      	bne.n	9000e030 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000dff4:	9b01      	ldr	r3, [sp, #4]
9000dff6:	b1c3      	cbz	r3, 9000e02a <osMessageQueueGet+0x66>
9000dff8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000dffc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e000:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e004:	f3bf 8f4f 	dsb	sy
9000e008:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e00c:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e00e:	b003      	add	sp, #12
9000e010:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e012:	b188      	cbz	r0, 9000e038 <osMessageQueueGet+0x74>
9000e014:	b181      	cbz	r1, 9000e038 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e016:	4622      	mov	r2, r4
9000e018:	f000 fff0 	bl	9000effc <xQueueReceive>
9000e01c:	2801      	cmp	r0, #1
9000e01e:	d004      	beq.n	9000e02a <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000e020:	b134      	cbz	r4, 9000e030 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000e022:	f06f 0001 	mvn.w	r0, #1
}
9000e026:	b003      	add	sp, #12
9000e028:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e02a:	2000      	movs	r0, #0
}
9000e02c:	b003      	add	sp, #12
9000e02e:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e030:	f06f 0002 	mvn.w	r0, #2
}
9000e034:	b003      	add	sp, #12
9000e036:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e038:	f06f 0003 	mvn.w	r0, #3
9000e03c:	e7e7      	b.n	9000e00e <osMessageQueueGet+0x4a>
9000e03e:	bf00      	nop

9000e040 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e040:	4b04      	ldr	r3, [pc, #16]	; (9000e054 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e042:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e044:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e046:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e048:	4c03      	ldr	r4, [pc, #12]	; (9000e058 <vApplicationGetIdleTaskMemory+0x18>)
9000e04a:	600c      	str	r4, [r1, #0]
}
9000e04c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e050:	6013      	str	r3, [r2, #0]
}
9000e052:	4770      	bx	lr
9000e054:	24020504 	.word	0x24020504
9000e058:	24020304 	.word	0x24020304

9000e05c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e05c:	4b05      	ldr	r3, [pc, #20]	; (9000e074 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e05e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e060:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e062:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e066:	4c04      	ldr	r4, [pc, #16]	; (9000e078 <vApplicationGetTimerTaskMemory+0x1c>)
9000e068:	600c      	str	r4, [r1, #0]
}
9000e06a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e06e:	6013      	str	r3, [r2, #0]
}
9000e070:	4770      	bx	lr
9000e072:	bf00      	nop
9000e074:	24020968 	.word	0x24020968
9000e078:	24020568 	.word	0x24020568

9000e07c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e07c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e080:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e082:	f002 f863 	bl	9001014c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e086:	4a54      	ldr	r2, [pc, #336]	; (9000e1d8 <pvPortMalloc+0x15c>)
9000e088:	6816      	ldr	r6, [r2, #0]
9000e08a:	2e00      	cmp	r6, #0
9000e08c:	d06f      	beq.n	9000e16e <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e08e:	4b53      	ldr	r3, [pc, #332]	; (9000e1dc <pvPortMalloc+0x160>)
9000e090:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e092:	423d      	tst	r5, r7
9000e094:	d12e      	bne.n	9000e0f4 <pvPortMalloc+0x78>
9000e096:	b36d      	cbz	r5, 9000e0f4 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000e098:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e09c:	076d      	lsls	r5, r5, #29
9000e09e:	d002      	beq.n	9000e0a6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e0a0:	f024 0407 	bic.w	r4, r4, #7
9000e0a4:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e0a6:	b32c      	cbz	r4, 9000e0f4 <pvPortMalloc+0x78>
9000e0a8:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000e1f4 <pvPortMalloc+0x178>
9000e0ac:	f8dc 5000 	ldr.w	r5, [ip]
9000e0b0:	42a5      	cmp	r5, r4
9000e0b2:	d31f      	bcc.n	9000e0f4 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e0b4:	484a      	ldr	r0, [pc, #296]	; (9000e1e0 <pvPortMalloc+0x164>)
9000e0b6:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e0b8:	e003      	b.n	9000e0c2 <pvPortMalloc+0x46>
9000e0ba:	681a      	ldr	r2, [r3, #0]
9000e0bc:	b122      	cbz	r2, 9000e0c8 <pvPortMalloc+0x4c>
9000e0be:	4618      	mov	r0, r3
9000e0c0:	4613      	mov	r3, r2
9000e0c2:	6859      	ldr	r1, [r3, #4]
9000e0c4:	42a1      	cmp	r1, r4
9000e0c6:	d3f8      	bcc.n	9000e0ba <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e0c8:	42b3      	cmp	r3, r6
9000e0ca:	d013      	beq.n	9000e0f4 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e0cc:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e0ce:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e0d0:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e0d4:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e0d6:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e0da:	d929      	bls.n	9000e130 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e0dc:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e0de:	0748      	lsls	r0, r1, #29
9000e0e0:	d00f      	beq.n	9000e102 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e0e2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e0e6:	f383 8811 	msr	BASEPRI, r3
9000e0ea:	f3bf 8f6f 	isb	sy
9000e0ee:	f3bf 8f4f 	dsb	sy
9000e0f2:	e7fe      	b.n	9000e0f2 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e0f4:	f04f 0800 	mov.w	r8, #0
9000e0f8:	f002 f830 	bl	9001015c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e0fc:	4640      	mov	r0, r8
9000e0fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e102:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e104:	4a36      	ldr	r2, [pc, #216]	; (9000e1e0 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000e106:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e108:	4614      	mov	r4, r2
9000e10a:	6812      	ldr	r2, [r2, #0]
9000e10c:	4291      	cmp	r1, r2
9000e10e:	d8fb      	bhi.n	9000e108 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e110:	6860      	ldr	r0, [r4, #4]
9000e112:	eb04 0e00 	add.w	lr, r4, r0
9000e116:	4571      	cmp	r1, lr
9000e118:	d04a      	beq.n	9000e1b0 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e11a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e11e:	eb01 000e 	add.w	r0, r1, lr
9000e122:	4282      	cmp	r2, r0
9000e124:	d050      	beq.n	9000e1c8 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e126:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e128:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e12a:	bf18      	it	ne
9000e12c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e12e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e130:	4a2c      	ldr	r2, [pc, #176]	; (9000e1e4 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e132:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e134:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e136:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e138:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e13c:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000e13e:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e142:	bf38      	it	cc
9000e144:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000e146:	4a28      	ldr	r2, [pc, #160]	; (9000e1e8 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000e148:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000e14c:	6813      	ldr	r3, [r2, #0]
9000e14e:	3301      	adds	r3, #1
9000e150:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000e152:	f002 f803 	bl	9001015c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e156:	f018 0f07 	tst.w	r8, #7
9000e15a:	d0cf      	beq.n	9000e0fc <pvPortMalloc+0x80>
9000e15c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e160:	f383 8811 	msr	BASEPRI, r3
9000e164:	f3bf 8f6f 	isb	sy
9000e168:	f3bf 8f4f 	dsb	sy
9000e16c:	e7fe      	b.n	9000e16c <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000e16e:	4b1f      	ldr	r3, [pc, #124]	; (9000e1ec <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e170:	075e      	lsls	r6, r3, #29
9000e172:	d117      	bne.n	9000e1a4 <pvPortMalloc+0x128>
9000e174:	4e1e      	ldr	r6, [pc, #120]	; (9000e1f0 <pvPortMalloc+0x174>)
9000e176:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000e178:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e17a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e17e:	4818      	ldr	r0, [pc, #96]	; (9000e1e0 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e180:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000e184:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e186:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e188:	4a16      	ldr	r2, [pc, #88]	; (9000e1e4 <pvPortMalloc+0x168>)
9000e18a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e18c:	4a19      	ldr	r2, [pc, #100]	; (9000e1f4 <pvPortMalloc+0x178>)
9000e18e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e190:	4a12      	ldr	r2, [pc, #72]	; (9000e1dc <pvPortMalloc+0x160>)
9000e192:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e194:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e196:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000e19a:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e19e:	e9c1 6300 	strd	r6, r3, [r1]
}
9000e1a2:	e776      	b.n	9000e092 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e1a4:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000e1a6:	4e12      	ldr	r6, [pc, #72]	; (9000e1f0 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000e1a8:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e1ac:	460b      	mov	r3, r1
9000e1ae:	e7e3      	b.n	9000e178 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e1b0:	6849      	ldr	r1, [r1, #4]
9000e1b2:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1b6:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e1ba:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1be:	428a      	cmp	r2, r1
9000e1c0:	d001      	beq.n	9000e1c6 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e1c2:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000e1c4:	e7b3      	b.n	9000e12e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e1c6:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e1c8:	42b2      	cmp	r2, r6
9000e1ca:	d0ac      	beq.n	9000e126 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e1cc:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e1ce:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e1d0:	4470      	add	r0, lr
9000e1d2:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e1d4:	e7a7      	b.n	9000e126 <pvPortMalloc+0xaa>
9000e1d6:	bf00      	nop
9000e1d8:	240209c8 	.word	0x240209c8
9000e1dc:	2403906c 	.word	0x2403906c
9000e1e0:	24039080 	.word	0x24039080
9000e1e4:	24039074 	.word	0x24039074
9000e1e8:	24039078 	.word	0x24039078
9000e1ec:	240209cc 	.word	0x240209cc
9000e1f0:	2403906c 	.word	0x2403906c
9000e1f4:	24039070 	.word	0x24039070

9000e1f8 <vPortFree>:
	if( pv != NULL )
9000e1f8:	b1d0      	cbz	r0, 9000e230 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e1fa:	4a2c      	ldr	r2, [pc, #176]	; (9000e2ac <vPortFree+0xb4>)
9000e1fc:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e200:	6812      	ldr	r2, [r2, #0]
9000e202:	4213      	tst	r3, r2
9000e204:	d00b      	beq.n	9000e21e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e206:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e20a:	b191      	cbz	r1, 9000e232 <vPortFree+0x3a>
9000e20c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e210:	f383 8811 	msr	BASEPRI, r3
9000e214:	f3bf 8f6f 	isb	sy
9000e218:	f3bf 8f4f 	dsb	sy
9000e21c:	e7fe      	b.n	9000e21c <vPortFree+0x24>
9000e21e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e222:	f383 8811 	msr	BASEPRI, r3
9000e226:	f3bf 8f6f 	isb	sy
9000e22a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e22e:	e7fe      	b.n	9000e22e <vPortFree+0x36>
9000e230:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e232:	ea23 0302 	bic.w	r3, r3, r2
{
9000e236:	b530      	push	{r4, r5, lr}
9000e238:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e23a:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e23e:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e242:	4d1b      	ldr	r5, [pc, #108]	; (9000e2b0 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e244:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e246:	f001 ff81 	bl	9001014c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e24a:	9801      	ldr	r0, [sp, #4]
9000e24c:	682a      	ldr	r2, [r5, #0]
9000e24e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e252:	4b18      	ldr	r3, [pc, #96]	; (9000e2b4 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e254:	440a      	add	r2, r1
9000e256:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e258:	461a      	mov	r2, r3
9000e25a:	681b      	ldr	r3, [r3, #0]
9000e25c:	429c      	cmp	r4, r3
9000e25e:	d8fb      	bhi.n	9000e258 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e260:	6850      	ldr	r0, [r2, #4]
9000e262:	eb02 0c00 	add.w	ip, r2, r0
9000e266:	4564      	cmp	r4, ip
9000e268:	d00f      	beq.n	9000e28a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e26a:	1860      	adds	r0, r4, r1
9000e26c:	4283      	cmp	r3, r0
9000e26e:	d014      	beq.n	9000e29a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000e270:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e272:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e274:	bf18      	it	ne
9000e276:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e278:	4a0f      	ldr	r2, [pc, #60]	; (9000e2b8 <vPortFree+0xc0>)
9000e27a:	6813      	ldr	r3, [r2, #0]
9000e27c:	3301      	adds	r3, #1
9000e27e:	6013      	str	r3, [r2, #0]
}
9000e280:	b003      	add	sp, #12
9000e282:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e286:	f001 bf69 	b.w	9001015c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e28a:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e28c:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e28e:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e290:	4283      	cmp	r3, r0
9000e292:	d001      	beq.n	9000e298 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e294:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000e296:	e7ef      	b.n	9000e278 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e298:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e29a:	4808      	ldr	r0, [pc, #32]	; (9000e2bc <vPortFree+0xc4>)
9000e29c:	6800      	ldr	r0, [r0, #0]
9000e29e:	4283      	cmp	r3, r0
9000e2a0:	d0e6      	beq.n	9000e270 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e2a2:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e2a6:	4401      	add	r1, r0
9000e2a8:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e2aa:	e7e1      	b.n	9000e270 <vPortFree+0x78>
9000e2ac:	2403906c 	.word	0x2403906c
9000e2b0:	24039070 	.word	0x24039070
9000e2b4:	24039080 	.word	0x24039080
9000e2b8:	2403907c 	.word	0x2403907c
9000e2bc:	240209c8 	.word	0x240209c8

9000e2c0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e2c0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e2c4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e2c8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e2ca:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e2cc:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e2ce:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e2d0:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e2d4:	4770      	bx	lr
9000e2d6:	bf00      	nop

9000e2d8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e2d8:	2300      	movs	r3, #0
9000e2da:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e2dc:	4770      	bx	lr
9000e2de:	bf00      	nop

9000e2e0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000e2e0:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e2e2:	6802      	ldr	r2, [r0, #0]
{
9000e2e4:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e2e6:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000e2e8:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000e2ea:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e2ec:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e2ee:	689c      	ldr	r4, [r3, #8]
9000e2f0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e2f2:	6099      	str	r1, [r3, #8]
}
9000e2f4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e2f8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e2fa:	6002      	str	r2, [r0, #0]
}
9000e2fc:	4770      	bx	lr
9000e2fe:	bf00      	nop

9000e300 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e300:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e302:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e304:	1c6b      	adds	r3, r5, #1
9000e306:	d010      	beq.n	9000e32a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e308:	f100 0308 	add.w	r3, r0, #8
9000e30c:	461c      	mov	r4, r3
9000e30e:	685b      	ldr	r3, [r3, #4]
9000e310:	681a      	ldr	r2, [r3, #0]
9000e312:	42aa      	cmp	r2, r5
9000e314:	d9fa      	bls.n	9000e30c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e316:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e318:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e31a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e31c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e31e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e320:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e322:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e324:	6002      	str	r2, [r0, #0]
}
9000e326:	bc30      	pop	{r4, r5}
9000e328:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e32a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e32c:	6863      	ldr	r3, [r4, #4]
9000e32e:	e7f2      	b.n	9000e316 <vListInsert+0x16>

9000e330 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e330:	6903      	ldr	r3, [r0, #16]
{
9000e332:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e334:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e336:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e33a:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e33c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e340:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e342:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e344:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e348:	bf08      	it	eq
9000e34a:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e34c:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e34e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e350:	3a01      	subs	r2, #1
9000e352:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e354:	6818      	ldr	r0, [r3, #0]
}
9000e356:	4770      	bx	lr

9000e358 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e358:	4808      	ldr	r0, [pc, #32]	; (9000e37c <prvPortStartFirstTask+0x24>)
9000e35a:	6800      	ldr	r0, [r0, #0]
9000e35c:	6800      	ldr	r0, [r0, #0]
9000e35e:	f380 8808 	msr	MSP, r0
9000e362:	f04f 0000 	mov.w	r0, #0
9000e366:	f380 8814 	msr	CONTROL, r0
9000e36a:	b662      	cpsie	i
9000e36c:	b661      	cpsie	f
9000e36e:	f3bf 8f4f 	dsb	sy
9000e372:	f3bf 8f6f 	isb	sy
9000e376:	df00      	svc	0
9000e378:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e37a:	0000      	.short	0x0000
9000e37c:	e000ed08 	.word	0xe000ed08

9000e380 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e380:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000e390 <vPortEnableVFP+0x10>
9000e384:	6801      	ldr	r1, [r0, #0]
9000e386:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000e38a:	6001      	str	r1, [r0, #0]
9000e38c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e38e:	0000      	.short	0x0000
9000e390:	e000ed88 	.word	0xe000ed88

9000e394 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e394:	4b0e      	ldr	r3, [pc, #56]	; (9000e3d0 <prvTaskExitError+0x3c>)
{
9000e396:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e398:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e39a:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e39c:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e39e:	3301      	adds	r3, #1
9000e3a0:	d008      	beq.n	9000e3b4 <prvTaskExitError+0x20>
9000e3a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3a6:	f383 8811 	msr	BASEPRI, r3
9000e3aa:	f3bf 8f6f 	isb	sy
9000e3ae:	f3bf 8f4f 	dsb	sy
9000e3b2:	e7fe      	b.n	9000e3b2 <prvTaskExitError+0x1e>
9000e3b4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3b8:	f383 8811 	msr	BASEPRI, r3
9000e3bc:	f3bf 8f6f 	isb	sy
9000e3c0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e3c4:	9b01      	ldr	r3, [sp, #4]
9000e3c6:	2b00      	cmp	r3, #0
9000e3c8:	d0fc      	beq.n	9000e3c4 <prvTaskExitError+0x30>
}
9000e3ca:	b002      	add	sp, #8
9000e3cc:	4770      	bx	lr
9000e3ce:	bf00      	nop
9000e3d0:	2400007c 	.word	0x2400007c

9000e3d4 <pxPortInitialiseStack>:
{
9000e3d4:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e3d6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e3da:	4809      	ldr	r0, [pc, #36]	; (9000e400 <pxPortInitialiseStack+0x2c>)
{
9000e3dc:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e3de:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e3e2:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e3e6:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e3ea:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e3ee:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e3f2:	f06f 0102 	mvn.w	r1, #2
}
9000e3f6:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e3fa:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000e3fe:	4770      	bx	lr
9000e400:	9000e395 	.word	0x9000e395
	...

9000e410 <SVC_Handler>:
	__asm volatile (
9000e410:	4b07      	ldr	r3, [pc, #28]	; (9000e430 <pxCurrentTCBConst2>)
9000e412:	6819      	ldr	r1, [r3, #0]
9000e414:	6808      	ldr	r0, [r1, #0]
9000e416:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e41a:	f380 8809 	msr	PSP, r0
9000e41e:	f3bf 8f6f 	isb	sy
9000e422:	f04f 0000 	mov.w	r0, #0
9000e426:	f380 8811 	msr	BASEPRI, r0
9000e42a:	4770      	bx	lr
9000e42c:	f3af 8000 	nop.w

9000e430 <pxCurrentTCBConst2>:
9000e430:	240390d0 	.word	0x240390d0

9000e434 <vPortEnterCritical>:
9000e434:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e438:	f383 8811 	msr	BASEPRI, r3
9000e43c:	f3bf 8f6f 	isb	sy
9000e440:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000e444:	4a0b      	ldr	r2, [pc, #44]	; (9000e474 <vPortEnterCritical+0x40>)
9000e446:	6813      	ldr	r3, [r2, #0]
9000e448:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000e44a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000e44c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000e44e:	d000      	beq.n	9000e452 <vPortEnterCritical+0x1e>
}
9000e450:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000e452:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e456:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000e45a:	b2db      	uxtb	r3, r3
9000e45c:	2b00      	cmp	r3, #0
9000e45e:	d0f7      	beq.n	9000e450 <vPortEnterCritical+0x1c>
9000e460:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e464:	f383 8811 	msr	BASEPRI, r3
9000e468:	f3bf 8f6f 	isb	sy
9000e46c:	f3bf 8f4f 	dsb	sy
9000e470:	e7fe      	b.n	9000e470 <vPortEnterCritical+0x3c>
9000e472:	bf00      	nop
9000e474:	2400007c 	.word	0x2400007c

9000e478 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000e478:	4a08      	ldr	r2, [pc, #32]	; (9000e49c <vPortExitCritical+0x24>)
9000e47a:	6813      	ldr	r3, [r2, #0]
9000e47c:	b943      	cbnz	r3, 9000e490 <vPortExitCritical+0x18>
9000e47e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e482:	f383 8811 	msr	BASEPRI, r3
9000e486:	f3bf 8f6f 	isb	sy
9000e48a:	f3bf 8f4f 	dsb	sy
9000e48e:	e7fe      	b.n	9000e48e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000e490:	3b01      	subs	r3, #1
9000e492:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000e494:	b90b      	cbnz	r3, 9000e49a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000e496:	f383 8811 	msr	BASEPRI, r3
}
9000e49a:	4770      	bx	lr
9000e49c:	2400007c 	.word	0x2400007c

9000e4a0 <PendSV_Handler>:
	__asm volatile
9000e4a0:	f3ef 8009 	mrs	r0, PSP
9000e4a4:	f3bf 8f6f 	isb	sy
9000e4a8:	4b15      	ldr	r3, [pc, #84]	; (9000e500 <pxCurrentTCBConst>)
9000e4aa:	681a      	ldr	r2, [r3, #0]
9000e4ac:	f01e 0f10 	tst.w	lr, #16
9000e4b0:	bf08      	it	eq
9000e4b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000e4b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e4ba:	6010      	str	r0, [r2, #0]
9000e4bc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000e4c0:	f04f 0050 	mov.w	r0, #80	; 0x50
9000e4c4:	f380 8811 	msr	BASEPRI, r0
9000e4c8:	f3bf 8f4f 	dsb	sy
9000e4cc:	f3bf 8f6f 	isb	sy
9000e4d0:	f001 fe80 	bl	900101d4 <vTaskSwitchContext>
9000e4d4:	f04f 0000 	mov.w	r0, #0
9000e4d8:	f380 8811 	msr	BASEPRI, r0
9000e4dc:	bc09      	pop	{r0, r3}
9000e4de:	6819      	ldr	r1, [r3, #0]
9000e4e0:	6808      	ldr	r0, [r1, #0]
9000e4e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000e4e6:	f01e 0f10 	tst.w	lr, #16
9000e4ea:	bf08      	it	eq
9000e4ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000e4f0:	f380 8809 	msr	PSP, r0
9000e4f4:	f3bf 8f6f 	isb	sy
9000e4f8:	4770      	bx	lr
9000e4fa:	bf00      	nop
9000e4fc:	f3af 8000 	nop.w

9000e500 <pxCurrentTCBConst>:
9000e500:	240390d0 	.word	0x240390d0

9000e504 <xPortSysTickHandler>:
{
9000e504:	b508      	push	{r3, lr}
	__asm volatile
9000e506:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e50a:	f383 8811 	msr	BASEPRI, r3
9000e50e:	f3bf 8f6f 	isb	sy
9000e512:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000e516:	f001 fe37 	bl	90010188 <xTaskIncrementTick>
9000e51a:	b128      	cbz	r0, 9000e528 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000e51c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e520:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e524:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000e528:	2300      	movs	r3, #0
9000e52a:	f383 8811 	msr	BASEPRI, r3
}
9000e52e:	bd08      	pop	{r3, pc}

9000e530 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e530:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000e534:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e536:	4806      	ldr	r0, [pc, #24]	; (9000e550 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000e538:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e53a:	4906      	ldr	r1, [pc, #24]	; (9000e554 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000e53c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e53e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e540:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000e542:	fba1 1303 	umull	r1, r3, r1, r3
9000e546:	099b      	lsrs	r3, r3, #6
9000e548:	3b01      	subs	r3, #1
9000e54a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000e54c:	6110      	str	r0, [r2, #16]
}
9000e54e:	4770      	bx	lr
9000e550:	2400006c 	.word	0x2400006c
9000e554:	10624dd3 	.word	0x10624dd3

9000e558 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e558:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e55c:	4a48      	ldr	r2, [pc, #288]	; (9000e680 <xPortStartScheduler+0x128>)
9000e55e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000e562:	4291      	cmp	r1, r2
9000e564:	d041      	beq.n	9000e5ea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e566:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000e56a:	4b46      	ldr	r3, [pc, #280]	; (9000e684 <xPortStartScheduler+0x12c>)
9000e56c:	429a      	cmp	r2, r3
9000e56e:	d033      	beq.n	9000e5d8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e570:	4b45      	ldr	r3, [pc, #276]	; (9000e688 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e572:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e574:	4945      	ldr	r1, [pc, #276]	; (9000e68c <xPortStartScheduler+0x134>)
{
9000e576:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e578:	781a      	ldrb	r2, [r3, #0]
{
9000e57a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e57c:	4c44      	ldr	r4, [pc, #272]	; (9000e690 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000e57e:	b2d2      	uxtb	r2, r2
9000e580:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e582:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000e584:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e586:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000e588:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000e58a:	b2db      	uxtb	r3, r3
9000e58c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e590:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e594:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e598:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e59c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000e59e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e5a0:	d511      	bpl.n	9000e5c6 <xPortStartScheduler+0x6e>
9000e5a2:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e5a4:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000e5a8:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e5aa:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000e5ac:	005b      	lsls	r3, r3, #1
9000e5ae:	b2db      	uxtb	r3, r3
9000e5b0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000e5b4:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000e5b8:	0609      	lsls	r1, r1, #24
9000e5ba:	d4f3      	bmi.n	9000e5a4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000e5bc:	2803      	cmp	r0, #3
9000e5be:	6020      	str	r0, [r4, #0]
9000e5c0:	f88d 3007 	strb.w	r3, [sp, #7]
9000e5c4:	d01a      	beq.n	9000e5fc <xPortStartScheduler+0xa4>
	__asm volatile
9000e5c6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5ca:	f383 8811 	msr	BASEPRI, r3
9000e5ce:	f3bf 8f6f 	isb	sy
9000e5d2:	f3bf 8f4f 	dsb	sy
9000e5d6:	e7fe      	b.n	9000e5d6 <xPortStartScheduler+0x7e>
9000e5d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5dc:	f383 8811 	msr	BASEPRI, r3
9000e5e0:	f3bf 8f6f 	isb	sy
9000e5e4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000e5e8:	e7fe      	b.n	9000e5e8 <xPortStartScheduler+0x90>
9000e5ea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5ee:	f383 8811 	msr	BASEPRI, r3
9000e5f2:	f3bf 8f6f 	isb	sy
9000e5f6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e5fa:	e7fe      	b.n	9000e5fa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e5fc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e5fe:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e602:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e606:	4a20      	ldr	r2, [pc, #128]	; (9000e688 <xPortStartScheduler+0x130>)
9000e608:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000e60a:	4e22      	ldr	r6, [pc, #136]	; (9000e694 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e60c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000e60e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e610:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e612:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000e616:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000e61a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000e61e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000e622:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000e626:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000e62a:	f7ff ff81 	bl	9000e530 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000e62e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000e630:	f7ff fea6 	bl	9000e380 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000e634:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000e638:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000e63c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000e640:	f7ff fe8a 	bl	9000e358 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000e644:	f001 fdc6 	bl	900101d4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000e648:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000e64a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000e64c:	3301      	adds	r3, #1
9000e64e:	d008      	beq.n	9000e662 <xPortStartScheduler+0x10a>
9000e650:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e654:	f383 8811 	msr	BASEPRI, r3
9000e658:	f3bf 8f6f 	isb	sy
9000e65c:	f3bf 8f4f 	dsb	sy
9000e660:	e7fe      	b.n	9000e660 <xPortStartScheduler+0x108>
9000e662:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e666:	f383 8811 	msr	BASEPRI, r3
9000e66a:	f3bf 8f6f 	isb	sy
9000e66e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e672:	9b03      	ldr	r3, [sp, #12]
9000e674:	2b00      	cmp	r3, #0
9000e676:	d0fc      	beq.n	9000e672 <xPortStartScheduler+0x11a>
}
9000e678:	2000      	movs	r0, #0
9000e67a:	b004      	add	sp, #16
9000e67c:	bd70      	pop	{r4, r5, r6, pc}
9000e67e:	bf00      	nop
9000e680:	410fc271 	.word	0x410fc271
9000e684:	410fc270 	.word	0x410fc270
9000e688:	e000e400 	.word	0xe000e400
9000e68c:	24039088 	.word	0x24039088
9000e690:	2403908c 	.word	0x2403908c
9000e694:	2400007c 	.word	0x2400007c

9000e698 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000e698:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000e69c:	2b0f      	cmp	r3, #15
9000e69e:	d90e      	bls.n	9000e6be <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e6a0:	4911      	ldr	r1, [pc, #68]	; (9000e6e8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e6a2:	4a12      	ldr	r2, [pc, #72]	; (9000e6ec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e6a4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e6a6:	7812      	ldrb	r2, [r2, #0]
9000e6a8:	429a      	cmp	r2, r3
9000e6aa:	d908      	bls.n	9000e6be <vPortValidateInterruptPriority+0x26>
9000e6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e6b0:	f383 8811 	msr	BASEPRI, r3
9000e6b4:	f3bf 8f6f 	isb	sy
9000e6b8:	f3bf 8f4f 	dsb	sy
9000e6bc:	e7fe      	b.n	9000e6bc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000e6be:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e6c2:	4a0b      	ldr	r2, [pc, #44]	; (9000e6f0 <vPortValidateInterruptPriority+0x58>)
9000e6c4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000e6c8:	6812      	ldr	r2, [r2, #0]
9000e6ca:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000e6ce:	4293      	cmp	r3, r2
9000e6d0:	d908      	bls.n	9000e6e4 <vPortValidateInterruptPriority+0x4c>
9000e6d2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e6d6:	f383 8811 	msr	BASEPRI, r3
9000e6da:	f3bf 8f6f 	isb	sy
9000e6de:	f3bf 8f4f 	dsb	sy
9000e6e2:	e7fe      	b.n	9000e6e2 <vPortValidateInterruptPriority+0x4a>
	}
9000e6e4:	4770      	bx	lr
9000e6e6:	bf00      	nop
9000e6e8:	e000e3f0 	.word	0xe000e3f0
9000e6ec:	24039088 	.word	0x24039088
9000e6f0:	2403908c 	.word	0x2403908c

9000e6f4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000e6f4:	b570      	push	{r4, r5, r6, lr}
9000e6f6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e6f8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000e6fa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e6fc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e6fe:	b92a      	cbnz	r2, 9000e70c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e700:	6805      	ldr	r5, [r0, #0]
9000e702:	b365      	cbz	r5, 9000e75e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e704:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e706:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e708:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000e70a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000e70c:	b97d      	cbnz	r5, 9000e72e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e70e:	6840      	ldr	r0, [r0, #4]
9000e710:	f019 fa9c 	bl	90027c4c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e714:	6863      	ldr	r3, [r4, #4]
9000e716:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e718:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e71a:	68a2      	ldr	r2, [r4, #8]
9000e71c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e71e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e720:	d319      	bcc.n	9000e756 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e722:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e724:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e726:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e728:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e72a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e72c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000e72e:	68c0      	ldr	r0, [r0, #12]
9000e730:	f019 fa8c 	bl	90027c4c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e734:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e736:	68e3      	ldr	r3, [r4, #12]
9000e738:	4251      	negs	r1, r2
9000e73a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e73c:	6822      	ldr	r2, [r4, #0]
9000e73e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e740:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e742:	d202      	bcs.n	9000e74a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000e744:	68a3      	ldr	r3, [r4, #8]
9000e746:	440b      	add	r3, r1
9000e748:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000e74a:	2d02      	cmp	r5, #2
9000e74c:	d00d      	beq.n	9000e76a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e74e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e750:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e752:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e754:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e756:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000e758:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e75a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000e75c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e75e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e760:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e762:	f001 ff1f 	bl	900105a4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000e766:	60a5      	str	r5, [r4, #8]
9000e768:	e7ce      	b.n	9000e708 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e76a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000e76c:	f04f 0000 	mov.w	r0, #0
9000e770:	bf38      	it	cc
9000e772:	2601      	movcc	r6, #1
9000e774:	e7c8      	b.n	9000e708 <prvCopyDataToQueue+0x14>
9000e776:	bf00      	nop

9000e778 <xQueueGenericCreateStatic>:
	{
9000e778:	b530      	push	{r4, r5, lr}
9000e77a:	b083      	sub	sp, #12
9000e77c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e780:	b940      	cbnz	r0, 9000e794 <xQueueGenericCreateStatic+0x1c>
9000e782:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e786:	f383 8811 	msr	BASEPRI, r3
9000e78a:	f3bf 8f6f 	isb	sy
9000e78e:	f3bf 8f4f 	dsb	sy
9000e792:	e7fe      	b.n	9000e792 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000e794:	461d      	mov	r5, r3
9000e796:	b153      	cbz	r3, 9000e7ae <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000e798:	b30a      	cbz	r2, 9000e7de <xQueueGenericCreateStatic+0x66>
9000e79a:	b989      	cbnz	r1, 9000e7c0 <xQueueGenericCreateStatic+0x48>
9000e79c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7a0:	f383 8811 	msr	BASEPRI, r3
9000e7a4:	f3bf 8f6f 	isb	sy
9000e7a8:	f3bf 8f4f 	dsb	sy
9000e7ac:	e7fe      	b.n	9000e7ac <xQueueGenericCreateStatic+0x34>
9000e7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7b2:	f383 8811 	msr	BASEPRI, r3
9000e7b6:	f3bf 8f6f 	isb	sy
9000e7ba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e7be:	e7fe      	b.n	9000e7be <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e7c0:	b16a      	cbz	r2, 9000e7de <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e7c2:	2350      	movs	r3, #80	; 0x50
9000e7c4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e7c6:	9b01      	ldr	r3, [sp, #4]
9000e7c8:	2b50      	cmp	r3, #80	; 0x50
9000e7ca:	d013      	beq.n	9000e7f4 <xQueueGenericCreateStatic+0x7c>
9000e7cc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7d0:	f383 8811 	msr	BASEPRI, r3
9000e7d4:	f3bf 8f6f 	isb	sy
9000e7d8:	f3bf 8f4f 	dsb	sy
9000e7dc:	e7fe      	b.n	9000e7dc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e7de:	2900      	cmp	r1, #0
9000e7e0:	d0ef      	beq.n	9000e7c2 <xQueueGenericCreateStatic+0x4a>
9000e7e2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7e6:	f383 8811 	msr	BASEPRI, r3
9000e7ea:	f3bf 8f6f 	isb	sy
9000e7ee:	f3bf 8f4f 	dsb	sy
9000e7f2:	e7fe      	b.n	9000e7f2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000e7f4:	2900      	cmp	r1, #0
9000e7f6:	bf08      	it	eq
9000e7f8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000e7fa:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000e7fc:	6429      	str	r1, [r5, #64]	; 0x40
9000e7fe:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e800:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e802:	2201      	movs	r2, #1
9000e804:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000e808:	f7ff fe14 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e80c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e80e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e810:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e812:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e814:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000e818:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e81c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e81e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e820:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e822:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e824:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e826:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e82a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e82c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e830:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e834:	f7ff fd44 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e838:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000e83c:	f7ff fd40 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e840:	f7ff fe1a 	bl	9000e478 <vPortExitCritical>
	}
9000e844:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000e846:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000e84a:	b003      	add	sp, #12
9000e84c:	bd30      	pop	{r4, r5, pc}
9000e84e:	bf00      	nop

9000e850 <xQueueGenericCreate>:
	{
9000e850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e852:	b940      	cbnz	r0, 9000e866 <xQueueGenericCreate+0x16>
9000e854:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e858:	f383 8811 	msr	BASEPRI, r3
9000e85c:	f3bf 8f6f 	isb	sy
9000e860:	f3bf 8f4f 	dsb	sy
9000e864:	e7fe      	b.n	9000e864 <xQueueGenericCreate+0x14>
9000e866:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e868:	fb01 f000 	mul.w	r0, r1, r0
9000e86c:	460e      	mov	r6, r1
9000e86e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e870:	3050      	adds	r0, #80	; 0x50
9000e872:	f7ff fc03 	bl	9000e07c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e876:	4604      	mov	r4, r0
9000e878:	b340      	cbz	r0, 9000e8cc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e87a:	2300      	movs	r3, #0
9000e87c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000e880:	b336      	cbz	r6, 9000e8d0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e882:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000e886:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e888:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000e88c:	f7ff fdd2 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e890:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e892:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e896:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e898:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000e89c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8a0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8a2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8a4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8a6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e8a8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e8aa:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e8ac:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e8ae:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e8b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e8b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e8b8:	f7ff fd02 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e8bc:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e8c0:	f7ff fcfe 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e8c4:	f7ff fdd8 	bl	9000e478 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e8c8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000e8cc:	4620      	mov	r0, r4
9000e8ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000e8d0:	4603      	mov	r3, r0
9000e8d2:	e7d8      	b.n	9000e886 <xQueueGenericCreate+0x36>

9000e8d4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000e8d4:	b940      	cbnz	r0, 9000e8e8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000e8d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8da:	f383 8811 	msr	BASEPRI, r3
9000e8de:	f3bf 8f6f 	isb	sy
9000e8e2:	f3bf 8f4f 	dsb	sy
9000e8e6:	e7fe      	b.n	9000e8e6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e8e8:	4288      	cmp	r0, r1
9000e8ea:	d208      	bcs.n	9000e8fe <xQueueCreateCountingSemaphoreStatic+0x2a>
9000e8ec:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8f0:	f383 8811 	msr	BASEPRI, r3
9000e8f4:	f3bf 8f6f 	isb	sy
9000e8f8:	f3bf 8f4f 	dsb	sy
9000e8fc:	e7fe      	b.n	9000e8fc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000e8fe:	b530      	push	{r4, r5, lr}
9000e900:	4615      	mov	r5, r2
9000e902:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000e904:	2a00      	cmp	r2, #0
9000e906:	d03d      	beq.n	9000e984 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e908:	2350      	movs	r3, #80	; 0x50
9000e90a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e90c:	9b03      	ldr	r3, [sp, #12]
9000e90e:	2b50      	cmp	r3, #80	; 0x50
9000e910:	d008      	beq.n	9000e924 <xQueueCreateCountingSemaphoreStatic+0x50>
9000e912:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e916:	f383 8811 	msr	BASEPRI, r3
9000e91a:	f3bf 8f6f 	isb	sy
9000e91e:	f3bf 8f4f 	dsb	sy
9000e922:	e7fe      	b.n	9000e922 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000e924:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e926:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e928:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e92a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e92c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e930:	6414      	str	r4, [r2, #64]	; 0x40
9000e932:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e934:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000e936:	f7ff fd7d 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e93a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e93c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e93e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e940:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000e944:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e948:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e94c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e94e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e950:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e952:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e954:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e958:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e95c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e960:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e964:	f7ff fcac 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e968:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000e96c:	f7ff fca8 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e970:	f7ff fd82 	bl	9000e478 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e974:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e976:	9901      	ldr	r1, [sp, #4]
	}
9000e978:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000e97a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e97e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000e980:	b005      	add	sp, #20
9000e982:	bd30      	pop	{r4, r5, pc}
9000e984:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e988:	f383 8811 	msr	BASEPRI, r3
9000e98c:	f3bf 8f6f 	isb	sy
9000e990:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e994:	e7fe      	b.n	9000e994 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000e996:	bf00      	nop

9000e998 <xQueueCreateCountingSemaphore>:
	{
9000e998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000e99a:	b940      	cbnz	r0, 9000e9ae <xQueueCreateCountingSemaphore+0x16>
9000e99c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9a0:	f383 8811 	msr	BASEPRI, r3
9000e9a4:	f3bf 8f6f 	isb	sy
9000e9a8:	f3bf 8f4f 	dsb	sy
9000e9ac:	e7fe      	b.n	9000e9ac <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e9ae:	4288      	cmp	r0, r1
9000e9b0:	4604      	mov	r4, r0
9000e9b2:	460e      	mov	r6, r1
9000e9b4:	d208      	bcs.n	9000e9c8 <xQueueCreateCountingSemaphore+0x30>
9000e9b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9ba:	f383 8811 	msr	BASEPRI, r3
9000e9be:	f3bf 8f6f 	isb	sy
9000e9c2:	f3bf 8f4f 	dsb	sy
9000e9c6:	e7fe      	b.n	9000e9c6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e9c8:	2050      	movs	r0, #80	; 0x50
9000e9ca:	f7ff fb57 	bl	9000e07c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e9ce:	4605      	mov	r5, r0
9000e9d0:	b330      	cbz	r0, 9000ea20 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e9d2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e9d4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e9d6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e9d8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e9dc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000e9de:	f7ff fd29 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9e2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e9e4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e9e6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e9ea:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9ec:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000e9f0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9f4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9f6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9f8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9fa:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e9fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e9fe:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ea00:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ea04:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ea08:	f7ff fc5a 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ea0c:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000ea10:	f7ff fc56 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000ea14:	f7ff fd30 	bl	9000e478 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ea18:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ea1a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000ea1c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000ea20:	4628      	mov	r0, r5
9000ea22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000ea24 <xQueueGenericSend>:
{
9000ea24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000ea28:	b084      	sub	sp, #16
9000ea2a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000ea2c:	2800      	cmp	r0, #0
9000ea2e:	f000 8103 	beq.w	9000ec38 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ea32:	4688      	mov	r8, r1
9000ea34:	4604      	mov	r4, r0
9000ea36:	461f      	mov	r7, r3
9000ea38:	2900      	cmp	r1, #0
9000ea3a:	f000 8097 	beq.w	9000eb6c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ea3e:	2f02      	cmp	r7, #2
9000ea40:	d10b      	bne.n	9000ea5a <xQueueGenericSend+0x36>
9000ea42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ea44:	2b01      	cmp	r3, #1
9000ea46:	d008      	beq.n	9000ea5a <xQueueGenericSend+0x36>
9000ea48:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea4c:	f383 8811 	msr	BASEPRI, r3
9000ea50:	f3bf 8f6f 	isb	sy
9000ea54:	f3bf 8f4f 	dsb	sy
9000ea58:	e7fe      	b.n	9000ea58 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ea5a:	f001 fd4d 	bl	900104f8 <xTaskGetSchedulerState>
9000ea5e:	2800      	cmp	r0, #0
9000ea60:	f000 80f3 	beq.w	9000ec4a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea64:	f1a7 0902 	sub.w	r9, r7, #2
9000ea68:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ea6a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea6e:	fab9 f989 	clz	r9, r9
9000ea72:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000ea76:	f7ff fcdd 	bl	9000e434 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000ea7a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000ea7c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ea7e:	429a      	cmp	r2, r3
9000ea80:	f0c0 80f0 	bcc.w	9000ec64 <xQueueGenericSend+0x240>
9000ea84:	f1b9 0f00 	cmp.w	r9, #0
9000ea88:	f040 80ec 	bne.w	9000ec64 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ea8c:	9b01      	ldr	r3, [sp, #4]
9000ea8e:	2b00      	cmp	r3, #0
9000ea90:	f000 8101 	beq.w	9000ec96 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000ea94:	2d00      	cmp	r5, #0
9000ea96:	f000 80cb 	beq.w	9000ec30 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000ea9a:	f7ff fced 	bl	9000e478 <vPortExitCritical>
		vTaskSuspendAll();
9000ea9e:	f001 fb55 	bl	9001014c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000eaa2:	f7ff fcc7 	bl	9000e434 <vPortEnterCritical>
9000eaa6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000eaaa:	2bff      	cmp	r3, #255	; 0xff
9000eaac:	d102      	bne.n	9000eab4 <xQueueGenericSend+0x90>
9000eaae:	2300      	movs	r3, #0
9000eab0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000eab4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000eab8:	2bff      	cmp	r3, #255	; 0xff
9000eaba:	d102      	bne.n	9000eac2 <xQueueGenericSend+0x9e>
9000eabc:	2300      	movs	r3, #0
9000eabe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000eac2:	f7ff fcd9 	bl	9000e478 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000eac6:	a901      	add	r1, sp, #4
9000eac8:	a802      	add	r0, sp, #8
9000eaca:	f001 fcc1 	bl	90010450 <xTaskCheckForTimeOut>
9000eace:	2800      	cmp	r0, #0
9000ead0:	f040 80e5 	bne.w	9000ec9e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000ead4:	f7ff fcae 	bl	9000e434 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000ead8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000eada:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000eadc:	429a      	cmp	r2, r3
9000eade:	d052      	beq.n	9000eb86 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000eae0:	f7ff fcca 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eae4:	f7ff fca6 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eae8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000eaec:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eaee:	2d00      	cmp	r5, #0
9000eaf0:	dc04      	bgt.n	9000eafc <xQueueGenericSend+0xd8>
9000eaf2:	e011      	b.n	9000eb18 <xQueueGenericSend+0xf4>
			--cTxLock;
9000eaf4:	1e6a      	subs	r2, r5, #1
9000eaf6:	b2d3      	uxtb	r3, r2
9000eaf8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eafa:	b16b      	cbz	r3, 9000eb18 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eafc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eafe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eb00:	b153      	cbz	r3, 9000eb18 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb02:	f001 fc4f 	bl	900103a4 <xTaskRemoveFromEventList>
9000eb06:	2800      	cmp	r0, #0
9000eb08:	d0f4      	beq.n	9000eaf4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000eb0a:	f001 fce9 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000eb0e:	1e6a      	subs	r2, r5, #1
9000eb10:	b2d3      	uxtb	r3, r2
9000eb12:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb14:	2b00      	cmp	r3, #0
9000eb16:	d1f1      	bne.n	9000eafc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000eb18:	23ff      	movs	r3, #255	; 0xff
9000eb1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000eb1e:	f7ff fcab 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eb22:	f7ff fc87 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eb26:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000eb2a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb2c:	2d00      	cmp	r5, #0
9000eb2e:	dd14      	ble.n	9000eb5a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb30:	f104 0a10 	add.w	sl, r4, #16
9000eb34:	e003      	b.n	9000eb3e <xQueueGenericSend+0x11a>
				--cRxLock;
9000eb36:	1e6a      	subs	r2, r5, #1
9000eb38:	b2d3      	uxtb	r3, r2
9000eb3a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb3c:	b16b      	cbz	r3, 9000eb5a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb3e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb40:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb42:	b153      	cbz	r3, 9000eb5a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb44:	f001 fc2e 	bl	900103a4 <xTaskRemoveFromEventList>
9000eb48:	2800      	cmp	r0, #0
9000eb4a:	d0f4      	beq.n	9000eb36 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000eb4c:	f001 fcc8 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000eb50:	1e6a      	subs	r2, r5, #1
9000eb52:	b2d3      	uxtb	r3, r2
9000eb54:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb56:	2b00      	cmp	r3, #0
9000eb58:	d1f1      	bne.n	9000eb3e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000eb5a:	23ff      	movs	r3, #255	; 0xff
9000eb5c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000eb60:	f7ff fc8a 	bl	9000e478 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000eb64:	f001 fafa 	bl	9001015c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000eb68:	2501      	movs	r5, #1
9000eb6a:	e784      	b.n	9000ea76 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eb6c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000eb6e:	2b00      	cmp	r3, #0
9000eb70:	f43f af65 	beq.w	9000ea3e <xQueueGenericSend+0x1a>
9000eb74:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb78:	f383 8811 	msr	BASEPRI, r3
9000eb7c:	f3bf 8f6f 	isb	sy
9000eb80:	f3bf 8f4f 	dsb	sy
9000eb84:	e7fe      	b.n	9000eb84 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000eb86:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000eb8a:	f7ff fc75 	bl	9000e478 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000eb8e:	9901      	ldr	r1, [sp, #4]
9000eb90:	4650      	mov	r0, sl
9000eb92:	f001 fb79 	bl	90010288 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000eb96:	f7ff fc4d 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eb9a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000eb9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eba0:	2d00      	cmp	r5, #0
9000eba2:	dc04      	bgt.n	9000ebae <xQueueGenericSend+0x18a>
9000eba4:	e011      	b.n	9000ebca <xQueueGenericSend+0x1a6>
			--cTxLock;
9000eba6:	1e6b      	subs	r3, r5, #1
9000eba8:	b2da      	uxtb	r2, r3
9000ebaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ebac:	b16a      	cbz	r2, 9000ebca <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ebae:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebb0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ebb2:	b153      	cbz	r3, 9000ebca <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebb4:	f001 fbf6 	bl	900103a4 <xTaskRemoveFromEventList>
9000ebb8:	2800      	cmp	r0, #0
9000ebba:	d0f4      	beq.n	9000eba6 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000ebbc:	f001 fc90 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000ebc0:	1e6b      	subs	r3, r5, #1
9000ebc2:	b2da      	uxtb	r2, r3
9000ebc4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ebc6:	2a00      	cmp	r2, #0
9000ebc8:	d1f1      	bne.n	9000ebae <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000ebca:	23ff      	movs	r3, #255	; 0xff
9000ebcc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000ebd0:	f7ff fc52 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ebd4:	f7ff fc2e 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ebd8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ebdc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ebde:	2d00      	cmp	r5, #0
9000ebe0:	dc04      	bgt.n	9000ebec <xQueueGenericSend+0x1c8>
9000ebe2:	e011      	b.n	9000ec08 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000ebe4:	1e6b      	subs	r3, r5, #1
9000ebe6:	b2da      	uxtb	r2, r3
9000ebe8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ebea:	b16a      	cbz	r2, 9000ec08 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ebec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ebee:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ebf0:	b153      	cbz	r3, 9000ec08 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ebf2:	f001 fbd7 	bl	900103a4 <xTaskRemoveFromEventList>
9000ebf6:	2800      	cmp	r0, #0
9000ebf8:	d0f4      	beq.n	9000ebe4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000ebfa:	f001 fc71 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000ebfe:	1e6b      	subs	r3, r5, #1
9000ec00:	b2da      	uxtb	r2, r3
9000ec02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ec04:	2a00      	cmp	r2, #0
9000ec06:	d1f1      	bne.n	9000ebec <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ec08:	23ff      	movs	r3, #255	; 0xff
9000ec0a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ec0e:	f7ff fc33 	bl	9000e478 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000ec12:	f001 faa3 	bl	9001015c <xTaskResumeAll>
9000ec16:	2800      	cmp	r0, #0
9000ec18:	d1a6      	bne.n	9000eb68 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000ec1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ec1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ec22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ec26:	f3bf 8f4f 	dsb	sy
9000ec2a:	f3bf 8f6f 	isb	sy
9000ec2e:	e79b      	b.n	9000eb68 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ec30:	a802      	add	r0, sp, #8
9000ec32:	f001 fc01 	bl	90010438 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000ec36:	e730      	b.n	9000ea9a <xQueueGenericSend+0x76>
9000ec38:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec3c:	f383 8811 	msr	BASEPRI, r3
9000ec40:	f3bf 8f6f 	isb	sy
9000ec44:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ec48:	e7fe      	b.n	9000ec48 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ec4a:	9b01      	ldr	r3, [sp, #4]
9000ec4c:	2b00      	cmp	r3, #0
9000ec4e:	f43f af09 	beq.w	9000ea64 <xQueueGenericSend+0x40>
9000ec52:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec56:	f383 8811 	msr	BASEPRI, r3
9000ec5a:	f3bf 8f6f 	isb	sy
9000ec5e:	f3bf 8f4f 	dsb	sy
9000ec62:	e7fe      	b.n	9000ec62 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ec64:	463a      	mov	r2, r7
9000ec66:	4641      	mov	r1, r8
9000ec68:	4620      	mov	r0, r4
9000ec6a:	f7ff fd43 	bl	9000e6f4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ec70:	2b00      	cmp	r3, #0
9000ec72:	d152      	bne.n	9000ed1a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000ec74:	b148      	cbz	r0, 9000ec8a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000ec76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ec7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ec7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ec82:	f3bf 8f4f 	dsb	sy
9000ec86:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000ec8a:	f7ff fbf5 	bl	9000e478 <vPortExitCritical>
				return pdPASS;
9000ec8e:	2001      	movs	r0, #1
}
9000ec90:	b004      	add	sp, #16
9000ec92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000ec96:	f7ff fbef 	bl	9000e478 <vPortExitCritical>
					return errQUEUE_FULL;
9000ec9a:	4648      	mov	r0, r9
9000ec9c:	e7f8      	b.n	9000ec90 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000ec9e:	f7ff fbc9 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eca2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000eca6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eca8:	2d00      	cmp	r5, #0
9000ecaa:	dd10      	ble.n	9000ecce <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecac:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000ecb0:	e003      	b.n	9000ecba <xQueueGenericSend+0x296>
			--cTxLock;
9000ecb2:	1e6b      	subs	r3, r5, #1
9000ecb4:	b2da      	uxtb	r2, r3
9000ecb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ecb8:	b14a      	cbz	r2, 9000ecce <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecbc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecbe:	b133      	cbz	r3, 9000ecce <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecc0:	f001 fb70 	bl	900103a4 <xTaskRemoveFromEventList>
9000ecc4:	2800      	cmp	r0, #0
9000ecc6:	d0f4      	beq.n	9000ecb2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000ecc8:	f001 fc0a 	bl	900104e0 <vTaskMissedYield>
9000eccc:	e7f1      	b.n	9000ecb2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ecce:	23ff      	movs	r3, #255	; 0xff
9000ecd0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000ecd4:	f7ff fbd0 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ecd8:	f7ff fbac 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ecdc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ece0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ece2:	2d00      	cmp	r5, #0
9000ece4:	dd10      	ble.n	9000ed08 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ece6:	f104 0610 	add.w	r6, r4, #16
9000ecea:	e003      	b.n	9000ecf4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000ecec:	1e6b      	subs	r3, r5, #1
9000ecee:	b2da      	uxtb	r2, r3
9000ecf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ecf2:	b14a      	cbz	r2, 9000ed08 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecf4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecf6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecf8:	b133      	cbz	r3, 9000ed08 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecfa:	f001 fb53 	bl	900103a4 <xTaskRemoveFromEventList>
9000ecfe:	2800      	cmp	r0, #0
9000ed00:	d0f4      	beq.n	9000ecec <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000ed02:	f001 fbed 	bl	900104e0 <vTaskMissedYield>
9000ed06:	e7f1      	b.n	9000ecec <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed08:	23ff      	movs	r3, #255	; 0xff
9000ed0a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ed0e:	f7ff fbb3 	bl	9000e478 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000ed12:	f001 fa23 	bl	9001015c <xTaskResumeAll>
			return errQUEUE_FULL;
9000ed16:	2000      	movs	r0, #0
9000ed18:	e7ba      	b.n	9000ec90 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ed1a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ed1e:	f001 fb41 	bl	900103a4 <xTaskRemoveFromEventList>
9000ed22:	2800      	cmp	r0, #0
9000ed24:	d0b1      	beq.n	9000ec8a <xQueueGenericSend+0x266>
9000ed26:	e7a6      	b.n	9000ec76 <xQueueGenericSend+0x252>

9000ed28 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000ed28:	b179      	cbz	r1, 9000ed4a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ed2a:	2350      	movs	r3, #80	; 0x50
	{
9000ed2c:	b570      	push	{r4, r5, r6, lr}
9000ed2e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ed30:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ed32:	9b01      	ldr	r3, [sp, #4]
9000ed34:	2b50      	cmp	r3, #80	; 0x50
9000ed36:	d011      	beq.n	9000ed5c <xQueueCreateMutexStatic+0x34>
9000ed38:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed3c:	f383 8811 	msr	BASEPRI, r3
9000ed40:	f3bf 8f6f 	isb	sy
9000ed44:	f3bf 8f4f 	dsb	sy
9000ed48:	e7fe      	b.n	9000ed48 <xQueueCreateMutexStatic+0x20>
9000ed4a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed4e:	f383 8811 	msr	BASEPRI, r3
9000ed52:	f3bf 8f6f 	isb	sy
9000ed56:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000ed5a:	e7fe      	b.n	9000ed5a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000ed5c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ed5e:	2301      	movs	r3, #1
9000ed60:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ed62:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ed64:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000ed68:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000ed6a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000ed6c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000ed70:	f7ff fb60 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed74:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000ed76:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ed78:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ed7a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000ed7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ed80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed84:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000ed88:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed8c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed8e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed90:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ed92:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ed96:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ed9a:	f7ff fa91 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ed9e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000eda2:	f7ff fa8d 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000eda6:	f7ff fb67 	bl	9000e478 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000edaa:	4633      	mov	r3, r6
9000edac:	4632      	mov	r2, r6
9000edae:	4631      	mov	r1, r6
9000edb0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000edb2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000edb6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000edb8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000edba:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000edbc:	f7ff fe32 	bl	9000ea24 <xQueueGenericSend>
	}
9000edc0:	4620      	mov	r0, r4
9000edc2:	b002      	add	sp, #8
9000edc4:	bd70      	pop	{r4, r5, r6, pc}
9000edc6:	bf00      	nop

9000edc8 <xQueueGiveMutexRecursive>:
	{
9000edc8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000edca:	b138      	cbz	r0, 9000eddc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000edcc:	6885      	ldr	r5, [r0, #8]
9000edce:	4604      	mov	r4, r0
9000edd0:	f001 fb8c 	bl	900104ec <xTaskGetCurrentTaskHandle>
9000edd4:	4285      	cmp	r5, r0
9000edd6:	d00a      	beq.n	9000edee <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000edd8:	2000      	movs	r0, #0
	}
9000edda:	bd38      	pop	{r3, r4, r5, pc}
9000eddc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ede0:	f383 8811 	msr	BASEPRI, r3
9000ede4:	f3bf 8f6f 	isb	sy
9000ede8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000edec:	e7fe      	b.n	9000edec <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000edee:	68e3      	ldr	r3, [r4, #12]
9000edf0:	3b01      	subs	r3, #1
9000edf2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000edf4:	b10b      	cbz	r3, 9000edfa <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000edf6:	2001      	movs	r0, #1
	}
9000edf8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000edfa:	461a      	mov	r2, r3
9000edfc:	4619      	mov	r1, r3
9000edfe:	4620      	mov	r0, r4
9000ee00:	f7ff fe10 	bl	9000ea24 <xQueueGenericSend>
			xReturn = pdPASS;
9000ee04:	2001      	movs	r0, #1
	}
9000ee06:	bd38      	pop	{r3, r4, r5, pc}

9000ee08 <xQueueCreateMutex>:
	{
9000ee08:	b570      	push	{r4, r5, r6, lr}
9000ee0a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ee0c:	2050      	movs	r0, #80	; 0x50
9000ee0e:	f7ff f935 	bl	9000e07c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ee12:	4604      	mov	r4, r0
9000ee14:	b370      	cbz	r0, 9000ee74 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ee16:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000ee18:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ee1a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ee1c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000ee20:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000ee24:	f7ff fb06 	bl	9000e434 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee28:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ee2a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee2c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ee30:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee32:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000ee36:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee3a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee3c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee3e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000ee40:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee42:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ee46:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ee4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee4e:	f7ff fa37 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ee52:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ee56:	f7ff fa33 	bl	9000e2c0 <vListInitialise>
	taskEXIT_CRITICAL();
9000ee5a:	f7ff fb0d 	bl	9000e478 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000ee5e:	4633      	mov	r3, r6
9000ee60:	4632      	mov	r2, r6
9000ee62:	4631      	mov	r1, r6
9000ee64:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000ee66:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000ee6a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000ee6c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000ee6e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000ee70:	f7ff fdd8 	bl	9000ea24 <xQueueGenericSend>
	}
9000ee74:	4620      	mov	r0, r4
9000ee76:	bd70      	pop	{r4, r5, r6, pc}

9000ee78 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000ee78:	2800      	cmp	r0, #0
9000ee7a:	d04e      	beq.n	9000ef1a <xQueueGenericSendFromISR+0xa2>
{
9000ee7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ee80:	460e      	mov	r6, r1
9000ee82:	4604      	mov	r4, r0
9000ee84:	4617      	mov	r7, r2
9000ee86:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ee88:	b339      	cbz	r1, 9000eeda <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000ee8a:	2d02      	cmp	r5, #2
9000ee8c:	d10b      	bne.n	9000eea6 <xQueueGenericSendFromISR+0x2e>
9000ee8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ee90:	2b01      	cmp	r3, #1
9000ee92:	d008      	beq.n	9000eea6 <xQueueGenericSendFromISR+0x2e>
9000ee94:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee98:	f383 8811 	msr	BASEPRI, r3
9000ee9c:	f3bf 8f6f 	isb	sy
9000eea0:	f3bf 8f4f 	dsb	sy
9000eea4:	e7fe      	b.n	9000eea4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000eea6:	f7ff fbf7 	bl	9000e698 <vPortValidateInterruptPriority>
	__asm volatile
9000eeaa:	f3ef 8811 	mrs	r8, BASEPRI
9000eeae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eeb2:	f383 8811 	msr	BASEPRI, r3
9000eeb6:	f3bf 8f6f 	isb	sy
9000eeba:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000eebe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000eec0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000eec2:	429a      	cmp	r2, r3
9000eec4:	d315      	bcc.n	9000eef2 <xQueueGenericSendFromISR+0x7a>
9000eec6:	f1a5 0002 	sub.w	r0, r5, #2
9000eeca:	fab0 f080 	clz	r0, r0
9000eece:	0940      	lsrs	r0, r0, #5
9000eed0:	b978      	cbnz	r0, 9000eef2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000eed2:	f388 8811 	msr	BASEPRI, r8
}
9000eed6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eeda:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000eedc:	2b00      	cmp	r3, #0
9000eede:	d0d4      	beq.n	9000ee8a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000eee0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eee4:	f383 8811 	msr	BASEPRI, r3
9000eee8:	f3bf 8f6f 	isb	sy
9000eeec:	f3bf 8f4f 	dsb	sy
9000eef0:	e7fe      	b.n	9000eef0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000eef2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000eef4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000eef8:	4631      	mov	r1, r6
9000eefa:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000eefc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000eefe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000ef00:	f7ff fbf8 	bl	9000e6f4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000ef04:	1c6b      	adds	r3, r5, #1
9000ef06:	d011      	beq.n	9000ef2c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ef08:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000ef0a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ef0c:	b25b      	sxtb	r3, r3
9000ef0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000ef12:	f388 8811 	msr	BASEPRI, r8
}
9000ef16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000ef1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef1e:	f383 8811 	msr	BASEPRI, r3
9000ef22:	f3bf 8f6f 	isb	sy
9000ef26:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ef2a:	e7fe      	b.n	9000ef2a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ef2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ef2e:	b90b      	cbnz	r3, 9000ef34 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000ef30:	2001      	movs	r0, #1
9000ef32:	e7ce      	b.n	9000eed2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ef34:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ef38:	f001 fa34 	bl	900103a4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000ef3c:	2800      	cmp	r0, #0
9000ef3e:	d0f7      	beq.n	9000ef30 <xQueueGenericSendFromISR+0xb8>
9000ef40:	2f00      	cmp	r7, #0
9000ef42:	d0f5      	beq.n	9000ef30 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ef44:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000ef46:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000ef48:	603b      	str	r3, [r7, #0]
9000ef4a:	e7c2      	b.n	9000eed2 <xQueueGenericSendFromISR+0x5a>

9000ef4c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000ef4c:	b360      	cbz	r0, 9000efa8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000ef4e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000ef50:	b570      	push	{r4, r5, r6, lr}
9000ef52:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000ef54:	b143      	cbz	r3, 9000ef68 <xQueueGiveFromISR+0x1c>
9000ef56:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef5a:	f383 8811 	msr	BASEPRI, r3
9000ef5e:	f3bf 8f6f 	isb	sy
9000ef62:	f3bf 8f4f 	dsb	sy
9000ef66:	e7fe      	b.n	9000ef66 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000ef68:	6803      	ldr	r3, [r0, #0]
9000ef6a:	460d      	mov	r5, r1
9000ef6c:	b32b      	cbz	r3, 9000efba <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000ef6e:	f7ff fb93 	bl	9000e698 <vPortValidateInterruptPriority>
	__asm volatile
9000ef72:	f3ef 8611 	mrs	r6, BASEPRI
9000ef76:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef7a:	f383 8811 	msr	BASEPRI, r3
9000ef7e:	f3bf 8f6f 	isb	sy
9000ef82:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ef86:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000ef88:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000ef8a:	429a      	cmp	r2, r3
9000ef8c:	d921      	bls.n	9000efd2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000ef8e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ef92:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000ef94:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ef96:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000ef98:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000ef9a:	d01e      	beq.n	9000efda <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000ef9c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000ef9e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000efa0:	b25b      	sxtb	r3, r3
9000efa2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000efa6:	e015      	b.n	9000efd4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000efa8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efac:	f383 8811 	msr	BASEPRI, r3
9000efb0:	f3bf 8f6f 	isb	sy
9000efb4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000efb8:	e7fe      	b.n	9000efb8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000efba:	6883      	ldr	r3, [r0, #8]
9000efbc:	2b00      	cmp	r3, #0
9000efbe:	d0d6      	beq.n	9000ef6e <xQueueGiveFromISR+0x22>
9000efc0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efc4:	f383 8811 	msr	BASEPRI, r3
9000efc8:	f3bf 8f6f 	isb	sy
9000efcc:	f3bf 8f4f 	dsb	sy
9000efd0:	e7fe      	b.n	9000efd0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000efd2:	2000      	movs	r0, #0
	__asm volatile
9000efd4:	f386 8811 	msr	BASEPRI, r6
}
9000efd8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000efda:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000efdc:	b90b      	cbnz	r3, 9000efe2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000efde:	2001      	movs	r0, #1
9000efe0:	e7f8      	b.n	9000efd4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000efe2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000efe6:	f001 f9dd 	bl	900103a4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000efea:	2d00      	cmp	r5, #0
9000efec:	d0f7      	beq.n	9000efde <xQueueGiveFromISR+0x92>
9000efee:	2800      	cmp	r0, #0
9000eff0:	d0f5      	beq.n	9000efde <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000eff2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000eff4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000eff6:	602b      	str	r3, [r5, #0]
9000eff8:	e7ec      	b.n	9000efd4 <xQueueGiveFromISR+0x88>
9000effa:	bf00      	nop

9000effc <xQueueReceive>:
{
9000effc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f000:	b085      	sub	sp, #20
9000f002:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f004:	2800      	cmp	r0, #0
9000f006:	f000 815c 	beq.w	9000f2c2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f00a:	460f      	mov	r7, r1
9000f00c:	4604      	mov	r4, r0
9000f00e:	2900      	cmp	r1, #0
9000f010:	d079      	beq.n	9000f106 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f012:	f001 fa71 	bl	900104f8 <xTaskGetSchedulerState>
9000f016:	2800      	cmp	r0, #0
9000f018:	f000 8081 	beq.w	9000f11e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000f01c:	f7ff fa0a 	bl	9000e434 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f020:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f022:	2d00      	cmp	r5, #0
9000f024:	f040 8138 	bne.w	9000f298 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f028:	9b01      	ldr	r3, [sp, #4]
9000f02a:	2b00      	cmp	r3, #0
9000f02c:	f000 80d5 	beq.w	9000f1da <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000f030:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f032:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f036:	a802      	add	r0, sp, #8
9000f038:	f001 f9fe 	bl	90010438 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f03c:	f7ff fa1c 	bl	9000e478 <vPortExitCritical>
		vTaskSuspendAll();
9000f040:	f001 f884 	bl	9001014c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f044:	f7ff f9f6 	bl	9000e434 <vPortEnterCritical>
9000f048:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f04c:	2bff      	cmp	r3, #255	; 0xff
9000f04e:	d101      	bne.n	9000f054 <xQueueReceive+0x58>
9000f050:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000f054:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f058:	2bff      	cmp	r3, #255	; 0xff
9000f05a:	d101      	bne.n	9000f060 <xQueueReceive+0x64>
9000f05c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000f060:	f7ff fa0a 	bl	9000e478 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f064:	a901      	add	r1, sp, #4
9000f066:	a802      	add	r0, sp, #8
9000f068:	f001 f9f2 	bl	90010450 <xTaskCheckForTimeOut>
9000f06c:	2800      	cmp	r0, #0
9000f06e:	d163      	bne.n	9000f138 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000f070:	f7ff f9e0 	bl	9000e434 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f074:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f076:	2b00      	cmp	r3, #0
9000f078:	f000 80b5 	beq.w	9000f1e6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000f07c:	f7ff f9fc 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f080:	f7ff f9d8 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f084:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f088:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f08a:	2d00      	cmp	r5, #0
9000f08c:	dc04      	bgt.n	9000f098 <xQueueReceive+0x9c>
9000f08e:	e011      	b.n	9000f0b4 <xQueueReceive+0xb8>
			--cTxLock;
9000f090:	1e6b      	subs	r3, r5, #1
9000f092:	b2da      	uxtb	r2, r3
9000f094:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f096:	b16a      	cbz	r2, 9000f0b4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f098:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f09a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f09c:	b153      	cbz	r3, 9000f0b4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f09e:	f001 f981 	bl	900103a4 <xTaskRemoveFromEventList>
9000f0a2:	2800      	cmp	r0, #0
9000f0a4:	d0f4      	beq.n	9000f090 <xQueueReceive+0x94>
						vTaskMissedYield();
9000f0a6:	f001 fa1b 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000f0aa:	1e6b      	subs	r3, r5, #1
9000f0ac:	b2da      	uxtb	r2, r3
9000f0ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0b0:	2a00      	cmp	r2, #0
9000f0b2:	d1f1      	bne.n	9000f098 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000f0b4:	23ff      	movs	r3, #255	; 0xff
9000f0b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f0ba:	f7ff f9dd 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f0be:	f7ff f9b9 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f0c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f0c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0c8:	2d00      	cmp	r5, #0
9000f0ca:	dd14      	ble.n	9000f0f6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0cc:	f104 0910 	add.w	r9, r4, #16
9000f0d0:	e003      	b.n	9000f0da <xQueueReceive+0xde>
				--cRxLock;
9000f0d2:	1e6b      	subs	r3, r5, #1
9000f0d4:	b2da      	uxtb	r2, r3
9000f0d6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0d8:	b16a      	cbz	r2, 9000f0f6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0de:	b153      	cbz	r3, 9000f0f6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0e0:	f001 f960 	bl	900103a4 <xTaskRemoveFromEventList>
9000f0e4:	2800      	cmp	r0, #0
9000f0e6:	d0f4      	beq.n	9000f0d2 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000f0e8:	f001 f9fa 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000f0ec:	1e6b      	subs	r3, r5, #1
9000f0ee:	b2da      	uxtb	r2, r3
9000f0f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0f2:	2a00      	cmp	r2, #0
9000f0f4:	d1f1      	bne.n	9000f0da <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000f0f6:	23ff      	movs	r3, #255	; 0xff
9000f0f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f0fc:	f7ff f9bc 	bl	9000e478 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f100:	f001 f82c 	bl	9001015c <xTaskResumeAll>
		taskENTER_CRITICAL();
9000f104:	e060      	b.n	9000f1c8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f106:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f108:	2b00      	cmp	r3, #0
9000f10a:	d082      	beq.n	9000f012 <xQueueReceive+0x16>
	__asm volatile
9000f10c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f110:	f383 8811 	msr	BASEPRI, r3
9000f114:	f3bf 8f6f 	isb	sy
9000f118:	f3bf 8f4f 	dsb	sy
9000f11c:	e7fe      	b.n	9000f11c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f11e:	9b01      	ldr	r3, [sp, #4]
9000f120:	2b00      	cmp	r3, #0
9000f122:	f43f af7b 	beq.w	9000f01c <xQueueReceive+0x20>
9000f126:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f12a:	f383 8811 	msr	BASEPRI, r3
9000f12e:	f3bf 8f6f 	isb	sy
9000f132:	f3bf 8f4f 	dsb	sy
9000f136:	e7fe      	b.n	9000f136 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000f138:	f7ff f97c 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f13c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f140:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f142:	2d00      	cmp	r5, #0
9000f144:	dc04      	bgt.n	9000f150 <xQueueReceive+0x154>
9000f146:	e011      	b.n	9000f16c <xQueueReceive+0x170>
			--cTxLock;
9000f148:	1e6b      	subs	r3, r5, #1
9000f14a:	b2da      	uxtb	r2, r3
9000f14c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f14e:	b16a      	cbz	r2, 9000f16c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f150:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f152:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f154:	b153      	cbz	r3, 9000f16c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f156:	f001 f925 	bl	900103a4 <xTaskRemoveFromEventList>
9000f15a:	2800      	cmp	r0, #0
9000f15c:	d0f4      	beq.n	9000f148 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000f15e:	f001 f9bf 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000f162:	1e6b      	subs	r3, r5, #1
9000f164:	b2da      	uxtb	r2, r3
9000f166:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f168:	2a00      	cmp	r2, #0
9000f16a:	d1f1      	bne.n	9000f150 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000f16c:	23ff      	movs	r3, #255	; 0xff
9000f16e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f172:	f7ff f981 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f176:	f7ff f95d 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f17a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f17e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f180:	2d00      	cmp	r5, #0
9000f182:	dd14      	ble.n	9000f1ae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f184:	f104 0910 	add.w	r9, r4, #16
9000f188:	e003      	b.n	9000f192 <xQueueReceive+0x196>
				--cRxLock;
9000f18a:	1e6b      	subs	r3, r5, #1
9000f18c:	b2da      	uxtb	r2, r3
9000f18e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f190:	b16a      	cbz	r2, 9000f1ae <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f192:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f194:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f196:	b153      	cbz	r3, 9000f1ae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f198:	f001 f904 	bl	900103a4 <xTaskRemoveFromEventList>
9000f19c:	2800      	cmp	r0, #0
9000f19e:	d0f4      	beq.n	9000f18a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000f1a0:	f001 f99e 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000f1a4:	1e6b      	subs	r3, r5, #1
9000f1a6:	b2da      	uxtb	r2, r3
9000f1a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f1aa:	2a00      	cmp	r2, #0
9000f1ac:	d1f1      	bne.n	9000f192 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000f1ae:	23ff      	movs	r3, #255	; 0xff
9000f1b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f1b4:	f7ff f960 	bl	9000e478 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f1b8:	f000 ffd0 	bl	9001015c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f1bc:	f7ff f93a 	bl	9000e434 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f1c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f1c2:	b153      	cbz	r3, 9000f1da <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000f1c4:	f7ff f958 	bl	9000e478 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f1c8:	f7ff f934 	bl	9000e434 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f1cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f1ce:	2d00      	cmp	r5, #0
9000f1d0:	d162      	bne.n	9000f298 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f1d2:	9b01      	ldr	r3, [sp, #4]
9000f1d4:	2b00      	cmp	r3, #0
9000f1d6:	f47f af31 	bne.w	9000f03c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f1da:	f7ff f94d 	bl	9000e478 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f1de:	2000      	movs	r0, #0
}
9000f1e0:	b005      	add	sp, #20
9000f1e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000f1e6:	f7ff f947 	bl	9000e478 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f1ea:	9901      	ldr	r1, [sp, #4]
9000f1ec:	4630      	mov	r0, r6
9000f1ee:	f001 f84b 	bl	90010288 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f1f2:	f7ff f91f 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f1f6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f1fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1fc:	2d00      	cmp	r5, #0
9000f1fe:	dc04      	bgt.n	9000f20a <xQueueReceive+0x20e>
9000f200:	e011      	b.n	9000f226 <xQueueReceive+0x22a>
			--cTxLock;
9000f202:	1e6b      	subs	r3, r5, #1
9000f204:	b2da      	uxtb	r2, r3
9000f206:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f208:	b16a      	cbz	r2, 9000f226 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f20a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f20c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f20e:	b153      	cbz	r3, 9000f226 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f210:	f001 f8c8 	bl	900103a4 <xTaskRemoveFromEventList>
9000f214:	2800      	cmp	r0, #0
9000f216:	d0f4      	beq.n	9000f202 <xQueueReceive+0x206>
						vTaskMissedYield();
9000f218:	f001 f962 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000f21c:	1e6b      	subs	r3, r5, #1
9000f21e:	b2da      	uxtb	r2, r3
9000f220:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f222:	2a00      	cmp	r2, #0
9000f224:	d1f1      	bne.n	9000f20a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f226:	23ff      	movs	r3, #255	; 0xff
9000f228:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f22c:	f7ff f924 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f230:	f7ff f900 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f234:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f238:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f23a:	2d00      	cmp	r5, #0
9000f23c:	dd14      	ble.n	9000f268 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f23e:	f104 0910 	add.w	r9, r4, #16
9000f242:	e003      	b.n	9000f24c <xQueueReceive+0x250>
				--cRxLock;
9000f244:	1e6b      	subs	r3, r5, #1
9000f246:	b2da      	uxtb	r2, r3
9000f248:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f24a:	b16a      	cbz	r2, 9000f268 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f24c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f24e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f250:	b153      	cbz	r3, 9000f268 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f252:	f001 f8a7 	bl	900103a4 <xTaskRemoveFromEventList>
9000f256:	2800      	cmp	r0, #0
9000f258:	d0f4      	beq.n	9000f244 <xQueueReceive+0x248>
					vTaskMissedYield();
9000f25a:	f001 f941 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000f25e:	1e6b      	subs	r3, r5, #1
9000f260:	b2da      	uxtb	r2, r3
9000f262:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f264:	2a00      	cmp	r2, #0
9000f266:	d1f1      	bne.n	9000f24c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000f268:	23ff      	movs	r3, #255	; 0xff
9000f26a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f26e:	f7ff f903 	bl	9000e478 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f272:	f000 ff73 	bl	9001015c <xTaskResumeAll>
9000f276:	2800      	cmp	r0, #0
9000f278:	d1a6      	bne.n	9000f1c8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000f27a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f27e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f282:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f286:	f3bf 8f4f 	dsb	sy
9000f28a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000f28e:	f7ff f8d1 	bl	9000e434 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f292:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f294:	2d00      	cmp	r5, #0
9000f296:	d09c      	beq.n	9000f1d2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f298:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000f29a:	b152      	cbz	r2, 9000f2b2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f29c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f29e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f2a0:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f2a2:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f2a4:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f2a6:	d301      	bcc.n	9000f2ac <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f2a8:	6821      	ldr	r1, [r4, #0]
9000f2aa:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f2ac:	4638      	mov	r0, r7
9000f2ae:	f018 fccd 	bl	90027c4c <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f2b2:	3d01      	subs	r5, #1
9000f2b4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2b6:	6923      	ldr	r3, [r4, #16]
9000f2b8:	b963      	cbnz	r3, 9000f2d4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f2ba:	f7ff f8dd 	bl	9000e478 <vPortExitCritical>
				return pdPASS;
9000f2be:	2001      	movs	r0, #1
9000f2c0:	e78e      	b.n	9000f1e0 <xQueueReceive+0x1e4>
9000f2c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2c6:	f383 8811 	msr	BASEPRI, r3
9000f2ca:	f3bf 8f6f 	isb	sy
9000f2ce:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f2d2:	e7fe      	b.n	9000f2d2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2d4:	f104 0010 	add.w	r0, r4, #16
9000f2d8:	f001 f864 	bl	900103a4 <xTaskRemoveFromEventList>
9000f2dc:	2800      	cmp	r0, #0
9000f2de:	d0ec      	beq.n	9000f2ba <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000f2e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f2e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f2e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f2ec:	f3bf 8f4f 	dsb	sy
9000f2f0:	f3bf 8f6f 	isb	sy
9000f2f4:	e7e1      	b.n	9000f2ba <xQueueReceive+0x2be>
9000f2f6:	bf00      	nop

9000f2f8 <xQueueSemaphoreTake>:
{
9000f2f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f2fc:	b084      	sub	sp, #16
9000f2fe:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f300:	2800      	cmp	r0, #0
9000f302:	d05c      	beq.n	9000f3be <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f304:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000f306:	4604      	mov	r4, r0
9000f308:	b147      	cbz	r7, 9000f31c <xQueueSemaphoreTake+0x24>
9000f30a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f30e:	f383 8811 	msr	BASEPRI, r3
9000f312:	f3bf 8f6f 	isb	sy
9000f316:	f3bf 8f4f 	dsb	sy
9000f31a:	e7fe      	b.n	9000f31a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f31c:	f001 f8ec 	bl	900104f8 <xTaskGetSchedulerState>
9000f320:	4605      	mov	r5, r0
9000f322:	2800      	cmp	r0, #0
9000f324:	d054      	beq.n	9000f3d0 <xQueueSemaphoreTake+0xd8>
9000f326:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f328:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000f32c:	f7ff f882 	bl	9000e434 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f330:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f332:	2b00      	cmp	r3, #0
9000f334:	f040 8149 	bne.w	9000f5ca <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f338:	9b01      	ldr	r3, [sp, #4]
9000f33a:	2b00      	cmp	r3, #0
9000f33c:	f000 813a 	beq.w	9000f5b4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000f340:	2d00      	cmp	r5, #0
9000f342:	f000 809d 	beq.w	9000f480 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000f346:	f7ff f897 	bl	9000e478 <vPortExitCritical>
		vTaskSuspendAll();
9000f34a:	f000 feff 	bl	9001014c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f34e:	f7ff f871 	bl	9000e434 <vPortEnterCritical>
9000f352:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f356:	2bff      	cmp	r3, #255	; 0xff
9000f358:	d102      	bne.n	9000f360 <xQueueSemaphoreTake+0x68>
9000f35a:	2300      	movs	r3, #0
9000f35c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f360:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f364:	2bff      	cmp	r3, #255	; 0xff
9000f366:	d102      	bne.n	9000f36e <xQueueSemaphoreTake+0x76>
9000f368:	2300      	movs	r3, #0
9000f36a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f36e:	f7ff f883 	bl	9000e478 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f372:	a901      	add	r1, sp, #4
9000f374:	a802      	add	r0, sp, #8
9000f376:	f001 f86b 	bl	90010450 <xTaskCheckForTimeOut>
9000f37a:	2800      	cmp	r0, #0
9000f37c:	d135      	bne.n	9000f3ea <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000f37e:	f7ff f859 	bl	9000e434 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f382:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f384:	2b00      	cmp	r3, #0
9000f386:	f000 80a4 	beq.w	9000f4d2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000f38a:	f7ff f875 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f38e:	f7ff f851 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f392:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f396:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f398:	2d00      	cmp	r5, #0
9000f39a:	dc05      	bgt.n	9000f3a8 <xQueueSemaphoreTake+0xb0>
9000f39c:	e074      	b.n	9000f488 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000f39e:	1e6b      	subs	r3, r5, #1
9000f3a0:	b2da      	uxtb	r2, r3
9000f3a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f3a4:	2a00      	cmp	r2, #0
9000f3a6:	d06f      	beq.n	9000f488 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f3a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f3ac:	2b00      	cmp	r3, #0
9000f3ae:	d06b      	beq.n	9000f488 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f3b0:	f000 fff8 	bl	900103a4 <xTaskRemoveFromEventList>
9000f3b4:	2800      	cmp	r0, #0
9000f3b6:	d0f2      	beq.n	9000f39e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000f3b8:	f001 f892 	bl	900104e0 <vTaskMissedYield>
9000f3bc:	e7ef      	b.n	9000f39e <xQueueSemaphoreTake+0xa6>
9000f3be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3c2:	f383 8811 	msr	BASEPRI, r3
9000f3c6:	f3bf 8f6f 	isb	sy
9000f3ca:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f3ce:	e7fe      	b.n	9000f3ce <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f3d0:	9b01      	ldr	r3, [sp, #4]
9000f3d2:	2b00      	cmp	r3, #0
9000f3d4:	f000 80d4 	beq.w	9000f580 <xQueueSemaphoreTake+0x288>
9000f3d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3dc:	f383 8811 	msr	BASEPRI, r3
9000f3e0:	f3bf 8f6f 	isb	sy
9000f3e4:	f3bf 8f4f 	dsb	sy
9000f3e8:	e7fe      	b.n	9000f3e8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000f3ea:	f7ff f823 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f3ee:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f3f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f3f4:	2d00      	cmp	r5, #0
9000f3f6:	dc04      	bgt.n	9000f402 <xQueueSemaphoreTake+0x10a>
9000f3f8:	e011      	b.n	9000f41e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000f3fa:	1e6b      	subs	r3, r5, #1
9000f3fc:	b2da      	uxtb	r2, r3
9000f3fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f400:	b16a      	cbz	r2, 9000f41e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f402:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f404:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f406:	b153      	cbz	r3, 9000f41e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f408:	f000 ffcc 	bl	900103a4 <xTaskRemoveFromEventList>
9000f40c:	2800      	cmp	r0, #0
9000f40e:	d0f4      	beq.n	9000f3fa <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000f410:	f001 f866 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000f414:	1e6b      	subs	r3, r5, #1
9000f416:	b2da      	uxtb	r2, r3
9000f418:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f41a:	2a00      	cmp	r2, #0
9000f41c:	d1f1      	bne.n	9000f402 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f41e:	23ff      	movs	r3, #255	; 0xff
9000f420:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f424:	f7ff f828 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f428:	f7ff f804 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f42c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f430:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f432:	2d00      	cmp	r5, #0
9000f434:	dd14      	ble.n	9000f460 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f436:	f104 0810 	add.w	r8, r4, #16
9000f43a:	e003      	b.n	9000f444 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000f43c:	1e6b      	subs	r3, r5, #1
9000f43e:	b2da      	uxtb	r2, r3
9000f440:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f442:	b16a      	cbz	r2, 9000f460 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f444:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f446:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f448:	b153      	cbz	r3, 9000f460 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f44a:	f000 ffab 	bl	900103a4 <xTaskRemoveFromEventList>
9000f44e:	2800      	cmp	r0, #0
9000f450:	d0f4      	beq.n	9000f43c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000f452:	f001 f845 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000f456:	1e6b      	subs	r3, r5, #1
9000f458:	b2da      	uxtb	r2, r3
9000f45a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f45c:	2a00      	cmp	r2, #0
9000f45e:	d1f1      	bne.n	9000f444 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000f460:	23ff      	movs	r3, #255	; 0xff
9000f462:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f466:	f7ff f807 	bl	9000e478 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f46a:	f000 fe77 	bl	9001015c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f46e:	f7fe ffe1 	bl	9000e434 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f472:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f474:	2b00      	cmp	r3, #0
9000f476:	d07c      	beq.n	9000f572 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000f478:	f7fe fffe 	bl	9000e478 <vPortExitCritical>
	return xReturn;
9000f47c:	2501      	movs	r5, #1
9000f47e:	e755      	b.n	9000f32c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f480:	a802      	add	r0, sp, #8
9000f482:	f000 ffd9 	bl	90010438 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f486:	e75e      	b.n	9000f346 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f488:	23ff      	movs	r3, #255	; 0xff
9000f48a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f48e:	f7fe fff3 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f492:	f7fe ffcf 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f496:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f49a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f49c:	2d00      	cmp	r5, #0
9000f49e:	dd10      	ble.n	9000f4c2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4a0:	f104 0810 	add.w	r8, r4, #16
9000f4a4:	e003      	b.n	9000f4ae <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000f4a6:	1e6b      	subs	r3, r5, #1
9000f4a8:	b2da      	uxtb	r2, r3
9000f4aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f4ac:	b14a      	cbz	r2, 9000f4c2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4ae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4b0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f4b2:	b133      	cbz	r3, 9000f4c2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f4b4:	f000 ff76 	bl	900103a4 <xTaskRemoveFromEventList>
9000f4b8:	2800      	cmp	r0, #0
9000f4ba:	d0f4      	beq.n	9000f4a6 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000f4bc:	f001 f810 	bl	900104e0 <vTaskMissedYield>
9000f4c0:	e7f1      	b.n	9000f4a6 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000f4c2:	23ff      	movs	r3, #255	; 0xff
9000f4c4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f4c8:	f7fe ffd6 	bl	9000e478 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f4cc:	f000 fe46 	bl	9001015c <xTaskResumeAll>
9000f4d0:	e7d4      	b.n	9000f47c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000f4d2:	f7fe ffd1 	bl	9000e478 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f4d6:	6823      	ldr	r3, [r4, #0]
9000f4d8:	2b00      	cmp	r3, #0
9000f4da:	d062      	beq.n	9000f5a2 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f4dc:	9901      	ldr	r1, [sp, #4]
9000f4de:	4630      	mov	r0, r6
9000f4e0:	f000 fed2 	bl	90010288 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f4e4:	f7fe ffa6 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f4e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f4ec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4ee:	2d00      	cmp	r5, #0
9000f4f0:	dc04      	bgt.n	9000f4fc <xQueueSemaphoreTake+0x204>
9000f4f2:	e00d      	b.n	9000f510 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000f4f4:	1e6b      	subs	r3, r5, #1
9000f4f6:	b2da      	uxtb	r2, r3
9000f4f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f4fa:	b14a      	cbz	r2, 9000f510 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f4fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f4fe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f500:	b133      	cbz	r3, 9000f510 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f502:	f000 ff4f 	bl	900103a4 <xTaskRemoveFromEventList>
9000f506:	2800      	cmp	r0, #0
9000f508:	d0f4      	beq.n	9000f4f4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000f50a:	f000 ffe9 	bl	900104e0 <vTaskMissedYield>
9000f50e:	e7f1      	b.n	9000f4f4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000f510:	23ff      	movs	r3, #255	; 0xff
9000f512:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f516:	f7fe ffaf 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f51a:	f7fe ff8b 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f51e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f522:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f524:	2d00      	cmp	r5, #0
9000f526:	dd10      	ble.n	9000f54a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f528:	f104 0810 	add.w	r8, r4, #16
9000f52c:	e003      	b.n	9000f536 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000f52e:	1e6b      	subs	r3, r5, #1
9000f530:	b2da      	uxtb	r2, r3
9000f532:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f534:	b14a      	cbz	r2, 9000f54a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f536:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f538:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f53a:	b133      	cbz	r3, 9000f54a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f53c:	f000 ff32 	bl	900103a4 <xTaskRemoveFromEventList>
9000f540:	2800      	cmp	r0, #0
9000f542:	d0f4      	beq.n	9000f52e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000f544:	f000 ffcc 	bl	900104e0 <vTaskMissedYield>
9000f548:	e7f1      	b.n	9000f52e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000f54a:	23ff      	movs	r3, #255	; 0xff
9000f54c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f550:	f7fe ff92 	bl	9000e478 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f554:	f000 fe02 	bl	9001015c <xTaskResumeAll>
9000f558:	2800      	cmp	r0, #0
9000f55a:	d18f      	bne.n	9000f47c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000f55c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f560:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f564:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f568:	f3bf 8f4f 	dsb	sy
9000f56c:	f3bf 8f6f 	isb	sy
9000f570:	e784      	b.n	9000f47c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000f572:	f7fe ff81 	bl	9000e478 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000f576:	b92f      	cbnz	r7, 9000f584 <xQueueSemaphoreTake+0x28c>
}
9000f578:	4638      	mov	r0, r7
9000f57a:	b004      	add	sp, #16
9000f57c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000f580:	4607      	mov	r7, r0
9000f582:	e6d1      	b.n	9000f328 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000f584:	f7fe ff56 	bl	9000e434 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000f588:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000f58a:	b119      	cbz	r1, 9000f594 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000f58c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000f58e:	6819      	ldr	r1, [r3, #0]
9000f590:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f594:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000f596:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000f598:	f001 f84a 	bl	90010630 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000f59c:	f7fe ff6c 	bl	9000e478 <vPortExitCritical>
9000f5a0:	e7ea      	b.n	9000f578 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000f5a2:	f7fe ff47 	bl	9000e434 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000f5a6:	68a0      	ldr	r0, [r4, #8]
9000f5a8:	f000 ffb6 	bl	90010518 <xTaskPriorityInherit>
9000f5ac:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000f5ae:	f7fe ff63 	bl	9000e478 <vPortExitCritical>
9000f5b2:	e793      	b.n	9000f4dc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000f5b4:	2f00      	cmp	r7, #0
9000f5b6:	d0f1      	beq.n	9000f59c <xQueueSemaphoreTake+0x2a4>
9000f5b8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5bc:	f383 8811 	msr	BASEPRI, r3
9000f5c0:	f3bf 8f6f 	isb	sy
9000f5c4:	f3bf 8f4f 	dsb	sy
9000f5c8:	e7fe      	b.n	9000f5c8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f5ca:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f5cc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000f5ce:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000f5d0:	b12a      	cbz	r2, 9000f5de <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f5d2:	6923      	ldr	r3, [r4, #16]
9000f5d4:	b93b      	cbnz	r3, 9000f5e6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000f5d6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000f5d8:	f7fe ff4e 	bl	9000e478 <vPortExitCritical>
				return pdPASS;
9000f5dc:	e7cc      	b.n	9000f578 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000f5de:	f001 f87b 	bl	900106d8 <pvTaskIncrementMutexHeldCount>
9000f5e2:	60a0      	str	r0, [r4, #8]
9000f5e4:	e7f5      	b.n	9000f5d2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f5e6:	f104 0010 	add.w	r0, r4, #16
9000f5ea:	f000 fedb 	bl	900103a4 <xTaskRemoveFromEventList>
9000f5ee:	2800      	cmp	r0, #0
9000f5f0:	d0f1      	beq.n	9000f5d6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000f5f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f5f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f5fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f5fe:	f3bf 8f4f 	dsb	sy
9000f602:	f3bf 8f6f 	isb	sy
9000f606:	e7e6      	b.n	9000f5d6 <xQueueSemaphoreTake+0x2de>

9000f608 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000f608:	b1a8      	cbz	r0, 9000f636 <xQueueTakeMutexRecursive+0x2e>
	{
9000f60a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000f60c:	6886      	ldr	r6, [r0, #8]
9000f60e:	4604      	mov	r4, r0
9000f610:	460d      	mov	r5, r1
9000f612:	f000 ff6b 	bl	900104ec <xTaskGetCurrentTaskHandle>
9000f616:	4286      	cmp	r6, r0
9000f618:	d008      	beq.n	9000f62c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000f61a:	4629      	mov	r1, r5
9000f61c:	4620      	mov	r0, r4
9000f61e:	f7ff fe6b 	bl	9000f2f8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000f622:	b110      	cbz	r0, 9000f62a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f624:	68e3      	ldr	r3, [r4, #12]
9000f626:	3301      	adds	r3, #1
9000f628:	60e3      	str	r3, [r4, #12]
	}
9000f62a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f62c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000f62e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000f630:	4403      	add	r3, r0
9000f632:	60e3      	str	r3, [r4, #12]
	}
9000f634:	bd70      	pop	{r4, r5, r6, pc}
9000f636:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f63a:	f383 8811 	msr	BASEPRI, r3
9000f63e:	f3bf 8f6f 	isb	sy
9000f642:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000f646:	e7fe      	b.n	9000f646 <xQueueTakeMutexRecursive+0x3e>

9000f648 <xQueueReceiveFromISR>:
{
9000f648:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000f64c:	b310      	cbz	r0, 9000f694 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f64e:	460e      	mov	r6, r1
9000f650:	4604      	mov	r4, r0
9000f652:	4617      	mov	r7, r2
9000f654:	b191      	cbz	r1, 9000f67c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f656:	f7ff f81f 	bl	9000e698 <vPortValidateInterruptPriority>
	__asm volatile
9000f65a:	f3ef 8911 	mrs	r9, BASEPRI
9000f65e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f662:	f383 8811 	msr	BASEPRI, r3
9000f666:	f3bf 8f6f 	isb	sy
9000f66a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f66e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f670:	b9cd      	cbnz	r5, 9000f6a6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000f672:	4628      	mov	r0, r5
	__asm volatile
9000f674:	f389 8811 	msr	BASEPRI, r9
}
9000f678:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f67c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f67e:	2b00      	cmp	r3, #0
9000f680:	d0e9      	beq.n	9000f656 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000f682:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f686:	f383 8811 	msr	BASEPRI, r3
9000f68a:	f3bf 8f6f 	isb	sy
9000f68e:	f3bf 8f4f 	dsb	sy
9000f692:	e7fe      	b.n	9000f692 <xQueueReceiveFromISR+0x4a>
9000f694:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f698:	f383 8811 	msr	BASEPRI, r3
9000f69c:	f3bf 8f6f 	isb	sy
9000f6a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f6a4:	e7fe      	b.n	9000f6a4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000f6a6:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f6aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000f6ac:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f6b0:	b142      	cbz	r2, 9000f6c4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f6b2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f6b4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f6b6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f6b8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f6ba:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f6bc:	d215      	bcs.n	9000f6ea <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f6be:	4630      	mov	r0, r6
9000f6c0:	f018 fac4 	bl	90027c4c <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f6c4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000f6c6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f6ca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000f6cc:	d009      	beq.n	9000f6e2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f6ce:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000f6d2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000f6d4:	b25b      	sxtb	r3, r3
9000f6d6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000f6da:	f389 8811 	msr	BASEPRI, r9
}
9000f6de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6e2:	6923      	ldr	r3, [r4, #16]
9000f6e4:	b923      	cbnz	r3, 9000f6f0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000f6e6:	2001      	movs	r0, #1
9000f6e8:	e7c4      	b.n	9000f674 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f6ea:	6821      	ldr	r1, [r4, #0]
9000f6ec:	60e1      	str	r1, [r4, #12]
9000f6ee:	e7e6      	b.n	9000f6be <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6f0:	f104 0010 	add.w	r0, r4, #16
9000f6f4:	f000 fe56 	bl	900103a4 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000f6f8:	2f00      	cmp	r7, #0
9000f6fa:	d0f4      	beq.n	9000f6e6 <xQueueReceiveFromISR+0x9e>
9000f6fc:	2800      	cmp	r0, #0
9000f6fe:	d0f2      	beq.n	9000f6e6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f700:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f702:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000f704:	603b      	str	r3, [r7, #0]
9000f706:	e7b5      	b.n	9000f674 <xQueueReceiveFromISR+0x2c>

9000f708 <vQueueDelete>:
	configASSERT( pxQueue );
9000f708:	b1e0      	cbz	r0, 9000f744 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000f70a:	4b21      	ldr	r3, [pc, #132]	; (9000f790 <vQueueDelete+0x88>)
9000f70c:	685a      	ldr	r2, [r3, #4]
9000f70e:	4290      	cmp	r0, r2
9000f710:	d02b      	beq.n	9000f76a <vQueueDelete+0x62>
9000f712:	68da      	ldr	r2, [r3, #12]
9000f714:	4290      	cmp	r0, r2
9000f716:	d02a      	beq.n	9000f76e <vQueueDelete+0x66>
9000f718:	695a      	ldr	r2, [r3, #20]
9000f71a:	4290      	cmp	r0, r2
9000f71c:	d029      	beq.n	9000f772 <vQueueDelete+0x6a>
9000f71e:	69da      	ldr	r2, [r3, #28]
9000f720:	4290      	cmp	r0, r2
9000f722:	d028      	beq.n	9000f776 <vQueueDelete+0x6e>
9000f724:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000f726:	4290      	cmp	r0, r2
9000f728:	d027      	beq.n	9000f77a <vQueueDelete+0x72>
9000f72a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000f72c:	4290      	cmp	r0, r2
9000f72e:	d014      	beq.n	9000f75a <vQueueDelete+0x52>
9000f730:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000f732:	4290      	cmp	r0, r2
9000f734:	d023      	beq.n	9000f77e <vQueueDelete+0x76>
9000f736:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000f738:	4290      	cmp	r0, r2
9000f73a:	d022      	beq.n	9000f782 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000f73c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000f740:	b14b      	cbz	r3, 9000f756 <vQueueDelete+0x4e>
}
9000f742:	4770      	bx	lr
	__asm volatile
9000f744:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f748:	f383 8811 	msr	BASEPRI, r3
9000f74c:	f3bf 8f6f 	isb	sy
9000f750:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f754:	e7fe      	b.n	9000f754 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000f756:	f7fe bd4f 	b.w	9000e1f8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f75a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000f75c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000f760:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000f788 <vQueueDelete+0x80>
9000f764:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000f768:	e7e8      	b.n	9000f73c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f76a:	2200      	movs	r2, #0
9000f76c:	e7f6      	b.n	9000f75c <vQueueDelete+0x54>
9000f76e:	2201      	movs	r2, #1
9000f770:	e7f4      	b.n	9000f75c <vQueueDelete+0x54>
9000f772:	2202      	movs	r2, #2
9000f774:	e7f2      	b.n	9000f75c <vQueueDelete+0x54>
9000f776:	2203      	movs	r2, #3
9000f778:	e7f0      	b.n	9000f75c <vQueueDelete+0x54>
9000f77a:	2204      	movs	r2, #4
9000f77c:	e7ee      	b.n	9000f75c <vQueueDelete+0x54>
9000f77e:	2206      	movs	r2, #6
9000f780:	e7ec      	b.n	9000f75c <vQueueDelete+0x54>
9000f782:	2207      	movs	r2, #7
9000f784:	e7ea      	b.n	9000f75c <vQueueDelete+0x54>
9000f786:	bf00      	nop
	...
9000f790:	24039090 	.word	0x24039090

9000f794 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000f794:	4b12      	ldr	r3, [pc, #72]	; (9000f7e0 <vQueueAddToRegistry+0x4c>)
9000f796:	681a      	ldr	r2, [r3, #0]
9000f798:	b17a      	cbz	r2, 9000f7ba <vQueueAddToRegistry+0x26>
9000f79a:	689a      	ldr	r2, [r3, #8]
9000f79c:	b162      	cbz	r2, 9000f7b8 <vQueueAddToRegistry+0x24>
9000f79e:	691a      	ldr	r2, [r3, #16]
9000f7a0:	b192      	cbz	r2, 9000f7c8 <vQueueAddToRegistry+0x34>
9000f7a2:	699a      	ldr	r2, [r3, #24]
9000f7a4:	b192      	cbz	r2, 9000f7cc <vQueueAddToRegistry+0x38>
9000f7a6:	6a1a      	ldr	r2, [r3, #32]
9000f7a8:	b192      	cbz	r2, 9000f7d0 <vQueueAddToRegistry+0x3c>
9000f7aa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000f7ac:	b192      	cbz	r2, 9000f7d4 <vQueueAddToRegistry+0x40>
9000f7ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000f7b0:	b192      	cbz	r2, 9000f7d8 <vQueueAddToRegistry+0x44>
9000f7b2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000f7b4:	b192      	cbz	r2, 9000f7dc <vQueueAddToRegistry+0x48>
	}
9000f7b6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f7b8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f7ba:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000f7be:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f7c2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000f7c6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f7c8:	2202      	movs	r2, #2
9000f7ca:	e7f6      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7cc:	2203      	movs	r2, #3
9000f7ce:	e7f4      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7d0:	2204      	movs	r2, #4
9000f7d2:	e7f2      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7d4:	2205      	movs	r2, #5
9000f7d6:	e7f0      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7d8:	2206      	movs	r2, #6
9000f7da:	e7ee      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7dc:	2207      	movs	r2, #7
9000f7de:	e7ec      	b.n	9000f7ba <vQueueAddToRegistry+0x26>
9000f7e0:	24039090 	.word	0x24039090

9000f7e4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000f7e4:	b570      	push	{r4, r5, r6, lr}
9000f7e6:	4605      	mov	r5, r0
9000f7e8:	460e      	mov	r6, r1
9000f7ea:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000f7ec:	f7fe fe22 	bl	9000e434 <vPortEnterCritical>
9000f7f0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000f7f4:	2bff      	cmp	r3, #255	; 0xff
9000f7f6:	d102      	bne.n	9000f7fe <vQueueWaitForMessageRestricted+0x1a>
9000f7f8:	2300      	movs	r3, #0
9000f7fa:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000f7fe:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000f802:	2bff      	cmp	r3, #255	; 0xff
9000f804:	d102      	bne.n	9000f80c <vQueueWaitForMessageRestricted+0x28>
9000f806:	2300      	movs	r3, #0
9000f808:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000f80c:	f7fe fe34 	bl	9000e478 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000f810:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000f812:	2b00      	cmp	r3, #0
9000f814:	d043      	beq.n	9000f89e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000f816:	f7fe fe0d 	bl	9000e434 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f81a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000f81e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f820:	2c00      	cmp	r4, #0
9000f822:	dd14      	ble.n	9000f84e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f824:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000f828:	e003      	b.n	9000f832 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000f82a:	1e63      	subs	r3, r4, #1
9000f82c:	b2da      	uxtb	r2, r3
9000f82e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f830:	b16a      	cbz	r2, 9000f84e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f832:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f834:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f836:	b153      	cbz	r3, 9000f84e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f838:	f000 fdb4 	bl	900103a4 <xTaskRemoveFromEventList>
9000f83c:	2800      	cmp	r0, #0
9000f83e:	d0f4      	beq.n	9000f82a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000f840:	f000 fe4e 	bl	900104e0 <vTaskMissedYield>
			--cTxLock;
9000f844:	1e63      	subs	r3, r4, #1
9000f846:	b2da      	uxtb	r2, r3
9000f848:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f84a:	2a00      	cmp	r2, #0
9000f84c:	d1f1      	bne.n	9000f832 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f84e:	23ff      	movs	r3, #255	; 0xff
9000f850:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f854:	f7fe fe10 	bl	9000e478 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f858:	f7fe fdec 	bl	9000e434 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f85c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000f860:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f862:	2c00      	cmp	r4, #0
9000f864:	dd14      	ble.n	9000f890 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f866:	f105 0610 	add.w	r6, r5, #16
9000f86a:	e003      	b.n	9000f874 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000f86c:	1e63      	subs	r3, r4, #1
9000f86e:	b2da      	uxtb	r2, r3
9000f870:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f872:	b16a      	cbz	r2, 9000f890 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f874:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f876:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f878:	b153      	cbz	r3, 9000f890 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f87a:	f000 fd93 	bl	900103a4 <xTaskRemoveFromEventList>
9000f87e:	2800      	cmp	r0, #0
9000f880:	d0f4      	beq.n	9000f86c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000f882:	f000 fe2d 	bl	900104e0 <vTaskMissedYield>
				--cRxLock;
9000f886:	1e63      	subs	r3, r4, #1
9000f888:	b2da      	uxtb	r2, r3
9000f88a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f88c:	2a00      	cmp	r2, #0
9000f88e:	d1f1      	bne.n	9000f874 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000f890:	23ff      	movs	r3, #255	; 0xff
9000f892:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000f896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000f89a:	f7fe bded 	b.w	9000e478 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000f89e:	4622      	mov	r2, r4
9000f8a0:	4631      	mov	r1, r6
9000f8a2:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000f8a6:	f000 fd33 	bl	90010310 <vTaskPlaceOnEventListRestricted>
9000f8aa:	e7b4      	b.n	9000f816 <vQueueWaitForMessageRestricted+0x32>

9000f8ac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000f8ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f8b0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000f8b2:	f7fe fdbf 	bl	9000e434 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000f8b6:	4a34      	ldr	r2, [pc, #208]	; (9000f988 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000f8b8:	4e34      	ldr	r6, [pc, #208]	; (9000f98c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000f8ba:	6813      	ldr	r3, [r2, #0]
9000f8bc:	3301      	adds	r3, #1
9000f8be:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000f8c0:	6833      	ldr	r3, [r6, #0]
9000f8c2:	2b00      	cmp	r3, #0
9000f8c4:	d032      	beq.n	9000f92c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000f8c6:	4c32      	ldr	r4, [pc, #200]	; (9000f990 <prvAddNewTaskToReadyList+0xe4>)
9000f8c8:	6823      	ldr	r3, [r4, #0]
9000f8ca:	b33b      	cbz	r3, 9000f91c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f8cc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f8ce:	4f31      	ldr	r7, [pc, #196]	; (9000f994 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000f8d0:	4a31      	ldr	r2, [pc, #196]	; (9000f998 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000f8d2:	4932      	ldr	r1, [pc, #200]	; (9000f99c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000f8d4:	6813      	ldr	r3, [r2, #0]
9000f8d6:	3301      	adds	r3, #1
9000f8d8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000f8da:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000f8dc:	680b      	ldr	r3, [r1, #0]
9000f8de:	4283      	cmp	r3, r0
9000f8e0:	d200      	bcs.n	9000f8e4 <prvAddNewTaskToReadyList+0x38>
9000f8e2:	6008      	str	r0, [r1, #0]
9000f8e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f8e8:	1d29      	adds	r1, r5, #4
9000f8ea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000f8ee:	f7fe fcf7 	bl	9000e2e0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000f8f2:	f7fe fdc1 	bl	9000e478 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000f8f6:	6823      	ldr	r3, [r4, #0]
9000f8f8:	b173      	cbz	r3, 9000f918 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000f8fa:	6832      	ldr	r2, [r6, #0]
9000f8fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000f8fe:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f900:	429a      	cmp	r2, r3
9000f902:	d209      	bcs.n	9000f918 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000f904:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f908:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f90c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f910:	f3bf 8f4f 	dsb	sy
9000f914:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000f918:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f91c:	6833      	ldr	r3, [r6, #0]
9000f91e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f920:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f922:	4f1c      	ldr	r7, [pc, #112]	; (9000f994 <prvAddNewTaskToReadyList+0xe8>)
9000f924:	4283      	cmp	r3, r0
9000f926:	d8d3      	bhi.n	9000f8d0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000f928:	6035      	str	r5, [r6, #0]
9000f92a:	e7d1      	b.n	9000f8d0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000f92c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000f92e:	6813      	ldr	r3, [r2, #0]
9000f930:	2b01      	cmp	r3, #1
9000f932:	d003      	beq.n	9000f93c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f934:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f936:	4f17      	ldr	r7, [pc, #92]	; (9000f994 <prvAddNewTaskToReadyList+0xe8>)
9000f938:	4c15      	ldr	r4, [pc, #84]	; (9000f990 <prvAddNewTaskToReadyList+0xe4>)
9000f93a:	e7c9      	b.n	9000f8d0 <prvAddNewTaskToReadyList+0x24>
9000f93c:	4f15      	ldr	r7, [pc, #84]	; (9000f994 <prvAddNewTaskToReadyList+0xe8>)
9000f93e:	463c      	mov	r4, r7
9000f940:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f944:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f946:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f948:	f7fe fcba 	bl	9000e2c0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f94c:	45a0      	cmp	r8, r4
9000f94e:	d1f9      	bne.n	9000f944 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000f950:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000f9b4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000f954:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000f9b8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000f958:	4648      	mov	r0, r9
9000f95a:	4c0d      	ldr	r4, [pc, #52]	; (9000f990 <prvAddNewTaskToReadyList+0xe4>)
9000f95c:	f7fe fcb0 	bl	9000e2c0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000f960:	4640      	mov	r0, r8
9000f962:	f7fe fcad 	bl	9000e2c0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000f966:	480e      	ldr	r0, [pc, #56]	; (9000f9a0 <prvAddNewTaskToReadyList+0xf4>)
9000f968:	f7fe fcaa 	bl	9000e2c0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000f96c:	480d      	ldr	r0, [pc, #52]	; (9000f9a4 <prvAddNewTaskToReadyList+0xf8>)
9000f96e:	f7fe fca7 	bl	9000e2c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000f972:	480d      	ldr	r0, [pc, #52]	; (9000f9a8 <prvAddNewTaskToReadyList+0xfc>)
9000f974:	f7fe fca4 	bl	9000e2c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000f978:	4b0c      	ldr	r3, [pc, #48]	; (9000f9ac <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000f97a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000f97c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000f980:	4b0b      	ldr	r3, [pc, #44]	; (9000f9b0 <prvAddNewTaskToReadyList+0x104>)
9000f982:	f8c3 8000 	str.w	r8, [r3]
}
9000f986:	e7a3      	b.n	9000f8d0 <prvAddNewTaskToReadyList+0x24>
9000f988:	2403953c 	.word	0x2403953c
9000f98c:	240390d0 	.word	0x240390d0
9000f990:	24039598 	.word	0x24039598
9000f994:	240390dc 	.word	0x240390dc
9000f998:	24039548 	.word	0x24039548
9000f99c:	2403954c 	.word	0x2403954c
9000f9a0:	24039584 	.word	0x24039584
9000f9a4:	240395b0 	.word	0x240395b0
9000f9a8:	2403959c 	.word	0x2403959c
9000f9ac:	240390d4 	.word	0x240390d4
9000f9b0:	240390d8 	.word	0x240390d8
9000f9b4:	24039550 	.word	0x24039550
9000f9b8:	24039564 	.word	0x24039564

9000f9bc <prvIdleTask>:
{
9000f9bc:	b580      	push	{r7, lr}
9000f9be:	4c22      	ldr	r4, [pc, #136]	; (9000fa48 <prvIdleTask+0x8c>)
				taskYIELD();
9000f9c0:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000f9c4:	4e21      	ldr	r6, [pc, #132]	; (9000fa4c <prvIdleTask+0x90>)
9000f9c6:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000f9ca:	4d21      	ldr	r5, [pc, #132]	; (9000fa50 <prvIdleTask+0x94>)
9000f9cc:	4f21      	ldr	r7, [pc, #132]	; (9000fa54 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000f9ce:	6823      	ldr	r3, [r4, #0]
9000f9d0:	b353      	cbz	r3, 9000fa28 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000f9d2:	f7fe fd2f 	bl	9000e434 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f9d6:	68f3      	ldr	r3, [r6, #12]
9000f9d8:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f9dc:	f10a 0004 	add.w	r0, sl, #4
9000f9e0:	f7fe fca6 	bl	9000e330 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000f9e4:	682b      	ldr	r3, [r5, #0]
9000f9e6:	3b01      	subs	r3, #1
9000f9e8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000f9ea:	6823      	ldr	r3, [r4, #0]
9000f9ec:	3b01      	subs	r3, #1
9000f9ee:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000f9f0:	f7fe fd42 	bl	9000e478 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000f9f4:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000f9f8:	b163      	cbz	r3, 9000fa14 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000f9fa:	2b01      	cmp	r3, #1
9000f9fc:	d020      	beq.n	9000fa40 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000f9fe:	2b02      	cmp	r3, #2
9000fa00:	d0e5      	beq.n	9000f9ce <prvIdleTask+0x12>
9000fa02:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fa06:	f383 8811 	msr	BASEPRI, r3
9000fa0a:	f3bf 8f6f 	isb	sy
9000fa0e:	f3bf 8f4f 	dsb	sy
9000fa12:	e7fe      	b.n	9000fa12 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000fa14:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000fa18:	f7fe fbee 	bl	9000e1f8 <vPortFree>
				vPortFree( pxTCB );
9000fa1c:	4650      	mov	r0, sl
9000fa1e:	f7fe fbeb 	bl	9000e1f8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000fa22:	6823      	ldr	r3, [r4, #0]
9000fa24:	2b00      	cmp	r3, #0
9000fa26:	d1d4      	bne.n	9000f9d2 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000fa28:	683b      	ldr	r3, [r7, #0]
9000fa2a:	2b01      	cmp	r3, #1
9000fa2c:	d905      	bls.n	9000fa3a <prvIdleTask+0x7e>
				taskYIELD();
9000fa2e:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000fa32:	f3bf 8f4f 	dsb	sy
9000fa36:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000fa3a:	f7f2 ffb1 	bl	900029a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000fa3e:	e7c6      	b.n	9000f9ce <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000fa40:	4650      	mov	r0, sl
9000fa42:	f7fe fbd9 	bl	9000e1f8 <vPortFree>
9000fa46:	e7c2      	b.n	9000f9ce <prvIdleTask+0x12>
9000fa48:	24039540 	.word	0x24039540
9000fa4c:	240395b0 	.word	0x240395b0
9000fa50:	2403953c 	.word	0x2403953c
9000fa54:	240390dc 	.word	0x240390dc

9000fa58 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fa58:	4b4a      	ldr	r3, [pc, #296]	; (9000fb84 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000fa5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fa5e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000fa60:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000fa62:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000fa64:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000fa66:	2e00      	cmp	r6, #0
9000fa68:	d040      	beq.n	9000faec <xTaskIncrementTick.part.0+0x94>
9000fa6a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000fb98 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000fa6e:	f8db 3000 	ldr.w	r3, [fp]
9000fa72:	429e      	cmp	r6, r3
9000fa74:	d347      	bcc.n	9000fb06 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fa76:	4f44      	ldr	r7, [pc, #272]	; (9000fb88 <xTaskIncrementTick.part.0+0x130>)
9000fa78:	683b      	ldr	r3, [r7, #0]
9000fa7a:	681d      	ldr	r5, [r3, #0]
9000fa7c:	2d00      	cmp	r5, #0
9000fa7e:	d077      	beq.n	9000fb70 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000fa80:	2500      	movs	r5, #0
9000fa82:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000fb9c <xTaskIncrementTick.part.0+0x144>
9000fa86:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000fba0 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000fa8a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000fba4 <xTaskIncrementTick.part.0+0x14c>
9000fa8e:	e022      	b.n	9000fad6 <xTaskIncrementTick.part.0+0x7e>
9000fa90:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fa92:	f7fe fc4d 	bl	9000e330 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fa96:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fa98:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000fa9c:	9901      	ldr	r1, [sp, #4]
9000fa9e:	b113      	cbz	r3, 9000faa6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000faa0:	f7fe fc46 	bl	9000e330 <uxListRemove>
9000faa4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000faa6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000faa8:	f8d8 2000 	ldr.w	r2, [r8]
9000faac:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fab0:	4293      	cmp	r3, r2
9000fab2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fab6:	d901      	bls.n	9000fabc <xTaskIncrementTick.part.0+0x64>
9000fab8:	f8c8 3000 	str.w	r3, [r8]
9000fabc:	f7fe fc10 	bl	9000e2e0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fac0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fac4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fac6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000fac8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000faca:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000facc:	4291      	cmp	r1, r2
9000face:	bf28      	it	cs
9000fad0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fad2:	2b00      	cmp	r3, #0
9000fad4:	d050      	beq.n	9000fb78 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fad6:	683b      	ldr	r3, [r7, #0]
9000fad8:	68db      	ldr	r3, [r3, #12]
9000fada:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000fadc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fade:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000fae0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fae2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000fae4:	d2d4      	bcs.n	9000fa90 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000fae6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000faea:	e011      	b.n	9000fb10 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000faec:	4b26      	ldr	r3, [pc, #152]	; (9000fb88 <xTaskIncrementTick.part.0+0x130>)
9000faee:	681a      	ldr	r2, [r3, #0]
9000faf0:	6812      	ldr	r2, [r2, #0]
9000faf2:	b30a      	cbz	r2, 9000fb38 <xTaskIncrementTick.part.0+0xe0>
9000faf4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000faf8:	f383 8811 	msr	BASEPRI, r3
9000fafc:	f3bf 8f6f 	isb	sy
9000fb00:	f3bf 8f4f 	dsb	sy
9000fb04:	e7fe      	b.n	9000fb04 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000fb06:	2500      	movs	r5, #0
9000fb08:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000fb9c <xTaskIncrementTick.part.0+0x144>
9000fb0c:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000fba0 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fb10:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000fb14:	491d      	ldr	r1, [pc, #116]	; (9000fb8c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000fb16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fb18:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000fb1c:	009b      	lsls	r3, r3, #2
9000fb1e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000fb22:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000fb24:	2a02      	cmp	r2, #2
9000fb26:	bf28      	it	cs
9000fb28:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000fb2a:	2b00      	cmp	r3, #0
}
9000fb2c:	bf0c      	ite	eq
9000fb2e:	4628      	moveq	r0, r5
9000fb30:	2001      	movne	r0, #1
9000fb32:	b003      	add	sp, #12
9000fb34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000fb38:	4a15      	ldr	r2, [pc, #84]	; (9000fb90 <xTaskIncrementTick.part.0+0x138>)
9000fb3a:	6818      	ldr	r0, [r3, #0]
9000fb3c:	6811      	ldr	r1, [r2, #0]
9000fb3e:	6019      	str	r1, [r3, #0]
9000fb40:	4914      	ldr	r1, [pc, #80]	; (9000fb94 <xTaskIncrementTick.part.0+0x13c>)
9000fb42:	6010      	str	r0, [r2, #0]
9000fb44:	680a      	ldr	r2, [r1, #0]
9000fb46:	3201      	adds	r2, #1
9000fb48:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fb4a:	681a      	ldr	r2, [r3, #0]
9000fb4c:	6812      	ldr	r2, [r2, #0]
9000fb4e:	b932      	cbnz	r2, 9000fb5e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000fb50:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000fb98 <xTaskIncrementTick.part.0+0x140>
9000fb54:	f04f 33ff 	mov.w	r3, #4294967295
9000fb58:	f8cb 3000 	str.w	r3, [fp]
9000fb5c:	e787      	b.n	9000fa6e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb5e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fb60:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000fb98 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb64:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fb66:	68db      	ldr	r3, [r3, #12]
9000fb68:	685b      	ldr	r3, [r3, #4]
9000fb6a:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000fb6e:	e77e      	b.n	9000fa6e <xTaskIncrementTick.part.0+0x16>
9000fb70:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000fb9c <xTaskIncrementTick.part.0+0x144>
9000fb74:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000fba0 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fb78:	f04f 33ff 	mov.w	r3, #4294967295
9000fb7c:	f8cb 3000 	str.w	r3, [fp]
					break;
9000fb80:	e7c6      	b.n	9000fb10 <xTaskIncrementTick.part.0+0xb8>
9000fb82:	bf00      	nop
9000fb84:	240395c4 	.word	0x240395c4
9000fb88:	240390d4 	.word	0x240390d4
9000fb8c:	240395c8 	.word	0x240395c8
9000fb90:	240390d8 	.word	0x240390d8
9000fb94:	2403957c 	.word	0x2403957c
9000fb98:	24039578 	.word	0x24039578
9000fb9c:	240390dc 	.word	0x240390dc
9000fba0:	240390d0 	.word	0x240390d0
9000fba4:	2403954c 	.word	0x2403954c

9000fba8 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000fba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000fbac:	4d41      	ldr	r5, [pc, #260]	; (9000fcb4 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000fbae:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000fbb0:	f7fe fc40 	bl	9000e434 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000fbb4:	682b      	ldr	r3, [r5, #0]
9000fbb6:	3b01      	subs	r3, #1
9000fbb8:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fbba:	682b      	ldr	r3, [r5, #0]
9000fbbc:	2b00      	cmp	r3, #0
9000fbbe:	d161      	bne.n	9000fc84 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000fbc0:	4b3d      	ldr	r3, [pc, #244]	; (9000fcb8 <xTaskResumeAll.part.0+0x110>)
9000fbc2:	681b      	ldr	r3, [r3, #0]
9000fbc4:	2b00      	cmp	r3, #0
9000fbc6:	d05d      	beq.n	9000fc84 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fbc8:	4e3c      	ldr	r6, [pc, #240]	; (9000fcbc <xTaskResumeAll.part.0+0x114>)
9000fbca:	6833      	ldr	r3, [r6, #0]
9000fbcc:	2b00      	cmp	r3, #0
9000fbce:	d06e      	beq.n	9000fcae <xTaskResumeAll.part.0+0x106>
9000fbd0:	4f3b      	ldr	r7, [pc, #236]	; (9000fcc0 <xTaskResumeAll.part.0+0x118>)
9000fbd2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000fcd0 <xTaskResumeAll.part.0+0x128>
9000fbd6:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000fcd4 <xTaskResumeAll.part.0+0x12c>
9000fbda:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000fcd8 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fbde:	68f3      	ldr	r3, [r6, #12]
9000fbe0:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fbe2:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000fbe6:	f104 0018 	add.w	r0, r4, #24
9000fbea:	f7fe fba1 	bl	9000e330 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000fbee:	4658      	mov	r0, fp
9000fbf0:	f7fe fb9e 	bl	9000e330 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000fbf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000fbf6:	683a      	ldr	r2, [r7, #0]
9000fbf8:	4659      	mov	r1, fp
9000fbfa:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000fbfe:	4293      	cmp	r3, r2
9000fc00:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000fc04:	d900      	bls.n	9000fc08 <xTaskResumeAll.part.0+0x60>
9000fc06:	603b      	str	r3, [r7, #0]
9000fc08:	f7fe fb6a 	bl	9000e2e0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000fc0c:	f8d8 3000 	ldr.w	r3, [r8]
9000fc10:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000fc12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000fc14:	429a      	cmp	r2, r3
9000fc16:	d33d      	bcc.n	9000fc94 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000fc18:	2301      	movs	r3, #1
9000fc1a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fc1e:	6833      	ldr	r3, [r6, #0]
9000fc20:	2b00      	cmp	r3, #0
9000fc22:	d1dc      	bne.n	9000fbde <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc24:	4b27      	ldr	r3, [pc, #156]	; (9000fcc4 <xTaskResumeAll.part.0+0x11c>)
9000fc26:	681a      	ldr	r2, [r3, #0]
9000fc28:	6812      	ldr	r2, [r2, #0]
9000fc2a:	2a00      	cmp	r2, #0
9000fc2c:	d03a      	beq.n	9000fca4 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fc2e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fc30:	4b25      	ldr	r3, [pc, #148]	; (9000fcc8 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fc32:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000fc34:	68d2      	ldr	r2, [r2, #12]
9000fc36:	6852      	ldr	r2, [r2, #4]
9000fc38:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000fc3a:	4e24      	ldr	r6, [pc, #144]	; (9000fccc <xTaskResumeAll.part.0+0x124>)
9000fc3c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000fc3e:	b194      	cbz	r4, 9000fc66 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000fc40:	2701      	movs	r7, #1
9000fc42:	e006      	b.n	9000fc52 <xTaskResumeAll.part.0+0xaa>
9000fc44:	f7ff ff08 	bl	9000fa58 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000fc48:	b108      	cbz	r0, 9000fc4e <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000fc4a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fc4e:	3c01      	subs	r4, #1
9000fc50:	d008      	beq.n	9000fc64 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fc52:	682b      	ldr	r3, [r5, #0]
9000fc54:	2b00      	cmp	r3, #0
9000fc56:	d0f5      	beq.n	9000fc44 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000fc58:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fc5a:	3c01      	subs	r4, #1
		++xPendedTicks;
9000fc5c:	f103 0301 	add.w	r3, r3, #1
9000fc60:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000fc62:	d1f6      	bne.n	9000fc52 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000fc64:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000fc66:	f8da 3000 	ldr.w	r3, [sl]
9000fc6a:	b15b      	cbz	r3, 9000fc84 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000fc6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fc70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fc74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fc78:	f3bf 8f4f 	dsb	sy
9000fc7c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000fc80:	2001      	movs	r0, #1
9000fc82:	e000      	b.n	9000fc86 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000fc84:	2000      	movs	r0, #0
9000fc86:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000fc88:	f7fe fbf6 	bl	9000e478 <vPortExitCritical>
}
9000fc8c:	9801      	ldr	r0, [sp, #4]
9000fc8e:	b003      	add	sp, #12
9000fc90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000fc94:	6833      	ldr	r3, [r6, #0]
9000fc96:	2b00      	cmp	r3, #0
9000fc98:	d1a1      	bne.n	9000fbde <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000fc9a:	4b0a      	ldr	r3, [pc, #40]	; (9000fcc4 <xTaskResumeAll.part.0+0x11c>)
9000fc9c:	681a      	ldr	r2, [r3, #0]
9000fc9e:	6812      	ldr	r2, [r2, #0]
9000fca0:	2a00      	cmp	r2, #0
9000fca2:	d1c4      	bne.n	9000fc2e <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000fca4:	4b08      	ldr	r3, [pc, #32]	; (9000fcc8 <xTaskResumeAll.part.0+0x120>)
9000fca6:	f04f 32ff 	mov.w	r2, #4294967295
9000fcaa:	601a      	str	r2, [r3, #0]
9000fcac:	e7c5      	b.n	9000fc3a <xTaskResumeAll.part.0+0x92>
9000fcae:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000fcd8 <xTaskResumeAll.part.0+0x130>
9000fcb2:	e7c2      	b.n	9000fc3a <xTaskResumeAll.part.0+0x92>
9000fcb4:	24039544 	.word	0x24039544
9000fcb8:	2403953c 	.word	0x2403953c
9000fcbc:	24039584 	.word	0x24039584
9000fcc0:	2403954c 	.word	0x2403954c
9000fcc4:	240390d4 	.word	0x240390d4
9000fcc8:	24039578 	.word	0x24039578
9000fccc:	24039580 	.word	0x24039580
9000fcd0:	240390dc 	.word	0x240390dc
9000fcd4:	240390d0 	.word	0x240390d0
9000fcd8:	240395c8 	.word	0x240395c8

9000fcdc <xTaskCreateStatic>:
	{
9000fcdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000fce0:	b083      	sub	sp, #12
9000fce2:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000fce4:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000fce8:	b1bb      	cbz	r3, 9000fd1a <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000fcea:	b16c      	cbz	r4, 9000fd08 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000fcec:	2360      	movs	r3, #96	; 0x60
9000fcee:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000fcf0:	9b01      	ldr	r3, [sp, #4]
9000fcf2:	2b60      	cmp	r3, #96	; 0x60
9000fcf4:	d01a      	beq.n	9000fd2c <xTaskCreateStatic+0x50>
9000fcf6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fcfa:	f383 8811 	msr	BASEPRI, r3
9000fcfe:	f3bf 8f6f 	isb	sy
9000fd02:	f3bf 8f4f 	dsb	sy
9000fd06:	e7fe      	b.n	9000fd06 <xTaskCreateStatic+0x2a>
9000fd08:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd0c:	f383 8811 	msr	BASEPRI, r3
9000fd10:	f3bf 8f6f 	isb	sy
9000fd14:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000fd18:	e7fe      	b.n	9000fd18 <xTaskCreateStatic+0x3c>
9000fd1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd1e:	f383 8811 	msr	BASEPRI, r3
9000fd22:	f3bf 8f6f 	isb	sy
9000fd26:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000fd2a:	e7fe      	b.n	9000fd2a <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000fd2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fd2e:	0096      	lsls	r6, r2, #2
9000fd30:	4607      	mov	r7, r0
9000fd32:	460d      	mov	r5, r1
9000fd34:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000fd36:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000fd38:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000fd3a:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fd3c:	4632      	mov	r2, r6
9000fd3e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000fd40:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fd44:	f017 fea2 	bl	90027a8c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fd48:	1f32      	subs	r2, r6, #4
9000fd4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000fd4c:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000fd4e:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000fd52:	2d00      	cmp	r5, #0
9000fd54:	d069      	beq.n	9000fe2a <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd56:	782b      	ldrb	r3, [r5, #0]
9000fd58:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000fd5c:	2b00      	cmp	r3, #0
9000fd5e:	d03b      	beq.n	9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd60:	786b      	ldrb	r3, [r5, #1]
9000fd62:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fd66:	2b00      	cmp	r3, #0
9000fd68:	d036      	beq.n	9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd6a:	78ab      	ldrb	r3, [r5, #2]
9000fd6c:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fd70:	b393      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd72:	78eb      	ldrb	r3, [r5, #3]
9000fd74:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fd78:	b373      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd7a:	792b      	ldrb	r3, [r5, #4]
9000fd7c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fd80:	b353      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd82:	796b      	ldrb	r3, [r5, #5]
9000fd84:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000fd88:	b333      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd8a:	79ab      	ldrb	r3, [r5, #6]
9000fd8c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000fd90:	b313      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd92:	79eb      	ldrb	r3, [r5, #7]
9000fd94:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000fd98:	b1f3      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fd9a:	7a2b      	ldrb	r3, [r5, #8]
9000fd9c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000fda0:	b1d3      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fda2:	7a6b      	ldrb	r3, [r5, #9]
9000fda4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000fda8:	b1b3      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdaa:	7aab      	ldrb	r3, [r5, #10]
9000fdac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000fdb0:	b193      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdb2:	7aeb      	ldrb	r3, [r5, #11]
9000fdb4:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fdb8:	b173      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdba:	7b2b      	ldrb	r3, [r5, #12]
9000fdbc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000fdc0:	b153      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdc2:	7b6b      	ldrb	r3, [r5, #13]
9000fdc4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fdc8:	b133      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdca:	7bab      	ldrb	r3, [r5, #14]
9000fdcc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000fdd0:	b113      	cbz	r3, 9000fdd8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fdd2:	7beb      	ldrb	r3, [r5, #15]
9000fdd4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fdd8:	2300      	movs	r3, #0
9000fdda:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fdde:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000fde0:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fde2:	1d20      	adds	r0, r4, #4
9000fde4:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000fde6:	6526      	str	r6, [r4, #80]	; 0x50
9000fde8:	bf28      	it	cs
9000fdea:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000fdec:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000fdee:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fdf0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fdf4:	f7fe fa70 	bl	9000e2d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000fdf8:	f104 0018 	add.w	r0, r4, #24
9000fdfc:	f7fe fa6c 	bl	9000e2d8 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fe00:	4642      	mov	r2, r8
9000fe02:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000fe04:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fe06:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fe08:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000fe0a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000fe0c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000fe0e:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000fe10:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fe14:	f7fe fade 	bl	9000e3d4 <pxPortInitialiseStack>
9000fe18:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000fe1a:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000fe1c:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000fe1e:	f7ff fd45 	bl	9000f8ac <prvAddNewTaskToReadyList>
	}
9000fe22:	4620      	mov	r0, r4
9000fe24:	b003      	add	sp, #12
9000fe26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000fe2a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000fe2e:	e7d6      	b.n	9000fdde <xTaskCreateStatic+0x102>

9000fe30 <xTaskCreate>:
	{
9000fe30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000fe34:	0096      	lsls	r6, r2, #2
	{
9000fe36:	4680      	mov	r8, r0
9000fe38:	460d      	mov	r5, r1
9000fe3a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000fe3c:	4630      	mov	r0, r6
9000fe3e:	f7fe f91d 	bl	9000e07c <pvPortMalloc>
			if( pxStack != NULL )
9000fe42:	2800      	cmp	r0, #0
9000fe44:	f000 8083 	beq.w	9000ff4e <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000fe48:	4607      	mov	r7, r0
9000fe4a:	2060      	movs	r0, #96	; 0x60
9000fe4c:	f7fe f916 	bl	9000e07c <pvPortMalloc>
				if( pxNewTCB != NULL )
9000fe50:	4604      	mov	r4, r0
9000fe52:	2800      	cmp	r0, #0
9000fe54:	d07f      	beq.n	9000ff56 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000fe56:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000fe58:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fe5a:	4632      	mov	r2, r6
9000fe5c:	4638      	mov	r0, r7
9000fe5e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000fe60:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000fe64:	f017 fe12 	bl	90027a8c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fe68:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000fe6c:	2d00      	cmp	r5, #0
9000fe6e:	d078      	beq.n	9000ff62 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe70:	782b      	ldrb	r3, [r5, #0]
9000fe72:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000fe76:	2b00      	cmp	r3, #0
9000fe78:	d03b      	beq.n	9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe7a:	786b      	ldrb	r3, [r5, #1]
9000fe7c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000fe80:	2b00      	cmp	r3, #0
9000fe82:	d036      	beq.n	9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe84:	78ab      	ldrb	r3, [r5, #2]
9000fe86:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000fe8a:	b393      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe8c:	78eb      	ldrb	r3, [r5, #3]
9000fe8e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000fe92:	b373      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe94:	792b      	ldrb	r3, [r5, #4]
9000fe96:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000fe9a:	b353      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fe9c:	796b      	ldrb	r3, [r5, #5]
9000fe9e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000fea2:	b333      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fea4:	79ab      	ldrb	r3, [r5, #6]
9000fea6:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000feaa:	b313      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000feac:	79eb      	ldrb	r3, [r5, #7]
9000feae:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000feb2:	b1f3      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000feb4:	7a2b      	ldrb	r3, [r5, #8]
9000feb6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000feba:	b1d3      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000febc:	7a6b      	ldrb	r3, [r5, #9]
9000febe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000fec2:	b1b3      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fec4:	7aab      	ldrb	r3, [r5, #10]
9000fec6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000feca:	b193      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fecc:	7aeb      	ldrb	r3, [r5, #11]
9000fece:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000fed2:	b173      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fed4:	7b2b      	ldrb	r3, [r5, #12]
9000fed6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000feda:	b153      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fedc:	7b6b      	ldrb	r3, [r5, #13]
9000fede:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000fee2:	b133      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000fee4:	7bab      	ldrb	r3, [r5, #14]
9000fee6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000feea:	b113      	cbz	r3, 9000fef2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000feec:	7beb      	ldrb	r3, [r5, #15]
9000feee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000fef2:	2300      	movs	r3, #0
9000fef4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000fef8:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000fefa:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000fefc:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000fefe:	3e04      	subs	r6, #4
9000ff00:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000ff02:	6527      	str	r7, [r4, #80]	; 0x50
9000ff04:	bf28      	it	cs
9000ff06:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ff08:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ff0a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ff0c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ff10:	f7fe f9e2 	bl	9000e2d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ff14:	f104 0018 	add.w	r0, r4, #24
9000ff18:	f7fe f9de 	bl	9000e2d8 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ff1c:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
9000ff20:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ff22:	464a      	mov	r2, r9
9000ff24:	4641      	mov	r1, r8
9000ff26:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ff2a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ff2c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ff2e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ff30:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ff32:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ff36:	f7fe fa4d 	bl	9000e3d4 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000ff3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ff3c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000ff3e:	b103      	cbz	r3, 9000ff42 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000ff40:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ff42:	4620      	mov	r0, r4
9000ff44:	f7ff fcb2 	bl	9000f8ac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000ff48:	2001      	movs	r0, #1
	}
9000ff4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000ff4e:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000ff52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
9000ff56:	4638      	mov	r0, r7
9000ff58:	f7fe f94e 	bl	9000e1f8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000ff5c:	f04f 30ff 	mov.w	r0, #4294967295
9000ff60:	e7f3      	b.n	9000ff4a <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000ff62:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000ff66:	e7c7      	b.n	9000fef8 <xTaskCreate+0xc8>

9000ff68 <vTaskDelay>:
	{
9000ff68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000ff6a:	b950      	cbnz	r0, 9000ff82 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000ff6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ff70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ff74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ff78:	f3bf 8f4f 	dsb	sy
9000ff7c:	f3bf 8f6f 	isb	sy
	}
9000ff80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000ff82:	4d1e      	ldr	r5, [pc, #120]	; (9000fffc <vTaskDelay+0x94>)
9000ff84:	682b      	ldr	r3, [r5, #0]
9000ff86:	b143      	cbz	r3, 9000ff9a <vTaskDelay+0x32>
9000ff88:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ff8c:	f383 8811 	msr	BASEPRI, r3
9000ff90:	f3bf 8f6f 	isb	sy
9000ff94:	f3bf 8f4f 	dsb	sy
9000ff98:	e7fe      	b.n	9000ff98 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000ff9a:	682b      	ldr	r3, [r5, #0]
9000ff9c:	4604      	mov	r4, r0
9000ff9e:	3301      	adds	r3, #1
9000ffa0:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000ffa2:	4b17      	ldr	r3, [pc, #92]	; (90010000 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ffa4:	4e17      	ldr	r6, [pc, #92]	; (90010004 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000ffa6:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000ffa8:	6830      	ldr	r0, [r6, #0]
9000ffaa:	3004      	adds	r0, #4
9000ffac:	f7fe f9c0 	bl	9000e330 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000ffb0:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000ffb2:	6833      	ldr	r3, [r6, #0]
9000ffb4:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000ffb6:	d315      	bcc.n	9000ffe4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ffb8:	4b13      	ldr	r3, [pc, #76]	; (90010008 <vTaskDelay+0xa0>)
9000ffba:	6818      	ldr	r0, [r3, #0]
9000ffbc:	6831      	ldr	r1, [r6, #0]
9000ffbe:	3104      	adds	r1, #4
9000ffc0:	f7fe f99e 	bl	9000e300 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000ffc4:	682b      	ldr	r3, [r5, #0]
9000ffc6:	b943      	cbnz	r3, 9000ffda <vTaskDelay+0x72>
9000ffc8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ffcc:	f383 8811 	msr	BASEPRI, r3
9000ffd0:	f3bf 8f6f 	isb	sy
9000ffd4:	f3bf 8f4f 	dsb	sy
9000ffd8:	e7fe      	b.n	9000ffd8 <vTaskDelay+0x70>
9000ffda:	f7ff fde5 	bl	9000fba8 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000ffde:	2800      	cmp	r0, #0
9000ffe0:	d0c4      	beq.n	9000ff6c <vTaskDelay+0x4>
	}
9000ffe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000ffe4:	4b09      	ldr	r3, [pc, #36]	; (9001000c <vTaskDelay+0xa4>)
9000ffe6:	6818      	ldr	r0, [r3, #0]
9000ffe8:	6831      	ldr	r1, [r6, #0]
9000ffea:	3104      	adds	r1, #4
9000ffec:	f7fe f988 	bl	9000e300 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000fff0:	4b07      	ldr	r3, [pc, #28]	; (90010010 <vTaskDelay+0xa8>)
9000fff2:	681a      	ldr	r2, [r3, #0]
9000fff4:	4294      	cmp	r4, r2
9000fff6:	d2e5      	bcs.n	9000ffc4 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000fff8:	601c      	str	r4, [r3, #0]
9000fffa:	e7e3      	b.n	9000ffc4 <vTaskDelay+0x5c>
9000fffc:	24039544 	.word	0x24039544
90010000:	240395c4 	.word	0x240395c4
90010004:	240390d0 	.word	0x240390d0
90010008:	240390d8 	.word	0x240390d8
9001000c:	240390d4 	.word	0x240390d4
90010010:	24039578 	.word	0x24039578

90010014 <vTaskStartScheduler>:
{
90010014:	b570      	push	{r4, r5, r6, lr}
90010016:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90010018:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001001a:	4668      	mov	r0, sp
9001001c:	aa02      	add	r2, sp, #8
9001001e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90010020:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90010024:	f7fe f80c 	bl	9000e040 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90010028:	9d00      	ldr	r5, [sp, #0]
9001002a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9001002e:	b1b8      	cbz	r0, 90010060 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90010030:	b16d      	cbz	r5, 9001004e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90010032:	2260      	movs	r2, #96	; 0x60
90010034:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90010036:	9a03      	ldr	r2, [sp, #12]
90010038:	2a60      	cmp	r2, #96	; 0x60
9001003a:	d01a      	beq.n	90010072 <vTaskStartScheduler+0x5e>
9001003c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010040:	f383 8811 	msr	BASEPRI, r3
90010044:	f3bf 8f6f 	isb	sy
90010048:	f3bf 8f4f 	dsb	sy
9001004c:	e7fe      	b.n	9001004c <vTaskStartScheduler+0x38>
9001004e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010052:	f383 8811 	msr	BASEPRI, r3
90010056:	f3bf 8f6f 	isb	sy
9001005a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001005e:	e7fe      	b.n	9001005e <vTaskStartScheduler+0x4a>
90010060:	f04f 0350 	mov.w	r3, #80	; 0x50
90010064:	f383 8811 	msr	BASEPRI, r3
90010068:	f3bf 8f6f 	isb	sy
9001006c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010070:	e7fe      	b.n	90010070 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010072:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010074:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010076:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010078:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001007a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001007c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010080:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010082:	f017 fd03 	bl	90027a8c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010086:	1f33      	subs	r3, r6, #4
90010088:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001008a:	492a      	ldr	r1, [pc, #168]	; (90010134 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001008c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001008e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010090:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90010094:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010096:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001009a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001009e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
900100a0:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900100a4:	f7fe f918 	bl	9000e2d8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900100a8:	f105 0018 	add.w	r0, r5, #24
900100ac:	f7fe f914 	bl	9000e2d8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900100b0:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100b2:	4622      	mov	r2, r4
900100b4:	4920      	ldr	r1, [pc, #128]	; (90010138 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
900100b6:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100b8:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900100ba:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900100bc:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900100be:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
900100c0:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900100c2:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100c6:	f7fe f985 	bl	9000e3d4 <pxPortInitialiseStack>
900100ca:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900100cc:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900100ce:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900100d0:	f7ff fbec 	bl	9000f8ac <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
900100d4:	f000 fca4 	bl	90010a20 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900100d8:	2801      	cmp	r0, #1
900100da:	d00c      	beq.n	900100f6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900100dc:	3001      	adds	r0, #1
900100de:	d001      	beq.n	900100e4 <vTaskStartScheduler+0xd0>
}
900100e0:	b004      	add	sp, #16
900100e2:	bd70      	pop	{r4, r5, r6, pc}
900100e4:	f04f 0350 	mov.w	r3, #80	; 0x50
900100e8:	f383 8811 	msr	BASEPRI, r3
900100ec:	f3bf 8f6f 	isb	sy
900100f0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900100f4:	e7fe      	b.n	900100f4 <vTaskStartScheduler+0xe0>
900100f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900100fa:	f383 8811 	msr	BASEPRI, r3
900100fe:	f3bf 8f6f 	isb	sy
90010102:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90010106:	4b0d      	ldr	r3, [pc, #52]	; (9001013c <vTaskStartScheduler+0x128>)
90010108:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9001010c:	490c      	ldr	r1, [pc, #48]	; (90010140 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9001010e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010110:	4b0c      	ldr	r3, [pc, #48]	; (90010144 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90010112:	4a0d      	ldr	r2, [pc, #52]	; (90010148 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90010114:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010116:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90010118:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001011a:	b143      	cbz	r3, 9001012e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9001011c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001011e:	b10b      	cbz	r3, 90010124 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010120:	2000      	movs	r0, #0
90010122:	4798      	blx	r3
}
90010124:	b004      	add	sp, #16
90010126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9001012a:	f7fe ba15 	b.w	9000e558 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9001012e:	6813      	ldr	r3, [r2, #0]
90010130:	e7f4      	b.n	9001011c <vTaskStartScheduler+0x108>
90010132:	bf00      	nop
90010134:	454c4449 	.word	0x454c4449
90010138:	9000f9bd 	.word	0x9000f9bd
9001013c:	24039578 	.word	0x24039578
90010140:	24039598 	.word	0x24039598
90010144:	240395c4 	.word	0x240395c4
90010148:	240390d0 	.word	0x240390d0

9001014c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9001014c:	4a02      	ldr	r2, [pc, #8]	; (90010158 <vTaskSuspendAll+0xc>)
9001014e:	6813      	ldr	r3, [r2, #0]
90010150:	3301      	adds	r3, #1
90010152:	6013      	str	r3, [r2, #0]
}
90010154:	4770      	bx	lr
90010156:	bf00      	nop
90010158:	24039544 	.word	0x24039544

9001015c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9001015c:	4b06      	ldr	r3, [pc, #24]	; (90010178 <xTaskResumeAll+0x1c>)
9001015e:	681b      	ldr	r3, [r3, #0]
90010160:	b943      	cbnz	r3, 90010174 <xTaskResumeAll+0x18>
90010162:	f04f 0350 	mov.w	r3, #80	; 0x50
90010166:	f383 8811 	msr	BASEPRI, r3
9001016a:	f3bf 8f6f 	isb	sy
9001016e:	f3bf 8f4f 	dsb	sy
90010172:	e7fe      	b.n	90010172 <xTaskResumeAll+0x16>
90010174:	f7ff bd18 	b.w	9000fba8 <xTaskResumeAll.part.0>
90010178:	24039544 	.word	0x24039544

9001017c <xTaskGetTickCount>:
		xTicks = xTickCount;
9001017c:	4b01      	ldr	r3, [pc, #4]	; (90010184 <xTaskGetTickCount+0x8>)
9001017e:	6818      	ldr	r0, [r3, #0]
}
90010180:	4770      	bx	lr
90010182:	bf00      	nop
90010184:	240395c4 	.word	0x240395c4

90010188 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010188:	4b05      	ldr	r3, [pc, #20]	; (900101a0 <xTaskIncrementTick+0x18>)
9001018a:	681b      	ldr	r3, [r3, #0]
9001018c:	b90b      	cbnz	r3, 90010192 <xTaskIncrementTick+0xa>
9001018e:	f7ff bc63 	b.w	9000fa58 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010192:	4a04      	ldr	r2, [pc, #16]	; (900101a4 <xTaskIncrementTick+0x1c>)
}
90010194:	2000      	movs	r0, #0
		++xPendedTicks;
90010196:	6813      	ldr	r3, [r2, #0]
90010198:	3301      	adds	r3, #1
9001019a:	6013      	str	r3, [r2, #0]
}
9001019c:	4770      	bx	lr
9001019e:	bf00      	nop
900101a0:	24039544 	.word	0x24039544
900101a4:	24039580 	.word	0x24039580

900101a8 <vTaskSetApplicationTaskTag>:
	{
900101a8:	b538      	push	{r3, r4, r5, lr}
900101aa:	460d      	mov	r5, r1
		if( xTask == NULL )
900101ac:	b138      	cbz	r0, 900101be <vTaskSetApplicationTaskTag+0x16>
900101ae:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900101b0:	f7fe f940 	bl	9000e434 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900101b4:	6565      	str	r5, [r4, #84]	; 0x54
	}
900101b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900101ba:	f7fe b95d 	b.w	9000e478 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900101be:	4b04      	ldr	r3, [pc, #16]	; (900101d0 <vTaskSetApplicationTaskTag+0x28>)
900101c0:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900101c2:	f7fe f937 	bl	9000e434 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900101c6:	6565      	str	r5, [r4, #84]	; 0x54
	}
900101c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900101cc:	f7fe b954 	b.w	9000e478 <vPortExitCritical>
900101d0:	240390d0 	.word	0x240390d0

900101d4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900101d4:	4b27      	ldr	r3, [pc, #156]	; (90010274 <vTaskSwitchContext+0xa0>)
900101d6:	681b      	ldr	r3, [r3, #0]
900101d8:	b11b      	cbz	r3, 900101e2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
900101da:	4b27      	ldr	r3, [pc, #156]	; (90010278 <vTaskSwitchContext+0xa4>)
900101dc:	2201      	movs	r2, #1
900101de:	601a      	str	r2, [r3, #0]
900101e0:	4770      	bx	lr
{
900101e2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
900101e4:	4a24      	ldr	r2, [pc, #144]	; (90010278 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
900101e6:	4c25      	ldr	r4, [pc, #148]	; (9001027c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
900101e8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900101ea:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900101ec:	2b00      	cmp	r3, #0
900101ee:	d036      	beq.n	9001025e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
900101f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900101f2:	b10b      	cbz	r3, 900101f8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900101f4:	2001      	movs	r0, #1
900101f6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900101f8:	4d21      	ldr	r5, [pc, #132]	; (90010280 <vTaskSwitchContext+0xac>)
900101fa:	4922      	ldr	r1, [pc, #136]	; (90010284 <vTaskSwitchContext+0xb0>)
900101fc:	682b      	ldr	r3, [r5, #0]
900101fe:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010202:	0098      	lsls	r0, r3, #2
90010204:	0092      	lsls	r2, r2, #2
90010206:	588a      	ldr	r2, [r1, r2]
90010208:	b942      	cbnz	r2, 9001021c <vTaskSwitchContext+0x48>
9001020a:	b1fb      	cbz	r3, 9001024c <vTaskSwitchContext+0x78>
9001020c:	3b01      	subs	r3, #1
9001020e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010212:	0098      	lsls	r0, r3, #2
90010214:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90010218:	2a00      	cmp	r2, #0
9001021a:	d0f6      	beq.n	9001020a <vTaskSwitchContext+0x36>
9001021c:	4418      	add	r0, r3
9001021e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010222:	f8dc 1004 	ldr.w	r1, [ip, #4]
90010226:	4662      	mov	r2, ip
90010228:	6849      	ldr	r1, [r1, #4]
9001022a:	3208      	adds	r2, #8
9001022c:	4291      	cmp	r1, r2
9001022e:	f8cc 1004 	str.w	r1, [ip, #4]
90010232:	d01b      	beq.n	9001026c <vTaskSwitchContext+0x98>
90010234:	68ca      	ldr	r2, [r1, #12]
90010236:	6022      	str	r2, [r4, #0]
90010238:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001023a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001023c:	b1a3      	cbz	r3, 90010268 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9001023e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010240:	b11b      	cbz	r3, 9001024a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010242:	2000      	movs	r0, #0
}
90010244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90010248:	4718      	bx	r3
}
9001024a:	bd70      	pop	{r4, r5, r6, pc}
9001024c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010250:	f383 8811 	msr	BASEPRI, r3
90010254:	f3bf 8f6f 	isb	sy
90010258:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001025c:	e7fe      	b.n	9001025c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9001025e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90010260:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010262:	2b00      	cmp	r3, #0
90010264:	d1c6      	bne.n	900101f4 <vTaskSwitchContext+0x20>
90010266:	e7c7      	b.n	900101f8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90010268:	6823      	ldr	r3, [r4, #0]
9001026a:	e7e8      	b.n	9001023e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001026c:	6849      	ldr	r1, [r1, #4]
9001026e:	f8cc 1004 	str.w	r1, [ip, #4]
90010272:	e7df      	b.n	90010234 <vTaskSwitchContext+0x60>
90010274:	24039544 	.word	0x24039544
90010278:	240395c8 	.word	0x240395c8
9001027c:	240390d0 	.word	0x240390d0
90010280:	2403954c 	.word	0x2403954c
90010284:	240390dc 	.word	0x240390dc

90010288 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90010288:	b1f0      	cbz	r0, 900102c8 <vTaskPlaceOnEventList+0x40>
{
9001028a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9001028c:	4d1a      	ldr	r5, [pc, #104]	; (900102f8 <vTaskPlaceOnEventList+0x70>)
9001028e:	460c      	mov	r4, r1
90010290:	6829      	ldr	r1, [r5, #0]
90010292:	3118      	adds	r1, #24
90010294:	f7fe f834 	bl	9000e300 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90010298:	4b18      	ldr	r3, [pc, #96]	; (900102fc <vTaskPlaceOnEventList+0x74>)
9001029a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001029c:	6828      	ldr	r0, [r5, #0]
9001029e:	3004      	adds	r0, #4
900102a0:	f7fe f846 	bl	9000e330 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900102a4:	1c63      	adds	r3, r4, #1
900102a6:	d020      	beq.n	900102ea <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900102a8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900102aa:	682b      	ldr	r3, [r5, #0]
900102ac:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900102ae:	d214      	bcs.n	900102da <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900102b0:	4b13      	ldr	r3, [pc, #76]	; (90010300 <vTaskPlaceOnEventList+0x78>)
900102b2:	6818      	ldr	r0, [r3, #0]
900102b4:	6829      	ldr	r1, [r5, #0]
900102b6:	3104      	adds	r1, #4
900102b8:	f7fe f822 	bl	9000e300 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900102bc:	4b11      	ldr	r3, [pc, #68]	; (90010304 <vTaskPlaceOnEventList+0x7c>)
900102be:	681a      	ldr	r2, [r3, #0]
900102c0:	4294      	cmp	r4, r2
900102c2:	d200      	bcs.n	900102c6 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900102c4:	601c      	str	r4, [r3, #0]
}
900102c6:	bd70      	pop	{r4, r5, r6, pc}
900102c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900102cc:	f383 8811 	msr	BASEPRI, r3
900102d0:	f3bf 8f6f 	isb	sy
900102d4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900102d8:	e7fe      	b.n	900102d8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900102da:	4b0b      	ldr	r3, [pc, #44]	; (90010308 <vTaskPlaceOnEventList+0x80>)
900102dc:	6818      	ldr	r0, [r3, #0]
900102de:	6829      	ldr	r1, [r5, #0]
}
900102e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900102e4:	3104      	adds	r1, #4
900102e6:	f7fe b80b 	b.w	9000e300 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900102ea:	6829      	ldr	r1, [r5, #0]
900102ec:	4807      	ldr	r0, [pc, #28]	; (9001030c <vTaskPlaceOnEventList+0x84>)
900102ee:	3104      	adds	r1, #4
}
900102f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900102f4:	f7fd bff4 	b.w	9000e2e0 <vListInsertEnd>
900102f8:	240390d0 	.word	0x240390d0
900102fc:	240395c4 	.word	0x240395c4
90010300:	240390d4 	.word	0x240390d4
90010304:	24039578 	.word	0x24039578
90010308:	240390d8 	.word	0x240390d8
9001030c:	2403959c 	.word	0x2403959c

90010310 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90010310:	b358      	cbz	r0, 9001036a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90010312:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010314:	4e1d      	ldr	r6, [pc, #116]	; (9001038c <vTaskPlaceOnEventListRestricted+0x7c>)
90010316:	460c      	mov	r4, r1
90010318:	4615      	mov	r5, r2
9001031a:	6831      	ldr	r1, [r6, #0]
9001031c:	3118      	adds	r1, #24
9001031e:	f7fd ffdf 	bl	9000e2e0 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90010322:	b165      	cbz	r5, 9001033e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010324:	4b1a      	ldr	r3, [pc, #104]	; (90010390 <vTaskPlaceOnEventListRestricted+0x80>)
90010326:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010328:	6830      	ldr	r0, [r6, #0]
9001032a:	3004      	adds	r0, #4
9001032c:	f7fe f800 	bl	9000e330 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010330:	6831      	ldr	r1, [r6, #0]
90010332:	4818      	ldr	r0, [pc, #96]	; (90010394 <vTaskPlaceOnEventListRestricted+0x84>)
90010334:	3104      	adds	r1, #4
	}
90010336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001033a:	f7fd bfd1 	b.w	9000e2e0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001033e:	4b14      	ldr	r3, [pc, #80]	; (90010390 <vTaskPlaceOnEventListRestricted+0x80>)
90010340:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010342:	6830      	ldr	r0, [r6, #0]
90010344:	3004      	adds	r0, #4
90010346:	f7fd fff3 	bl	9000e330 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001034a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001034c:	6833      	ldr	r3, [r6, #0]
9001034e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010350:	d214      	bcs.n	9001037c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010352:	4b11      	ldr	r3, [pc, #68]	; (90010398 <vTaskPlaceOnEventListRestricted+0x88>)
90010354:	6818      	ldr	r0, [r3, #0]
90010356:	6831      	ldr	r1, [r6, #0]
90010358:	3104      	adds	r1, #4
9001035a:	f7fd ffd1 	bl	9000e300 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001035e:	4b0f      	ldr	r3, [pc, #60]	; (9001039c <vTaskPlaceOnEventListRestricted+0x8c>)
90010360:	681a      	ldr	r2, [r3, #0]
90010362:	4294      	cmp	r4, r2
90010364:	d200      	bcs.n	90010368 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90010366:	601c      	str	r4, [r3, #0]
	}
90010368:	bd70      	pop	{r4, r5, r6, pc}
9001036a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001036e:	f383 8811 	msr	BASEPRI, r3
90010372:	f3bf 8f6f 	isb	sy
90010376:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001037a:	e7fe      	b.n	9001037a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001037c:	4b08      	ldr	r3, [pc, #32]	; (900103a0 <vTaskPlaceOnEventListRestricted+0x90>)
9001037e:	6818      	ldr	r0, [r3, #0]
90010380:	6831      	ldr	r1, [r6, #0]
	}
90010382:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010386:	3104      	adds	r1, #4
90010388:	f7fd bfba 	b.w	9000e300 <vListInsert>
9001038c:	240390d0 	.word	0x240390d0
90010390:	240395c4 	.word	0x240395c4
90010394:	2403959c 	.word	0x2403959c
90010398:	240390d4 	.word	0x240390d4
9001039c:	24039578 	.word	0x24039578
900103a0:	240390d8 	.word	0x240390d8

900103a4 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900103a4:	68c3      	ldr	r3, [r0, #12]
{
900103a6:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900103a8:	68dc      	ldr	r4, [r3, #12]
{
900103aa:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
900103ac:	b35c      	cbz	r4, 90010406 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900103ae:	f104 0518 	add.w	r5, r4, #24
900103b2:	4628      	mov	r0, r5
900103b4:	f7fd ffbc 	bl	9000e330 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900103b8:	4b19      	ldr	r3, [pc, #100]	; (90010420 <xTaskRemoveFromEventList+0x7c>)
900103ba:	681b      	ldr	r3, [r3, #0]
900103bc:	b17b      	cbz	r3, 900103de <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900103be:	4629      	mov	r1, r5
900103c0:	4818      	ldr	r0, [pc, #96]	; (90010424 <xTaskRemoveFromEventList+0x80>)
900103c2:	f7fd ff8d 	bl	9000e2e0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900103c6:	4b18      	ldr	r3, [pc, #96]	; (90010428 <xTaskRemoveFromEventList+0x84>)
900103c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900103ca:	681b      	ldr	r3, [r3, #0]
900103cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900103ce:	429a      	cmp	r2, r3
900103d0:	d922      	bls.n	90010418 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900103d2:	2301      	movs	r3, #1
900103d4:	4a15      	ldr	r2, [pc, #84]	; (9001042c <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900103d6:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900103d8:	6013      	str	r3, [r2, #0]
}
900103da:	b003      	add	sp, #12
900103dc:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900103de:	1d21      	adds	r1, r4, #4
900103e0:	4608      	mov	r0, r1
900103e2:	9101      	str	r1, [sp, #4]
900103e4:	f7fd ffa4 	bl	9000e330 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900103e8:	4a11      	ldr	r2, [pc, #68]	; (90010430 <xTaskRemoveFromEventList+0x8c>)
900103ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900103ec:	6810      	ldr	r0, [r2, #0]
900103ee:	9901      	ldr	r1, [sp, #4]
900103f0:	4283      	cmp	r3, r0
900103f2:	d900      	bls.n	900103f6 <xTaskRemoveFromEventList+0x52>
900103f4:	6013      	str	r3, [r2, #0]
900103f6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900103fa:	480e      	ldr	r0, [pc, #56]	; (90010434 <xTaskRemoveFromEventList+0x90>)
900103fc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90010400:	f7fd ff6e 	bl	9000e2e0 <vListInsertEnd>
90010404:	e7df      	b.n	900103c6 <xTaskRemoveFromEventList+0x22>
90010406:	f04f 0350 	mov.w	r3, #80	; 0x50
9001040a:	f383 8811 	msr	BASEPRI, r3
9001040e:	f3bf 8f6f 	isb	sy
90010412:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90010416:	e7fe      	b.n	90010416 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90010418:	2000      	movs	r0, #0
}
9001041a:	b003      	add	sp, #12
9001041c:	bd30      	pop	{r4, r5, pc}
9001041e:	bf00      	nop
90010420:	24039544 	.word	0x24039544
90010424:	24039584 	.word	0x24039584
90010428:	240390d0 	.word	0x240390d0
9001042c:	240395c8 	.word	0x240395c8
90010430:	2403954c 	.word	0x2403954c
90010434:	240390dc 	.word	0x240390dc

90010438 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010438:	4a03      	ldr	r2, [pc, #12]	; (90010448 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001043a:	4b04      	ldr	r3, [pc, #16]	; (9001044c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001043c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001043e:	681b      	ldr	r3, [r3, #0]
90010440:	e9c0 2300 	strd	r2, r3, [r0]
}
90010444:	4770      	bx	lr
90010446:	bf00      	nop
90010448:	2403957c 	.word	0x2403957c
9001044c:	240395c4 	.word	0x240395c4

90010450 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90010450:	b328      	cbz	r0, 9001049e <xTaskCheckForTimeOut+0x4e>
{
90010452:	b5f0      	push	{r4, r5, r6, r7, lr}
90010454:	460d      	mov	r5, r1
90010456:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90010458:	b1c1      	cbz	r1, 9001048c <xTaskCheckForTimeOut+0x3c>
9001045a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001045c:	f7fd ffea 	bl	9000e434 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90010460:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90010462:	4a1d      	ldr	r2, [pc, #116]	; (900104d8 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90010464:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010466:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90010468:	d030      	beq.n	900104cc <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001046a:	f8df c070 	ldr.w	ip, [pc, #112]	; 900104dc <xTaskCheckForTimeOut+0x8c>
9001046e:	6826      	ldr	r6, [r4, #0]
90010470:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010474:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010476:	42be      	cmp	r6, r7
90010478:	d01a      	beq.n	900104b0 <xTaskCheckForTimeOut+0x60>
9001047a:	4288      	cmp	r0, r1
9001047c:	d818      	bhi.n	900104b0 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9001047e:	2001      	movs	r0, #1
90010480:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010482:	f7fd fff9 	bl	9000e478 <vPortExitCritical>
}
90010486:	9801      	ldr	r0, [sp, #4]
90010488:	b003      	add	sp, #12
9001048a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001048c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010490:	f383 8811 	msr	BASEPRI, r3
90010494:	f3bf 8f6f 	isb	sy
90010498:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001049c:	e7fe      	b.n	9001049c <xTaskCheckForTimeOut+0x4c>
9001049e:	f04f 0350 	mov.w	r3, #80	; 0x50
900104a2:	f383 8811 	msr	BASEPRI, r3
900104a6:	f3bf 8f6f 	isb	sy
900104aa:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
900104ae:	e7fe      	b.n	900104ae <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900104b0:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900104b4:	4573      	cmp	r3, lr
900104b6:	d90b      	bls.n	900104d0 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
900104b8:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900104ba:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900104be:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900104c0:	4403      	add	r3, r0
			xReturn = pdFALSE;
900104c2:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
900104c4:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900104c6:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
900104ca:	e7d9      	b.n	90010480 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
900104cc:	2000      	movs	r0, #0
900104ce:	e7d7      	b.n	90010480 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
900104d0:	2300      	movs	r3, #0
			xReturn = pdTRUE;
900104d2:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
900104d4:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900104d6:	e7d3      	b.n	90010480 <xTaskCheckForTimeOut+0x30>
900104d8:	240395c4 	.word	0x240395c4
900104dc:	2403957c 	.word	0x2403957c

900104e0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900104e0:	4b01      	ldr	r3, [pc, #4]	; (900104e8 <vTaskMissedYield+0x8>)
900104e2:	2201      	movs	r2, #1
900104e4:	601a      	str	r2, [r3, #0]
}
900104e6:	4770      	bx	lr
900104e8:	240395c8 	.word	0x240395c8

900104ec <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
900104ec:	4b01      	ldr	r3, [pc, #4]	; (900104f4 <xTaskGetCurrentTaskHandle+0x8>)
900104ee:	6818      	ldr	r0, [r3, #0]
	}
900104f0:	4770      	bx	lr
900104f2:	bf00      	nop
900104f4:	240390d0 	.word	0x240390d0

900104f8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900104f8:	4b05      	ldr	r3, [pc, #20]	; (90010510 <xTaskGetSchedulerState+0x18>)
900104fa:	681b      	ldr	r3, [r3, #0]
900104fc:	b133      	cbz	r3, 9001050c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900104fe:	4b05      	ldr	r3, [pc, #20]	; (90010514 <xTaskGetSchedulerState+0x1c>)
90010500:	6818      	ldr	r0, [r3, #0]
90010502:	fab0 f080 	clz	r0, r0
90010506:	0940      	lsrs	r0, r0, #5
90010508:	0040      	lsls	r0, r0, #1
9001050a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9001050c:	2001      	movs	r0, #1
	}
9001050e:	4770      	bx	lr
90010510:	24039598 	.word	0x24039598
90010514:	24039544 	.word	0x24039544

90010518 <xTaskPriorityInherit>:
	{
90010518:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9001051a:	4604      	mov	r4, r0
	{
9001051c:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9001051e:	b1c8      	cbz	r0, 90010554 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90010520:	4d1d      	ldr	r5, [pc, #116]	; (90010598 <xTaskPriorityInherit+0x80>)
90010522:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90010524:	682a      	ldr	r2, [r5, #0]
90010526:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010528:	4293      	cmp	r3, r2
9001052a:	d215      	bcs.n	90010558 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001052c:	6982      	ldr	r2, [r0, #24]
9001052e:	2a00      	cmp	r2, #0
90010530:	db04      	blt.n	9001053c <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010532:	682a      	ldr	r2, [r5, #0]
90010534:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010536:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9001053a:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9001053c:	4e17      	ldr	r6, [pc, #92]	; (9001059c <xTaskPriorityInherit+0x84>)
9001053e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010542:	6962      	ldr	r2, [r4, #20]
90010544:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010548:	429a      	cmp	r2, r3
9001054a:	d00e      	beq.n	9001056a <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001054c:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9001054e:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010552:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90010554:	b002      	add	sp, #8
90010556:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010558:	682b      	ldr	r3, [r5, #0]
9001055a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001055c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001055e:	4298      	cmp	r0, r3
90010560:	bf2c      	ite	cs
90010562:	2000      	movcs	r0, #0
90010564:	2001      	movcc	r0, #1
	}
90010566:	b002      	add	sp, #8
90010568:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001056a:	1d21      	adds	r1, r4, #4
9001056c:	4608      	mov	r0, r1
9001056e:	9101      	str	r1, [sp, #4]
90010570:	f7fd fede 	bl	9000e330 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010574:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010576:	4b0a      	ldr	r3, [pc, #40]	; (900105a0 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010578:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001057a:	681a      	ldr	r2, [r3, #0]
9001057c:	9901      	ldr	r1, [sp, #4]
9001057e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010580:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010582:	d900      	bls.n	90010586 <xTaskPriorityInherit+0x6e>
90010584:	6018      	str	r0, [r3, #0]
90010586:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001058a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001058e:	f7fd fea7 	bl	9000e2e0 <vListInsertEnd>
				xReturn = pdTRUE;
90010592:	2001      	movs	r0, #1
90010594:	e7de      	b.n	90010554 <xTaskPriorityInherit+0x3c>
90010596:	bf00      	nop
90010598:	240390d0 	.word	0x240390d0
9001059c:	240390dc 	.word	0x240390dc
900105a0:	2403954c 	.word	0x2403954c

900105a4 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
900105a4:	b318      	cbz	r0, 900105ee <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
900105a6:	4b1f      	ldr	r3, [pc, #124]	; (90010624 <xTaskPriorityDisinherit+0x80>)
	{
900105a8:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
900105aa:	681c      	ldr	r4, [r3, #0]
	{
900105ac:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
900105ae:	4284      	cmp	r4, r0
900105b0:	d008      	beq.n	900105c4 <xTaskPriorityDisinherit+0x20>
900105b2:	f04f 0350 	mov.w	r3, #80	; 0x50
900105b6:	f383 8811 	msr	BASEPRI, r3
900105ba:	f3bf 8f6f 	isb	sy
900105be:	f3bf 8f4f 	dsb	sy
900105c2:	e7fe      	b.n	900105c2 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
900105c4:	6d23      	ldr	r3, [r4, #80]	; 0x50
900105c6:	b14b      	cbz	r3, 900105dc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900105c8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
900105ca:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900105cc:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
900105ce:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900105d0:	4291      	cmp	r1, r2
900105d2:	d000      	beq.n	900105d6 <xTaskPriorityDisinherit+0x32>
900105d4:	b16b      	cbz	r3, 900105f2 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
900105d6:	2000      	movs	r0, #0
	}
900105d8:	b002      	add	sp, #8
900105da:	bd10      	pop	{r4, pc}
900105dc:	f04f 0350 	mov.w	r3, #80	; 0x50
900105e0:	f383 8811 	msr	BASEPRI, r3
900105e4:	f3bf 8f6f 	isb	sy
900105e8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900105ec:	e7fe      	b.n	900105ec <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
900105ee:	2000      	movs	r0, #0
	}
900105f0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900105f2:	1d21      	adds	r1, r4, #4
900105f4:	4608      	mov	r0, r1
900105f6:	9101      	str	r1, [sp, #4]
900105f8:	f7fd fe9a 	bl	9000e330 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900105fc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
900105fe:	4b0a      	ldr	r3, [pc, #40]	; (90010628 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010600:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90010604:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010606:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010608:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9001060a:	681a      	ldr	r2, [r3, #0]
9001060c:	4290      	cmp	r0, r2
9001060e:	d900      	bls.n	90010612 <xTaskPriorityDisinherit+0x6e>
90010610:	6018      	str	r0, [r3, #0]
90010612:	4b06      	ldr	r3, [pc, #24]	; (9001062c <xTaskPriorityDisinherit+0x88>)
90010614:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010618:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9001061c:	f7fd fe60 	bl	9000e2e0 <vListInsertEnd>
					xReturn = pdTRUE;
90010620:	2001      	movs	r0, #1
		return xReturn;
90010622:	e7d9      	b.n	900105d8 <xTaskPriorityDisinherit+0x34>
90010624:	240390d0 	.word	0x240390d0
90010628:	2403954c 	.word	0x2403954c
9001062c:	240390dc 	.word	0x240390dc

90010630 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010630:	2800      	cmp	r0, #0
90010632:	d040      	beq.n	900106b6 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90010634:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90010636:	b530      	push	{r4, r5, lr}
90010638:	4604      	mov	r4, r0
9001063a:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9001063c:	b153      	cbz	r3, 90010654 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9001063e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90010640:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90010642:	4281      	cmp	r1, r0
90010644:	bf38      	it	cc
90010646:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90010648:	2b01      	cmp	r3, #1
9001064a:	d101      	bne.n	90010650 <vTaskPriorityDisinheritAfterTimeout+0x20>
9001064c:	428a      	cmp	r2, r1
9001064e:	d10a      	bne.n	90010666 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90010650:	b003      	add	sp, #12
90010652:	bd30      	pop	{r4, r5, pc}
90010654:	f04f 0350 	mov.w	r3, #80	; 0x50
90010658:	f383 8811 	msr	BASEPRI, r3
9001065c:	f3bf 8f6f 	isb	sy
90010660:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010664:	e7fe      	b.n	90010664 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90010666:	4b19      	ldr	r3, [pc, #100]	; (900106cc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90010668:	681b      	ldr	r3, [r3, #0]
9001066a:	42a3      	cmp	r3, r4
9001066c:	d024      	beq.n	900106b8 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001066e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010670:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010672:	2b00      	cmp	r3, #0
90010674:	db02      	blt.n	9001067c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010676:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001067a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001067c:	4d14      	ldr	r5, [pc, #80]	; (900106d0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001067e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010682:	6961      	ldr	r1, [r4, #20]
90010684:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010688:	4299      	cmp	r1, r3
9001068a:	d1e1      	bne.n	90010650 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001068c:	1d21      	adds	r1, r4, #4
9001068e:	4608      	mov	r0, r1
90010690:	9101      	str	r1, [sp, #4]
90010692:	f7fd fe4d 	bl	9000e330 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010696:	4b0f      	ldr	r3, [pc, #60]	; (900106d4 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90010698:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001069a:	681a      	ldr	r2, [r3, #0]
9001069c:	9901      	ldr	r1, [sp, #4]
9001069e:	4290      	cmp	r0, r2
900106a0:	d900      	bls.n	900106a4 <vTaskPriorityDisinheritAfterTimeout+0x74>
900106a2:	6018      	str	r0, [r3, #0]
900106a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900106a8:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
900106ac:	b003      	add	sp, #12
900106ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
900106b2:	f7fd be15 	b.w	9000e2e0 <vListInsertEnd>
900106b6:	4770      	bx	lr
900106b8:	f04f 0350 	mov.w	r3, #80	; 0x50
900106bc:	f383 8811 	msr	BASEPRI, r3
900106c0:	f3bf 8f6f 	isb	sy
900106c4:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
900106c8:	e7fe      	b.n	900106c8 <vTaskPriorityDisinheritAfterTimeout+0x98>
900106ca:	bf00      	nop
900106cc:	240390d0 	.word	0x240390d0
900106d0:	240390dc 	.word	0x240390dc
900106d4:	2403954c 	.word	0x2403954c

900106d8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900106d8:	4b04      	ldr	r3, [pc, #16]	; (900106ec <pvTaskIncrementMutexHeldCount+0x14>)
900106da:	681a      	ldr	r2, [r3, #0]
900106dc:	b11a      	cbz	r2, 900106e6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900106de:	6819      	ldr	r1, [r3, #0]
900106e0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900106e2:	3201      	adds	r2, #1
900106e4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900106e6:	6818      	ldr	r0, [r3, #0]
	}
900106e8:	4770      	bx	lr
900106ea:	bf00      	nop
900106ec:	240390d0 	.word	0x240390d0

900106f0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900106f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900106f4:	4e22      	ldr	r6, [pc, #136]	; (90010780 <prvSwitchTimerLists+0x90>)
900106f6:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
900106f8:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90010788 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
900106fc:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010700:	e00d      	b.n	9001071e <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010702:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010704:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010706:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010708:	1d25      	adds	r5, r4, #4
9001070a:	4628      	mov	r0, r5
9001070c:	f7fd fe10 	bl	9000e330 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010710:	6a23      	ldr	r3, [r4, #32]
90010712:	4620      	mov	r0, r4
90010714:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010716:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9001071a:	075b      	lsls	r3, r3, #29
9001071c:	d40a      	bmi.n	90010734 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001071e:	6833      	ldr	r3, [r6, #0]
90010720:	681a      	ldr	r2, [r3, #0]
90010722:	2a00      	cmp	r2, #0
90010724:	d1ed      	bne.n	90010702 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90010726:	4a17      	ldr	r2, [pc, #92]	; (90010784 <prvSwitchTimerLists+0x94>)
90010728:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9001072a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9001072c:	6031      	str	r1, [r6, #0]
}
9001072e:	b005      	add	sp, #20
90010730:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010734:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010736:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010738:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001073a:	429f      	cmp	r7, r3
9001073c:	d205      	bcs.n	9001074a <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001073e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010740:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010742:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010744:	f7fd fddc 	bl	9000e300 <vListInsert>
90010748:	e7e9      	b.n	9001071e <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9001074a:	f8d9 3000 	ldr.w	r3, [r9]
9001074e:	b16b      	cbz	r3, 9001076c <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010750:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010752:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010756:	f7ff fecf 	bl	900104f8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001075a:	2300      	movs	r3, #0
9001075c:	4669      	mov	r1, sp
9001075e:	f8d9 0000 	ldr.w	r0, [r9]
90010762:	461a      	mov	r2, r3
90010764:	f7fe f95e 	bl	9000ea24 <xQueueGenericSend>
				configASSERT( xResult );
90010768:	2800      	cmp	r0, #0
9001076a:	d1d8      	bne.n	9001071e <prvSwitchTimerLists+0x2e>
9001076c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010770:	f383 8811 	msr	BASEPRI, r3
90010774:	f3bf 8f6f 	isb	sy
90010778:	f3bf 8f4f 	dsb	sy
9001077c:	e7fe      	b.n	9001077c <prvSwitchTimerLists+0x8c>
9001077e:	bf00      	nop
90010780:	240395cc 	.word	0x240395cc
90010784:	240395d0 	.word	0x240395d0
90010788:	240396f0 	.word	0x240396f0

9001078c <prvTimerTask>:
{
9001078c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010790:	4e9f      	ldr	r6, [pc, #636]	; (90010a10 <prvTimerTask+0x284>)
90010792:	b089      	sub	sp, #36	; 0x24
90010794:	4d9f      	ldr	r5, [pc, #636]	; (90010a14 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010796:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001079a:	4c9f      	ldr	r4, [pc, #636]	; (90010a18 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001079c:	6833      	ldr	r3, [r6, #0]
9001079e:	681f      	ldr	r7, [r3, #0]
900107a0:	2f00      	cmp	r7, #0
900107a2:	f000 80b2 	beq.w	9001090a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900107a6:	68db      	ldr	r3, [r3, #12]
900107a8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
900107aa:	f7ff fccf 	bl	9001014c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900107ae:	f7ff fce5 	bl	9001017c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900107b2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900107b4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900107b6:	4290      	cmp	r0, r2
900107b8:	f0c0 80af 	bcc.w	9001091a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900107bc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900107be:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900107c0:	f200 80d0 	bhi.w	90010964 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
900107c4:	f7ff fcca 	bl	9001015c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900107c8:	6832      	ldr	r2, [r6, #0]
900107ca:	68d2      	ldr	r2, [r2, #12]
900107cc:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900107d0:	f10b 0804 	add.w	r8, fp, #4
900107d4:	4640      	mov	r0, r8
900107d6:	f7fd fdab 	bl	9000e330 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900107da:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
900107de:	0741      	lsls	r1, r0, #29
900107e0:	f100 80d0 	bmi.w	90010984 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900107e4:	f020 0001 	bic.w	r0, r0, #1
900107e8:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900107ec:	f8db 3020 	ldr.w	r3, [fp, #32]
900107f0:	4658      	mov	r0, fp
900107f2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900107f4:	2200      	movs	r2, #0
900107f6:	4669      	mov	r1, sp
900107f8:	6820      	ldr	r0, [r4, #0]
900107fa:	f7fe fbff 	bl	9000effc <xQueueReceive>
900107fe:	2800      	cmp	r0, #0
90010800:	d0cc      	beq.n	9001079c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010802:	9b00      	ldr	r3, [sp, #0]
90010804:	2b00      	cmp	r3, #0
90010806:	db77      	blt.n	900108f8 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90010808:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9001080a:	697b      	ldr	r3, [r7, #20]
9001080c:	b113      	cbz	r3, 90010814 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001080e:	1d38      	adds	r0, r7, #4
90010810:	f7fd fd8e 	bl	9000e330 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90010814:	f7ff fcb2 	bl	9001017c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010818:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001081a:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9001081c:	4298      	cmp	r0, r3
9001081e:	f0c0 8083 	bcc.w	90010928 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90010822:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90010824:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90010828:	2b09      	cmp	r3, #9
9001082a:	d8e3      	bhi.n	900107f4 <prvTimerTask+0x68>
9001082c:	e8df f003 	tbb	[pc, r3]
90010830:	54050505 	.word	0x54050505
90010834:	05055b3e 	.word	0x05055b3e
90010838:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001083a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001083e:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010840:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010844:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010846:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001084a:	9b01      	ldr	r3, [sp, #4]
9001084c:	1899      	adds	r1, r3, r2
9001084e:	bf2c      	ite	cs
90010850:	2001      	movcs	r0, #1
90010852:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90010854:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010856:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010858:	f200 8086 	bhi.w	90010968 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001085c:	eba8 0303 	sub.w	r3, r8, r3
90010860:	429a      	cmp	r2, r3
90010862:	f200 80c0 	bhi.w	900109e6 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010866:	6a3b      	ldr	r3, [r7, #32]
90010868:	4638      	mov	r0, r7
9001086a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001086c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010870:	075b      	lsls	r3, r3, #29
90010872:	d5bf      	bpl.n	900107f4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010874:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010876:	9901      	ldr	r1, [sp, #4]
90010878:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9001087a:	b172      	cbz	r2, 9001089a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001087c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9001087e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010882:	2300      	movs	r3, #0
90010884:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010886:	f7ff fe37 	bl	900104f8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001088a:	2300      	movs	r3, #0
9001088c:	a904      	add	r1, sp, #16
9001088e:	6820      	ldr	r0, [r4, #0]
90010890:	461a      	mov	r2, r3
90010892:	f7fe f8c7 	bl	9000ea24 <xQueueGenericSend>
							configASSERT( xResult );
90010896:	2800      	cmp	r0, #0
90010898:	d1ac      	bne.n	900107f4 <prvTimerTask+0x68>
9001089a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001089e:	f383 8811 	msr	BASEPRI, r3
900108a2:	f3bf 8f6f 	isb	sy
900108a6:	f3bf 8f4f 	dsb	sy
900108aa:	e7fe      	b.n	900108aa <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900108ac:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900108b0:	f043 0301 	orr.w	r3, r3, #1
900108b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900108b8:	9b01      	ldr	r3, [sp, #4]
900108ba:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900108bc:	2b00      	cmp	r3, #0
900108be:	f000 809e 	beq.w	900109fe <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900108c2:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900108c4:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900108c6:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900108c8:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900108ca:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900108cc:	d856      	bhi.n	9001097c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900108ce:	4b53      	ldr	r3, [pc, #332]	; (90010a1c <prvTimerTask+0x290>)
900108d0:	6818      	ldr	r0, [r3, #0]
900108d2:	f7fd fd15 	bl	9000e300 <vListInsert>
	return xProcessTimerNow;
900108d6:	e78d      	b.n	900107f4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900108d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900108dc:	f023 0301 	bic.w	r3, r3, #1
900108e0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900108e4:	e786      	b.n	900107f4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900108e6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900108ea:	079a      	lsls	r2, r3, #30
900108ec:	d572      	bpl.n	900109d4 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900108ee:	f023 0301 	bic.w	r3, r3, #1
900108f2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
900108f6:	e77d      	b.n	900107f4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900108f8:	9b01      	ldr	r3, [sp, #4]
900108fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
900108fe:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010900:	9b00      	ldr	r3, [sp, #0]
90010902:	2b00      	cmp	r3, #0
90010904:	f6ff af76 	blt.w	900107f4 <prvTimerTask+0x68>
90010908:	e77e      	b.n	90010808 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9001090a:	f7ff fc1f 	bl	9001014c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001090e:	f7ff fc35 	bl	9001017c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010912:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010914:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010916:	4282      	cmp	r2, r0
90010918:	d909      	bls.n	9001092e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001091a:	f7ff fee9 	bl	900106f0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001091e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010922:	f7ff fc1b 	bl	9001015c <xTaskResumeAll>
90010926:	e765      	b.n	900107f4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90010928:	f7ff fee2 	bl	900106f0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9001092c:	e779      	b.n	90010822 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9001092e:	4b3b      	ldr	r3, [pc, #236]	; (90010a1c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010930:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010934:	681a      	ldr	r2, [r3, #0]
90010936:	6812      	ldr	r2, [r2, #0]
90010938:	fab2 f282 	clz	r2, r2
9001093c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9001093e:	eba7 010a 	sub.w	r1, r7, sl
90010942:	6820      	ldr	r0, [r4, #0]
90010944:	f7fe ff4e 	bl	9000f7e4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010948:	f7ff fc08 	bl	9001015c <xTaskResumeAll>
9001094c:	2800      	cmp	r0, #0
9001094e:	f47f af51 	bne.w	900107f4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010952:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90010956:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9001095a:	f3bf 8f4f 	dsb	sy
9001095e:	f3bf 8f6f 	isb	sy
90010962:	e747      	b.n	900107f4 <prvTimerTask+0x68>
90010964:	2200      	movs	r2, #0
90010966:	e7ea      	b.n	9001093e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010968:	4543      	cmp	r3, r8
9001096a:	d902      	bls.n	90010972 <prvTimerTask+0x1e6>
9001096c:	2800      	cmp	r0, #0
9001096e:	f43f af7a 	beq.w	90010866 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010972:	1d39      	adds	r1, r7, #4
90010974:	6830      	ldr	r0, [r6, #0]
90010976:	f7fd fcc3 	bl	9000e300 <vListInsert>
	return xProcessTimerNow;
9001097a:	e73b      	b.n	900107f4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001097c:	6830      	ldr	r0, [r6, #0]
9001097e:	f7fd fcbf 	bl	9000e300 <vListInsert>
90010982:	e737      	b.n	900107f4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010984:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010988:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9001098c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9001098e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010990:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010994:	d322      	bcc.n	900109dc <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010996:	ebaa 0307 	sub.w	r3, sl, r7
9001099a:	429a      	cmp	r2, r3
9001099c:	d829      	bhi.n	900109f2 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9001099e:	6823      	ldr	r3, [r4, #0]
900109a0:	b17b      	cbz	r3, 900109c2 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
900109a2:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900109a4:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900109a6:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
900109aa:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900109ac:	f7ff fda4 	bl	900104f8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900109b0:	2300      	movs	r3, #0
900109b2:	a904      	add	r1, sp, #16
900109b4:	6820      	ldr	r0, [r4, #0]
900109b6:	461a      	mov	r2, r3
900109b8:	f7fe f834 	bl	9000ea24 <xQueueGenericSend>
			configASSERT( xResult );
900109bc:	2800      	cmp	r0, #0
900109be:	f47f af15 	bne.w	900107ec <prvTimerTask+0x60>
900109c2:	f04f 0350 	mov.w	r3, #80	; 0x50
900109c6:	f383 8811 	msr	BASEPRI, r3
900109ca:	f3bf 8f6f 	isb	sy
900109ce:	f3bf 8f4f 	dsb	sy
900109d2:	e7fe      	b.n	900109d2 <prvTimerTask+0x246>
							vPortFree( pxTimer );
900109d4:	4638      	mov	r0, r7
900109d6:	f7fd fc0f 	bl	9000e1f8 <vPortFree>
900109da:	e70b      	b.n	900107f4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900109dc:	4641      	mov	r1, r8
900109de:	6830      	ldr	r0, [r6, #0]
900109e0:	f7fd fc8e 	bl	9000e300 <vListInsert>
	return xProcessTimerNow;
900109e4:	e702      	b.n	900107ec <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900109e6:	4b0d      	ldr	r3, [pc, #52]	; (90010a1c <prvTimerTask+0x290>)
900109e8:	1d39      	adds	r1, r7, #4
900109ea:	6818      	ldr	r0, [r3, #0]
900109ec:	f7fd fc88 	bl	9000e300 <vListInsert>
	return xProcessTimerNow;
900109f0:	e700      	b.n	900107f4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900109f2:	4b0a      	ldr	r3, [pc, #40]	; (90010a1c <prvTimerTask+0x290>)
900109f4:	4641      	mov	r1, r8
900109f6:	6818      	ldr	r0, [r3, #0]
900109f8:	f7fd fc82 	bl	9000e300 <vListInsert>
	return xProcessTimerNow;
900109fc:	e6f6      	b.n	900107ec <prvTimerTask+0x60>
900109fe:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a02:	f383 8811 	msr	BASEPRI, r3
90010a06:	f3bf 8f6f 	isb	sy
90010a0a:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010a0e:	e7fe      	b.n	90010a0e <prvTimerTask+0x282>
90010a10:	240395cc 	.word	0x240395cc
90010a14:	2403969c 	.word	0x2403969c
90010a18:	240396f0 	.word	0x240396f0
90010a1c:	240395d0 	.word	0x240395d0

90010a20 <xTimerCreateTimerTask>:
{
90010a20:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90010a22:	4c23      	ldr	r4, [pc, #140]	; (90010ab0 <xTimerCreateTimerTask+0x90>)
{
90010a24:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90010a26:	f7fd fd05 	bl	9000e434 <vPortEnterCritical>
		if( xTimerQueue == NULL )
90010a2a:	6825      	ldr	r5, [r4, #0]
90010a2c:	b335      	cbz	r5, 90010a7c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90010a2e:	f7fd fd23 	bl	9000e478 <vPortExitCritical>
	if( xTimerQueue != NULL )
90010a32:	6823      	ldr	r3, [r4, #0]
90010a34:	b1cb      	cbz	r3, 90010a6a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90010a36:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010a38:	aa07      	add	r2, sp, #28
90010a3a:	a906      	add	r1, sp, #24
90010a3c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010a3e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010a40:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010a44:	f7fd fb0a 	bl	9000e05c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010a48:	4623      	mov	r3, r4
90010a4a:	9a07      	ldr	r2, [sp, #28]
90010a4c:	9500      	str	r5, [sp, #0]
90010a4e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90010a52:	e9cd 1001 	strd	r1, r0, [sp, #4]
90010a56:	4917      	ldr	r1, [pc, #92]	; (90010ab4 <xTimerCreateTimerTask+0x94>)
90010a58:	4817      	ldr	r0, [pc, #92]	; (90010ab8 <xTimerCreateTimerTask+0x98>)
90010a5a:	f7ff f93f 	bl	9000fcdc <xTaskCreateStatic>
90010a5e:	4b17      	ldr	r3, [pc, #92]	; (90010abc <xTimerCreateTimerTask+0x9c>)
90010a60:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90010a62:	b110      	cbz	r0, 90010a6a <xTimerCreateTimerTask+0x4a>
}
90010a64:	2001      	movs	r0, #1
90010a66:	b009      	add	sp, #36	; 0x24
90010a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010a6a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a6e:	f383 8811 	msr	BASEPRI, r3
90010a72:	f3bf 8f6f 	isb	sy
90010a76:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
90010a7a:	e7fe      	b.n	90010a7a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90010a7c:	4f10      	ldr	r7, [pc, #64]	; (90010ac0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90010a7e:	4e11      	ldr	r6, [pc, #68]	; (90010ac4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90010a80:	4638      	mov	r0, r7
90010a82:	f7fd fc1d 	bl	9000e2c0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90010a86:	4630      	mov	r0, r6
90010a88:	f7fd fc1a 	bl	9000e2c0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90010a8c:	4a0e      	ldr	r2, [pc, #56]	; (90010ac8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010a8e:	9500      	str	r5, [sp, #0]
90010a90:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90010a92:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010a94:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90010a96:	4a0d      	ldr	r2, [pc, #52]	; (90010acc <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010a98:	4b0d      	ldr	r3, [pc, #52]	; (90010ad0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
90010a9a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90010a9c:	4a0d      	ldr	r2, [pc, #52]	; (90010ad4 <xTimerCreateTimerTask+0xb4>)
90010a9e:	f7fd fe6b 	bl	9000e778 <xQueueGenericCreateStatic>
90010aa2:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90010aa4:	2800      	cmp	r0, #0
90010aa6:	d0c2      	beq.n	90010a2e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90010aa8:	490b      	ldr	r1, [pc, #44]	; (90010ad8 <xTimerCreateTimerTask+0xb8>)
90010aaa:	f7fe fe73 	bl	9000f794 <vQueueAddToRegistry>
90010aae:	e7be      	b.n	90010a2e <xTimerCreateTimerTask+0xe>
90010ab0:	240396f0 	.word	0x240396f0
90010ab4:	9002b294 	.word	0x9002b294
90010ab8:	9001078d 	.word	0x9001078d
90010abc:	240396f4 	.word	0x240396f4
90010ac0:	24039674 	.word	0x24039674
90010ac4:	24039688 	.word	0x24039688
90010ac8:	240395cc 	.word	0x240395cc
90010acc:	240395d0 	.word	0x240395d0
90010ad0:	240396a0 	.word	0x240396a0
90010ad4:	240395d4 	.word	0x240395d4
90010ad8:	9002b28c 	.word	0x9002b28c

90010adc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90010adc:	8880      	ldrh	r0, [r0, #4]
90010ade:	4770      	bx	lr

90010ae0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010ae0:	b570      	push	{r4, r5, r6, lr}
90010ae2:	6803      	ldr	r3, [r0, #0]
90010ae4:	460c      	mov	r4, r1
90010ae6:	2100      	movs	r1, #0
90010ae8:	4605      	mov	r5, r0
90010aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010aec:	4798      	blx	r3
90010aee:	4606      	mov	r6, r0
90010af0:	682b      	ldr	r3, [r5, #0]
90010af2:	4628      	mov	r0, r5
90010af4:	1ba4      	subs	r4, r4, r6
90010af6:	6a1b      	ldr	r3, [r3, #32]
90010af8:	b2a4      	uxth	r4, r4
90010afa:	4798      	blx	r3
90010afc:	fbb4 f0f0 	udiv	r0, r4, r0
90010b00:	bd70      	pop	{r4, r5, r6, pc}

90010b02 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010b02:	2300      	movs	r3, #0
90010b04:	8083      	strh	r3, [r0, #4]
90010b06:	4770      	bx	lr

90010b08 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90010b08:	b510      	push	{r4, lr}
90010b0a:	6803      	ldr	r3, [r0, #0]
90010b0c:	4604      	mov	r4, r0
90010b0e:	8881      	ldrh	r1, [r0, #4]
90010b10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010b12:	4798      	blx	r3
90010b14:	88a3      	ldrh	r3, [r4, #4]
90010b16:	3301      	adds	r3, #1
90010b18:	80a3      	strh	r3, [r4, #4]
90010b1a:	bd10      	pop	{r4, pc}

90010b1c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90010b1c:	6803      	ldr	r3, [r0, #0]
90010b1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010b20:	4718      	bx	r3

90010b22 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010b22:	4770      	bx	lr

90010b24 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010b24:	4a02      	ldr	r2, [pc, #8]	; (90010b30 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90010b26:	6002      	str	r2, [r0, #0]
90010b28:	2200      	movs	r2, #0
90010b2a:	8082      	strh	r2, [r0, #4]
90010b2c:	4770      	bx	lr
90010b2e:	bf00      	nop
90010b30:	9002b2a4 	.word	0x9002b2a4

90010b34 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90010b34:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010b36:	2000      	movs	r0, #0
90010b38:	b12b      	cbz	r3, 90010b46 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010b3a:	b920      	cbnz	r0, 90010b46 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010b3c:	1a5a      	subs	r2, r3, r1
90010b3e:	699b      	ldr	r3, [r3, #24]
90010b40:	4250      	negs	r0, r2
90010b42:	4150      	adcs	r0, r2
90010b44:	e7f8      	b.n	90010b38 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90010b46:	4770      	bx	lr

90010b48 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010b48:	2300      	movs	r3, #0
90010b4a:	6148      	str	r0, [r1, #20]
90010b4c:	618b      	str	r3, [r1, #24]
90010b4e:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010b50:	b913      	cbnz	r3, 90010b58 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90010b52:	6281      	str	r1, [r0, #40]	; 0x28
90010b54:	4770      	bx	lr
90010b56:	4613      	mov	r3, r2
90010b58:	699a      	ldr	r2, [r3, #24]
90010b5a:	2a00      	cmp	r2, #0
90010b5c:	d1fb      	bne.n	90010b56 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010b5e:	6199      	str	r1, [r3, #24]
90010b60:	4770      	bx	lr

90010b62 <_ZN8touchgfx9Container9removeAllEv>:
90010b62:	2200      	movs	r2, #0
90010b64:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010b66:	b123      	cbz	r3, 90010b72 <_ZN8touchgfx9Container9removeAllEv+0x10>
90010b68:	6999      	ldr	r1, [r3, #24]
90010b6a:	6281      	str	r1, [r0, #40]	; 0x28
90010b6c:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010b70:	e7f8      	b.n	90010b64 <_ZN8touchgfx9Container9removeAllEv+0x2>
90010b72:	4770      	bx	lr

90010b74 <_ZN8touchgfx9Container6unlinkEv>:
90010b74:	2300      	movs	r3, #0
90010b76:	6283      	str	r3, [r0, #40]	; 0x28
90010b78:	4770      	bx	lr

90010b7a <_ZNK8touchgfx9Container12getSolidRectEv>:
90010b7a:	2200      	movs	r2, #0
90010b7c:	8002      	strh	r2, [r0, #0]
90010b7e:	8042      	strh	r2, [r0, #2]
90010b80:	8082      	strh	r2, [r0, #4]
90010b82:	80c2      	strh	r2, [r0, #6]
90010b84:	4770      	bx	lr

90010b86 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90010b86:	b570      	push	{r4, r5, r6, lr}
90010b88:	460d      	mov	r5, r1
90010b8a:	4616      	mov	r6, r2
90010b8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010b8e:	b13c      	cbz	r4, 90010ba0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90010b90:	6823      	ldr	r3, [r4, #0]
90010b92:	4620      	mov	r0, r4
90010b94:	4632      	mov	r2, r6
90010b96:	4629      	mov	r1, r5
90010b98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010b9a:	4798      	blx	r3
90010b9c:	69a4      	ldr	r4, [r4, #24]
90010b9e:	e7f6      	b.n	90010b8e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90010ba0:	bd70      	pop	{r4, r5, r6, pc}

90010ba2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90010ba2:	b538      	push	{r3, r4, r5, lr}
90010ba4:	460d      	mov	r5, r1
90010ba6:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010ba8:	b134      	cbz	r4, 90010bb8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
90010baa:	682b      	ldr	r3, [r5, #0]
90010bac:	4621      	mov	r1, r4
90010bae:	4628      	mov	r0, r5
90010bb0:	689b      	ldr	r3, [r3, #8]
90010bb2:	4798      	blx	r3
90010bb4:	69a4      	ldr	r4, [r4, #24]
90010bb6:	e7f7      	b.n	90010ba8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
90010bb8:	bd38      	pop	{r3, r4, r5, pc}

90010bba <_ZN8touchgfx9ContainerD1Ev>:
90010bba:	4770      	bx	lr

90010bbc <_ZN8touchgfx9ContainerD0Ev>:
90010bbc:	b510      	push	{r4, lr}
90010bbe:	4604      	mov	r4, r0
90010bc0:	212c      	movs	r1, #44	; 0x2c
90010bc2:	f016 fcad 	bl	90027520 <_ZdlPvj>
90010bc6:	4620      	mov	r0, r4
90010bc8:	bd10      	pop	{r4, pc}

90010bca <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
90010bca:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010bcc:	b19b      	cbz	r3, 90010bf6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010bce:	428b      	cmp	r3, r1
90010bd0:	d109      	bne.n	90010be6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90010bd2:	699a      	ldr	r2, [r3, #24]
90010bd4:	2100      	movs	r1, #0
90010bd6:	6159      	str	r1, [r3, #20]
90010bd8:	6282      	str	r2, [r0, #40]	; 0x28
90010bda:	b902      	cbnz	r2, 90010bde <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010bdc:	4770      	bx	lr
90010bde:	6199      	str	r1, [r3, #24]
90010be0:	4770      	bx	lr
90010be2:	4613      	mov	r3, r2
90010be4:	b13a      	cbz	r2, 90010bf6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90010be6:	699a      	ldr	r2, [r3, #24]
90010be8:	428a      	cmp	r2, r1
90010bea:	d1fa      	bne.n	90010be2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010bec:	698a      	ldr	r2, [r1, #24]
90010bee:	619a      	str	r2, [r3, #24]
90010bf0:	2300      	movs	r3, #0
90010bf2:	e9c1 3305 	strd	r3, r3, [r1, #20]
90010bf6:	4770      	bx	lr

90010bf8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010bf8:	b410      	push	{r4}
90010bfa:	6a83      	ldr	r3, [r0, #40]	; 0x28
90010bfc:	4604      	mov	r4, r0
90010bfe:	b92b      	cbnz	r3, 90010c0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010c00:	6803      	ldr	r3, [r0, #0]
90010c02:	4611      	mov	r1, r2
90010c04:	f85d 4b04 	ldr.w	r4, [sp], #4
90010c08:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90010c0a:	4718      	bx	r3
90010c0c:	b941      	cbnz	r1, 90010c20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010c0e:	6193      	str	r3, [r2, #24]
90010c10:	6282      	str	r2, [r0, #40]	; 0x28
90010c12:	6154      	str	r4, [r2, #20]
90010c14:	f85d 4b04 	ldr.w	r4, [sp], #4
90010c18:	4770      	bx	lr
90010c1a:	4603      	mov	r3, r0
90010c1c:	2800      	cmp	r0, #0
90010c1e:	d0f9      	beq.n	90010c14 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010c20:	4299      	cmp	r1, r3
90010c22:	6998      	ldr	r0, [r3, #24]
90010c24:	d1f9      	bne.n	90010c1a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90010c26:	6190      	str	r0, [r2, #24]
90010c28:	618a      	str	r2, [r1, #24]
90010c2a:	e7f2      	b.n	90010c12 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c30:	461f      	mov	r7, r3
90010c32:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90010c36:	460d      	mov	r5, r1
90010c38:	4616      	mov	r6, r2
90010c3a:	b103      	cbz	r3, 90010c3e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010c3c:	6038      	str	r0, [r7, #0]
90010c3e:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010c40:	b314      	cbz	r4, 90010c88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90010c42:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90010c46:	b1eb      	cbz	r3, 90010c84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010c48:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010c4c:	428d      	cmp	r5, r1
90010c4e:	db19      	blt.n	90010c84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010c50:	b289      	uxth	r1, r1
90010c52:	8923      	ldrh	r3, [r4, #8]
90010c54:	440b      	add	r3, r1
90010c56:	b21b      	sxth	r3, r3
90010c58:	429d      	cmp	r5, r3
90010c5a:	da13      	bge.n	90010c84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010c5c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010c60:	4296      	cmp	r6, r2
90010c62:	db0f      	blt.n	90010c84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010c64:	b292      	uxth	r2, r2
90010c66:	8963      	ldrh	r3, [r4, #10]
90010c68:	4413      	add	r3, r2
90010c6a:	b21b      	sxth	r3, r3
90010c6c:	429e      	cmp	r6, r3
90010c6e:	da09      	bge.n	90010c84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010c70:	6823      	ldr	r3, [r4, #0]
90010c72:	1ab2      	subs	r2, r6, r2
90010c74:	1a69      	subs	r1, r5, r1
90010c76:	4620      	mov	r0, r4
90010c78:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90010c7c:	b212      	sxth	r2, r2
90010c7e:	463b      	mov	r3, r7
90010c80:	b209      	sxth	r1, r1
90010c82:	47c0      	blx	r8
90010c84:	69a4      	ldr	r4, [r4, #24]
90010c86:	e7db      	b.n	90010c40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90010c88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010c8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90010c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010c90:	4c6d      	ldr	r4, [pc, #436]	; (90010e48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90010c92:	b0a1      	sub	sp, #132	; 0x84
90010c94:	4606      	mov	r6, r0
90010c96:	6824      	ldr	r4, [r4, #0]
90010c98:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90010c9a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
90010c9e:	2400      	movs	r4, #0
90010ca0:	9303      	str	r3, [sp, #12]
90010ca2:	802c      	strh	r4, [r5, #0]
90010ca4:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90010ca6:	802c      	strh	r4, [r5, #0]
90010ca8:	601c      	str	r4, [r3, #0]
90010caa:	e9cd 1201 	strd	r1, r2, [sp, #4]
90010cae:	f7ff ffbd 	bl	90010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010cb2:	f1b9 0f03 	cmp.w	r9, #3
90010cb6:	f340 80c1 	ble.w	90010e3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90010cba:	4631      	mov	r1, r6
90010cbc:	a80c      	add	r0, sp, #48	; 0x30
90010cbe:	f006 fc2d 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010cc2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90010cc6:	9306      	str	r3, [sp, #24]
90010cc8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90010ccc:	9307      	str	r3, [sp, #28]
90010cce:	9b03      	ldr	r3, [sp, #12]
90010cd0:	f8d3 a000 	ldr.w	sl, [r3]
90010cd4:	f1ba 0f00 	cmp.w	sl, #0
90010cd8:	f000 80b3 	beq.w	90010e42 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010cdc:	4651      	mov	r1, sl
90010cde:	a810      	add	r0, sp, #64	; 0x40
90010ce0:	f006 fc1c 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010ce4:	2002      	movs	r0, #2
90010ce6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90010cea:	9b01      	ldr	r3, [sp, #4]
90010cec:	9a06      	ldr	r2, [sp, #24]
90010cee:	fb91 f1f0 	sdiv	r1, r1, r0
90010cf2:	189d      	adds	r5, r3, r2
90010cf4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90010cf8:	9a07      	ldr	r2, [sp, #28]
90010cfa:	4419      	add	r1, r3
90010cfc:	9b02      	ldr	r3, [sp, #8]
90010cfe:	4413      	add	r3, r2
90010d00:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90010d04:	1a6d      	subs	r5, r5, r1
90010d06:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90010d0a:	fb92 f2f0 	sdiv	r2, r2, r0
90010d0e:	440a      	add	r2, r1
90010d10:	1a9b      	subs	r3, r3, r2
90010d12:	435b      	muls	r3, r3
90010d14:	fb05 3505 	mla	r5, r5, r5, r3
90010d18:	4f4c      	ldr	r7, [pc, #304]	; (90010e4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010d1a:	ac10      	add	r4, sp, #64	; 0x40
90010d1c:	f1b9 0f0c 	cmp.w	r9, #12
90010d20:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010d22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010d24:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010d26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010d28:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010d2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010d2c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010d30:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90010d34:	f04f 0303 	mov.w	r3, #3
90010d38:	bfd8      	it	le
90010d3a:	f109 32ff 	addle.w	r2, r9, #4294967295
90010d3e:	f04f 0400 	mov.w	r4, #0
90010d42:	f8cd 9000 	str.w	r9, [sp]
90010d46:	bfcc      	ite	gt
90010d48:	4698      	movgt	r8, r3
90010d4a:	fb92 f8f3 	sdivle	r8, r2, r3
90010d4e:	1c63      	adds	r3, r4, #1
90010d50:	aa10      	add	r2, sp, #64	; 0x40
90010d52:	f004 0401 	and.w	r4, r4, #1
90010d56:	f04f 0b00 	mov.w	fp, #0
90010d5a:	9308      	str	r3, [sp, #32]
90010d5c:	9b00      	ldr	r3, [sp, #0]
90010d5e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90010d62:	fb93 f3f8 	sdiv	r3, r3, r8
90010d66:	3404      	adds	r4, #4
90010d68:	b29b      	uxth	r3, r3
90010d6a:	9304      	str	r3, [sp, #16]
90010d6c:	9a04      	ldr	r2, [sp, #16]
90010d6e:	f854 3c04 	ldr.w	r3, [r4, #-4]
90010d72:	fb13 f302 	smulbb	r3, r3, r2
90010d76:	9a01      	ldr	r2, [sp, #4]
90010d78:	b29b      	uxth	r3, r3
90010d7a:	1899      	adds	r1, r3, r2
90010d7c:	9305      	str	r3, [sp, #20]
90010d7e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010d82:	b209      	sxth	r1, r1
90010d84:	4299      	cmp	r1, r3
90010d86:	db4d      	blt.n	90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010d88:	8932      	ldrh	r2, [r6, #8]
90010d8a:	4413      	add	r3, r2
90010d8c:	b21b      	sxth	r3, r3
90010d8e:	4299      	cmp	r1, r3
90010d90:	da48      	bge.n	90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010d92:	9b04      	ldr	r3, [sp, #16]
90010d94:	6827      	ldr	r7, [r4, #0]
90010d96:	fb17 f703 	smulbb	r7, r7, r3
90010d9a:	9b02      	ldr	r3, [sp, #8]
90010d9c:	b2bf      	uxth	r7, r7
90010d9e:	18fa      	adds	r2, r7, r3
90010da0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010da4:	b212      	sxth	r2, r2
90010da6:	429a      	cmp	r2, r3
90010da8:	db3c      	blt.n	90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010daa:	8970      	ldrh	r0, [r6, #10]
90010dac:	4403      	add	r3, r0
90010dae:	b21b      	sxth	r3, r3
90010db0:	429a      	cmp	r2, r3
90010db2:	da37      	bge.n	90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010db4:	2300      	movs	r3, #0
90010db6:	4630      	mov	r0, r6
90010db8:	930b      	str	r3, [sp, #44]	; 0x2c
90010dba:	ab0b      	add	r3, sp, #44	; 0x2c
90010dbc:	f7ff ff36 	bl	90010c2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010dc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90010dc2:	b37a      	cbz	r2, 90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010dc4:	4552      	cmp	r2, sl
90010dc6:	d02d      	beq.n	90010e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010dc8:	4611      	mov	r1, r2
90010dca:	a80e      	add	r0, sp, #56	; 0x38
90010dcc:	9209      	str	r2, [sp, #36]	; 0x24
90010dce:	f006 fba5 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90010dd2:	f04f 0e02 	mov.w	lr, #2
90010dd6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90010dda:	9a06      	ldr	r2, [sp, #24]
90010ddc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90010de0:	9b01      	ldr	r3, [sp, #4]
90010de2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90010de6:	4413      	add	r3, r2
90010de8:	9a07      	ldr	r2, [sp, #28]
90010dea:	fb91 f1fe 	sdiv	r1, r1, lr
90010dee:	fb9c fcfe 	sdiv	ip, ip, lr
90010df2:	4401      	add	r1, r0
90010df4:	1a58      	subs	r0, r3, r1
90010df6:	9b02      	ldr	r3, [sp, #8]
90010df8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90010dfc:	4413      	add	r3, r2
90010dfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
90010e00:	448c      	add	ip, r1
90010e02:	eba3 030c 	sub.w	r3, r3, ip
90010e06:	435b      	muls	r3, r3
90010e08:	fb00 3300 	mla	r3, r0, r0, r3
90010e0c:	42ab      	cmp	r3, r5
90010e0e:	d208      	bcs.n	90010e22 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010e10:	990b      	ldr	r1, [sp, #44]	; 0x2c
90010e12:	461d      	mov	r5, r3
90010e14:	9803      	ldr	r0, [sp, #12]
90010e16:	6001      	str	r1, [r0, #0]
90010e18:	992a      	ldr	r1, [sp, #168]	; 0xa8
90010e1a:	9805      	ldr	r0, [sp, #20]
90010e1c:	8008      	strh	r0, [r1, #0]
90010e1e:	992b      	ldr	r1, [sp, #172]	; 0xac
90010e20:	800f      	strh	r7, [r1, #0]
90010e22:	4692      	mov	sl, r2
90010e24:	f10b 0b01 	add.w	fp, fp, #1
90010e28:	3408      	adds	r4, #8
90010e2a:	f1bb 0f04 	cmp.w	fp, #4
90010e2e:	d19d      	bne.n	90010d6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010e30:	9b00      	ldr	r3, [sp, #0]
90010e32:	9c08      	ldr	r4, [sp, #32]
90010e34:	444b      	add	r3, r9
90010e36:	4544      	cmp	r4, r8
90010e38:	9300      	str	r3, [sp, #0]
90010e3a:	d188      	bne.n	90010d4e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010e3c:	b021      	add	sp, #132	; 0x84
90010e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010e42:	f04f 35ff 	mov.w	r5, #4294967295
90010e46:	e767      	b.n	90010d18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010e48:	24039704 	.word	0x24039704
90010e4c:	900285fc 	.word	0x900285fc

90010e50 <_ZN8touchgfx4RectaNERKS0_>:
90010e50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010e54:	f9b1 7000 	ldrsh.w	r7, [r1]
90010e58:	888c      	ldrh	r4, [r1, #4]
90010e5a:	f9b0 9000 	ldrsh.w	r9, [r0]
90010e5e:	443c      	add	r4, r7
90010e60:	b2a4      	uxth	r4, r4
90010e62:	fa0f f884 	sxth.w	r8, r4
90010e66:	45c1      	cmp	r9, r8
90010e68:	da2f      	bge.n	90010eca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010e6a:	8882      	ldrh	r2, [r0, #4]
90010e6c:	444a      	add	r2, r9
90010e6e:	b292      	uxth	r2, r2
90010e70:	fa0f fe82 	sxth.w	lr, r2
90010e74:	4577      	cmp	r7, lr
90010e76:	da28      	bge.n	90010eca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010e78:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90010e7c:	88cb      	ldrh	r3, [r1, #6]
90010e7e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90010e82:	442b      	add	r3, r5
90010e84:	b21b      	sxth	r3, r3
90010e86:	429e      	cmp	r6, r3
90010e88:	da1f      	bge.n	90010eca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010e8a:	88c3      	ldrh	r3, [r0, #6]
90010e8c:	4433      	add	r3, r6
90010e8e:	b29b      	uxth	r3, r3
90010e90:	fa0f fc83 	sxth.w	ip, r3
90010e94:	4565      	cmp	r5, ip
90010e96:	da18      	bge.n	90010eca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010e98:	454f      	cmp	r7, r9
90010e9a:	bfb8      	it	lt
90010e9c:	464f      	movlt	r7, r9
90010e9e:	42b5      	cmp	r5, r6
90010ea0:	bfb8      	it	lt
90010ea2:	4635      	movlt	r5, r6
90010ea4:	45f0      	cmp	r8, lr
90010ea6:	bfd8      	it	le
90010ea8:	4622      	movle	r2, r4
90010eaa:	1bd2      	subs	r2, r2, r7
90010eac:	8082      	strh	r2, [r0, #4]
90010eae:	884a      	ldrh	r2, [r1, #2]
90010eb0:	88c9      	ldrh	r1, [r1, #6]
90010eb2:	8007      	strh	r7, [r0, #0]
90010eb4:	440a      	add	r2, r1
90010eb6:	8045      	strh	r5, [r0, #2]
90010eb8:	b292      	uxth	r2, r2
90010eba:	b211      	sxth	r1, r2
90010ebc:	458c      	cmp	ip, r1
90010ebe:	bfa8      	it	ge
90010ec0:	4613      	movge	r3, r2
90010ec2:	1b5b      	subs	r3, r3, r5
90010ec4:	80c3      	strh	r3, [r0, #6]
90010ec6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010eca:	2300      	movs	r3, #0
90010ecc:	8003      	strh	r3, [r0, #0]
90010ece:	8043      	strh	r3, [r0, #2]
90010ed0:	8083      	strh	r3, [r0, #4]
90010ed2:	80c3      	strh	r3, [r0, #6]
90010ed4:	e7f7      	b.n	90010ec6 <_ZN8touchgfx4RectaNERKS0_+0x76>

90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>:
90010ed6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010eda:	2b00      	cmp	r3, #0
90010edc:	dd06      	ble.n	90010eec <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010ede:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90010ee2:	2800      	cmp	r0, #0
90010ee4:	bfcc      	ite	gt
90010ee6:	2000      	movgt	r0, #0
90010ee8:	2001      	movle	r0, #1
90010eea:	4770      	bx	lr
90010eec:	2001      	movs	r0, #1
90010eee:	4770      	bx	lr

90010ef0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010ef4:	2300      	movs	r3, #0
90010ef6:	4604      	mov	r4, r0
90010ef8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90010efa:	8003      	strh	r3, [r0, #0]
90010efc:	8043      	strh	r3, [r0, #2]
90010efe:	8083      	strh	r3, [r0, #4]
90010f00:	80c3      	strh	r3, [r0, #6]
90010f02:	2d00      	cmp	r5, #0
90010f04:	d040      	beq.n	90010f88 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90010f06:	1d28      	adds	r0, r5, #4
90010f08:	f7ff ffe5 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90010f0c:	b988      	cbnz	r0, 90010f32 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010f0e:	4620      	mov	r0, r4
90010f10:	f7ff ffe1 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90010f14:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010f18:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010f1c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010f20:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90010f24:	b138      	cbz	r0, 90010f36 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90010f26:	8022      	strh	r2, [r4, #0]
90010f28:	8063      	strh	r3, [r4, #2]
90010f2a:	f8a4 e004 	strh.w	lr, [r4, #4]
90010f2e:	f8a4 c006 	strh.w	ip, [r4, #6]
90010f32:	69ad      	ldr	r5, [r5, #24]
90010f34:	e7e5      	b.n	90010f02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90010f36:	f9b4 0000 	ldrsh.w	r0, [r4]
90010f3a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010f3e:	4290      	cmp	r0, r2
90010f40:	4607      	mov	r7, r0
90010f42:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90010f46:	460e      	mov	r6, r1
90010f48:	bfa8      	it	ge
90010f4a:	4617      	movge	r7, r2
90010f4c:	4299      	cmp	r1, r3
90010f4e:	4472      	add	r2, lr
90010f50:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90010f54:	bfa8      	it	ge
90010f56:	461e      	movge	r6, r3
90010f58:	4440      	add	r0, r8
90010f5a:	4471      	add	r1, lr
90010f5c:	4463      	add	r3, ip
90010f5e:	b200      	sxth	r0, r0
90010f60:	8027      	strh	r7, [r4, #0]
90010f62:	b212      	sxth	r2, r2
90010f64:	8066      	strh	r6, [r4, #2]
90010f66:	b209      	sxth	r1, r1
90010f68:	b21b      	sxth	r3, r3
90010f6a:	4290      	cmp	r0, r2
90010f6c:	bfac      	ite	ge
90010f6e:	ebc7 0200 	rsbge	r2, r7, r0
90010f72:	ebc7 0202 	rsblt	r2, r7, r2
90010f76:	4299      	cmp	r1, r3
90010f78:	bfac      	ite	ge
90010f7a:	ebc6 0301 	rsbge	r3, r6, r1
90010f7e:	ebc6 0303 	rsblt	r3, r6, r3
90010f82:	80a2      	strh	r2, [r4, #4]
90010f84:	80e3      	strh	r3, [r4, #6]
90010f86:	e7d4      	b.n	90010f32 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010f88:	4620      	mov	r0, r4
90010f8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010f8e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90010f8e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90010f92:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90010f96:	b383      	cbz	r3, 90010ffa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010f98:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010f9a:	b374      	cbz	r4, 90010ffa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010f9c:	f9b1 5000 	ldrsh.w	r5, [r1]
90010fa0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90010fa4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90010fa8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90010fac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90010fb0:	b303      	cbz	r3, 90010ff4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010fb2:	4668      	mov	r0, sp
90010fb4:	1d21      	adds	r1, r4, #4
90010fb6:	f8ad 5000 	strh.w	r5, [sp]
90010fba:	f8ad 6002 	strh.w	r6, [sp, #2]
90010fbe:	f8ad 7004 	strh.w	r7, [sp, #4]
90010fc2:	f8ad 8006 	strh.w	r8, [sp, #6]
90010fc6:	f7ff ff43 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90010fca:	4668      	mov	r0, sp
90010fcc:	f7ff ff83 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90010fd0:	b980      	cbnz	r0, 90010ff4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010fd2:	f8bd 3000 	ldrh.w	r3, [sp]
90010fd6:	4669      	mov	r1, sp
90010fd8:	88a2      	ldrh	r2, [r4, #4]
90010fda:	4620      	mov	r0, r4
90010fdc:	1a9b      	subs	r3, r3, r2
90010fde:	88e2      	ldrh	r2, [r4, #6]
90010fe0:	f8ad 3000 	strh.w	r3, [sp]
90010fe4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010fe8:	1a9b      	subs	r3, r3, r2
90010fea:	f8ad 3002 	strh.w	r3, [sp, #2]
90010fee:	6823      	ldr	r3, [r4, #0]
90010ff0:	689b      	ldr	r3, [r3, #8]
90010ff2:	4798      	blx	r3
90010ff4:	69a4      	ldr	r4, [r4, #24]
90010ff6:	2c00      	cmp	r4, #0
90010ff8:	d1d8      	bne.n	90010fac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010ffa:	b002      	add	sp, #8
90010ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011000 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90011000:	b573      	push	{r0, r1, r4, r5, r6, lr}
90011002:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011006:	460d      	mov	r5, r1
90011008:	4616      	mov	r6, r2
9001100a:	b323      	cbz	r3, 90011056 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001100c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001100e:	b314      	cbz	r4, 90011056 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90011010:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011014:	b1eb      	cbz	r3, 90011052 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90011016:	6828      	ldr	r0, [r5, #0]
90011018:	466b      	mov	r3, sp
9001101a:	6869      	ldr	r1, [r5, #4]
9001101c:	c303      	stmia	r3!, {r0, r1}
9001101e:	4668      	mov	r0, sp
90011020:	1d21      	adds	r1, r4, #4
90011022:	f7ff ff15 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90011026:	4668      	mov	r0, sp
90011028:	f7ff ff55 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001102c:	b988      	cbnz	r0, 90011052 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001102e:	f8bd 3000 	ldrh.w	r3, [sp]
90011032:	4669      	mov	r1, sp
90011034:	88a2      	ldrh	r2, [r4, #4]
90011036:	4620      	mov	r0, r4
90011038:	1a9b      	subs	r3, r3, r2
9001103a:	88e2      	ldrh	r2, [r4, #6]
9001103c:	f8ad 3000 	strh.w	r3, [sp]
90011040:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011044:	1a9b      	subs	r3, r3, r2
90011046:	4632      	mov	r2, r6
90011048:	f8ad 3002 	strh.w	r3, [sp, #2]
9001104c:	6823      	ldr	r3, [r4, #0]
9001104e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90011050:	4798      	blx	r3
90011052:	69a4      	ldr	r4, [r4, #24]
90011054:	e7db      	b.n	9001100e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90011056:	b002      	add	sp, #8
90011058:	bd70      	pop	{r4, r5, r6, pc}

9001105a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001105a:	6803      	ldr	r3, [r0, #0]
9001105c:	b513      	push	{r0, r1, r4, lr}
9001105e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90011062:	2300      	movs	r3, #0
90011064:	e9cd 3300 	strd	r3, r3, [sp]
90011068:	466b      	mov	r3, sp
9001106a:	47a0      	blx	r4
9001106c:	b002      	add	sp, #8
9001106e:	bd10      	pop	{r4, pc}

90011070 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011070:	2301      	movs	r3, #1
90011072:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011076:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001107a:	4770      	bx	lr

9001107c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
9001107c:	2301      	movs	r3, #1
9001107e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011082:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90011086:	4770      	bx	lr

90011088 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90011088:	6843      	ldr	r3, [r0, #4]
9001108a:	2201      	movs	r2, #1
9001108c:	725a      	strb	r2, [r3, #9]
9001108e:	6840      	ldr	r0, [r0, #4]
90011090:	6803      	ldr	r3, [r0, #0]
90011092:	691b      	ldr	r3, [r3, #16]
90011094:	4718      	bx	r3

90011096 <_ZN8touchgfx3HAL8flushDMAEv>:
90011096:	6840      	ldr	r0, [r0, #4]
90011098:	6803      	ldr	r3, [r0, #0]
9001109a:	689b      	ldr	r3, [r3, #8]
9001109c:	4718      	bx	r3

9001109e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9001109e:	b530      	push	{r4, r5, lr}
900110a0:	b08b      	sub	sp, #44	; 0x2c
900110a2:	6804      	ldr	r4, [r0, #0]
900110a4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900110a8:	9509      	str	r5, [sp, #36]	; 0x24
900110aa:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
900110ae:	9508      	str	r5, [sp, #32]
900110b0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
900110b4:	9507      	str	r5, [sp, #28]
900110b6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
900110ba:	9506      	str	r5, [sp, #24]
900110bc:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
900110c0:	9505      	str	r5, [sp, #20]
900110c2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
900110c6:	9504      	str	r5, [sp, #16]
900110c8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
900110cc:	9503      	str	r5, [sp, #12]
900110ce:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
900110d2:	9502      	str	r5, [sp, #8]
900110d4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
900110d8:	e9cd 3500 	strd	r3, r5, [sp]
900110dc:	4613      	mov	r3, r2
900110de:	6be4      	ldr	r4, [r4, #60]	; 0x3c
900110e0:	2200      	movs	r2, #0
900110e2:	47a0      	blx	r4
900110e4:	b00b      	add	sp, #44	; 0x2c
900110e6:	bd30      	pop	{r4, r5, pc}

900110e8 <_ZN8touchgfx3HAL10beginFrameEv>:
900110e8:	4b04      	ldr	r3, [pc, #16]	; (900110fc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900110ea:	781b      	ldrb	r3, [r3, #0]
900110ec:	b123      	cbz	r3, 900110f8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900110ee:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
900110f2:	f080 0001 	eor.w	r0, r0, #1
900110f6:	4770      	bx	lr
900110f8:	2001      	movs	r0, #1
900110fa:	4770      	bx	lr
900110fc:	24039702 	.word	0x24039702

90011100 <_ZN8touchgfx3HAL8endFrameEv>:
90011100:	b510      	push	{r4, lr}
90011102:	4604      	mov	r4, r0
90011104:	6840      	ldr	r0, [r0, #4]
90011106:	6803      	ldr	r3, [r0, #0]
90011108:	689b      	ldr	r3, [r3, #8]
9001110a:	4798      	blx	r3
9001110c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90011110:	b113      	cbz	r3, 90011118 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90011112:	2301      	movs	r3, #1
90011114:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90011118:	bd10      	pop	{r4, pc}

9001111a <_ZN8touchgfx3HAL10initializeEv>:
9001111a:	b510      	push	{r4, lr}
9001111c:	4604      	mov	r4, r0
9001111e:	f7f0 fb89 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90011122:	f7ef f9ed 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90011126:	6860      	ldr	r0, [r4, #4]
90011128:	6803      	ldr	r3, [r0, #0]
9001112a:	68db      	ldr	r3, [r3, #12]
9001112c:	4798      	blx	r3
9001112e:	68e0      	ldr	r0, [r4, #12]
90011130:	6803      	ldr	r3, [r0, #0]
90011132:	689b      	ldr	r3, [r3, #8]
90011134:	4798      	blx	r3
90011136:	6823      	ldr	r3, [r4, #0]
90011138:	4620      	mov	r0, r4
9001113a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
9001113c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011140:	4718      	bx	r3
	...

90011144 <_ZN8touchgfx3HAL4tickEv>:
90011144:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011146:	6803      	ldr	r3, [r0, #0]
90011148:	4604      	mov	r4, r0
9001114a:	4d5b      	ldr	r5, [pc, #364]	; (900112b8 <_ZN8touchgfx3HAL4tickEv+0x174>)
9001114c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90011150:	4798      	blx	r3
90011152:	2800      	cmp	r0, #0
90011154:	f000 8095 	beq.w	90011282 <_ZN8touchgfx3HAL4tickEv+0x13e>
90011158:	2001      	movs	r0, #1
9001115a:	2600      	movs	r6, #0
9001115c:	f7ef f9fa 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011160:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90011164:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90011168:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9001116c:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90011170:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90011174:	b133      	cbz	r3, 90011184 <_ZN8touchgfx3HAL4tickEv+0x40>
90011176:	6823      	ldr	r3, [r4, #0]
90011178:	4620      	mov	r0, r4
9001117a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
9001117e:	4798      	blx	r3
90011180:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90011184:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90011188:	2601      	movs	r6, #1
9001118a:	6862      	ldr	r2, [r4, #4]
9001118c:	f083 0301 	eor.w	r3, r3, #1
90011190:	702e      	strb	r6, [r5, #0]
90011192:	7253      	strb	r3, [r2, #9]
90011194:	f005 f886 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
90011198:	6803      	ldr	r3, [r0, #0]
9001119a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001119c:	4798      	blx	r3
9001119e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900111a2:	b90b      	cbnz	r3, 900111a8 <_ZN8touchgfx3HAL4tickEv+0x64>
900111a4:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
900111a8:	f005 f87c 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
900111ac:	6803      	ldr	r3, [r0, #0]
900111ae:	695b      	ldr	r3, [r3, #20]
900111b0:	4798      	blx	r3
900111b2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900111b4:	6803      	ldr	r3, [r0, #0]
900111b6:	691b      	ldr	r3, [r3, #16]
900111b8:	4798      	blx	r3
900111ba:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900111be:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
900111c2:	3b01      	subs	r3, #1
900111c4:	b2db      	uxtb	r3, r3
900111c6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900111ca:	b10a      	cbz	r2, 900111d0 <_ZN8touchgfx3HAL4tickEv+0x8c>
900111cc:	2b00      	cmp	r3, #0
900111ce:	d1eb      	bne.n	900111a8 <_ZN8touchgfx3HAL4tickEv+0x64>
900111d0:	4a3a      	ldr	r2, [pc, #232]	; (900112bc <_ZN8touchgfx3HAL4tickEv+0x178>)
900111d2:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
900111d6:	7813      	ldrb	r3, [r2, #0]
900111d8:	3301      	adds	r3, #1
900111da:	b25b      	sxtb	r3, r3
900111dc:	4299      	cmp	r1, r3
900111de:	7013      	strb	r3, [r2, #0]
900111e0:	dc10      	bgt.n	90011204 <_ZN8touchgfx3HAL4tickEv+0xc0>
900111e2:	2300      	movs	r3, #0
900111e4:	68e0      	ldr	r0, [r4, #12]
900111e6:	a902      	add	r1, sp, #8
900111e8:	7013      	strb	r3, [r2, #0]
900111ea:	aa03      	add	r2, sp, #12
900111ec:	6803      	ldr	r3, [r0, #0]
900111ee:	68db      	ldr	r3, [r3, #12]
900111f0:	4798      	blx	r3
900111f2:	6823      	ldr	r3, [r4, #0]
900111f4:	2800      	cmp	r0, #0
900111f6:	d050      	beq.n	9001129a <_ZN8touchgfx3HAL4tickEv+0x156>
900111f8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
900111fc:	4620      	mov	r0, r4
900111fe:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011202:	4798      	blx	r3
90011204:	2300      	movs	r3, #0
90011206:	6960      	ldr	r0, [r4, #20]
90011208:	f88d 3007 	strb.w	r3, [sp, #7]
9001120c:	b158      	cbz	r0, 90011226 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001120e:	6803      	ldr	r3, [r0, #0]
90011210:	f10d 0107 	add.w	r1, sp, #7
90011214:	68db      	ldr	r3, [r3, #12]
90011216:	4798      	blx	r3
90011218:	b128      	cbz	r0, 90011226 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001121a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001121c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90011220:	6803      	ldr	r3, [r0, #0]
90011222:	68db      	ldr	r3, [r3, #12]
90011224:	4798      	blx	r3
90011226:	f104 001c 	add.w	r0, r4, #28
9001122a:	f015 fd7d 	bl	90026d28 <_ZN8touchgfx8Gestures4tickEv>
9001122e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90011232:	b30b      	cbz	r3, 90011278 <_ZN8touchgfx3HAL4tickEv+0x134>
90011234:	6920      	ldr	r0, [r4, #16]
90011236:	6803      	ldr	r3, [r0, #0]
90011238:	691b      	ldr	r3, [r3, #16]
9001123a:	4798      	blx	r3
9001123c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001123e:	4606      	mov	r6, r0
90011240:	b903      	cbnz	r3, 90011244 <_ZN8touchgfx3HAL4tickEv+0x100>
90011242:	6760      	str	r0, [r4, #116]	; 0x74
90011244:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011246:	4a1e      	ldr	r2, [pc, #120]	; (900112c0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90011248:	1af3      	subs	r3, r6, r3
9001124a:	4293      	cmp	r3, r2
9001124c:	d914      	bls.n	90011278 <_ZN8touchgfx3HAL4tickEv+0x134>
9001124e:	6920      	ldr	r0, [r4, #16]
90011250:	6803      	ldr	r3, [r0, #0]
90011252:	699b      	ldr	r3, [r3, #24]
90011254:	4798      	blx	r3
90011256:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011258:	2264      	movs	r2, #100	; 0x64
9001125a:	1af3      	subs	r3, r6, r3
9001125c:	fbb3 f3f2 	udiv	r3, r3, r2
90011260:	fbb0 f0f3 	udiv	r0, r0, r3
90011264:	2800      	cmp	r0, #0
90011266:	dc1d      	bgt.n	900112a4 <_ZN8touchgfx3HAL4tickEv+0x160>
90011268:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
9001126c:	6920      	ldr	r0, [r4, #16]
9001126e:	2100      	movs	r1, #0
90011270:	6803      	ldr	r3, [r0, #0]
90011272:	69db      	ldr	r3, [r3, #28]
90011274:	4798      	blx	r3
90011276:	6766      	str	r6, [r4, #116]	; 0x74
90011278:	f005 f814 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
9001127c:	6803      	ldr	r3, [r0, #0]
9001127e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011280:	4798      	blx	r3
90011282:	6823      	ldr	r3, [r4, #0]
90011284:	4620      	mov	r0, r4
90011286:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
9001128a:	4798      	blx	r3
9001128c:	2001      	movs	r0, #1
9001128e:	f7ef f995 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011292:	2300      	movs	r3, #0
90011294:	702b      	strb	r3, [r5, #0]
90011296:	b004      	add	sp, #16
90011298:	bd70      	pop	{r4, r5, r6, pc}
9001129a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001129e:	4620      	mov	r0, r4
900112a0:	4798      	blx	r3
900112a2:	e7af      	b.n	90011204 <_ZN8touchgfx3HAL4tickEv+0xc0>
900112a4:	2863      	cmp	r0, #99	; 0x63
900112a6:	bfcb      	itete	gt
900112a8:	2300      	movgt	r3, #0
900112aa:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
900112ae:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
900112b2:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
900112b6:	e7d9      	b.n	9001126c <_ZN8touchgfx3HAL4tickEv+0x128>
900112b8:	24039708 	.word	0x24039708
900112bc:	24039709 	.word	0x24039709
900112c0:	05f5e100 	.word	0x05f5e100

900112c4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900112c4:	b510      	push	{r4, lr}
900112c6:	4604      	mov	r4, r0
900112c8:	f7f0 fae6 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900112cc:	2200      	movs	r2, #0
900112ce:	6863      	ldr	r3, [r4, #4]
900112d0:	729a      	strb	r2, [r3, #10]
900112d2:	bd10      	pop	{r4, pc}

900112d4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900112d4:	65c1      	str	r1, [r0, #92]	; 0x5c
900112d6:	301c      	adds	r0, #28
900112d8:	f015 bd24 	b.w	90026d24 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900112dc <_ZN8touchgfx3HAL5touchEll>:
900112dc:	b530      	push	{r4, r5, lr}
900112de:	b087      	sub	sp, #28
900112e0:	4604      	mov	r4, r0
900112e2:	a804      	add	r0, sp, #16
900112e4:	e9cd 1204 	strd	r1, r2, [sp, #16]
900112e8:	f004 fda6 	bl	90015e38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900112ec:	9b04      	ldr	r3, [sp, #16]
900112ee:	a906      	add	r1, sp, #24
900112f0:	a803      	add	r0, sp, #12
900112f2:	f8ad 300c 	strh.w	r3, [sp, #12]
900112f6:	9b05      	ldr	r3, [sp, #20]
900112f8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900112fc:	f004 fdee 	bl	90015edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011300:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90011304:	f104 001c 	add.w	r0, r4, #28
90011308:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001130c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011310:	b189      	cbz	r1, 90011336 <_ZN8touchgfx3HAL5touchEll+0x5a>
90011312:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90011316:	9300      	str	r3, [sp, #0]
90011318:	4613      	mov	r3, r2
9001131a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
9001131e:	462a      	mov	r2, r5
90011320:	f015 fd10 	bl	90026d44 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90011324:	b128      	cbz	r0, 90011332 <_ZN8touchgfx3HAL5touchEll+0x56>
90011326:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001132a:	6623      	str	r3, [r4, #96]	; 0x60
9001132c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011330:	6663      	str	r3, [r4, #100]	; 0x64
90011332:	b007      	add	sp, #28
90011334:	bd30      	pop	{r4, r5, pc}
90011336:	f015 fd45 	bl	90026dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001133a:	2301      	movs	r3, #1
9001133c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90011340:	e7f1      	b.n	90011326 <_ZN8touchgfx3HAL5touchEll+0x4a>

90011342 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90011342:	b510      	push	{r4, lr}
90011344:	2b00      	cmp	r3, #0
90011346:	d046      	beq.n	900113d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011348:	ea81 0002 	eor.w	r0, r1, r2
9001134c:	07c4      	lsls	r4, r0, #31
9001134e:	d508      	bpl.n	90011362 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011350:	440b      	add	r3, r1
90011352:	3a01      	subs	r2, #1
90011354:	428b      	cmp	r3, r1
90011356:	d93e      	bls.n	900113d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011358:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001135c:	f801 0b01 	strb.w	r0, [r1], #1
90011360:	e7f8      	b.n	90011354 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90011362:	07d0      	lsls	r0, r2, #31
90011364:	bf42      	ittt	mi
90011366:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001136a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001136e:	f801 0b01 	strbmi.w	r0, [r1], #1
90011372:	2b01      	cmp	r3, #1
90011374:	d911      	bls.n	9001139a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011376:	ea81 0402 	eor.w	r4, r1, r2
9001137a:	4610      	mov	r0, r2
9001137c:	07a4      	lsls	r4, r4, #30
9001137e:	d022      	beq.n	900113c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011380:	f023 0401 	bic.w	r4, r3, #1
90011384:	440c      	add	r4, r1
90011386:	428c      	cmp	r4, r1
90011388:	4602      	mov	r2, r0
9001138a:	d904      	bls.n	90011396 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001138c:	8812      	ldrh	r2, [r2, #0]
9001138e:	3002      	adds	r0, #2
90011390:	f821 2b02 	strh.w	r2, [r1], #2
90011394:	e7f7      	b.n	90011386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90011396:	f003 0301 	and.w	r3, r3, #1
9001139a:	f023 0003 	bic.w	r0, r3, #3
9001139e:	4408      	add	r0, r1
900113a0:	4288      	cmp	r0, r1
900113a2:	4614      	mov	r4, r2
900113a4:	d904      	bls.n	900113b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900113a6:	6824      	ldr	r4, [r4, #0]
900113a8:	3204      	adds	r2, #4
900113aa:	f841 4b04 	str.w	r4, [r1], #4
900113ae:	e7f7      	b.n	900113a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900113b0:	f003 0303 	and.w	r3, r3, #3
900113b4:	3a01      	subs	r2, #1
900113b6:	440b      	add	r3, r1
900113b8:	428b      	cmp	r3, r1
900113ba:	d90c      	bls.n	900113d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900113bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900113c0:	f801 0b01 	strb.w	r0, [r1], #1
900113c4:	e7f8      	b.n	900113b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900113c6:	0790      	lsls	r0, r2, #30
900113c8:	d0e7      	beq.n	9001139a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900113ca:	f832 0b02 	ldrh.w	r0, [r2], #2
900113ce:	3b02      	subs	r3, #2
900113d0:	f821 0b02 	strh.w	r0, [r1], #2
900113d4:	e7e1      	b.n	9001139a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900113d6:	2001      	movs	r0, #1
900113d8:	bd10      	pop	{r4, pc}

900113da <_ZN8touchgfx3HAL7noTouchEv>:
900113da:	b510      	push	{r4, lr}
900113dc:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900113e0:	4604      	mov	r4, r0
900113e2:	b153      	cbz	r3, 900113fa <_ZN8touchgfx3HAL7noTouchEv+0x20>
900113e4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900113e8:	2101      	movs	r1, #1
900113ea:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900113ee:	301c      	adds	r0, #28
900113f0:	f015 fce8 	bl	90026dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900113f4:	2300      	movs	r3, #0
900113f6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900113fa:	bd10      	pop	{r4, pc}

900113fc <_ZN8touchgfx8Drawable5setXYEss>:
900113fc:	b570      	push	{r4, r5, r6, lr}
900113fe:	6803      	ldr	r3, [r0, #0]
90011400:	4604      	mov	r4, r0
90011402:	4615      	mov	r5, r2
90011404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011406:	4798      	blx	r3
90011408:	6823      	ldr	r3, [r4, #0]
9001140a:	4629      	mov	r1, r5
9001140c:	4620      	mov	r0, r4
9001140e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011414:	4718      	bx	r3
	...

90011418 <_ZN8touchgfx3HAL3lcdEv>:
90011418:	4b04      	ldr	r3, [pc, #16]	; (9001142c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001141a:	681b      	ldr	r3, [r3, #0]
9001141c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011420:	b10a      	cbz	r2, 90011426 <_ZN8touchgfx3HAL3lcdEv+0xe>
90011422:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90011424:	b900      	cbnz	r0, 90011428 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011426:	6898      	ldr	r0, [r3, #8]
90011428:	4770      	bx	lr
9001142a:	bf00      	nop
9001142c:	24039704 	.word	0x24039704

90011430 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011430:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011434:	b085      	sub	sp, #20
90011436:	4604      	mov	r4, r0
90011438:	2000      	movs	r0, #0
9001143a:	4699      	mov	r9, r3
9001143c:	ad04      	add	r5, sp, #16
9001143e:	460f      	mov	r7, r1
90011440:	4690      	mov	r8, r2
90011442:	f845 0d04 	str.w	r0, [r5, #-4]!
90011446:	69a0      	ldr	r0, [r4, #24]
90011448:	6806      	ldr	r6, [r0, #0]
9001144a:	9501      	str	r5, [sp, #4]
9001144c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90011450:	9500      	str	r5, [sp, #0]
90011452:	6835      	ldr	r5, [r6, #0]
90011454:	47a8      	blx	r5
90011456:	4d10      	ldr	r5, [pc, #64]	; (90011498 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011458:	4606      	mov	r6, r0
9001145a:	f8a5 9000 	strh.w	r9, [r5]
9001145e:	f7ff ffdb 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011462:	6803      	ldr	r3, [r0, #0]
90011464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011466:	4798      	blx	r3
90011468:	b128      	cbz	r0, 90011476 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001146a:	2801      	cmp	r0, #1
9001146c:	d00b      	beq.n	90011486 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001146e:	4630      	mov	r0, r6
90011470:	b005      	add	sp, #20
90011472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011476:	882b      	ldrh	r3, [r5, #0]
90011478:	fb08 7203 	mla	r2, r8, r3, r7
9001147c:	9b03      	ldr	r3, [sp, #12]
9001147e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011482:	63e3      	str	r3, [r4, #60]	; 0x3c
90011484:	e7f3      	b.n	9001146e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011486:	882a      	ldrh	r2, [r5, #0]
90011488:	9b03      	ldr	r3, [sp, #12]
9001148a:	fb08 7202 	mla	r2, r8, r2, r7
9001148e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011492:	1a9a      	subs	r2, r3, r2
90011494:	63e2      	str	r2, [r4, #60]	; 0x3c
90011496:	e7ea      	b.n	9001146e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011498:	240396fe 	.word	0x240396fe

9001149c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001149c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001149e:	b08b      	sub	sp, #44	; 0x2c
900114a0:	4617      	mov	r7, r2
900114a2:	4604      	mov	r4, r0
900114a4:	460e      	mov	r6, r1
900114a6:	461d      	mov	r5, r3
900114a8:	f7ff ffb6 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
900114ac:	6803      	ldr	r3, [r0, #0]
900114ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900114b0:	4798      	blx	r3
900114b2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900114b6:	9007      	str	r0, [sp, #28]
900114b8:	4631      	mov	r1, r6
900114ba:	6822      	ldr	r2, [r4, #0]
900114bc:	e9cd 0308 	strd	r0, r3, [sp, #32]
900114c0:	4b0c      	ldr	r3, [pc, #48]	; (900114f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900114c2:	4620      	mov	r0, r4
900114c4:	881b      	ldrh	r3, [r3, #0]
900114c6:	9306      	str	r3, [sp, #24]
900114c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900114cc:	9305      	str	r3, [sp, #20]
900114ce:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900114d2:	9304      	str	r3, [sp, #16]
900114d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900114d8:	9303      	str	r3, [sp, #12]
900114da:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900114de:	9302      	str	r3, [sp, #8]
900114e0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900114e4:	e9cd 5300 	strd	r5, r3, [sp]
900114e8:	463b      	mov	r3, r7
900114ea:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
900114ec:	2200      	movs	r2, #0
900114ee:	47a8      	blx	r5
900114f0:	b00b      	add	sp, #44	; 0x2c
900114f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900114f4:	240396fe 	.word	0x240396fe

900114f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900114f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900114fc:	4698      	mov	r8, r3
900114fe:	6803      	ldr	r3, [r0, #0]
90011500:	b08b      	sub	sp, #44	; 0x2c
90011502:	4617      	mov	r7, r2
90011504:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
90011506:	460e      	mov	r6, r1
90011508:	4b13      	ldr	r3, [pc, #76]	; (90011558 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001150a:	4604      	mov	r4, r0
9001150c:	f8b3 9000 	ldrh.w	r9, [r3]
90011510:	f7ff ff82 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011514:	6803      	ldr	r3, [r0, #0]
90011516:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011518:	4798      	blx	r3
9001151a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001151e:	2200      	movs	r2, #0
90011520:	4631      	mov	r1, r6
90011522:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011526:	2302      	movs	r3, #2
90011528:	4620      	mov	r0, r4
9001152a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001152e:	2301      	movs	r3, #1
90011530:	9305      	str	r3, [sp, #20]
90011532:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011536:	9304      	str	r3, [sp, #16]
90011538:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001153c:	9303      	str	r3, [sp, #12]
9001153e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011542:	9302      	str	r3, [sp, #8]
90011544:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011548:	e9cd 8300 	strd	r8, r3, [sp]
9001154c:	463b      	mov	r3, r7
9001154e:	47a8      	blx	r5
90011550:	b00b      	add	sp, #44	; 0x2c
90011552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011556:	bf00      	nop
90011558:	240396fe 	.word	0x240396fe

9001155c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
9001155c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011560:	4698      	mov	r8, r3
90011562:	6803      	ldr	r3, [r0, #0]
90011564:	b087      	sub	sp, #28
90011566:	460e      	mov	r6, r1
90011568:	6d9d      	ldr	r5, [r3, #88]	; 0x58
9001156a:	4617      	mov	r7, r2
9001156c:	4b0f      	ldr	r3, [pc, #60]	; (900115ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
9001156e:	4604      	mov	r4, r0
90011570:	f8b3 9000 	ldrh.w	r9, [r3]
90011574:	f7ff ff50 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011578:	6803      	ldr	r3, [r0, #0]
9001157a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001157c:	4798      	blx	r3
9001157e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90011582:	463a      	mov	r2, r7
90011584:	4631      	mov	r1, r6
90011586:	f8cd 900c 	str.w	r9, [sp, #12]
9001158a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001158e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90011592:	4620      	mov	r0, r4
90011594:	9302      	str	r3, [sp, #8]
90011596:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001159a:	9301      	str	r3, [sp, #4]
9001159c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900115a0:	9300      	str	r3, [sp, #0]
900115a2:	4643      	mov	r3, r8
900115a4:	47a8      	blx	r5
900115a6:	b007      	add	sp, #28
900115a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900115ac:	240396fe 	.word	0x240396fe

900115b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900115b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900115b4:	4604      	mov	r4, r0
900115b6:	b08f      	sub	sp, #60	; 0x3c
900115b8:	4610      	mov	r0, r2
900115ba:	460d      	mov	r5, r1
900115bc:	4691      	mov	r9, r2
900115be:	461e      	mov	r6, r3
900115c0:	f007 ff86 	bl	900194d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900115c4:	2800      	cmp	r0, #0
900115c6:	f000 809d 	beq.w	90011704 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900115ca:	6823      	ldr	r3, [r4, #0]
900115cc:	4620      	mov	r0, r4
900115ce:	f8df b198 	ldr.w	fp, [pc, #408]	; 90011768 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900115d2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900115d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900115d8:	4798      	blx	r3
900115da:	6823      	ldr	r3, [r4, #0]
900115dc:	4620      	mov	r0, r4
900115de:	f8df a18c 	ldr.w	sl, [pc, #396]	; 9001176c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900115e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900115e4:	4798      	blx	r3
900115e6:	f8bb 3000 	ldrh.w	r3, [fp]
900115ea:	4f5c      	ldr	r7, [pc, #368]	; (9001175c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900115ec:	9301      	str	r3, [sp, #4]
900115ee:	f8ba 3000 	ldrh.w	r3, [sl]
900115f2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900115f6:	4640      	mov	r0, r8
900115f8:	9302      	str	r3, [sp, #8]
900115fa:	883b      	ldrh	r3, [r7, #0]
900115fc:	9303      	str	r3, [sp, #12]
900115fe:	4b58      	ldr	r3, [pc, #352]	; (90011760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011600:	881a      	ldrh	r2, [r3, #0]
90011602:	9305      	str	r3, [sp, #20]
90011604:	9204      	str	r2, [sp, #16]
90011606:	f007 fff7 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001160a:	8038      	strh	r0, [r7, #0]
9001160c:	4640      	mov	r0, r8
9001160e:	f008 f827 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011612:	9b05      	ldr	r3, [sp, #20]
90011614:	b280      	uxth	r0, r0
90011616:	8018      	strh	r0, [r3, #0]
90011618:	4b52      	ldr	r3, [pc, #328]	; (90011764 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001161a:	781b      	ldrb	r3, [r3, #0]
9001161c:	2b00      	cmp	r3, #0
9001161e:	d174      	bne.n	9001170a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011620:	883b      	ldrh	r3, [r7, #0]
90011622:	f8aa 0000 	strh.w	r0, [sl]
90011626:	f8ab 3000 	strh.w	r3, [fp]
9001162a:	4648      	mov	r0, r9
9001162c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90011630:	f007 ff4e 	bl	900194d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011634:	2200      	movs	r2, #0
90011636:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9001163a:	4611      	mov	r1, r2
9001163c:	4628      	mov	r0, r5
9001163e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90011642:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90011646:	f7ff fed9 	bl	900113fc <_ZN8touchgfx8Drawable5setXYEss>
9001164a:	2301      	movs	r3, #1
9001164c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90011650:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90011654:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011658:	2b00      	cmp	r3, #0
9001165a:	dd5c      	ble.n	90011716 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001165c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011660:	2b00      	cmp	r3, #0
90011662:	dd58      	ble.n	90011716 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011664:	462a      	mov	r2, r5
90011666:	ab0a      	add	r3, sp, #40	; 0x28
90011668:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001166c:	6851      	ldr	r1, [r2, #4]
9001166e:	c303      	stmia	r3!, {r0, r1}
90011670:	4631      	mov	r1, r6
90011672:	a80a      	add	r0, sp, #40	; 0x28
90011674:	f7ff fbec 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90011678:	4b38      	ldr	r3, [pc, #224]	; (9001175c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001167a:	2100      	movs	r1, #0
9001167c:	f9b3 2000 	ldrsh.w	r2, [r3]
90011680:	4b37      	ldr	r3, [pc, #220]	; (90011760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011682:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90011686:	aa0a      	add	r2, sp, #40	; 0x28
90011688:	f9b3 3000 	ldrsh.w	r3, [r3]
9001168c:	910c      	str	r1, [sp, #48]	; 0x30
9001168e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011692:	ab08      	add	r3, sp, #32
90011694:	e892 0003 	ldmia.w	r2, {r0, r1}
90011698:	e883 0003 	stmia.w	r3, {r0, r1}
9001169c:	4618      	mov	r0, r3
9001169e:	a90c      	add	r1, sp, #48	; 0x30
900116a0:	f7ff fbd6 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900116a4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
900116a6:	2b00      	cmp	r3, #0
900116a8:	d13c      	bne.n	90011724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900116aa:	2000      	movs	r0, #0
900116ac:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900116b0:	2600      	movs	r6, #0
900116b2:	696b      	ldr	r3, [r5, #20]
900116b4:	a908      	add	r1, sp, #32
900116b6:	682a      	ldr	r2, [r5, #0]
900116b8:	4628      	mov	r0, r5
900116ba:	9305      	str	r3, [sp, #20]
900116bc:	616e      	str	r6, [r5, #20]
900116be:	6892      	ldr	r2, [r2, #8]
900116c0:	4790      	blx	r2
900116c2:	9b05      	ldr	r3, [sp, #20]
900116c4:	4652      	mov	r2, sl
900116c6:	4649      	mov	r1, r9
900116c8:	616b      	str	r3, [r5, #20]
900116ca:	4628      	mov	r0, r5
900116cc:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
900116d0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900116d4:	f7ff fe92 	bl	900113fc <_ZN8touchgfx8Drawable5setXYEss>
900116d8:	9a01      	ldr	r2, [sp, #4]
900116da:	4b23      	ldr	r3, [pc, #140]	; (90011768 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900116dc:	4620      	mov	r0, r4
900116de:	801a      	strh	r2, [r3, #0]
900116e0:	9a02      	ldr	r2, [sp, #8]
900116e2:	4b22      	ldr	r3, [pc, #136]	; (9001176c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900116e4:	801a      	strh	r2, [r3, #0]
900116e6:	9a03      	ldr	r2, [sp, #12]
900116e8:	4b1c      	ldr	r3, [pc, #112]	; (9001175c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900116ea:	801a      	strh	r2, [r3, #0]
900116ec:	4b1c      	ldr	r3, [pc, #112]	; (90011760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900116ee:	9a04      	ldr	r2, [sp, #16]
900116f0:	801a      	strh	r2, [r3, #0]
900116f2:	6823      	ldr	r3, [r4, #0]
900116f4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900116f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900116fa:	4798      	blx	r3
900116fc:	6823      	ldr	r3, [r4, #0]
900116fe:	4620      	mov	r0, r4
90011700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011702:	4798      	blx	r3
90011704:	b00f      	add	sp, #60	; 0x3c
90011706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001170a:	883b      	ldrh	r3, [r7, #0]
9001170c:	f8ab 0000 	strh.w	r0, [fp]
90011710:	f8aa 3000 	strh.w	r3, [sl]
90011714:	e789      	b.n	9001162a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90011716:	462a      	mov	r2, r5
90011718:	ab0a      	add	r3, sp, #40	; 0x28
9001171a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001171e:	6851      	ldr	r1, [r2, #4]
90011720:	c303      	stmia	r3!, {r0, r1}
90011722:	e7a9      	b.n	90011678 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90011724:	a807      	add	r0, sp, #28
90011726:	f008 f8d7 	bl	900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001172a:	4606      	mov	r6, r0
9001172c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9001172e:	6803      	ldr	r3, [r0, #0]
90011730:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011732:	4798      	blx	r3
90011734:	4286      	cmp	r6, r0
90011736:	d1b8      	bne.n	900116aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011738:	f7ff fe6e 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
9001173c:	6803      	ldr	r3, [r0, #0]
9001173e:	4606      	mov	r6, r0
90011740:	a807      	add	r0, sp, #28
90011742:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011744:	9305      	str	r3, [sp, #20]
90011746:	f008 f8c7 	bl	900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001174a:	9b05      	ldr	r3, [sp, #20]
9001174c:	4601      	mov	r1, r0
9001174e:	4630      	mov	r0, r6
90011750:	4798      	blx	r3
90011752:	f080 0001 	eor.w	r0, r0, #1
90011756:	b2c0      	uxtb	r0, r0
90011758:	e7a8      	b.n	900116ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001175a:	bf00      	nop
9001175c:	240396f8 	.word	0x240396f8
90011760:	240396fa 	.word	0x240396fa
90011764:	240396fc 	.word	0x240396fc
90011768:	240396fe 	.word	0x240396fe
9001176c:	24039700 	.word	0x24039700

90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011770:	4b07      	ldr	r3, [pc, #28]	; (90011790 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90011772:	b510      	push	{r4, lr}
90011774:	781b      	ldrb	r3, [r3, #0]
90011776:	4604      	mov	r4, r0
90011778:	b13b      	cbz	r3, 9001178a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001177a:	6803      	ldr	r3, [r0, #0]
9001177c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001177e:	4798      	blx	r3
90011780:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011782:	4283      	cmp	r3, r0
90011784:	d101      	bne.n	9001178a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011786:	6c20      	ldr	r0, [r4, #64]	; 0x40
90011788:	bd10      	pop	{r4, pc}
9001178a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001178c:	e7fc      	b.n	90011788 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001178e:	bf00      	nop
90011790:	24039702 	.word	0x24039702

90011794 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011798:	461d      	mov	r5, r3
9001179a:	b08a      	sub	sp, #40	; 0x28
9001179c:	f44f 6380 	mov.w	r3, #1024	; 0x400
900117a0:	4690      	mov	r8, r2
900117a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
900117a6:	2400      	movs	r4, #0
900117a8:	4607      	mov	r7, r0
900117aa:	fb06 8505 	mla	r5, r6, r5, r8
900117ae:	9404      	str	r4, [sp, #16]
900117b0:	f88d 4020 	strb.w	r4, [sp, #32]
900117b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
900117b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900117bc:	f8ad 3018 	strh.w	r3, [sp, #24]
900117c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900117c4:	f8ad 301a 	strh.w	r3, [sp, #26]
900117c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900117cc:	f8ad 301c 	strh.w	r3, [sp, #28]
900117d0:	f7ff ffce 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900117d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900117d8:	6878      	ldr	r0, [r7, #4]
900117da:	f8ad 601e 	strh.w	r6, [sp, #30]
900117de:	a901      	add	r1, sp, #4
900117e0:	9505      	str	r5, [sp, #20]
900117e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900117e6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900117ea:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900117ee:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900117f2:	6803      	ldr	r3, [r0, #0]
900117f4:	685b      	ldr	r3, [r3, #4]
900117f6:	4798      	blx	r3
900117f8:	b00a      	add	sp, #40	; 0x28
900117fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900117fe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900117fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011802:	b08b      	sub	sp, #44	; 0x2c
90011804:	2400      	movs	r4, #0
90011806:	4691      	mov	r9, r2
90011808:	461d      	mov	r5, r3
9001180a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
9001180e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90011812:	4688      	mov	r8, r1
90011814:	4607      	mov	r7, r0
90011816:	9404      	str	r4, [sp, #16]
90011818:	fb06 9505 	mla	r5, r6, r5, r9
9001181c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011820:	f7ff ffa6 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011824:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011828:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001182c:	6878      	ldr	r0, [r7, #4]
9001182e:	f8ad 3018 	strh.w	r3, [sp, #24]
90011832:	a901      	add	r1, sp, #4
90011834:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011838:	9505      	str	r5, [sp, #20]
9001183a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001183e:	f8ad 401c 	strh.w	r4, [sp, #28]
90011842:	f8ad 601e 	strh.w	r6, [sp, #30]
90011846:	f8cd 8010 	str.w	r8, [sp, #16]
9001184a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001184e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011852:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90011856:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001185a:	6803      	ldr	r3, [r0, #0]
9001185c:	685b      	ldr	r3, [r3, #4]
9001185e:	4798      	blx	r3
90011860:	b00b      	add	sp, #44	; 0x2c
90011862:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001186c:	b08a      	sub	sp, #40	; 0x28
9001186e:	4698      	mov	r8, r3
90011870:	2300      	movs	r3, #0
90011872:	4606      	mov	r6, r0
90011874:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90011878:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001187c:	2d0b      	cmp	r5, #11
9001187e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90011882:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90011886:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001188a:	9304      	str	r3, [sp, #16]
9001188c:	d137      	bne.n	900118fe <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001188e:	2380      	movs	r3, #128	; 0x80
90011890:	f88d 0020 	strb.w	r0, [sp, #32]
90011894:	4630      	mov	r0, r6
90011896:	9203      	str	r2, [sp, #12]
90011898:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001189c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900118a0:	f8ad 3018 	strh.w	r3, [sp, #24]
900118a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900118a8:	f8ad 301a 	strh.w	r3, [sp, #26]
900118ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900118b0:	f8ad 301c 	strh.w	r3, [sp, #28]
900118b4:	f7ff ff5c 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900118b8:	2c0b      	cmp	r4, #11
900118ba:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900118be:	f8ad 701e 	strh.w	r7, [sp, #30]
900118c2:	bf94      	ite	ls
900118c4:	4b19      	ldrls	r3, [pc, #100]	; (9001192c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900118c6:	2100      	movhi	r1, #0
900118c8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900118cc:	bf98      	it	ls
900118ce:	5d19      	ldrbls	r1, [r3, r4]
900118d0:	fb02 8307 	mla	r3, r2, r7, r8
900118d4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900118d8:	10c9      	asrs	r1, r1, #3
900118da:	fb01 0003 	mla	r0, r1, r3, r0
900118de:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900118e2:	a901      	add	r1, sp, #4
900118e4:	9005      	str	r0, [sp, #20]
900118e6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900118ea:	2300      	movs	r3, #0
900118ec:	6870      	ldr	r0, [r6, #4]
900118ee:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900118f2:	6803      	ldr	r3, [r0, #0]
900118f4:	685b      	ldr	r3, [r3, #4]
900118f6:	4798      	blx	r3
900118f8:	b00a      	add	sp, #40	; 0x28
900118fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900118fe:	2d02      	cmp	r5, #2
90011900:	d109      	bne.n	90011916 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011902:	28ff      	cmp	r0, #255	; 0xff
90011904:	d105      	bne.n	90011912 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011906:	f1bc 0f00 	cmp.w	ip, #0
9001190a:	bf14      	ite	ne
9001190c:	2340      	movne	r3, #64	; 0x40
9001190e:	2320      	moveq	r3, #32
90011910:	e7be      	b.n	90011890 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011912:	2340      	movs	r3, #64	; 0x40
90011914:	e7bc      	b.n	90011890 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011916:	28ff      	cmp	r0, #255	; 0xff
90011918:	d105      	bne.n	90011926 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001191a:	f1bc 0f00 	cmp.w	ip, #0
9001191e:	bf14      	ite	ne
90011920:	2304      	movne	r3, #4
90011922:	2301      	moveq	r3, #1
90011924:	e7b4      	b.n	90011890 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011926:	2304      	movs	r3, #4
90011928:	e7b2      	b.n	90011890 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001192a:	bf00      	nop
9001192c:	9002b360 	.word	0x9002b360

90011930 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011934:	b08b      	sub	sp, #44	; 0x2c
90011936:	461d      	mov	r5, r3
90011938:	2400      	movs	r4, #0
9001193a:	4688      	mov	r8, r1
9001193c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90011940:	4693      	mov	fp, r2
90011942:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90011946:	4607      	mov	r7, r0
90011948:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001194c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90011950:	9404      	str	r4, [sp, #16]
90011952:	bf14      	ite	ne
90011954:	2308      	movne	r3, #8
90011956:	2302      	moveq	r3, #2
90011958:	fb05 b50a 	mla	r5, r5, sl, fp
9001195c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011960:	f7ff ff06 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011964:	2e0b      	cmp	r6, #11
90011966:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001196a:	a901      	add	r1, sp, #4
9001196c:	bf98      	it	ls
9001196e:	4b13      	ldrls	r3, [pc, #76]	; (900119bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011970:	f8ad a01e 	strh.w	sl, [sp, #30]
90011974:	bf98      	it	ls
90011976:	5d9c      	ldrbls	r4, [r3, r6]
90011978:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001197c:	10e4      	asrs	r4, r4, #3
9001197e:	f8cd 8010 	str.w	r8, [sp, #16]
90011982:	f8ad 3018 	strh.w	r3, [sp, #24]
90011986:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001198a:	fb04 0405 	mla	r4, r4, r5, r0
9001198e:	6878      	ldr	r0, [r7, #4]
90011990:	f8ad 301a 	strh.w	r3, [sp, #26]
90011994:	2300      	movs	r3, #0
90011996:	9405      	str	r4, [sp, #20]
90011998:	f8ad 301c 	strh.w	r3, [sp, #28]
9001199c:	f88d 9020 	strb.w	r9, [sp, #32]
900119a0:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
900119a4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900119a8:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
900119ac:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
900119b0:	6803      	ldr	r3, [r0, #0]
900119b2:	685b      	ldr	r3, [r3, #4]
900119b4:	4798      	blx	r3
900119b6:	b00b      	add	sp, #44	; 0x2c
900119b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900119bc:	9002b360 	.word	0x9002b360

900119c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900119c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900119c4:	461e      	mov	r6, r3
900119c6:	4b0a      	ldr	r3, [pc, #40]	; (900119f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900119c8:	460f      	mov	r7, r1
900119ca:	4690      	mov	r8, r2
900119cc:	881d      	ldrh	r5, [r3, #0]
900119ce:	f7ff fd23 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
900119d2:	6803      	ldr	r3, [r0, #0]
900119d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900119d6:	4798      	blx	r3
900119d8:	280b      	cmp	r0, #11
900119da:	bf96      	itet	ls
900119dc:	4b05      	ldrls	r3, [pc, #20]	; (900119f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900119de:	2400      	movhi	r4, #0
900119e0:	5c1c      	ldrbls	r4, [r3, r0]
900119e2:	fb08 7005 	mla	r0, r8, r5, r7
900119e6:	10e4      	asrs	r4, r4, #3
900119e8:	fb04 6000 	mla	r0, r4, r0, r6
900119ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900119f0:	240396fe 	.word	0x240396fe
900119f4:	9002b360 	.word	0x9002b360

900119f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900119f8:	b5f0      	push	{r4, r5, r6, r7, lr}
900119fa:	b08b      	sub	sp, #44	; 0x2c
900119fc:	461f      	mov	r7, r3
900119fe:	4604      	mov	r4, r0
90011a00:	4616      	mov	r6, r2
90011a02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90011a06:	2500      	movs	r5, #0
90011a08:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011a0c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011a10:	9504      	str	r5, [sp, #16]
90011a12:	f8ad 3018 	strh.w	r3, [sp, #24]
90011a16:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011a1a:	f8ad 301a 	strh.w	r3, [sp, #26]
90011a1e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011a22:	f8ad 301c 	strh.w	r3, [sp, #28]
90011a26:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90011a2a:	f88d 3020 	strb.w	r3, [sp, #32]
90011a2e:	f7ff fe9f 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011a32:	463a      	mov	r2, r7
90011a34:	4631      	mov	r1, r6
90011a36:	4603      	mov	r3, r0
90011a38:	4620      	mov	r0, r4
90011a3a:	f7ff ffc1 	bl	900119c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011a3e:	4b0e      	ldr	r3, [pc, #56]	; (90011a78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011a40:	9005      	str	r0, [sp, #20]
90011a42:	881b      	ldrh	r3, [r3, #0]
90011a44:	f8ad 301e 	strh.w	r3, [sp, #30]
90011a48:	f7ff fce6 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011a4c:	6803      	ldr	r3, [r0, #0]
90011a4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011a50:	4798      	blx	r3
90011a52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90011a54:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90011a58:	a901      	add	r1, sp, #4
90011a5a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90011a5e:	9304      	str	r3, [sp, #16]
90011a60:	6860      	ldr	r0, [r4, #4]
90011a62:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90011a66:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90011a6a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90011a6e:	6803      	ldr	r3, [r0, #0]
90011a70:	685b      	ldr	r3, [r3, #4]
90011a72:	4798      	blx	r3
90011a74:	b00b      	add	sp, #44	; 0x2c
90011a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011a78:	240396fe 	.word	0x240396fe

90011a7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90011a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011a7e:	b08d      	sub	sp, #52	; 0x34
90011a80:	2501      	movs	r5, #1
90011a82:	4604      	mov	r4, r0
90011a84:	466b      	mov	r3, sp
90011a86:	9503      	str	r5, [sp, #12]
90011a88:	e883 0006 	stmia.w	r3, {r1, r2}
90011a8c:	2300      	movs	r3, #0
90011a8e:	f8bd 6000 	ldrh.w	r6, [sp]
90011a92:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90011a96:	9306      	str	r3, [sp, #24]
90011a98:	6803      	ldr	r3, [r0, #0]
90011a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011a9c:	4798      	blx	r3
90011a9e:	463a      	mov	r2, r7
90011aa0:	4631      	mov	r1, r6
90011aa2:	4603      	mov	r3, r0
90011aa4:	4620      	mov	r0, r4
90011aa6:	f7ff ff8b 	bl	900119c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011aaa:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011aac:	9004      	str	r0, [sp, #16]
90011aae:	9307      	str	r3, [sp, #28]
90011ab0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011ab4:	f8ad 3020 	strh.w	r3, [sp, #32]
90011ab8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011abc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90011ac0:	4b0e      	ldr	r3, [pc, #56]	; (90011afc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90011ac2:	881b      	ldrh	r3, [r3, #0]
90011ac4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90011ac8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90011acc:	f7ff fca4 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011ad0:	6803      	ldr	r3, [r0, #0]
90011ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011ad4:	4798      	blx	r3
90011ad6:	23ff      	movs	r3, #255	; 0xff
90011ad8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90011adc:	a903      	add	r1, sp, #12
90011ade:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90011ae2:	6860      	ldr	r0, [r4, #4]
90011ae4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90011ae8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90011aec:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90011af0:	6803      	ldr	r3, [r0, #0]
90011af2:	685b      	ldr	r3, [r3, #4]
90011af4:	4798      	blx	r3
90011af6:	6c60      	ldr	r0, [r4, #68]	; 0x44
90011af8:	b00d      	add	sp, #52	; 0x34
90011afa:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011afc:	240396fe 	.word	0x240396fe

90011b00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90011b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011b04:	b08c      	sub	sp, #48	; 0x30
90011b06:	461e      	mov	r6, r3
90011b08:	2300      	movs	r3, #0
90011b0a:	4604      	mov	r4, r0
90011b0c:	466d      	mov	r5, sp
90011b0e:	9306      	str	r3, [sp, #24]
90011b10:	6803      	ldr	r3, [r0, #0]
90011b12:	e885 0006 	stmia.w	r5, {r1, r2}
90011b16:	2501      	movs	r5, #1
90011b18:	f8bd 7000 	ldrh.w	r7, [sp]
90011b1c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90011b20:	9503      	str	r5, [sp, #12]
90011b22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011b24:	4798      	blx	r3
90011b26:	4642      	mov	r2, r8
90011b28:	4639      	mov	r1, r7
90011b2a:	4603      	mov	r3, r0
90011b2c:	4620      	mov	r0, r4
90011b2e:	f7ff ff47 	bl	900119c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011b32:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90011b36:	9004      	str	r0, [sp, #16]
90011b38:	f8ad 3020 	strh.w	r3, [sp, #32]
90011b3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011b40:	9607      	str	r6, [sp, #28]
90011b42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90011b46:	4b10      	ldr	r3, [pc, #64]	; (90011b88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011b48:	881b      	ldrh	r3, [r3, #0]
90011b4a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90011b4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90011b50:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90011b54:	f7ff fc60 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90011b58:	6803      	ldr	r3, [r0, #0]
90011b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011b5c:	4798      	blx	r3
90011b5e:	23ff      	movs	r3, #255	; 0xff
90011b60:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90011b64:	a903      	add	r1, sp, #12
90011b66:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90011b6a:	6860      	ldr	r0, [r4, #4]
90011b6c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90011b70:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90011b74:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90011b78:	6803      	ldr	r3, [r0, #0]
90011b7a:	685b      	ldr	r3, [r3, #4]
90011b7c:	4798      	blx	r3
90011b7e:	4630      	mov	r0, r6
90011b80:	b00c      	add	sp, #48	; 0x30
90011b82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011b86:	bf00      	nop
90011b88:	240396fe 	.word	0x240396fe

90011b8c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90011b8c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011b8e:	b085      	sub	sp, #20
90011b90:	4605      	mov	r5, r0
90011b92:	ac02      	add	r4, sp, #8
90011b94:	e884 0006 	stmia.w	r4, {r1, r2}
90011b98:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90011b9c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90011ba0:	f7ff fde6 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011ba4:	4631      	mov	r1, r6
90011ba6:	4603      	mov	r3, r0
90011ba8:	463a      	mov	r2, r7
90011baa:	4628      	mov	r0, r5
90011bac:	f7ff ff08 	bl	900119c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011bb0:	4a05      	ldr	r2, [pc, #20]	; (90011bc8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90011bb2:	682b      	ldr	r3, [r5, #0]
90011bb4:	8812      	ldrh	r2, [r2, #0]
90011bb6:	9200      	str	r2, [sp, #0]
90011bb8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90011bba:	4603      	mov	r3, r0
90011bbc:	4628      	mov	r0, r5
90011bbe:	e894 0006 	ldmia.w	r4, {r1, r2}
90011bc2:	47b0      	blx	r6
90011bc4:	b005      	add	sp, #20
90011bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011bc8:	240396fe 	.word	0x240396fe

90011bcc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90011bcc:	b570      	push	{r4, r5, r6, lr}
90011bce:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90011bd2:	4604      	mov	r4, r0
90011bd4:	b19b      	cbz	r3, 90011bfe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90011bd6:	2002      	movs	r0, #2
90011bd8:	f7ee fd24 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011bdc:	2300      	movs	r3, #0
90011bde:	4620      	mov	r0, r4
90011be0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90011be4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90011be8:	6823      	ldr	r3, [r4, #0]
90011bea:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90011bee:	f7ff fdbf 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011bf2:	4601      	mov	r1, r0
90011bf4:	4620      	mov	r0, r4
90011bf6:	462b      	mov	r3, r5
90011bf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011bfc:	4718      	bx	r3
90011bfe:	bd70      	pop	{r4, r5, r6, pc}

90011c00 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90011c00:	b570      	push	{r4, r5, r6, lr}
90011c02:	4605      	mov	r5, r0
90011c04:	460c      	mov	r4, r1
90011c06:	2003      	movs	r0, #3
90011c08:	b149      	cbz	r1, 90011c1e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011c0a:	f7ee fca3 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011c0e:	6928      	ldr	r0, [r5, #16]
90011c10:	b168      	cbz	r0, 90011c2e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011c12:	6803      	ldr	r3, [r0, #0]
90011c14:	2101      	movs	r1, #1
90011c16:	695b      	ldr	r3, [r3, #20]
90011c18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011c1c:	4718      	bx	r3
90011c1e:	f7ee fccd 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011c22:	6928      	ldr	r0, [r5, #16]
90011c24:	b118      	cbz	r0, 90011c2e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90011c26:	6803      	ldr	r3, [r0, #0]
90011c28:	4621      	mov	r1, r4
90011c2a:	695b      	ldr	r3, [r3, #20]
90011c2c:	e7f4      	b.n	90011c18 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90011c2e:	bd70      	pop	{r4, r5, r6, pc}

90011c30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90011c30:	b538      	push	{r3, r4, r5, lr}
90011c32:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90011c36:	4604      	mov	r4, r0
90011c38:	460d      	mov	r5, r1
90011c3a:	428b      	cmp	r3, r1
90011c3c:	d006      	beq.n	90011c4c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011c3e:	6803      	ldr	r3, [r0, #0]
90011c40:	b929      	cbnz	r1, 90011c4e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90011c42:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90011c46:	4798      	blx	r3
90011c48:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90011c4c:	bd38      	pop	{r3, r4, r5, pc}
90011c4e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90011c52:	e7f8      	b.n	90011c46 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90011c54 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90011c54:	4b0d      	ldr	r3, [pc, #52]	; (90011c8c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90011c56:	b510      	push	{r4, lr}
90011c58:	781b      	ldrb	r3, [r3, #0]
90011c5a:	4604      	mov	r4, r0
90011c5c:	b95b      	cbnz	r3, 90011c76 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011c5e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90011c62:	2b02      	cmp	r3, #2
90011c64:	d007      	beq.n	90011c76 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011c66:	6840      	ldr	r0, [r0, #4]
90011c68:	f000 f91a 	bl	90011ea0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90011c6c:	b118      	cbz	r0, 90011c76 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011c6e:	6862      	ldr	r2, [r4, #4]
90011c70:	7a53      	ldrb	r3, [r2, #9]
90011c72:	2b00      	cmp	r3, #0
90011c74:	d0fc      	beq.n	90011c70 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90011c76:	f7ef fe07 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011c7a:	4620      	mov	r0, r4
90011c7c:	2100      	movs	r1, #0
90011c7e:	f7ff ffd7 	bl	90011c30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011c82:	4620      	mov	r0, r4
90011c84:	f7ff fd74 	bl	90011770 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011c88:	bd10      	pop	{r4, pc}
90011c8a:	bf00      	nop
90011c8c:	24039702 	.word	0x24039702

90011c90 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011c90:	b570      	push	{r4, r5, r6, lr}
90011c92:	4604      	mov	r4, r0
90011c94:	6803      	ldr	r3, [r0, #0]
90011c96:	b919      	cbnz	r1, 90011ca0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011c98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011c9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011c9e:	4718      	bx	r3
90011ca0:	2200      	movs	r2, #0
90011ca2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90011ca6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90011caa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011cac:	4798      	blx	r3
90011cae:	6863      	ldr	r3, [r4, #4]
90011cb0:	2101      	movs	r1, #1
90011cb2:	4605      	mov	r5, r0
90011cb4:	4620      	mov	r0, r4
90011cb6:	7299      	strb	r1, [r3, #10]
90011cb8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90011cbc:	f7ff ffb8 	bl	90011c30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011cc0:	4628      	mov	r0, r5
90011cc2:	bd70      	pop	{r4, r5, r6, pc}

90011cc4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011cc4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011cc8:	1a13      	subs	r3, r2, r0
90011cca:	4258      	negs	r0, r3
90011ccc:	4158      	adcs	r0, r3
90011cce:	4770      	bx	lr

90011cd0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011cd0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011cd4:	1a9b      	subs	r3, r3, r2
90011cd6:	2b00      	cmp	r3, #0
90011cd8:	bfdc      	itt	le
90011cda:	6882      	ldrle	r2, [r0, #8]
90011cdc:	189b      	addle	r3, r3, r2
90011cde:	2b01      	cmp	r3, #1
90011ce0:	bfcc      	ite	gt
90011ce2:	2000      	movgt	r0, #0
90011ce4:	2001      	movle	r0, #1
90011ce6:	4770      	bx	lr

90011ce8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011ce8:	6902      	ldr	r2, [r0, #16]
90011cea:	6843      	ldr	r3, [r0, #4]
90011cec:	2024      	movs	r0, #36	; 0x24
90011cee:	fb00 3002 	mla	r0, r0, r2, r3
90011cf2:	4770      	bx	lr

90011cf4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90011cf4:	6803      	ldr	r3, [r0, #0]
90011cf6:	691b      	ldr	r3, [r3, #16]
90011cf8:	4718      	bx	r3

90011cfa <_ZN8touchgfx13DMA_Interface7executeEv>:
90011cfa:	2301      	movs	r3, #1
90011cfc:	b570      	push	{r4, r5, r6, lr}
90011cfe:	7203      	strb	r3, [r0, #8]
90011d00:	4604      	mov	r4, r0
90011d02:	6840      	ldr	r0, [r0, #4]
90011d04:	6803      	ldr	r3, [r0, #0]
90011d06:	699b      	ldr	r3, [r3, #24]
90011d08:	4798      	blx	r3
90011d0a:	6803      	ldr	r3, [r0, #0]
90011d0c:	4605      	mov	r5, r0
90011d0e:	2b40      	cmp	r3, #64	; 0x40
90011d10:	d00c      	beq.n	90011d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011d12:	d810      	bhi.n	90011d36 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90011d14:	2b04      	cmp	r3, #4
90011d16:	d01d      	beq.n	90011d54 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011d18:	d804      	bhi.n	90011d24 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011d1a:	2b01      	cmp	r3, #1
90011d1c:	d006      	beq.n	90011d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011d1e:	2b02      	cmp	r3, #2
90011d20:	d02c      	beq.n	90011d7c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90011d22:	bd70      	pop	{r4, r5, r6, pc}
90011d24:	2b08      	cmp	r3, #8
90011d26:	d01d      	beq.n	90011d64 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011d28:	2b20      	cmp	r3, #32
90011d2a:	d1fa      	bne.n	90011d22 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011d2c:	6823      	ldr	r3, [r4, #0]
90011d2e:	4620      	mov	r0, r4
90011d30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011d32:	4798      	blx	r3
90011d34:	e013      	b.n	90011d5e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90011d36:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90011d3a:	d0f7      	beq.n	90011d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011d3c:	d804      	bhi.n	90011d48 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011d3e:	2b80      	cmp	r3, #128	; 0x80
90011d40:	d0f4      	beq.n	90011d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011d42:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90011d46:	e7f0      	b.n	90011d2a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011d48:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90011d4c:	d0ee      	beq.n	90011d2c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011d4e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90011d52:	e7e5      	b.n	90011d20 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90011d54:	6823      	ldr	r3, [r4, #0]
90011d56:	7f01      	ldrb	r1, [r0, #28]
90011d58:	4620      	mov	r0, r4
90011d5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011d5c:	4798      	blx	r3
90011d5e:	6823      	ldr	r3, [r4, #0]
90011d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011d62:	e006      	b.n	90011d72 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011d64:	6823      	ldr	r3, [r4, #0]
90011d66:	7f01      	ldrb	r1, [r0, #28]
90011d68:	4620      	mov	r0, r4
90011d6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011d6c:	4798      	blx	r3
90011d6e:	6823      	ldr	r3, [r4, #0]
90011d70:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011d72:	4629      	mov	r1, r5
90011d74:	4620      	mov	r0, r4
90011d76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011d7a:	4718      	bx	r3
90011d7c:	6823      	ldr	r3, [r4, #0]
90011d7e:	4620      	mov	r0, r4
90011d80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90011d82:	4798      	blx	r3
90011d84:	e7f3      	b.n	90011d6e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011d86 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011d86:	4770      	bx	lr

90011d88 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011d88:	4770      	bx	lr

90011d8a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011d8a:	4770      	bx	lr

90011d8c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011d8c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011d90:	b510      	push	{r4, lr}
90011d92:	1ad2      	subs	r2, r2, r3
90011d94:	2a00      	cmp	r2, #0
90011d96:	bfdc      	itt	le
90011d98:	6884      	ldrle	r4, [r0, #8]
90011d9a:	1912      	addle	r2, r2, r4
90011d9c:	2a01      	cmp	r2, #1
90011d9e:	dd16      	ble.n	90011dce <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011da0:	6842      	ldr	r2, [r0, #4]
90011da2:	2424      	movs	r4, #36	; 0x24
90011da4:	fb04 2303 	mla	r3, r4, r3, r2
90011da8:	f101 0220 	add.w	r2, r1, #32
90011dac:	f851 4b04 	ldr.w	r4, [r1], #4
90011db0:	4291      	cmp	r1, r2
90011db2:	f843 4b04 	str.w	r4, [r3], #4
90011db6:	d1f9      	bne.n	90011dac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011db8:	780a      	ldrb	r2, [r1, #0]
90011dba:	701a      	strb	r2, [r3, #0]
90011dbc:	68c3      	ldr	r3, [r0, #12]
90011dbe:	6882      	ldr	r2, [r0, #8]
90011dc0:	f3bf 8f5b 	dmb	ish
90011dc4:	3301      	adds	r3, #1
90011dc6:	429a      	cmp	r2, r3
90011dc8:	bfd8      	it	le
90011dca:	1a9b      	suble	r3, r3, r2
90011dcc:	60c3      	str	r3, [r0, #12]
90011dce:	bd10      	pop	{r4, pc}

90011dd0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011dd0:	6903      	ldr	r3, [r0, #16]
90011dd2:	6882      	ldr	r2, [r0, #8]
90011dd4:	f3bf 8f5b 	dmb	ish
90011dd8:	3301      	adds	r3, #1
90011dda:	429a      	cmp	r2, r3
90011ddc:	bfd8      	it	le
90011dde:	1a9b      	suble	r3, r3, r2
90011de0:	6103      	str	r3, [r0, #16]
90011de2:	4770      	bx	lr

90011de4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90011de4:	b570      	push	{r4, r5, r6, lr}
90011de6:	4604      	mov	r4, r0
90011de8:	460e      	mov	r6, r1
90011dea:	6860      	ldr	r0, [r4, #4]
90011dec:	6803      	ldr	r3, [r0, #0]
90011dee:	685b      	ldr	r3, [r3, #4]
90011df0:	4798      	blx	r3
90011df2:	2800      	cmp	r0, #0
90011df4:	d1f9      	bne.n	90011dea <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90011df6:	4d0d      	ldr	r5, [pc, #52]	; (90011e2c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011df8:	6828      	ldr	r0, [r5, #0]
90011dfa:	6803      	ldr	r3, [r0, #0]
90011dfc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011dfe:	4798      	blx	r3
90011e00:	f7ef fd50 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90011e04:	6828      	ldr	r0, [r5, #0]
90011e06:	2101      	movs	r1, #1
90011e08:	f7ff ff12 	bl	90011c30 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011e0c:	6860      	ldr	r0, [r4, #4]
90011e0e:	4631      	mov	r1, r6
90011e10:	6803      	ldr	r3, [r0, #0]
90011e12:	689b      	ldr	r3, [r3, #8]
90011e14:	4798      	blx	r3
90011e16:	6823      	ldr	r3, [r4, #0]
90011e18:	4620      	mov	r0, r4
90011e1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011e1c:	4798      	blx	r3
90011e1e:	6828      	ldr	r0, [r5, #0]
90011e20:	6803      	ldr	r3, [r0, #0]
90011e22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011e26:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90011e28:	4718      	bx	r3
90011e2a:	bf00      	nop
90011e2c:	24039704 	.word	0x24039704

90011e30 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011e30:	b508      	push	{r3, lr}
90011e32:	f7ef fd29 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90011e36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011e3a:	f7ef bd2d 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011e3e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011e3e:	b510      	push	{r4, lr}
90011e40:	4604      	mov	r4, r0
90011e42:	2114      	movs	r1, #20
90011e44:	f015 fb6c 	bl	90027520 <_ZdlPvj>
90011e48:	4620      	mov	r0, r4
90011e4a:	bd10      	pop	{r4, pc}

90011e4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011e4c:	b570      	push	{r4, r5, r6, lr}
90011e4e:	4604      	mov	r4, r0
90011e50:	6840      	ldr	r0, [r0, #4]
90011e52:	6803      	ldr	r3, [r0, #0]
90011e54:	681b      	ldr	r3, [r3, #0]
90011e56:	4798      	blx	r3
90011e58:	4605      	mov	r5, r0
90011e5a:	b930      	cbnz	r0, 90011e6a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011e5c:	7a23      	ldrb	r3, [r4, #8]
90011e5e:	b123      	cbz	r3, 90011e6a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011e60:	6860      	ldr	r0, [r4, #4]
90011e62:	6803      	ldr	r3, [r0, #0]
90011e64:	695b      	ldr	r3, [r3, #20]
90011e66:	4798      	blx	r3
90011e68:	7225      	strb	r5, [r4, #8]
90011e6a:	6860      	ldr	r0, [r4, #4]
90011e6c:	6803      	ldr	r3, [r0, #0]
90011e6e:	681b      	ldr	r3, [r3, #0]
90011e70:	4798      	blx	r3
90011e72:	b928      	cbnz	r0, 90011e80 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011e74:	6823      	ldr	r3, [r4, #0]
90011e76:	4620      	mov	r0, r4
90011e78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011e7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011e7e:	4718      	bx	r3
90011e80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011e84:	f7ef bd16 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011e88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011e88:	b510      	push	{r4, lr}
90011e8a:	6082      	str	r2, [r0, #8]
90011e8c:	2200      	movs	r2, #0
90011e8e:	4c03      	ldr	r4, [pc, #12]	; (90011e9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011e90:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011e94:	e9c0 4100 	strd	r4, r1, [r0]
90011e98:	bd10      	pop	{r4, pc}
90011e9a:	bf00      	nop
90011e9c:	9002b374 	.word	0x9002b374

90011ea0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011ea0:	6840      	ldr	r0, [r0, #4]
90011ea2:	6803      	ldr	r3, [r0, #0]
90011ea4:	681b      	ldr	r3, [r3, #0]
90011ea6:	4718      	bx	r3

90011ea8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011ea8:	094a      	lsrs	r2, r1, #5
90011eaa:	4b06      	ldr	r3, [pc, #24]	; (90011ec4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011eac:	60c1      	str	r1, [r0, #12]
90011eae:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90011eb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90011eb6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011eba:	4313      	orrs	r3, r2
90011ebc:	4319      	orrs	r1, r3
90011ebe:	8201      	strh	r1, [r0, #16]
90011ec0:	4770      	bx	lr
90011ec2:	bf00      	nop
90011ec4:	fffff800 	.word	0xfffff800

90011ec8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011ec8:	f1a0 0008 	sub.w	r0, r0, #8
90011ecc:	e7ec      	b.n	90011ea8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90011ece:	bf00      	nop

90011ed0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90011ed0:	b508      	push	{r3, lr}
90011ed2:	4b05      	ldr	r3, [pc, #20]	; (90011ee8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90011ed4:	6818      	ldr	r0, [r3, #0]
90011ed6:	6803      	ldr	r3, [r0, #0]
90011ed8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90011edc:	4798      	blx	r3
90011ede:	1e43      	subs	r3, r0, #1
90011ee0:	4258      	negs	r0, r3
90011ee2:	4158      	adcs	r0, r3
90011ee4:	bd08      	pop	{r3, pc}
90011ee6:	bf00      	nop
90011ee8:	24039704 	.word	0x24039704

90011eec <_ZN8touchgfx13PainterRGB565D1Ev>:
90011eec:	4770      	bx	lr

90011eee <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011eee:	3808      	subs	r0, #8
90011ef0:	4770      	bx	lr

90011ef2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90011ef2:	b430      	push	{r4, r5}
90011ef4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011ef8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011efc:	8a02      	ldrh	r2, [r0, #16]
90011efe:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011f02:	4629      	mov	r1, r5
90011f04:	9202      	str	r2, [sp, #8]
90011f06:	68c2      	ldr	r2, [r0, #12]
90011f08:	4620      	mov	r0, r4
90011f0a:	bc30      	pop	{r4, r5}
90011f0c:	f7ef bfa8 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011f10 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011f10:	f7ef bf9c 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

90011f14 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011f14:	b510      	push	{r4, lr}
90011f16:	4604      	mov	r4, r0
90011f18:	2114      	movs	r1, #20
90011f1a:	f015 fb01 	bl	90027520 <_ZdlPvj>
90011f1e:	4620      	mov	r0, r4
90011f20:	bd10      	pop	{r4, pc}

90011f22 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011f22:	f1a0 0008 	sub.w	r0, r0, #8
90011f26:	e7f5      	b.n	90011f14 <_ZN8touchgfx13PainterRGB565D0Ev>

90011f28 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90011f28:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011f2a:	6803      	ldr	r3, [r0, #0]
90011f2c:	460d      	mov	r5, r1
90011f2e:	4604      	mov	r4, r0
90011f30:	4601      	mov	r1, r0
90011f32:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90011f34:	a802      	add	r0, sp, #8
90011f36:	4798      	blx	r3
90011f38:	6828      	ldr	r0, [r5, #0]
90011f3a:	6869      	ldr	r1, [r5, #4]
90011f3c:	466b      	mov	r3, sp
90011f3e:	c303      	stmia	r3!, {r0, r1}
90011f40:	4668      	mov	r0, sp
90011f42:	4619      	mov	r1, r3
90011f44:	f7fe ff84 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90011f48:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90011f4a:	b188      	cbz	r0, 90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011f4c:	6803      	ldr	r3, [r0, #0]
90011f4e:	1d21      	adds	r1, r4, #4
90011f50:	68db      	ldr	r3, [r3, #12]
90011f52:	4798      	blx	r3
90011f54:	b160      	cbz	r0, 90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011f56:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90011f5a:	2b00      	cmp	r3, #0
90011f5c:	dd08      	ble.n	90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011f5e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90011f62:	2d00      	cmp	r5, #0
90011f64:	dd04      	ble.n	90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011f66:	4a2b      	ldr	r2, [pc, #172]	; (90012014 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90011f68:	7812      	ldrb	r2, [r2, #0]
90011f6a:	b11a      	cbz	r2, 90011f74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90011f6c:	2a01      	cmp	r2, #1
90011f6e:	d029      	beq.n	90011fc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90011f70:	b004      	add	sp, #16
90011f72:	bd70      	pop	{r4, r5, r6, pc}
90011f74:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011f78:	441d      	add	r5, r3
90011f7a:	b2ad      	uxth	r5, r5
90011f7c:	b22e      	sxth	r6, r5
90011f7e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90011f82:	42b3      	cmp	r3, r6
90011f84:	daf4      	bge.n	90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011f86:	6823      	ldr	r3, [r4, #0]
90011f88:	4669      	mov	r1, sp
90011f8a:	4620      	mov	r0, r4
90011f8c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011f8e:	4798      	blx	r3
90011f90:	b940      	cbnz	r0, 90011fa4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90011f92:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90011f96:	2b01      	cmp	r3, #1
90011f98:	d004      	beq.n	90011fa4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90011f9a:	3301      	adds	r3, #1
90011f9c:	105b      	asrs	r3, r3, #1
90011f9e:	f8ad 3006 	strh.w	r3, [sp, #6]
90011fa2:	e7f0      	b.n	90011f86 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90011fa4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90011fa8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011fac:	4413      	add	r3, r2
90011fae:	b29b      	uxth	r3, r3
90011fb0:	441a      	add	r2, r3
90011fb2:	f8ad 3002 	strh.w	r3, [sp, #2]
90011fb6:	b212      	sxth	r2, r2
90011fb8:	4296      	cmp	r6, r2
90011fba:	dae0      	bge.n	90011f7e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90011fbc:	1aeb      	subs	r3, r5, r3
90011fbe:	f8ad 3006 	strh.w	r3, [sp, #6]
90011fc2:	e7dc      	b.n	90011f7e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90011fc4:	f8bd 5000 	ldrh.w	r5, [sp]
90011fc8:	441d      	add	r5, r3
90011fca:	b2ad      	uxth	r5, r5
90011fcc:	b22e      	sxth	r6, r5
90011fce:	f9bd 3000 	ldrsh.w	r3, [sp]
90011fd2:	42b3      	cmp	r3, r6
90011fd4:	dacc      	bge.n	90011f70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011fd6:	6823      	ldr	r3, [r4, #0]
90011fd8:	4669      	mov	r1, sp
90011fda:	4620      	mov	r0, r4
90011fdc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011fde:	4798      	blx	r3
90011fe0:	b940      	cbnz	r0, 90011ff4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90011fe2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90011fe6:	2b01      	cmp	r3, #1
90011fe8:	d004      	beq.n	90011ff4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90011fea:	3301      	adds	r3, #1
90011fec:	105b      	asrs	r3, r3, #1
90011fee:	f8ad 3004 	strh.w	r3, [sp, #4]
90011ff2:	e7f0      	b.n	90011fd6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90011ff4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90011ff8:	f8bd 3000 	ldrh.w	r3, [sp]
90011ffc:	4413      	add	r3, r2
90011ffe:	b29b      	uxth	r3, r3
90012000:	441a      	add	r2, r3
90012002:	f8ad 3000 	strh.w	r3, [sp]
90012006:	b212      	sxth	r2, r2
90012008:	4296      	cmp	r6, r2
9001200a:	dae0      	bge.n	90011fce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001200c:	1aeb      	subs	r3, r5, r3
9001200e:	f8ad 3004 	strh.w	r3, [sp, #4]
90012012:	e7dc      	b.n	90011fce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012014:	240396fc 	.word	0x240396fc

90012018 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90012018:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001201a:	6803      	ldr	r3, [r0, #0]
9001201c:	4604      	mov	r4, r0
9001201e:	4601      	mov	r1, r0
90012020:	4668      	mov	r0, sp
90012022:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90012024:	4798      	blx	r3
90012026:	2100      	movs	r1, #0
90012028:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001202c:	4668      	mov	r0, sp
9001202e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012032:	9102      	str	r1, [sp, #8]
90012034:	a902      	add	r1, sp, #8
90012036:	f8ad 200c 	strh.w	r2, [sp, #12]
9001203a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001203e:	f7fe ff07 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90012042:	6823      	ldr	r3, [r4, #0]
90012044:	4669      	mov	r1, sp
90012046:	4620      	mov	r0, r4
90012048:	691b      	ldr	r3, [r3, #16]
9001204a:	4798      	blx	r3
9001204c:	b004      	add	sp, #16
9001204e:	bd10      	pop	{r4, pc}

90012050 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012050:	2101      	movs	r1, #1
90012052:	2200      	movs	r2, #0
90012054:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90012058:	490a      	ldr	r1, [pc, #40]	; (90012084 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001205a:	8082      	strh	r2, [r0, #4]
9001205c:	6001      	str	r1, [r0, #0]
9001205e:	21ff      	movs	r1, #255	; 0xff
90012060:	80c2      	strh	r2, [r0, #6]
90012062:	8102      	strh	r2, [r0, #8]
90012064:	8142      	strh	r2, [r0, #10]
90012066:	8182      	strh	r2, [r0, #12]
90012068:	81c2      	strh	r2, [r0, #14]
9001206a:	8202      	strh	r2, [r0, #16]
9001206c:	8242      	strh	r2, [r0, #18]
9001206e:	61c2      	str	r2, [r0, #28]
90012070:	8402      	strh	r2, [r0, #32]
90012072:	8442      	strh	r2, [r0, #34]	; 0x22
90012074:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90012078:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
9001207c:	6282      	str	r2, [r0, #40]	; 0x28
9001207e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012082:	4770      	bx	lr
90012084:	9002b3d0 	.word	0x9002b3d0

90012088 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90012088:	f101 0364 	add.w	r3, r1, #100	; 0x64
9001208c:	4602      	mov	r2, r0
9001208e:	cb03      	ldmia	r3!, {r0, r1}
90012090:	6010      	str	r0, [r2, #0]
90012092:	4610      	mov	r0, r2
90012094:	6051      	str	r1, [r2, #4]
90012096:	4770      	bx	lr

90012098 <_ZN8touchgfx4LineD1Ev>:
90012098:	4770      	bx	lr

9001209a <_ZN8touchgfx4LineD0Ev>:
9001209a:	b510      	push	{r4, lr}
9001209c:	4604      	mov	r4, r0
9001209e:	2170      	movs	r1, #112	; 0x70
900120a0:	f015 fa3e 	bl	90027520 <_ZdlPvj>
900120a4:	4620      	mov	r0, r4
900120a6:	bd10      	pop	{r4, pc}

900120a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
900120a8:	b507      	push	{r0, r1, r2, lr}
900120aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
900120ae:	ab01      	add	r3, sp, #4
900120b0:	6809      	ldr	r1, [r1, #0]
900120b2:	6800      	ldr	r0, [r0, #0]
900120b4:	f005 fb64 	bl	90017780 <_ZN8touchgfx6muldivElllRl>
900120b8:	b003      	add	sp, #12
900120ba:	f85d fb04 	ldr.w	pc, [sp], #4

900120be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
900120be:	6800      	ldr	r0, [r0, #0]
900120c0:	2800      	cmp	r0, #0
900120c2:	bfb9      	ittee	lt
900120c4:	2320      	movlt	r3, #32
900120c6:	fb90 f0f3 	sdivlt	r0, r0, r3
900120ca:	301f      	addge	r0, #31
900120cc:	1140      	asrge	r0, r0, #5
900120ce:	4770      	bx	lr

900120d0 <_ZNK8touchgfx4Line17invalidateContentEv>:
900120d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900120d4:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
900120d8:	b089      	sub	sp, #36	; 0x24
900120da:	4604      	mov	r4, r0
900120dc:	b353      	cbz	r3, 90012134 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
900120de:	6803      	ldr	r3, [r0, #0]
900120e0:	4601      	mov	r1, r0
900120e2:	a802      	add	r0, sp, #8
900120e4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900120e6:	4798      	blx	r3
900120e8:	2220      	movs	r2, #32
900120ea:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
900120ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
900120f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900120f2:	f8d4 b000 	ldr.w	fp, [r4]
900120f6:	fb9a f0f2 	sdiv	r0, sl, r2
900120fa:	fb91 f5f2 	sdiv	r5, r1, r2
900120fe:	fb93 f6f2 	sdiv	r6, r3, r2
90012102:	1b40      	subs	r0, r0, r5
90012104:	0076      	lsls	r6, r6, #1
90012106:	2800      	cmp	r0, #0
90012108:	bfb8      	it	lt
9001210a:	4240      	neglt	r0, r0
9001210c:	4286      	cmp	r6, r0
9001210e:	dc0c      	bgt.n	9001212a <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90012110:	6b25      	ldr	r5, [r4, #48]	; 0x30
90012112:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90012116:	fb95 f0f2 	sdiv	r0, r5, r2
9001211a:	fb98 f7f2 	sdiv	r7, r8, r2
9001211e:	1bc0      	subs	r0, r0, r7
90012120:	2800      	cmp	r0, #0
90012122:	bfb8      	it	lt
90012124:	4240      	neglt	r0, r0
90012126:	4286      	cmp	r6, r0
90012128:	dd07      	ble.n	9001213a <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
9001212a:	f8db 3010 	ldr.w	r3, [fp, #16]
9001212e:	a902      	add	r1, sp, #8
90012130:	4620      	mov	r0, r4
90012132:	4798      	blx	r3
90012134:	b009      	add	sp, #36	; 0x24
90012136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001213a:	eb01 060a 	add.w	r6, r1, sl
9001213e:	2002      	movs	r0, #2
90012140:	eb08 0705 	add.w	r7, r8, r5
90012144:	3301      	adds	r3, #1
90012146:	f10d 0920 	add.w	r9, sp, #32
9001214a:	9101      	str	r1, [sp, #4]
9001214c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90012150:	fb96 f6f0 	sdiv	r6, r6, r0
90012154:	fb97 f7f0 	sdiv	r7, r7, r0
90012158:	4103      	asrs	r3, r0
9001215a:	b236      	sxth	r6, r6
9001215c:	b23f      	sxth	r7, r7
9001215e:	f849 3d08 	str.w	r3, [r9, #-8]!
90012162:	4648      	mov	r0, r9
90012164:	fb96 f6f2 	sdiv	r6, r6, r2
90012168:	fb97 f7f2 	sdiv	r7, r7, r2
9001216c:	f7ff ffa7 	bl	900120be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012170:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012174:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90012178:	fa1f fe87 	uxth.w	lr, r7
9001217c:	9901      	ldr	r1, [sp, #4]
9001217e:	fa1f fc86 	uxth.w	ip, r6
90012182:	4293      	cmp	r3, r2
90012184:	b280      	uxth	r0, r0
90012186:	eba1 0a0a 	sub.w	sl, r1, sl
9001218a:	da54      	bge.n	90012236 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
9001218c:	ebac 0100 	sub.w	r1, ip, r0
90012190:	f1ba 0f00 	cmp.w	sl, #0
90012194:	4460      	add	r0, ip
90012196:	f9bd a008 	ldrsh.w	sl, [sp, #8]
9001219a:	b289      	uxth	r1, r1
9001219c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
900121a0:	b280      	uxth	r0, r0
900121a2:	b20e      	sxth	r6, r1
900121a4:	da29      	bge.n	900121fa <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
900121a6:	eba8 0505 	sub.w	r5, r8, r5
900121aa:	2d00      	cmp	r5, #0
900121ac:	da2a      	bge.n	90012204 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
900121ae:	fa1f f88a 	uxth.w	r8, sl
900121b2:	f8ad a010 	strh.w	sl, [sp, #16]
900121b6:	fa1f f58c 	uxth.w	r5, ip
900121ba:	f8ad c012 	strh.w	ip, [sp, #18]
900121be:	eba0 0008 	sub.w	r0, r0, r8
900121c2:	4443      	add	r3, r8
900121c4:	f8ad 6018 	strh.w	r6, [sp, #24]
900121c8:	f8ad 0014 	strh.w	r0, [sp, #20]
900121cc:	1a59      	subs	r1, r3, r1
900121ce:	ebae 0005 	sub.w	r0, lr, r5
900121d2:	f8ad 701a 	strh.w	r7, [sp, #26]
900121d6:	f8ad 101c 	strh.w	r1, [sp, #28]
900121da:	f8ad 0016 	strh.w	r0, [sp, #22]
900121de:	442a      	add	r2, r5
900121e0:	eba2 0e0e 	sub.w	lr, r2, lr
900121e4:	f8ad e01e 	strh.w	lr, [sp, #30]
900121e8:	f8db 3010 	ldr.w	r3, [fp, #16]
900121ec:	a904      	add	r1, sp, #16
900121ee:	4620      	mov	r0, r4
900121f0:	4798      	blx	r3
900121f2:	6823      	ldr	r3, [r4, #0]
900121f4:	4649      	mov	r1, r9
900121f6:	691b      	ldr	r3, [r3, #16]
900121f8:	e79a      	b.n	90012130 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
900121fa:	d003      	beq.n	90012204 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
900121fc:	eba8 0505 	sub.w	r5, r8, r5
90012200:	2d00      	cmp	r5, #0
90012202:	dcd4      	bgt.n	900121ae <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90012204:	fa1f f88a 	uxth.w	r8, sl
90012208:	f8ad 6010 	strh.w	r6, [sp, #16]
9001220c:	fa1f f58c 	uxth.w	r5, ip
90012210:	f8ad c012 	strh.w	ip, [sp, #18]
90012214:	4443      	add	r3, r8
90012216:	eba0 0008 	sub.w	r0, r0, r8
9001221a:	f8ad a018 	strh.w	sl, [sp, #24]
9001221e:	1a59      	subs	r1, r3, r1
90012220:	ebae 0305 	sub.w	r3, lr, r5
90012224:	f8ad 701a 	strh.w	r7, [sp, #26]
90012228:	f8ad 1014 	strh.w	r1, [sp, #20]
9001222c:	f8ad 3016 	strh.w	r3, [sp, #22]
90012230:	f8ad 001c 	strh.w	r0, [sp, #28]
90012234:	e7d3      	b.n	900121de <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90012236:	ebae 0100 	sub.w	r1, lr, r0
9001223a:	f1ba 0f00 	cmp.w	sl, #0
9001223e:	4470      	add	r0, lr
90012240:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90012244:	b289      	uxth	r1, r1
90012246:	f9bd e008 	ldrsh.w	lr, [sp, #8]
9001224a:	b280      	uxth	r0, r0
9001224c:	b20f      	sxth	r7, r1
9001224e:	da20      	bge.n	90012292 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90012250:	eba8 0505 	sub.w	r5, r8, r5
90012254:	2d00      	cmp	r5, #0
90012256:	da21      	bge.n	9001229c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012258:	fa1f f88e 	uxth.w	r8, lr
9001225c:	f8ad e010 	strh.w	lr, [sp, #16]
90012260:	fa1f f58a 	uxth.w	r5, sl
90012264:	f8ad a012 	strh.w	sl, [sp, #18]
90012268:	4443      	add	r3, r8
9001226a:	ebac 0e08 	sub.w	lr, ip, r8
9001226e:	442a      	add	r2, r5
90012270:	1b40      	subs	r0, r0, r5
90012272:	eba3 0c0c 	sub.w	ip, r3, ip
90012276:	f8ad e014 	strh.w	lr, [sp, #20]
9001227a:	1a51      	subs	r1, r2, r1
9001227c:	f8ad 0016 	strh.w	r0, [sp, #22]
90012280:	f8ad 6018 	strh.w	r6, [sp, #24]
90012284:	f8ad 701a 	strh.w	r7, [sp, #26]
90012288:	f8ad c01c 	strh.w	ip, [sp, #28]
9001228c:	f8ad 101e 	strh.w	r1, [sp, #30]
90012290:	e7aa      	b.n	900121e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90012292:	d003      	beq.n	9001229c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012294:	eba8 0505 	sub.w	r5, r8, r5
90012298:	2d00      	cmp	r5, #0
9001229a:	dcdd      	bgt.n	90012258 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
9001229c:	fa1f f58e 	uxth.w	r5, lr
900122a0:	f8ad 7012 	strh.w	r7, [sp, #18]
900122a4:	fa1f f88a 	uxth.w	r8, sl
900122a8:	f8ad e010 	strh.w	lr, [sp, #16]
900122ac:	442b      	add	r3, r5
900122ae:	ebac 0705 	sub.w	r7, ip, r5
900122b2:	4442      	add	r2, r8
900122b4:	eba0 0008 	sub.w	r0, r0, r8
900122b8:	eba3 0c0c 	sub.w	ip, r3, ip
900122bc:	f8ad 7014 	strh.w	r7, [sp, #20]
900122c0:	1a51      	subs	r1, r2, r1
900122c2:	f8ad 6018 	strh.w	r6, [sp, #24]
900122c6:	f8ad a01a 	strh.w	sl, [sp, #26]
900122ca:	f8ad 1016 	strh.w	r1, [sp, #22]
900122ce:	f8ad c01c 	strh.w	ip, [sp, #28]
900122d2:	f8ad 001e 	strh.w	r0, [sp, #30]
900122d6:	e787      	b.n	900121e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

900122d8 <_ZN8touchgfx7CWRUtil4sineEi>:
900122d8:	f44f 73b4 	mov.w	r3, #360	; 0x168
900122dc:	fb90 f2f3 	sdiv	r2, r0, r3
900122e0:	fb02 0013 	mls	r0, r2, r3, r0
900122e4:	2800      	cmp	r0, #0
900122e6:	bfb8      	it	lt
900122e8:	18c0      	addlt	r0, r0, r3
900122ea:	4b0a      	ldr	r3, [pc, #40]	; (90012314 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
900122ec:	285a      	cmp	r0, #90	; 0x5a
900122ee:	dc02      	bgt.n	900122f6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
900122f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900122f4:	4770      	bx	lr
900122f6:	28b4      	cmp	r0, #180	; 0xb4
900122f8:	dc02      	bgt.n	90012300 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
900122fa:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
900122fe:	e7f7      	b.n	900122f0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90012300:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90012304:	bfd4      	ite	le
90012306:	38b4      	suble	r0, #180	; 0xb4
90012308:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001230c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012310:	4240      	negs	r0, r0
90012312:	4770      	bx	lr
90012314:	9002b49c 	.word	0x9002b49c

90012318 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90012318:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
9001231c:	f04f 0300 	mov.w	r3, #0
90012320:	bf2c      	ite	cs
90012322:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90012326:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
9001232a:	1899      	adds	r1, r3, r2
9001232c:	4288      	cmp	r0, r1
9001232e:	bf24      	itt	cs
90012330:	1853      	addcs	r3, r2, r1
90012332:	1a40      	subcs	r0, r0, r1
90012334:	0892      	lsrs	r2, r2, #2
90012336:	ea4f 0353 	mov.w	r3, r3, lsr #1
9001233a:	d1f6      	bne.n	9001232a <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
9001233c:	4618      	mov	r0, r3
9001233e:	4770      	bx	lr

90012340 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90012340:	b510      	push	{r4, lr}
90012342:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90012346:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
9001234a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
9001234e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90012352:	139b      	asrs	r3, r3, #14
90012354:	13a4      	asrs	r4, r4, #14
90012356:	429c      	cmp	r4, r3
90012358:	bfb8      	it	lt
9001235a:	461c      	movlt	r4, r3
9001235c:	2c01      	cmp	r4, #1
9001235e:	dd07      	ble.n	90012370 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90012360:	fb91 f1f4 	sdiv	r1, r1, r4
90012364:	fb90 f0f4 	sdiv	r0, r0, r4
90012368:	f7ff ffea 	bl	90012340 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001236c:	4360      	muls	r0, r4
9001236e:	bd10      	pop	{r4, pc}
90012370:	4340      	muls	r0, r0
90012372:	fb01 0001 	mla	r0, r1, r1, r0
90012376:	f7ff ffcf 	bl	90012318 <_ZN8touchgfx7CWRUtil5isqrtEm>
9001237a:	e7f8      	b.n	9001236e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

9001237c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
9001237c:	2800      	cmp	r0, #0
9001237e:	b508      	push	{r3, lr}
90012380:	da05      	bge.n	9001238e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90012382:	4240      	negs	r0, r0
90012384:	f7ff fffa 	bl	9001237c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012388:	4240      	negs	r0, r0
9001238a:	b240      	sxtb	r0, r0
9001238c:	bd08      	pop	{r3, pc}
9001238e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90012392:	dc11      	bgt.n	900123b8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90012394:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90012398:	dd09      	ble.n	900123ae <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001239a:	4340      	muls	r0, r0
9001239c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
900123a0:	f7ff ffba 	bl	90012318 <_ZN8touchgfx7CWRUtil5isqrtEm>
900123a4:	f7ff ffea 	bl	9001237c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900123a8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900123ac:	e7ed      	b.n	9001238a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
900123ae:	3003      	adds	r0, #3
900123b0:	4b02      	ldr	r3, [pc, #8]	; (900123bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
900123b2:	10c0      	asrs	r0, r0, #3
900123b4:	5618      	ldrsb	r0, [r3, r0]
900123b6:	e7e9      	b.n	9001238c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900123b8:	2000      	movs	r0, #0
900123ba:	e7e7      	b.n	9001238c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900123bc:	9002b440 	.word	0x9002b440

900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
900123c0:	4281      	cmp	r1, r0
900123c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
900123c4:	460c      	mov	r4, r1
900123c6:	4615      	mov	r5, r2
900123c8:	dd07      	ble.n	900123da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
900123ca:	4601      	mov	r1, r0
900123cc:	4620      	mov	r0, r4
900123ce:	f7ff fff7 	bl	900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900123d2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900123d6:	b003      	add	sp, #12
900123d8:	bd30      	pop	{r4, r5, pc}
900123da:	f7ff ffb1 	bl	90012340 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900123de:	6028      	str	r0, [r5, #0]
900123e0:	2800      	cmp	r0, #0
900123e2:	d0f8      	beq.n	900123d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
900123e4:	4602      	mov	r2, r0
900123e6:	ab01      	add	r3, sp, #4
900123e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
900123ec:	4620      	mov	r0, r4
900123ee:	f005 f9c7 	bl	90017780 <_ZN8touchgfx6muldivElllRl>
900123f2:	f7ff ffc3 	bl	9001237c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900123f6:	e7ee      	b.n	900123d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

900123f8 <_ZN8touchgfx4LineC1Ev>:
900123f8:	b510      	push	{r4, lr}
900123fa:	4604      	mov	r4, r0
900123fc:	f7ff fe28 	bl	90012050 <_ZN8touchgfx12CanvasWidgetC1Ev>
90012400:	4b0c      	ldr	r3, [pc, #48]	; (90012434 <_ZN8touchgfx4LineC1Ev+0x3c>)
90012402:	2220      	movs	r2, #32
90012404:	4620      	mov	r0, r4
90012406:	6023      	str	r3, [r4, #0]
90012408:	2300      	movs	r3, #0
9001240a:	63e2      	str	r2, [r4, #60]	; 0x3c
9001240c:	2212      	movs	r2, #18
9001240e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90012412:	66e2      	str	r2, [r4, #108]	; 0x6c
90012414:	60a3      	str	r3, [r4, #8]
90012416:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
9001241a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
9001241e:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90012422:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90012426:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
9001242a:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
9001242e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90012432:	bd10      	pop	{r4, pc}
90012434:	9002b55c 	.word	0x9002b55c

90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90012438:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001243c:	6b47      	ldr	r7, [r0, #52]	; 0x34
9001243e:	4604      	mov	r4, r0
90012440:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012442:	6b85      	ldr	r5, [r0, #56]	; 0x38
90012444:	6b02      	ldr	r2, [r0, #48]	; 0x30
90012446:	1aff      	subs	r7, r7, r3
90012448:	eba5 0502 	sub.w	r5, r5, r2
9001244c:	d142      	bne.n	900124d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
9001244e:	b955      	cbnz	r5, 90012466 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90012450:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
90012454:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
90012458:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001245c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
90012460:	b002      	add	sp, #8
90012462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012466:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
9001246a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
9001246e:	4629      	mov	r1, r5
90012470:	2502      	movs	r5, #2
90012472:	4642      	mov	r2, r8
90012474:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012476:	f005 f9a2 	bl	900177be <_ZN8touchgfx6muldivElll>
9001247a:	4642      	mov	r2, r8
9001247c:	4639      	mov	r1, r7
9001247e:	fb90 f6f5 	sdiv	r6, r0, r5
90012482:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012484:	f005 f99b 	bl	900177be <_ZN8touchgfx6muldivElll>
90012488:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
9001248c:	fb90 f5f5 	sdiv	r5, r0, r5
90012490:	f1b9 0f00 	cmp.w	r9, #0
90012494:	d067      	beq.n	90012566 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90012496:	f1b9 0f02 	cmp.w	r9, #2
9001249a:	d878      	bhi.n	9001258e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001249c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001249e:	6b60      	ldr	r0, [r4, #52]	; 0x34
900124a0:	1b93      	subs	r3, r2, r6
900124a2:	4432      	add	r2, r6
900124a4:	1b5b      	subs	r3, r3, r5
900124a6:	1b52      	subs	r2, r2, r5
900124a8:	6463      	str	r3, [r4, #68]	; 0x44
900124aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
900124ac:	6522      	str	r2, [r4, #80]	; 0x50
900124ae:	18e9      	adds	r1, r5, r3
900124b0:	1b5b      	subs	r3, r3, r5
900124b2:	1b89      	subs	r1, r1, r6
900124b4:	1b9b      	subs	r3, r3, r6
900124b6:	6561      	str	r1, [r4, #84]	; 0x54
900124b8:	1b81      	subs	r1, r0, r6
900124ba:	4430      	add	r0, r6
900124bc:	4429      	add	r1, r5
900124be:	4428      	add	r0, r5
900124c0:	64a1      	str	r1, [r4, #72]	; 0x48
900124c2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
900124c4:	64e0      	str	r0, [r4, #76]	; 0x4c
900124c6:	186f      	adds	r7, r5, r1
900124c8:	1b49      	subs	r1, r1, r5
900124ca:	4437      	add	r7, r6
900124cc:	4431      	add	r1, r6
900124ce:	65a7      	str	r7, [r4, #88]	; 0x58
900124d0:	65e1      	str	r1, [r4, #92]	; 0x5c
900124d2:	e05b      	b.n	9001258c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
900124d4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
900124d8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
900124dc:	2d00      	cmp	r5, #0
900124de:	d0c6      	beq.n	9001246e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900124e0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
900124e4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
900124e8:	fb93 f2f8 	sdiv	r2, r3, r8
900124ec:	fb08 3312 	mls	r3, r8, r2, r3
900124f0:	b353      	cbz	r3, 90012548 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
900124f2:	fb98 f2f3 	sdiv	r2, r8, r3
900124f6:	fb03 8812 	mls	r8, r3, r2, r8
900124fa:	f1b8 0f00 	cmp.w	r8, #0
900124fe:	d1f3      	bne.n	900124e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90012500:	2b01      	cmp	r3, #1
90012502:	f24b 5104 	movw	r1, #46340	; 0xb504
90012506:	bf1c      	itt	ne
90012508:	fb97 f7f3 	sdivne	r7, r7, r3
9001250c:	fb95 f5f3 	sdivne	r5, r5, r3
90012510:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90012514:	4608      	mov	r0, r1
90012516:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
9001251a:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
9001251e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90012522:	428b      	cmp	r3, r1
90012524:	dd01      	ble.n	9001252a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90012526:	428a      	cmp	r2, r1
90012528:	dc10      	bgt.n	9001254c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
9001252a:	fb90 f3f3 	sdiv	r3, r0, r3
9001252e:	fb90 f2f2 	sdiv	r2, r0, r2
90012532:	4293      	cmp	r3, r2
90012534:	bfa8      	it	ge
90012536:	4613      	movge	r3, r2
90012538:	435f      	muls	r7, r3
9001253a:	435d      	muls	r5, r3
9001253c:	4629      	mov	r1, r5
9001253e:	4638      	mov	r0, r7
90012540:	f7ff fefe 	bl	90012340 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90012544:	4680      	mov	r8, r0
90012546:	e792      	b.n	9001246e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012548:	4643      	mov	r3, r8
9001254a:	e7d9      	b.n	90012500 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
9001254c:	fb93 f3f1 	sdiv	r3, r3, r1
90012550:	fb92 f2f1 	sdiv	r2, r2, r1
90012554:	4293      	cmp	r3, r2
90012556:	bfcc      	ite	gt
90012558:	3301      	addgt	r3, #1
9001255a:	1c53      	addle	r3, r2, #1
9001255c:	fb97 f7f3 	sdiv	r7, r7, r3
90012560:	fb95 f5f3 	sdiv	r5, r5, r3
90012564:	e7ea      	b.n	9001253c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90012566:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012568:	6b60      	ldr	r0, [r4, #52]	; 0x34
9001256a:	1b93      	subs	r3, r2, r6
9001256c:	4432      	add	r2, r6
9001256e:	6463      	str	r3, [r4, #68]	; 0x44
90012570:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012572:	6522      	str	r2, [r4, #80]	; 0x50
90012574:	18e9      	adds	r1, r5, r3
90012576:	1b5b      	subs	r3, r3, r5
90012578:	6561      	str	r1, [r4, #84]	; 0x54
9001257a:	1b81      	subs	r1, r0, r6
9001257c:	4430      	add	r0, r6
9001257e:	64a1      	str	r1, [r4, #72]	; 0x48
90012580:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012582:	64e0      	str	r0, [r4, #76]	; 0x4c
90012584:	186f      	adds	r7, r5, r1
90012586:	1b49      	subs	r1, r1, r5
90012588:	65a7      	str	r7, [r4, #88]	; 0x58
9001258a:	65e1      	str	r1, [r4, #92]	; 0x5c
9001258c:	6623      	str	r3, [r4, #96]	; 0x60
9001258e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90012590:	f104 0148 	add.w	r1, r4, #72	; 0x48
90012594:	6d63      	ldr	r3, [r4, #84]	; 0x54
90012596:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001259a:	9200      	str	r2, [sp, #0]
9001259c:	9301      	str	r3, [sp, #4]
9001259e:	680f      	ldr	r7, [r1, #0]
900125a0:	3104      	adds	r1, #4
900125a2:	9800      	ldr	r0, [sp, #0]
900125a4:	42ba      	cmp	r2, r7
900125a6:	bfa8      	it	ge
900125a8:	463a      	movge	r2, r7
900125aa:	4287      	cmp	r7, r0
900125ac:	9801      	ldr	r0, [sp, #4]
900125ae:	bfc8      	it	gt
900125b0:	9700      	strgt	r7, [sp, #0]
900125b2:	68cf      	ldr	r7, [r1, #12]
900125b4:	42bb      	cmp	r3, r7
900125b6:	bfa8      	it	ge
900125b8:	463b      	movge	r3, r7
900125ba:	4287      	cmp	r7, r0
900125bc:	bfc8      	it	gt
900125be:	9701      	strgt	r7, [sp, #4]
900125c0:	458c      	cmp	ip, r1
900125c2:	d1ec      	bne.n	9001259e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
900125c4:	2720      	movs	r7, #32
900125c6:	4668      	mov	r0, sp
900125c8:	fb92 f8f7 	sdiv	r8, r2, r7
900125cc:	fb93 f7f7 	sdiv	r7, r3, r7
900125d0:	f7ff fd75 	bl	900120be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900125d4:	4682      	mov	sl, r0
900125d6:	a801      	add	r0, sp, #4
900125d8:	f7ff fd71 	bl	900120be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900125dc:	ebaa 0208 	sub.w	r2, sl, r8
900125e0:	1bc0      	subs	r0, r0, r7
900125e2:	f1b9 0f01 	cmp.w	r9, #1
900125e6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
900125ea:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
900125ee:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
900125f2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
900125f6:	f47f af33 	bne.w	90012460 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
900125fa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
900125fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
900125fe:	1b83      	subs	r3, r0, r6
90012600:	6463      	str	r3, [r4, #68]	; 0x44
90012602:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012604:	18ea      	adds	r2, r5, r3
90012606:	6562      	str	r2, [r4, #84]	; 0x54
90012608:	1b8a      	subs	r2, r1, r6
9001260a:	4431      	add	r1, r6
9001260c:	4406      	add	r6, r0
9001260e:	64a2      	str	r2, [r4, #72]	; 0x48
90012610:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90012612:	64e1      	str	r1, [r4, #76]	; 0x4c
90012614:	18af      	adds	r7, r5, r2
90012616:	1b52      	subs	r2, r2, r5
90012618:	1b5d      	subs	r5, r3, r5
9001261a:	6526      	str	r6, [r4, #80]	; 0x50
9001261c:	65a7      	str	r7, [r4, #88]	; 0x58
9001261e:	65e2      	str	r2, [r4, #92]	; 0x5c
90012620:	6625      	str	r5, [r4, #96]	; 0x60
90012622:	e71d      	b.n	90012460 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90012624 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90012624:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012626:	428b      	cmp	r3, r1
90012628:	d102      	bne.n	90012630 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
9001262a:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001262c:	4293      	cmp	r3, r2
9001262e:	d003      	beq.n	90012638 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90012630:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
90012634:	f7ff bf00 	b.w	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
90012638:	4770      	bx	lr

9001263a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
9001263a:	6b43      	ldr	r3, [r0, #52]	; 0x34
9001263c:	428b      	cmp	r3, r1
9001263e:	d102      	bne.n	90012646 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90012640:	6b83      	ldr	r3, [r0, #56]	; 0x38
90012642:	4293      	cmp	r3, r2
90012644:	d003      	beq.n	9001264e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90012646:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
9001264a:	f7ff bef5 	b.w	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>
9001264e:	4770      	bx	lr

90012650 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90012650:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
90012654:	f7ff bef0 	b.w	90012438 <_ZN8touchgfx4Line17updateCachedShapeEv>

90012658 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90012658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001265c:	b0a0      	sub	sp, #128	; 0x80
9001265e:	4604      	mov	r4, r0
90012660:	460a      	mov	r2, r1
90012662:	4601      	mov	r1, r0
90012664:	a804      	add	r0, sp, #16
90012666:	f014 fcfb 	bl	90027060 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
9001266a:	2300      	movs	r3, #0
9001266c:	9301      	str	r3, [sp, #4]
9001266e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90012672:	2b01      	cmp	r3, #1
90012674:	d17c      	bne.n	90012770 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90012676:	6c60      	ldr	r0, [r4, #68]	; 0x44
90012678:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001267a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001267c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001267e:	1ac0      	subs	r0, r0, r3
90012680:	eba1 0102 	sub.w	r1, r1, r2
90012684:	d437      	bmi.n	900126f6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90012686:	2900      	cmp	r1, #0
90012688:	aa01      	add	r2, sp, #4
9001268a:	db2e      	blt.n	900126ea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001268c:	f7ff fe98 	bl	900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012690:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90012694:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012696:	a804      	add	r0, sp, #16
90012698:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001269a:	f014 fe61 	bl	90027360 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001269e:	6da2      	ldr	r2, [r4, #88]	; 0x58
900126a0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
900126a2:	a804      	add	r0, sp, #16
900126a4:	f014 fea9 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900126a8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
900126aa:	2db3      	cmp	r5, #179	; 0xb3
900126ac:	dc33      	bgt.n	90012716 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
900126ae:	eba6 0805 	sub.w	r8, r6, r5
900126b2:	4640      	mov	r0, r8
900126b4:	f7ff fe10 	bl	900122d8 <_ZN8touchgfx7CWRUtil4sineEi>
900126b8:	a902      	add	r1, sp, #8
900126ba:	9002      	str	r0, [sp, #8]
900126bc:	a801      	add	r0, sp, #4
900126be:	f7ff fcf3 	bl	900120a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900126c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
900126c4:	1847      	adds	r7, r0, r1
900126c6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900126ca:	f7ff fe05 	bl	900122d8 <_ZN8touchgfx7CWRUtil4sineEi>
900126ce:	a903      	add	r1, sp, #12
900126d0:	9003      	str	r0, [sp, #12]
900126d2:	a801      	add	r0, sp, #4
900126d4:	f7ff fce8 	bl	900120a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900126d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900126da:	4639      	mov	r1, r7
900126dc:	1a12      	subs	r2, r2, r0
900126de:	a804      	add	r0, sp, #16
900126e0:	f014 fe8b 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900126e4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900126e6:	441d      	add	r5, r3
900126e8:	e7df      	b.n	900126aa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
900126ea:	4249      	negs	r1, r1
900126ec:	f7ff fe68 	bl	900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900126f0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
900126f4:	e7ce      	b.n	90012694 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900126f6:	2900      	cmp	r1, #0
900126f8:	f1c0 0000 	rsb	r0, r0, #0
900126fc:	aa01      	add	r2, sp, #4
900126fe:	db04      	blt.n	9001270a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90012700:	f7ff fe5e 	bl	900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012704:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
90012708:	e7c4      	b.n	90012694 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
9001270a:	4249      	negs	r1, r1
9001270c:	f7ff fe58 	bl	900123c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012710:	f500 7687 	add.w	r6, r0, #270	; 0x10e
90012714:	e7be      	b.n	90012694 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90012716:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90012718:	a804      	add	r0, sp, #16
9001271a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9001271c:	f014 fe6d 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012720:	6e22      	ldr	r2, [r4, #96]	; 0x60
90012722:	6d21      	ldr	r1, [r4, #80]	; 0x50
90012724:	a804      	add	r0, sp, #16
90012726:	f014 fe68 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001272a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001272c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
90012730:	2d00      	cmp	r5, #0
90012732:	dd31      	ble.n	90012798 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
90012734:	eb05 0806 	add.w	r8, r5, r6
90012738:	4640      	mov	r0, r8
9001273a:	f7ff fdcd 	bl	900122d8 <_ZN8touchgfx7CWRUtil4sineEi>
9001273e:	a902      	add	r1, sp, #8
90012740:	9002      	str	r0, [sp, #8]
90012742:	a801      	add	r0, sp, #4
90012744:	f7ff fcb0 	bl	900120a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012748:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001274a:	1847      	adds	r7, r0, r1
9001274c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90012750:	f7ff fdc2 	bl	900122d8 <_ZN8touchgfx7CWRUtil4sineEi>
90012754:	a903      	add	r1, sp, #12
90012756:	9003      	str	r0, [sp, #12]
90012758:	a801      	add	r0, sp, #4
9001275a:	f7ff fca5 	bl	900120a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001275e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90012760:	4639      	mov	r1, r7
90012762:	1a12      	subs	r2, r2, r0
90012764:	a804      	add	r0, sp, #16
90012766:	f014 fe48 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001276a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
9001276c:	1aed      	subs	r5, r5, r3
9001276e:	e7df      	b.n	90012730 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90012770:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012772:	a804      	add	r0, sp, #16
90012774:	6c61      	ldr	r1, [r4, #68]	; 0x44
90012776:	f014 fdf3 	bl	90027360 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001277a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001277c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001277e:	a804      	add	r0, sp, #16
90012780:	f014 fe3b 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012784:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90012786:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90012788:	a804      	add	r0, sp, #16
9001278a:	f014 fe36 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001278e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90012790:	6d21      	ldr	r1, [r4, #80]	; 0x50
90012792:	a804      	add	r0, sp, #16
90012794:	f014 fe31 	bl	900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012798:	21ff      	movs	r1, #255	; 0xff
9001279a:	a804      	add	r0, sp, #16
9001279c:	f014 fd1c 	bl	900271d8 <_ZN8touchgfx6Canvas6renderEh>
900127a0:	4b04      	ldr	r3, [pc, #16]	; (900127b4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
900127a2:	4604      	mov	r4, r0
900127a4:	a80c      	add	r0, sp, #48	; 0x30
900127a6:	9304      	str	r3, [sp, #16]
900127a8:	f001 f9f2 	bl	90013b90 <_ZN8touchgfx7OutlineD1Ev>
900127ac:	4620      	mov	r0, r4
900127ae:	b020      	add	sp, #128	; 0x80
900127b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900127b4:	9002bd10 	.word	0x9002bd10

900127b8 <_ZNK8touchgfx5Image17invalidateContentEv>:
900127b8:	b508      	push	{r3, lr}
900127ba:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900127be:	b10b      	cbz	r3, 900127c4 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900127c0:	f7ef fd5e 	bl	90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900127c4:	bd08      	pop	{r3, pc}

900127c6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
900127c6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
900127ca:	4770      	bx	lr

900127cc <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
900127cc:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900127d0:	4770      	bx	lr

900127d2 <_ZN8touchgfx13ScalableImageD1Ev>:
900127d2:	4770      	bx	lr

900127d4 <_ZN8touchgfx13ScalableImageD0Ev>:
900127d4:	b510      	push	{r4, lr}
900127d6:	4604      	mov	r4, r0
900127d8:	212c      	movs	r1, #44	; 0x2c
900127da:	f014 fea1 	bl	90027520 <_ZdlPvj>
900127de:	4620      	mov	r0, r4
900127e0:	bd10      	pop	{r4, pc}

900127e2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900127e2:	b5f0      	push	{r4, r5, r6, r7, lr}
900127e4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900127e8:	b085      	sub	sp, #20
900127ea:	4604      	mov	r4, r0
900127ec:	460d      	mov	r5, r1
900127ee:	2bff      	cmp	r3, #255	; 0xff
900127f0:	d128      	bne.n	90012844 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900127f2:	f101 0626 	add.w	r6, r1, #38	; 0x26
900127f6:	4668      	mov	r0, sp
900127f8:	4631      	mov	r1, r6
900127fa:	f006 ff65 	bl	900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900127fe:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90012802:	4630      	mov	r0, r6
90012804:	f006 fef8 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012808:	4287      	cmp	r7, r0
9001280a:	d11b      	bne.n	90012844 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001280c:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90012810:	4630      	mov	r0, r6
90012812:	f006 ff25 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012816:	4287      	cmp	r7, r0
90012818:	d114      	bne.n	90012844 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001281a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001281e:	2100      	movs	r1, #0
90012820:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90012824:	f8ad 300e 	strh.w	r3, [sp, #14]
90012828:	466b      	mov	r3, sp
9001282a:	9102      	str	r1, [sp, #8]
9001282c:	f8ad 200c 	strh.w	r2, [sp, #12]
90012830:	cb03      	ldmia	r3!, {r0, r1}
90012832:	6020      	str	r0, [r4, #0]
90012834:	4620      	mov	r0, r4
90012836:	6061      	str	r1, [r4, #4]
90012838:	4619      	mov	r1, r3
9001283a:	f7fe fb09 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
9001283e:	4620      	mov	r0, r4
90012840:	b005      	add	sp, #20
90012842:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012844:	2300      	movs	r3, #0
90012846:	8023      	strh	r3, [r4, #0]
90012848:	8063      	strh	r3, [r4, #2]
9001284a:	80a3      	strh	r3, [r4, #4]
9001284c:	80e3      	strh	r3, [r4, #6]
9001284e:	e7f6      	b.n	9001283e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90012850 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90012850:	b538      	push	{r3, r4, r5, lr}
90012852:	2300      	movs	r3, #0
90012854:	2501      	movs	r5, #1
90012856:	4604      	mov	r4, r0
90012858:	8083      	strh	r3, [r0, #4]
9001285a:	80c3      	strh	r3, [r0, #6]
9001285c:	8103      	strh	r3, [r0, #8]
9001285e:	8143      	strh	r3, [r0, #10]
90012860:	8183      	strh	r3, [r0, #12]
90012862:	81c3      	strh	r3, [r0, #14]
90012864:	8203      	strh	r3, [r0, #16]
90012866:	8243      	strh	r3, [r0, #18]
90012868:	61c3      	str	r3, [r0, #28]
9001286a:	8403      	strh	r3, [r0, #32]
9001286c:	8443      	strh	r3, [r0, #34]	; 0x22
9001286e:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
90012872:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90012876:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001287a:	4b07      	ldr	r3, [pc, #28]	; (90012898 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
9001287c:	6003      	str	r3, [r0, #0]
9001287e:	880b      	ldrh	r3, [r1, #0]
90012880:	84c3      	strh	r3, [r0, #38]	; 0x26
90012882:	23ff      	movs	r3, #255	; 0xff
90012884:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90012888:	f001 f81d 	bl	900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9001288c:	4b03      	ldr	r3, [pc, #12]	; (9001289c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
9001288e:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
90012892:	4620      	mov	r0, r4
90012894:	6023      	str	r3, [r4, #0]
90012896:	bd38      	pop	{r3, r4, r5, pc}
90012898:	9002b820 	.word	0x9002b820
9001289c:	9002b5d4 	.word	0x9002b5d4

900128a0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900128a0:	4603      	mov	r3, r0
900128a2:	3026      	adds	r0, #38	; 0x26
900128a4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900128a8:	b90b      	cbnz	r3, 900128ae <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900128aa:	f004 bedb 	b.w	90017664 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900128ae:	f004 bee9 	b.w	90017684 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900128b4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900128b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900128b8:	4604      	mov	r4, r0
900128ba:	b0b3      	sub	sp, #204	; 0xcc
900128bc:	469b      	mov	fp, r3
900128be:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900128c2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900128c6:	2500      	movs	r5, #0
900128c8:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
900128cc:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
900128d0:	ab11      	add	r3, sp, #68	; 0x44
900128d2:	9206      	str	r2, [sp, #24]
900128d4:	4618      	mov	r0, r3
900128d6:	9511      	str	r5, [sp, #68]	; 0x44
900128d8:	9307      	str	r3, [sp, #28]
900128da:	ad13      	add	r5, sp, #76	; 0x4c
900128dc:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900128e0:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
900128e4:	f7fe fab4 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900128e8:	9b07      	ldr	r3, [sp, #28]
900128ea:	e893 0003 	ldmia.w	r3, {r0, r1}
900128ee:	e885 0003 	stmia.w	r5, {r0, r1}
900128f2:	6821      	ldr	r1, [r4, #0]
900128f4:	4620      	mov	r0, r4
900128f6:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900128f8:	4629      	mov	r1, r5
900128fa:	47b0      	blx	r6
900128fc:	4621      	mov	r1, r4
900128fe:	a815      	add	r0, sp, #84	; 0x54
90012900:	1d26      	adds	r6, r4, #4
90012902:	f004 fe0b 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012906:	a815      	add	r0, sp, #84	; 0x54
90012908:	f003 fb16 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001290c:	9b07      	ldr	r3, [sp, #28]
9001290e:	4631      	mov	r1, r6
90012910:	4618      	mov	r0, r3
90012912:	f003 fb55 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90012916:	4628      	mov	r0, r5
90012918:	f104 0526 	add.w	r5, r4, #38	; 0x26
9001291c:	f003 fb0c 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90012920:	4628      	mov	r0, r5
90012922:	f006 ff55 	bl	900197d0 <_ZNK8touchgfx6Bitmap7getDataEv>
90012926:	9007      	str	r0, [sp, #28]
90012928:	2800      	cmp	r0, #0
9001292a:	f000 80ce 	beq.w	90012aca <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
9001292e:	f8db 200c 	ldr.w	r2, [fp, #12]
90012932:	a809      	add	r0, sp, #36	; 0x24
90012934:	f8db 1000 	ldr.w	r1, [fp]
90012938:	920c      	str	r2, [sp, #48]	; 0x30
9001293a:	f8da 2000 	ldr.w	r2, [sl]
9001293e:	9109      	str	r1, [sp, #36]	; 0x24
90012940:	920d      	str	r2, [sp, #52]	; 0x34
90012942:	f8da 2004 	ldr.w	r2, [sl, #4]
90012946:	f8db 1004 	ldr.w	r1, [fp, #4]
9001294a:	920e      	str	r2, [sp, #56]	; 0x38
9001294c:	f8da 2008 	ldr.w	r2, [sl, #8]
90012950:	910a      	str	r1, [sp, #40]	; 0x28
90012952:	920f      	str	r2, [sp, #60]	; 0x3c
90012954:	f8db 1008 	ldr.w	r1, [fp, #8]
90012958:	f8da 200c 	ldr.w	r2, [sl, #12]
9001295c:	910b      	str	r1, [sp, #44]	; 0x2c
9001295e:	a90d      	add	r1, sp, #52	; 0x34
90012960:	9210      	str	r2, [sp, #64]	; 0x40
90012962:	4632      	mov	r2, r6
90012964:	f003 fb10 	bl	90015f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012968:	4632      	mov	r2, r6
9001296a:	a90e      	add	r1, sp, #56	; 0x38
9001296c:	a80a      	add	r0, sp, #40	; 0x28
9001296e:	f003 fb0b 	bl	90015f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012972:	4632      	mov	r2, r6
90012974:	a90f      	add	r1, sp, #60	; 0x3c
90012976:	a80b      	add	r0, sp, #44	; 0x2c
90012978:	f003 fb06 	bl	90015f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001297c:	4632      	mov	r2, r6
9001297e:	a910      	add	r1, sp, #64	; 0x40
90012980:	a80c      	add	r0, sp, #48	; 0x30
90012982:	f003 fb01 	bl	90015f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012986:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9001298a:	ed97 3a00 	vldr	s6, [r7]
9001298e:	eef0 6a67 	vmov.f32	s13, s15
90012992:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90012996:	edd7 4a01 	vldr	s9, [r7, #4]
9001299a:	eeb0 7a67 	vmov.f32	s14, s15
9001299e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900129a2:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900129a6:	ed99 2a00 	vldr	s4, [r9]
900129aa:	eeb0 6a67 	vmov.f32	s12, s15
900129ae:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900129b2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900129b6:	edd8 2a00 	vldr	s5, [r8]
900129ba:	edd9 3a01 	vldr	s7, [r9, #4]
900129be:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900129c2:	ed98 4a01 	vldr	s8, [r8, #4]
900129c6:	ed99 5a02 	vldr	s10, [r9, #8]
900129ca:	edd8 5a02 	vldr	s11, [r8, #8]
900129ce:	ee16 6a10 	vmov	r6, s12
900129d2:	eeb0 6a67 	vmov.f32	s12, s15
900129d6:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
900129da:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900129de:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900129e2:	f8d8 c00c 	ldr.w	ip, [r8, #12]
900129e6:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900129ea:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
900129ee:	ee16 0a10 	vmov	r0, s12
900129f2:	eeb0 6a67 	vmov.f32	s12, s15
900129f6:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
900129fa:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
900129fe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012a02:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90012a06:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90012a0a:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90012a0e:	ee16 1a10 	vmov	r1, s12
90012a12:	eeb0 6a67 	vmov.f32	s12, s15
90012a16:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90012a1a:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90012a1e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012a22:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90012a26:	f8d7 a008 	ldr.w	sl, [r7, #8]
90012a2a:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90012a2e:	68ff      	ldr	r7, [r7, #12]
90012a30:	ee16 2a10 	vmov	r2, s12
90012a34:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90012a38:	9624      	str	r6, [sp, #144]	; 0x90
90012a3a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012a3e:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90012a42:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90012a46:	4628      	mov	r0, r5
90012a48:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90012a4c:	9b06      	ldr	r3, [sp, #24]
90012a4e:	922d      	str	r2, [sp, #180]	; 0xb4
90012a50:	4a1f      	ldr	r2, [pc, #124]	; (90012ad0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90012a52:	9317      	str	r3, [sp, #92]	; 0x5c
90012a54:	8812      	ldrh	r2, [r2, #0]
90012a56:	9b07      	ldr	r3, [sp, #28]
90012a58:	9218      	str	r2, [sp, #96]	; 0x60
90012a5a:	9319      	str	r3, [sp, #100]	; 0x64
90012a5c:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90012a60:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90012a64:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90012a68:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90012a6c:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90012a70:	9731      	str	r7, [sp, #196]	; 0xc4
90012a72:	f006 fedd 	bl	90019830 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90012a76:	901a      	str	r0, [sp, #104]	; 0x68
90012a78:	4628      	mov	r0, r5
90012a7a:	f006 fdbd 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012a7e:	901b      	str	r0, [sp, #108]	; 0x6c
90012a80:	4628      	mov	r0, r5
90012a82:	f006 fded 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012a86:	901c      	str	r0, [sp, #112]	; 0x70
90012a88:	4628      	mov	r0, r5
90012a8a:	f006 fdb5 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012a8e:	4b11      	ldr	r3, [pc, #68]	; (90012ad4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90012a90:	901d      	str	r0, [sp, #116]	; 0x74
90012a92:	681b      	ldr	r3, [r3, #0]
90012a94:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012a98:	b10a      	cbz	r2, 90012a9e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90012a9a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90012a9c:	b905      	cbnz	r5, 90012aa0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90012a9e:	689d      	ldr	r5, [r3, #8]
90012aa0:	682b      	ldr	r3, [r5, #0]
90012aa2:	4620      	mov	r0, r4
90012aa4:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90012aa6:	f7ff fefb 	bl	900128a0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90012aaa:	f64f 73ff 	movw	r3, #65535	; 0xffff
90012aae:	aa1e      	add	r2, sp, #120	; 0x78
90012ab0:	a917      	add	r1, sp, #92	; 0x5c
90012ab2:	9304      	str	r3, [sp, #16]
90012ab4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90012ab8:	e9cd 0302 	strd	r0, r3, [sp, #8]
90012abc:	ab13      	add	r3, sp, #76	; 0x4c
90012abe:	4628      	mov	r0, r5
90012ac0:	9301      	str	r3, [sp, #4]
90012ac2:	ab15      	add	r3, sp, #84	; 0x54
90012ac4:	9300      	str	r3, [sp, #0]
90012ac6:	ab19      	add	r3, sp, #100	; 0x64
90012ac8:	47b0      	blx	r6
90012aca:	b033      	add	sp, #204	; 0xcc
90012acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012ad0:	240396fe 	.word	0x240396fe
90012ad4:	24039704 	.word	0x24039704

90012ad8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90012ad8:	b570      	push	{r4, r5, r6, lr}
90012ada:	ed2d 8b04 	vpush	{d8-d9}
90012ade:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90012ae2:	b098      	sub	sp, #96	; 0x60
90012ae4:	4604      	mov	r4, r0
90012ae6:	460e      	mov	r6, r1
90012ae8:	2b00      	cmp	r3, #0
90012aea:	d065      	beq.n	90012bb8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90012aec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90012af0:	f100 0526 	add.w	r5, r0, #38	; 0x26
90012af4:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90012bd4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90012af8:	ee09 3a10 	vmov	s18, r3
90012afc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012b00:	4628      	mov	r0, r5
90012b02:	ee08 3a90 	vmov	s17, r3
90012b06:	4b34      	ldr	r3, [pc, #208]	; (90012bd8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90012b08:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90012b0c:	930c      	str	r3, [sp, #48]	; 0x30
90012b0e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90012b12:	930d      	str	r3, [sp, #52]	; 0x34
90012b14:	930e      	str	r3, [sp, #56]	; 0x38
90012b16:	ee39 9a08 	vadd.f32	s18, s18, s16
90012b1a:	930f      	str	r3, [sp, #60]	; 0x3c
90012b1c:	f006 fd6c 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012b20:	ee07 0a90 	vmov	s15, r0
90012b24:	4628      	mov	r0, r5
90012b26:	ee78 8a88 	vadd.f32	s17, s17, s16
90012b2a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90012b2e:	f006 fd97 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012b32:	4b2a      	ldr	r3, [pc, #168]	; (90012bdc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90012b34:	ee07 0a90 	vmov	s15, r0
90012b38:	781b      	ldrb	r3, [r3, #0]
90012b3a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90012b3e:	eef0 7a48 	vmov.f32	s15, s16
90012b42:	2b01      	cmp	r3, #1
90012b44:	d13c      	bne.n	90012bc0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90012b46:	eef0 6a69 	vmov.f32	s13, s19
90012b4a:	ee19 3a90 	vmov	r3, s19
90012b4e:	eeb0 6a47 	vmov.f32	s12, s14
90012b52:	eef0 5a47 	vmov.f32	s11, s14
90012b56:	eef0 9a48 	vmov.f32	s19, s16
90012b5a:	eeb0 7a48 	vmov.f32	s14, s16
90012b5e:	9314      	str	r3, [sp, #80]	; 0x50
90012b60:	ab14      	add	r3, sp, #80	; 0x50
90012b62:	2200      	movs	r2, #0
90012b64:	4631      	mov	r1, r6
90012b66:	9303      	str	r3, [sp, #12]
90012b68:	ab10      	add	r3, sp, #64	; 0x40
90012b6a:	4620      	mov	r0, r4
90012b6c:	edcd 7a04 	vstr	s15, [sp, #16]
90012b70:	9302      	str	r3, [sp, #8]
90012b72:	ab0c      	add	r3, sp, #48	; 0x30
90012b74:	ed8d 9a05 	vstr	s18, [sp, #20]
90012b78:	9301      	str	r3, [sp, #4]
90012b7a:	ab08      	add	r3, sp, #32
90012b7c:	ed8d 9a06 	vstr	s18, [sp, #24]
90012b80:	9300      	str	r3, [sp, #0]
90012b82:	ab04      	add	r3, sp, #16
90012b84:	edcd 7a07 	vstr	s15, [sp, #28]
90012b88:	edcd 7a08 	vstr	s15, [sp, #32]
90012b8c:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90012b90:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90012b94:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90012b98:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90012b9c:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90012ba0:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90012ba4:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90012ba8:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90012bac:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90012bb0:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90012bb4:	f7ff fe7e 	bl	900128b4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90012bb8:	b018      	add	sp, #96	; 0x60
90012bba:	ecbd 8b04 	vpop	{d8-d9}
90012bbe:	bd70      	pop	{r4, r5, r6, pc}
90012bc0:	eef0 6a47 	vmov.f32	s13, s14
90012bc4:	ee18 3a10 	vmov	r3, s16
90012bc8:	eef0 5a69 	vmov.f32	s11, s19
90012bcc:	eeb0 6a48 	vmov.f32	s12, s16
90012bd0:	e7c5      	b.n	90012b5e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90012bd2:	bf00      	nop
90012bd4:	00000000 	.word	0x00000000
90012bd8:	42c80000 	.word	0x42c80000
90012bdc:	240396fc 	.word	0x240396fc

90012be0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90012be0:	2000      	movs	r0, #0
90012be2:	4770      	bx	lr

90012be4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012be4:	4b07      	ldr	r3, [pc, #28]	; (90012c04 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012be6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90012be8:	881b      	ldrh	r3, [r3, #0]
90012bea:	4293      	cmp	r3, r2
90012bec:	bf81      	itttt	hi
90012bee:	4b06      	ldrhi	r3, [pc, #24]	; (90012c08 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012bf0:	681b      	ldrhi	r3, [r3, #0]
90012bf2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012bf6:	7858      	ldrbhi	r0, [r3, #1]
90012bf8:	bf8c      	ite	hi
90012bfa:	f000 0003 	andhi.w	r0, r0, #3
90012bfe:	2000      	movls	r0, #0
90012c00:	4770      	bx	lr
90012c02:	bf00      	nop
90012c04:	24039760 	.word	0x24039760
90012c08:	2403975c 	.word	0x2403975c

90012c0c <_ZN8touchgfx8TextAreaD1Ev>:
90012c0c:	4770      	bx	lr
	...

90012c10 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90012c10:	4b11      	ldr	r3, [pc, #68]	; (90012c58 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90012c12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012c16:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90012c18:	4604      	mov	r4, r0
90012c1a:	881b      	ldrh	r3, [r3, #0]
90012c1c:	428b      	cmp	r3, r1
90012c1e:	d918      	bls.n	90012c52 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90012c20:	6803      	ldr	r3, [r0, #0]
90012c22:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90012c24:	4b0d      	ldr	r3, [pc, #52]	; (90012c5c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012c26:	6818      	ldr	r0, [r3, #0]
90012c28:	f7f1 fb00 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012c2c:	6823      	ldr	r3, [r4, #0]
90012c2e:	4606      	mov	r6, r0
90012c30:	4620      	mov	r0, r4
90012c32:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012c34:	4798      	blx	r3
90012c36:	6823      	ldr	r3, [r4, #0]
90012c38:	4607      	mov	r7, r0
90012c3a:	4620      	mov	r0, r4
90012c3c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012c40:	4798      	blx	r3
90012c42:	463a      	mov	r2, r7
90012c44:	4603      	mov	r3, r0
90012c46:	4631      	mov	r1, r6
90012c48:	4620      	mov	r0, r4
90012c4a:	46ac      	mov	ip, r5
90012c4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90012c50:	4760      	bx	ip
90012c52:	2000      	movs	r0, #0
90012c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012c58:	24039760 	.word	0x24039760
90012c5c:	24039768 	.word	0x24039768

90012c60 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90012c60:	4b18      	ldr	r3, [pc, #96]	; (90012cc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90012c62:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90012c66:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90012c68:	4604      	mov	r4, r0
90012c6a:	881b      	ldrh	r3, [r3, #0]
90012c6c:	428b      	cmp	r3, r1
90012c6e:	d926      	bls.n	90012cbe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90012c70:	4b15      	ldr	r3, [pc, #84]	; (90012cc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90012c72:	681b      	ldr	r3, [r3, #0]
90012c74:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90012c78:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90012c7c:	4b13      	ldr	r3, [pc, #76]	; (90012ccc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90012c7e:	7855      	ldrb	r5, [r2, #1]
90012c80:	681b      	ldr	r3, [r3, #0]
90012c82:	f3c5 0581 	ubfx	r5, r5, #2, #2
90012c86:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90012c8a:	6833      	ldr	r3, [r6, #0]
90012c8c:	69df      	ldr	r7, [r3, #28]
90012c8e:	4b10      	ldr	r3, [pc, #64]	; (90012cd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90012c90:	6818      	ldr	r0, [r3, #0]
90012c92:	f7f1 facb 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012c96:	6823      	ldr	r3, [r4, #0]
90012c98:	4680      	mov	r8, r0
90012c9a:	4620      	mov	r0, r4
90012c9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012c9e:	4798      	blx	r3
90012ca0:	6823      	ldr	r3, [r4, #0]
90012ca2:	4681      	mov	r9, r0
90012ca4:	4620      	mov	r0, r4
90012ca6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012caa:	4798      	blx	r3
90012cac:	464b      	mov	r3, r9
90012cae:	9000      	str	r0, [sp, #0]
90012cb0:	4642      	mov	r2, r8
90012cb2:	4629      	mov	r1, r5
90012cb4:	4630      	mov	r0, r6
90012cb6:	47b8      	blx	r7
90012cb8:	b003      	add	sp, #12
90012cba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012cbe:	2000      	movs	r0, #0
90012cc0:	e7fa      	b.n	90012cb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90012cc2:	bf00      	nop
90012cc4:	24039760 	.word	0x24039760
90012cc8:	2403975c 	.word	0x2403975c
90012ccc:	24039764 	.word	0x24039764
90012cd0:	24039768 	.word	0x24039768

90012cd4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012cd4:	b40e      	push	{r1, r2, r3}
90012cd6:	4b30      	ldr	r3, [pc, #192]	; (90012d98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012cdc:	881a      	ldrh	r2, [r3, #0]
90012cde:	b09d      	sub	sp, #116	; 0x74
90012ce0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90012ce2:	4604      	mov	r4, r0
90012ce4:	429a      	cmp	r2, r3
90012ce6:	d954      	bls.n	90012d92 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012ce8:	aa26      	add	r2, sp, #152	; 0x98
90012cea:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90012d9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90012cee:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90012da0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90012cf2:	9202      	str	r2, [sp, #8]
90012cf4:	f8d9 2000 	ldr.w	r2, [r9]
90012cf8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012cfc:	f8d8 3000 	ldr.w	r3, [r8]
90012d00:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012d04:	682b      	ldr	r3, [r5, #0]
90012d06:	4628      	mov	r0, r5
90012d08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012d0a:	4798      	blx	r3
90012d0c:	4606      	mov	r6, r0
90012d0e:	b207      	sxth	r7, r0
90012d10:	a803      	add	r0, sp, #12
90012d12:	f005 f8e4 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90012d16:	682b      	ldr	r3, [r5, #0]
90012d18:	4628      	mov	r0, r5
90012d1a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90012d1c:	4798      	blx	r3
90012d1e:	682b      	ldr	r3, [r5, #0]
90012d20:	4682      	mov	sl, r0
90012d22:	4628      	mov	r0, r5
90012d24:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90012d26:	4798      	blx	r3
90012d28:	4653      	mov	r3, sl
90012d2a:	9000      	str	r0, [sp, #0]
90012d2c:	a803      	add	r0, sp, #12
90012d2e:	9a02      	ldr	r2, [sp, #8]
90012d30:	9925      	ldr	r1, [sp, #148]	; 0x94
90012d32:	f005 f92f 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012d36:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90012d38:	f8d9 3000 	ldr.w	r3, [r9]
90012d3c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90012d40:	8925      	ldrh	r5, [r4, #8]
90012d42:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90012d46:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90012d4a:	eba5 050c 	sub.w	r5, r5, ip
90012d4e:	784a      	ldrb	r2, [r1, #1]
90012d50:	f8d8 3000 	ldr.w	r3, [r8]
90012d54:	b22d      	sxth	r5, r5
90012d56:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90012d5a:	f3c2 0281 	ubfx	r2, r2, #2, #2
90012d5e:	9500      	str	r5, [sp, #0]
90012d60:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90012d64:	a803      	add	r0, sp, #12
90012d66:	f002 fded 	bl	90015944 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90012d6a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90012d6e:	b203      	sxth	r3, r0
90012d70:	18b9      	adds	r1, r7, r2
90012d72:	2900      	cmp	r1, #0
90012d74:	dd0b      	ble.n	90012d8e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90012d76:	3b01      	subs	r3, #1
90012d78:	fb13 f302 	smulbb	r3, r3, r2
90012d7c:	fb16 3300 	smlabb	r3, r6, r0, r3
90012d80:	b21f      	sxth	r7, r3
90012d82:	4638      	mov	r0, r7
90012d84:	b01d      	add	sp, #116	; 0x74
90012d86:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012d8a:	b003      	add	sp, #12
90012d8c:	4770      	bx	lr
90012d8e:	2b00      	cmp	r3, #0
90012d90:	dcf7      	bgt.n	90012d82 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012d92:	2700      	movs	r7, #0
90012d94:	e7f5      	b.n	90012d82 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012d96:	bf00      	nop
90012d98:	24039760 	.word	0x24039760
90012d9c:	2403975c 	.word	0x2403975c
90012da0:	24039764 	.word	0x24039764

90012da4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90012da4:	4bbd      	ldr	r3, [pc, #756]	; (9001309c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90012da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012daa:	460c      	mov	r4, r1
90012dac:	881b      	ldrh	r3, [r3, #0]
90012dae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90012db0:	b0a9      	sub	sp, #164	; 0xa4
90012db2:	4680      	mov	r8, r0
90012db4:	428b      	cmp	r3, r1
90012db6:	d809      	bhi.n	90012dcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90012db8:	2300      	movs	r3, #0
90012dba:	f04f 32ff 	mov.w	r2, #4294967295
90012dbe:	6083      	str	r3, [r0, #8]
90012dc0:	e9c0 3200 	strd	r3, r2, [r0]
90012dc4:	4640      	mov	r0, r8
90012dc6:	b029      	add	sp, #164	; 0xa4
90012dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012dcc:	4eb4      	ldr	r6, [pc, #720]	; (900130a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90012dce:	6833      	ldr	r3, [r6, #0]
90012dd0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90012dd4:	4bb3      	ldr	r3, [pc, #716]	; (900130a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90012dd6:	681b      	ldr	r3, [r3, #0]
90012dd8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012ddc:	4bb2      	ldr	r3, [pc, #712]	; (900130a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90012dde:	6818      	ldr	r0, [r3, #0]
90012de0:	f7f1 fa24 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012de4:	682b      	ldr	r3, [r5, #0]
90012de6:	4681      	mov	r9, r0
90012de8:	4628      	mov	r0, r5
90012dea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012dec:	4798      	blx	r3
90012dee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90012df0:	b203      	sxth	r3, r0
90012df2:	4682      	mov	sl, r0
90012df4:	4407      	add	r7, r0
90012df6:	a80f      	add	r0, sp, #60	; 0x3c
90012df8:	9304      	str	r3, [sp, #16]
90012dfa:	b2bb      	uxth	r3, r7
90012dfc:	9303      	str	r3, [sp, #12]
90012dfe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90012e02:	2b00      	cmp	r3, #0
90012e04:	f040 80a5 	bne.w	90012f52 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90012e08:	f005 f869 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90012e0c:	682b      	ldr	r3, [r5, #0]
90012e0e:	4628      	mov	r0, r5
90012e10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90012e12:	4798      	blx	r3
90012e14:	682b      	ldr	r3, [r5, #0]
90012e16:	4606      	mov	r6, r0
90012e18:	4628      	mov	r0, r5
90012e1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90012e1c:	4798      	blx	r3
90012e1e:	6823      	ldr	r3, [r4, #0]
90012e20:	4607      	mov	r7, r0
90012e22:	4620      	mov	r0, r4
90012e24:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012e26:	4798      	blx	r3
90012e28:	6823      	ldr	r3, [r4, #0]
90012e2a:	4683      	mov	fp, r0
90012e2c:	4620      	mov	r0, r4
90012e2e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012e32:	4798      	blx	r3
90012e34:	463b      	mov	r3, r7
90012e36:	4649      	mov	r1, r9
90012e38:	4632      	mov	r2, r6
90012e3a:	2600      	movs	r6, #0
90012e3c:	e9cd b000 	strd	fp, r0, [sp]
90012e40:	a80f      	add	r0, sp, #60	; 0x3c
90012e42:	4637      	mov	r7, r6
90012e44:	f005 f8bb 	bl	90017fbe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90012e48:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012e4c:	f8df b250 	ldr.w	fp, [pc, #592]	; 900130a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90012e50:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90012e54:	bf0c      	ite	eq
90012e56:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90012e5a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90012e5e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90012e60:	4629      	mov	r1, r5
90012e62:	f8db 3000 	ldr.w	r3, [fp]
90012e66:	a80f      	add	r0, sp, #60	; 0x3c
90012e68:	3701      	adds	r7, #1
90012e6a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90012e6e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90012e72:	b2bf      	uxth	r7, r7
90012e74:	785b      	ldrb	r3, [r3, #1]
90012e76:	f3c3 0381 	ubfx	r3, r3, #2, #2
90012e7a:	f002 fa7e 	bl	9001537a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90012e7e:	9b03      	ldr	r3, [sp, #12]
90012e80:	4286      	cmp	r6, r0
90012e82:	eba9 0903 	sub.w	r9, r9, r3
90012e86:	bfb8      	it	lt
90012e88:	4606      	movlt	r6, r0
90012e8a:	a80f      	add	r0, sp, #60	; 0x3c
90012e8c:	fa0f f989 	sxth.w	r9, r9
90012e90:	b236      	sxth	r6, r6
90012e92:	f005 f84b 	bl	90017f2c <_ZN8touchgfx12TextProvider11endOfStringEv>
90012e96:	b918      	cbnz	r0, 90012ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90012e98:	7a2b      	ldrb	r3, [r5, #8]
90012e9a:	444b      	add	r3, r9
90012e9c:	2b00      	cmp	r3, #0
90012e9e:	dcde      	bgt.n	90012e5e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90012ea0:	9b03      	ldr	r3, [sp, #12]
90012ea2:	4620      	mov	r0, r4
90012ea4:	9a04      	ldr	r2, [sp, #16]
90012ea6:	fb13 f707 	smulbb	r7, r3, r7
90012eaa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90012eac:	f895 9009 	ldrb.w	r9, [r5, #9]
90012eb0:	1aff      	subs	r7, r7, r3
90012eb2:	b2bf      	uxth	r7, r7
90012eb4:	b23b      	sxth	r3, r7
90012eb6:	429a      	cmp	r2, r3
90012eb8:	bfa8      	it	ge
90012eba:	4657      	movge	r7, sl
90012ebc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012ec0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90012ec4:	6823      	ldr	r3, [r4, #0]
90012ec6:	444f      	add	r7, r9
90012ec8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90012eca:	bf08      	it	eq
90012ecc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90012ed0:	fa1f f987 	uxth.w	r9, r7
90012ed4:	bf18      	it	ne
90012ed6:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90012eda:	4798      	blx	r3
90012edc:	2801      	cmp	r0, #1
90012ede:	fa0f f789 	sxth.w	r7, r9
90012ee2:	b2b3      	uxth	r3, r6
90012ee4:	f000 80e2 	beq.w	900130ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90012ee8:	2802      	cmp	r0, #2
90012eea:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90012eee:	f000 80e3 	beq.w	900130b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90012ef2:	7aea      	ldrb	r2, [r5, #11]
90012ef4:	b236      	sxth	r6, r6
90012ef6:	7b2d      	ldrb	r5, [r5, #12]
90012ef8:	1ab6      	subs	r6, r6, r2
90012efa:	442a      	add	r2, r5
90012efc:	fa1f fa86 	uxth.w	sl, r6
90012f00:	4413      	add	r3, r2
90012f02:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90012f06:	fa0f fb8a 	sxth.w	fp, sl
90012f0a:	b29b      	uxth	r3, r3
90012f0c:	2a02      	cmp	r2, #2
90012f0e:	b21e      	sxth	r6, r3
90012f10:	f000 80d6 	beq.w	900130c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90012f14:	2a03      	cmp	r2, #3
90012f16:	f000 80de 	beq.w	900130d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90012f1a:	2a01      	cmp	r2, #1
90012f1c:	f040 80e6 	bne.w	900130ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90012f20:	8925      	ldrh	r5, [r4, #8]
90012f22:	4633      	mov	r3, r6
90012f24:	463e      	mov	r6, r7
90012f26:	eba5 0909 	sub.w	r9, r5, r9
90012f2a:	461f      	mov	r7, r3
90012f2c:	465d      	mov	r5, fp
90012f2e:	fa0f fb89 	sxth.w	fp, r9
90012f32:	4b5d      	ldr	r3, [pc, #372]	; (900130a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90012f34:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90012f36:	6818      	ldr	r0, [r3, #0]
90012f38:	f7f1 f978 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90012f3c:	f8a8 b000 	strh.w	fp, [r8]
90012f40:	f8a8 5002 	strh.w	r5, [r8, #2]
90012f44:	f8a8 6004 	strh.w	r6, [r8, #4]
90012f48:	f8a8 7006 	strh.w	r7, [r8, #6]
90012f4c:	f8c8 0008 	str.w	r0, [r8, #8]
90012f50:	e738      	b.n	90012dc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90012f52:	f004 ffc4 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90012f56:	682b      	ldr	r3, [r5, #0]
90012f58:	4628      	mov	r0, r5
90012f5a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90012f5c:	4798      	blx	r3
90012f5e:	682b      	ldr	r3, [r5, #0]
90012f60:	4607      	mov	r7, r0
90012f62:	4628      	mov	r0, r5
90012f64:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90012f66:	4798      	blx	r3
90012f68:	6823      	ldr	r3, [r4, #0]
90012f6a:	4683      	mov	fp, r0
90012f6c:	4620      	mov	r0, r4
90012f6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012f70:	4798      	blx	r3
90012f72:	6822      	ldr	r2, [r4, #0]
90012f74:	9005      	str	r0, [sp, #20]
90012f76:	4620      	mov	r0, r4
90012f78:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90012f7c:	4790      	blx	r2
90012f7e:	9b05      	ldr	r3, [sp, #20]
90012f80:	463a      	mov	r2, r7
90012f82:	4649      	mov	r1, r9
90012f84:	9001      	str	r0, [sp, #4]
90012f86:	a80f      	add	r0, sp, #60	; 0x3c
90012f88:	9300      	str	r3, [sp, #0]
90012f8a:	465b      	mov	r3, fp
90012f8c:	f005 f817 	bl	90017fbe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90012f90:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012f94:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90012f98:	af0f      	add	r7, sp, #60	; 0x3c
90012f9a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90012f9e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012fa2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90012fa4:	bf0a      	itet	eq
90012fa6:	464a      	moveq	r2, r9
90012fa8:	461a      	movne	r2, r3
90012faa:	4699      	moveq	r9, r3
90012fac:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90012fb0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90012fb4:	1ad2      	subs	r2, r2, r3
90012fb6:	6833      	ldr	r3, [r6, #0]
90012fb8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90012fbc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90012fc0:	7859      	ldrb	r1, [r3, #1]
90012fc2:	2300      	movs	r3, #0
90012fc4:	9707      	str	r7, [sp, #28]
90012fc6:	f3c1 0181 	ubfx	r1, r1, #2, #2
90012fca:	f8ad 3018 	strh.w	r3, [sp, #24]
90012fce:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90012fd2:	f88d 1020 	strb.w	r1, [sp, #32]
90012fd6:	9509      	str	r5, [sp, #36]	; 0x24
90012fd8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90012fdc:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90012fe0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90012fe4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90012fe8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90012fec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90012ff0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90012ff4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012ff8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90012ffc:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90013000:	b350      	cbz	r0, 90013058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013002:	682b      	ldr	r3, [r5, #0]
90013004:	4628      	mov	r0, r5
90013006:	695b      	ldr	r3, [r3, #20]
90013008:	4798      	blx	r3
9001300a:	4607      	mov	r7, r0
9001300c:	b320      	cbz	r0, 90013058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001300e:	9809      	ldr	r0, [sp, #36]	; 0x24
90013010:	4639      	mov	r1, r7
90013012:	6803      	ldr	r3, [r0, #0]
90013014:	68db      	ldr	r3, [r3, #12]
90013016:	4798      	blx	r3
90013018:	4606      	mov	r6, r0
9001301a:	b1e8      	cbz	r0, 90013058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001301c:	7b43      	ldrb	r3, [r0, #13]
9001301e:	7a82      	ldrb	r2, [r0, #10]
90013020:	005b      	lsls	r3, r3, #1
90013022:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013026:	4313      	orrs	r3, r2
90013028:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
9001302c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90013030:	2b06      	cmp	r3, #6
90013032:	d111      	bne.n	90013058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013034:	9809      	ldr	r0, [sp, #36]	; 0x24
90013036:	4632      	mov	r2, r6
90013038:	4639      	mov	r1, r7
9001303a:	6803      	ldr	r3, [r0, #0]
9001303c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001303e:	4798      	blx	r3
90013040:	7b73      	ldrb	r3, [r6, #13]
90013042:	005b      	lsls	r3, r3, #1
90013044:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013048:	7ab3      	ldrb	r3, [r6, #10]
9001304a:	4313      	orrs	r3, r2
9001304c:	4418      	add	r0, r3
9001304e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013052:	4418      	add	r0, r3
90013054:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90013058:	2600      	movs	r6, #0
9001305a:	4637      	mov	r7, r6
9001305c:	a806      	add	r0, sp, #24
9001305e:	3701      	adds	r7, #1
90013060:	f002 fb6d 	bl	9001573e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013064:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90013068:	9b03      	ldr	r3, [sp, #12]
9001306a:	b2bf      	uxth	r7, r7
9001306c:	4286      	cmp	r6, r0
9001306e:	eba9 0903 	sub.w	r9, r9, r3
90013072:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90013076:	bfb8      	it	lt
90013078:	4606      	movlt	r6, r0
9001307a:	fa0f f989 	sxth.w	r9, r9
9001307e:	b236      	sxth	r6, r6
90013080:	2b00      	cmp	r3, #0
90013082:	f43f af0d 	beq.w	90012ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013086:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
9001308a:	2b00      	cmp	r3, #0
9001308c:	f47f af08 	bne.w	90012ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013090:	7a2b      	ldrb	r3, [r5, #8]
90013092:	444b      	add	r3, r9
90013094:	2b00      	cmp	r3, #0
90013096:	dce1      	bgt.n	9001305c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90013098:	e702      	b.n	90012ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001309a:	bf00      	nop
9001309c:	24039760 	.word	0x24039760
900130a0:	2403975c 	.word	0x2403975c
900130a4:	24039764 	.word	0x24039764
900130a8:	24039768 	.word	0x24039768
900130ac:	ebaa 0606 	sub.w	r6, sl, r6
900130b0:	2002      	movs	r0, #2
900130b2:	fb96 f6f0 	sdiv	r6, r6, r0
900130b6:	e71c      	b.n	90012ef2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900130b8:	441e      	add	r6, r3
900130ba:	ebaa 0606 	sub.w	r6, sl, r6
900130be:	e718      	b.n	90012ef2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900130c0:	8925      	ldrh	r5, [r4, #8]
900130c2:	1aed      	subs	r5, r5, r3
900130c4:	eba5 050a 	sub.w	r5, r5, sl
900130c8:	fa0f fb85 	sxth.w	fp, r5
900130cc:	8965      	ldrh	r5, [r4, #10]
900130ce:	eba5 0509 	sub.w	r5, r5, r9
900130d2:	b22d      	sxth	r5, r5
900130d4:	e72d      	b.n	90012f32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900130d6:	8965      	ldrh	r5, [r4, #10]
900130d8:	f04f 0b00 	mov.w	fp, #0
900130dc:	1aed      	subs	r5, r5, r3
900130de:	4633      	mov	r3, r6
900130e0:	463e      	mov	r6, r7
900130e2:	eba5 050a 	sub.w	r5, r5, sl
900130e6:	461f      	mov	r7, r3
900130e8:	b22d      	sxth	r5, r5
900130ea:	e722      	b.n	90012f32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900130ec:	2500      	movs	r5, #0
900130ee:	e720      	b.n	90012f32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

900130f0 <_ZN8touchgfx8TextAreaD0Ev>:
900130f0:	b510      	push	{r4, lr}
900130f2:	4604      	mov	r4, r0
900130f4:	2148      	movs	r1, #72	; 0x48
900130f6:	f014 fa13 	bl	90027520 <_ZdlPvj>
900130fa:	4620      	mov	r0, r4
900130fc:	bd10      	pop	{r4, pc}
	...

90013100 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90013100:	b513      	push	{r0, r1, r4, lr}
90013102:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90013106:	4604      	mov	r4, r0
90013108:	b1fb      	cbz	r3, 9001314a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001310a:	4b16      	ldr	r3, [pc, #88]	; (90013164 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
9001310c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001310e:	881b      	ldrh	r3, [r3, #0]
90013110:	428b      	cmp	r3, r1
90013112:	d91a      	bls.n	9001314a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013114:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013118:	2b00      	cmp	r3, #0
9001311a:	dd16      	ble.n	9001314a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001311c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013120:	2b00      	cmp	r3, #0
90013122:	dd12      	ble.n	9001314a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013124:	4b10      	ldr	r3, [pc, #64]	; (90013168 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90013126:	6818      	ldr	r0, [r3, #0]
90013128:	f7f1 f880 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
9001312c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013130:	6822      	ldr	r2, [r4, #0]
90013132:	2b00      	cmp	r3, #0
90013134:	db06      	blt.n	90013144 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013136:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001313a:	2b00      	cmp	r3, #0
9001313c:	db02      	blt.n	90013144 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
9001313e:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013140:	4298      	cmp	r0, r3
90013142:	d004      	beq.n	9001314e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013144:	6953      	ldr	r3, [r2, #20]
90013146:	4620      	mov	r0, r4
90013148:	4798      	blx	r3
9001314a:	b002      	add	sp, #8
9001314c:	bd10      	pop	{r4, pc}
9001314e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90013152:	466b      	mov	r3, sp
90013154:	6912      	ldr	r2, [r2, #16]
90013156:	c903      	ldmia	r1, {r0, r1}
90013158:	e883 0003 	stmia.w	r3, {r0, r1}
9001315c:	4619      	mov	r1, r3
9001315e:	4620      	mov	r0, r4
90013160:	4790      	blx	r2
90013162:	e7f2      	b.n	9001314a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013164:	24039760 	.word	0x24039760
90013168:	24039768 	.word	0x24039768

9001316c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
9001316c:	4b45      	ldr	r3, [pc, #276]	; (90013284 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
9001316e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013172:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013174:	b08e      	sub	sp, #56	; 0x38
90013176:	881b      	ldrh	r3, [r3, #0]
90013178:	4604      	mov	r4, r0
9001317a:	4293      	cmp	r3, r2
9001317c:	d97e      	bls.n	9001327c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001317e:	6808      	ldr	r0, [r1, #0]
90013180:	ab05      	add	r3, sp, #20
90013182:	6849      	ldr	r1, [r1, #4]
90013184:	4d40      	ldr	r5, [pc, #256]	; (90013288 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90013186:	c303      	stmia	r3!, {r0, r1}
90013188:	4611      	mov	r1, r2
9001318a:	6828      	ldr	r0, [r5, #0]
9001318c:	f7f1 f84e 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013190:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013194:	2b00      	cmp	r3, #0
90013196:	db11      	blt.n	900131bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013198:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001319c:	2b00      	cmp	r3, #0
9001319e:	db0d      	blt.n	900131bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900131a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
900131a2:	4298      	cmp	r0, r3
900131a4:	d10a      	bne.n	900131bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900131a6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
900131aa:	ab09      	add	r3, sp, #36	; 0x24
900131ac:	e892 0003 	ldmia.w	r2, {r0, r1}
900131b0:	e883 0003 	stmia.w	r3, {r0, r1}
900131b4:	4619      	mov	r1, r3
900131b6:	a805      	add	r0, sp, #20
900131b8:	f7fd fe4a 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900131bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900131c0:	2b00      	cmp	r3, #0
900131c2:	dd5b      	ble.n	9001327c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900131c4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
900131c8:	2b00      	cmp	r3, #0
900131ca:	dd57      	ble.n	9001327c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900131cc:	4f2f      	ldr	r7, [pc, #188]	; (9001328c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
900131ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900131d0:	683b      	ldr	r3, [r7, #0]
900131d2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900131d6:	4b2e      	ldr	r3, [pc, #184]	; (90013290 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
900131d8:	681b      	ldr	r3, [r3, #0]
900131da:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900131de:	2e00      	cmp	r6, #0
900131e0:	d04c      	beq.n	9001327c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900131e2:	6823      	ldr	r3, [r4, #0]
900131e4:	4620      	mov	r0, r4
900131e6:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
900131ea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900131ec:	4798      	blx	r3
900131ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900131f0:	683b      	ldr	r3, [r7, #0]
900131f2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
900131f6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900131fa:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
900131fe:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90013202:	785b      	ldrb	r3, [r3, #1]
90013204:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90013208:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001320c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001320e:	9609      	str	r6, [sp, #36]	; 0x24
90013210:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90013214:	4b1f      	ldr	r3, [pc, #124]	; (90013294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90013216:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
9001321a:	681b      	ldr	r3, [r3, #0]
9001321c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90013220:	910b      	str	r1, [sp, #44]	; 0x2c
90013222:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90013226:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
9001322a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
9001322e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90013232:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013236:	b10a      	cbz	r2, 9001323c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90013238:	6cde      	ldr	r6, [r3, #76]	; 0x4c
9001323a:	b906      	cbnz	r6, 9001323e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
9001323c:	689e      	ldr	r6, [r3, #8]
9001323e:	af07      	add	r7, sp, #28
90013240:	4621      	mov	r1, r4
90013242:	4638      	mov	r0, r7
90013244:	f004 f96a 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013248:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001324a:	6828      	ldr	r0, [r5, #0]
9001324c:	f7f0 ffee 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013250:	6823      	ldr	r3, [r4, #0]
90013252:	4605      	mov	r5, r0
90013254:	4620      	mov	r0, r4
90013256:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013258:	4798      	blx	r3
9001325a:	6823      	ldr	r3, [r4, #0]
9001325c:	4680      	mov	r8, r0
9001325e:	4620      	mov	r0, r4
90013260:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013264:	4798      	blx	r3
90013266:	ab09      	add	r3, sp, #36	; 0x24
90013268:	9501      	str	r5, [sp, #4]
9001326a:	9300      	str	r3, [sp, #0]
9001326c:	ab05      	add	r3, sp, #20
9001326e:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013272:	4630      	mov	r0, r6
90013274:	e897 0006 	ldmia.w	r7, {r1, r2}
90013278:	f7f0 ff88 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001327c:	b00e      	add	sp, #56	; 0x38
9001327e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013282:	bf00      	nop
90013284:	24039760 	.word	0x24039760
90013288:	24039768 	.word	0x24039768
9001328c:	2403975c 	.word	0x2403975c
90013290:	24039764 	.word	0x24039764
90013294:	24039704 	.word	0x24039704

90013298 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90013298:	b570      	push	{r4, r5, r6, lr}
9001329a:	6803      	ldr	r3, [r0, #0]
9001329c:	4604      	mov	r4, r0
9001329e:	4615      	mov	r5, r2
900132a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900132a2:	4798      	blx	r3
900132a4:	6823      	ldr	r3, [r4, #0]
900132a6:	4629      	mov	r1, r5
900132a8:	4620      	mov	r0, r4
900132aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900132ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900132b0:	4718      	bx	r3
	...

900132b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900132b4:	b538      	push	{r3, r4, r5, lr}
900132b6:	4b0e      	ldr	r3, [pc, #56]	; (900132f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900132b8:	4604      	mov	r4, r0
900132ba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900132bc:	881b      	ldrh	r3, [r3, #0]
900132be:	429a      	cmp	r2, r3
900132c0:	d214      	bcs.n	900132ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900132c2:	6803      	ldr	r3, [r0, #0]
900132c4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900132c6:	4798      	blx	r3
900132c8:	6823      	ldr	r3, [r4, #0]
900132ca:	4605      	mov	r5, r0
900132cc:	4620      	mov	r0, r4
900132ce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900132d0:	4798      	blx	r3
900132d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900132d6:	b22d      	sxth	r5, r5
900132d8:	4601      	mov	r1, r0
900132da:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900132de:	bf06      	itte	eq
900132e0:	4602      	moveq	r2, r0
900132e2:	4629      	moveq	r1, r5
900132e4:	462a      	movne	r2, r5
900132e6:	4620      	mov	r0, r4
900132e8:	f7ff ffd6 	bl	90013298 <_ZN8touchgfx8Drawable14setWidthHeightEss>
900132ec:	bd38      	pop	{r3, r4, r5, pc}
900132ee:	bf00      	nop
900132f0:	24039760 	.word	0x24039760

900132f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900132f4:	b530      	push	{r4, r5, lr}
900132f6:	888b      	ldrh	r3, [r1, #4]
900132f8:	b085      	sub	sp, #20
900132fa:	4604      	mov	r4, r0
900132fc:	8583      	strh	r3, [r0, #44]	; 0x2c
900132fe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013302:	b923      	cbnz	r3, 9001330e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013304:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013308:	b90b      	cbnz	r3, 9001330e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001330a:	f7ff ffd3 	bl	900132b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001330e:	6823      	ldr	r3, [r4, #0]
90013310:	466d      	mov	r5, sp
90013312:	4621      	mov	r1, r4
90013314:	343c      	adds	r4, #60	; 0x3c
90013316:	4628      	mov	r0, r5
90013318:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9001331c:	4798      	blx	r3
9001331e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013322:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013326:	b005      	add	sp, #20
90013328:	bd30      	pop	{r4, r5, pc}

9001332a <_ZNK8touchgfx3Box12getSolidRectEv>:
9001332a:	2300      	movs	r3, #0
9001332c:	8083      	strh	r3, [r0, #4]
9001332e:	80c3      	strh	r3, [r0, #6]
90013330:	8003      	strh	r3, [r0, #0]
90013332:	8043      	strh	r3, [r0, #2]
90013334:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90013338:	2bff      	cmp	r3, #255	; 0xff
9001333a:	bf01      	itttt	eq
9001333c:	890b      	ldrheq	r3, [r1, #8]
9001333e:	8083      	strheq	r3, [r0, #4]
90013340:	894b      	ldrheq	r3, [r1, #10]
90013342:	80c3      	strheq	r3, [r0, #6]
90013344:	4770      	bx	lr
	...

90013348 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90013348:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001334a:	4604      	mov	r4, r0
9001334c:	466b      	mov	r3, sp
9001334e:	6808      	ldr	r0, [r1, #0]
90013350:	6849      	ldr	r1, [r1, #4]
90013352:	c303      	stmia	r3!, {r0, r1}
90013354:	6823      	ldr	r3, [r4, #0]
90013356:	4669      	mov	r1, sp
90013358:	4620      	mov	r0, r4
9001335a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001335c:	4798      	blx	r3
9001335e:	4b08      	ldr	r3, [pc, #32]	; (90013380 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013360:	681b      	ldr	r3, [r3, #0]
90013362:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013366:	b10a      	cbz	r2, 9001336c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90013368:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001336a:	b900      	cbnz	r0, 9001336e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9001336c:	6898      	ldr	r0, [r3, #8]
9001336e:	6803      	ldr	r3, [r0, #0]
90013370:	4669      	mov	r1, sp
90013372:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90013374:	6a1d      	ldr	r5, [r3, #32]
90013376:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001337a:	47a8      	blx	r5
9001337c:	b003      	add	sp, #12
9001337e:	bd30      	pop	{r4, r5, pc}
90013380:	24039704 	.word	0x24039704

90013384 <_ZN8touchgfx3BoxD1Ev>:
90013384:	4770      	bx	lr

90013386 <_ZN8touchgfx3BoxD0Ev>:
90013386:	b510      	push	{r4, lr}
90013388:	4604      	mov	r4, r0
9001338a:	212c      	movs	r1, #44	; 0x2c
9001338c:	f014 f8c8 	bl	90027520 <_ZdlPvj>
90013390:	4620      	mov	r0, r4
90013392:	bd10      	pop	{r4, pc}

90013394 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013394:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90013398:	b12a      	cbz	r2, 900133a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001339a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001339e:	b112      	cbz	r2, 900133a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900133a0:	6803      	ldr	r3, [r0, #0]
900133a2:	695b      	ldr	r3, [r3, #20]
900133a4:	4718      	bx	r3
900133a6:	4770      	bx	lr

900133a8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900133a8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900133ac:	4770      	bx	lr

900133ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900133ae:	b570      	push	{r4, r5, r6, lr}
900133b0:	880b      	ldrh	r3, [r1, #0]
900133b2:	4605      	mov	r5, r0
900133b4:	4604      	mov	r4, r0
900133b6:	85c3      	strh	r3, [r0, #46]	; 0x2e
900133b8:	8813      	ldrh	r3, [r2, #0]
900133ba:	f825 3f30 	strh.w	r3, [r5, #48]!
900133be:	4628      	mov	r0, r5
900133c0:	f006 f91a 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900133c4:	4606      	mov	r6, r0
900133c6:	4628      	mov	r0, r5
900133c8:	f006 f94a 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
900133cc:	6823      	ldr	r3, [r4, #0]
900133ce:	4605      	mov	r5, r0
900133d0:	4631      	mov	r1, r6
900133d2:	4620      	mov	r0, r4
900133d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900133d6:	4798      	blx	r3
900133d8:	6823      	ldr	r3, [r4, #0]
900133da:	4629      	mov	r1, r5
900133dc:	4620      	mov	r0, r4
900133de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900133e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900133e4:	4718      	bx	r3

900133e6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
900133e6:	b510      	push	{r4, lr}
900133e8:	4604      	mov	r4, r0
900133ea:	6a80      	ldr	r0, [r0, #40]	; 0x28
900133ec:	b150      	cbz	r0, 90013404 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900133ee:	6803      	ldr	r3, [r0, #0]
900133f0:	68db      	ldr	r3, [r3, #12]
900133f2:	4798      	blx	r3
900133f4:	b130      	cbz	r0, 90013404 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900133f6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900133f8:	4621      	mov	r1, r4
900133fa:	6803      	ldr	r3, [r0, #0]
900133fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013400:	689b      	ldr	r3, [r3, #8]
90013402:	4718      	bx	r3
90013404:	bd10      	pop	{r4, pc}

90013406 <_ZNK8touchgfx6Button12getSolidRectEv>:
90013406:	b510      	push	{r4, lr}
90013408:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
9001340c:	4604      	mov	r4, r0
9001340e:	2bff      	cmp	r3, #255	; 0xff
90013410:	d006      	beq.n	90013420 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90013412:	2300      	movs	r3, #0
90013414:	8003      	strh	r3, [r0, #0]
90013416:	8043      	strh	r3, [r0, #2]
90013418:	8083      	strh	r3, [r0, #4]
9001341a:	80c3      	strh	r3, [r0, #6]
9001341c:	4620      	mov	r0, r4
9001341e:	bd10      	pop	{r4, pc}
90013420:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90013424:	b11b      	cbz	r3, 9001342e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90013426:	3130      	adds	r1, #48	; 0x30
90013428:	f006 f94e 	bl	900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001342c:	e7f6      	b.n	9001341c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
9001342e:	312e      	adds	r1, #46	; 0x2e
90013430:	e7fa      	b.n	90013428 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90013434 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90013434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013438:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9001343c:	b08a      	sub	sp, #40	; 0x28
9001343e:	4604      	mov	r4, r0
90013440:	4688      	mov	r8, r1
90013442:	2b00      	cmp	r3, #0
90013444:	d066      	beq.n	90013514 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90013446:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90013448:	a805      	add	r0, sp, #20
9001344a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001344e:	f006 f8d3 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013452:	4607      	mov	r7, r0
90013454:	a805      	add	r0, sp, #20
90013456:	f006 f903 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001345a:	f9b8 6000 	ldrsh.w	r6, [r8]
9001345e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90013462:	2300      	movs	r3, #0
90013464:	4432      	add	r2, r6
90013466:	9306      	str	r3, [sp, #24]
90013468:	b292      	uxth	r2, r2
9001346a:	fa0f fc82 	sxth.w	ip, r2
9001346e:	459c      	cmp	ip, r3
90013470:	dd52      	ble.n	90013518 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013472:	42b7      	cmp	r7, r6
90013474:	dd50      	ble.n	90013518 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013476:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9001347a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001347e:	442b      	add	r3, r5
90013480:	b29b      	uxth	r3, r3
90013482:	b219      	sxth	r1, r3
90013484:	2900      	cmp	r1, #0
90013486:	dd47      	ble.n	90013518 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013488:	42a8      	cmp	r0, r5
9001348a:	dd45      	ble.n	90013518 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001348c:	4567      	cmp	r7, ip
9001348e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013492:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90013496:	bfb8      	it	lt
90013498:	b2ba      	uxthlt	r2, r7
9001349a:	4288      	cmp	r0, r1
9001349c:	f8ad 6018 	strh.w	r6, [sp, #24]
900134a0:	bfb8      	it	lt
900134a2:	b283      	uxthlt	r3, r0
900134a4:	1b92      	subs	r2, r2, r6
900134a6:	f8ad 501a 	strh.w	r5, [sp, #26]
900134aa:	1b5b      	subs	r3, r3, r5
900134ac:	f8ad 201c 	strh.w	r2, [sp, #28]
900134b0:	f8ad 301e 	strh.w	r3, [sp, #30]
900134b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900134b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
900134bc:	429a      	cmp	r2, r3
900134be:	d026      	beq.n	9001350e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900134c0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900134c4:	2b00      	cmp	r3, #0
900134c6:	dd22      	ble.n	9001350e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900134c8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900134cc:	2b00      	cmp	r3, #0
900134ce:	dd1e      	ble.n	9001350e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900134d0:	2300      	movs	r3, #0
900134d2:	a908      	add	r1, sp, #32
900134d4:	4620      	mov	r0, r4
900134d6:	e9cd 3308 	strd	r3, r3, [sp, #32]
900134da:	6823      	ldr	r3, [r4, #0]
900134dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900134de:	4798      	blx	r3
900134e0:	4b0f      	ldr	r3, [pc, #60]	; (90013520 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900134e2:	681b      	ldr	r3, [r3, #0]
900134e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900134e8:	b10a      	cbz	r2, 900134ee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900134ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900134ec:	b900      	cbnz	r0, 900134f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900134ee:	6898      	ldr	r0, [r3, #8]
900134f0:	2501      	movs	r5, #1
900134f2:	6801      	ldr	r1, [r0, #0]
900134f4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
900134f8:	9502      	str	r5, [sp, #8]
900134fa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900134fe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90013502:	9401      	str	r4, [sp, #4]
90013504:	ac06      	add	r4, sp, #24
90013506:	9400      	str	r4, [sp, #0]
90013508:	688c      	ldr	r4, [r1, #8]
9001350a:	a905      	add	r1, sp, #20
9001350c:	47a0      	blx	r4
9001350e:	b00a      	add	sp, #40	; 0x28
90013510:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013514:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
90013516:	e797      	b.n	90013448 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90013518:	2300      	movs	r3, #0
9001351a:	9307      	str	r3, [sp, #28]
9001351c:	e7ca      	b.n	900134b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
9001351e:	bf00      	nop
90013520:	24039704 	.word	0x24039704

90013524 <_ZNK8touchgfx6Button17invalidateContentEv>:
90013524:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
90013528:	b12a      	cbz	r2, 90013536 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001352a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001352e:	b112      	cbz	r2, 90013536 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90013530:	6803      	ldr	r3, [r0, #0]
90013532:	695b      	ldr	r3, [r3, #20]
90013534:	4718      	bx	r3
90013536:	4770      	bx	lr

90013538 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90013538:	4b30      	ldr	r3, [pc, #192]	; (900135fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001353a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001353e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013540:	b08d      	sub	sp, #52	; 0x34
90013542:	881b      	ldrh	r3, [r3, #0]
90013544:	4604      	mov	r4, r0
90013546:	460f      	mov	r7, r1
90013548:	4293      	cmp	r3, r2
9001354a:	d954      	bls.n	900135f6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
9001354c:	4b2c      	ldr	r3, [pc, #176]	; (90013600 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9001354e:	6819      	ldr	r1, [r3, #0]
90013550:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90013554:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90013558:	4a2a      	ldr	r2, [pc, #168]	; (90013604 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001355a:	6812      	ldr	r2, [r2, #0]
9001355c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90013560:	2900      	cmp	r1, #0
90013562:	d048      	beq.n	900135f6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013564:	785a      	ldrb	r2, [r3, #1]
90013566:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
9001356a:	f3c2 0801 	ubfx	r8, r2, #0, #2
9001356e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013572:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90013576:	4b24      	ldr	r3, [pc, #144]	; (90013608 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90013578:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
9001357c:	681a      	ldr	r2, [r3, #0]
9001357e:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90013582:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90013586:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
9001358a:	6b26      	ldr	r6, [r4, #48]	; 0x30
9001358c:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
90013590:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90013594:	9107      	str	r1, [sp, #28]
90013596:	f88d 8020 	strb.w	r8, [sp, #32]
9001359a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9001359e:	9609      	str	r6, [sp, #36]	; 0x24
900135a0:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900135a4:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900135a8:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900135ac:	b10b      	cbz	r3, 900135b2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900135ae:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900135b0:	b905      	cbnz	r5, 900135b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900135b2:	6895      	ldr	r5, [r2, #8]
900135b4:	ae05      	add	r6, sp, #20
900135b6:	4621      	mov	r1, r4
900135b8:	4630      	mov	r0, r6
900135ba:	f003 ffaf 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900135be:	4b13      	ldr	r3, [pc, #76]	; (9001360c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900135c0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900135c2:	6818      	ldr	r0, [r3, #0]
900135c4:	f7f0 fe32 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900135c8:	6823      	ldr	r3, [r4, #0]
900135ca:	4680      	mov	r8, r0
900135cc:	4620      	mov	r0, r4
900135ce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900135d0:	4798      	blx	r3
900135d2:	6823      	ldr	r3, [r4, #0]
900135d4:	4681      	mov	r9, r0
900135d6:	4620      	mov	r0, r4
900135d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900135dc:	4798      	blx	r3
900135de:	ab07      	add	r3, sp, #28
900135e0:	f8cd 8004 	str.w	r8, [sp, #4]
900135e4:	9300      	str	r3, [sp, #0]
900135e6:	463b      	mov	r3, r7
900135e8:	e9cd 9002 	strd	r9, r0, [sp, #8]
900135ec:	4628      	mov	r0, r5
900135ee:	e896 0006 	ldmia.w	r6, {r1, r2}
900135f2:	f7f0 fdcb 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900135f6:	b00d      	add	sp, #52	; 0x34
900135f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900135fc:	24039760 	.word	0x24039760
90013600:	2403975c 	.word	0x2403975c
90013604:	24039764 	.word	0x24039764
90013608:	24039704 	.word	0x24039704
9001360c:	24039768 	.word	0x24039768

90013610 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90013610:	4770      	bx	lr

90013612 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90013612:	b510      	push	{r4, lr}
90013614:	4604      	mov	r4, r0
90013616:	2134      	movs	r1, #52	; 0x34
90013618:	f013 ff82 	bl	90027520 <_ZdlPvj>
9001361c:	4620      	mov	r0, r4
9001361e:	bd10      	pop	{r4, pc}

90013620 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90013620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013624:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90013626:	4604      	mov	r4, r0
90013628:	460e      	mov	r6, r1
9001362a:	b08e      	sub	sp, #56	; 0x38
9001362c:	b218      	sxth	r0, r3
9001362e:	8921      	ldrh	r1, [r4, #8]
90013630:	005b      	lsls	r3, r3, #1
90013632:	8962      	ldrh	r2, [r4, #10]
90013634:	f8ad 0000 	strh.w	r0, [sp]
90013638:	b29b      	uxth	r3, r3
9001363a:	f8ad 0002 	strh.w	r0, [sp, #2]
9001363e:	1ac9      	subs	r1, r1, r3
90013640:	1ad3      	subs	r3, r2, r3
90013642:	b209      	sxth	r1, r1
90013644:	b21b      	sxth	r3, r3
90013646:	2900      	cmp	r1, #0
90013648:	f8ad 1004 	strh.w	r1, [sp, #4]
9001364c:	f8ad 3006 	strh.w	r3, [sp, #6]
90013650:	dd5e      	ble.n	90013710 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90013652:	2b00      	cmp	r3, #0
90013654:	dd5c      	ble.n	90013710 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90013656:	6830      	ldr	r0, [r6, #0]
90013658:	ab02      	add	r3, sp, #8
9001365a:	6871      	ldr	r1, [r6, #4]
9001365c:	c303      	stmia	r3!, {r0, r1}
9001365e:	4669      	mov	r1, sp
90013660:	a802      	add	r0, sp, #8
90013662:	f7fd fbf5 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90013666:	4620      	mov	r0, r4
90013668:	a902      	add	r1, sp, #8
9001366a:	f7ff fe6d 	bl	90013348 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
9001366e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90013670:	2800      	cmp	r0, #0
90013672:	d05f      	beq.n	90013734 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90013674:	8963      	ldrh	r3, [r4, #10]
90013676:	b202      	sxth	r2, r0
90013678:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001367c:	2500      	movs	r5, #0
9001367e:	1a1f      	subs	r7, r3, r0
90013680:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90013684:	f8ad 101c 	strh.w	r1, [sp, #28]
90013688:	b21b      	sxth	r3, r3
9001368a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001368e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
90013692:	af04      	add	r7, sp, #16
90013694:	1a09      	subs	r1, r1, r0
90013696:	9506      	str	r5, [sp, #24]
90013698:	f8ad 201e 	strh.w	r2, [sp, #30]
9001369c:	f8ad 5020 	strh.w	r5, [sp, #32]
900136a0:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900136a4:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900136a8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900136ac:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900136b0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900136b4:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900136b8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900136bc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900136c0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900136c4:	ab06      	add	r3, sp, #24
900136c6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900136ca:	e893 0003 	ldmia.w	r3, {r0, r1}
900136ce:	e887 0003 	stmia.w	r7, {r0, r1}
900136d2:	4631      	mov	r1, r6
900136d4:	4638      	mov	r0, r7
900136d6:	f7fd fbbb 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900136da:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900136de:	2b00      	cmp	r3, #0
900136e0:	dd12      	ble.n	90013708 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900136e2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900136e6:	2b00      	cmp	r3, #0
900136e8:	dd0e      	ble.n	90013708 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900136ea:	6823      	ldr	r3, [r4, #0]
900136ec:	4639      	mov	r1, r7
900136ee:	4620      	mov	r0, r4
900136f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900136f2:	4798      	blx	r3
900136f4:	f7fd fe90 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
900136f8:	6803      	ldr	r3, [r0, #0]
900136fa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900136fc:	4639      	mov	r1, r7
900136fe:	f8d3 8020 	ldr.w	r8, [r3, #32]
90013702:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013706:	47c0      	blx	r8
90013708:	3501      	adds	r5, #1
9001370a:	2d04      	cmp	r5, #4
9001370c:	d1da      	bne.n	900136c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001370e:	e011      	b.n	90013734 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90013710:	6830      	ldr	r0, [r6, #0]
90013712:	ab06      	add	r3, sp, #24
90013714:	6871      	ldr	r1, [r6, #4]
90013716:	c303      	stmia	r3!, {r0, r1}
90013718:	6823      	ldr	r3, [r4, #0]
9001371a:	a906      	add	r1, sp, #24
9001371c:	4620      	mov	r0, r4
9001371e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013720:	4798      	blx	r3
90013722:	f7fd fe79 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90013726:	6803      	ldr	r3, [r0, #0]
90013728:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001372a:	a906      	add	r1, sp, #24
9001372c:	6a1d      	ldr	r5, [r3, #32]
9001372e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013732:	47a8      	blx	r5
90013734:	b00e      	add	sp, #56	; 0x38
90013736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001373a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001373a:	4770      	bx	lr

9001373c <_ZN8touchgfx14ButtonWithIconD1Ev>:
9001373c:	4770      	bx	lr

9001373e <_ZN8touchgfx14ButtonWithIconD0Ev>:
9001373e:	b510      	push	{r4, lr}
90013740:	4604      	mov	r4, r0
90013742:	213c      	movs	r1, #60	; 0x3c
90013744:	f013 feec 	bl	90027520 <_ZdlPvj>
90013748:	4620      	mov	r0, r4
9001374a:	bd10      	pop	{r4, pc}

9001374c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
9001374c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013750:	461c      	mov	r4, r3
90013752:	4606      	mov	r6, r0
90013754:	9f06      	ldr	r7, [sp, #24]
90013756:	f7ff fe2a 	bl	900133ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001375a:	8823      	ldrh	r3, [r4, #0]
9001375c:	f04f 0802 	mov.w	r8, #2
90013760:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90013764:	4638      	mov	r0, r7
90013766:	86b3      	strh	r3, [r6, #52]	; 0x34
90013768:	883b      	ldrh	r3, [r7, #0]
9001376a:	fb95 f5f8 	sdiv	r5, r5, r8
9001376e:	86f3      	strh	r3, [r6, #54]	; 0x36
90013770:	b2ad      	uxth	r5, r5
90013772:	f005 ff41 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013776:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001377a:	fb90 f0f8 	sdiv	r0, r0, r8
9001377e:	1a2d      	subs	r5, r5, r0
90013780:	4638      	mov	r0, r7
90013782:	fb94 f4f8 	sdiv	r4, r4, r8
90013786:	8735      	strh	r5, [r6, #56]	; 0x38
90013788:	b2a4      	uxth	r4, r4
9001378a:	f005 ff69 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001378e:	fb90 f0f8 	sdiv	r0, r0, r8
90013792:	1a24      	subs	r4, r4, r0
90013794:	8774      	strh	r4, [r6, #58]	; 0x3a
90013796:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001379c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
9001379c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900137a0:	4604      	mov	r4, r0
900137a2:	b08c      	sub	sp, #48	; 0x30
900137a4:	460d      	mov	r5, r1
900137a6:	f7ff fe45 	bl	90013434 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900137aa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900137ae:	2b00      	cmp	r3, #0
900137b0:	d05d      	beq.n	9001386e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
900137b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900137b4:	a805      	add	r0, sp, #20
900137b6:	f8ad 3014 	strh.w	r3, [sp, #20]
900137ba:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
900137be:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
900137c2:	f005 ff19 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900137c6:	4606      	mov	r6, r0
900137c8:	a805      	add	r0, sp, #20
900137ca:	f005 ff49 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
900137ce:	6869      	ldr	r1, [r5, #4]
900137d0:	f8ad 001e 	strh.w	r0, [sp, #30]
900137d4:	ab08      	add	r3, sp, #32
900137d6:	6828      	ldr	r0, [r5, #0]
900137d8:	ad08      	add	r5, sp, #32
900137da:	f8ad 8018 	strh.w	r8, [sp, #24]
900137de:	f8ad 701a 	strh.w	r7, [sp, #26]
900137e2:	f8ad 601c 	strh.w	r6, [sp, #28]
900137e6:	c303      	stmia	r3!, {r0, r1}
900137e8:	a906      	add	r1, sp, #24
900137ea:	4628      	mov	r0, r5
900137ec:	f7fd fb30 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900137f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900137f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
900137f8:	429a      	cmp	r2, r3
900137fa:	d035      	beq.n	90013868 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900137fc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90013800:	2b00      	cmp	r3, #0
90013802:	dd31      	ble.n	90013868 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90013804:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
90013808:	2b00      	cmp	r3, #0
9001380a:	dd2d      	ble.n	90013868 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001380c:	2300      	movs	r3, #0
9001380e:	a90a      	add	r1, sp, #40	; 0x28
90013810:	4620      	mov	r0, r4
90013812:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
90013816:	6823      	ldr	r3, [r4, #0]
90013818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001381a:	4798      	blx	r3
9001381c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90013820:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90013822:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90013826:	1a9b      	subs	r3, r3, r2
90013828:	f8ad 3020 	strh.w	r3, [sp, #32]
9001382c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
9001382e:	1ac9      	subs	r1, r1, r3
90013830:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90013834:	490f      	ldr	r1, [pc, #60]	; (90013874 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
90013836:	6809      	ldr	r1, [r1, #0]
90013838:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
9001383c:	b108      	cbz	r0, 90013842 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
9001383e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90013840:	b900      	cbnz	r0, 90013844 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90013842:	6888      	ldr	r0, [r1, #8]
90013844:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
90013848:	2601      	movs	r6, #1
9001384a:	440b      	add	r3, r1
9001384c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90013850:	440a      	add	r2, r1
90013852:	6801      	ldr	r1, [r0, #0]
90013854:	9602      	str	r6, [sp, #8]
90013856:	b21b      	sxth	r3, r3
90013858:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9001385c:	b212      	sxth	r2, r2
9001385e:	e9cd 5400 	strd	r5, r4, [sp]
90013862:	688c      	ldr	r4, [r1, #8]
90013864:	a905      	add	r1, sp, #20
90013866:	47a0      	blx	r4
90013868:	b00c      	add	sp, #48	; 0x30
9001386a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001386e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90013870:	e7a0      	b.n	900137b4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90013872:	bf00      	nop
90013874:	24039704 	.word	0x24039704

90013878 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90013878:	2101      	movs	r1, #1
9001387a:	2200      	movs	r2, #0
9001387c:	b510      	push	{r4, lr}
9001387e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013882:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90013886:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001388a:	4c0d      	ldr	r4, [pc, #52]	; (900138c0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
9001388c:	8082      	strh	r2, [r0, #4]
9001388e:	80c2      	strh	r2, [r0, #6]
90013890:	8102      	strh	r2, [r0, #8]
90013892:	8142      	strh	r2, [r0, #10]
90013894:	8182      	strh	r2, [r0, #12]
90013896:	81c2      	strh	r2, [r0, #14]
90013898:	8202      	strh	r2, [r0, #16]
9001389a:	8242      	strh	r2, [r0, #18]
9001389c:	61c2      	str	r2, [r0, #28]
9001389e:	8402      	strh	r2, [r0, #32]
900138a0:	8442      	strh	r2, [r0, #34]	; 0x22
900138a2:	6282      	str	r2, [r0, #40]	; 0x28
900138a4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900138a8:	85c1      	strh	r1, [r0, #46]	; 0x2e
900138aa:	8601      	strh	r1, [r0, #48]	; 0x30
900138ac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900138b0:	6004      	str	r4, [r0, #0]
900138b2:	8681      	strh	r1, [r0, #52]	; 0x34
900138b4:	86c1      	strh	r1, [r0, #54]	; 0x36
900138b6:	8702      	strh	r2, [r0, #56]	; 0x38
900138b8:	8742      	strh	r2, [r0, #58]	; 0x3a
900138ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
900138be:	bd10      	pop	{r4, pc}
900138c0:	9002b7a8 	.word	0x9002b7a8

900138c4 <_ZN8touchgfx5ImageD1Ev>:
900138c4:	4770      	bx	lr

900138c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900138c6:	b570      	push	{r4, r5, r6, lr}
900138c8:	880b      	ldrh	r3, [r1, #0]
900138ca:	460d      	mov	r5, r1
900138cc:	4604      	mov	r4, r0
900138ce:	84c3      	strh	r3, [r0, #38]	; 0x26
900138d0:	4608      	mov	r0, r1
900138d2:	f005 fe91 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900138d6:	4606      	mov	r6, r0
900138d8:	4628      	mov	r0, r5
900138da:	f005 fec1 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
900138de:	6823      	ldr	r3, [r4, #0]
900138e0:	4605      	mov	r5, r0
900138e2:	4631      	mov	r1, r6
900138e4:	4620      	mov	r0, r4
900138e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900138e8:	4798      	blx	r3
900138ea:	6823      	ldr	r3, [r4, #0]
900138ec:	4629      	mov	r1, r5
900138ee:	4620      	mov	r0, r4
900138f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900138f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900138f6:	4718      	bx	r3

900138f8 <_ZN8touchgfx5ImageD0Ev>:
900138f8:	b510      	push	{r4, lr}
900138fa:	4604      	mov	r4, r0
900138fc:	212c      	movs	r1, #44	; 0x2c
900138fe:	f013 fe0f 	bl	90027520 <_ZdlPvj>
90013902:	4620      	mov	r0, r4
90013904:	bd10      	pop	{r4, pc}

90013906 <_ZNK8touchgfx5Image12getSolidRectEv>:
90013906:	b510      	push	{r4, lr}
90013908:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001390c:	4604      	mov	r4, r0
9001390e:	2bff      	cmp	r3, #255	; 0xff
90013910:	d006      	beq.n	90013920 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90013912:	2300      	movs	r3, #0
90013914:	8003      	strh	r3, [r0, #0]
90013916:	8043      	strh	r3, [r0, #2]
90013918:	8083      	strh	r3, [r0, #4]
9001391a:	80c3      	strh	r3, [r0, #6]
9001391c:	4620      	mov	r0, r4
9001391e:	bd10      	pop	{r4, pc}
90013920:	3126      	adds	r1, #38	; 0x26
90013922:	f005 fed1 	bl	900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013926:	e7f9      	b.n	9001391c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90013928 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90013928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001392c:	4604      	mov	r4, r0
9001392e:	b088      	sub	sp, #32
90013930:	2500      	movs	r5, #0
90013932:	460f      	mov	r7, r1
90013934:	f854 3b26 	ldr.w	r3, [r4], #38
90013938:	a904      	add	r1, sp, #16
9001393a:	4606      	mov	r6, r0
9001393c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001393e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90013942:	4798      	blx	r3
90013944:	4620      	mov	r0, r4
90013946:	f005 fe57 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001394a:	4680      	mov	r8, r0
9001394c:	4620      	mov	r0, r4
9001394e:	f005 fe87 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013952:	9506      	str	r5, [sp, #24]
90013954:	ad06      	add	r5, sp, #24
90013956:	f8ad 001e 	strh.w	r0, [sp, #30]
9001395a:	4639      	mov	r1, r7
9001395c:	f8ad 801c 	strh.w	r8, [sp, #28]
90013960:	4628      	mov	r0, r5
90013962:	f7fd fa75 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90013966:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001396a:	2b00      	cmp	r3, #0
9001396c:	dd19      	ble.n	900139a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001396e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013972:	2b00      	cmp	r3, #0
90013974:	dd15      	ble.n	900139a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013976:	4b0c      	ldr	r3, [pc, #48]	; (900139a8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90013978:	681b      	ldr	r3, [r3, #0]
9001397a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001397e:	b10a      	cbz	r2, 90013984 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90013980:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013982:	b900      	cbnz	r0, 90013986 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90013984:	6898      	ldr	r0, [r3, #8]
90013986:	2701      	movs	r7, #1
90013988:	6801      	ldr	r1, [r0, #0]
9001398a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001398e:	9702      	str	r7, [sp, #8]
90013990:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90013994:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90013998:	e9cd 5600 	strd	r5, r6, [sp]
9001399c:	688d      	ldr	r5, [r1, #8]
9001399e:	4621      	mov	r1, r4
900139a0:	47a8      	blx	r5
900139a2:	b008      	add	sp, #32
900139a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900139a8:	24039704 	.word	0x24039704

900139ac <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900139ac:	4770      	bx	lr

900139ae <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900139ae:	b510      	push	{r4, lr}
900139b0:	4604      	mov	r4, r0
900139b2:	2148      	movs	r1, #72	; 0x48
900139b4:	f013 fdb4 	bl	90027520 <_ZdlPvj>
900139b8:	4620      	mov	r0, r4
900139ba:	bd10      	pop	{r4, pc}

900139bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900139bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900139c0:	b08d      	sub	sp, #52	; 0x34
900139c2:	4604      	mov	r4, r0
900139c4:	460f      	mov	r7, r1
900139c6:	f7ff fd35 	bl	90013434 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900139ca:	4a55      	ldr	r2, [pc, #340]	; (90013b20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900139cc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900139ce:	8812      	ldrh	r2, [r2, #0]
900139d0:	429a      	cmp	r2, r3
900139d2:	f240 8082 	bls.w	90013ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900139d6:	4d53      	ldr	r5, [pc, #332]	; (90013b24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
900139d8:	682a      	ldr	r2, [r5, #0]
900139da:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900139de:	4b52      	ldr	r3, [pc, #328]	; (90013b28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900139e0:	681b      	ldr	r3, [r3, #0]
900139e2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900139e6:	2200      	movs	r2, #0
900139e8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
900139ec:	e9cd 2203 	strd	r2, r2, [sp, #12]
900139f0:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
900139f4:	2a03      	cmp	r2, #3
900139f6:	d811      	bhi.n	90013a1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
900139f8:	e8df f002 	tbb	[pc, r2]
900139fc:	89727902 	.word	0x89727902
90013a00:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013a04:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013a08:	1ad2      	subs	r2, r2, r3
90013a0a:	2002      	movs	r0, #2
90013a0c:	f8ad 1010 	strh.w	r1, [sp, #16]
90013a10:	f8ad 3012 	strh.w	r3, [sp, #18]
90013a14:	fb92 f2f0 	sdiv	r2, r2, r0
90013a18:	f8ad 200e 	strh.w	r2, [sp, #14]
90013a1c:	f10d 080c 	add.w	r8, sp, #12
90013a20:	f10d 0914 	add.w	r9, sp, #20
90013a24:	e898 0003 	ldmia.w	r8, {r0, r1}
90013a28:	e889 0003 	stmia.w	r9, {r0, r1}
90013a2c:	4639      	mov	r1, r7
90013a2e:	4648      	mov	r0, r9
90013a30:	f7fd fa0e 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90013a34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013a38:	2b00      	cmp	r3, #0
90013a3a:	dd4e      	ble.n	90013ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013a3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013a40:	2b00      	cmp	r3, #0
90013a42:	dd4a      	ble.n	90013ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013a44:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90013a48:	4641      	mov	r1, r8
90013a4a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90013a4e:	4620      	mov	r0, r4
90013a50:	1a9b      	subs	r3, r3, r2
90013a52:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013a56:	f8ad 3014 	strh.w	r3, [sp, #20]
90013a5a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90013a5e:	1a9b      	subs	r3, r3, r2
90013a60:	f8ad 3016 	strh.w	r3, [sp, #22]
90013a64:	6823      	ldr	r3, [r4, #0]
90013a66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013a68:	4798      	blx	r3
90013a6a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90013a6e:	2b00      	cmp	r3, #0
90013a70:	d053      	beq.n	90013b1a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90013a72:	6c22      	ldr	r2, [r4, #64]	; 0x40
90013a74:	8f21      	ldrh	r1, [r4, #56]	; 0x38
90013a76:	682b      	ldr	r3, [r5, #0]
90013a78:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
90013a7c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013a80:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
90013a84:	785b      	ldrb	r3, [r3, #1]
90013a86:	9209      	str	r2, [sp, #36]	; 0x24
90013a88:	f3c3 0501 	ubfx	r5, r3, #0, #2
90013a8c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013a90:	9607      	str	r6, [sp, #28]
90013a92:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
90013a96:	2300      	movs	r3, #0
90013a98:	f88d 5020 	strb.w	r5, [sp, #32]
90013a9c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
90013aa0:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
90013aa4:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90013aa8:	4b20      	ldr	r3, [pc, #128]	; (90013b2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90013aaa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013aae:	681b      	ldr	r3, [r3, #0]
90013ab0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90013ab4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013ab8:	b10a      	cbz	r2, 90013abe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90013aba:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
90013abc:	b904      	cbnz	r4, 90013ac0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90013abe:	689c      	ldr	r4, [r3, #8]
90013ac0:	4b1b      	ldr	r3, [pc, #108]	; (90013b30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90013ac2:	6818      	ldr	r0, [r3, #0]
90013ac4:	f7f0 fbb2 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013ac8:	ab07      	add	r3, sp, #28
90013aca:	9001      	str	r0, [sp, #4]
90013acc:	4620      	mov	r0, r4
90013ace:	9300      	str	r3, [sp, #0]
90013ad0:	464b      	mov	r3, r9
90013ad2:	e898 0006 	ldmia.w	r8, {r1, r2}
90013ad6:	f7f0 fb59 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013ada:	b00d      	add	sp, #52	; 0x34
90013adc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013ae0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013ae4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013ae8:	1ad2      	subs	r2, r2, r3
90013aea:	3201      	adds	r2, #1
90013aec:	e78d      	b.n	90013a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90013aee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013af2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013af6:	1ad2      	subs	r2, r2, r3
90013af8:	3201      	adds	r2, #1
90013afa:	2002      	movs	r0, #2
90013afc:	f8ad 3010 	strh.w	r3, [sp, #16]
90013b00:	f8ad 1012 	strh.w	r1, [sp, #18]
90013b04:	fb92 f2f0 	sdiv	r2, r2, r0
90013b08:	f8ad 200c 	strh.w	r2, [sp, #12]
90013b0c:	e786      	b.n	90013a1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013b0e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013b12:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013b16:	1ad2      	subs	r2, r2, r3
90013b18:	e7ef      	b.n	90013afa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90013b1a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90013b1c:	e7aa      	b.n	90013a74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90013b1e:	bf00      	nop
90013b20:	24039760 	.word	0x24039760
90013b24:	2403975c 	.word	0x2403975c
90013b28:	24039764 	.word	0x24039764
90013b2c:	24039704 	.word	0x24039704
90013b30:	24039768 	.word	0x24039768

90013b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90013b34:	2101      	movs	r1, #1
90013b36:	2200      	movs	r2, #0
90013b38:	b510      	push	{r4, lr}
90013b3a:	4c13      	ldr	r4, [pc, #76]	; (90013b88 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90013b3c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013b40:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90013b44:	f64f 71ff 	movw	r1, #65535	; 0xffff
90013b48:	6004      	str	r4, [r0, #0]
90013b4a:	4c10      	ldr	r4, [pc, #64]	; (90013b8c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90013b4c:	8082      	strh	r2, [r0, #4]
90013b4e:	80c2      	strh	r2, [r0, #6]
90013b50:	8102      	strh	r2, [r0, #8]
90013b52:	8142      	strh	r2, [r0, #10]
90013b54:	8182      	strh	r2, [r0, #12]
90013b56:	81c2      	strh	r2, [r0, #14]
90013b58:	8202      	strh	r2, [r0, #16]
90013b5a:	8242      	strh	r2, [r0, #18]
90013b5c:	61c2      	str	r2, [r0, #28]
90013b5e:	8402      	strh	r2, [r0, #32]
90013b60:	8442      	strh	r2, [r0, #34]	; 0x22
90013b62:	6282      	str	r2, [r0, #40]	; 0x28
90013b64:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90013b68:	85c1      	strh	r1, [r0, #46]	; 0x2e
90013b6a:	8601      	strh	r1, [r0, #48]	; 0x30
90013b6c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90013b70:	6344      	str	r4, [r0, #52]	; 0x34
90013b72:	8701      	strh	r1, [r0, #56]	; 0x38
90013b74:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
90013b78:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
90013b7c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013b80:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90013b84:	bd10      	pop	{r4, pc}
90013b86:	bf00      	nop
90013b88:	9002b88c 	.word	0x9002b88c
90013b8c:	9002a0f0 	.word	0x9002a0f0

90013b90 <_ZN8touchgfx7OutlineD1Ev>:
90013b90:	4770      	bx	lr

90013b92 <_ZN8touchgfx7OutlineD0Ev>:
90013b92:	b510      	push	{r4, lr}
90013b94:	4604      	mov	r4, r0
90013b96:	2130      	movs	r1, #48	; 0x30
90013b98:	f013 fcc2 	bl	90027520 <_ZdlPvj>
90013b9c:	4620      	mov	r0, r4
90013b9e:	bd10      	pop	{r4, pc}

90013ba0 <_ZN8touchgfx7Outline5resetEv>:
90013ba0:	b510      	push	{r4, lr}
90013ba2:	4604      	mov	r4, r0
90013ba4:	f000 fe86 	bl	900148b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90013ba8:	60e0      	str	r0, [r4, #12]
90013baa:	f000 fe89 	bl	900148c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90013bae:	68e3      	ldr	r3, [r4, #12]
90013bb0:	08c0      	lsrs	r0, r0, #3
90013bb2:	2200      	movs	r2, #0
90013bb4:	f647 71ff 	movw	r1, #32767	; 0x7fff
90013bb8:	6123      	str	r3, [r4, #16]
90013bba:	3801      	subs	r0, #1
90013bbc:	60a2      	str	r2, [r4, #8]
90013bbe:	6060      	str	r0, [r4, #4]
90013bc0:	8019      	strh	r1, [r3, #0]
90013bc2:	8059      	strh	r1, [r3, #2]
90013bc4:	809a      	strh	r2, [r3, #4]
90013bc6:	80da      	strh	r2, [r3, #6]
90013bc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
90013bca:	f023 0301 	bic.w	r3, r3, #1
90013bce:	f043 0302 	orr.w	r3, r3, #2
90013bd2:	6263      	str	r3, [r4, #36]	; 0x24
90013bd4:	bd10      	pop	{r4, pc}
	...

90013bd8 <_ZN8touchgfx7OutlineC1Ev>:
90013bd8:	4b0a      	ldr	r3, [pc, #40]	; (90013c04 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90013bda:	b510      	push	{r4, lr}
90013bdc:	6003      	str	r3, [r0, #0]
90013bde:	2300      	movs	r3, #0
90013be0:	4604      	mov	r4, r0
90013be2:	6243      	str	r3, [r0, #36]	; 0x24
90013be4:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013be8:	e9c0 3303 	strd	r3, r3, [r0, #12]
90013bec:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013bf0:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013bf4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90013bf8:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90013bfc:	f7ff ffd0 	bl	90013ba0 <_ZN8touchgfx7Outline5resetEv>
90013c00:	4620      	mov	r0, r4
90013c02:	bd10      	pop	{r4, pc}
90013c04:	9002b900 	.word	0x9002b900

90013c08 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013c0c:	b093      	sub	sp, #76	; 0x4c
90013c0e:	1156      	asrs	r6, r2, #5
90013c10:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90013c12:	9305      	str	r3, [sp, #20]
90013c14:	1153      	asrs	r3, r2, #5
90013c16:	f004 051f 	and.w	r5, r4, #31
90013c1a:	9303      	str	r3, [sp, #12]
90013c1c:	1163      	asrs	r3, r4, #5
90013c1e:	9504      	str	r5, [sp, #16]
90013c20:	1165      	asrs	r5, r4, #5
90013c22:	9306      	str	r3, [sp, #24]
90013c24:	f002 031f 	and.w	r3, r2, #31
90013c28:	42ae      	cmp	r6, r5
90013c2a:	f040 80f4 	bne.w	90013e16 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90013c2e:	9c04      	ldr	r4, [sp, #16]
90013c30:	9a05      	ldr	r2, [sp, #20]
90013c32:	42a3      	cmp	r3, r4
90013c34:	ea4f 1e62 	mov.w	lr, r2, asr #5
90013c38:	6902      	ldr	r2, [r0, #16]
90013c3a:	d125      	bne.n	90013c88 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90013c3c:	f9b2 3000 	ldrsh.w	r3, [r2]
90013c40:	459e      	cmp	lr, r3
90013c42:	d103      	bne.n	90013c4c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90013c44:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013c48:	429e      	cmp	r6, r3
90013c4a:	d035      	beq.n	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013c4c:	88d1      	ldrh	r1, [r2, #6]
90013c4e:	8893      	ldrh	r3, [r2, #4]
90013c50:	430b      	orrs	r3, r1
90013c52:	d010      	beq.n	90013c76 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c54:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013c58:	2b00      	cmp	r3, #0
90013c5a:	db0c      	blt.n	90013c76 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c5c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90013c5e:	428b      	cmp	r3, r1
90013c60:	da09      	bge.n	90013c76 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013c62:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90013c66:	428b      	cmp	r3, r1
90013c68:	f103 0301 	add.w	r3, r3, #1
90013c6c:	bf38      	it	cc
90013c6e:	3208      	addcc	r2, #8
90013c70:	6083      	str	r3, [r0, #8]
90013c72:	bf38      	it	cc
90013c74:	6102      	strcc	r2, [r0, #16]
90013c76:	6903      	ldr	r3, [r0, #16]
90013c78:	9a03      	ldr	r2, [sp, #12]
90013c7a:	f8a3 e000 	strh.w	lr, [r3]
90013c7e:	805a      	strh	r2, [r3, #2]
90013c80:	2200      	movs	r2, #0
90013c82:	809a      	strh	r2, [r3, #4]
90013c84:	80da      	strh	r2, [r3, #6]
90013c86:	e017      	b.n	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013c88:	9c05      	ldr	r4, [sp, #20]
90013c8a:	114e      	asrs	r6, r1, #5
90013c8c:	f001 0c1f 	and.w	ip, r1, #31
90013c90:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90013c94:	f004 041f 	and.w	r4, r4, #31
90013c98:	4576      	cmp	r6, lr
90013c9a:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90013c9e:	9402      	str	r4, [sp, #8]
90013ca0:	9c04      	ldr	r4, [sp, #16]
90013ca2:	eba4 0403 	sub.w	r4, r4, r3
90013ca6:	d10a      	bne.n	90013cbe <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90013ca8:	9b02      	ldr	r3, [sp, #8]
90013caa:	44a0      	add	r8, r4
90013cac:	449c      	add	ip, r3
90013cae:	f8a2 8004 	strh.w	r8, [r2, #4]
90013cb2:	fb04 a40c 	mla	r4, r4, ip, sl
90013cb6:	80d4      	strh	r4, [r2, #6]
90013cb8:	b013      	add	sp, #76	; 0x4c
90013cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013cbe:	9d05      	ldr	r5, [sp, #20]
90013cc0:	1a69      	subs	r1, r5, r1
90013cc2:	bf51      	iteee	pl
90013cc4:	f1cc 0520 	rsbpl	r5, ip, #32
90013cc8:	fb04 f40c 	mulmi.w	r4, r4, ip
90013ccc:	4249      	negmi	r1, r1
90013cce:	2500      	movmi	r5, #0
90013cd0:	bf5d      	ittte	pl
90013cd2:	436c      	mulpl	r4, r5
90013cd4:	2520      	movpl	r5, #32
90013cd6:	f04f 0901 	movpl.w	r9, #1
90013cda:	f04f 39ff 	movmi.w	r9, #4294967295
90013cde:	9501      	str	r5, [sp, #4]
90013ce0:	9f01      	ldr	r7, [sp, #4]
90013ce2:	444e      	add	r6, r9
90013ce4:	fb94 f5f1 	sdiv	r5, r4, r1
90013ce8:	fb01 4415 	mls	r4, r1, r5, r4
90013cec:	44bc      	add	ip, r7
90013cee:	2c00      	cmp	r4, #0
90013cf0:	bfbc      	itt	lt
90013cf2:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013cf6:	1864      	addlt	r4, r4, r1
90013cf8:	44a8      	add	r8, r5
90013cfa:	fb05 ac0c 	mla	ip, r5, ip, sl
90013cfe:	f8a2 8004 	strh.w	r8, [r2, #4]
90013d02:	f8a2 c006 	strh.w	ip, [r2, #6]
90013d06:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d0a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013d0e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90013d12:	ea58 0202 	orrs.w	r2, r8, r2
90013d16:	d011      	beq.n	90013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d18:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013d1c:	f1b8 0f00 	cmp.w	r8, #0
90013d20:	db0c      	blt.n	90013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d22:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90013d24:	4590      	cmp	r8, r2
90013d26:	da09      	bge.n	90013d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013d28:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90013d2c:	4590      	cmp	r8, r2
90013d2e:	bf3c      	itt	cc
90013d30:	f10c 0208 	addcc.w	r2, ip, #8
90013d34:	6102      	strcc	r2, [r0, #16]
90013d36:	f108 0201 	add.w	r2, r8, #1
90013d3a:	6082      	str	r2, [r0, #8]
90013d3c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d40:	2700      	movs	r7, #0
90013d42:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90013d46:	45b6      	cmp	lr, r6
90013d48:	f8ac 6000 	strh.w	r6, [ip]
90013d4c:	442b      	add	r3, r5
90013d4e:	f8ac 2002 	strh.w	r2, [ip, #2]
90013d52:	f8ac 7004 	strh.w	r7, [ip, #4]
90013d56:	f8ac 7006 	strh.w	r7, [ip, #6]
90013d5a:	d04b      	beq.n	90013df4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90013d5c:	9f04      	ldr	r7, [sp, #16]
90013d5e:	1a64      	subs	r4, r4, r1
90013d60:	f04f 0a00 	mov.w	sl, #0
90013d64:	1aff      	subs	r7, r7, r3
90013d66:	443d      	add	r5, r7
90013d68:	016d      	lsls	r5, r5, #5
90013d6a:	fb95 f8f1 	sdiv	r8, r5, r1
90013d6e:	fb01 5518 	mls	r5, r1, r8, r5
90013d72:	2d00      	cmp	r5, #0
90013d74:	bfbc      	itt	lt
90013d76:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013d7a:	186d      	addlt	r5, r5, r1
90013d7c:	f108 0701 	add.w	r7, r8, #1
90013d80:	9703      	str	r7, [sp, #12]
90013d82:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013d86:	1964      	adds	r4, r4, r5
90013d88:	444e      	add	r6, r9
90013d8a:	bf54      	ite	pl
90013d8c:	9f03      	ldrpl	r7, [sp, #12]
90013d8e:	4647      	movmi	r7, r8
90013d90:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013d94:	bf58      	it	pl
90013d96:	1a64      	subpl	r4, r4, r1
90013d98:	443b      	add	r3, r7
90013d9a:	44bb      	add	fp, r7
90013d9c:	f8ac b004 	strh.w	fp, [ip, #4]
90013da0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013da4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013da8:	f8ac b006 	strh.w	fp, [ip, #6]
90013dac:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013db0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013db4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013db8:	ea5b 0707 	orrs.w	r7, fp, r7
90013dbc:	d011      	beq.n	90013de2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dbe:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013dc2:	f1bb 0f00 	cmp.w	fp, #0
90013dc6:	db0c      	blt.n	90013de2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dc8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90013dca:	45bb      	cmp	fp, r7
90013dcc:	da09      	bge.n	90013de2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013dce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013dd2:	45bb      	cmp	fp, r7
90013dd4:	bf3c      	itt	cc
90013dd6:	f10c 0708 	addcc.w	r7, ip, #8
90013dda:	6107      	strcc	r7, [r0, #16]
90013ddc:	f10b 0701 	add.w	r7, fp, #1
90013de0:	6087      	str	r7, [r0, #8]
90013de2:	6907      	ldr	r7, [r0, #16]
90013de4:	45b6      	cmp	lr, r6
90013de6:	803e      	strh	r6, [r7, #0]
90013de8:	807a      	strh	r2, [r7, #2]
90013dea:	f8a7 a004 	strh.w	sl, [r7, #4]
90013dee:	f8a7 a006 	strh.w	sl, [r7, #6]
90013df2:	d1c6      	bne.n	90013d82 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013df4:	9a04      	ldr	r2, [sp, #16]
90013df6:	1ad3      	subs	r3, r2, r3
90013df8:	6902      	ldr	r2, [r0, #16]
90013dfa:	8891      	ldrh	r1, [r2, #4]
90013dfc:	88d6      	ldrh	r6, [r2, #6]
90013dfe:	4419      	add	r1, r3
90013e00:	8091      	strh	r1, [r2, #4]
90013e02:	9902      	ldr	r1, [sp, #8]
90013e04:	f101 0c20 	add.w	ip, r1, #32
90013e08:	9901      	ldr	r1, [sp, #4]
90013e0a:	ebac 0c01 	sub.w	ip, ip, r1
90013e0e:	fb03 630c 	mla	r3, r3, ip, r6
90013e12:	80d3      	strh	r3, [r2, #6]
90013e14:	e750      	b.n	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013e16:	9d05      	ldr	r5, [sp, #20]
90013e18:	1aa2      	subs	r2, r4, r2
90013e1a:	eba5 0501 	sub.w	r5, r5, r1
90013e1e:	9202      	str	r2, [sp, #8]
90013e20:	9508      	str	r5, [sp, #32]
90013e22:	f140 8128 	bpl.w	90014076 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90013e26:	9a03      	ldr	r2, [sp, #12]
90013e28:	2a00      	cmp	r2, #0
90013e2a:	f6ff af45 	blt.w	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013e2e:	9a02      	ldr	r2, [sp, #8]
90013e30:	f04f 34ff 	mov.w	r4, #4294967295
90013e34:	4252      	negs	r2, r2
90013e36:	940b      	str	r4, [sp, #44]	; 0x2c
90013e38:	2400      	movs	r4, #0
90013e3a:	9202      	str	r2, [sp, #8]
90013e3c:	9a06      	ldr	r2, [sp, #24]
90013e3e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90013e42:	9206      	str	r2, [sp, #24]
90013e44:	462a      	mov	r2, r5
90013e46:	435a      	muls	r2, r3
90013e48:	9401      	str	r4, [sp, #4]
90013e4a:	9c02      	ldr	r4, [sp, #8]
90013e4c:	9d02      	ldr	r5, [sp, #8]
90013e4e:	fb92 f4f4 	sdiv	r4, r2, r4
90013e52:	fb05 2214 	mls	r2, r5, r4, r2
90013e56:	2a00      	cmp	r2, #0
90013e58:	9207      	str	r2, [sp, #28]
90013e5a:	bfbc      	itt	lt
90013e5c:	1952      	addlt	r2, r2, r5
90013e5e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013e62:	6905      	ldr	r5, [r0, #16]
90013e64:	bfb8      	it	lt
90013e66:	9207      	strlt	r2, [sp, #28]
90013e68:	eb04 0901 	add.w	r9, r4, r1
90013e6c:	9a01      	ldr	r2, [sp, #4]
90013e6e:	ea4f 1669 	mov.w	r6, r9, asr #5
90013e72:	429a      	cmp	r2, r3
90013e74:	f040 8111 	bne.w	9001409a <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90013e78:	f9b5 3000 	ldrsh.w	r3, [r5]
90013e7c:	429e      	cmp	r6, r3
90013e7e:	d104      	bne.n	90013e8a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90013e80:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90013e84:	9a03      	ldr	r2, [sp, #12]
90013e86:	429a      	cmp	r2, r3
90013e88:	d01b      	beq.n	90013ec2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013e8a:	88ea      	ldrh	r2, [r5, #6]
90013e8c:	88ab      	ldrh	r3, [r5, #4]
90013e8e:	4313      	orrs	r3, r2
90013e90:	d010      	beq.n	90013eb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013e92:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90013e96:	2a00      	cmp	r2, #0
90013e98:	db0c      	blt.n	90013eb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013e9a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013e9c:	429a      	cmp	r2, r3
90013e9e:	da09      	bge.n	90013eb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013ea0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90013ea4:	429a      	cmp	r2, r3
90013ea6:	f102 0201 	add.w	r2, r2, #1
90013eaa:	bf38      	it	cc
90013eac:	3508      	addcc	r5, #8
90013eae:	6082      	str	r2, [r0, #8]
90013eb0:	bf38      	it	cc
90013eb2:	6105      	strcc	r5, [r0, #16]
90013eb4:	6903      	ldr	r3, [r0, #16]
90013eb6:	9a03      	ldr	r2, [sp, #12]
90013eb8:	801e      	strh	r6, [r3, #0]
90013eba:	805a      	strh	r2, [r3, #2]
90013ebc:	2200      	movs	r2, #0
90013ebe:	809a      	strh	r2, [r3, #4]
90013ec0:	80da      	strh	r2, [r3, #6]
90013ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90013ec4:	9a03      	ldr	r2, [sp, #12]
90013ec6:	6901      	ldr	r1, [r0, #16]
90013ec8:	441a      	add	r2, r3
90013eca:	f9b1 3000 	ldrsh.w	r3, [r1]
90013ece:	42b3      	cmp	r3, r6
90013ed0:	d103      	bne.n	90013eda <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90013ed2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013ed6:	429a      	cmp	r2, r3
90013ed8:	d01a      	beq.n	90013f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90013eda:	88cc      	ldrh	r4, [r1, #6]
90013edc:	888b      	ldrh	r3, [r1, #4]
90013ede:	4323      	orrs	r3, r4
90013ee0:	d010      	beq.n	90013f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013ee2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013ee6:	2c00      	cmp	r4, #0
90013ee8:	db0c      	blt.n	90013f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013eea:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013eec:	429c      	cmp	r4, r3
90013eee:	da09      	bge.n	90013f04 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013ef0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013ef4:	429c      	cmp	r4, r3
90013ef6:	f104 0401 	add.w	r4, r4, #1
90013efa:	bf38      	it	cc
90013efc:	3108      	addcc	r1, #8
90013efe:	6084      	str	r4, [r0, #8]
90013f00:	bf38      	it	cc
90013f02:	6101      	strcc	r1, [r0, #16]
90013f04:	6903      	ldr	r3, [r0, #16]
90013f06:	2100      	movs	r1, #0
90013f08:	801e      	strh	r6, [r3, #0]
90013f0a:	805a      	strh	r2, [r3, #2]
90013f0c:	8099      	strh	r1, [r3, #4]
90013f0e:	80d9      	strh	r1, [r3, #6]
90013f10:	9b06      	ldr	r3, [sp, #24]
90013f12:	4293      	cmp	r3, r2
90013f14:	f000 8082 	beq.w	9001401c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90013f18:	9b08      	ldr	r3, [sp, #32]
90013f1a:	9902      	ldr	r1, [sp, #8]
90013f1c:	015b      	lsls	r3, r3, #5
90013f1e:	9c02      	ldr	r4, [sp, #8]
90013f20:	fb93 f1f1 	sdiv	r1, r3, r1
90013f24:	fb04 3311 	mls	r3, r4, r1, r3
90013f28:	9103      	str	r1, [sp, #12]
90013f2a:	2b00      	cmp	r3, #0
90013f2c:	9308      	str	r3, [sp, #32]
90013f2e:	da04      	bge.n	90013f3a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90013f30:	1e4b      	subs	r3, r1, #1
90013f32:	9303      	str	r3, [sp, #12]
90013f34:	9b08      	ldr	r3, [sp, #32]
90013f36:	4423      	add	r3, r4
90013f38:	9308      	str	r3, [sp, #32]
90013f3a:	9b07      	ldr	r3, [sp, #28]
90013f3c:	464f      	mov	r7, r9
90013f3e:	9902      	ldr	r1, [sp, #8]
90013f40:	2600      	movs	r6, #0
90013f42:	1a5b      	subs	r3, r3, r1
90013f44:	9307      	str	r3, [sp, #28]
90013f46:	9b01      	ldr	r3, [sp, #4]
90013f48:	f1c3 0320 	rsb	r3, r3, #32
90013f4c:	930e      	str	r3, [sp, #56]	; 0x38
90013f4e:	990e      	ldr	r1, [sp, #56]	; 0x38
90013f50:	9b01      	ldr	r3, [sp, #4]
90013f52:	1a5b      	subs	r3, r3, r1
90013f54:	930a      	str	r3, [sp, #40]	; 0x28
90013f56:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90013f5a:	185b      	adds	r3, r3, r1
90013f5c:	bf58      	it	pl
90013f5e:	9902      	ldrpl	r1, [sp, #8]
90013f60:	9307      	str	r3, [sp, #28]
90013f62:	bf57      	itett	pl
90013f64:	1a5b      	subpl	r3, r3, r1
90013f66:	9903      	ldrmi	r1, [sp, #12]
90013f68:	9307      	strpl	r3, [sp, #28]
90013f6a:	9b03      	ldrpl	r3, [sp, #12]
90013f6c:	bf58      	it	pl
90013f6e:	1c59      	addpl	r1, r3, #1
90013f70:	2a00      	cmp	r2, #0
90013f72:	4489      	add	r9, r1
90013f74:	ea4f 1a69 	mov.w	sl, r9, asr #5
90013f78:	db2e      	blt.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013f7a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013f7c:	4293      	cmp	r3, r2
90013f7e:	dd2b      	ble.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013f80:	9c01      	ldr	r4, [sp, #4]
90013f82:	6905      	ldr	r5, [r0, #16]
90013f84:	46a0      	mov	r8, r4
90013f86:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90013f88:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013f8c:	45a0      	cmp	r8, r4
90013f8e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90013f92:	f040 814c 	bne.w	9001422e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013f96:	f9b5 1000 	ldrsh.w	r1, [r5]
90013f9a:	4551      	cmp	r1, sl
90013f9c:	d103      	bne.n	90013fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90013f9e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013fa2:	4291      	cmp	r1, r2
90013fa4:	d018      	beq.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013fa6:	ea5c 010e 	orrs.w	r1, ip, lr
90013faa:	d00f      	beq.n	90013fcc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fac:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013fb0:	2900      	cmp	r1, #0
90013fb2:	db0b      	blt.n	90013fcc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fb4:	428b      	cmp	r3, r1
90013fb6:	dd09      	ble.n	90013fcc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013fb8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013fbc:	4299      	cmp	r1, r3
90013fbe:	f101 0101 	add.w	r1, r1, #1
90013fc2:	bf38      	it	cc
90013fc4:	3508      	addcc	r5, #8
90013fc6:	6081      	str	r1, [r0, #8]
90013fc8:	bf38      	it	cc
90013fca:	6105      	strcc	r5, [r0, #16]
90013fcc:	6903      	ldr	r3, [r0, #16]
90013fce:	f8a3 a000 	strh.w	sl, [r3]
90013fd2:	805a      	strh	r2, [r3, #2]
90013fd4:	809e      	strh	r6, [r3, #4]
90013fd6:	80de      	strh	r6, [r3, #6]
90013fd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90013fda:	6901      	ldr	r1, [r0, #16]
90013fdc:	441a      	add	r2, r3
90013fde:	88cc      	ldrh	r4, [r1, #6]
90013fe0:	888b      	ldrh	r3, [r1, #4]
90013fe2:	4323      	orrs	r3, r4
90013fe4:	d010      	beq.n	90014008 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013fe6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013fea:	2c00      	cmp	r4, #0
90013fec:	db0c      	blt.n	90014008 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013fee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90013ff0:	429c      	cmp	r4, r3
90013ff2:	da09      	bge.n	90014008 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013ff4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013ff8:	429c      	cmp	r4, r3
90013ffa:	f104 0401 	add.w	r4, r4, #1
90013ffe:	bf38      	it	cc
90014000:	3108      	addcc	r1, #8
90014002:	6084      	str	r4, [r0, #8]
90014004:	bf38      	it	cc
90014006:	6101      	strcc	r1, [r0, #16]
90014008:	6903      	ldr	r3, [r0, #16]
9001400a:	464f      	mov	r7, r9
9001400c:	f8a3 a000 	strh.w	sl, [r3]
90014010:	805a      	strh	r2, [r3, #2]
90014012:	809e      	strh	r6, [r3, #4]
90014014:	80de      	strh	r6, [r3, #6]
90014016:	9b06      	ldr	r3, [sp, #24]
90014018:	4293      	cmp	r3, r2
9001401a:	d19c      	bne.n	90013f56 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
9001401c:	9b01      	ldr	r3, [sp, #4]
9001401e:	6907      	ldr	r7, [r0, #16]
90014020:	f1c3 0620 	rsb	r6, r3, #32
90014024:	9b05      	ldr	r3, [sp, #20]
90014026:	ea4f 1e63 	mov.w	lr, r3, asr #5
9001402a:	9b04      	ldr	r3, [sp, #16]
9001402c:	429e      	cmp	r6, r3
9001402e:	f040 81c7 	bne.w	900143c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014032:	f9b7 3000 	ldrsh.w	r3, [r7]
90014036:	459e      	cmp	lr, r3
90014038:	d104      	bne.n	90014044 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
9001403a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001403e:	429a      	cmp	r2, r3
90014040:	f43f ae3a 	beq.w	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014044:	88f9      	ldrh	r1, [r7, #6]
90014046:	88bb      	ldrh	r3, [r7, #4]
90014048:	430b      	orrs	r3, r1
9001404a:	d010      	beq.n	9001406e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001404c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014050:	2b00      	cmp	r3, #0
90014052:	db0c      	blt.n	9001406e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014054:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90014056:	428b      	cmp	r3, r1
90014058:	da09      	bge.n	9001406e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001405a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001405e:	428b      	cmp	r3, r1
90014060:	f103 0301 	add.w	r3, r3, #1
90014064:	bf38      	it	cc
90014066:	3708      	addcc	r7, #8
90014068:	6083      	str	r3, [r0, #8]
9001406a:	bf38      	it	cc
9001406c:	6107      	strcc	r7, [r0, #16]
9001406e:	6903      	ldr	r3, [r0, #16]
90014070:	f8a3 e000 	strh.w	lr, [r3]
90014074:	e603      	b.n	90013c7e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014076:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014078:	9c03      	ldr	r4, [sp, #12]
9001407a:	42a2      	cmp	r2, r4
9001407c:	f6ff ae1c 	blt.w	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014080:	9c06      	ldr	r4, [sp, #24]
90014082:	42a2      	cmp	r2, r4
90014084:	9c08      	ldr	r4, [sp, #32]
90014086:	bfbc      	itt	lt
90014088:	3201      	addlt	r2, #1
9001408a:	9206      	strlt	r2, [sp, #24]
9001408c:	f1c3 0220 	rsb	r2, r3, #32
90014090:	4362      	muls	r2, r4
90014092:	2401      	movs	r4, #1
90014094:	940b      	str	r4, [sp, #44]	; 0x2c
90014096:	2420      	movs	r4, #32
90014098:	e6d6      	b.n	90013e48 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
9001409a:	ea4f 1861 	mov.w	r8, r1, asr #5
9001409e:	f009 021f 	and.w	r2, r9, #31
900140a2:	f001 011f 	and.w	r1, r1, #31
900140a6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900140aa:	920c      	str	r2, [sp, #48]	; 0x30
900140ac:	45b0      	cmp	r8, r6
900140ae:	9a01      	ldr	r2, [sp, #4]
900140b0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900140b4:	eba2 0203 	sub.w	r2, r2, r3
900140b8:	d108      	bne.n	900140cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900140ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900140bc:	4496      	add	lr, r2
900140be:	4419      	add	r1, r3
900140c0:	f8a5 e004 	strh.w	lr, [r5, #4]
900140c4:	fb02 a101 	mla	r1, r2, r1, sl
900140c8:	80e9      	strh	r1, [r5, #6]
900140ca:	e6fa      	b.n	90013ec2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900140cc:	2c00      	cmp	r4, #0
900140ce:	f2c0 80a7 	blt.w	90014220 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
900140d2:	2701      	movs	r7, #1
900140d4:	f1c1 0c20 	rsb	ip, r1, #32
900140d8:	970a      	str	r7, [sp, #40]	; 0x28
900140da:	2720      	movs	r7, #32
900140dc:	fb02 f20c 	mul.w	r2, r2, ip
900140e0:	9709      	str	r7, [sp, #36]	; 0x24
900140e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
900140e4:	fb92 fcf4 	sdiv	ip, r2, r4
900140e8:	fb04 221c 	mls	r2, r4, ip, r2
900140ec:	4439      	add	r1, r7
900140ee:	2a00      	cmp	r2, #0
900140f0:	bfbc      	itt	lt
900140f2:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900140f6:	1912      	addlt	r2, r2, r4
900140f8:	fb0c a101 	mla	r1, ip, r1, sl
900140fc:	44e6      	add	lr, ip
900140fe:	80e9      	strh	r1, [r5, #6]
90014100:	990a      	ldr	r1, [sp, #40]	; 0x28
90014102:	f8a5 e004 	strh.w	lr, [r5, #4]
90014106:	eb08 0501 	add.w	r5, r8, r1
9001410a:	6901      	ldr	r1, [r0, #16]
9001410c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014110:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014114:	ea58 070e 	orrs.w	r7, r8, lr
90014118:	d010      	beq.n	9001413c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001411a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001411e:	f1be 0f00 	cmp.w	lr, #0
90014122:	db0b      	blt.n	9001413c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014124:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014126:	45be      	cmp	lr, r7
90014128:	da08      	bge.n	9001413c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001412a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001412e:	45be      	cmp	lr, r7
90014130:	bf3c      	itt	cc
90014132:	3108      	addcc	r1, #8
90014134:	6101      	strcc	r1, [r0, #16]
90014136:	f10e 0101 	add.w	r1, lr, #1
9001413a:	6081      	str	r1, [r0, #8]
9001413c:	6901      	ldr	r1, [r0, #16]
9001413e:	f04f 0e00 	mov.w	lr, #0
90014142:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014146:	42ae      	cmp	r6, r5
90014148:	800d      	strh	r5, [r1, #0]
9001414a:	4463      	add	r3, ip
9001414c:	f8a1 8002 	strh.w	r8, [r1, #2]
90014150:	f8a1 e004 	strh.w	lr, [r1, #4]
90014154:	f8a1 e006 	strh.w	lr, [r1, #6]
90014158:	d053      	beq.n	90014202 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001415a:	9901      	ldr	r1, [sp, #4]
9001415c:	1b12      	subs	r2, r2, r4
9001415e:	1ac9      	subs	r1, r1, r3
90014160:	4461      	add	r1, ip
90014162:	0149      	lsls	r1, r1, #5
90014164:	fb91 fef4 	sdiv	lr, r1, r4
90014168:	fb04 111e 	mls	r1, r4, lr, r1
9001416c:	2900      	cmp	r1, #0
9001416e:	bfbc      	itt	lt
90014170:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014174:	1909      	addlt	r1, r1, r4
90014176:	f10e 0701 	add.w	r7, lr, #1
9001417a:	970d      	str	r7, [sp, #52]	; 0x34
9001417c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014180:	1852      	adds	r2, r2, r1
90014182:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90014184:	bf54      	ite	pl
90014186:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
9001418a:	46f4      	movmi	ip, lr
9001418c:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014190:	bf58      	it	pl
90014192:	1b12      	subpl	r2, r2, r4
90014194:	4463      	add	r3, ip
90014196:	443d      	add	r5, r7
90014198:	44e3      	add	fp, ip
9001419a:	f8aa b004 	strh.w	fp, [sl, #4]
9001419e:	f8ba b006 	ldrh.w	fp, [sl, #6]
900141a2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900141a6:	f8aa b006 	strh.w	fp, [sl, #6]
900141aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900141ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
900141b2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900141b6:	ea5b 070a 	orrs.w	r7, fp, sl
900141ba:	d014      	beq.n	900141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141bc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900141c0:	f1ba 0f00 	cmp.w	sl, #0
900141c4:	db0f      	blt.n	900141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141c6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900141c8:	45ba      	cmp	sl, r7
900141ca:	da0c      	bge.n	900141e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900141cc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
900141d0:	45ba      	cmp	sl, r7
900141d2:	f10a 0a01 	add.w	sl, sl, #1
900141d6:	bf38      	it	cc
900141d8:	f10c 0c08 	addcc.w	ip, ip, #8
900141dc:	f8c0 a008 	str.w	sl, [r0, #8]
900141e0:	bf38      	it	cc
900141e2:	f8c0 c010 	strcc.w	ip, [r0, #16]
900141e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900141ea:	f04f 0700 	mov.w	r7, #0
900141ee:	42ae      	cmp	r6, r5
900141f0:	f8ac 5000 	strh.w	r5, [ip]
900141f4:	f8ac 8002 	strh.w	r8, [ip, #2]
900141f8:	f8ac 7004 	strh.w	r7, [ip, #4]
900141fc:	f8ac 7006 	strh.w	r7, [ip, #6]
90014200:	d1bc      	bne.n	9001417c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014202:	6904      	ldr	r4, [r0, #16]
90014204:	9a01      	ldr	r2, [sp, #4]
90014206:	990c      	ldr	r1, [sp, #48]	; 0x30
90014208:	1ad3      	subs	r3, r2, r3
9001420a:	88a2      	ldrh	r2, [r4, #4]
9001420c:	3120      	adds	r1, #32
9001420e:	441a      	add	r2, r3
90014210:	80a2      	strh	r2, [r4, #4]
90014212:	9a09      	ldr	r2, [sp, #36]	; 0x24
90014214:	1a89      	subs	r1, r1, r2
90014216:	88e2      	ldrh	r2, [r4, #6]
90014218:	fb03 2301 	mla	r3, r3, r1, r2
9001421c:	80e3      	strh	r3, [r4, #6]
9001421e:	e650      	b.n	90013ec2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014220:	f04f 37ff 	mov.w	r7, #4294967295
90014224:	434a      	muls	r2, r1
90014226:	4264      	negs	r4, r4
90014228:	970a      	str	r7, [sp, #40]	; 0x28
9001422a:	2700      	movs	r7, #0
9001422c:	e758      	b.n	900140e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001422e:	ea4f 1867 	mov.w	r8, r7, asr #5
90014232:	f009 031f 	and.w	r3, r9, #31
90014236:	f007 071f 	and.w	r7, r7, #31
9001423a:	fa1f fc8c 	uxth.w	ip, ip
9001423e:	45d0      	cmp	r8, sl
90014240:	930f      	str	r3, [sp, #60]	; 0x3c
90014242:	fa1f fe8e 	uxth.w	lr, lr
90014246:	d10a      	bne.n	9001425e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001424a:	449c      	add	ip, r3
9001424c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001424e:	441f      	add	r7, r3
90014250:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014252:	f8a5 c004 	strh.w	ip, [r5, #4]
90014256:	fb03 e707 	mla	r7, r3, r7, lr
9001425a:	80ef      	strh	r7, [r5, #6]
9001425c:	e6bc      	b.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001425e:	2900      	cmp	r1, #0
90014260:	f2c0 80a6 	blt.w	900143b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014264:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90014266:	f1c7 0320 	rsb	r3, r7, #32
9001426a:	4363      	muls	r3, r4
9001426c:	2401      	movs	r4, #1
9001426e:	940d      	str	r4, [sp, #52]	; 0x34
90014270:	2420      	movs	r4, #32
90014272:	940c      	str	r4, [sp, #48]	; 0x30
90014274:	fb93 f4f1 	sdiv	r4, r3, r1
90014278:	fb01 3b14 	mls	fp, r1, r4, r3
9001427c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001427e:	f1bb 0f00 	cmp.w	fp, #0
90014282:	441f      	add	r7, r3
90014284:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014286:	bfbc      	itt	lt
90014288:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001428c:	448b      	addlt	fp, r1
9001428e:	fb04 e707 	mla	r7, r4, r7, lr
90014292:	44a4      	add	ip, r4
90014294:	80ef      	strh	r7, [r5, #6]
90014296:	f8a5 c004 	strh.w	ip, [r5, #4]
9001429a:	eb08 0503 	add.w	r5, r8, r3
9001429e:	f8d0 c010 	ldr.w	ip, [r0, #16]
900142a2:	f8bc e006 	ldrh.w	lr, [ip, #6]
900142a6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900142aa:	ea5e 0307 	orrs.w	r3, lr, r7
900142ae:	d011      	beq.n	900142d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142b0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900142b4:	f1be 0f00 	cmp.w	lr, #0
900142b8:	db0c      	blt.n	900142d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142ba:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900142bc:	45be      	cmp	lr, r7
900142be:	da09      	bge.n	900142d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900142c0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900142c4:	45be      	cmp	lr, r7
900142c6:	bf3c      	itt	cc
900142c8:	f10c 0708 	addcc.w	r7, ip, #8
900142cc:	6107      	strcc	r7, [r0, #16]
900142ce:	f10e 0701 	add.w	r7, lr, #1
900142d2:	6087      	str	r7, [r0, #8]
900142d4:	6907      	ldr	r7, [r0, #16]
900142d6:	b213      	sxth	r3, r2
900142d8:	4555      	cmp	r5, sl
900142da:	9310      	str	r3, [sp, #64]	; 0x40
900142dc:	807b      	strh	r3, [r7, #2]
900142de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900142e0:	803d      	strh	r5, [r7, #0]
900142e2:	80be      	strh	r6, [r7, #4]
900142e4:	eb04 0c03 	add.w	ip, r4, r3
900142e8:	80fe      	strh	r6, [r7, #6]
900142ea:	d050      	beq.n	9001438e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900142ec:	9b01      	ldr	r3, [sp, #4]
900142ee:	eba3 070c 	sub.w	r7, r3, ip
900142f2:	ebab 0301 	sub.w	r3, fp, r1
900142f6:	443c      	add	r4, r7
900142f8:	9309      	str	r3, [sp, #36]	; 0x24
900142fa:	0164      	lsls	r4, r4, #5
900142fc:	fb94 f8f1 	sdiv	r8, r4, r1
90014300:	fb01 4418 	mls	r4, r1, r8, r4
90014304:	2c00      	cmp	r4, #0
90014306:	bfbc      	itt	lt
90014308:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001430c:	1864      	addlt	r4, r4, r1
9001430e:	f108 0701 	add.w	r7, r8, #1
90014312:	9711      	str	r7, [sp, #68]	; 0x44
90014314:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014316:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001431a:	191b      	adds	r3, r3, r4
9001431c:	f8be b004 	ldrh.w	fp, [lr, #4]
90014320:	bf54      	ite	pl
90014322:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90014324:	4647      	movmi	r7, r8
90014326:	9309      	str	r3, [sp, #36]	; 0x24
90014328:	bf58      	it	pl
9001432a:	1a5b      	subpl	r3, r3, r1
9001432c:	44bb      	add	fp, r7
9001432e:	44bc      	add	ip, r7
90014330:	bf58      	it	pl
90014332:	9309      	strpl	r3, [sp, #36]	; 0x24
90014334:	f8ae b004 	strh.w	fp, [lr, #4]
90014338:	f8be b006 	ldrh.w	fp, [lr, #6]
9001433c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014340:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90014342:	f8ae b006 	strh.w	fp, [lr, #6]
90014346:	443d      	add	r5, r7
90014348:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001434c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014350:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014354:	ea5b 0307 	orrs.w	r3, fp, r7
90014358:	d011      	beq.n	9001437e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001435a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001435e:	f1bb 0f00 	cmp.w	fp, #0
90014362:	db0c      	blt.n	9001437e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014364:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014366:	45bb      	cmp	fp, r7
90014368:	da09      	bge.n	9001437e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001436a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001436e:	45bb      	cmp	fp, r7
90014370:	bf3c      	itt	cc
90014372:	f10e 0708 	addcc.w	r7, lr, #8
90014376:	6107      	strcc	r7, [r0, #16]
90014378:	f10b 0701 	add.w	r7, fp, #1
9001437c:	6087      	str	r7, [r0, #8]
9001437e:	6907      	ldr	r7, [r0, #16]
90014380:	4555      	cmp	r5, sl
90014382:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014384:	803d      	strh	r5, [r7, #0]
90014386:	807b      	strh	r3, [r7, #2]
90014388:	80be      	strh	r6, [r7, #4]
9001438a:	80fe      	strh	r6, [r7, #6]
9001438c:	d1c2      	bne.n	90014314 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001438e:	9b01      	ldr	r3, [sp, #4]
90014390:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90014392:	eba3 0c0c 	sub.w	ip, r3, ip
90014396:	6903      	ldr	r3, [r0, #16]
90014398:	3720      	adds	r7, #32
9001439a:	8899      	ldrh	r1, [r3, #4]
9001439c:	4461      	add	r1, ip
9001439e:	8099      	strh	r1, [r3, #4]
900143a0:	990c      	ldr	r1, [sp, #48]	; 0x30
900143a2:	1a7f      	subs	r7, r7, r1
900143a4:	88d9      	ldrh	r1, [r3, #6]
900143a6:	fb0c 1c07 	mla	ip, ip, r7, r1
900143aa:	f8a3 c006 	strh.w	ip, [r3, #6]
900143ae:	e613      	b.n	90013fd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900143b0:	f04f 34ff 	mov.w	r4, #4294967295
900143b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900143b6:	4249      	negs	r1, r1
900143b8:	940d      	str	r4, [sp, #52]	; 0x34
900143ba:	2400      	movs	r4, #0
900143bc:	437b      	muls	r3, r7
900143be:	e758      	b.n	90014272 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900143c0:	9905      	ldr	r1, [sp, #20]
900143c2:	ea4f 1b69 	mov.w	fp, r9, asr #5
900143c6:	f009 0c1f 	and.w	ip, r9, #31
900143ca:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900143ce:	f001 011f 	and.w	r1, r1, #31
900143d2:	45f3      	cmp	fp, lr
900143d4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900143d8:	9102      	str	r1, [sp, #8]
900143da:	9904      	ldr	r1, [sp, #16]
900143dc:	eba1 0406 	sub.w	r4, r1, r6
900143e0:	d108      	bne.n	900143f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900143e2:	9b02      	ldr	r3, [sp, #8]
900143e4:	44a0      	add	r8, r4
900143e6:	449c      	add	ip, r3
900143e8:	f8a7 8004 	strh.w	r8, [r7, #4]
900143ec:	fb04 a40c 	mla	r4, r4, ip, sl
900143f0:	80fc      	strh	r4, [r7, #6]
900143f2:	e461      	b.n	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900143f4:	9905      	ldr	r1, [sp, #20]
900143f6:	ebb1 0109 	subs.w	r1, r1, r9
900143fa:	bf51      	iteee	pl
900143fc:	f1cc 0520 	rsbpl	r5, ip, #32
90014400:	fb04 f40c 	mulmi.w	r4, r4, ip
90014404:	4249      	negmi	r1, r1
90014406:	2500      	movmi	r5, #0
90014408:	bf5d      	ittte	pl
9001440a:	436c      	mulpl	r4, r5
9001440c:	2520      	movpl	r5, #32
9001440e:	f04f 0901 	movpl.w	r9, #1
90014412:	f04f 39ff 	movmi.w	r9, #4294967295
90014416:	9501      	str	r5, [sp, #4]
90014418:	9b01      	ldr	r3, [sp, #4]
9001441a:	fb94 f5f1 	sdiv	r5, r4, r1
9001441e:	fb01 4415 	mls	r4, r1, r5, r4
90014422:	449c      	add	ip, r3
90014424:	eb0b 0309 	add.w	r3, fp, r9
90014428:	2c00      	cmp	r4, #0
9001442a:	bfbc      	itt	lt
9001442c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014430:	1864      	addlt	r4, r4, r1
90014432:	44a8      	add	r8, r5
90014434:	fb05 ac0c 	mla	ip, r5, ip, sl
90014438:	f8a7 8004 	strh.w	r8, [r7, #4]
9001443c:	f8a7 c006 	strh.w	ip, [r7, #6]
90014440:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014444:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014448:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001444c:	ea58 0707 	orrs.w	r7, r8, r7
90014450:	d011      	beq.n	90014476 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014452:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014456:	f1b8 0f00 	cmp.w	r8, #0
9001445a:	db0c      	blt.n	90014476 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001445c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001445e:	45b8      	cmp	r8, r7
90014460:	da09      	bge.n	90014476 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014462:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014466:	45b8      	cmp	r8, r7
90014468:	bf3c      	itt	cc
9001446a:	f10c 0708 	addcc.w	r7, ip, #8
9001446e:	6107      	strcc	r7, [r0, #16]
90014470:	f108 0701 	add.w	r7, r8, #1
90014474:	6087      	str	r7, [r0, #8]
90014476:	6907      	ldr	r7, [r0, #16]
90014478:	f04f 0c00 	mov.w	ip, #0
9001447c:	b212      	sxth	r2, r2
9001447e:	459e      	cmp	lr, r3
90014480:	803b      	strh	r3, [r7, #0]
90014482:	442e      	add	r6, r5
90014484:	807a      	strh	r2, [r7, #2]
90014486:	f8a7 c004 	strh.w	ip, [r7, #4]
9001448a:	f8a7 c006 	strh.w	ip, [r7, #6]
9001448e:	d04b      	beq.n	90014528 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90014490:	9f04      	ldr	r7, [sp, #16]
90014492:	1a64      	subs	r4, r4, r1
90014494:	f04f 0a00 	mov.w	sl, #0
90014498:	1bbf      	subs	r7, r7, r6
9001449a:	443d      	add	r5, r7
9001449c:	016d      	lsls	r5, r5, #5
9001449e:	fb95 f8f1 	sdiv	r8, r5, r1
900144a2:	fb01 5518 	mls	r5, r1, r8, r5
900144a6:	4565      	cmp	r5, ip
900144a8:	bfbc      	itt	lt
900144aa:	f108 38ff 	addlt.w	r8, r8, #4294967295
900144ae:	186d      	addlt	r5, r5, r1
900144b0:	f108 0701 	add.w	r7, r8, #1
900144b4:	9703      	str	r7, [sp, #12]
900144b6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900144ba:	1964      	adds	r4, r4, r5
900144bc:	444b      	add	r3, r9
900144be:	bf54      	ite	pl
900144c0:	9f03      	ldrpl	r7, [sp, #12]
900144c2:	4647      	movmi	r7, r8
900144c4:	f8bc b004 	ldrh.w	fp, [ip, #4]
900144c8:	bf58      	it	pl
900144ca:	1a64      	subpl	r4, r4, r1
900144cc:	443e      	add	r6, r7
900144ce:	44bb      	add	fp, r7
900144d0:	f8ac b004 	strh.w	fp, [ip, #4]
900144d4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900144d8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900144dc:	f8ac b006 	strh.w	fp, [ip, #6]
900144e0:	f8d0 c010 	ldr.w	ip, [r0, #16]
900144e4:	f8bc b006 	ldrh.w	fp, [ip, #6]
900144e8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900144ec:	ea5b 0707 	orrs.w	r7, fp, r7
900144f0:	d011      	beq.n	90014516 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900144f2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900144f6:	f1bb 0f00 	cmp.w	fp, #0
900144fa:	db0c      	blt.n	90014516 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900144fc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900144fe:	45bb      	cmp	fp, r7
90014500:	da09      	bge.n	90014516 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014502:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014506:	45bb      	cmp	fp, r7
90014508:	bf3c      	itt	cc
9001450a:	f10c 0708 	addcc.w	r7, ip, #8
9001450e:	6107      	strcc	r7, [r0, #16]
90014510:	f10b 0701 	add.w	r7, fp, #1
90014514:	6087      	str	r7, [r0, #8]
90014516:	6907      	ldr	r7, [r0, #16]
90014518:	459e      	cmp	lr, r3
9001451a:	803b      	strh	r3, [r7, #0]
9001451c:	807a      	strh	r2, [r7, #2]
9001451e:	f8a7 a004 	strh.w	sl, [r7, #4]
90014522:	f8a7 a006 	strh.w	sl, [r7, #6]
90014526:	d1c6      	bne.n	900144b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90014528:	9b04      	ldr	r3, [sp, #16]
9001452a:	1b9e      	subs	r6, r3, r6
9001452c:	6903      	ldr	r3, [r0, #16]
9001452e:	889a      	ldrh	r2, [r3, #4]
90014530:	4432      	add	r2, r6
90014532:	809a      	strh	r2, [r3, #4]
90014534:	9a02      	ldr	r2, [sp, #8]
90014536:	f102 0c20 	add.w	ip, r2, #32
9001453a:	9a01      	ldr	r2, [sp, #4]
9001453c:	ebac 0c02 	sub.w	ip, ip, r2
90014540:	88da      	ldrh	r2, [r3, #6]
90014542:	fb06 260c 	mla	r6, r6, ip, r2
90014546:	80de      	strh	r6, [r3, #6]
90014548:	f7ff bbb6 	b.w	90013cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

9001454c <_ZN8touchgfx7Outline6lineToEii>:
9001454c:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001454e:	079b      	lsls	r3, r3, #30
90014550:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014552:	460e      	mov	r6, r1
90014554:	4615      	mov	r5, r2
90014556:	d511      	bpl.n	9001457c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014558:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
9001455c:	ea86 0701 	eor.w	r7, r6, r1
90014560:	ea85 0302 	eor.w	r3, r5, r2
90014564:	433b      	orrs	r3, r7
90014566:	d009      	beq.n	9001457c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014568:	4633      	mov	r3, r6
9001456a:	9500      	str	r5, [sp, #0]
9001456c:	f7ff fb4c 	bl	90013c08 <_ZN8touchgfx7Outline10renderLineEiiii>
90014570:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014572:	f043 0301 	orr.w	r3, r3, #1
90014576:	e9c0 6505 	strd	r6, r5, [r0, #20]
9001457a:	6243      	str	r3, [r0, #36]	; 0x24
9001457c:	b003      	add	sp, #12
9001457e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014580 <_ZN8touchgfx7Outline6moveToEii>:
90014580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014582:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014584:	4615      	mov	r5, r2
90014586:	4604      	mov	r4, r0
90014588:	460e      	mov	r6, r1
9001458a:	079a      	lsls	r2, r3, #30
9001458c:	d401      	bmi.n	90014592 <_ZN8touchgfx7Outline6moveToEii+0x12>
9001458e:	f7ff fb07 	bl	90013ba0 <_ZN8touchgfx7Outline5resetEv>
90014592:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014594:	07db      	lsls	r3, r3, #31
90014596:	d504      	bpl.n	900145a2 <_ZN8touchgfx7Outline6moveToEii+0x22>
90014598:	4620      	mov	r0, r4
9001459a:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001459e:	f7ff ffd5 	bl	9001454c <_ZN8touchgfx7Outline6lineToEii>
900145a2:	6923      	ldr	r3, [r4, #16]
900145a4:	1170      	asrs	r0, r6, #5
900145a6:	1169      	asrs	r1, r5, #5
900145a8:	f9b3 2000 	ldrsh.w	r2, [r3]
900145ac:	4290      	cmp	r0, r2
900145ae:	d103      	bne.n	900145b8 <_ZN8touchgfx7Outline6moveToEii+0x38>
900145b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900145b4:	4291      	cmp	r1, r2
900145b6:	d01a      	beq.n	900145ee <_ZN8touchgfx7Outline6moveToEii+0x6e>
900145b8:	88df      	ldrh	r7, [r3, #6]
900145ba:	889a      	ldrh	r2, [r3, #4]
900145bc:	433a      	orrs	r2, r7
900145be:	d010      	beq.n	900145e2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145c0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900145c4:	2a00      	cmp	r2, #0
900145c6:	db0c      	blt.n	900145e2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145c8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
900145ca:	42ba      	cmp	r2, r7
900145cc:	da09      	bge.n	900145e2 <_ZN8touchgfx7Outline6moveToEii+0x62>
900145ce:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900145d2:	42ba      	cmp	r2, r7
900145d4:	f102 0201 	add.w	r2, r2, #1
900145d8:	bf38      	it	cc
900145da:	3308      	addcc	r3, #8
900145dc:	60a2      	str	r2, [r4, #8]
900145de:	bf38      	it	cc
900145e0:	6123      	strcc	r3, [r4, #16]
900145e2:	6923      	ldr	r3, [r4, #16]
900145e4:	2200      	movs	r2, #0
900145e6:	8018      	strh	r0, [r3, #0]
900145e8:	8059      	strh	r1, [r3, #2]
900145ea:	809a      	strh	r2, [r3, #4]
900145ec:	80da      	strh	r2, [r3, #6]
900145ee:	6166      	str	r6, [r4, #20]
900145f0:	6225      	str	r5, [r4, #32]
900145f2:	e9c4 5606 	strd	r5, r6, [r4, #24]
900145f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900145f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900145f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900145fc:	b0d0      	sub	sp, #320	; 0x140
900145fe:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014602:	466c      	mov	r4, sp
90014604:	4627      	mov	r7, r4
90014606:	1a0d      	subs	r5, r1, r0
90014608:	f100 0308 	add.w	r3, r0, #8
9001460c:	2d48      	cmp	r5, #72	; 0x48
9001460e:	f340 80d5 	ble.w	900147bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014612:	112d      	asrs	r5, r5, #4
90014614:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014618:	f9b0 9000 	ldrsh.w	r9, [r0]
9001461c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90014620:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90014624:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014628:	6816      	ldr	r6, [r2, #0]
9001462a:	6006      	str	r6, [r0, #0]
9001462c:	6856      	ldr	r6, [r2, #4]
9001462e:	6046      	str	r6, [r0, #4]
90014630:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90014634:	f8a2 8002 	strh.w	r8, [r2, #2]
90014638:	f8a2 e004 	strh.w	lr, [r2, #4]
9001463c:	f8a2 c006 	strh.w	ip, [r2, #6]
90014640:	f1a1 0208 	sub.w	r2, r1, #8
90014644:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014648:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
9001464c:	4565      	cmp	r5, ip
9001464e:	db06      	blt.n	9001465e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90014650:	d119      	bne.n	90014686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014652:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90014656:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001465a:	42ae      	cmp	r6, r5
9001465c:	dd13      	ble.n	90014686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001465e:	460e      	mov	r6, r1
90014660:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90014664:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90014668:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001466c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90014670:	601d      	str	r5, [r3, #0]
90014672:	6875      	ldr	r5, [r6, #4]
90014674:	605d      	str	r5, [r3, #4]
90014676:	f821 9c08 	strh.w	r9, [r1, #-8]
9001467a:	f821 cc06 	strh.w	ip, [r1, #-6]
9001467e:	f821 8c04 	strh.w	r8, [r1, #-4]
90014682:	f821 ec02 	strh.w	lr, [r1, #-2]
90014686:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001468a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001468e:	42ae      	cmp	r6, r5
90014690:	db06      	blt.n	900146a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90014692:	d116      	bne.n	900146c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014694:	f9b0 c000 	ldrsh.w	ip, [r0]
90014698:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
9001469c:	45ac      	cmp	ip, r5
9001469e:	da10      	bge.n	900146c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900146a0:	681d      	ldr	r5, [r3, #0]
900146a2:	f9b0 8000 	ldrsh.w	r8, [r0]
900146a6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900146aa:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900146ae:	6005      	str	r5, [r0, #0]
900146b0:	685d      	ldr	r5, [r3, #4]
900146b2:	f8a0 8008 	strh.w	r8, [r0, #8]
900146b6:	6045      	str	r5, [r0, #4]
900146b8:	8146      	strh	r6, [r0, #10]
900146ba:	f8a0 e00c 	strh.w	lr, [r0, #12]
900146be:	f8a0 c00e 	strh.w	ip, [r0, #14]
900146c2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900146c6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900146ca:	4565      	cmp	r5, ip
900146cc:	db06      	blt.n	900146dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900146ce:	d119      	bne.n	90014704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900146d0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900146d4:	f9b0 5000 	ldrsh.w	r5, [r0]
900146d8:	42ae      	cmp	r6, r5
900146da:	da13      	bge.n	90014704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900146dc:	460e      	mov	r6, r1
900146de:	f9b0 9000 	ldrsh.w	r9, [r0]
900146e2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900146e6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900146ea:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900146ee:	6005      	str	r5, [r0, #0]
900146f0:	6875      	ldr	r5, [r6, #4]
900146f2:	6045      	str	r5, [r0, #4]
900146f4:	f821 9c08 	strh.w	r9, [r1, #-8]
900146f8:	f821 cc06 	strh.w	ip, [r1, #-6]
900146fc:	f821 8c04 	strh.w	r8, [r1, #-4]
90014700:	f821 ec02 	strh.w	lr, [r1, #-2]
90014704:	3308      	adds	r3, #8
90014706:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001470a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001470e:	45e6      	cmp	lr, ip
90014710:	dbf8      	blt.n	90014704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014712:	d105      	bne.n	90014720 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014714:	f9b3 6000 	ldrsh.w	r6, [r3]
90014718:	f9b0 5000 	ldrsh.w	r5, [r0]
9001471c:	42ae      	cmp	r6, r5
9001471e:	dbf1      	blt.n	90014704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014720:	4615      	mov	r5, r2
90014722:	3a08      	subs	r2, #8
90014724:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90014728:	45b4      	cmp	ip, r6
9001472a:	dbf9      	blt.n	90014720 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001472c:	d105      	bne.n	9001473a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001472e:	f9b0 8000 	ldrsh.w	r8, [r0]
90014732:	f9b2 6000 	ldrsh.w	r6, [r2]
90014736:	45b0      	cmp	r8, r6
90014738:	dbf2      	blt.n	90014720 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001473a:	4293      	cmp	r3, r2
9001473c:	f1a5 0608 	sub.w	r6, r5, #8
90014740:	d816      	bhi.n	90014770 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90014742:	f8d6 c000 	ldr.w	ip, [r6]
90014746:	f9b3 a000 	ldrsh.w	sl, [r3]
9001474a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001474e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90014752:	f8c3 c000 	str.w	ip, [r3]
90014756:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001475a:	f8c3 c004 	str.w	ip, [r3, #4]
9001475e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014762:	f825 ec06 	strh.w	lr, [r5, #-6]
90014766:	f825 9c04 	strh.w	r9, [r5, #-4]
9001476a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001476e:	e7c9      	b.n	90014704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014770:	f8d6 e000 	ldr.w	lr, [r6]
90014774:	f9b0 a000 	ldrsh.w	sl, [r0]
90014778:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
9001477c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90014780:	f8c0 e000 	str.w	lr, [r0]
90014784:	f8d6 e004 	ldr.w	lr, [r6, #4]
90014788:	1a16      	subs	r6, r2, r0
9001478a:	f8c0 e004 	str.w	lr, [r0, #4]
9001478e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014792:	f825 cc06 	strh.w	ip, [r5, #-6]
90014796:	f825 9c04 	strh.w	r9, [r5, #-4]
9001479a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001479e:	1acd      	subs	r5, r1, r3
900147a0:	10ed      	asrs	r5, r5, #3
900147a2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900147a6:	bfb5      	itete	lt
900147a8:	e9c4 0200 	strdlt	r0, r2, [r4]
900147ac:	e9c4 3100 	strdge	r3, r1, [r4]
900147b0:	460a      	movlt	r2, r1
900147b2:	4603      	movge	r3, r0
900147b4:	3408      	adds	r4, #8
900147b6:	4618      	mov	r0, r3
900147b8:	4611      	mov	r1, r2
900147ba:	e724      	b.n	90014606 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900147bc:	4299      	cmp	r1, r3
900147be:	d927      	bls.n	90014810 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900147c0:	f1a3 0210 	sub.w	r2, r3, #16
900147c4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900147c8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900147cc:	45ac      	cmp	ip, r5
900147ce:	db06      	blt.n	900147de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900147d0:	d11c      	bne.n	9001480c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900147d2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900147d6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900147da:	42ae      	cmp	r6, r5
900147dc:	da16      	bge.n	9001480c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900147de:	4615      	mov	r5, r2
900147e0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900147e4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900147e8:	3a08      	subs	r2, #8
900147ea:	f855 6f08 	ldr.w	r6, [r5, #8]!
900147ee:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900147f2:	6196      	str	r6, [r2, #24]
900147f4:	42a8      	cmp	r0, r5
900147f6:	686e      	ldr	r6, [r5, #4]
900147f8:	f8a2 9010 	strh.w	r9, [r2, #16]
900147fc:	61d6      	str	r6, [r2, #28]
900147fe:	f8a2 c012 	strh.w	ip, [r2, #18]
90014802:	f8a2 8014 	strh.w	r8, [r2, #20]
90014806:	f8a2 e016 	strh.w	lr, [r2, #22]
9001480a:	d1db      	bne.n	900147c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001480c:	3308      	adds	r3, #8
9001480e:	e7d5      	b.n	900147bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014810:	42bc      	cmp	r4, r7
90014812:	d903      	bls.n	9001481c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90014814:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90014818:	3c08      	subs	r4, #8
9001481a:	e6f4      	b.n	90014606 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001481c:	b050      	add	sp, #320	; 0x140
9001481e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90014822 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90014822:	b510      	push	{r4, lr}
90014824:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014826:	4604      	mov	r4, r0
90014828:	07da      	lsls	r2, r3, #31
9001482a:	d507      	bpl.n	9001483c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001482c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90014830:	f7ff fe8c 	bl	9001454c <_ZN8touchgfx7Outline6lineToEii>
90014834:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014836:	f023 0301 	bic.w	r3, r3, #1
9001483a:	6243      	str	r3, [r0, #36]	; 0x24
9001483c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001483e:	079b      	lsls	r3, r3, #30
90014840:	d521      	bpl.n	90014886 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90014842:	6923      	ldr	r3, [r4, #16]
90014844:	88d9      	ldrh	r1, [r3, #6]
90014846:	889a      	ldrh	r2, [r3, #4]
90014848:	430a      	orrs	r2, r1
9001484a:	d010      	beq.n	9001486e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001484c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014850:	2a00      	cmp	r2, #0
90014852:	db0c      	blt.n	9001486e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014854:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90014856:	428a      	cmp	r2, r1
90014858:	da09      	bge.n	9001486e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001485a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001485e:	4291      	cmp	r1, r2
90014860:	f102 0201 	add.w	r2, r2, #1
90014864:	bf88      	it	hi
90014866:	3308      	addhi	r3, #8
90014868:	60a2      	str	r2, [r4, #8]
9001486a:	bf88      	it	hi
9001486c:	6123      	strhi	r3, [r4, #16]
9001486e:	68a1      	ldr	r1, [r4, #8]
90014870:	b129      	cbz	r1, 9001487e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014872:	6863      	ldr	r3, [r4, #4]
90014874:	4299      	cmp	r1, r3
90014876:	d802      	bhi.n	9001487e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014878:	68e0      	ldr	r0, [r4, #12]
9001487a:	f7ff febd 	bl	900145f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001487e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014880:	f023 0302 	bic.w	r3, r3, #2
90014884:	6263      	str	r3, [r4, #36]	; 0x24
90014886:	68e0      	ldr	r0, [r4, #12]
90014888:	bd10      	pop	{r4, pc}
	...

9001488c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
9001488c:	4b02      	ldr	r3, [pc, #8]	; (90014898 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001488e:	6018      	str	r0, [r3, #0]
90014890:	4b02      	ldr	r3, [pc, #8]	; (9001489c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90014892:	6019      	str	r1, [r3, #0]
90014894:	4770      	bx	lr
90014896:	bf00      	nop
90014898:	2403970c 	.word	0x2403970c
9001489c:	24039710 	.word	0x24039710

900148a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900148a0:	2300      	movs	r3, #0
900148a2:	4a02      	ldr	r2, [pc, #8]	; (900148ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900148a4:	6013      	str	r3, [r2, #0]
900148a6:	4a02      	ldr	r2, [pc, #8]	; (900148b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900148a8:	6013      	str	r3, [r2, #0]
900148aa:	4770      	bx	lr
900148ac:	2403970c 	.word	0x2403970c
900148b0:	24039710 	.word	0x24039710

900148b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900148b4:	4b01      	ldr	r3, [pc, #4]	; (900148bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900148b6:	6818      	ldr	r0, [r3, #0]
900148b8:	4770      	bx	lr
900148ba:	bf00      	nop
900148bc:	2403970c 	.word	0x2403970c

900148c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900148c0:	4b01      	ldr	r3, [pc, #4]	; (900148c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900148c2:	6818      	ldr	r0, [r3, #0]
900148c4:	4770      	bx	lr
900148c6:	bf00      	nop
900148c8:	24039710 	.word	0x24039710

900148cc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900148cc:	b510      	push	{r4, lr}
900148ce:	6803      	ldr	r3, [r0, #0]
900148d0:	460c      	mov	r4, r1
900148d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900148d4:	4798      	blx	r3
900148d6:	1b03      	subs	r3, r0, r4
900148d8:	4258      	negs	r0, r3
900148da:	4158      	adcs	r0, r3
900148dc:	bd10      	pop	{r4, pc}
	...

900148e0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900148e0:	4b01      	ldr	r3, [pc, #4]	; (900148e8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900148e2:	6019      	str	r1, [r3, #0]
900148e4:	4770      	bx	lr
900148e6:	bf00      	nop
900148e8:	24039714 	.word	0x24039714

900148ec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900148ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900148f0:	4696      	mov	lr, r2
900148f2:	b097      	sub	sp, #92	; 0x5c
900148f4:	4605      	mov	r5, r0
900148f6:	4614      	mov	r4, r2
900148f8:	460e      	mov	r6, r1
900148fa:	461f      	mov	r7, r3
900148fc:	f10d 0c1c 	add.w	ip, sp, #28
90014900:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90014904:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90014908:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
9001490c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014910:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014914:	f8de 3000 	ldr.w	r3, [lr]
90014918:	f104 0e14 	add.w	lr, r4, #20
9001491c:	f8cc 3000 	str.w	r3, [ip]
90014920:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90014924:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014928:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001492c:	f8de 3000 	ldr.w	r3, [lr]
90014930:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014934:	f8cc 3000 	str.w	r3, [ip]
90014938:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9001493c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014940:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014944:	f8de 3000 	ldr.w	r3, [lr]
90014948:	4631      	mov	r1, r6
9001494a:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001494c:	4628      	mov	r0, r5
9001494e:	f8cc 3000 	str.w	r3, [ip]
90014952:	682b      	ldr	r3, [r5, #0]
90014954:	9201      	str	r2, [sp, #4]
90014956:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014958:	f8cd 8008 	str.w	r8, [sp, #8]
9001495c:	9200      	str	r2, [sp, #0]
9001495e:	aa07      	add	r2, sp, #28
90014960:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90014964:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90014968:	463b      	mov	r3, r7
9001496a:	47d8      	blx	fp
9001496c:	46a6      	mov	lr, r4
9001496e:	f10d 0c1c 	add.w	ip, sp, #28
90014972:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014976:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001497a:	f8de 3000 	ldr.w	r3, [lr]
9001497e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014982:	343c      	adds	r4, #60	; 0x3c
90014984:	f8cc 3000 	str.w	r3, [ip]
90014988:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001498c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014990:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014994:	f8de 3000 	ldr.w	r3, [lr]
90014998:	f8cc 3000 	str.w	r3, [ip]
9001499c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900149a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900149a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900149a6:	6823      	ldr	r3, [r4, #0]
900149a8:	4631      	mov	r1, r6
900149aa:	4628      	mov	r0, r5
900149ac:	f8cc 3000 	str.w	r3, [ip]
900149b0:	682b      	ldr	r3, [r5, #0]
900149b2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900149b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900149b8:	f8cd 8008 	str.w	r8, [sp, #8]
900149bc:	9201      	str	r2, [sp, #4]
900149be:	9a20      	ldr	r2, [sp, #128]	; 0x80
900149c0:	9200      	str	r2, [sp, #0]
900149c2:	aa07      	add	r2, sp, #28
900149c4:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
900149c6:	463b      	mov	r3, r7
900149c8:	47a0      	blx	r4
900149ca:	b017      	add	sp, #92	; 0x5c
900149cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900149d0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900149d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900149d4:	b08d      	sub	sp, #52	; 0x34
900149d6:	4688      	mov	r8, r1
900149d8:	f8d3 c000 	ldr.w	ip, [r3]
900149dc:	9916      	ldr	r1, [sp, #88]	; 0x58
900149de:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
900149e2:	680f      	ldr	r7, [r1, #0]
900149e4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
900149e8:	eba7 070c 	sub.w	r7, r7, ip
900149ec:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
900149f0:	edd3 6a07 	vldr	s13, [r3, #28]
900149f4:	42bc      	cmp	r4, r7
900149f6:	9918      	ldr	r1, [sp, #96]	; 0x60
900149f8:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
900149fc:	bfa8      	it	ge
900149fe:	463c      	movge	r4, r7
90014a00:	f9b1 9000 	ldrsh.w	r9, [r1]
90014a04:	f9ba 1000 	ldrsh.w	r1, [sl]
90014a08:	ee07 4a90 	vmov	s15, r4
90014a0c:	eb09 0e0c 	add.w	lr, r9, ip
90014a10:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90014a14:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90014a18:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90014a1c:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90014a20:	4571      	cmp	r1, lr
90014a22:	ee25 4a04 	vmul.f32	s8, s10, s8
90014a26:	ee65 4a24 	vmul.f32	s9, s10, s9
90014a2a:	ee25 5a27 	vmul.f32	s10, s10, s15
90014a2e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90014a32:	ee71 0aa4 	vadd.f32	s1, s3, s9
90014a36:	ee32 1a05 	vadd.f32	s2, s4, s10
90014a3a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014a3e:	ee36 0a84 	vadd.f32	s0, s13, s8
90014a42:	ee61 1a87 	vmul.f32	s3, s3, s14
90014a46:	ee22 2a07 	vmul.f32	s4, s4, s14
90014a4a:	f340 808c 	ble.w	90014b66 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90014a4e:	eba1 060e 	sub.w	r6, r1, lr
90014a52:	fb96 f5f4 	sdiv	r5, r6, r4
90014a56:	ee07 5a10 	vmov	s14, r5
90014a5a:	2d00      	cmp	r5, #0
90014a5c:	fb04 6615 	mls	r6, r4, r5, r6
90014a60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90014a64:	eea7 0a04 	vfma.f32	s0, s14, s8
90014a68:	eee7 0a24 	vfma.f32	s1, s14, s9
90014a6c:	eea7 1a05 	vfma.f32	s2, s14, s10
90014a70:	dd12      	ble.n	90014a98 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90014a72:	ee70 6a44 	vsub.f32	s13, s0, s8
90014a76:	ee70 1ae4 	vsub.f32	s3, s1, s9
90014a7a:	ee31 2a45 	vsub.f32	s4, s2, s10
90014a7e:	eef5 6a40 	vcmp.f32	s13, #0.0
90014a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014a86:	bf14      	ite	ne
90014a88:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90014a8c:	eeb0 7a67 	vmoveq.f32	s14, s15
90014a90:	ee61 1a87 	vmul.f32	s3, s3, s14
90014a94:	ee22 2a07 	vmul.f32	s4, s4, s14
90014a98:	fb05 f204 	mul.w	r2, r5, r4
90014a9c:	1abf      	subs	r7, r7, r2
90014a9e:	4494      	add	ip, r2
90014aa0:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90014aa4:	4411      	add	r1, r2
90014aa6:	eb09 020c 	add.w	r2, r9, ip
90014aaa:	b209      	sxth	r1, r1
90014aac:	443a      	add	r2, r7
90014aae:	428a      	cmp	r2, r1
90014ab0:	bfc4      	itt	gt
90014ab2:	eba1 0209 	subgt.w	r2, r1, r9
90014ab6:	eba2 070c 	subgt.w	r7, r2, ip
90014aba:	2f00      	cmp	r7, #0
90014abc:	dd50      	ble.n	90014b60 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90014abe:	fb97 f1f4 	sdiv	r1, r7, r4
90014ac2:	fb04 7211 	mls	r2, r4, r1, r7
90014ac6:	b90a      	cbnz	r2, 90014acc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90014ac8:	3901      	subs	r1, #1
90014aca:	4622      	mov	r2, r4
90014acc:	eec7 3a80 	vdiv.f32	s7, s15, s0
90014ad0:	6840      	ldr	r0, [r0, #4]
90014ad2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90014ad6:	44b6      	add	lr, r6
90014ad8:	f8d0 a000 	ldr.w	sl, [r0]
90014adc:	2900      	cmp	r1, #0
90014ade:	bfcc      	ite	gt
90014ae0:	46a1      	movgt	r9, r4
90014ae2:	4691      	movle	r9, r2
90014ae4:	900b      	str	r0, [sp, #44]	; 0x2c
90014ae6:	9817      	ldr	r0, [sp, #92]	; 0x5c
90014ae8:	fb04 e505 	mla	r5, r4, r5, lr
90014aec:	eef0 6a42 	vmov.f32	s13, s4
90014af0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90014af4:	9008      	str	r0, [sp, #32]
90014af6:	eeb0 7a61 	vmov.f32	s14, s3
90014afa:	9818      	ldr	r0, [sp, #96]	; 0x60
90014afc:	695b      	ldr	r3, [r3, #20]
90014afe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90014b02:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90014b06:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90014b0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
90014b0c:	445b      	add	r3, fp
90014b0e:	9307      	str	r3, [sp, #28]
90014b10:	ee16 3a90 	vmov	r3, s13
90014b14:	e9cd 8505 	strd	r8, r5, [sp, #20]
90014b18:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014b1c:	ee21 3a23 	vmul.f32	s6, s2, s7
90014b20:	ee72 7ae1 	vsub.f32	s15, s5, s3
90014b24:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014b28:	ee17 7a90 	vmov	r7, s15
90014b2c:	ee73 7a42 	vsub.f32	s15, s6, s4
90014b30:	fb97 f7f4 	sdiv	r7, r7, r4
90014b34:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014b38:	ee17 ca90 	vmov	ip, s15
90014b3c:	fb9c fcf4 	sdiv	ip, ip, r4
90014b40:	fb0c 3306 	mla	r3, ip, r6, r3
90014b44:	9302      	str	r3, [sp, #8]
90014b46:	ee17 3a10 	vmov	r3, s14
90014b4a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90014b4e:	fb07 3706 	mla	r7, r7, r6, r3
90014b52:	eba9 0306 	sub.w	r3, r9, r6
90014b56:	e9cd 4700 	strd	r4, r7, [sp]
90014b5a:	f8da 4008 	ldr.w	r4, [sl, #8]
90014b5e:	47a0      	blx	r4
90014b60:	b00d      	add	sp, #52	; 0x34
90014b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014b66:	2500      	movs	r5, #0
90014b68:	462e      	mov	r6, r5
90014b6a:	e799      	b.n	90014aa0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90014b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014b70:	b0db      	sub	sp, #364	; 0x16c
90014b72:	461d      	mov	r5, r3
90014b74:	4614      	mov	r4, r2
90014b76:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90014b7a:	910f      	str	r1, [sp, #60]	; 0x3c
90014b7c:	4629      	mov	r1, r5
90014b7e:	930a      	str	r3, [sp, #40]	; 0x28
90014b80:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90014b84:	9009      	str	r0, [sp, #36]	; 0x24
90014b86:	930b      	str	r3, [sp, #44]	; 0x2c
90014b88:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90014b8c:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90014b90:	9310      	str	r3, [sp, #64]	; 0x40
90014b92:	6803      	ldr	r3, [r0, #0]
90014b94:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90014b96:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90014b9a:	47b8      	blx	r7
90014b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014b9e:	6058      	str	r0, [r3, #4]
90014ba0:	2800      	cmp	r0, #0
90014ba2:	f000 83a1 	beq.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014ba6:	682b      	ldr	r3, [r5, #0]
90014ba8:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90014bac:	ed94 7a02 	vldr	s14, [r4, #8]
90014bb0:	9314      	str	r3, [sp, #80]	; 0x50
90014bb2:	686b      	ldr	r3, [r5, #4]
90014bb4:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014bb8:	9315      	str	r3, [sp, #84]	; 0x54
90014bba:	4bc1      	ldr	r3, [pc, #772]	; (90014ec0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90014bbc:	7819      	ldrb	r1, [r3, #0]
90014bbe:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90014bc2:	2900      	cmp	r1, #0
90014bc4:	bf16      	itet	ne
90014bc6:	4619      	movne	r1, r3
90014bc8:	4611      	moveq	r1, r2
90014bca:	4613      	movne	r3, r2
90014bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bd0:	9116      	str	r1, [sp, #88]	; 0x58
90014bd2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90014bd6:	f240 8387 	bls.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bda:	ed94 7a07 	vldr	s14, [r4, #28]
90014bde:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014be2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014be6:	f240 837f 	bls.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90014bee:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014bf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bf6:	f240 8377 	bls.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014bfa:	6822      	ldr	r2, [r4, #0]
90014bfc:	4bb1      	ldr	r3, [pc, #708]	; (90014ec4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014bfe:	429a      	cmp	r2, r3
90014c00:	f2c0 8372 	blt.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c04:	49b0      	ldr	r1, [pc, #704]	; (90014ec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90014c06:	6963      	ldr	r3, [r4, #20]
90014c08:	428a      	cmp	r2, r1
90014c0a:	f300 836d 	bgt.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c0e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90014c12:	48ae      	ldr	r0, [pc, #696]	; (90014ecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90014c14:	33ff      	adds	r3, #255	; 0xff
90014c16:	4283      	cmp	r3, r0
90014c18:	f200 8366 	bhi.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c1c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90014c1e:	4dac      	ldr	r5, [pc, #688]	; (90014ed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014c20:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90014c24:	33ff      	adds	r3, #255	; 0xff
90014c26:	42ab      	cmp	r3, r5
90014c28:	f200 835e 	bhi.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c2c:	6862      	ldr	r2, [r4, #4]
90014c2e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90014c32:	33ff      	adds	r3, #255	; 0xff
90014c34:	4283      	cmp	r3, r0
90014c36:	f200 8357 	bhi.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c3a:	69a1      	ldr	r1, [r4, #24]
90014c3c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90014c40:	33ff      	adds	r3, #255	; 0xff
90014c42:	4283      	cmp	r3, r0
90014c44:	f200 8350 	bhi.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90014c4a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90014c4e:	30ff      	adds	r0, #255	; 0xff
90014c50:	42a8      	cmp	r0, r5
90014c52:	f200 8349 	bhi.w	900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014c56:	428a      	cmp	r2, r1
90014c58:	f280 8110 	bge.w	90014e7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90014c5c:	429a      	cmp	r2, r3
90014c5e:	f300 8119 	bgt.w	90014e94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90014c62:	4299      	cmp	r1, r3
90014c64:	f280 811d 	bge.w	90014ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90014c68:	2502      	movs	r5, #2
90014c6a:	2701      	movs	r7, #1
90014c6c:	46a9      	mov	r9, r5
90014c6e:	46b8      	mov	r8, r7
90014c70:	f04f 0a00 	mov.w	sl, #0
90014c74:	4621      	mov	r1, r4
90014c76:	a849      	add	r0, sp, #292	; 0x124
90014c78:	f003 fe7c 	bl	90018974 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90014c7c:	4622      	mov	r2, r4
90014c7e:	4653      	mov	r3, sl
90014c80:	a949      	add	r1, sp, #292	; 0x124
90014c82:	f8cd 9000 	str.w	r9, [sp]
90014c86:	a819      	add	r0, sp, #100	; 0x64
90014c88:	f003 ffa4 	bl	90018bd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014c8c:	4622      	mov	r2, r4
90014c8e:	4653      	mov	r3, sl
90014c90:	a949      	add	r1, sp, #292	; 0x124
90014c92:	f8cd 8000 	str.w	r8, [sp]
90014c96:	a829      	add	r0, sp, #164	; 0xa4
90014c98:	f003 ff9c 	bl	90018bd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014c9c:	4643      	mov	r3, r8
90014c9e:	4622      	mov	r2, r4
90014ca0:	a949      	add	r1, sp, #292	; 0x124
90014ca2:	f8cd 9000 	str.w	r9, [sp]
90014ca6:	a839      	add	r0, sp, #228	; 0xe4
90014ca8:	f003 ff94 	bl	90018bd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014cac:	42af      	cmp	r7, r5
90014cae:	af12      	add	r7, sp, #72	; 0x48
90014cb0:	bfb7      	itett	lt
90014cb2:	2300      	movlt	r3, #0
90014cb4:	2301      	movge	r3, #1
90014cb6:	ad29      	addlt	r5, sp, #164	; 0xa4
90014cb8:	ac19      	addlt	r4, sp, #100	; 0x64
90014cba:	bfb1      	iteee	lt
90014cbc:	930e      	strlt	r3, [sp, #56]	; 0x38
90014cbe:	ad19      	addge	r5, sp, #100	; 0x64
90014cc0:	930e      	strge	r3, [sp, #56]	; 0x38
90014cc2:	ac29      	addge	r4, sp, #164	; 0xa4
90014cc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014cc6:	e893 0003 	ldmia.w	r3, {r0, r1}
90014cca:	e887 0003 	stmia.w	r7, {r0, r1}
90014cce:	b928      	cbnz	r0, 90014cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90014cd0:	4b80      	ldr	r3, [pc, #512]	; (90014ed4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90014cd2:	6818      	ldr	r0, [r3, #0]
90014cd4:	6803      	ldr	r3, [r0, #0]
90014cd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014cd8:	4798      	blx	r3
90014cda:	6038      	str	r0, [r7, #0]
90014cdc:	9b64      	ldr	r3, [sp, #400]	; 0x190
90014cde:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014ce2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014ce6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90014ce8:	930c      	str	r3, [sp, #48]	; 0x30
90014cea:	990c      	ldr	r1, [sp, #48]	; 0x30
90014cec:	6963      	ldr	r3, [r4, #20]
90014cee:	440b      	add	r3, r1
90014cf0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014cf4:	4408      	add	r0, r1
90014cf6:	b200      	sxth	r0, r0
90014cf8:	4283      	cmp	r3, r0
90014cfa:	900d      	str	r0, [sp, #52]	; 0x34
90014cfc:	f280 80dd 	bge.w	90014eba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014d00:	428b      	cmp	r3, r1
90014d02:	da08      	bge.n	90014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014d04:	2a00      	cmp	r2, #0
90014d06:	dd06      	ble.n	90014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014d08:	1acb      	subs	r3, r1, r3
90014d0a:	429a      	cmp	r2, r3
90014d0c:	f2c0 80e4 	blt.w	90014ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014d10:	2b00      	cmp	r3, #0
90014d12:	f300 80e2 	bgt.w	90014eda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90014d16:	6967      	ldr	r7, [r4, #20]
90014d18:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90014d1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014d1e:	443b      	add	r3, r7
90014d20:	461f      	mov	r7, r3
90014d22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014d24:	1bdf      	subs	r7, r3, r7
90014d26:	4297      	cmp	r7, r2
90014d28:	bfa8      	it	ge
90014d2a:	4617      	movge	r7, r2
90014d2c:	2f00      	cmp	r7, #0
90014d2e:	f340 8166 	ble.w	90014ffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90014d32:	9b64      	ldr	r3, [sp, #400]	; 0x190
90014d34:	6829      	ldr	r1, [r5, #0]
90014d36:	f9b3 2000 	ldrsh.w	r2, [r3]
90014d3a:	f9bb 3000 	ldrsh.w	r3, [fp]
90014d3e:	4411      	add	r1, r2
90014d40:	6820      	ldr	r0, [r4, #0]
90014d42:	4299      	cmp	r1, r3
90014d44:	dd1a      	ble.n	90014d7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014d46:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014d4a:	4402      	add	r2, r0
90014d4c:	440b      	add	r3, r1
90014d4e:	b21b      	sxth	r3, r3
90014d50:	429a      	cmp	r2, r3
90014d52:	dc13      	bgt.n	90014d7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014d54:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014d56:	a912      	add	r1, sp, #72	; 0x48
90014d58:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014d5a:	9809      	ldr	r0, [sp, #36]	; 0x24
90014d5c:	681b      	ldr	r3, [r3, #0]
90014d5e:	9206      	str	r2, [sp, #24]
90014d60:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90014d62:	9500      	str	r5, [sp, #0]
90014d64:	9205      	str	r2, [sp, #20]
90014d66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90014d68:	e9cd b203 	strd	fp, r2, [sp, #12]
90014d6c:	9a64      	ldr	r2, [sp, #400]	; 0x190
90014d6e:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014d72:	aa49      	add	r2, sp, #292	; 0x124
90014d74:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90014d78:	4623      	mov	r3, r4
90014d7a:	47c8      	blx	r9
90014d7c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90014d80:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90014d84:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90014d88:	ee37 7a27 	vadd.f32	s14, s14, s15
90014d8c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90014d90:	68a1      	ldr	r1, [r4, #8]
90014d92:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014d96:	ed94 6a08 	vldr	s12, [r4, #32]
90014d9a:	edd4 6a07 	vldr	s13, [r4, #28]
90014d9e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90014da2:	ee76 6a86 	vadd.f32	s13, s13, s12
90014da6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90014daa:	e9d4 2300 	ldrd	r2, r3, [r4]
90014dae:	edc4 6a07 	vstr	s13, [r4, #28]
90014db2:	441a      	add	r2, r3
90014db4:	6963      	ldr	r3, [r4, #20]
90014db6:	3301      	adds	r3, #1
90014db8:	6022      	str	r2, [r4, #0]
90014dba:	6163      	str	r3, [r4, #20]
90014dbc:	69a3      	ldr	r3, [r4, #24]
90014dbe:	3b01      	subs	r3, #1
90014dc0:	61a3      	str	r3, [r4, #24]
90014dc2:	6923      	ldr	r3, [r4, #16]
90014dc4:	440b      	add	r3, r1
90014dc6:	68e1      	ldr	r1, [r4, #12]
90014dc8:	428b      	cmp	r3, r1
90014dca:	6123      	str	r3, [r4, #16]
90014dcc:	db15      	blt.n	90014dfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90014dce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90014dd2:	3201      	adds	r2, #1
90014dd4:	1a5b      	subs	r3, r3, r1
90014dd6:	ee76 6a26 	vadd.f32	s13, s12, s13
90014dda:	6022      	str	r2, [r4, #0]
90014ddc:	6123      	str	r3, [r4, #16]
90014dde:	edc4 6a07 	vstr	s13, [r4, #28]
90014de2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90014de6:	ee36 7a87 	vadd.f32	s14, s13, s14
90014dea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90014dee:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90014df2:	ee77 7a27 	vadd.f32	s15, s14, s15
90014df6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90014dfa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90014dfe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90014e02:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90014e06:	ee37 7a27 	vadd.f32	s14, s14, s15
90014e0a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90014e0e:	68a9      	ldr	r1, [r5, #8]
90014e10:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014e14:	ed95 6a08 	vldr	s12, [r5, #32]
90014e18:	edd5 6a07 	vldr	s13, [r5, #28]
90014e1c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90014e20:	ee76 6a86 	vadd.f32	s13, s13, s12
90014e24:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90014e28:	e9d5 2300 	ldrd	r2, r3, [r5]
90014e2c:	edc5 6a07 	vstr	s13, [r5, #28]
90014e30:	441a      	add	r2, r3
90014e32:	696b      	ldr	r3, [r5, #20]
90014e34:	3301      	adds	r3, #1
90014e36:	602a      	str	r2, [r5, #0]
90014e38:	616b      	str	r3, [r5, #20]
90014e3a:	69ab      	ldr	r3, [r5, #24]
90014e3c:	3b01      	subs	r3, #1
90014e3e:	61ab      	str	r3, [r5, #24]
90014e40:	692b      	ldr	r3, [r5, #16]
90014e42:	440b      	add	r3, r1
90014e44:	68e9      	ldr	r1, [r5, #12]
90014e46:	428b      	cmp	r3, r1
90014e48:	612b      	str	r3, [r5, #16]
90014e4a:	db15      	blt.n	90014e78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90014e4c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90014e50:	3201      	adds	r2, #1
90014e52:	1a5b      	subs	r3, r3, r1
90014e54:	ee76 6a26 	vadd.f32	s13, s12, s13
90014e58:	602a      	str	r2, [r5, #0]
90014e5a:	612b      	str	r3, [r5, #16]
90014e5c:	edc5 6a07 	vstr	s13, [r5, #28]
90014e60:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90014e64:	ee36 7a87 	vadd.f32	s14, s13, s14
90014e68:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90014e6c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90014e70:	ee77 7a27 	vadd.f32	s15, s14, s15
90014e74:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90014e78:	3f01      	subs	r7, #1
90014e7a:	e757      	b.n	90014d2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90014e7c:	4299      	cmp	r1, r3
90014e7e:	dc13      	bgt.n	90014ea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90014e80:	429a      	cmp	r2, r3
90014e82:	da14      	bge.n	90014eae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90014e84:	2502      	movs	r5, #2
90014e86:	2703      	movs	r7, #3
90014e88:	f04f 0800 	mov.w	r8, #0
90014e8c:	46a9      	mov	r9, r5
90014e8e:	f04f 0a01 	mov.w	sl, #1
90014e92:	e6ef      	b.n	90014c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014e94:	2501      	movs	r5, #1
90014e96:	2700      	movs	r7, #0
90014e98:	46a9      	mov	r9, r5
90014e9a:	46b8      	mov	r8, r7
90014e9c:	f04f 0a02 	mov.w	sl, #2
90014ea0:	e6e8      	b.n	90014c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014ea2:	2501      	movs	r5, #1
90014ea4:	2702      	movs	r7, #2
90014ea6:	e6e1      	b.n	90014c6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90014ea8:	2500      	movs	r5, #0
90014eaa:	2701      	movs	r7, #1
90014eac:	e7f4      	b.n	90014e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90014eae:	2702      	movs	r7, #2
90014eb0:	2503      	movs	r5, #3
90014eb2:	f04f 0900 	mov.w	r9, #0
90014eb6:	46b8      	mov	r8, r7
90014eb8:	e7e9      	b.n	90014e8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90014eba:	4613      	mov	r3, r2
90014ebc:	e728      	b.n	90014d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90014ebe:	bf00      	nop
90014ec0:	240396fc 	.word	0x240396fc
90014ec4:	fffd8f01 	.word	0xfffd8f01
90014ec8:	00027100 	.word	0x00027100
90014ecc:	0004e1ff 	.word	0x0004e1ff
90014ed0:	0004e1fe 	.word	0x0004e1fe
90014ed4:	24039704 	.word	0x24039704
90014ed8:	4613      	mov	r3, r2
90014eda:	992b      	ldr	r1, [sp, #172]	; 0xac
90014edc:	469e      	mov	lr, r3
90014ede:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90014ee0:	469c      	mov	ip, r3
90014ee2:	9111      	str	r1, [sp, #68]	; 0x44
90014ee4:	f04f 0900 	mov.w	r9, #0
90014ee8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90014eec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90014ef0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90014ef4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90014ef8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90014efc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90014f00:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90014f04:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90014f08:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90014f0c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90014f10:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90014f14:	f1bc 0f00 	cmp.w	ip, #0
90014f18:	d147      	bne.n	90014faa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90014f1a:	eb03 0c07 	add.w	ip, r3, r7
90014f1e:	1ad7      	subs	r7, r2, r3
90014f20:	f1b9 0f00 	cmp.w	r9, #0
90014f24:	d009      	beq.n	90014f3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90014f26:	9029      	str	r0, [sp, #164]	; 0xa4
90014f28:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90014f2c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90014f30:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90014f34:	912d      	str	r1, [sp, #180]	; 0xb4
90014f36:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90014f3a:	991b      	ldr	r1, [sp, #108]	; 0x6c
90014f3c:	f04f 0800 	mov.w	r8, #0
90014f40:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90014f44:	9111      	str	r1, [sp, #68]	; 0x44
90014f46:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90014f4a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90014f4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90014f52:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90014f56:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90014f5a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90014f5e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90014f62:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90014f66:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90014f6a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90014f6e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90014f72:	f1be 0f00 	cmp.w	lr, #0
90014f76:	d031      	beq.n	90014fdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90014f78:	9e11      	ldr	r6, [sp, #68]	; 0x44
90014f7a:	4450      	add	r0, sl
90014f7c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014f80:	4431      	add	r1, r6
90014f82:	ee37 7a04 	vadd.f32	s14, s14, s8
90014f86:	ee77 7aa3 	vadd.f32	s15, s15, s7
90014f8a:	4549      	cmp	r1, r9
90014f8c:	db08      	blt.n	90014fa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90014f8e:	ee77 7a85 	vadd.f32	s15, s15, s10
90014f92:	3001      	adds	r0, #1
90014f94:	ee76 6aa5 	vadd.f32	s13, s13, s11
90014f98:	eba1 0109 	sub.w	r1, r1, r9
90014f9c:	ee37 7a06 	vadd.f32	s14, s14, s12
90014fa0:	f10e 3eff 	add.w	lr, lr, #4294967295
90014fa4:	f04f 0801 	mov.w	r8, #1
90014fa8:	e7e3      	b.n	90014f72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90014faa:	9e11      	ldr	r6, [sp, #68]	; 0x44
90014fac:	4450      	add	r0, sl
90014fae:	ee37 7a24 	vadd.f32	s14, s14, s9
90014fb2:	4431      	add	r1, r6
90014fb4:	ee77 7a84 	vadd.f32	s15, s15, s8
90014fb8:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014fbc:	4541      	cmp	r1, r8
90014fbe:	db08      	blt.n	90014fd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014fc0:	ee76 6a85 	vadd.f32	s13, s13, s10
90014fc4:	3001      	adds	r0, #1
90014fc6:	ee37 7a25 	vadd.f32	s14, s14, s11
90014fca:	eba1 0108 	sub.w	r1, r1, r8
90014fce:	ee77 7a86 	vadd.f32	s15, s15, s12
90014fd2:	f10c 3cff 	add.w	ip, ip, #4294967295
90014fd6:	f04f 0901 	mov.w	r9, #1
90014fda:	e79b      	b.n	90014f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014fdc:	449c      	add	ip, r3
90014fde:	1aff      	subs	r7, r7, r3
90014fe0:	f1b8 0f00 	cmp.w	r8, #0
90014fe4:	d009      	beq.n	90014ffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90014fe6:	9019      	str	r0, [sp, #100]	; 0x64
90014fe8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90014fec:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90014ff0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90014ff4:	911d      	str	r1, [sp, #116]	; 0x74
90014ff6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90014ffa:	1ad2      	subs	r2, r2, r3
90014ffc:	e68b      	b.n	90014d16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014ffe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015000:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90015002:	2b00      	cmp	r3, #0
90015004:	f000 80d1 	beq.w	900151aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015008:	ad19      	add	r5, sp, #100	; 0x64
9001500a:	ac39      	add	r4, sp, #228	; 0xe4
9001500c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001500e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015012:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015016:	930c      	str	r3, [sp, #48]	; 0x30
90015018:	990c      	ldr	r1, [sp, #48]	; 0x30
9001501a:	6963      	ldr	r3, [r4, #20]
9001501c:	440b      	add	r3, r1
9001501e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015022:	4408      	add	r0, r1
90015024:	b200      	sxth	r0, r0
90015026:	4283      	cmp	r3, r0
90015028:	900d      	str	r0, [sp, #52]	; 0x34
9001502a:	f280 80c1 	bge.w	900151b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
9001502e:	428b      	cmp	r3, r1
90015030:	da08      	bge.n	90015044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015032:	2a00      	cmp	r2, #0
90015034:	dd06      	ble.n	90015044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015036:	1acb      	subs	r3, r1, r3
90015038:	429a      	cmp	r2, r3
9001503a:	f2c0 80bb 	blt.w	900151b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
9001503e:	2b00      	cmp	r3, #0
90015040:	f300 80b9 	bgt.w	900151b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015044:	6967      	ldr	r7, [r4, #20]
90015046:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9001504a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001504c:	443b      	add	r3, r7
9001504e:	461f      	mov	r7, r3
90015050:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015052:	1bdf      	subs	r7, r3, r7
90015054:	4297      	cmp	r7, r2
90015056:	bfa8      	it	ge
90015058:	4617      	movge	r7, r2
9001505a:	2f00      	cmp	r7, #0
9001505c:	f340 813c 	ble.w	900152d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015060:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015062:	6829      	ldr	r1, [r5, #0]
90015064:	f9b3 2000 	ldrsh.w	r2, [r3]
90015068:	f9bb 3000 	ldrsh.w	r3, [fp]
9001506c:	4411      	add	r1, r2
9001506e:	6820      	ldr	r0, [r4, #0]
90015070:	4299      	cmp	r1, r3
90015072:	dd1a      	ble.n	900150aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015074:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015078:	4402      	add	r2, r0
9001507a:	440b      	add	r3, r1
9001507c:	b21b      	sxth	r3, r3
9001507e:	429a      	cmp	r2, r3
90015080:	dc13      	bgt.n	900150aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015082:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015084:	a912      	add	r1, sp, #72	; 0x48
90015086:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015088:	9809      	ldr	r0, [sp, #36]	; 0x24
9001508a:	681b      	ldr	r3, [r3, #0]
9001508c:	9206      	str	r2, [sp, #24]
9001508e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015090:	9500      	str	r5, [sp, #0]
90015092:	9205      	str	r2, [sp, #20]
90015094:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90015096:	e9cd b203 	strd	fp, r2, [sp, #12]
9001509a:	9a64      	ldr	r2, [sp, #400]	; 0x190
9001509c:	e9cd 8201 	strd	r8, r2, [sp, #4]
900150a0:	aa49      	add	r2, sp, #292	; 0x124
900150a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
900150a6:	4623      	mov	r3, r4
900150a8:	47c8      	blx	r9
900150aa:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
900150ae:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
900150b2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
900150b6:	ee37 7a27 	vadd.f32	s14, s14, s15
900150ba:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
900150be:	68a1      	ldr	r1, [r4, #8]
900150c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
900150c4:	ed94 6a08 	vldr	s12, [r4, #32]
900150c8:	edd4 6a07 	vldr	s13, [r4, #28]
900150cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900150d0:	ee76 6a86 	vadd.f32	s13, s13, s12
900150d4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900150d8:	e9d4 2300 	ldrd	r2, r3, [r4]
900150dc:	edc4 6a07 	vstr	s13, [r4, #28]
900150e0:	441a      	add	r2, r3
900150e2:	6963      	ldr	r3, [r4, #20]
900150e4:	3301      	adds	r3, #1
900150e6:	6022      	str	r2, [r4, #0]
900150e8:	6163      	str	r3, [r4, #20]
900150ea:	69a3      	ldr	r3, [r4, #24]
900150ec:	3b01      	subs	r3, #1
900150ee:	61a3      	str	r3, [r4, #24]
900150f0:	6923      	ldr	r3, [r4, #16]
900150f2:	440b      	add	r3, r1
900150f4:	68e1      	ldr	r1, [r4, #12]
900150f6:	428b      	cmp	r3, r1
900150f8:	6123      	str	r3, [r4, #16]
900150fa:	db15      	blt.n	90015128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900150fc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90015100:	3201      	adds	r2, #1
90015102:	1a5b      	subs	r3, r3, r1
90015104:	ee76 6a26 	vadd.f32	s13, s12, s13
90015108:	6022      	str	r2, [r4, #0]
9001510a:	6123      	str	r3, [r4, #16]
9001510c:	edc4 6a07 	vstr	s13, [r4, #28]
90015110:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90015114:	ee36 7a87 	vadd.f32	s14, s13, s14
90015118:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001511c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90015120:	ee77 7a27 	vadd.f32	s15, s14, s15
90015124:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90015128:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9001512c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90015130:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90015134:	ee37 7a27 	vadd.f32	s14, s14, s15
90015138:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9001513c:	68a9      	ldr	r1, [r5, #8]
9001513e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015142:	ed95 6a08 	vldr	s12, [r5, #32]
90015146:	edd5 6a07 	vldr	s13, [r5, #28]
9001514a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001514e:	ee76 6a86 	vadd.f32	s13, s13, s12
90015152:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015156:	e9d5 2300 	ldrd	r2, r3, [r5]
9001515a:	edc5 6a07 	vstr	s13, [r5, #28]
9001515e:	441a      	add	r2, r3
90015160:	696b      	ldr	r3, [r5, #20]
90015162:	3301      	adds	r3, #1
90015164:	602a      	str	r2, [r5, #0]
90015166:	616b      	str	r3, [r5, #20]
90015168:	69ab      	ldr	r3, [r5, #24]
9001516a:	3b01      	subs	r3, #1
9001516c:	61ab      	str	r3, [r5, #24]
9001516e:	692b      	ldr	r3, [r5, #16]
90015170:	440b      	add	r3, r1
90015172:	68e9      	ldr	r1, [r5, #12]
90015174:	428b      	cmp	r3, r1
90015176:	612b      	str	r3, [r5, #16]
90015178:	db15      	blt.n	900151a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9001517a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9001517e:	3201      	adds	r2, #1
90015180:	1a5b      	subs	r3, r3, r1
90015182:	ee76 6a26 	vadd.f32	s13, s12, s13
90015186:	602a      	str	r2, [r5, #0]
90015188:	612b      	str	r3, [r5, #16]
9001518a:	edc5 6a07 	vstr	s13, [r5, #28]
9001518e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015192:	ee36 7a87 	vadd.f32	s14, s13, s14
90015196:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001519a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9001519e:	ee77 7a27 	vadd.f32	s15, s14, s15
900151a2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900151a6:	3f01      	subs	r7, #1
900151a8:	e757      	b.n	9001505a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900151aa:	ad39      	add	r5, sp, #228	; 0xe4
900151ac:	ac19      	add	r4, sp, #100	; 0x64
900151ae:	e72d      	b.n	9001500c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
900151b0:	4613      	mov	r3, r2
900151b2:	e744      	b.n	9001503e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
900151b4:	4613      	mov	r3, r2
900151b6:	9e3b      	ldr	r6, [sp, #236]	; 0xec
900151b8:	469e      	mov	lr, r3
900151ba:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
900151be:	461f      	mov	r7, r3
900151c0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
900151c4:	f04f 0900 	mov.w	r9, #0
900151c8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
900151cc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
900151d0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
900151d4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
900151d8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
900151dc:	993d      	ldr	r1, [sp, #244]	; 0xf4
900151de:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
900151e2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
900151e6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
900151ea:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
900151ee:	960e      	str	r6, [sp, #56]	; 0x38
900151f0:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
900151f4:	2f00      	cmp	r7, #0
900151f6:	d146      	bne.n	90015286 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900151f8:	449c      	add	ip, r3
900151fa:	1ad7      	subs	r7, r2, r3
900151fc:	f1b9 0f00 	cmp.w	r9, #0
90015200:	d009      	beq.n	90015216 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015202:	9039      	str	r0, [sp, #228]	; 0xe4
90015204:	913d      	str	r1, [sp, #244]	; 0xf4
90015206:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9001520a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
9001520e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90015212:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90015216:	991b      	ldr	r1, [sp, #108]	; 0x6c
90015218:	f04f 0800 	mov.w	r8, #0
9001521c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90015220:	910e      	str	r1, [sp, #56]	; 0x38
90015222:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90015226:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9001522a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9001522e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90015232:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90015236:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9001523a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
9001523e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90015242:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90015246:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001524a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
9001524e:	f1be 0f00 	cmp.w	lr, #0
90015252:	d030      	beq.n	900152b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90015254:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015256:	4450      	add	r0, sl
90015258:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001525c:	4431      	add	r1, r6
9001525e:	ee37 7a04 	vadd.f32	s14, s14, s8
90015262:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015266:	4549      	cmp	r1, r9
90015268:	db08      	blt.n	9001527c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9001526a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001526e:	3001      	adds	r0, #1
90015270:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015274:	eba1 0109 	sub.w	r1, r1, r9
90015278:	ee37 7a06 	vadd.f32	s14, s14, s12
9001527c:	f10e 3eff 	add.w	lr, lr, #4294967295
90015280:	f04f 0801 	mov.w	r8, #1
90015284:	e7e3      	b.n	9001524e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015286:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015288:	4450      	add	r0, sl
9001528a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001528e:	4431      	add	r1, r6
90015290:	ee77 7a84 	vadd.f32	s15, s15, s8
90015294:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015298:	4541      	cmp	r1, r8
9001529a:	db08      	blt.n	900152ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
9001529c:	ee76 6a85 	vadd.f32	s13, s13, s10
900152a0:	3001      	adds	r0, #1
900152a2:	ee37 7a25 	vadd.f32	s14, s14, s11
900152a6:	eba1 0108 	sub.w	r1, r1, r8
900152aa:	ee77 7a86 	vadd.f32	s15, s15, s12
900152ae:	3f01      	subs	r7, #1
900152b0:	f04f 0901 	mov.w	r9, #1
900152b4:	e79e      	b.n	900151f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900152b6:	449c      	add	ip, r3
900152b8:	1aff      	subs	r7, r7, r3
900152ba:	f1b8 0f00 	cmp.w	r8, #0
900152be:	d009      	beq.n	900152d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900152c0:	9019      	str	r0, [sp, #100]	; 0x64
900152c2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
900152c6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
900152ca:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
900152ce:	911d      	str	r1, [sp, #116]	; 0x74
900152d0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
900152d4:	1ad2      	subs	r2, r2, r3
900152d6:	e6b5      	b.n	90015044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900152d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900152da:	681b      	ldr	r3, [r3, #0]
900152dc:	b923      	cbnz	r3, 900152e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900152de:	4b04      	ldr	r3, [pc, #16]	; (900152f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900152e0:	6818      	ldr	r0, [r3, #0]
900152e2:	6803      	ldr	r3, [r0, #0]
900152e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900152e6:	4798      	blx	r3
900152e8:	b05b      	add	sp, #364	; 0x16c
900152ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900152ee:	bf00      	nop
900152f0:	24039704 	.word	0x24039704

900152f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900152f4:	b570      	push	{r4, r5, r6, lr}
900152f6:	4604      	mov	r4, r0
900152f8:	2500      	movs	r5, #0
900152fa:	9805      	ldr	r0, [sp, #20]
900152fc:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015300:	6061      	str	r1, [r4, #4]
90015302:	8263      	strh	r3, [r4, #18]
90015304:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015308:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001530c:	8025      	strh	r5, [r4, #0]
9001530e:	7221      	strb	r1, [r4, #8]
90015310:	7266      	strb	r6, [r4, #9]
90015312:	60e0      	str	r0, [r4, #12]
90015314:	8222      	strh	r2, [r4, #16]
90015316:	82a3      	strh	r3, [r4, #20]
90015318:	82e5      	strh	r5, [r4, #22]
9001531a:	8325      	strh	r5, [r4, #24]
9001531c:	8365      	strh	r5, [r4, #26]
9001531e:	83a5      	strh	r5, [r4, #28]
90015320:	83e5      	strh	r5, [r4, #30]
90015322:	8425      	strh	r5, [r4, #32]
90015324:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90015328:	b32e      	cbz	r6, 90015376 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001532a:	6803      	ldr	r3, [r0, #0]
9001532c:	695b      	ldr	r3, [r3, #20]
9001532e:	4798      	blx	r3
90015330:	4606      	mov	r6, r0
90015332:	b300      	cbz	r0, 90015376 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015334:	68e0      	ldr	r0, [r4, #12]
90015336:	4631      	mov	r1, r6
90015338:	6803      	ldr	r3, [r0, #0]
9001533a:	68db      	ldr	r3, [r3, #12]
9001533c:	4798      	blx	r3
9001533e:	4605      	mov	r5, r0
90015340:	b1c8      	cbz	r0, 90015376 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015342:	7b43      	ldrb	r3, [r0, #13]
90015344:	7a82      	ldrb	r2, [r0, #10]
90015346:	005b      	lsls	r3, r3, #1
90015348:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001534c:	4313      	orrs	r3, r2
9001534e:	8423      	strh	r3, [r4, #32]
90015350:	7a63      	ldrb	r3, [r4, #9]
90015352:	2b06      	cmp	r3, #6
90015354:	d10f      	bne.n	90015376 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015356:	68e0      	ldr	r0, [r4, #12]
90015358:	462a      	mov	r2, r5
9001535a:	4631      	mov	r1, r6
9001535c:	6803      	ldr	r3, [r0, #0]
9001535e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015360:	4798      	blx	r3
90015362:	7b6b      	ldrb	r3, [r5, #13]
90015364:	005b      	lsls	r3, r3, #1
90015366:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001536a:	7aab      	ldrb	r3, [r5, #10]
9001536c:	4313      	orrs	r3, r2
9001536e:	4418      	add	r0, r3
90015370:	8c23      	ldrh	r3, [r4, #32]
90015372:	4418      	add	r0, r3
90015374:	8420      	strh	r0, [r4, #32]
90015376:	4620      	mov	r0, r4
90015378:	bd70      	pop	{r4, r5, r6, pc}

9001537a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001537a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001537e:	2400      	movs	r4, #0
90015380:	b085      	sub	sp, #20
90015382:	4681      	mov	r9, r0
90015384:	4688      	mov	r8, r1
90015386:	4692      	mov	sl, r2
90015388:	469b      	mov	fp, r3
9001538a:	4627      	mov	r7, r4
9001538c:	4625      	mov	r5, r4
9001538e:	4626      	mov	r6, r4
90015390:	4554      	cmp	r4, sl
90015392:	da2a      	bge.n	900153ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015394:	2300      	movs	r3, #0
90015396:	9303      	str	r3, [sp, #12]
90015398:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001539c:	429d      	cmp	r5, r3
9001539e:	d004      	beq.n	900153aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900153a0:	f242 030b 	movw	r3, #8203	; 0x200b
900153a4:	429d      	cmp	r5, r3
900153a6:	bf18      	it	ne
900153a8:	462f      	movne	r7, r5
900153aa:	ab03      	add	r3, sp, #12
900153ac:	4642      	mov	r2, r8
900153ae:	4659      	mov	r1, fp
900153b0:	4648      	mov	r0, r9
900153b2:	f003 f8f5 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900153b6:	4605      	mov	r5, r0
900153b8:	b1b8      	cbz	r0, 900153ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900153ba:	280a      	cmp	r0, #10
900153bc:	d015      	beq.n	900153ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900153be:	9a03      	ldr	r2, [sp, #12]
900153c0:	b18a      	cbz	r2, 900153e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900153c2:	7b50      	ldrb	r0, [r2, #13]
900153c4:	4639      	mov	r1, r7
900153c6:	7a93      	ldrb	r3, [r2, #10]
900153c8:	0040      	lsls	r0, r0, #1
900153ca:	8895      	ldrh	r5, [r2, #4]
900153cc:	f400 7080 	and.w	r0, r0, #256	; 0x100
900153d0:	4303      	orrs	r3, r0
900153d2:	4640      	mov	r0, r8
900153d4:	9301      	str	r3, [sp, #4]
900153d6:	f8d8 3000 	ldr.w	r3, [r8]
900153da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900153dc:	4798      	blx	r3
900153de:	9b01      	ldr	r3, [sp, #4]
900153e0:	4418      	add	r0, r3
900153e2:	4406      	add	r6, r0
900153e4:	b2b6      	uxth	r6, r6
900153e6:	3401      	adds	r4, #1
900153e8:	e7d2      	b.n	90015390 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900153ea:	4630      	mov	r0, r6
900153ec:	b005      	add	sp, #20
900153ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900153f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900153f2:	2a02      	cmp	r2, #2
900153f4:	b530      	push	{r4, r5, lr}
900153f6:	d011      	beq.n	9001541c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900153f8:	2a03      	cmp	r2, #3
900153fa:	d01c      	beq.n	90015436 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900153fc:	2a01      	cmp	r2, #1
900153fe:	d10c      	bne.n	9001541a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015400:	888b      	ldrh	r3, [r1, #4]
90015402:	8801      	ldrh	r1, [r0, #0]
90015404:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015408:	1a5b      	subs	r3, r3, r1
9001540a:	8844      	ldrh	r4, [r0, #2]
9001540c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015410:	1a9b      	subs	r3, r3, r2
90015412:	8004      	strh	r4, [r0, #0]
90015414:	8081      	strh	r1, [r0, #4]
90015416:	8043      	strh	r3, [r0, #2]
90015418:	80c2      	strh	r2, [r0, #6]
9001541a:	bd30      	pop	{r4, r5, pc}
9001541c:	88cb      	ldrh	r3, [r1, #6]
9001541e:	8842      	ldrh	r2, [r0, #2]
90015420:	1a9b      	subs	r3, r3, r2
90015422:	88c2      	ldrh	r2, [r0, #6]
90015424:	1a9b      	subs	r3, r3, r2
90015426:	888a      	ldrh	r2, [r1, #4]
90015428:	8801      	ldrh	r1, [r0, #0]
9001542a:	8043      	strh	r3, [r0, #2]
9001542c:	1a52      	subs	r2, r2, r1
9001542e:	8881      	ldrh	r1, [r0, #4]
90015430:	1a52      	subs	r2, r2, r1
90015432:	8002      	strh	r2, [r0, #0]
90015434:	e7f1      	b.n	9001541a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015436:	88cb      	ldrh	r3, [r1, #6]
90015438:	8841      	ldrh	r1, [r0, #2]
9001543a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001543e:	1a5b      	subs	r3, r3, r1
90015440:	f9b0 5000 	ldrsh.w	r5, [r0]
90015444:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015448:	1a9b      	subs	r3, r3, r2
9001544a:	8045      	strh	r5, [r0, #2]
9001544c:	8082      	strh	r2, [r0, #4]
9001544e:	8003      	strh	r3, [r0, #0]
90015450:	80c4      	strh	r4, [r0, #6]
90015452:	e7e2      	b.n	9001541a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90015454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90015454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015458:	b09f      	sub	sp, #124	; 0x7c
9001545a:	9116      	str	r1, [sp, #88]	; 0x58
9001545c:	9317      	str	r3, [sp, #92]	; 0x5c
9001545e:	9929      	ldr	r1, [sp, #164]	; 0xa4
90015460:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015462:	8809      	ldrh	r1, [r1, #0]
90015464:	889b      	ldrh	r3, [r3, #4]
90015466:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
9001546a:	440b      	add	r3, r1
9001546c:	9212      	str	r2, [sp, #72]	; 0x48
9001546e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90015472:	b21b      	sxth	r3, r3
90015474:	9011      	str	r0, [sp, #68]	; 0x44
90015476:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
9001547a:	9310      	str	r3, [sp, #64]	; 0x40
9001547c:	f8d8 3000 	ldr.w	r3, [r8]
90015480:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90015484:	7b19      	ldrb	r1, [r3, #12]
90015486:	7adb      	ldrb	r3, [r3, #11]
90015488:	9114      	str	r1, [sp, #80]	; 0x50
9001548a:	9315      	str	r3, [sp, #84]	; 0x54
9001548c:	2a00      	cmp	r2, #0
9001548e:	d06a      	beq.n	90015566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90015490:	f898 3010 	ldrb.w	r3, [r8, #16]
90015494:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90015496:	2b06      	cmp	r3, #6
90015498:	bf14      	ite	ne
9001549a:	2301      	movne	r3, #1
9001549c:	2302      	moveq	r3, #2
9001549e:	4413      	add	r3, r2
900154a0:	f04f 0900 	mov.w	r9, #0
900154a4:	930f      	str	r3, [sp, #60]	; 0x3c
900154a6:	464c      	mov	r4, r9
900154a8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
900154ac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
900154b0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
900154b4:	4293      	cmp	r3, r2
900154b6:	f280 808f 	bge.w	900155d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900154ba:	2300      	movs	r3, #0
900154bc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
900154c0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
900154c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900154c8:	429c      	cmp	r4, r3
900154ca:	d006      	beq.n	900154da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
900154cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900154ce:	f242 020b 	movw	r2, #8203	; 0x200b
900154d2:	4294      	cmp	r4, r2
900154d4:	bf18      	it	ne
900154d6:	4623      	movne	r3, r4
900154d8:	930d      	str	r3, [sp, #52]	; 0x34
900154da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900154dc:	992d      	ldr	r1, [sp, #180]	; 0xb4
900154de:	f8d8 2000 	ldr.w	r2, [r8]
900154e2:	428b      	cmp	r3, r1
900154e4:	db41      	blt.n	9001556a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900154e6:	6813      	ldr	r3, [r2, #0]
900154e8:	4610      	mov	r0, r2
900154ea:	695b      	ldr	r3, [r3, #20]
900154ec:	4798      	blx	r3
900154ee:	4604      	mov	r4, r0
900154f0:	f8d8 0000 	ldr.w	r0, [r8]
900154f4:	aa1d      	add	r2, sp, #116	; 0x74
900154f6:	4621      	mov	r1, r4
900154f8:	6803      	ldr	r3, [r0, #0]
900154fa:	689d      	ldr	r5, [r3, #8]
900154fc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90015500:	47a8      	blx	r5
90015502:	901c      	str	r0, [sp, #112]	; 0x70
90015504:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015508:	429c      	cmp	r4, r3
9001550a:	f000 80ec 	beq.w	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001550e:	f242 030b 	movw	r3, #8203	; 0x200b
90015512:	429c      	cmp	r4, r3
90015514:	f000 80e7 	beq.w	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015518:	2c00      	cmp	r4, #0
9001551a:	f000 80f9 	beq.w	90015710 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001551e:	2c0a      	cmp	r4, #10
90015520:	d060      	beq.n	900155e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90015522:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90015524:	b36a      	cbz	r2, 90015582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90015526:	8894      	ldrh	r4, [r2, #4]
90015528:	f1bb 0f00 	cmp.w	fp, #0
9001552c:	d03b      	beq.n	900155a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
9001552e:	f892 900d 	ldrb.w	r9, [r2, #13]
90015532:	f1bb 0f01 	cmp.w	fp, #1
90015536:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001553a:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001553e:	f892 900a 	ldrb.w	r9, [r2, #10]
90015542:	ea49 0903 	orr.w	r9, r9, r3
90015546:	d134      	bne.n	900155b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
90015548:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001554a:	eba6 0609 	sub.w	r6, r6, r9
9001554e:	2b00      	cmp	r3, #0
90015550:	d14f      	bne.n	900155f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90015552:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015554:	eb09 0306 	add.w	r3, r9, r6
90015558:	4413      	add	r3, r2
9001555a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001555c:	f9b2 2000 	ldrsh.w	r2, [r2]
90015560:	4293      	cmp	r3, r2
90015562:	da51      	bge.n	90015608 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90015564:	e038      	b.n	900155d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90015566:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90015568:	e79a      	b.n	900154a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
9001556a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001556e:	4659      	mov	r1, fp
90015570:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015572:	9301      	str	r3, [sp, #4]
90015574:	ab1d      	add	r3, sp, #116	; 0x74
90015576:	9300      	str	r3, [sp, #0]
90015578:	ab1c      	add	r3, sp, #112	; 0x70
9001557a:	f003 f85a 	bl	90018632 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001557e:	4604      	mov	r4, r0
90015580:	e7c0      	b.n	90015504 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90015582:	f8d8 0000 	ldr.w	r0, [r8]
90015586:	6803      	ldr	r3, [r0, #0]
90015588:	691b      	ldr	r3, [r3, #16]
9001558a:	4798      	blx	r3
9001558c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015590:	4298      	cmp	r0, r3
90015592:	f000 80a8 	beq.w	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015596:	f242 030b 	movw	r3, #8203	; 0x200b
9001559a:	4298      	cmp	r0, r3
9001559c:	f000 80a3 	beq.w	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900155a0:	f1bb 0f00 	cmp.w	fp, #0
900155a4:	d100      	bne.n	900155a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
900155a6:	444e      	add	r6, r9
900155a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900155aa:	2a00      	cmp	r2, #0
900155ac:	d1bf      	bne.n	9001552e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900155ae:	4691      	mov	r9, r2
900155b0:	e099      	b.n	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900155b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900155b4:	2b00      	cmp	r3, #0
900155b6:	f000 80ad 	beq.w	90015714 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
900155ba:	f1bb 0f00 	cmp.w	fp, #0
900155be:	d118      	bne.n	900155f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
900155c0:	f8d8 0000 	ldr.w	r0, [r8]
900155c4:	990d      	ldr	r1, [sp, #52]	; 0x34
900155c6:	6803      	ldr	r3, [r0, #0]
900155c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900155ca:	4798      	blx	r3
900155cc:	4406      	add	r6, r0
900155ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
900155d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
900155d2:	1af3      	subs	r3, r6, r3
900155d4:	4293      	cmp	r3, r2
900155d6:	dd17      	ble.n	90015608 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
900155d8:	2c00      	cmp	r4, #0
900155da:	f000 8099 	beq.w	90015710 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
900155de:	2c0a      	cmp	r4, #10
900155e0:	f040 8087 	bne.w	900156f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
900155e4:	240a      	movs	r4, #10
900155e6:	fab4 f084 	clz	r0, r4
900155ea:	0940      	lsrs	r0, r0, #5
900155ec:	b01f      	add	sp, #124	; 0x7c
900155ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900155f2:	f8d8 0000 	ldr.w	r0, [r8]
900155f6:	990d      	ldr	r1, [sp, #52]	; 0x34
900155f8:	6803      	ldr	r3, [r0, #0]
900155fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900155fc:	4798      	blx	r3
900155fe:	f1bb 0f01 	cmp.w	fp, #1
90015602:	eba6 0600 	sub.w	r6, r6, r0
90015606:	d0a4      	beq.n	90015552 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90015608:	981c      	ldr	r0, [sp, #112]	; 0x70
9001560a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001560c:	f990 1009 	ldrsb.w	r1, [r0, #9]
90015610:	f9b3 7000 	ldrsh.w	r7, [r3]
90015614:	7b43      	ldrb	r3, [r0, #13]
90015616:	4431      	add	r1, r6
90015618:	015b      	lsls	r3, r3, #5
9001561a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001561e:	7983      	ldrb	r3, [r0, #6]
90015620:	4313      	orrs	r3, r2
90015622:	440b      	add	r3, r1
90015624:	42bb      	cmp	r3, r7
90015626:	db5e      	blt.n	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015628:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001562a:	4299      	cmp	r1, r3
9001562c:	da5b      	bge.n	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001562e:	f8d8 0000 	ldr.w	r0, [r8]
90015632:	42b7      	cmp	r7, r6
90015634:	6803      	ldr	r3, [r0, #0]
90015636:	bfcc      	ite	gt
90015638:	1bbf      	subgt	r7, r7, r6
9001563a:	2700      	movle	r7, #0
9001563c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001563e:	bfc8      	it	gt
90015640:	b2bf      	uxthgt	r7, r7
90015642:	4798      	blx	r3
90015644:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90015646:	7b5a      	ldrb	r2, [r3, #13]
90015648:	00d1      	lsls	r1, r2, #3
9001564a:	f401 7580 	and.w	r5, r1, #256	; 0x100
9001564e:	7a19      	ldrb	r1, [r3, #8]
90015650:	4329      	orrs	r1, r5
90015652:	0655      	lsls	r5, r2, #25
90015654:	9d17      	ldr	r5, [sp, #92]	; 0x5c
90015656:	bf48      	it	mi
90015658:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
9001565c:	4405      	add	r5, r0
9001565e:	bf48      	it	mi
90015660:	b209      	sxthmi	r1, r1
90015662:	1a6d      	subs	r5, r5, r1
90015664:	9929      	ldr	r1, [sp, #164]	; 0xa4
90015666:	b2ad      	uxth	r5, r5
90015668:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
9001566c:	fa0f fa85 	sxth.w	sl, r5
90015670:	4551      	cmp	r1, sl
90015672:	dd3c      	ble.n	900156ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
90015674:	0112      	lsls	r2, r2, #4
90015676:	79d8      	ldrb	r0, [r3, #7]
90015678:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001567c:	4302      	orrs	r2, r0
9001567e:	4492      	add	sl, r2
90015680:	4551      	cmp	r1, sl
90015682:	dc30      	bgt.n	900156e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015684:	1b4d      	subs	r5, r1, r5
90015686:	468a      	mov	sl, r1
90015688:	b22d      	sxth	r5, r5
9001568a:	9319      	str	r3, [sp, #100]	; 0x64
9001568c:	b2ad      	uxth	r5, r5
9001568e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90015690:	f8d8 0000 	ldr.w	r0, [r8]
90015694:	681a      	ldr	r2, [r3, #0]
90015696:	6801      	ldr	r1, [r0, #0]
90015698:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
9001569a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001569c:	9313      	str	r3, [sp, #76]	; 0x4c
9001569e:	9218      	str	r2, [sp, #96]	; 0x60
900156a0:	6c09      	ldr	r1, [r1, #64]	; 0x40
900156a2:	4788      	blx	r1
900156a4:	f898 1006 	ldrb.w	r1, [r8, #6]
900156a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900156aa:	910b      	str	r1, [sp, #44]	; 0x2c
900156ac:	f898 100e 	ldrb.w	r1, [r8, #14]
900156b0:	9a18      	ldr	r2, [sp, #96]	; 0x60
900156b2:	910a      	str	r1, [sp, #40]	; 0x28
900156b4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
900156b8:	9109      	str	r1, [sp, #36]	; 0x24
900156ba:	f8d8 1008 	ldr.w	r1, [r8, #8]
900156be:	9305      	str	r3, [sp, #20]
900156c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900156c2:	9206      	str	r2, [sp, #24]
900156c4:	9304      	str	r3, [sp, #16]
900156c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
900156c8:	f8cd a004 	str.w	sl, [sp, #4]
900156cc:	e9cd 7502 	strd	r7, r5, [sp, #8]
900156d0:	4437      	add	r7, r6
900156d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900156d4:	b23f      	sxth	r7, r7
900156d6:	e9cd 0107 	strd	r0, r1, [sp, #28]
900156da:	9700      	str	r7, [sp, #0]
900156dc:	9916      	ldr	r1, [sp, #88]	; 0x58
900156de:	681a      	ldr	r2, [r3, #0]
900156e0:	9811      	ldr	r0, [sp, #68]	; 0x44
900156e2:	685b      	ldr	r3, [r3, #4]
900156e4:	47a8      	blx	r5
900156e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900156e8:	3301      	adds	r3, #1
900156ea:	930e      	str	r3, [sp, #56]	; 0x38
900156ec:	e6e0      	b.n	900154b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
900156ee:	2500      	movs	r5, #0
900156f0:	e7cb      	b.n	9001568a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
900156f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900156f4:	3501      	adds	r5, #1
900156f6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900156f8:	429d      	cmp	r5, r3
900156fa:	f6bf af74 	bge.w	900155e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
900156fe:	4659      	mov	r1, fp
90015700:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015702:	f7ee fcf1 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015706:	4604      	mov	r4, r0
90015708:	b110      	cbz	r0, 90015710 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001570a:	280a      	cmp	r0, #10
9001570c:	d1f2      	bne.n	900156f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
9001570e:	e769      	b.n	900155e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90015710:	2400      	movs	r4, #0
90015712:	e768      	b.n	900155e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90015714:	f1bb 0f00 	cmp.w	fp, #0
90015718:	f43f af59 	beq.w	900155ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
9001571c:	e774      	b.n	90015608 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

9001571e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001571e:	b530      	push	{r4, r5, lr}
90015720:	8ac4      	ldrh	r4, [r0, #22]
90015722:	8b45      	ldrh	r5, [r0, #26]
90015724:	8343      	strh	r3, [r0, #26]
90015726:	442c      	add	r4, r5
90015728:	1ae4      	subs	r4, r4, r3
9001572a:	8b83      	ldrh	r3, [r0, #28]
9001572c:	82c4      	strh	r4, [r0, #22]
9001572e:	8b04      	ldrh	r4, [r0, #24]
90015730:	4422      	add	r2, r4
90015732:	440c      	add	r4, r1
90015734:	1a59      	subs	r1, r3, r1
90015736:	83c2      	strh	r2, [r0, #30]
90015738:	8304      	strh	r4, [r0, #24]
9001573a:	8381      	strh	r1, [r0, #28]
9001573c:	bd30      	pop	{r4, r5, pc}

9001573e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001573e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015742:	4604      	mov	r4, r0
90015744:	8a47      	ldrh	r7, [r0, #18]
90015746:	68c0      	ldr	r0, [r0, #12]
90015748:	b085      	sub	sp, #20
9001574a:	6803      	ldr	r3, [r0, #0]
9001574c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001574e:	4798      	blx	r3
90015750:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90015754:	7a63      	ldrb	r3, [r4, #9]
90015756:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001575a:	3b01      	subs	r3, #1
9001575c:	42b7      	cmp	r7, r6
9001575e:	bfac      	ite	ge
90015760:	f04f 0900 	movge.w	r9, #0
90015764:	f04f 0901 	movlt.w	r9, #1
90015768:	2b05      	cmp	r3, #5
9001576a:	d804      	bhi.n	90015776 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001576c:	e8df f003 	tbb	[pc, r3]
90015770:	470f0854 	.word	0x470f0854
90015774:	4c4c      	.short	0x4c4c
90015776:	2500      	movs	r5, #0
90015778:	46a9      	mov	r9, r5
9001577a:	462e      	mov	r6, r5
9001577c:	462f      	mov	r7, r5
9001577e:	e00e      	b.n	9001579e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015780:	42b7      	cmp	r7, r6
90015782:	f04f 0500 	mov.w	r5, #0
90015786:	bfb4      	ite	lt
90015788:	2600      	movlt	r6, #0
9001578a:	2601      	movge	r6, #1
9001578c:	e7f6      	b.n	9001577c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001578e:	42b7      	cmp	r7, r6
90015790:	464d      	mov	r5, r9
90015792:	f04f 0900 	mov.w	r9, #0
90015796:	bfb4      	ite	lt
90015798:	2600      	movlt	r6, #0
9001579a:	2601      	movge	r6, #1
9001579c:	464f      	mov	r7, r9
9001579e:	f04f 0800 	mov.w	r8, #0
900157a2:	f8a4 8016 	strh.w	r8, [r4, #22]
900157a6:	f8a4 8018 	strh.w	r8, [r4, #24]
900157aa:	f8cd 8004 	str.w	r8, [sp, #4]
900157ae:	2300      	movs	r3, #0
900157b0:	9303      	str	r3, [sp, #12]
900157b2:	8823      	ldrh	r3, [r4, #0]
900157b4:	2b20      	cmp	r3, #32
900157b6:	d033      	beq.n	90015820 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900157b8:	f242 010b 	movw	r1, #8203	; 0x200b
900157bc:	1a5a      	subs	r2, r3, r1
900157be:	f1d2 0a00 	rsbs	sl, r2, #0
900157c2:	eb4a 0a02 	adc.w	sl, sl, r2
900157c6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900157ca:	4293      	cmp	r3, r2
900157cc:	d008      	beq.n	900157e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900157ce:	428b      	cmp	r3, r1
900157d0:	9a01      	ldr	r2, [sp, #4]
900157d2:	bf0e      	itee	eq
900157d4:	f04f 0a01 	moveq.w	sl, #1
900157d8:	461a      	movne	r2, r3
900157da:	f04f 0a00 	movne.w	sl, #0
900157de:	9201      	str	r2, [sp, #4]
900157e0:	ab03      	add	r3, sp, #12
900157e2:	68e2      	ldr	r2, [r4, #12]
900157e4:	7a21      	ldrb	r1, [r4, #8]
900157e6:	6860      	ldr	r0, [r4, #4]
900157e8:	f002 feda 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900157ec:	8020      	strh	r0, [r4, #0]
900157ee:	b9d8      	cbnz	r0, 90015828 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900157f0:	8ba2      	ldrh	r2, [r4, #28]
900157f2:	2300      	movs	r3, #0
900157f4:	4611      	mov	r1, r2
900157f6:	4620      	mov	r0, r4
900157f8:	f7ff ff91 	bl	9001571e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900157fc:	e06e      	b.n	900158dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900157fe:	2500      	movs	r5, #0
90015800:	2701      	movs	r7, #1
90015802:	46a9      	mov	r9, r5
90015804:	462e      	mov	r6, r5
90015806:	e7ca      	b.n	9001579e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015808:	42b7      	cmp	r7, r6
9001580a:	f04f 0500 	mov.w	r5, #0
9001580e:	bfb4      	ite	lt
90015810:	2700      	movlt	r7, #0
90015812:	2701      	movge	r7, #1
90015814:	462e      	mov	r6, r5
90015816:	e7c2      	b.n	9001579e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015818:	2500      	movs	r5, #0
9001581a:	2601      	movs	r6, #1
9001581c:	46a9      	mov	r9, r5
9001581e:	e7ad      	b.n	9001577c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90015820:	9301      	str	r3, [sp, #4]
90015822:	f04f 0a01 	mov.w	sl, #1
90015826:	e7db      	b.n	900157e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90015828:	8b63      	ldrh	r3, [r4, #26]
9001582a:	280a      	cmp	r0, #10
9001582c:	f103 0301 	add.w	r3, r3, #1
90015830:	8363      	strh	r3, [r4, #26]
90015832:	d0dd      	beq.n	900157f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90015834:	9a03      	ldr	r2, [sp, #12]
90015836:	bb62      	cbnz	r2, 90015892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90015838:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001583c:	4298      	cmp	r0, r3
9001583e:	d003      	beq.n	90015848 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015840:	f242 030b 	movw	r3, #8203	; 0x200b
90015844:	4298      	cmp	r0, r3
90015846:	d1b2      	bne.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015848:	8823      	ldrh	r3, [r4, #0]
9001584a:	8ba1      	ldrh	r1, [r4, #28]
9001584c:	2b20      	cmp	r3, #32
9001584e:	d003      	beq.n	90015858 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90015850:	f242 000b 	movw	r0, #8203	; 0x200b
90015854:	4283      	cmp	r3, r0
90015856:	d131      	bne.n	900158bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90015858:	f1ba 0f00 	cmp.w	sl, #0
9001585c:	bf0a      	itet	eq
9001585e:	4688      	moveq	r8, r1
90015860:	4650      	movne	r0, sl
90015862:	2001      	moveq	r0, #1
90015864:	440a      	add	r2, r1
90015866:	8b23      	ldrh	r3, [r4, #24]
90015868:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001586c:	b292      	uxth	r2, r2
9001586e:	83a2      	strh	r2, [r4, #28]
90015870:	4413      	add	r3, r2
90015872:	f1b9 0f00 	cmp.w	r9, #0
90015876:	d102      	bne.n	9001587e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90015878:	2d00      	cmp	r5, #0
9001587a:	d042      	beq.n	90015902 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
9001587c:	b300      	cbz	r0, 900158c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
9001587e:	8c21      	ldrh	r1, [r4, #32]
90015880:	4419      	add	r1, r3
90015882:	458c      	cmp	ip, r1
90015884:	da37      	bge.n	900158f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015886:	8ae1      	ldrh	r1, [r4, #22]
90015888:	2900      	cmp	r1, #0
9001588a:	d034      	beq.n	900158f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001588c:	4563      	cmp	r3, ip
9001588e:	dd8e      	ble.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015890:	e01d      	b.n	900158ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90015892:	8893      	ldrh	r3, [r2, #4]
90015894:	9901      	ldr	r1, [sp, #4]
90015896:	8023      	strh	r3, [r4, #0]
90015898:	f892 b00d 	ldrb.w	fp, [r2, #13]
9001589c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900158a0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900158a4:	f892 b00a 	ldrb.w	fp, [r2, #10]
900158a8:	ea4b 0b00 	orr.w	fp, fp, r0
900158ac:	68e0      	ldr	r0, [r4, #12]
900158ae:	6803      	ldr	r3, [r0, #0]
900158b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900158b2:	4798      	blx	r3
900158b4:	eb0b 0200 	add.w	r2, fp, r0
900158b8:	b292      	uxth	r2, r2
900158ba:	e7c5      	b.n	90015848 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900158bc:	2000      	movs	r0, #0
900158be:	e7d1      	b.n	90015864 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900158c0:	4563      	cmp	r3, ip
900158c2:	f77f af74 	ble.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900158c6:	8ae3      	ldrh	r3, [r4, #22]
900158c8:	2b00      	cmp	r3, #0
900158ca:	f43f af70 	beq.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900158ce:	2301      	movs	r3, #1
900158d0:	8c22      	ldrh	r2, [r4, #32]
900158d2:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
900158d6:	8be3      	ldrh	r3, [r4, #30]
900158d8:	4413      	add	r3, r2
900158da:	83e3      	strh	r3, [r4, #30]
900158dc:	68e0      	ldr	r0, [r4, #12]
900158de:	6803      	ldr	r3, [r0, #0]
900158e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900158e2:	4798      	blx	r3
900158e4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900158e8:	4418      	add	r0, r3
900158ea:	8a63      	ldrh	r3, [r4, #18]
900158ec:	1a18      	subs	r0, r3, r0
900158ee:	8260      	strh	r0, [r4, #18]
900158f0:	b005      	add	sp, #20
900158f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900158f6:	2300      	movs	r3, #0
900158f8:	4611      	mov	r1, r2
900158fa:	4620      	mov	r0, r4
900158fc:	f7ff ff0f 	bl	9001571e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015900:	e755      	b.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015902:	4563      	cmp	r3, ip
90015904:	dd14      	ble.n	90015930 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90015906:	b117      	cbz	r7, 9001590e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90015908:	2301      	movs	r3, #1
9001590a:	460a      	mov	r2, r1
9001590c:	e772      	b.n	900157f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001590e:	2e00      	cmp	r6, #0
90015910:	f43f af4d 	beq.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015914:	2800      	cmp	r0, #0
90015916:	f47f af4a 	bne.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001591a:	f1ba 0f00 	cmp.w	sl, #0
9001591e:	d002      	beq.n	90015926 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90015920:	2301      	movs	r3, #1
90015922:	4642      	mov	r2, r8
90015924:	e767      	b.n	900157f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90015926:	8ae3      	ldrh	r3, [r4, #22]
90015928:	2b00      	cmp	r3, #0
9001592a:	f43f af40 	beq.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001592e:	e7d5      	b.n	900158dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015930:	2800      	cmp	r0, #0
90015932:	f47f af3c 	bne.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015936:	f1ba 0f00 	cmp.w	sl, #0
9001593a:	f43f af38 	beq.w	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001593e:	2301      	movs	r3, #1
90015940:	4642      	mov	r2, r8
90015942:	e7da      	b.n	900158fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90015944 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90015944:	b5f0      	push	{r4, r5, r6, r7, lr}
90015946:	4605      	mov	r5, r0
90015948:	b08f      	sub	sp, #60	; 0x3c
9001594a:	4617      	mov	r7, r2
9001594c:	461c      	mov	r4, r3
9001594e:	460e      	mov	r6, r1
90015950:	b1d1      	cbz	r1, 90015988 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90015952:	681b      	ldr	r3, [r3, #0]
90015954:	4620      	mov	r0, r4
90015956:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015958:	4798      	blx	r3
9001595a:	4240      	negs	r0, r0
9001595c:	9603      	str	r6, [sp, #12]
9001595e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015962:	b200      	sxth	r0, r0
90015964:	9700      	str	r7, [sp, #0]
90015966:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001596a:	4629      	mov	r1, r5
9001596c:	e9cd 4001 	strd	r4, r0, [sp, #4]
90015970:	2401      	movs	r4, #1
90015972:	a805      	add	r0, sp, #20
90015974:	f7ff fcbe 	bl	900152f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015978:	a805      	add	r0, sp, #20
9001597a:	f7ff fee0 	bl	9001573e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001597e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015982:	b163      	cbz	r3, 9001599e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90015984:	3401      	adds	r4, #1
90015986:	e7f7      	b.n	90015978 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90015988:	2401      	movs	r4, #1
9001598a:	f002 fed5 	bl	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001598e:	280a      	cmp	r0, #10
90015990:	4628      	mov	r0, r5
90015992:	bf08      	it	eq
90015994:	3401      	addeq	r4, #1
90015996:	f002 fecf 	bl	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001599a:	2800      	cmp	r0, #0
9001599c:	d1f7      	bne.n	9001598e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
9001599e:	b2a0      	uxth	r0, r4
900159a0:	b00f      	add	sp, #60	; 0x3c
900159a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900159a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900159a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900159a8:	b0e3      	sub	sp, #396	; 0x18c
900159aa:	461c      	mov	r4, r3
900159ac:	4683      	mov	fp, r0
900159ae:	4688      	mov	r8, r1
900159b0:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900159b2:	2b00      	cmp	r3, #0
900159b4:	f000 8112 	beq.w	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159b8:	6823      	ldr	r3, [r4, #0]
900159ba:	2b00      	cmp	r3, #0
900159bc:	f000 810e 	beq.w	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159c0:	7ba3      	ldrb	r3, [r4, #14]
900159c2:	2b00      	cmp	r3, #0
900159c4:	f000 810a 	beq.w	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900159c8:	ad0a      	add	r5, sp, #40	; 0x28
900159ca:	6810      	ldr	r0, [r2, #0]
900159cc:	6851      	ldr	r1, [r2, #4]
900159ce:	462b      	mov	r3, r5
900159d0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900159d4:	c303      	stmia	r3!, {r0, r1}
900159d6:	2100      	movs	r1, #0
900159d8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900159dc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900159e0:	4628      	mov	r0, r5
900159e2:	910c      	str	r1, [sp, #48]	; 0x30
900159e4:	a90c      	add	r1, sp, #48	; 0x30
900159e6:	79a2      	ldrb	r2, [r4, #6]
900159e8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900159ec:	f7ff fd01 	bl	900153f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900159f0:	a90c      	add	r1, sp, #48	; 0x30
900159f2:	79a2      	ldrb	r2, [r4, #6]
900159f4:	4608      	mov	r0, r1
900159f6:	f7ff fcfc 	bl	900153f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900159fa:	a817      	add	r0, sp, #92	; 0x5c
900159fc:	f002 fa6f 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90015a00:	6820      	ldr	r0, [r4, #0]
90015a02:	6803      	ldr	r3, [r0, #0]
90015a04:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015a06:	4798      	blx	r3
90015a08:	4606      	mov	r6, r0
90015a0a:	6820      	ldr	r0, [r4, #0]
90015a0c:	6803      	ldr	r3, [r0, #0]
90015a0e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015a10:	4798      	blx	r3
90015a12:	4633      	mov	r3, r6
90015a14:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90015a16:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90015a18:	9000      	str	r0, [sp, #0]
90015a1a:	a817      	add	r0, sp, #92	; 0x5c
90015a1c:	f002 faba 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015a20:	6820      	ldr	r0, [r4, #0]
90015a22:	f894 a004 	ldrb.w	sl, [r4, #4]
90015a26:	6803      	ldr	r3, [r0, #0]
90015a28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015a2a:	4798      	blx	r3
90015a2c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90015a30:	6823      	ldr	r3, [r4, #0]
90015a32:	4607      	mov	r7, r0
90015a34:	4406      	add	r6, r0
90015a36:	a830      	add	r0, sp, #192	; 0xc0
90015a38:	f893 9009 	ldrb.w	r9, [r3, #9]
90015a3c:	f002 fa4f 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90015a40:	7c23      	ldrb	r3, [r4, #16]
90015a42:	b17b      	cbz	r3, 90015a64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90015a44:	6820      	ldr	r0, [r4, #0]
90015a46:	6803      	ldr	r3, [r0, #0]
90015a48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015a4a:	4798      	blx	r3
90015a4c:	9009      	str	r0, [sp, #36]	; 0x24
90015a4e:	6820      	ldr	r0, [r4, #0]
90015a50:	6802      	ldr	r2, [r0, #0]
90015a52:	6d12      	ldr	r2, [r2, #80]	; 0x50
90015a54:	4790      	blx	r2
90015a56:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015a58:	9000      	str	r0, [sp, #0]
90015a5a:	a830      	add	r0, sp, #192	; 0xc0
90015a5c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90015a5e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90015a60:	f002 fa98 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015a64:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90015a68:	a80e      	add	r0, sp, #56	; 0x38
90015a6a:	7be2      	ldrb	r2, [r4, #15]
90015a6c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90015a70:	1a8a      	subs	r2, r1, r2
90015a72:	7c21      	ldrb	r1, [r4, #16]
90015a74:	9103      	str	r1, [sp, #12]
90015a76:	b292      	uxth	r2, r2
90015a78:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90015a7c:	9102      	str	r1, [sp, #8]
90015a7e:	6821      	ldr	r1, [r4, #0]
90015a80:	9101      	str	r1, [sp, #4]
90015a82:	7961      	ldrb	r1, [r4, #5]
90015a84:	9100      	str	r1, [sp, #0]
90015a86:	a930      	add	r1, sp, #192	; 0xc0
90015a88:	f7ff fc34 	bl	900152f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015a8c:	2e00      	cmp	r6, #0
90015a8e:	dc5b      	bgt.n	90015b48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90015a90:	af17      	add	r7, sp, #92	; 0x5c
90015a92:	f04f 0900 	mov.w	r9, #0
90015a96:	7c23      	ldrb	r3, [r4, #16]
90015a98:	2b00      	cmp	r3, #0
90015a9a:	f000 80b1 	beq.w	90015c00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90015a9e:	a80e      	add	r0, sp, #56	; 0x38
90015aa0:	f7ff fe4d 	bl	9001573e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015aa4:	f1ba 0f00 	cmp.w	sl, #0
90015aa8:	f000 80a5 	beq.w	90015bf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015aac:	7c23      	ldrb	r3, [r4, #16]
90015aae:	2264      	movs	r2, #100	; 0x64
90015ab0:	4639      	mov	r1, r7
90015ab2:	a849      	add	r0, sp, #292	; 0x124
90015ab4:	9309      	str	r3, [sp, #36]	; 0x24
90015ab6:	f012 f8c9 	bl	90027c4c <memcpy>
90015aba:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015abc:	2b00      	cmp	r3, #0
90015abe:	f000 80a7 	beq.w	90015c10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90015ac2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
90015ac6:	7922      	ldrb	r2, [r4, #4]
90015ac8:	2a01      	cmp	r2, #1
90015aca:	f040 808a 	bne.w	90015be2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90015ace:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90015ad2:	1ac0      	subs	r0, r0, r3
90015ad4:	2302      	movs	r3, #2
90015ad6:	fb90 f0f3 	sdiv	r0, r0, r3
90015ada:	b200      	sxth	r0, r0
90015adc:	7c23      	ldrb	r3, [r4, #16]
90015ade:	2b00      	cmp	r3, #0
90015ae0:	f000 808b 	beq.w	90015bfa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90015ae4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
90015ae8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90015aec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015af0:	e9cd 2105 	strd	r2, r1, [sp, #20]
90015af4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
90015af8:	2100      	movs	r1, #0
90015afa:	4410      	add	r0, r2
90015afc:	4642      	mov	r2, r8
90015afe:	b200      	sxth	r0, r0
90015b00:	e9cd 9703 	strd	r9, r7, [sp, #12]
90015b04:	9000      	str	r0, [sp, #0]
90015b06:	4658      	mov	r0, fp
90015b08:	e9cd 5401 	strd	r5, r4, [sp, #4]
90015b0c:	f7ff fca2 	bl	90015454 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90015b10:	2800      	cmp	r0, #0
90015b12:	d163      	bne.n	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b14:	b2b2      	uxth	r2, r6
90015b16:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90015b1a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90015b1e:	4413      	add	r3, r2
90015b20:	1a8a      	subs	r2, r1, r2
90015b22:	b21b      	sxth	r3, r3
90015b24:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90015b28:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90015b2c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90015b30:	2a00      	cmp	r2, #0
90015b32:	d153      	bne.n	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b34:	6822      	ldr	r2, [r4, #0]
90015b36:	8869      	ldrh	r1, [r5, #2]
90015b38:	7a12      	ldrb	r2, [r2, #8]
90015b3a:	1a9b      	subs	r3, r3, r2
90015b3c:	88ea      	ldrh	r2, [r5, #6]
90015b3e:	440a      	add	r2, r1
90015b40:	b212      	sxth	r2, r2
90015b42:	4293      	cmp	r3, r2
90015b44:	dda7      	ble.n	90015a96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90015b46:	e049      	b.n	90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b48:	7c23      	ldrb	r3, [r4, #16]
90015b4a:	444f      	add	r7, r9
90015b4c:	b1c3      	cbz	r3, 90015b80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90015b4e:	f64f 79ff 	movw	r9, #65535	; 0xffff
90015b52:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015b56:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015b5a:	443b      	add	r3, r7
90015b5c:	4293      	cmp	r3, r2
90015b5e:	da97      	bge.n	90015a90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015b60:	a80e      	add	r0, sp, #56	; 0x38
90015b62:	f7ff fdec 	bl	9001573e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015b66:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
90015b6a:	3b01      	subs	r3, #1
90015b6c:	b29b      	uxth	r3, r3
90015b6e:	454b      	cmp	r3, r9
90015b70:	9309      	str	r3, [sp, #36]	; 0x24
90015b72:	d021      	beq.n	90015bb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90015b74:	7961      	ldrb	r1, [r4, #5]
90015b76:	a817      	add	r0, sp, #92	; 0x5c
90015b78:	f7ee fab6 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015b7e:	e7f4      	b.n	90015b6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90015b80:	fa1f f986 	uxth.w	r9, r6
90015b84:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90015b88:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015b8c:	443b      	add	r3, r7
90015b8e:	4293      	cmp	r3, r2
90015b90:	f6bf af7e 	bge.w	90015a90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015b94:	a817      	add	r0, sp, #92	; 0x5c
90015b96:	f002 fdcf 	bl	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015b9a:	b1f8      	cbz	r0, 90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b9c:	280a      	cmp	r0, #10
90015b9e:	d1f1      	bne.n	90015b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015ba0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90015ba4:	444b      	add	r3, r9
90015ba6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90015baa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90015bae:	eba3 0309 	sub.w	r3, r3, r9
90015bb2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015bb6:	e7e5      	b.n	90015b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015bb8:	b2b3      	uxth	r3, r6
90015bba:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90015bbe:	441a      	add	r2, r3
90015bc0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015bc4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
90015bc8:	1ad3      	subs	r3, r2, r3
90015bca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015bce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90015bd2:	b11b      	cbz	r3, 90015bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015bd4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
90015bd8:	2b00      	cmp	r3, #0
90015bda:	d0ba      	beq.n	90015b52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90015bdc:	b063      	add	sp, #396	; 0x18c
90015bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015be2:	2a02      	cmp	r2, #2
90015be4:	d105      	bne.n	90015bf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90015be6:	7be2      	ldrb	r2, [r4, #15]
90015be8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90015bec:	1a80      	subs	r0, r0, r2
90015bee:	1ac0      	subs	r0, r0, r3
90015bf0:	e773      	b.n	90015ada <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90015bf2:	2000      	movs	r0, #0
90015bf4:	e772      	b.n	90015adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015bf6:	7be0      	ldrb	r0, [r4, #15]
90015bf8:	e770      	b.n	90015adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015bfa:	f647 72ff 	movw	r2, #32767	; 0x7fff
90015bfe:	e773      	b.n	90015ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90015c00:	f1ba 0f00 	cmp.w	sl, #0
90015c04:	d0f7      	beq.n	90015bf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015c06:	2264      	movs	r2, #100	; 0x64
90015c08:	4639      	mov	r1, r7
90015c0a:	a849      	add	r0, sp, #292	; 0x124
90015c0c:	f012 f81e 	bl	90027c4c <memcpy>
90015c10:	2300      	movs	r3, #0
90015c12:	f647 72ff 	movw	r2, #32767	; 0x7fff
90015c16:	6821      	ldr	r1, [r4, #0]
90015c18:	a849      	add	r0, sp, #292	; 0x124
90015c1a:	f7ff fbae 	bl	9001537a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90015c1e:	b203      	sxth	r3, r0
90015c20:	e751      	b.n	90015ac6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90015c22 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90015c22:	2b03      	cmp	r3, #3
90015c24:	d818      	bhi.n	90015c58 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90015c26:	e8df f003 	tbb	[pc, r3]
90015c2a:	0602      	.short	0x0602
90015c2c:	130d      	.short	0x130d
90015c2e:	f9b0 2000 	ldrsh.w	r2, [r0]
90015c32:	1850      	adds	r0, r2, r1
90015c34:	4770      	bx	lr
90015c36:	8803      	ldrh	r3, [r0, #0]
90015c38:	8880      	ldrh	r0, [r0, #4]
90015c3a:	4418      	add	r0, r3
90015c3c:	b200      	sxth	r0, r0
90015c3e:	1a80      	subs	r0, r0, r2
90015c40:	3801      	subs	r0, #1
90015c42:	4770      	bx	lr
90015c44:	8803      	ldrh	r3, [r0, #0]
90015c46:	8880      	ldrh	r0, [r0, #4]
90015c48:	4418      	add	r0, r3
90015c4a:	b200      	sxth	r0, r0
90015c4c:	1a40      	subs	r0, r0, r1
90015c4e:	e7f7      	b.n	90015c40 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90015c50:	f9b0 0000 	ldrsh.w	r0, [r0]
90015c54:	4410      	add	r0, r2
90015c56:	4770      	bx	lr
90015c58:	2000      	movs	r0, #0
90015c5a:	4770      	bx	lr

90015c5c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90015c5c:	2b03      	cmp	r3, #3
90015c5e:	d817      	bhi.n	90015c90 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90015c60:	e8df f003 	tbb	[pc, r3]
90015c64:	10090602 	.word	0x10090602
90015c68:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90015c6c:	1850      	adds	r0, r2, r1
90015c6e:	4770      	bx	lr
90015c70:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015c74:	e7fa      	b.n	90015c6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90015c76:	8843      	ldrh	r3, [r0, #2]
90015c78:	88c0      	ldrh	r0, [r0, #6]
90015c7a:	4418      	add	r0, r3
90015c7c:	b200      	sxth	r0, r0
90015c7e:	1a80      	subs	r0, r0, r2
90015c80:	3801      	subs	r0, #1
90015c82:	4770      	bx	lr
90015c84:	8843      	ldrh	r3, [r0, #2]
90015c86:	88c0      	ldrh	r0, [r0, #6]
90015c88:	4418      	add	r0, r3
90015c8a:	b200      	sxth	r0, r0
90015c8c:	1a40      	subs	r0, r0, r1
90015c8e:	e7f7      	b.n	90015c80 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90015c90:	2000      	movs	r0, #0
90015c92:	4770      	bx	lr

90015c94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90015c94:	4b01      	ldr	r3, [pc, #4]	; (90015c9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90015c96:	2200      	movs	r2, #0
90015c98:	601a      	str	r2, [r3, #0]
90015c9a:	4770      	bx	lr
90015c9c:	24039714 	.word	0x24039714

90015ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90015ca0:	4603      	mov	r3, r0
90015ca2:	b1c8      	cbz	r0, 90015cd8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90015ca4:	0c02      	lsrs	r2, r0, #16
90015ca6:	0412      	lsls	r2, r2, #16
90015ca8:	b9a2      	cbnz	r2, 90015cd4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90015caa:	0403      	lsls	r3, r0, #16
90015cac:	2010      	movs	r0, #16
90015cae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90015cb2:	bf04      	itt	eq
90015cb4:	021b      	lsleq	r3, r3, #8
90015cb6:	3008      	addeq	r0, #8
90015cb8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90015cbc:	bf04      	itt	eq
90015cbe:	011b      	lsleq	r3, r3, #4
90015cc0:	3004      	addeq	r0, #4
90015cc2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90015cc6:	bf04      	itt	eq
90015cc8:	009b      	lsleq	r3, r3, #2
90015cca:	3002      	addeq	r0, #2
90015ccc:	2b00      	cmp	r3, #0
90015cce:	db04      	blt.n	90015cda <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90015cd0:	3001      	adds	r0, #1
90015cd2:	4770      	bx	lr
90015cd4:	2000      	movs	r0, #0
90015cd6:	e7ea      	b.n	90015cae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90015cd8:	2020      	movs	r0, #32
90015cda:	4770      	bx	lr

90015cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90015cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015ce0:	b087      	sub	sp, #28
90015ce2:	460d      	mov	r5, r1
90015ce4:	4616      	mov	r6, r2
90015ce6:	4698      	mov	r8, r3
90015ce8:	4601      	mov	r1, r0
90015cea:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90015cee:	b120      	cbz	r0, 90015cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015cf0:	b11a      	cbz	r2, 90015cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015cf2:	2d1f      	cmp	r5, #31
90015cf4:	d801      	bhi.n	90015cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015cf6:	2b1f      	cmp	r3, #31
90015cf8:	d904      	bls.n	90015d04 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90015cfa:	2000      	movs	r0, #0
90015cfc:	6038      	str	r0, [r7, #0]
90015cfe:	b007      	add	sp, #28
90015d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015d04:	b97d      	cbnz	r5, 90015d26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90015d06:	b143      	cbz	r3, 90015d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90015d08:	4602      	mov	r2, r0
90015d0a:	462b      	mov	r3, r5
90015d0c:	4641      	mov	r1, r8
90015d0e:	4630      	mov	r0, r6
90015d10:	e9cd 4700 	strd	r4, r7, [sp]
90015d14:	f7ff ffe2 	bl	90015cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d18:	e7f1      	b.n	90015cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d1a:	f04f 33ff 	mov.w	r3, #4294967295
90015d1e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90015d22:	603b      	str	r3, [r7, #0]
90015d24:	e7eb      	b.n	90015cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d26:	fa32 fa05 	lsrs.w	sl, r2, r5
90015d2a:	d106      	bne.n	90015d3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90015d2c:	4346      	muls	r6, r0
90015d2e:	fbb6 f0f4 	udiv	r0, r6, r4
90015d32:	fb04 6610 	mls	r6, r4, r0, r6
90015d36:	603e      	str	r6, [r7, #0]
90015d38:	e7e1      	b.n	90015cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015d3a:	2201      	movs	r2, #1
90015d3c:	fa00 fb05 	lsl.w	fp, r0, r5
90015d40:	40aa      	lsls	r2, r5
90015d42:	fbbb f9f4 	udiv	r9, fp, r4
90015d46:	3a01      	subs	r2, #1
90015d48:	fb0a f309 	mul.w	r3, sl, r9
90015d4c:	fb04 b919 	mls	r9, r4, r9, fp
90015d50:	4016      	ands	r6, r2
90015d52:	9303      	str	r3, [sp, #12]
90015d54:	4630      	mov	r0, r6
90015d56:	f7ff ffa3 	bl	90015ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015d5a:	462b      	mov	r3, r5
90015d5c:	460a      	mov	r2, r1
90015d5e:	4601      	mov	r1, r0
90015d60:	4630      	mov	r0, r6
90015d62:	e9cd 4700 	strd	r4, r7, [sp]
90015d66:	f7ff ffb9 	bl	90015cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d6a:	4606      	mov	r6, r0
90015d6c:	4648      	mov	r0, r9
90015d6e:	eb05 0108 	add.w	r1, r5, r8
90015d72:	f7ff ff95 	bl	90015ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015d76:	ab05      	add	r3, sp, #20
90015d78:	464a      	mov	r2, r9
90015d7a:	e9cd 4300 	strd	r4, r3, [sp]
90015d7e:	4603      	mov	r3, r0
90015d80:	4650      	mov	r0, sl
90015d82:	f7ff ffab 	bl	90015cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d86:	6839      	ldr	r1, [r7, #0]
90015d88:	9a05      	ldr	r2, [sp, #20]
90015d8a:	9b03      	ldr	r3, [sp, #12]
90015d8c:	4411      	add	r1, r2
90015d8e:	fbb1 f2f4 	udiv	r2, r1, r4
90015d92:	18d3      	adds	r3, r2, r3
90015d94:	fb04 1412 	mls	r4, r4, r2, r1
90015d98:	441e      	add	r6, r3
90015d9a:	603c      	str	r4, [r7, #0]
90015d9c:	4430      	add	r0, r6
90015d9e:	e7ae      	b.n	90015cfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90015da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90015da0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015da4:	b085      	sub	sp, #20
90015da6:	f1b0 0900 	subs.w	r9, r0, #0
90015daa:	461d      	mov	r5, r3
90015dac:	4617      	mov	r7, r2
90015dae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90015db0:	bfbb      	ittet	lt
90015db2:	f1c9 0900 	rsblt	r9, r9, #0
90015db6:	f04f 36ff 	movlt.w	r6, #4294967295
90015dba:	2601      	movge	r6, #1
90015dbc:	6823      	ldrlt	r3, [r4, #0]
90015dbe:	bfbc      	itt	lt
90015dc0:	425b      	neglt	r3, r3
90015dc2:	6023      	strlt	r3, [r4, #0]
90015dc4:	2a00      	cmp	r2, #0
90015dc6:	da04      	bge.n	90015dd2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90015dc8:	6823      	ldr	r3, [r4, #0]
90015dca:	4257      	negs	r7, r2
90015dcc:	4276      	negs	r6, r6
90015dce:	425b      	negs	r3, r3
90015dd0:	6023      	str	r3, [r4, #0]
90015dd2:	2d00      	cmp	r5, #0
90015dd4:	4638      	mov	r0, r7
90015dd6:	bfba      	itte	lt
90015dd8:	426d      	neglt	r5, r5
90015dda:	f04f 38ff 	movlt.w	r8, #4294967295
90015dde:	f04f 0801 	movge.w	r8, #1
90015de2:	f7ff ff5d 	bl	90015ca0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015de6:	ab03      	add	r3, sp, #12
90015de8:	463a      	mov	r2, r7
90015dea:	e9cd 5300 	strd	r5, r3, [sp]
90015dee:	4603      	mov	r3, r0
90015df0:	4648      	mov	r0, r9
90015df2:	f7ff ff73 	bl	90015cdc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015df6:	6823      	ldr	r3, [r4, #0]
90015df8:	9a03      	ldr	r2, [sp, #12]
90015dfa:	4546      	cmp	r6, r8
90015dfc:	441a      	add	r2, r3
90015dfe:	fb92 f3f5 	sdiv	r3, r2, r5
90015e02:	4418      	add	r0, r3
90015e04:	fb05 2313 	mls	r3, r5, r3, r2
90015e08:	bf18      	it	ne
90015e0a:	4240      	negne	r0, r0
90015e0c:	1c72      	adds	r2, r6, #1
90015e0e:	6023      	str	r3, [r4, #0]
90015e10:	d105      	bne.n	90015e1e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90015e12:	2b00      	cmp	r3, #0
90015e14:	f1c3 0200 	rsb	r2, r3, #0
90015e18:	db0b      	blt.n	90015e32 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90015e1a:	6022      	str	r2, [r4, #0]
90015e1c:	e006      	b.n	90015e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e1e:	2e01      	cmp	r6, #1
90015e20:	d104      	bne.n	90015e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e22:	2b00      	cmp	r3, #0
90015e24:	da02      	bge.n	90015e2c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015e26:	442b      	add	r3, r5
90015e28:	3801      	subs	r0, #1
90015e2a:	6023      	str	r3, [r4, #0]
90015e2c:	b005      	add	sp, #20
90015e2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015e32:	3801      	subs	r0, #1
90015e34:	1b52      	subs	r2, r2, r5
90015e36:	e7f0      	b.n	90015e1a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90015e38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90015e38:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90015e3c:	4c1c      	ldr	r4, [pc, #112]	; (90015eb0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90015e3e:	4605      	mov	r5, r0
90015e40:	6807      	ldr	r7, [r0, #0]
90015e42:	69a3      	ldr	r3, [r4, #24]
90015e44:	b92b      	cbnz	r3, 90015e52 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90015e46:	6840      	ldr	r0, [r0, #4]
90015e48:	e9c5 7000 	strd	r7, r0, [r5]
90015e4c:	b004      	add	sp, #16
90015e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015e52:	f04f 0802 	mov.w	r8, #2
90015e56:	68a2      	ldr	r2, [r4, #8]
90015e58:	ae04      	add	r6, sp, #16
90015e5a:	6820      	ldr	r0, [r4, #0]
90015e5c:	fb93 f1f8 	sdiv	r1, r3, r8
90015e60:	440a      	add	r2, r1
90015e62:	69e1      	ldr	r1, [r4, #28]
90015e64:	f846 2d04 	str.w	r2, [r6, #-4]!
90015e68:	463a      	mov	r2, r7
90015e6a:	9600      	str	r6, [sp, #0]
90015e6c:	f7ff ff98 	bl	90015da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015e70:	69a3      	ldr	r3, [r4, #24]
90015e72:	4607      	mov	r7, r0
90015e74:	686a      	ldr	r2, [r5, #4]
90015e76:	6a21      	ldr	r1, [r4, #32]
90015e78:	9600      	str	r6, [sp, #0]
90015e7a:	6860      	ldr	r0, [r4, #4]
90015e7c:	f7ff ff90 	bl	90015da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015e80:	69a3      	ldr	r3, [r4, #24]
90015e82:	6962      	ldr	r2, [r4, #20]
90015e84:	4407      	add	r7, r0
90015e86:	6a61      	ldr	r1, [r4, #36]	; 0x24
90015e88:	9600      	str	r6, [sp, #0]
90015e8a:	68e0      	ldr	r0, [r4, #12]
90015e8c:	fb93 f8f8 	sdiv	r8, r3, r8
90015e90:	4442      	add	r2, r8
90015e92:	9203      	str	r2, [sp, #12]
90015e94:	682a      	ldr	r2, [r5, #0]
90015e96:	f7ff ff83 	bl	90015da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015e9a:	4680      	mov	r8, r0
90015e9c:	9600      	str	r6, [sp, #0]
90015e9e:	69a3      	ldr	r3, [r4, #24]
90015ea0:	686a      	ldr	r2, [r5, #4]
90015ea2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90015ea4:	6920      	ldr	r0, [r4, #16]
90015ea6:	f7ff ff7b 	bl	90015da0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015eaa:	4440      	add	r0, r8
90015eac:	e7cc      	b.n	90015e48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90015eae:	bf00      	nop
90015eb0:	24039718 	.word	0x24039718

90015eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90015eb4:	4b07      	ldr	r3, [pc, #28]	; (90015ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90015eb6:	781b      	ldrb	r3, [r3, #0]
90015eb8:	2b01      	cmp	r3, #1
90015eba:	d109      	bne.n	90015ed0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90015ebc:	f9b1 3000 	ldrsh.w	r3, [r1]
90015ec0:	f9b0 2000 	ldrsh.w	r2, [r0]
90015ec4:	8003      	strh	r3, [r0, #0]
90015ec6:	4b04      	ldr	r3, [pc, #16]	; (90015ed8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90015ec8:	881b      	ldrh	r3, [r3, #0]
90015eca:	3b01      	subs	r3, #1
90015ecc:	1a9b      	subs	r3, r3, r2
90015ece:	800b      	strh	r3, [r1, #0]
90015ed0:	4770      	bx	lr
90015ed2:	bf00      	nop
90015ed4:	240396fc 	.word	0x240396fc
90015ed8:	240396f8 	.word	0x240396f8

90015edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90015edc:	4b07      	ldr	r3, [pc, #28]	; (90015efc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90015ede:	b510      	push	{r4, lr}
90015ee0:	781b      	ldrb	r3, [r3, #0]
90015ee2:	2b01      	cmp	r3, #1
90015ee4:	d108      	bne.n	90015ef8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90015ee6:	4b06      	ldr	r3, [pc, #24]	; (90015f00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90015ee8:	880c      	ldrh	r4, [r1, #0]
90015eea:	881b      	ldrh	r3, [r3, #0]
90015eec:	f9b0 2000 	ldrsh.w	r2, [r0]
90015ef0:	3b01      	subs	r3, #1
90015ef2:	1b1b      	subs	r3, r3, r4
90015ef4:	8003      	strh	r3, [r0, #0]
90015ef6:	800a      	strh	r2, [r1, #0]
90015ef8:	bd10      	pop	{r4, pc}
90015efa:	bf00      	nop
90015efc:	240396fc 	.word	0x240396fc
90015f00:	240396f8 	.word	0x240396f8

90015f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90015f04:	4b0a      	ldr	r3, [pc, #40]	; (90015f30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90015f06:	b510      	push	{r4, lr}
90015f08:	781b      	ldrb	r3, [r3, #0]
90015f0a:	2b01      	cmp	r3, #1
90015f0c:	d10e      	bne.n	90015f2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90015f0e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015f12:	8843      	ldrh	r3, [r0, #2]
90015f14:	f9b0 4000 	ldrsh.w	r4, [r0]
90015f18:	18ca      	adds	r2, r1, r3
90015f1a:	4b06      	ldr	r3, [pc, #24]	; (90015f34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90015f1c:	8044      	strh	r4, [r0, #2]
90015f1e:	881b      	ldrh	r3, [r3, #0]
90015f20:	1a9b      	subs	r3, r3, r2
90015f22:	8003      	strh	r3, [r0, #0]
90015f24:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015f28:	8081      	strh	r1, [r0, #4]
90015f2a:	80c3      	strh	r3, [r0, #6]
90015f2c:	bd10      	pop	{r4, pc}
90015f2e:	bf00      	nop
90015f30:	240396fc 	.word	0x240396fc
90015f34:	240396f8 	.word	0x240396f8

90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90015f38:	4b08      	ldr	r3, [pc, #32]	; (90015f5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90015f3a:	781b      	ldrb	r3, [r3, #0]
90015f3c:	2b01      	cmp	r3, #1
90015f3e:	d10c      	bne.n	90015f5a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90015f40:	8803      	ldrh	r3, [r0, #0]
90015f42:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90015f46:	8842      	ldrh	r2, [r0, #2]
90015f48:	8002      	strh	r2, [r0, #0]
90015f4a:	185a      	adds	r2, r3, r1
90015f4c:	4b04      	ldr	r3, [pc, #16]	; (90015f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90015f4e:	881b      	ldrh	r3, [r3, #0]
90015f50:	1a9b      	subs	r3, r3, r2
90015f52:	8043      	strh	r3, [r0, #2]
90015f54:	88c3      	ldrh	r3, [r0, #6]
90015f56:	80c1      	strh	r1, [r0, #6]
90015f58:	8083      	strh	r3, [r0, #4]
90015f5a:	4770      	bx	lr
90015f5c:	240396fc 	.word	0x240396fc
90015f60:	240396f8 	.word	0x240396f8

90015f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90015f64:	4b07      	ldr	r3, [pc, #28]	; (90015f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90015f66:	b510      	push	{r4, lr}
90015f68:	781b      	ldrb	r3, [r3, #0]
90015f6a:	2b01      	cmp	r3, #1
90015f6c:	d108      	bne.n	90015f80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90015f6e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015f72:	f9b0 4000 	ldrsh.w	r4, [r0]
90015f76:	8003      	strh	r3, [r0, #0]
90015f78:	8893      	ldrh	r3, [r2, #4]
90015f7a:	3b01      	subs	r3, #1
90015f7c:	1b1b      	subs	r3, r3, r4
90015f7e:	800b      	strh	r3, [r1, #0]
90015f80:	bd10      	pop	{r4, pc}
90015f82:	bf00      	nop
90015f84:	240396fc 	.word	0x240396fc

90015f88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90015f88:	4b0b      	ldr	r3, [pc, #44]	; (90015fb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90015f8a:	781b      	ldrb	r3, [r3, #0]
90015f8c:	2b01      	cmp	r3, #1
90015f8e:	d111      	bne.n	90015fb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90015f90:	680b      	ldr	r3, [r1, #0]
90015f92:	ed90 7a00 	vldr	s14, [r0]
90015f96:	6003      	str	r3, [r0, #0]
90015f98:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90015f9c:	eddf 6a07 	vldr	s13, [pc, #28]	; 90015fbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90015fa0:	ee07 3a90 	vmov	s15, r3
90015fa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90015fa8:	ee77 7ae6 	vsub.f32	s15, s15, s13
90015fac:	ee77 7ac7 	vsub.f32	s15, s15, s14
90015fb0:	edc1 7a00 	vstr	s15, [r1]
90015fb4:	4770      	bx	lr
90015fb6:	bf00      	nop
90015fb8:	240396fc 	.word	0x240396fc
90015fbc:	38d1b717 	.word	0x38d1b717

90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90015fc0:	4b0a      	ldr	r3, [pc, #40]	; (90015fec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90015fc2:	460a      	mov	r2, r1
90015fc4:	b510      	push	{r4, lr}
90015fc6:	781b      	ldrb	r3, [r3, #0]
90015fc8:	2b01      	cmp	r3, #1
90015fca:	d10d      	bne.n	90015fe8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90015fcc:	8881      	ldrh	r1, [r0, #4]
90015fce:	8803      	ldrh	r3, [r0, #0]
90015fd0:	440b      	add	r3, r1
90015fd2:	4601      	mov	r1, r0
90015fd4:	3b01      	subs	r3, #1
90015fd6:	f821 3b02 	strh.w	r3, [r1], #2
90015fda:	f7ff ffc3 	bl	90015f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90015fde:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015fe2:	88c2      	ldrh	r2, [r0, #6]
90015fe4:	80c3      	strh	r3, [r0, #6]
90015fe6:	8082      	strh	r2, [r0, #4]
90015fe8:	bd10      	pop	{r4, pc}
90015fea:	bf00      	nop
90015fec:	240396fc 	.word	0x240396fc

90015ff0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90015ff0:	4770      	bx	lr
	...

90015ff4 <_ZN8touchgfx11Application13requestRedrawEv>:
90015ff4:	4b06      	ldr	r3, [pc, #24]	; (90016010 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90015ff6:	2100      	movs	r1, #0
90015ff8:	f9b3 2000 	ldrsh.w	r2, [r3]
90015ffc:	4b05      	ldr	r3, [pc, #20]	; (90016014 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015ffe:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90016002:	f9b3 3000 	ldrsh.w	r3, [r3]
90016006:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
9001600a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
9001600e:	4770      	bx	lr
90016010:	240396f8 	.word	0x240396f8
90016014:	240396fa 	.word	0x240396fa

90016018 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016018:	4b03      	ldr	r3, [pc, #12]	; (90016028 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001601a:	6818      	ldr	r0, [r3, #0]
9001601c:	b110      	cbz	r0, 90016024 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001601e:	6803      	ldr	r3, [r0, #0]
90016020:	699b      	ldr	r3, [r3, #24]
90016022:	4718      	bx	r3
90016024:	4770      	bx	lr
90016026:	bf00      	nop
90016028:	24039748 	.word	0x24039748

9001602c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001602c:	4770      	bx	lr
	...

90016030 <_ZN8touchgfx11Application4drawEv>:
90016030:	4b09      	ldr	r3, [pc, #36]	; (90016058 <_ZN8touchgfx11Application4drawEv+0x28>)
90016032:	b507      	push	{r0, r1, r2, lr}
90016034:	f9b3 2000 	ldrsh.w	r2, [r3]
90016038:	2100      	movs	r1, #0
9001603a:	4b08      	ldr	r3, [pc, #32]	; (9001605c <_ZN8touchgfx11Application4drawEv+0x2c>)
9001603c:	9100      	str	r1, [sp, #0]
9001603e:	4669      	mov	r1, sp
90016040:	f9b3 3000 	ldrsh.w	r3, [r3]
90016044:	f8ad 2004 	strh.w	r2, [sp, #4]
90016048:	f8ad 3006 	strh.w	r3, [sp, #6]
9001604c:	6803      	ldr	r3, [r0, #0]
9001604e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90016050:	4798      	blx	r3
90016052:	b003      	add	sp, #12
90016054:	f85d fb04 	ldr.w	pc, [sp], #4
90016058:	240396f8 	.word	0x240396f8
9001605c:	240396fa 	.word	0x240396fa

90016060 <_ZN8touchgfx11Application10invalidateEv>:
90016060:	4b09      	ldr	r3, [pc, #36]	; (90016088 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016062:	b082      	sub	sp, #8
90016064:	2100      	movs	r1, #0
90016066:	f9b3 2000 	ldrsh.w	r2, [r3]
9001606a:	4b08      	ldr	r3, [pc, #32]	; (9001608c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001606c:	f8ad 2004 	strh.w	r2, [sp, #4]
90016070:	aa02      	add	r2, sp, #8
90016072:	f9b3 3000 	ldrsh.w	r3, [r3]
90016076:	9100      	str	r1, [sp, #0]
90016078:	f8ad 3006 	strh.w	r3, [sp, #6]
9001607c:	6803      	ldr	r3, [r0, #0]
9001607e:	e912 0006 	ldmdb	r2, {r1, r2}
90016082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016084:	b002      	add	sp, #8
90016086:	4718      	bx	r3
90016088:	240396f8 	.word	0x240396f8
9001608c:	240396fa 	.word	0x240396fa

90016090 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016090:	4b03      	ldr	r3, [pc, #12]	; (900160a0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016092:	6818      	ldr	r0, [r3, #0]
90016094:	b110      	cbz	r0, 9001609c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016096:	6803      	ldr	r3, [r0, #0]
90016098:	69db      	ldr	r3, [r3, #28]
9001609a:	4718      	bx	r3
9001609c:	4770      	bx	lr
9001609e:	bf00      	nop
900160a0:	24039748 	.word	0x24039748

900160a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900160a4:	4b03      	ldr	r3, [pc, #12]	; (900160b4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900160a6:	6818      	ldr	r0, [r3, #0]
900160a8:	b110      	cbz	r0, 900160b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900160aa:	6803      	ldr	r3, [r0, #0]
900160ac:	6a1b      	ldr	r3, [r3, #32]
900160ae:	4718      	bx	r3
900160b0:	4770      	bx	lr
900160b2:	bf00      	nop
900160b4:	24039748 	.word	0x24039748

900160b8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
900160b8:	2300      	movs	r3, #0
900160ba:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
900160be:	4770      	bx	lr

900160c0 <_ZN8touchgfx11Application14handleKeyEventEh>:
900160c0:	4b03      	ldr	r3, [pc, #12]	; (900160d0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900160c2:	6818      	ldr	r0, [r3, #0]
900160c4:	b110      	cbz	r0, 900160cc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900160c6:	6803      	ldr	r3, [r0, #0]
900160c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900160ca:	4718      	bx	r3
900160cc:	4770      	bx	lr
900160ce:	bf00      	nop
900160d0:	24039748 	.word	0x24039748

900160d4 <_ZN8touchgfx11ApplicationD1Ev>:
900160d4:	4770      	bx	lr

900160d6 <_ZN8touchgfx11ApplicationD0Ev>:
900160d6:	b510      	push	{r4, lr}
900160d8:	4604      	mov	r4, r0
900160da:	f44f 719e 	mov.w	r1, #316	; 0x13c
900160de:	f011 fa1f 	bl	90027520 <_ZdlPvj>
900160e2:	4620      	mov	r0, r4
900160e4:	bd10      	pop	{r4, pc}

900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
900160e6:	b510      	push	{r4, lr}
900160e8:	f9b1 4000 	ldrsh.w	r4, [r1]
900160ec:	888a      	ldrh	r2, [r1, #4]
900160ee:	f9b0 3000 	ldrsh.w	r3, [r0]
900160f2:	4422      	add	r2, r4
900160f4:	b212      	sxth	r2, r2
900160f6:	4293      	cmp	r3, r2
900160f8:	da15      	bge.n	90016126 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900160fa:	8882      	ldrh	r2, [r0, #4]
900160fc:	4413      	add	r3, r2
900160fe:	b21b      	sxth	r3, r3
90016100:	429c      	cmp	r4, r3
90016102:	da10      	bge.n	90016126 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016104:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016108:	88c9      	ldrh	r1, [r1, #6]
9001610a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001610e:	4419      	add	r1, r3
90016110:	b209      	sxth	r1, r1
90016112:	428a      	cmp	r2, r1
90016114:	da07      	bge.n	90016126 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016116:	88c0      	ldrh	r0, [r0, #6]
90016118:	4410      	add	r0, r2
9001611a:	b200      	sxth	r0, r0
9001611c:	4283      	cmp	r3, r0
9001611e:	bfac      	ite	ge
90016120:	2000      	movge	r0, #0
90016122:	2001      	movlt	r0, #1
90016124:	bd10      	pop	{r4, pc}
90016126:	2000      	movs	r0, #0
90016128:	e7fc      	b.n	90016124 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001612a <_ZN8touchgfx4Rect10restrictToEss>:
9001612a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001612e:	2b00      	cmp	r3, #0
90016130:	b510      	push	{r4, lr}
90016132:	da04      	bge.n	9001613e <_ZN8touchgfx4Rect10restrictToEss+0x14>
90016134:	8884      	ldrh	r4, [r0, #4]
90016136:	4423      	add	r3, r4
90016138:	8083      	strh	r3, [r0, #4]
9001613a:	2300      	movs	r3, #0
9001613c:	8003      	strh	r3, [r0, #0]
9001613e:	f9b0 4000 	ldrsh.w	r4, [r0]
90016142:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016146:	1b09      	subs	r1, r1, r4
90016148:	428b      	cmp	r3, r1
9001614a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001614e:	bfc8      	it	gt
90016150:	8081      	strhgt	r1, [r0, #4]
90016152:	2b00      	cmp	r3, #0
90016154:	da04      	bge.n	90016160 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90016156:	88c1      	ldrh	r1, [r0, #6]
90016158:	440b      	add	r3, r1
9001615a:	80c3      	strh	r3, [r0, #6]
9001615c:	2300      	movs	r3, #0
9001615e:	8043      	strh	r3, [r0, #2]
90016160:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016164:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016168:	1a52      	subs	r2, r2, r1
9001616a:	4293      	cmp	r3, r2
9001616c:	bfc8      	it	gt
9001616e:	80c2      	strhgt	r2, [r0, #6]
90016170:	bd10      	pop	{r4, pc}
	...

90016174 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016174:	4b10      	ldr	r3, [pc, #64]	; (900161b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016176:	b510      	push	{r4, lr}
90016178:	460c      	mov	r4, r1
9001617a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001617e:	4b0f      	ldr	r3, [pc, #60]	; (900161bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016180:	4620      	mov	r0, r4
90016182:	f9b3 1000 	ldrsh.w	r1, [r3]
90016186:	f7ff ffd0 	bl	9001612a <_ZN8touchgfx4Rect10restrictToEss>
9001618a:	4b0d      	ldr	r3, [pc, #52]	; (900161c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001618c:	6818      	ldr	r0, [r3, #0]
9001618e:	b190      	cbz	r0, 900161b6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016190:	6803      	ldr	r3, [r0, #0]
90016192:	4621      	mov	r1, r4
90016194:	689b      	ldr	r3, [r3, #8]
90016196:	4798      	blx	r3
90016198:	4b0a      	ldr	r3, [pc, #40]	; (900161c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001619a:	6818      	ldr	r0, [r3, #0]
9001619c:	b118      	cbz	r0, 900161a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001619e:	6803      	ldr	r3, [r0, #0]
900161a0:	4621      	mov	r1, r4
900161a2:	689b      	ldr	r3, [r3, #8]
900161a4:	4798      	blx	r3
900161a6:	4b08      	ldr	r3, [pc, #32]	; (900161c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900161a8:	4621      	mov	r1, r4
900161aa:	6818      	ldr	r0, [r3, #0]
900161ac:	6803      	ldr	r3, [r0, #0]
900161ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900161b2:	69db      	ldr	r3, [r3, #28]
900161b4:	4718      	bx	r3
900161b6:	bd10      	pop	{r4, pc}
900161b8:	240396fa 	.word	0x240396fa
900161bc:	240396f8 	.word	0x240396f8
900161c0:	24039748 	.word	0x24039748
900161c4:	24039744 	.word	0x24039744
900161c8:	24039704 	.word	0x24039704

900161cc <_ZNK8touchgfx4Rect8includesERKS0_>:
900161cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900161ce:	4606      	mov	r6, r0
900161d0:	4608      	mov	r0, r1
900161d2:	460f      	mov	r7, r1
900161d4:	f7fa fe7f 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
900161d8:	b9e8      	cbnz	r0, 90016216 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161da:	f9b7 5000 	ldrsh.w	r5, [r7]
900161de:	f9b6 4000 	ldrsh.w	r4, [r6]
900161e2:	42a5      	cmp	r5, r4
900161e4:	db17      	blt.n	90016216 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161e6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900161ea:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900161ee:	429a      	cmp	r2, r3
900161f0:	db11      	blt.n	90016216 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900161f2:	88b9      	ldrh	r1, [r7, #4]
900161f4:	440d      	add	r5, r1
900161f6:	88b1      	ldrh	r1, [r6, #4]
900161f8:	440c      	add	r4, r1
900161fa:	b22d      	sxth	r5, r5
900161fc:	b224      	sxth	r4, r4
900161fe:	42a5      	cmp	r5, r4
90016200:	dc09      	bgt.n	90016216 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016202:	88f8      	ldrh	r0, [r7, #6]
90016204:	4410      	add	r0, r2
90016206:	88f2      	ldrh	r2, [r6, #6]
90016208:	4413      	add	r3, r2
9001620a:	b200      	sxth	r0, r0
9001620c:	b21b      	sxth	r3, r3
9001620e:	4298      	cmp	r0, r3
90016210:	bfcc      	ite	gt
90016212:	2000      	movgt	r0, #0
90016214:	2001      	movle	r0, #1
90016216:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016218 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001621a:	4604      	mov	r4, r0
9001621c:	4608      	mov	r0, r1
9001621e:	460d      	mov	r5, r1
90016220:	f7fa fe59 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016224:	b978      	cbnz	r0, 90016246 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90016226:	4620      	mov	r0, r4
90016228:	f7fa fe55 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001622c:	f9b5 6000 	ldrsh.w	r6, [r5]
90016230:	b150      	cbz	r0, 90016248 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90016232:	8026      	strh	r6, [r4, #0]
90016234:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016238:	8063      	strh	r3, [r4, #2]
9001623a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001623e:	80a3      	strh	r3, [r4, #4]
90016240:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90016244:	80e3      	strh	r3, [r4, #6]
90016246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016248:	f9b4 1000 	ldrsh.w	r1, [r4]
9001624c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016250:	42b1      	cmp	r1, r6
90016252:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90016256:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001625a:	460f      	mov	r7, r1
9001625c:	88ed      	ldrh	r5, [r5, #6]
9001625e:	bfa8      	it	ge
90016260:	4637      	movge	r7, r6
90016262:	4293      	cmp	r3, r2
90016264:	4618      	mov	r0, r3
90016266:	4466      	add	r6, ip
90016268:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001626c:	bfa8      	it	ge
9001626e:	4610      	movge	r0, r2
90016270:	442a      	add	r2, r5
90016272:	88e5      	ldrh	r5, [r4, #6]
90016274:	4461      	add	r1, ip
90016276:	b236      	sxth	r6, r6
90016278:	8027      	strh	r7, [r4, #0]
9001627a:	442b      	add	r3, r5
9001627c:	b209      	sxth	r1, r1
9001627e:	b212      	sxth	r2, r2
90016280:	8060      	strh	r0, [r4, #2]
90016282:	b21b      	sxth	r3, r3
90016284:	428e      	cmp	r6, r1
90016286:	bfac      	ite	ge
90016288:	ebc7 0106 	rsbge	r1, r7, r6
9001628c:	ebc7 0101 	rsblt	r1, r7, r1
90016290:	429a      	cmp	r2, r3
90016292:	bfac      	ite	ge
90016294:	ebc0 0202 	rsbge	r2, r0, r2
90016298:	ebc0 0203 	rsblt	r2, r0, r3
9001629c:	80a1      	strh	r1, [r4, #4]
9001629e:	80e2      	strh	r2, [r4, #6]
900162a0:	e7d1      	b.n	90016246 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900162a4 <_ZN8touchgfx11Application11getInstanceEv>:
900162a4:	4b01      	ldr	r3, [pc, #4]	; (900162ac <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900162a6:	6818      	ldr	r0, [r3, #0]
900162a8:	4770      	bx	lr
900162aa:	bf00      	nop
900162ac:	24039758 	.word	0x24039758

900162b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
900162b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900162b2:	4b10      	ldr	r3, [pc, #64]	; (900162f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
900162b4:	4605      	mov	r5, r0
900162b6:	781b      	ldrb	r3, [r3, #0]
900162b8:	b1d3      	cbz	r3, 900162f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
900162ba:	4b0f      	ldr	r3, [pc, #60]	; (900162f8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
900162bc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
900162c0:	4f0e      	ldr	r7, [pc, #56]	; (900162fc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
900162c2:	881c      	ldrh	r4, [r3, #0]
900162c4:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
900162c8:	42a3      	cmp	r3, r4
900162ca:	d90e      	bls.n	900162ea <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
900162cc:	683b      	ldr	r3, [r7, #0]
900162ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900162d2:	b10a      	cbz	r2, 900162d8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
900162d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900162d6:	b900      	cbnz	r0, 900162da <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
900162d8:	6898      	ldr	r0, [r3, #8]
900162da:	6803      	ldr	r3, [r0, #0]
900162dc:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
900162e0:	3401      	adds	r4, #1
900162e2:	69db      	ldr	r3, [r3, #28]
900162e4:	4798      	blx	r3
900162e6:	b2a4      	uxth	r4, r4
900162e8:	e7ec      	b.n	900162c4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
900162ea:	2300      	movs	r3, #0
900162ec:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
900162f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900162f2:	bf00      	nop
900162f4:	24039702 	.word	0x24039702
900162f8:	24000080 	.word	0x24000080
900162fc:	24039704 	.word	0x24039704

90016300 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016300:	2300      	movs	r3, #0
90016302:	b510      	push	{r4, lr}
90016304:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90016308:	4604      	mov	r4, r0
9001630a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001630e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90016312:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016316:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
9001631a:	429a      	cmp	r2, r3
9001631c:	d90e      	bls.n	9001633c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001631e:	18e2      	adds	r2, r4, r3
90016320:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90016324:	b122      	cbz	r2, 90016330 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90016326:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001632a:	6803      	ldr	r3, [r0, #0]
9001632c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001632e:	4798      	blx	r3
90016330:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016334:	3301      	adds	r3, #1
90016336:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001633a:	e7ea      	b.n	90016312 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
9001633c:	bd10      	pop	{r4, pc}

9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001633e:	2300      	movs	r3, #0
90016340:	f100 0284 	add.w	r2, r0, #132	; 0x84
90016344:	30a4      	adds	r0, #164	; 0xa4
90016346:	f820 3c24 	strh.w	r3, [r0, #-36]
9001634a:	f802 3b01 	strb.w	r3, [r2], #1
9001634e:	4282      	cmp	r2, r0
90016350:	d1fb      	bne.n	9001634a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90016352:	4770      	bx	lr

90016354 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016354:	b570      	push	{r4, r5, r6, lr}
90016356:	4c0b      	ldr	r4, [pc, #44]	; (90016384 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016358:	4605      	mov	r5, r0
9001635a:	460e      	mov	r6, r1
9001635c:	6820      	ldr	r0, [r4, #0]
9001635e:	b110      	cbz	r0, 90016366 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90016360:	6803      	ldr	r3, [r0, #0]
90016362:	695b      	ldr	r3, [r3, #20]
90016364:	4798      	blx	r3
90016366:	1d28      	adds	r0, r5, #4
90016368:	f7ff ffe9 	bl	9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001636c:	6026      	str	r6, [r4, #0]
9001636e:	6833      	ldr	r3, [r6, #0]
90016370:	4630      	mov	r0, r6
90016372:	68db      	ldr	r3, [r3, #12]
90016374:	4798      	blx	r3
90016376:	682b      	ldr	r3, [r5, #0]
90016378:	4628      	mov	r0, r5
9001637a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001637c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016380:	4718      	bx	r3
90016382:	bf00      	nop
90016384:	24039748 	.word	0x24039748

90016388 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016388:	2300      	movs	r3, #0
9001638a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
9001638e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90016392:	461a      	mov	r2, r3
90016394:	b5f0      	push	{r4, r5, r6, r7, lr}
90016396:	461c      	mov	r4, r3
90016398:	461d      	mov	r5, r3
9001639a:	459c      	cmp	ip, r3
9001639c:	dd1a      	ble.n	900163d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001639e:	18c6      	adds	r6, r0, r3
900163a0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
900163a4:	b16e      	cbz	r6, 900163c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900163a6:	429a      	cmp	r2, r3
900163a8:	d008      	beq.n	900163bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900163aa:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900163ae:	fa1f fe82 	uxth.w	lr, r2
900163b2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900163b6:	1887      	adds	r7, r0, r2
900163b8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
900163bc:	3201      	adds	r2, #1
900163be:	3301      	adds	r3, #1
900163c0:	e7eb      	b.n	9001639a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900163c2:	4299      	cmp	r1, r3
900163c4:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
900163c8:	bfa8      	it	ge
900163ca:	3501      	addge	r5, #1
900163cc:	429e      	cmp	r6, r3
900163ce:	bfc8      	it	gt
900163d0:	3401      	addgt	r4, #1
900163d2:	e7f4      	b.n	900163be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900163d4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
900163d8:	1b49      	subs	r1, r1, r5
900163da:	1b1b      	subs	r3, r3, r4
900163dc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
900163e0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900163e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
900163e8:	4293      	cmp	r3, r2
900163ea:	dd03      	ble.n	900163f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900163ec:	3b01      	subs	r3, #1
900163ee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
900163f2:	e7f7      	b.n	900163e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900163f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900163f8 <_ZN8touchgfx11Application15handleTickEventEv>:
900163f8:	b570      	push	{r4, r5, r6, lr}
900163fa:	4d16      	ldr	r5, [pc, #88]	; (90016454 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900163fc:	4604      	mov	r4, r0
900163fe:	6828      	ldr	r0, [r5, #0]
90016400:	b140      	cbz	r0, 90016414 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016402:	7a03      	ldrb	r3, [r0, #8]
90016404:	b933      	cbnz	r3, 90016414 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016406:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001640a:	6803      	ldr	r3, [r0, #0]
9001640c:	689b      	ldr	r3, [r3, #8]
9001640e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016412:	4718      	bx	r3
90016414:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90016418:	4e0f      	ldr	r6, [pc, #60]	; (90016458 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001641a:	b973      	cbnz	r3, 9001643a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001641c:	b168      	cbz	r0, 9001643a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001641e:	7a03      	ldrb	r3, [r0, #8]
90016420:	b15b      	cbz	r3, 9001643a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016422:	6830      	ldr	r0, [r6, #0]
90016424:	b110      	cbz	r0, 9001642c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90016426:	6803      	ldr	r3, [r0, #0]
90016428:	691b      	ldr	r3, [r3, #16]
9001642a:	4798      	blx	r3
9001642c:	6828      	ldr	r0, [r5, #0]
9001642e:	6803      	ldr	r3, [r0, #0]
90016430:	68db      	ldr	r3, [r3, #12]
90016432:	4798      	blx	r3
90016434:	2301      	movs	r3, #1
90016436:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001643a:	3404      	adds	r4, #4
9001643c:	4620      	mov	r0, r4
9001643e:	f7ff ff5f 	bl	90016300 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90016442:	4620      	mov	r0, r4
90016444:	f7ff ffa0 	bl	90016388 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016448:	6830      	ldr	r0, [r6, #0]
9001644a:	b110      	cbz	r0, 90016452 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
9001644c:	6803      	ldr	r3, [r0, #0]
9001644e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016450:	e7dd      	b.n	9001640e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90016452:	bd70      	pop	{r4, r5, r6, pc}
90016454:	2403974c 	.word	0x2403974c
90016458:	24039748 	.word	0x24039748

9001645c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001645c:	4603      	mov	r3, r0
9001645e:	f100 0140 	add.w	r1, r0, #64	; 0x40
90016462:	2200      	movs	r2, #0
90016464:	801a      	strh	r2, [r3, #0]
90016466:	3308      	adds	r3, #8
90016468:	f823 2c06 	strh.w	r2, [r3, #-6]
9001646c:	f823 2c04 	strh.w	r2, [r3, #-4]
90016470:	f823 2c02 	strh.w	r2, [r3, #-2]
90016474:	428b      	cmp	r3, r1
90016476:	d1f5      	bne.n	90016464 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016478:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
9001647c:	4770      	bx	lr
	...

90016480 <_ZN8touchgfx11ApplicationC1Ev>:
90016480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016482:	4b1d      	ldr	r3, [pc, #116]	; (900164f8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90016484:	4606      	mov	r6, r0
90016486:	4604      	mov	r4, r0
90016488:	2500      	movs	r5, #0
9001648a:	f846 3b04 	str.w	r3, [r6], #4
9001648e:	22a8      	movs	r2, #168	; 0xa8
90016490:	2100      	movs	r1, #0
90016492:	4630      	mov	r0, r6
90016494:	f011 fafa 	bl	90027a8c <memset>
90016498:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
9001649c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900164a0:	4f16      	ldr	r7, [pc, #88]	; (900164fc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900164a2:	f7ff ffdb 	bl	9001645c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900164a6:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900164aa:	f7ff ffd7 	bl	9001645c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900164ae:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
900164b2:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
900164b6:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
900164ba:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
900164be:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
900164c2:	490f      	ldr	r1, [pc, #60]	; (90016500 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900164c4:	480f      	ldr	r0, [pc, #60]	; (90016504 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900164c6:	f010 fbdb 	bl	90026c80 <CRC_Lock>
900164ca:	4b0f      	ldr	r3, [pc, #60]	; (90016508 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900164cc:	b158      	cbz	r0, 900164e6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
900164ce:	801d      	strh	r5, [r3, #0]
900164d0:	2300      	movs	r3, #0
900164d2:	4a0e      	ldr	r2, [pc, #56]	; (9001650c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900164d4:	4630      	mov	r0, r6
900164d6:	6013      	str	r3, [r2, #0]
900164d8:	4a0d      	ldr	r2, [pc, #52]	; (90016510 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900164da:	603b      	str	r3, [r7, #0]
900164dc:	6013      	str	r3, [r2, #0]
900164de:	f7ff ff2e 	bl	9001633e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900164e2:	4620      	mov	r0, r4
900164e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900164e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
900164ea:	2002      	movs	r0, #2
900164ec:	801a      	strh	r2, [r3, #0]
900164ee:	6038      	str	r0, [r7, #0]
900164f0:	f001 fb48 	bl	90017b84 <_ZN8touchgfx6Screen4drawEv>
900164f4:	e7ec      	b.n	900164d0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900164f6:	bf00      	nop
900164f8:	9002b910 	.word	0x9002b910
900164fc:	24039748 	.word	0x24039748
90016500:	b5e8b5cd 	.word	0xb5e8b5cd
90016504:	f407a5c2 	.word	0xf407a5c2
90016508:	24000080 	.word	0x24000080
9001650c:	24039758 	.word	0x24039758
90016510:	2403974c 	.word	0x2403974c

90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90016514:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90016518:	3b01      	subs	r3, #1
9001651a:	b29b      	uxth	r3, r3
9001651c:	428b      	cmp	r3, r1
9001651e:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90016522:	b510      	push	{r4, lr}
90016524:	d908      	bls.n	90016538 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90016526:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001652a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001652e:	681a      	ldr	r2, [r3, #0]
90016530:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90016534:	685a      	ldr	r2, [r3, #4]
90016536:	6062      	str	r2, [r4, #4]
90016538:	bd10      	pop	{r4, pc}
	...

9001653c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
9001653c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016540:	b08f      	sub	sp, #60	; 0x3c
90016542:	4b8f      	ldr	r3, [pc, #572]	; (90016780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90016544:	4683      	mov	fp, r0
90016546:	ac0a      	add	r4, sp, #40	; 0x28
90016548:	e884 0006 	stmia.w	r4, {r1, r2}
9001654c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016550:	4620      	mov	r0, r4
90016552:	4b8c      	ldr	r3, [pc, #560]	; (90016784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90016554:	f9b3 1000 	ldrsh.w	r1, [r3]
90016558:	f7ff fde7 	bl	9001612a <_ZN8touchgfx4Rect10restrictToEss>
9001655c:	4620      	mov	r0, r4
9001655e:	f7fa fcba 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016562:	2800      	cmp	r0, #0
90016564:	d16a      	bne.n	9001663c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016566:	9403      	str	r4, [sp, #12]
90016568:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
9001656c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90016570:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90016574:	9301      	str	r3, [sp, #4]
90016576:	35a4      	adds	r5, #164	; 0xa4
90016578:	b15c      	cbz	r4, 90016592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001657a:	4629      	mov	r1, r5
9001657c:	9803      	ldr	r0, [sp, #12]
9001657e:	f7ff fe25 	bl	900161cc <_ZNK8touchgfx4Rect8includesERKS0_>
90016582:	3c01      	subs	r4, #1
90016584:	b118      	cbz	r0, 9001658e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90016586:	b2a1      	uxth	r1, r4
90016588:	9801      	ldr	r0, [sp, #4]
9001658a:	f7ff ffc3 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001658e:	3d08      	subs	r5, #8
90016590:	e7f2      	b.n	90016578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90016592:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
90016596:	f10a 33ff 	add.w	r3, sl, #4294967295
9001659a:	f8cd a010 	str.w	sl, [sp, #16]
9001659e:	9302      	str	r3, [sp, #8]
900165a0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900165a4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
900165a8:	9306      	str	r3, [sp, #24]
900165aa:	445c      	add	r4, fp
900165ac:	2500      	movs	r5, #0
900165ae:	4626      	mov	r6, r4
900165b0:	f8cd a014 	str.w	sl, [sp, #20]
900165b4:	462f      	mov	r7, r5
900165b6:	9b05      	ldr	r3, [sp, #20]
900165b8:	2b00      	cmp	r3, #0
900165ba:	d073      	beq.n	900166a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
900165bc:	9903      	ldr	r1, [sp, #12]
900165be:	4630      	mov	r0, r6
900165c0:	f7ff fd91 	bl	900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900165c4:	b350      	cbz	r0, 9001661c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900165c6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
900165ca:	f9b6 c000 	ldrsh.w	ip, [r6]
900165ce:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
900165d2:	45e6      	cmp	lr, ip
900165d4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900165d8:	db33      	blt.n	90016642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900165da:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900165de:	88b3      	ldrh	r3, [r6, #4]
900165e0:	4472      	add	r2, lr
900165e2:	4463      	add	r3, ip
900165e4:	b212      	sxth	r2, r2
900165e6:	b21b      	sxth	r3, r3
900165e8:	429a      	cmp	r2, r3
900165ea:	dc2a      	bgt.n	90016642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900165ec:	fa1f f289 	uxth.w	r2, r9
900165f0:	88f3      	ldrh	r3, [r6, #6]
900165f2:	45c8      	cmp	r8, r9
900165f4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900165f8:	4413      	add	r3, r2
900165fa:	fa1f fc88 	uxth.w	ip, r8
900165fe:	b29b      	uxth	r3, r3
90016600:	fa0f fe83 	sxth.w	lr, r3
90016604:	db0f      	blt.n	90016626 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016606:	eba3 030c 	sub.w	r3, r3, ip
9001660a:	1ac9      	subs	r1, r1, r3
9001660c:	b209      	sxth	r1, r1
9001660e:	2900      	cmp	r1, #0
90016610:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016614:	dd12      	ble.n	9001663c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016616:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001661a:	4605      	mov	r5, r0
9001661c:	9b05      	ldr	r3, [sp, #20]
9001661e:	3e08      	subs	r6, #8
90016620:	3b01      	subs	r3, #1
90016622:	9305      	str	r3, [sp, #20]
90016624:	e7c7      	b.n	900165b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90016626:	4461      	add	r1, ip
90016628:	b209      	sxth	r1, r1
9001662a:	4571      	cmp	r1, lr
9001662c:	dc38      	bgt.n	900166a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001662e:	eba2 020c 	sub.w	r2, r2, ip
90016632:	b212      	sxth	r2, r2
90016634:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
90016638:	2a00      	cmp	r2, #0
9001663a:	dcee      	bgt.n	9001661a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001663c:	b00f      	add	sp, #60	; 0x3c
9001663e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016642:	45c8      	cmp	r8, r9
90016644:	db2c      	blt.n	900166a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016646:	88f3      	ldrh	r3, [r6, #6]
90016648:	4499      	add	r9, r3
9001664a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
9001664e:	4498      	add	r8, r3
90016650:	fa0f f989 	sxth.w	r9, r9
90016654:	fa0f f888 	sxth.w	r8, r8
90016658:	45c1      	cmp	r9, r8
9001665a:	db21      	blt.n	900166a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001665c:	fa1f f28c 	uxth.w	r2, ip
90016660:	88b3      	ldrh	r3, [r6, #4]
90016662:	45e6      	cmp	lr, ip
90016664:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90016668:	4413      	add	r3, r2
9001666a:	fa1f f88e 	uxth.w	r8, lr
9001666e:	b29b      	uxth	r3, r3
90016670:	fa0f f983 	sxth.w	r9, r3
90016674:	db0a      	blt.n	9001668c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90016676:	eba3 0308 	sub.w	r3, r3, r8
9001667a:	1ac9      	subs	r1, r1, r3
9001667c:	b209      	sxth	r1, r1
9001667e:	2900      	cmp	r1, #0
90016680:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90016684:	ddda      	ble.n	9001663c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016686:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001668a:	e7c6      	b.n	9001661a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
9001668c:	4441      	add	r1, r8
9001668e:	b209      	sxth	r1, r1
90016690:	4549      	cmp	r1, r9
90016692:	dc05      	bgt.n	900166a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016694:	eba2 0208 	sub.w	r2, r2, r8
90016698:	b212      	sxth	r2, r2
9001669a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001669e:	e7cb      	b.n	90016638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900166a0:	4607      	mov	r7, r0
900166a2:	e7bb      	b.n	9001661c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900166a4:	2d00      	cmp	r5, #0
900166a6:	d181      	bne.n	900165ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900166a8:	2f00      	cmp	r7, #0
900166aa:	f000 81dd 	beq.w	90016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900166ae:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
900166b2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
900166b6:	b2b3      	uxth	r3, r6
900166b8:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
900166bc:	9305      	str	r3, [sp, #20]
900166be:	9a05      	ldr	r2, [sp, #20]
900166c0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900166c4:	4413      	add	r3, r2
900166c6:	b2ba      	uxth	r2, r7
900166c8:	4492      	add	sl, r2
900166ca:	b29b      	uxth	r3, r3
900166cc:	fa1f fa8a 	uxth.w	sl, sl
900166d0:	fa0f f883 	sxth.w	r8, r3
900166d4:	fa0f f98a 	sxth.w	r9, sl
900166d8:	e9cd 2307 	strd	r2, r3, [sp, #28]
900166dc:	9b04      	ldr	r3, [sp, #16]
900166de:	2b00      	cmp	r3, #0
900166e0:	d052      	beq.n	90016788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900166e2:	9903      	ldr	r1, [sp, #12]
900166e4:	4620      	mov	r0, r4
900166e6:	f7ff fcfe 	bl	900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900166ea:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900166ee:	b1c0      	cbz	r0, 90016722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900166f0:	f9b4 e000 	ldrsh.w	lr, [r4]
900166f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900166f8:	4576      	cmp	r6, lr
900166fa:	dc22      	bgt.n	90016742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900166fc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016700:	44f4      	add	ip, lr
90016702:	fa0f fc8c 	sxth.w	ip, ip
90016706:	45e0      	cmp	r8, ip
90016708:	db1b      	blt.n	90016742 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001670a:	428f      	cmp	r7, r1
9001670c:	fa1f fc81 	uxth.w	ip, r1
90016710:	88e1      	ldrh	r1, [r4, #6]
90016712:	dc0d      	bgt.n	90016730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90016714:	ebaa 0c0c 	sub.w	ip, sl, ip
90016718:	f8a4 9002 	strh.w	r9, [r4, #2]
9001671c:	eba1 010c 	sub.w	r1, r1, ip
90016720:	80e1      	strh	r1, [r4, #6]
90016722:	4628      	mov	r0, r5
90016724:	9904      	ldr	r1, [sp, #16]
90016726:	3c08      	subs	r4, #8
90016728:	4605      	mov	r5, r0
9001672a:	3901      	subs	r1, #1
9001672c:	9104      	str	r1, [sp, #16]
9001672e:	e7d3      	b.n	900166d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90016730:	4461      	add	r1, ip
90016732:	b209      	sxth	r1, r1
90016734:	4549      	cmp	r1, r9
90016736:	dcf5      	bgt.n	90016724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016738:	eba2 0c0c 	sub.w	ip, r2, ip
9001673c:	f8a4 c006 	strh.w	ip, [r4, #6]
90016740:	e7ef      	b.n	90016722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016742:	428f      	cmp	r7, r1
90016744:	dcee      	bgt.n	90016724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016746:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001674a:	4461      	add	r1, ip
9001674c:	b209      	sxth	r1, r1
9001674e:	4589      	cmp	r9, r1
90016750:	dbe8      	blt.n	90016724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016752:	4576      	cmp	r6, lr
90016754:	fa1f fc8e 	uxth.w	ip, lr
90016758:	88a1      	ldrh	r1, [r4, #4]
9001675a:	dc07      	bgt.n	9001676c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
9001675c:	eba3 0c0c 	sub.w	ip, r3, ip
90016760:	f8a4 8000 	strh.w	r8, [r4]
90016764:	eba1 010c 	sub.w	r1, r1, ip
90016768:	80a1      	strh	r1, [r4, #4]
9001676a:	e7da      	b.n	90016722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001676c:	4461      	add	r1, ip
9001676e:	b209      	sxth	r1, r1
90016770:	4588      	cmp	r8, r1
90016772:	dbd7      	blt.n	90016724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016774:	9905      	ldr	r1, [sp, #20]
90016776:	eba1 0c0c 	sub.w	ip, r1, ip
9001677a:	f8a4 c004 	strh.w	ip, [r4, #4]
9001677e:	e7d0      	b.n	90016722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016780:	240396fa 	.word	0x240396fa
90016784:	240396f8 	.word	0x240396f8
90016788:	2d00      	cmp	r5, #0
9001678a:	f000 816d 	beq.w	90016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001678e:	9b06      	ldr	r3, [sp, #24]
90016790:	445b      	add	r3, fp
90016792:	461c      	mov	r4, r3
90016794:	9b02      	ldr	r3, [sp, #8]
90016796:	3301      	adds	r3, #1
90016798:	f000 8166 	beq.w	90016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001679c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
900167a0:	9803      	ldr	r0, [sp, #12]
900167a2:	4629      	mov	r1, r5
900167a4:	f7ff fd12 	bl	900161cc <_ZNK8touchgfx4Rect8includesERKS0_>
900167a8:	b120      	cbz	r0, 900167b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900167aa:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900167ae:	9801      	ldr	r0, [sp, #4]
900167b0:	f7ff feb0 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900167b4:	9903      	ldr	r1, [sp, #12]
900167b6:	4628      	mov	r0, r5
900167b8:	f7ff fc95 	bl	900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900167bc:	2800      	cmp	r0, #0
900167be:	f000 809c 	beq.w	900168fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900167c2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
900167c6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900167ca:	fa1f f189 	uxth.w	r1, r9
900167ce:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900167d2:	9309      	str	r3, [sp, #36]	; 0x24
900167d4:	eb01 0c03 	add.w	ip, r1, r3
900167d8:	b283      	uxth	r3, r0
900167da:	4548      	cmp	r0, r9
900167dc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
900167e0:	fa1f fa8c 	uxth.w	sl, ip
900167e4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
900167e8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
900167ec:	eb03 050c 	add.w	r5, r3, ip
900167f0:	b2ad      	uxth	r5, r5
900167f2:	9505      	str	r5, [sp, #20]
900167f4:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900167f8:	9504      	str	r5, [sp, #16]
900167fa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
900167fe:	f340 8099 	ble.w	90016934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90016802:	1a5b      	subs	r3, r3, r1
90016804:	4596      	cmp	lr, r2
90016806:	fa0f f08a 	sxth.w	r0, sl
9001680a:	b29b      	uxth	r3, r3
9001680c:	b21e      	sxth	r6, r3
9001680e:	dd2e      	ble.n	9001686e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90016810:	9f02      	ldr	r7, [sp, #8]
90016812:	fa1f fe8e 	uxth.w	lr, lr
90016816:	b292      	uxth	r2, r2
90016818:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
9001681c:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90016820:	9f04      	ldr	r7, [sp, #16]
90016822:	ebae 0102 	sub.w	r1, lr, r2
90016826:	44a6      	add	lr, r4
90016828:	1a3f      	subs	r7, r7, r0
9001682a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
9001682e:	b289      	uxth	r1, r1
90016830:	4402      	add	r2, r0
90016832:	fa0f fe8e 	sxth.w	lr, lr
90016836:	b20d      	sxth	r5, r1
90016838:	b212      	sxth	r2, r2
9001683a:	436f      	muls	r7, r5
9001683c:	ebae 0202 	sub.w	r2, lr, r2
90016840:	4372      	muls	r2, r6
90016842:	4297      	cmp	r7, r2
90016844:	db09      	blt.n	9001685a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90016846:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001684a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
9001684e:	449c      	add	ip, r3
90016850:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90016854:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90016858:	e686      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001685a:	4421      	add	r1, r4
9001685c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90016860:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90016864:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016868:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001686c:	e67c      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001686e:	9f04      	ldr	r7, [sp, #16]
90016870:	42b8      	cmp	r0, r7
90016872:	da27      	bge.n	900168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90016874:	9902      	ldr	r1, [sp, #8]
90016876:	1a3f      	subs	r7, r7, r0
90016878:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
9001687c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90016880:	eb05 010e 	add.w	r1, r5, lr
90016884:	fa1f f881 	uxth.w	r8, r1
90016888:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
9001688c:	4411      	add	r1, r2
9001688e:	fa0f f988 	sxth.w	r9, r8
90016892:	eba2 020e 	sub.w	r2, r2, lr
90016896:	eba1 0108 	sub.w	r1, r1, r8
9001689a:	4372      	muls	r2, r6
9001689c:	b289      	uxth	r1, r1
9001689e:	fa0f f881 	sxth.w	r8, r1
900168a2:	fb08 f707 	mul.w	r7, r8, r7
900168a6:	42ba      	cmp	r2, r7
900168a8:	dc06      	bgt.n	900168b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900168aa:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
900168ae:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
900168b2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
900168b6:	e7ca      	b.n	9001684e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900168b8:	4429      	add	r1, r5
900168ba:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
900168be:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900168c2:	e651      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900168c4:	9805      	ldr	r0, [sp, #20]
900168c6:	2d06      	cmp	r5, #6
900168c8:	ebaa 0000 	sub.w	r0, sl, r0
900168cc:	b280      	uxth	r0, r0
900168ce:	fa0f fe80 	sxth.w	lr, r0
900168d2:	d817      	bhi.n	90016904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
900168d4:	9b04      	ldr	r3, [sp, #16]
900168d6:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
900168da:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900168de:	1c6b      	adds	r3, r5, #1
900168e0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
900168e4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900168e8:	9b01      	ldr	r3, [sp, #4]
900168ea:	9801      	ldr	r0, [sp, #4]
900168ec:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900168f0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900168f4:	805a      	strh	r2, [r3, #2]
900168f6:	809e      	strh	r6, [r3, #4]
900168f8:	80d9      	strh	r1, [r3, #6]
900168fa:	9b02      	ldr	r3, [sp, #8]
900168fc:	3c08      	subs	r4, #8
900168fe:	3b01      	subs	r3, #1
90016900:	9302      	str	r3, [sp, #8]
90016902:	e747      	b.n	90016794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90016904:	9a02      	ldr	r2, [sp, #8]
90016906:	45b6      	cmp	lr, r6
90016908:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9001690c:	db0d      	blt.n	9001692a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
9001690e:	449c      	add	ip, r3
90016910:	445a      	add	r2, fp
90016912:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90016916:	fa1f fc8c 	uxth.w	ip, ip
9001691a:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
9001691e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90016922:	448c      	add	ip, r1
90016924:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
90016928:	e61e      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001692a:	445a      	add	r2, fp
9001692c:	4484      	add	ip, r0
9001692e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90016932:	e78f      	b.n	90016854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016934:	fa1f f18e 	uxth.w	r1, lr
90016938:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
9001693c:	b293      	uxth	r3, r2
9001693e:	4596      	cmp	lr, r2
90016940:	eb01 0806 	add.w	r8, r1, r6
90016944:	9306      	str	r3, [sp, #24]
90016946:	fa1f f888 	uxth.w	r8, r8
9001694a:	9f06      	ldr	r7, [sp, #24]
9001694c:	fa0f f388 	sxth.w	r3, r8
90016950:	9307      	str	r3, [sp, #28]
90016952:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90016956:	443b      	add	r3, r7
90016958:	b29b      	uxth	r3, r3
9001695a:	9308      	str	r3, [sp, #32]
9001695c:	da24      	bge.n	900169a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
9001695e:	9905      	ldr	r1, [sp, #20]
90016960:	eba3 0308 	sub.w	r3, r3, r8
90016964:	eba2 020e 	sub.w	r2, r2, lr
90016968:	eba9 0000 	sub.w	r0, r9, r0
9001696c:	ebaa 0401 	sub.w	r4, sl, r1
90016970:	b29b      	uxth	r3, r3
90016972:	b2a4      	uxth	r4, r4
90016974:	b219      	sxth	r1, r3
90016976:	b225      	sxth	r5, r4
90016978:	4348      	muls	r0, r1
9001697a:	436a      	muls	r2, r5
9001697c:	4282      	cmp	r2, r0
9001697e:	9a02      	ldr	r2, [sp, #8]
90016980:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016984:	445a      	add	r2, fp
90016986:	dc06      	bgt.n	90016996 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90016988:	9b07      	ldr	r3, [sp, #28]
9001698a:	44a4      	add	ip, r4
9001698c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90016990:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90016994:	e75e      	b.n	90016854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016996:	9904      	ldr	r1, [sp, #16]
90016998:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
9001699c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
900169a0:	4433      	add	r3, r6
900169a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900169a6:	e5df      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900169a8:	9f06      	ldr	r7, [sp, #24]
900169aa:	9b04      	ldr	r3, [sp, #16]
900169ac:	1bc9      	subs	r1, r1, r7
900169ae:	fa0f f78a 	sxth.w	r7, sl
900169b2:	b289      	uxth	r1, r1
900169b4:	429f      	cmp	r7, r3
900169b6:	fa0f fe81 	sxth.w	lr, r1
900169ba:	dd23      	ble.n	90016a04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
900169bc:	9a05      	ldr	r2, [sp, #20]
900169be:	eba9 0000 	sub.w	r0, r9, r0
900169c2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900169c6:	ebaa 0202 	sub.w	r2, sl, r2
900169ca:	9d07      	ldr	r5, [sp, #28]
900169cc:	fb0e f000 	mul.w	r0, lr, r0
900169d0:	b292      	uxth	r2, r2
900169d2:	eba5 0a03 	sub.w	sl, r5, r3
900169d6:	9b02      	ldr	r3, [sp, #8]
900169d8:	b214      	sxth	r4, r2
900169da:	00db      	lsls	r3, r3, #3
900169dc:	fb04 fa0a 	mul.w	sl, r4, sl
900169e0:	445b      	add	r3, fp
900169e2:	4550      	cmp	r0, sl
900169e4:	db03      	blt.n	900169ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
900169e6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
900169ea:	4494      	add	ip, r2
900169ec:	e732      	b.n	90016854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900169ee:	9a04      	ldr	r2, [sp, #16]
900169f0:	4431      	add	r1, r6
900169f2:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
900169f6:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
900169fa:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
900169fe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90016a02:	e75c      	b.n	900168be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90016a04:	9b08      	ldr	r3, [sp, #32]
90016a06:	2d06      	cmp	r5, #6
90016a08:	eba3 0308 	sub.w	r3, r3, r8
90016a0c:	b29b      	uxth	r3, r3
90016a0e:	b218      	sxth	r0, r3
90016a10:	d813      	bhi.n	90016a3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90016a12:	9b07      	ldr	r3, [sp, #28]
90016a14:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
90016a18:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90016a1c:	1c6b      	adds	r3, r5, #1
90016a1e:	9901      	ldr	r1, [sp, #4]
90016a20:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90016a24:	9b01      	ldr	r3, [sp, #4]
90016a26:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90016a2a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90016a2e:	805a      	strh	r2, [r3, #2]
90016a30:	9a09      	ldr	r2, [sp, #36]	; 0x24
90016a32:	f8a3 e006 	strh.w	lr, [r3, #6]
90016a36:	809a      	strh	r2, [r3, #4]
90016a38:	e75f      	b.n	900168fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90016a3a:	9c02      	ldr	r4, [sp, #8]
90016a3c:	4570      	cmp	r0, lr
90016a3e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90016a42:	db0d      	blt.n	90016a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90016a44:	4431      	add	r1, r6
90016a46:	9b06      	ldr	r3, [sp, #24]
90016a48:	445c      	add	r4, fp
90016a4a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90016a4e:	b289      	uxth	r1, r1
90016a50:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90016a54:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016a58:	4419      	add	r1, r3
90016a5a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90016a5e:	e583      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016a60:	445c      	add	r4, fp
90016a62:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
90016a66:	e79b      	b.n	900169a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90016a68:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90016a6c:	f64f 76ff 	movw	r6, #65535	; 0xffff
90016a70:	1e65      	subs	r5, r4, #1
90016a72:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90016a76:	b2ad      	uxth	r5, r5
90016a78:	42b5      	cmp	r5, r6
90016a7a:	d044      	beq.n	90016b06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90016a7c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90016a80:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90016a84:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90016a88:	4282      	cmp	r2, r0
90016a8a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
90016a8e:	d11f      	bne.n	90016ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016a90:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90016a94:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90016a98:	459c      	cmp	ip, r3
90016a9a:	d119      	bne.n	90016ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90016a9c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90016aa0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90016aa4:	19d8      	adds	r0, r3, r7
90016aa6:	b200      	sxth	r0, r0
90016aa8:	4288      	cmp	r0, r1
90016aaa:	d109      	bne.n	90016ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90016aac:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90016ab0:	4413      	add	r3, r2
90016ab2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90016ab6:	4629      	mov	r1, r5
90016ab8:	9801      	ldr	r0, [sp, #4]
90016aba:	f7ff fd2b 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016abe:	e003      	b.n	90016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016ac0:	4411      	add	r1, r2
90016ac2:	b209      	sxth	r1, r1
90016ac4:	42b9      	cmp	r1, r7
90016ac6:	d0f3      	beq.n	90016ab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90016ac8:	3d01      	subs	r5, #1
90016aca:	3c08      	subs	r4, #8
90016acc:	b2ad      	uxth	r5, r5
90016ace:	e7d3      	b.n	90016a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90016ad0:	42b9      	cmp	r1, r7
90016ad2:	d1f9      	bne.n	90016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016ad4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
90016ad8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90016adc:	4299      	cmp	r1, r3
90016ade:	d1f3      	bne.n	90016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016ae0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90016ae4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90016ae8:	181f      	adds	r7, r3, r0
90016aea:	b23f      	sxth	r7, r7
90016aec:	42ba      	cmp	r2, r7
90016aee:	d105      	bne.n	90016afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90016af0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90016af4:	440b      	add	r3, r1
90016af6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90016afa:	e7dc      	b.n	90016ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90016afc:	440a      	add	r2, r1
90016afe:	b212      	sxth	r2, r2
90016b00:	4290      	cmp	r0, r2
90016b02:	d1e1      	bne.n	90016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90016b04:	e7f6      	b.n	90016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90016b06:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
90016b0a:	2e07      	cmp	r6, #7
90016b0c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90016b10:	d812      	bhi.n	90016b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90016b12:	1c75      	adds	r5, r6, #1
90016b14:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90016b18:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90016b1c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90016b20:	9d01      	ldr	r5, [sp, #4]
90016b22:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90016b26:	442c      	add	r4, r5
90016b28:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90016b2c:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90016b30:	8061      	strh	r1, [r4, #2]
90016b32:	80a2      	strh	r2, [r4, #4]
90016b34:	80e3      	strh	r3, [r4, #6]
90016b36:	e581      	b.n	9001663c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016b38:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90016b3c:	3e01      	subs	r6, #1
90016b3e:	445c      	add	r4, fp
90016b40:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90016b44:	f04f 37ff 	mov.w	r7, #4294967295
90016b48:	2500      	movs	r5, #0
90016b4a:	9305      	str	r3, [sp, #20]
90016b4c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90016b50:	1e72      	subs	r2, r6, #1
90016b52:	9302      	str	r3, [sp, #8]
90016b54:	4691      	mov	r9, r2
90016b56:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90016b5a:	9304      	str	r3, [sp, #16]
90016b5c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90016b60:	f1b9 3fff 	cmp.w	r9, #4294967295
90016b64:	6818      	ldr	r0, [r3, #0]
90016b66:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016b6a:	9207      	str	r2, [sp, #28]
90016b6c:	bf16      	itet	ne
90016b6e:	9905      	ldrne	r1, [sp, #20]
90016b70:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90016b74:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90016b78:	9306      	str	r3, [sp, #24]
90016b7a:	f8be 1006 	ldrh.w	r1, [lr, #6]
90016b7e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90016b82:	fb18 f801 	smulbb	r8, r8, r1
90016b86:	6859      	ldr	r1, [r3, #4]
90016b88:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016b8c:	4671      	mov	r1, lr
90016b8e:	a80c      	add	r0, sp, #48	; 0x30
90016b90:	f7ff fb42 	bl	90016218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016b94:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90016b98:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90016b9c:	f04f 0c08 	mov.w	ip, #8
90016ba0:	9b04      	ldr	r3, [sp, #16]
90016ba2:	9a02      	ldr	r2, [sp, #8]
90016ba4:	fb10 f001 	smulbb	r0, r0, r1
90016ba8:	fb02 8803 	mla	r8, r2, r3, r8
90016bac:	eba0 0108 	sub.w	r1, r0, r8
90016bb0:	fb90 f0fc 	sdiv	r0, r0, ip
90016bb4:	4288      	cmp	r0, r1
90016bb6:	dc20      	bgt.n	90016bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90016bb8:	4551      	cmp	r1, sl
90016bba:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90016bbe:	da03      	bge.n	90016bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90016bc0:	b1d9      	cbz	r1, 90016bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90016bc2:	468a      	mov	sl, r1
90016bc4:	464f      	mov	r7, r9
90016bc6:	4635      	mov	r5, r6
90016bc8:	f109 39ff 	add.w	r9, r9, #4294967295
90016bcc:	f119 0f02 	cmn.w	r9, #2
90016bd0:	d1c6      	bne.n	90016b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90016bd2:	4616      	mov	r6, r2
90016bd4:	3201      	adds	r2, #1
90016bd6:	f1a4 0408 	sub.w	r4, r4, #8
90016bda:	d1b7      	bne.n	90016b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90016bdc:	9b01      	ldr	r3, [sp, #4]
90016bde:	b2ac      	uxth	r4, r5
90016be0:	00ed      	lsls	r5, r5, #3
90016be2:	1958      	adds	r0, r3, r5
90016be4:	1c7b      	adds	r3, r7, #1
90016be6:	d10b      	bne.n	90016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90016be8:	4601      	mov	r1, r0
90016bea:	9803      	ldr	r0, [sp, #12]
90016bec:	f7ff fb14 	bl	90016218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016bf0:	4621      	mov	r1, r4
90016bf2:	9801      	ldr	r0, [sp, #4]
90016bf4:	f7ff fc8e 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016bf8:	e4b6      	b.n	90016568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016bfa:	464f      	mov	r7, r9
90016bfc:	4635      	mov	r5, r6
90016bfe:	e7ed      	b.n	90016bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90016c00:	9b01      	ldr	r3, [sp, #4]
90016c02:	00ff      	lsls	r7, r7, #3
90016c04:	445d      	add	r5, fp
90016c06:	19d9      	adds	r1, r3, r7
90016c08:	445f      	add	r7, fp
90016c0a:	f7ff fb05 	bl	90016218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016c0e:	9b03      	ldr	r3, [sp, #12]
90016c10:	cb03      	ldmia	r3!, {r0, r1}
90016c12:	9b03      	ldr	r3, [sp, #12]
90016c14:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90016c18:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90016c1c:	f855 0fac 	ldr.w	r0, [r5, #172]!
90016c20:	6869      	ldr	r1, [r5, #4]
90016c22:	c303      	stmia	r3!, {r0, r1}
90016c24:	e7e4      	b.n	90016bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90016c26:	bf00      	nop

90016c28 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90016c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016c2c:	f500 7698 	add.w	r6, r0, #304	; 0x130
90016c30:	b09b      	sub	sp, #108	; 0x6c
90016c32:	4604      	mov	r4, r0
90016c34:	4630      	mov	r0, r6
90016c36:	f7fa f94e 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016c3a:	4605      	mov	r5, r0
90016c3c:	b948      	cbnz	r0, 90016c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90016c3e:	6823      	ldr	r3, [r4, #0]
90016c40:	4620      	mov	r0, r4
90016c42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016c44:	e896 0006 	ldmia.w	r6, {r1, r2}
90016c48:	4798      	blx	r3
90016c4a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90016c4e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90016c52:	4bc5      	ldr	r3, [pc, #788]	; (90016f68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90016c54:	681b      	ldr	r3, [r3, #0]
90016c56:	2b00      	cmp	r3, #0
90016c58:	d03f      	beq.n	90016cda <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016c5a:	4dc4      	ldr	r5, [pc, #784]	; (90016f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90016c5c:	4628      	mov	r0, r5
90016c5e:	f7fa f93a 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016c62:	4606      	mov	r6, r0
90016c64:	2800      	cmp	r0, #0
90016c66:	d138      	bne.n	90016cda <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90016c68:	4628      	mov	r0, r5
90016c6a:	f7ff f94b 	bl	90015f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016c6e:	6823      	ldr	r3, [r4, #0]
90016c70:	6829      	ldr	r1, [r5, #0]
90016c72:	4620      	mov	r0, r4
90016c74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016c76:	686a      	ldr	r2, [r5, #4]
90016c78:	4798      	blx	r3
90016c7a:	802e      	strh	r6, [r5, #0]
90016c7c:	806e      	strh	r6, [r5, #2]
90016c7e:	80ae      	strh	r6, [r5, #4]
90016c80:	80ee      	strh	r6, [r5, #6]
90016c82:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90016c86:	4dba      	ldr	r5, [pc, #744]	; (90016f70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90016c88:	4640      	mov	r0, r8
90016c8a:	f7ff fbe7 	bl	9001645c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016c8e:	882e      	ldrh	r6, [r5, #0]
90016c90:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90016c94:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90016c98:	4633      	mov	r3, r6
90016c9a:	42bb      	cmp	r3, r7
90016c9c:	d224      	bcs.n	90016ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016c9e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90016ca2:	2907      	cmp	r1, #7
90016ca4:	d816      	bhi.n	90016cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90016ca6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016caa:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90016cae:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90016cb2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90016cb6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90016cba:	1c4a      	adds	r2, r1, #1
90016cbc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90016cc0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90016cc4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90016cc8:	f8a2 a002 	strh.w	sl, [r2, #2]
90016ccc:	f8a2 e004 	strh.w	lr, [r2, #4]
90016cd0:	f8a2 c006 	strh.w	ip, [r2, #6]
90016cd4:	3301      	adds	r3, #1
90016cd6:	b29b      	uxth	r3, r3
90016cd8:	e7df      	b.n	90016c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90016cda:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90016cde:	2b00      	cmp	r3, #0
90016ce0:	d1cf      	bne.n	90016c82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90016ce2:	b01b      	add	sp, #108	; 0x6c
90016ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ce8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90016cec:	42b3      	cmp	r3, r6
90016cee:	d90c      	bls.n	90016d0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90016cf0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90016cf4:	6822      	ldr	r2, [r4, #0]
90016cf6:	3601      	adds	r6, #1
90016cf8:	4620      	mov	r0, r4
90016cfa:	6c17      	ldr	r7, [r2, #64]	; 0x40
90016cfc:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90016d00:	b2b6      	uxth	r6, r6
90016d02:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90016d06:	47b8      	blx	r7
90016d08:	e7ee      	b.n	90016ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016d0a:	4a9a      	ldr	r2, [pc, #616]	; (90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90016d0c:	6813      	ldr	r3, [r2, #0]
90016d0e:	4691      	mov	r9, r2
90016d10:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90016d14:	2b01      	cmp	r3, #1
90016d16:	f040 80e0 	bne.w	90016eda <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90016d1a:	8829      	ldrh	r1, [r5, #0]
90016d1c:	2600      	movs	r6, #0
90016d1e:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90016d22:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90016d26:	33ae      	adds	r3, #174	; 0xae
90016d28:	428f      	cmp	r7, r1
90016d2a:	f103 0308 	add.w	r3, r3, #8
90016d2e:	dd0a      	ble.n	90016d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90016d30:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90016d34:	3101      	adds	r1, #1
90016d36:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90016d3a:	4402      	add	r2, r0
90016d3c:	b212      	sxth	r2, r2
90016d3e:	4296      	cmp	r6, r2
90016d40:	bfb8      	it	lt
90016d42:	4616      	movlt	r6, r2
90016d44:	e7f0      	b.n	90016d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90016d46:	4b8c      	ldr	r3, [pc, #560]	; (90016f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90016d48:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90016d4c:	881b      	ldrh	r3, [r3, #0]
90016d4e:	2b0f      	cmp	r3, #15
90016d50:	bf8c      	ite	hi
90016d52:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90016d56:	f04f 0b01 	movls.w	fp, #1
90016d5a:	2300      	movs	r3, #0
90016d5c:	e9cd 3305 	strd	r3, r3, [sp, #20]
90016d60:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90016d64:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90016d68:	4b82      	ldr	r3, [pc, #520]	; (90016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90016d6a:	4438      	add	r0, r7
90016d6c:	b207      	sxth	r7, r0
90016d6e:	6818      	ldr	r0, [r3, #0]
90016d70:	42b7      	cmp	r7, r6
90016d72:	6803      	ldr	r3, [r0, #0]
90016d74:	f280 8083 	bge.w	90016e7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90016d78:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90016d7c:	4798      	blx	r3
90016d7e:	eb07 030b 	add.w	r3, r7, fp
90016d82:	4298      	cmp	r0, r3
90016d84:	da07      	bge.n	90016d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90016d86:	42b0      	cmp	r0, r6
90016d88:	da05      	bge.n	90016d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90016d8a:	4287      	cmp	r7, r0
90016d8c:	dd6c      	ble.n	90016e68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90016d8e:	2f00      	cmp	r7, #0
90016d90:	dd6a      	ble.n	90016e68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90016d92:	4630      	mov	r0, r6
90016d94:	e004      	b.n	90016da0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90016d96:	4287      	cmp	r7, r0
90016d98:	dcfb      	bgt.n	90016d92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90016d9a:	42b0      	cmp	r0, r6
90016d9c:	bfa8      	it	ge
90016d9e:	4630      	movge	r0, r6
90016da0:	4b76      	ldr	r3, [pc, #472]	; (90016f7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90016da2:	1bc0      	subs	r0, r0, r7
90016da4:	2200      	movs	r2, #0
90016da6:	f8ad 7016 	strh.w	r7, [sp, #22]
90016daa:	f9b3 3000 	ldrsh.w	r3, [r3]
90016dae:	882f      	ldrh	r7, [r5, #0]
90016db0:	f8ad 2014 	strh.w	r2, [sp, #20]
90016db4:	f8ad 3018 	strh.w	r3, [sp, #24]
90016db8:	f8ad 001a 	strh.w	r0, [sp, #26]
90016dbc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90016dc0:	42bb      	cmp	r3, r7
90016dc2:	d9cd      	bls.n	90016d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90016dc4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90016dc8:	ab07      	add	r3, sp, #28
90016dca:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016dce:	6851      	ldr	r1, [r2, #4]
90016dd0:	c303      	stmia	r3!, {r0, r1}
90016dd2:	a905      	add	r1, sp, #20
90016dd4:	a807      	add	r0, sp, #28
90016dd6:	f7ff f986 	bl	900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016dda:	2800      	cmp	r0, #0
90016ddc:	d04c      	beq.n	90016e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90016dde:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90016de2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90016de6:	f8bd a020 	ldrh.w	sl, [sp, #32]
90016dea:	4686      	mov	lr, r0
90016dec:	4290      	cmp	r0, r2
90016dee:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90016df2:	4450      	add	r0, sl
90016df4:	f8bd a018 	ldrh.w	sl, [sp, #24]
90016df8:	bfb8      	it	lt
90016dfa:	4696      	movlt	lr, r2
90016dfc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90016e00:	4452      	add	r2, sl
90016e02:	b280      	uxth	r0, r0
90016e04:	4299      	cmp	r1, r3
90016e06:	468c      	mov	ip, r1
90016e08:	b292      	uxth	r2, r2
90016e0a:	9302      	str	r3, [sp, #8]
90016e0c:	bfb8      	it	lt
90016e0e:	469c      	movlt	ip, r3
90016e10:	b203      	sxth	r3, r0
90016e12:	fa0f fa82 	sxth.w	sl, r2
90016e16:	f8ad e01c 	strh.w	lr, [sp, #28]
90016e1a:	f8ad c01e 	strh.w	ip, [sp, #30]
90016e1e:	4553      	cmp	r3, sl
90016e20:	bfb8      	it	lt
90016e22:	4602      	movlt	r2, r0
90016e24:	9b02      	ldr	r3, [sp, #8]
90016e26:	eba2 020e 	sub.w	r2, r2, lr
90016e2a:	f8ad 2020 	strh.w	r2, [sp, #32]
90016e2e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90016e32:	4411      	add	r1, r2
90016e34:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90016e38:	4413      	add	r3, r2
90016e3a:	b289      	uxth	r1, r1
90016e3c:	b29b      	uxth	r3, r3
90016e3e:	b208      	sxth	r0, r1
90016e40:	b21a      	sxth	r2, r3
90016e42:	4290      	cmp	r0, r2
90016e44:	bfb8      	it	lt
90016e46:	460b      	movlt	r3, r1
90016e48:	eba3 030c 	sub.w	r3, r3, ip
90016e4c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90016e50:	a807      	add	r0, sp, #28
90016e52:	f7fa f840 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016e56:	b920      	cbnz	r0, 90016e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90016e58:	6823      	ldr	r3, [r4, #0]
90016e5a:	a907      	add	r1, sp, #28
90016e5c:	4620      	mov	r0, r4
90016e5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90016e60:	4798      	blx	r3
90016e62:	3701      	adds	r7, #1
90016e64:	b2bf      	uxth	r7, r7
90016e66:	e7a9      	b.n	90016dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90016e68:	f8d9 0000 	ldr.w	r0, [r9]
90016e6c:	2101      	movs	r1, #1
90016e6e:	6803      	ldr	r3, [r0, #0]
90016e70:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90016e74:	4798      	blx	r3
90016e76:	e773      	b.n	90016d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90016e78:	e9cd 0007 	strd	r0, r0, [sp, #28]
90016e7c:	e7e8      	b.n	90016e50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90016e7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016e80:	4798      	blx	r3
90016e82:	4b3f      	ldr	r3, [pc, #252]	; (90016f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90016e84:	781b      	ldrb	r3, [r3, #0]
90016e86:	2b00      	cmp	r3, #0
90016e88:	f43f af2b 	beq.w	90016ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90016e8c:	2300      	movs	r3, #0
90016e8e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90016e92:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90016e96:	882b      	ldrh	r3, [r5, #0]
90016e98:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90016e9c:	42ab      	cmp	r3, r5
90016e9e:	f4bf af20 	bcs.w	90016ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90016ea2:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90016ea6:	2907      	cmp	r1, #7
90016ea8:	d814      	bhi.n	90016ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90016eaa:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90016eae:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90016eb2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90016eb6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90016eba:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90016ebe:	1c4a      	adds	r2, r1, #1
90016ec0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90016ec4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90016ec8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90016ecc:	f8a2 c002 	strh.w	ip, [r2, #2]
90016ed0:	8097      	strh	r7, [r2, #4]
90016ed2:	80d6      	strh	r6, [r2, #6]
90016ed4:	3301      	adds	r3, #1
90016ed6:	b29b      	uxth	r3, r3
90016ed8:	e7e0      	b.n	90016e9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90016eda:	2b02      	cmp	r3, #2
90016edc:	f040 8133 	bne.w	90017146 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90016ee0:	4b28      	ldr	r3, [pc, #160]	; (90016f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90016ee2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90016ee6:	781b      	ldrb	r3, [r3, #0]
90016ee8:	2b01      	cmp	r3, #1
90016eea:	f000 8098 	beq.w	9001701e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90016eee:	882a      	ldrh	r2, [r5, #0]
90016ef0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90016ef4:	3201      	adds	r2, #1
90016ef6:	b292      	uxth	r2, r2
90016ef8:	2900      	cmp	r1, #0
90016efa:	d0c2      	beq.n	90016e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90016efc:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90016f00:	4694      	mov	ip, r2
90016f02:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90016f06:	f04f 0900 	mov.w	r9, #0
90016f0a:	441e      	add	r6, r3
90016f0c:	b236      	sxth	r6, r6
90016f0e:	fa1f f38c 	uxth.w	r3, ip
90016f12:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90016f16:	4299      	cmp	r1, r3
90016f18:	f240 80be 	bls.w	90017098 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90016f1c:	4427      	add	r7, r4
90016f1e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90016f22:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90016f26:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90016f2a:	4283      	cmp	r3, r0
90016f2c:	f340 80a0 	ble.w	90017070 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90016f30:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90016f34:	46e1      	mov	r9, ip
90016f36:	4406      	add	r6, r0
90016f38:	b236      	sxth	r6, r6
90016f3a:	429e      	cmp	r6, r3
90016f3c:	bfa8      	it	ge
90016f3e:	461e      	movge	r6, r3
90016f40:	f10c 0c01 	add.w	ip, ip, #1
90016f44:	e7e3      	b.n	90016f0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90016f46:	d10a      	bne.n	90016f5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90016f48:	4562      	cmp	r2, ip
90016f4a:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90016f4e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90016f52:	bfb8      	it	lt
90016f54:	4662      	movlt	r2, ip
90016f56:	4288      	cmp	r0, r1
90016f58:	bfb8      	it	lt
90016f5a:	461f      	movlt	r7, r3
90016f5c:	e086      	b.n	9001706c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90016f5e:	428a      	cmp	r2, r1
90016f60:	bfb8      	it	lt
90016f62:	460a      	movlt	r2, r1
90016f64:	e082      	b.n	9001706c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90016f66:	bf00      	nop
90016f68:	24039744 	.word	0x24039744
90016f6c:	24039750 	.word	0x24039750
90016f70:	24000080 	.word	0x24000080
90016f74:	24039704 	.word	0x24039704
90016f78:	240396fa 	.word	0x240396fa
90016f7c:	240396f8 	.word	0x240396f8
90016f80:	24039702 	.word	0x24039702
90016f84:	240396fc 	.word	0x240396fc
90016f88:	19a1      	adds	r1, r4, r6
90016f8a:	ab07      	add	r3, sp, #28
90016f8c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90016f90:	6849      	ldr	r1, [r1, #4]
90016f92:	c303      	stmia	r3!, {r0, r1}
90016f94:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90016f98:	a807      	add	r0, sp, #28
90016f9a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90016f9e:	2b13      	cmp	r3, #19
90016fa0:	440b      	add	r3, r1
90016fa2:	bfd8      	it	le
90016fa4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90016fa8:	1a9b      	subs	r3, r3, r2
90016faa:	f8ad 201c 	strh.w	r2, [sp, #28]
90016fae:	f8ad 3020 	strh.w	r3, [sp, #32]
90016fb2:	f7fe ffc1 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90016fb6:	a807      	add	r0, sp, #28
90016fb8:	f7f9 ff8d 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016fbc:	bb78      	cbnz	r0, 9001701e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90016fbe:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90016fc2:	4426      	add	r6, r4
90016fc4:	f8d9 0000 	ldr.w	r0, [r9]
90016fc8:	f1bc 0f14 	cmp.w	ip, #20
90016fcc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90016fd0:	f8d0 e000 	ldr.w	lr, [r0]
90016fd4:	bfa8      	it	ge
90016fd6:	f04f 0c14 	movge.w	ip, #20
90016fda:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90016fde:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90016fe2:	fa1f fc8c 	uxth.w	ip, ip
90016fe6:	f8cd c000 	str.w	ip, [sp]
90016fea:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90016fee:	47d8      	blx	fp
90016ff0:	4683      	mov	fp, r0
90016ff2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90016ff6:	a807      	add	r0, sp, #28
90016ff8:	f7fe ff84 	bl	90015f04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016ffc:	6823      	ldr	r3, [r4, #0]
90016ffe:	4620      	mov	r0, r4
90017000:	a907      	add	r1, sp, #28
90017002:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017004:	4798      	blx	r3
90017006:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001700a:	eba0 000b 	sub.w	r0, r0, fp
9001700e:	b200      	sxth	r0, r0
90017010:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90017014:	b918      	cbnz	r0, 9001701e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017016:	b2b9      	uxth	r1, r7
90017018:	4650      	mov	r0, sl
9001701a:	f7ff fa7b 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001701e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90017022:	f1bb 0f00 	cmp.w	fp, #0
90017026:	f43f af2c 	beq.w	90016e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001702a:	882b      	ldrh	r3, [r5, #0]
9001702c:	2700      	movs	r7, #0
9001702e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90017032:	3301      	adds	r3, #1
90017034:	b29b      	uxth	r3, r3
90017036:	b299      	uxth	r1, r3
90017038:	00fe      	lsls	r6, r7, #3
9001703a:	458b      	cmp	fp, r1
9001703c:	d9a4      	bls.n	90016f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
9001703e:	4426      	add	r6, r4
90017040:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017044:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90017048:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001704c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90017050:	4408      	add	r0, r1
90017052:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90017056:	4461      	add	r1, ip
90017058:	b200      	sxth	r0, r0
9001705a:	b209      	sxth	r1, r1
9001705c:	4288      	cmp	r0, r1
9001705e:	f6bf af72 	bge.w	90016f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017062:	4584      	cmp	ip, r0
90017064:	4662      	mov	r2, ip
90017066:	461f      	mov	r7, r3
90017068:	bfb8      	it	lt
9001706a:	4602      	movlt	r2, r0
9001706c:	3301      	adds	r3, #1
9001706e:	e7e2      	b.n	90017036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017070:	d10e      	bne.n	90017090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017072:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90017076:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
9001707a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
9001707e:	4473      	add	r3, lr
90017080:	b21b      	sxth	r3, r3
90017082:	429e      	cmp	r6, r3
90017084:	bfa8      	it	ge
90017086:	461e      	movge	r6, r3
90017088:	4287      	cmp	r7, r0
9001708a:	bfb8      	it	lt
9001708c:	46e1      	movlt	r9, ip
9001708e:	e757      	b.n	90016f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017090:	4286      	cmp	r6, r0
90017092:	bfa8      	it	ge
90017094:	4606      	movge	r6, r0
90017096:	e753      	b.n	90016f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017098:	eb0a 0007 	add.w	r0, sl, r7
9001709c:	4427      	add	r7, r4
9001709e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
900170a2:	f1bb 0f13 	cmp.w	fp, #19
900170a6:	bfdc      	itt	le
900170a8:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
900170ac:	445e      	addle	r6, fp
900170ae:	e9cd 2102 	strd	r2, r1, [sp, #8]
900170b2:	bfd8      	it	le
900170b4:	b236      	sxthle	r6, r6
900170b6:	f7f9 ff0e 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
900170ba:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
900170be:	2800      	cmp	r0, #0
900170c0:	f47f af1a 	bne.w	90016ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
900170c4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
900170c8:	fa1f fb8b 	uxth.w	fp, fp
900170cc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900170d0:	1ab6      	subs	r6, r6, r2
900170d2:	4829      	ldr	r0, [pc, #164]	; (90017178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
900170d4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
900170d8:	2e14      	cmp	r6, #20
900170da:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
900170de:	6800      	ldr	r0, [r0, #0]
900170e0:	bfa8      	it	ge
900170e2:	2614      	movge	r6, #20
900170e4:	f8ad 101c 	strh.w	r1, [sp, #28]
900170e8:	f8ad 201e 	strh.w	r2, [sp, #30]
900170ec:	b289      	uxth	r1, r1
900170ee:	f8ad 3020 	strh.w	r3, [sp, #32]
900170f2:	b2b6      	uxth	r6, r6
900170f4:	f8d0 c000 	ldr.w	ip, [r0]
900170f8:	b292      	uxth	r2, r2
900170fa:	455e      	cmp	r6, fp
900170fc:	bf94      	ite	ls
900170fe:	9600      	strls	r6, [sp, #0]
90017100:	f8cd b000 	strhi.w	fp, [sp]
90017104:	b29b      	uxth	r3, r3
90017106:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
9001710a:	47b0      	blx	r6
9001710c:	6823      	ldr	r3, [r4, #0]
9001710e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017112:	a907      	add	r1, sp, #28
90017114:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017116:	4620      	mov	r0, r4
90017118:	4798      	blx	r3
9001711a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001711e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90017122:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90017126:	1a5b      	subs	r3, r3, r1
90017128:	440a      	add	r2, r1
9001712a:	b21b      	sxth	r3, r3
9001712c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90017130:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90017134:	2b00      	cmp	r3, #0
90017136:	f47f aeda 	bne.w	90016eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001713a:	fa1f f189 	uxth.w	r1, r9
9001713e:	4650      	mov	r0, sl
90017140:	f7ff f9e8 	bl	90016514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017144:	e6d3      	b.n	90016eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90017146:	882e      	ldrh	r6, [r5, #0]
90017148:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001714c:	42b3      	cmp	r3, r6
9001714e:	f67f ae98 	bls.w	90016e82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017152:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90017156:	ab07      	add	r3, sp, #28
90017158:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001715c:	6851      	ldr	r1, [r2, #4]
9001715e:	c303      	stmia	r3!, {r0, r1}
90017160:	a807      	add	r0, sp, #28
90017162:	f7f9 feb8 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
90017166:	b920      	cbnz	r0, 90017172 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90017168:	6823      	ldr	r3, [r4, #0]
9001716a:	a907      	add	r1, sp, #28
9001716c:	4620      	mov	r0, r4
9001716e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017170:	4798      	blx	r3
90017172:	3601      	adds	r6, #1
90017174:	b2b6      	uxth	r6, r6
90017176:	e7e7      	b.n	90017148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017178:	24039704 	.word	0x24039704

9001717c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001717c:	4b03      	ldr	r3, [pc, #12]	; (9001718c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001717e:	2200      	movs	r2, #0
90017180:	801a      	strh	r2, [r3, #0]
90017182:	805a      	strh	r2, [r3, #2]
90017184:	809a      	strh	r2, [r3, #4]
90017186:	80da      	strh	r2, [r3, #6]
90017188:	4770      	bx	lr
9001718a:	bf00      	nop
9001718c:	24039750 	.word	0x24039750

90017190 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90017190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017194:	b09d      	sub	sp, #116	; 0x74
90017196:	4606      	mov	r6, r0
90017198:	4614      	mov	r4, r2
9001719a:	468a      	mov	sl, r1
9001719c:	a803      	add	r0, sp, #12
9001719e:	461d      	mov	r5, r3
900171a0:	f000 fe9d 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
900171a4:	6833      	ldr	r3, [r6, #0]
900171a6:	4630      	mov	r0, r6
900171a8:	f242 0b0b 	movw	fp, #8203	; 0x200b
900171ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900171ae:	4798      	blx	r3
900171b0:	6833      	ldr	r3, [r6, #0]
900171b2:	4607      	mov	r7, r0
900171b4:	4630      	mov	r0, r6
900171b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900171b8:	4798      	blx	r3
900171ba:	462a      	mov	r2, r5
900171bc:	2500      	movs	r5, #0
900171be:	4621      	mov	r1, r4
900171c0:	9000      	str	r0, [sp, #0]
900171c2:	463b      	mov	r3, r7
900171c4:	462c      	mov	r4, r5
900171c6:	46a9      	mov	r9, r5
900171c8:	46a8      	mov	r8, r5
900171ca:	a803      	add	r0, sp, #12
900171cc:	f000 fee2 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900171d0:	2300      	movs	r3, #0
900171d2:	9302      	str	r3, [sp, #8]
900171d4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900171d8:	429c      	cmp	r4, r3
900171da:	d002      	beq.n	900171e2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900171dc:	455c      	cmp	r4, fp
900171de:	bf18      	it	ne
900171e0:	4625      	movne	r5, r4
900171e2:	ab02      	add	r3, sp, #8
900171e4:	4632      	mov	r2, r6
900171e6:	4651      	mov	r1, sl
900171e8:	a803      	add	r0, sp, #12
900171ea:	f001 f9d9 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900171ee:	4604      	mov	r4, r0
900171f0:	b108      	cbz	r0, 900171f6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900171f2:	280a      	cmp	r0, #10
900171f4:	d10a      	bne.n	9001720c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900171f6:	45c1      	cmp	r9, r8
900171f8:	bf38      	it	cc
900171fa:	46c1      	movcc	r9, r8
900171fc:	f04f 0800 	mov.w	r8, #0
90017200:	2c00      	cmp	r4, #0
90017202:	d1e5      	bne.n	900171d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017204:	4648      	mov	r0, r9
90017206:	b01d      	add	sp, #116	; 0x74
90017208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001720c:	9a02      	ldr	r2, [sp, #8]
9001720e:	2a00      	cmp	r2, #0
90017210:	d0de      	beq.n	900171d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017212:	7b57      	ldrb	r7, [r2, #13]
90017214:	4629      	mov	r1, r5
90017216:	6833      	ldr	r3, [r6, #0]
90017218:	007f      	lsls	r7, r7, #1
9001721a:	8894      	ldrh	r4, [r2, #4]
9001721c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001721e:	f407 7080 	and.w	r0, r7, #256	; 0x100
90017222:	7a97      	ldrb	r7, [r2, #10]
90017224:	4307      	orrs	r7, r0
90017226:	4630      	mov	r0, r6
90017228:	4798      	blx	r3
9001722a:	4438      	add	r0, r7
9001722c:	4480      	add	r8, r0
9001722e:	fa1f f888 	uxth.w	r8, r8
90017232:	e7e5      	b.n	90017200 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90017234 <_ZNK8touchgfx4Font12getCharWidthEt>:
90017234:	b508      	push	{r3, lr}
90017236:	6803      	ldr	r3, [r0, #0]
90017238:	68db      	ldr	r3, [r3, #12]
9001723a:	4798      	blx	r3
9001723c:	b128      	cbz	r0, 9001724a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001723e:	7b43      	ldrb	r3, [r0, #13]
90017240:	7a80      	ldrb	r0, [r0, #10]
90017242:	005b      	lsls	r3, r3, #1
90017244:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017248:	4318      	orrs	r0, r3
9001724a:	bd08      	pop	{r3, pc}

9001724c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001724c:	b40e      	push	{r1, r2, r3}
9001724e:	b5f0      	push	{r4, r5, r6, r7, lr}
90017250:	b09e      	sub	sp, #120	; 0x78
90017252:	4605      	mov	r5, r0
90017254:	ab23      	add	r3, sp, #140	; 0x8c
90017256:	a805      	add	r0, sp, #20
90017258:	f853 4b04 	ldr.w	r4, [r3], #4
9001725c:	9303      	str	r3, [sp, #12]
9001725e:	f000 fe3e 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
90017262:	682b      	ldr	r3, [r5, #0]
90017264:	4628      	mov	r0, r5
90017266:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017268:	4798      	blx	r3
9001726a:	682b      	ldr	r3, [r5, #0]
9001726c:	4606      	mov	r6, r0
9001726e:	4628      	mov	r0, r5
90017270:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017272:	4798      	blx	r3
90017274:	4633      	mov	r3, r6
90017276:	4621      	mov	r1, r4
90017278:	ae1e      	add	r6, sp, #120	; 0x78
9001727a:	2400      	movs	r4, #0
9001727c:	9000      	str	r0, [sp, #0]
9001727e:	9a03      	ldr	r2, [sp, #12]
90017280:	a805      	add	r0, sp, #20
90017282:	f000 fe87 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017286:	f846 4d68 	str.w	r4, [r6, #-104]!
9001728a:	462a      	mov	r2, r5
9001728c:	4633      	mov	r3, r6
9001728e:	4621      	mov	r1, r4
90017290:	a805      	add	r0, sp, #20
90017292:	f001 f985 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017296:	b300      	cbz	r0, 900172da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017298:	280a      	cmp	r0, #10
9001729a:	d01a      	beq.n	900172d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001729c:	9f04      	ldr	r7, [sp, #16]
9001729e:	b1c7      	cbz	r7, 900172d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900172a0:	7b78      	ldrb	r0, [r7, #13]
900172a2:	7a3b      	ldrb	r3, [r7, #8]
900172a4:	00c1      	lsls	r1, r0, #3
900172a6:	88ea      	ldrh	r2, [r5, #6]
900172a8:	f401 7180 	and.w	r1, r1, #256	; 0x100
900172ac:	4319      	orrs	r1, r3
900172ae:	0643      	lsls	r3, r0, #25
900172b0:	ea4f 1000 	mov.w	r0, r0, lsl #4
900172b4:	bf48      	it	mi
900172b6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
900172ba:	f400 7080 	and.w	r0, r0, #256	; 0x100
900172be:	bf48      	it	mi
900172c0:	b219      	sxthmi	r1, r3
900172c2:	79fb      	ldrb	r3, [r7, #7]
900172c4:	4303      	orrs	r3, r0
900172c6:	4413      	add	r3, r2
900172c8:	1a5b      	subs	r3, r3, r1
900172ca:	b21b      	sxth	r3, r3
900172cc:	429c      	cmp	r4, r3
900172ce:	bfb8      	it	lt
900172d0:	461c      	movlt	r4, r3
900172d2:	4633      	mov	r3, r6
900172d4:	462a      	mov	r2, r5
900172d6:	2100      	movs	r1, #0
900172d8:	e7da      	b.n	90017290 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
900172da:	b2a0      	uxth	r0, r4
900172dc:	b01e      	add	sp, #120	; 0x78
900172de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900172e2:	b003      	add	sp, #12
900172e4:	4770      	bx	lr

900172e6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900172e6:	7a43      	ldrb	r3, [r0, #9]
900172e8:	8880      	ldrh	r0, [r0, #4]
900172ea:	4418      	add	r0, r3
900172ec:	b280      	uxth	r0, r0
900172ee:	4770      	bx	lr

900172f0 <_ZNK8touchgfx4Font13getFontHeightEv>:
900172f0:	6803      	ldr	r3, [r0, #0]
900172f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900172f4:	4718      	bx	r3

900172f6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900172f6:	b40e      	push	{r1, r2, r3}
900172f8:	b570      	push	{r4, r5, r6, lr}
900172fa:	b09d      	sub	sp, #116	; 0x74
900172fc:	4604      	mov	r4, r0
900172fe:	ab21      	add	r3, sp, #132	; 0x84
90017300:	a803      	add	r0, sp, #12
90017302:	f853 5b04 	ldr.w	r5, [r3], #4
90017306:	9302      	str	r3, [sp, #8]
90017308:	f000 fde9 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
9001730c:	6823      	ldr	r3, [r4, #0]
9001730e:	4620      	mov	r0, r4
90017310:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017312:	4798      	blx	r3
90017314:	6823      	ldr	r3, [r4, #0]
90017316:	4606      	mov	r6, r0
90017318:	4620      	mov	r0, r4
9001731a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001731c:	2401      	movs	r4, #1
9001731e:	4798      	blx	r3
90017320:	4633      	mov	r3, r6
90017322:	9000      	str	r0, [sp, #0]
90017324:	4629      	mov	r1, r5
90017326:	9a02      	ldr	r2, [sp, #8]
90017328:	a803      	add	r0, sp, #12
9001732a:	f000 fe33 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001732e:	a803      	add	r0, sp, #12
90017330:	f001 fa02 	bl	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017334:	b2a3      	uxth	r3, r4
90017336:	b138      	cbz	r0, 90017348 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90017338:	280a      	cmp	r0, #10
9001733a:	a803      	add	r0, sp, #12
9001733c:	bf04      	itt	eq
9001733e:	3301      	addeq	r3, #1
90017340:	b21c      	sxtheq	r4, r3
90017342:	f001 f9f9 	bl	90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017346:	e7f5      	b.n	90017334 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90017348:	4618      	mov	r0, r3
9001734a:	b01d      	add	sp, #116	; 0x74
9001734c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017350:	b003      	add	sp, #12
90017352:	4770      	bx	lr

90017354 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90017354:	b40e      	push	{r1, r2, r3}
90017356:	b5f0      	push	{r4, r5, r6, r7, lr}
90017358:	b09e      	sub	sp, #120	; 0x78
9001735a:	4604      	mov	r4, r0
9001735c:	ab23      	add	r3, sp, #140	; 0x8c
9001735e:	a805      	add	r0, sp, #20
90017360:	f853 5b04 	ldr.w	r5, [r3], #4
90017364:	9303      	str	r3, [sp, #12]
90017366:	f000 fdba 	bl	90017ede <_ZN8touchgfx12TextProviderC1Ev>
9001736a:	6823      	ldr	r3, [r4, #0]
9001736c:	4620      	mov	r0, r4
9001736e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017370:	4798      	blx	r3
90017372:	6823      	ldr	r3, [r4, #0]
90017374:	4606      	mov	r6, r0
90017376:	4620      	mov	r0, r4
90017378:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001737a:	4798      	blx	r3
9001737c:	4633      	mov	r3, r6
9001737e:	4629      	mov	r1, r5
90017380:	9000      	str	r0, [sp, #0]
90017382:	9a03      	ldr	r2, [sp, #12]
90017384:	a805      	add	r0, sp, #20
90017386:	f000 fe05 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001738a:	ad1e      	add	r5, sp, #120	; 0x78
9001738c:	2100      	movs	r1, #0
9001738e:	f647 76ff 	movw	r6, #32767	; 0x7fff
90017392:	4622      	mov	r2, r4
90017394:	a805      	add	r0, sp, #20
90017396:	f845 1d68 	str.w	r1, [r5, #-104]!
9001739a:	462b      	mov	r3, r5
9001739c:	f001 f900 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900173a0:	b1d8      	cbz	r0, 900173da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900173a2:	280a      	cmp	r0, #10
900173a4:	d012      	beq.n	900173cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900173a6:	9804      	ldr	r0, [sp, #16]
900173a8:	b180      	cbz	r0, 900173cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900173aa:	7b47      	ldrb	r7, [r0, #13]
900173ac:	88e2      	ldrh	r2, [r4, #6]
900173ae:	00fb      	lsls	r3, r7, #3
900173b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
900173b4:	7a03      	ldrb	r3, [r0, #8]
900173b6:	430b      	orrs	r3, r1
900173b8:	0679      	lsls	r1, r7, #25
900173ba:	bf44      	itt	mi
900173bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900173c0:	b21b      	sxthmi	r3, r3
900173c2:	1ad3      	subs	r3, r2, r3
900173c4:	b21b      	sxth	r3, r3
900173c6:	429e      	cmp	r6, r3
900173c8:	bfa8      	it	ge
900173ca:	461e      	movge	r6, r3
900173cc:	462b      	mov	r3, r5
900173ce:	4622      	mov	r2, r4
900173d0:	2100      	movs	r1, #0
900173d2:	a805      	add	r0, sp, #20
900173d4:	f001 f8e4 	bl	900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900173d8:	e7e2      	b.n	900173a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900173da:	4630      	mov	r0, r6
900173dc:	b01e      	add	sp, #120	; 0x78
900173de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900173e2:	b003      	add	sp, #12
900173e4:	4770      	bx	lr

900173e6 <_ZNK8touchgfx8Drawable10invalidateEv>:
900173e6:	b513      	push	{r0, r1, r4, lr}
900173e8:	6803      	ldr	r3, [r0, #0]
900173ea:	2400      	movs	r4, #0
900173ec:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900173f0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900173f4:	f8ad 1004 	strh.w	r1, [sp, #4]
900173f8:	4669      	mov	r1, sp
900173fa:	691b      	ldr	r3, [r3, #16]
900173fc:	9400      	str	r4, [sp, #0]
900173fe:	f8ad 2006 	strh.w	r2, [sp, #6]
90017402:	4798      	blx	r3
90017404:	b002      	add	sp, #8
90017406:	bd10      	pop	{r4, pc}

90017408 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90017408:	b538      	push	{r3, r4, r5, lr}
9001740a:	680b      	ldr	r3, [r1, #0]
9001740c:	460c      	mov	r4, r1
9001740e:	4605      	mov	r5, r0
90017410:	68db      	ldr	r3, [r3, #12]
90017412:	4798      	blx	r3
90017414:	6823      	ldr	r3, [r4, #0]
90017416:	4620      	mov	r0, r4
90017418:	4629      	mov	r1, r5
9001741a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001741c:	4798      	blx	r3
9001741e:	4628      	mov	r0, r5
90017420:	bd38      	pop	{r3, r4, r5, pc}

90017422 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90017422:	b410      	push	{r4}
90017424:	880a      	ldrh	r2, [r1, #0]
90017426:	8884      	ldrh	r4, [r0, #4]
90017428:	4422      	add	r2, r4
9001742a:	800a      	strh	r2, [r1, #0]
9001742c:	884a      	ldrh	r2, [r1, #2]
9001742e:	88c4      	ldrh	r4, [r0, #6]
90017430:	4422      	add	r2, r4
90017432:	804a      	strh	r2, [r1, #2]
90017434:	6940      	ldr	r0, [r0, #20]
90017436:	b120      	cbz	r0, 90017442 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90017438:	6803      	ldr	r3, [r0, #0]
9001743a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001743e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017440:	4718      	bx	r3
90017442:	f85d 4b04 	ldr.w	r4, [sp], #4
90017446:	4770      	bx	lr

90017448 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90017448:	b570      	push	{r4, r5, r6, lr}
9001744a:	8882      	ldrh	r2, [r0, #4]
9001744c:	460c      	mov	r4, r1
9001744e:	880b      	ldrh	r3, [r1, #0]
90017450:	4605      	mov	r5, r0
90017452:	4413      	add	r3, r2
90017454:	800b      	strh	r3, [r1, #0]
90017456:	884b      	ldrh	r3, [r1, #2]
90017458:	88c2      	ldrh	r2, [r0, #6]
9001745a:	4413      	add	r3, r2
9001745c:	804b      	strh	r3, [r1, #2]
9001745e:	1d01      	adds	r1, r0, #4
90017460:	4620      	mov	r0, r4
90017462:	f7f9 fcf5 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90017466:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001746a:	2b00      	cmp	r3, #0
9001746c:	dd0b      	ble.n	90017486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001746e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017472:	2b00      	cmp	r3, #0
90017474:	dd07      	ble.n	90017486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017476:	6968      	ldr	r0, [r5, #20]
90017478:	b128      	cbz	r0, 90017486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001747a:	6803      	ldr	r3, [r0, #0]
9001747c:	4621      	mov	r1, r4
9001747e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017484:	4718      	bx	r3
90017486:	bd70      	pop	{r4, r5, r6, pc}

90017488 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017488:	b570      	push	{r4, r5, r6, lr}
9001748a:	8882      	ldrh	r2, [r0, #4]
9001748c:	460c      	mov	r4, r1
9001748e:	880b      	ldrh	r3, [r1, #0]
90017490:	4605      	mov	r5, r0
90017492:	4413      	add	r3, r2
90017494:	800b      	strh	r3, [r1, #0]
90017496:	884b      	ldrh	r3, [r1, #2]
90017498:	88c2      	ldrh	r2, [r0, #6]
9001749a:	4413      	add	r3, r2
9001749c:	804b      	strh	r3, [r1, #2]
9001749e:	1d01      	adds	r1, r0, #4
900174a0:	4620      	mov	r0, r4
900174a2:	f7f9 fcd5 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
900174a6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900174aa:	2b00      	cmp	r3, #0
900174ac:	dd19      	ble.n	900174e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900174ae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900174b2:	2b00      	cmp	r3, #0
900174b4:	dd15      	ble.n	900174e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900174b6:	6968      	ldr	r0, [r5, #20]
900174b8:	b128      	cbz	r0, 900174c6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900174ba:	6803      	ldr	r3, [r0, #0]
900174bc:	4621      	mov	r1, r4
900174be:	691b      	ldr	r3, [r3, #16]
900174c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900174c4:	4718      	bx	r3
900174c6:	4b07      	ldr	r3, [pc, #28]	; (900174e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
900174c8:	681b      	ldr	r3, [r3, #0]
900174ca:	3304      	adds	r3, #4
900174cc:	429d      	cmp	r5, r3
900174ce:	d108      	bne.n	900174e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900174d0:	f7fe fee8 	bl	900162a4 <_ZN8touchgfx11Application11getInstanceEv>
900174d4:	6803      	ldr	r3, [r0, #0]
900174d6:	6821      	ldr	r1, [r4, #0]
900174d8:	6862      	ldr	r2, [r4, #4]
900174da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900174dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900174e0:	4718      	bx	r3
900174e2:	bd70      	pop	{r4, r5, r6, pc}
900174e4:	24039748 	.word	0x24039748

900174e8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
900174e8:	b570      	push	{r4, r5, r6, lr}
900174ea:	4604      	mov	r4, r0
900174ec:	4616      	mov	r6, r2
900174ee:	460d      	mov	r5, r1
900174f0:	b901      	cbnz	r1, 900174f4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
900174f2:	b192      	cbz	r2, 9001751a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
900174f4:	6823      	ldr	r3, [r4, #0]
900174f6:	4620      	mov	r0, r4
900174f8:	699b      	ldr	r3, [r3, #24]
900174fa:	4798      	blx	r3
900174fc:	88e2      	ldrh	r2, [r4, #6]
900174fe:	88a1      	ldrh	r1, [r4, #4]
90017500:	4620      	mov	r0, r4
90017502:	4432      	add	r2, r6
90017504:	4429      	add	r1, r5
90017506:	b212      	sxth	r2, r2
90017508:	b209      	sxth	r1, r1
9001750a:	f7f9 ff77 	bl	900113fc <_ZN8touchgfx8Drawable5setXYEss>
9001750e:	6823      	ldr	r3, [r4, #0]
90017510:	4620      	mov	r0, r4
90017512:	699b      	ldr	r3, [r3, #24]
90017514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017518:	4718      	bx	r3
9001751a:	bd70      	pop	{r4, r5, r6, pc}

9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001751c:	b510      	push	{r4, lr}
9001751e:	2300      	movs	r3, #0
90017520:	4604      	mov	r4, r0
90017522:	4608      	mov	r0, r1
90017524:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90017528:	8023      	strh	r3, [r4, #0]
9001752a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001752e:	8063      	strh	r3, [r4, #2]
90017530:	6803      	ldr	r3, [r0, #0]
90017532:	80a1      	strh	r1, [r4, #4]
90017534:	4621      	mov	r1, r4
90017536:	80e2      	strh	r2, [r4, #6]
90017538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001753a:	4798      	blx	r3
9001753c:	4620      	mov	r0, r4
9001753e:	bd10      	pop	{r4, pc}

90017540 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90017540:	b530      	push	{r4, r5, lr}
90017542:	8083      	strh	r3, [r0, #4]
90017544:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90017548:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001754c:	80c3      	strh	r3, [r0, #6]
9001754e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90017552:	6141      	str	r1, [r0, #20]
90017554:	7203      	strb	r3, [r0, #8]
90017556:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001755a:	8302      	strh	r2, [r0, #24]
9001755c:	7243      	strb	r3, [r0, #9]
9001755e:	7a83      	ldrb	r3, [r0, #10]
90017560:	f365 0306 	bfi	r3, r5, #0, #7
90017564:	f89d 501c 	ldrb.w	r5, [sp, #28]
90017568:	f365 13c7 	bfi	r3, r5, #7, #1
9001756c:	7283      	strb	r3, [r0, #10]
9001756e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017572:	72c3      	strb	r3, [r0, #11]
90017574:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
90017578:	7303      	strb	r3, [r0, #12]
9001757a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001757e:	81c3      	strh	r3, [r0, #14]
90017580:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90017584:	8203      	strh	r3, [r0, #16]
90017586:	4b01      	ldr	r3, [pc, #4]	; (9001758c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017588:	6003      	str	r3, [r0, #0]
9001758a:	bd30      	pop	{r4, r5, pc}
9001758c:	9002b964 	.word	0x9002b964

90017590 <_ZNK8touchgfx9ConstFont4findEt>:
90017590:	b5f0      	push	{r4, r5, r6, r7, lr}
90017592:	6944      	ldr	r4, [r0, #20]
90017594:	b3bc      	cbz	r4, 90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017596:	88a3      	ldrh	r3, [r4, #4]
90017598:	8b02      	ldrh	r2, [r0, #24]
9001759a:	1acb      	subs	r3, r1, r3
9001759c:	f102 32ff 	add.w	r2, r2, #4294967295
900175a0:	d431      	bmi.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175a2:	4293      	cmp	r3, r2
900175a4:	dd0c      	ble.n	900175c0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900175a6:	230e      	movs	r3, #14
900175a8:	fb03 4302 	mla	r3, r3, r2, r4
900175ac:	889b      	ldrh	r3, [r3, #4]
900175ae:	1a5b      	subs	r3, r3, r1
900175b0:	1ad3      	subs	r3, r2, r3
900175b2:	429a      	cmp	r2, r3
900175b4:	db27      	blt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175b6:	2b00      	cmp	r3, #0
900175b8:	bfbc      	itt	lt
900175ba:	2302      	movlt	r3, #2
900175bc:	fb92 f3f3 	sdivlt	r3, r2, r3
900175c0:	2500      	movs	r5, #0
900175c2:	260e      	movs	r6, #14
900175c4:	4295      	cmp	r5, r2
900175c6:	dc1e      	bgt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175c8:	fb06 4003 	mla	r0, r6, r3, r4
900175cc:	8887      	ldrh	r7, [r0, #4]
900175ce:	42b9      	cmp	r1, r7
900175d0:	d01a      	beq.n	90017608 <_ZNK8touchgfx9ConstFont4findEt+0x78>
900175d2:	d20d      	bcs.n	900175f0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900175d4:	1e5a      	subs	r2, r3, #1
900175d6:	4295      	cmp	r5, r2
900175d8:	dc15      	bgt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175da:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900175de:	1a5b      	subs	r3, r3, r1
900175e0:	1ad3      	subs	r3, r2, r3
900175e2:	429a      	cmp	r2, r3
900175e4:	db0f      	blt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175e6:	429d      	cmp	r5, r3
900175e8:	ddec      	ble.n	900175c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900175ea:	1953      	adds	r3, r2, r5
900175ec:	105b      	asrs	r3, r3, #1
900175ee:	e7e9      	b.n	900175c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900175f0:	1c5d      	adds	r5, r3, #1
900175f2:	42aa      	cmp	r2, r5
900175f4:	db07      	blt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
900175f6:	8a43      	ldrh	r3, [r0, #18]
900175f8:	1acb      	subs	r3, r1, r3
900175fa:	442b      	add	r3, r5
900175fc:	429d      	cmp	r5, r3
900175fe:	dc02      	bgt.n	90017606 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017600:	429a      	cmp	r2, r3
90017602:	dadf      	bge.n	900175c4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017604:	e7f1      	b.n	900175ea <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017606:	2000      	movs	r0, #0
90017608:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001760a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001760a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001760c:	4604      	mov	r4, r0
9001760e:	4617      	mov	r7, r2
90017610:	461e      	mov	r6, r3
90017612:	b911      	cbnz	r1, 9001761a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90017614:	2500      	movs	r5, #0
90017616:	4628      	mov	r0, r5
90017618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001761a:	290a      	cmp	r1, #10
9001761c:	d0fa      	beq.n	90017614 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001761e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90017622:	4291      	cmp	r1, r2
90017624:	d0f6      	beq.n	90017614 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017626:	f242 020b 	movw	r2, #8203	; 0x200b
9001762a:	4291      	cmp	r1, r2
9001762c:	d0f2      	beq.n	90017614 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001762e:	f7ff ffaf 	bl	90017590 <_ZNK8touchgfx9ConstFont4findEt>
90017632:	4605      	mov	r5, r0
90017634:	b950      	cbnz	r0, 9001764c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90017636:	6823      	ldr	r3, [r4, #0]
90017638:	4620      	mov	r0, r4
9001763a:	691b      	ldr	r3, [r3, #16]
9001763c:	4798      	blx	r3
9001763e:	4601      	mov	r1, r0
90017640:	4620      	mov	r0, r4
90017642:	f7ff ffa5 	bl	90017590 <_ZNK8touchgfx9ConstFont4findEt>
90017646:	4605      	mov	r5, r0
90017648:	2800      	cmp	r0, #0
9001764a:	d0e3      	beq.n	90017614 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001764c:	6823      	ldr	r3, [r4, #0]
9001764e:	4629      	mov	r1, r5
90017650:	4620      	mov	r0, r4
90017652:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90017654:	4798      	blx	r3
90017656:	6038      	str	r0, [r7, #0]
90017658:	6823      	ldr	r3, [r4, #0]
9001765a:	4620      	mov	r0, r4
9001765c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001765e:	4798      	blx	r3
90017660:	7030      	strb	r0, [r6, #0]
90017662:	e7d8      	b.n	90017616 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90017664 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90017664:	b538      	push	{r3, r4, r5, lr}
90017666:	4605      	mov	r5, r0
90017668:	f002 f936 	bl	900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001766c:	4604      	mov	r4, r0
9001766e:	4628      	mov	r0, r5
90017670:	f002 f876 	bl	90019760 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017674:	2800      	cmp	r0, #0
90017676:	bf14      	ite	ne
90017678:	2002      	movne	r0, #2
9001767a:	2000      	moveq	r0, #0
9001767c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90017680:	b280      	uxth	r0, r0
90017682:	bd38      	pop	{r3, r4, r5, pc}

90017684 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90017684:	b538      	push	{r3, r4, r5, lr}
90017686:	4605      	mov	r5, r0
90017688:	f002 f926 	bl	900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001768c:	4604      	mov	r4, r0
9001768e:	4628      	mov	r0, r5
90017690:	f002 f866 	bl	90019760 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017694:	2800      	cmp	r0, #0
90017696:	bf14      	ite	ne
90017698:	2002      	movne	r0, #2
9001769a:	2000      	moveq	r0, #0
9001769c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900176a0:	f040 0001 	orr.w	r0, r0, #1
900176a4:	b280      	uxth	r0, r0
900176a6:	bd38      	pop	{r3, r4, r5, pc}

900176a8 <_ZN8touchgfx4clzuEm>:
900176a8:	4603      	mov	r3, r0
900176aa:	b1c8      	cbz	r0, 900176e0 <_ZN8touchgfx4clzuEm+0x38>
900176ac:	0c02      	lsrs	r2, r0, #16
900176ae:	0412      	lsls	r2, r2, #16
900176b0:	b9a2      	cbnz	r2, 900176dc <_ZN8touchgfx4clzuEm+0x34>
900176b2:	0403      	lsls	r3, r0, #16
900176b4:	2010      	movs	r0, #16
900176b6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900176ba:	bf04      	itt	eq
900176bc:	021b      	lsleq	r3, r3, #8
900176be:	3008      	addeq	r0, #8
900176c0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900176c4:	bf04      	itt	eq
900176c6:	011b      	lsleq	r3, r3, #4
900176c8:	3004      	addeq	r0, #4
900176ca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900176ce:	bf04      	itt	eq
900176d0:	009b      	lsleq	r3, r3, #2
900176d2:	3002      	addeq	r0, #2
900176d4:	2b00      	cmp	r3, #0
900176d6:	db04      	blt.n	900176e2 <_ZN8touchgfx4clzuEm+0x3a>
900176d8:	3001      	adds	r0, #1
900176da:	4770      	bx	lr
900176dc:	2000      	movs	r0, #0
900176de:	e7ea      	b.n	900176b6 <_ZN8touchgfx4clzuEm+0xe>
900176e0:	2020      	movs	r0, #32
900176e2:	4770      	bx	lr

900176e4 <_ZN8touchgfx7muldivuEmmmRm>:
900176e4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900176e8:	460f      	mov	r7, r1
900176ea:	4615      	mov	r5, r2
900176ec:	461e      	mov	r6, r3
900176ee:	4601      	mov	r1, r0
900176f0:	b100      	cbz	r0, 900176f4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
900176f2:	b927      	cbnz	r7, 900176fe <_ZN8touchgfx7muldivuEmmmRm+0x1a>
900176f4:	2000      	movs	r0, #0
900176f6:	6030      	str	r0, [r6, #0]
900176f8:	b002      	add	sp, #8
900176fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900176fe:	f7ff ffd3 	bl	900176a8 <_ZN8touchgfx4clzuEm>
90017702:	b980      	cbnz	r0, 90017726 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90017704:	4638      	mov	r0, r7
90017706:	f7ff ffcf 	bl	900176a8 <_ZN8touchgfx4clzuEm>
9001770a:	2800      	cmp	r0, #0
9001770c:	dd05      	ble.n	9001771a <_ZN8touchgfx7muldivuEmmmRm+0x36>
9001770e:	4633      	mov	r3, r6
90017710:	462a      	mov	r2, r5
90017712:	4638      	mov	r0, r7
90017714:	f7ff ffe6 	bl	900176e4 <_ZN8touchgfx7muldivuEmmmRm>
90017718:	e7ee      	b.n	900176f8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001771a:	f04f 33ff 	mov.w	r3, #4294967295
9001771e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90017722:	6033      	str	r3, [r6, #0]
90017724:	e7e8      	b.n	900176f8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90017726:	fa37 f800 	lsrs.w	r8, r7, r0
9001772a:	fb07 f301 	mul.w	r3, r7, r1
9001772e:	d105      	bne.n	9001773c <_ZN8touchgfx7muldivuEmmmRm+0x58>
90017730:	fbb3 f0f5 	udiv	r0, r3, r5
90017734:	fb05 3510 	mls	r5, r5, r0, r3
90017738:	6035      	str	r5, [r6, #0]
9001773a:	e7dd      	b.n	900176f8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001773c:	2301      	movs	r3, #1
9001773e:	fa01 fa00 	lsl.w	sl, r1, r0
90017742:	462a      	mov	r2, r5
90017744:	fa03 f000 	lsl.w	r0, r3, r0
90017748:	4633      	mov	r3, r6
9001774a:	fbba f9f5 	udiv	r9, sl, r5
9001774e:	3801      	subs	r0, #1
90017750:	fb08 f409 	mul.w	r4, r8, r9
90017754:	4038      	ands	r0, r7
90017756:	f7ff ffc5 	bl	900176e4 <_ZN8touchgfx7muldivuEmmmRm>
9001775a:	462a      	mov	r2, r5
9001775c:	4607      	mov	r7, r0
9001775e:	ab01      	add	r3, sp, #4
90017760:	fb05 a119 	mls	r1, r5, r9, sl
90017764:	4640      	mov	r0, r8
90017766:	f7ff ffbd 	bl	900176e4 <_ZN8touchgfx7muldivuEmmmRm>
9001776a:	9b01      	ldr	r3, [sp, #4]
9001776c:	6832      	ldr	r2, [r6, #0]
9001776e:	441a      	add	r2, r3
90017770:	fbb2 f3f5 	udiv	r3, r2, r5
90017774:	441c      	add	r4, r3
90017776:	fb05 2513 	mls	r5, r5, r3, r2
9001777a:	443c      	add	r4, r7
9001777c:	4420      	add	r0, r4
9001777e:	e7db      	b.n	90017738 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90017780 <_ZN8touchgfx6muldivElllRl>:
90017780:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017782:	2800      	cmp	r0, #0
90017784:	461e      	mov	r6, r3
90017786:	bfba      	itte	lt
90017788:	4240      	neglt	r0, r0
9001778a:	f04f 34ff 	movlt.w	r4, #4294967295
9001778e:	2401      	movge	r4, #1
90017790:	2900      	cmp	r1, #0
90017792:	bfbc      	itt	lt
90017794:	4249      	neglt	r1, r1
90017796:	4264      	neglt	r4, r4
90017798:	2a00      	cmp	r2, #0
9001779a:	bfb6      	itet	lt
9001779c:	4265      	neglt	r5, r4
9001779e:	4625      	movge	r5, r4
900177a0:	4252      	neglt	r2, r2
900177a2:	4288      	cmp	r0, r1
900177a4:	bfc2      	ittt	gt
900177a6:	4603      	movgt	r3, r0
900177a8:	4608      	movgt	r0, r1
900177aa:	4619      	movgt	r1, r3
900177ac:	ab01      	add	r3, sp, #4
900177ae:	f7ff ff99 	bl	900176e4 <_ZN8touchgfx7muldivuEmmmRm>
900177b2:	9b01      	ldr	r3, [sp, #4]
900177b4:	4368      	muls	r0, r5
900177b6:	435c      	muls	r4, r3
900177b8:	6034      	str	r4, [r6, #0]
900177ba:	b002      	add	sp, #8
900177bc:	bd70      	pop	{r4, r5, r6, pc}

900177be <_ZN8touchgfx6muldivElll>:
900177be:	b573      	push	{r0, r1, r4, r5, r6, lr}
900177c0:	4606      	mov	r6, r0
900177c2:	ab01      	add	r3, sp, #4
900177c4:	460d      	mov	r5, r1
900177c6:	4614      	mov	r4, r2
900177c8:	f7ff ffda 	bl	90017780 <_ZN8touchgfx6muldivElllRl>
900177cc:	2e00      	cmp	r6, #0
900177ce:	db20      	blt.n	90017812 <_ZN8touchgfx6muldivElll+0x54>
900177d0:	bf14      	ite	ne
900177d2:	2301      	movne	r3, #1
900177d4:	2300      	moveq	r3, #0
900177d6:	2d00      	cmp	r5, #0
900177d8:	db1e      	blt.n	90017818 <_ZN8touchgfx6muldivElll+0x5a>
900177da:	bf14      	ite	ne
900177dc:	2201      	movne	r2, #1
900177de:	2200      	moveq	r2, #0
900177e0:	2c00      	cmp	r4, #0
900177e2:	fb03 f202 	mul.w	r2, r3, r2
900177e6:	db1a      	blt.n	9001781e <_ZN8touchgfx6muldivElll+0x60>
900177e8:	bf14      	ite	ne
900177ea:	2301      	movne	r3, #1
900177ec:	2300      	moveq	r3, #0
900177ee:	4353      	muls	r3, r2
900177f0:	2b01      	cmp	r3, #1
900177f2:	d117      	bne.n	90017824 <_ZN8touchgfx6muldivElll+0x66>
900177f4:	2c00      	cmp	r4, #0
900177f6:	9b01      	ldr	r3, [sp, #4]
900177f8:	bfb8      	it	lt
900177fa:	4264      	neglt	r4, r4
900177fc:	2b00      	cmp	r3, #0
900177fe:	f104 0401 	add.w	r4, r4, #1
90017802:	bfb8      	it	lt
90017804:	425b      	neglt	r3, r3
90017806:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001780a:	db00      	blt.n	9001780e <_ZN8touchgfx6muldivElll+0x50>
9001780c:	3001      	adds	r0, #1
9001780e:	b002      	add	sp, #8
90017810:	bd70      	pop	{r4, r5, r6, pc}
90017812:	f04f 33ff 	mov.w	r3, #4294967295
90017816:	e7de      	b.n	900177d6 <_ZN8touchgfx6muldivElll+0x18>
90017818:	f04f 32ff 	mov.w	r2, #4294967295
9001781c:	e7e0      	b.n	900177e0 <_ZN8touchgfx6muldivElll+0x22>
9001781e:	f04f 33ff 	mov.w	r3, #4294967295
90017822:	e7e4      	b.n	900177ee <_ZN8touchgfx6muldivElll+0x30>
90017824:	3301      	adds	r3, #1
90017826:	d1f2      	bne.n	9001780e <_ZN8touchgfx6muldivElll+0x50>
90017828:	9b01      	ldr	r3, [sp, #4]
9001782a:	2c00      	cmp	r4, #0
9001782c:	bfb8      	it	lt
9001782e:	4264      	neglt	r4, r4
90017830:	2b00      	cmp	r3, #0
90017832:	bfb8      	it	lt
90017834:	425b      	neglt	r3, r3
90017836:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001783a:	bfc8      	it	gt
9001783c:	f100 30ff 	addgt.w	r0, r0, #4294967295
90017840:	e7e5      	b.n	9001780e <_ZN8touchgfx6muldivElll+0x50>

90017842 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90017842:	2000      	movs	r0, #0
90017844:	4770      	bx	lr

90017846 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90017846:	2001      	movs	r0, #1
90017848:	4770      	bx	lr

9001784a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001784a:	2002      	movs	r0, #2
9001784c:	4770      	bx	lr

9001784e <_ZN8touchgfx6ScreenD1Ev>:
9001784e:	4770      	bx	lr

90017850 <_ZN8touchgfx6Screen11setupScreenEv>:
90017850:	4770      	bx	lr

90017852 <_ZN8touchgfx12GestureEventD1Ev>:
90017852:	4770      	bx	lr

90017854 <_ZN8touchgfx9DragEventD1Ev>:
90017854:	4770      	bx	lr

90017856 <_ZN8touchgfx10ClickEventD1Ev>:
90017856:	4770      	bx	lr

90017858 <_ZN8touchgfx10ClickEventD0Ev>:
90017858:	b510      	push	{r4, lr}
9001785a:	4604      	mov	r4, r0
9001785c:	210c      	movs	r1, #12
9001785e:	f00f fe5f 	bl	90027520 <_ZdlPvj>
90017862:	4620      	mov	r0, r4
90017864:	bd10      	pop	{r4, pc}

90017866 <_ZN8touchgfx9DragEventD0Ev>:
90017866:	b510      	push	{r4, lr}
90017868:	4604      	mov	r4, r0
9001786a:	2110      	movs	r1, #16
9001786c:	f00f fe58 	bl	90027520 <_ZdlPvj>
90017870:	4620      	mov	r0, r4
90017872:	bd10      	pop	{r4, pc}

90017874 <_ZN8touchgfx12GestureEventD0Ev>:
90017874:	b510      	push	{r4, lr}
90017876:	4604      	mov	r4, r0
90017878:	210c      	movs	r1, #12
9001787a:	f00f fe51 	bl	90027520 <_ZdlPvj>
9001787e:	4620      	mov	r0, r4
90017880:	bd10      	pop	{r4, pc}

90017882 <_ZN8touchgfx6ScreenD0Ev>:
90017882:	b510      	push	{r4, lr}
90017884:	4604      	mov	r4, r0
90017886:	213c      	movs	r1, #60	; 0x3c
90017888:	f00f fe4a 	bl	90027520 <_ZdlPvj>
9001788c:	4620      	mov	r0, r4
9001788e:	bd10      	pop	{r4, pc}

90017890 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90017890:	b530      	push	{r4, r5, lr}
90017892:	460d      	mov	r5, r1
90017894:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017896:	b087      	sub	sp, #28
90017898:	4604      	mov	r4, r0
9001789a:	b301      	cbz	r1, 900178de <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001789c:	a801      	add	r0, sp, #4
9001789e:	f7ff fe3d 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900178a2:	892a      	ldrh	r2, [r5, #8]
900178a4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900178a8:	7928      	ldrb	r0, [r5, #4]
900178aa:	1ad2      	subs	r2, r2, r3
900178ac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900178ae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900178b2:	441a      	add	r2, r3
900178b4:	896b      	ldrh	r3, [r5, #10]
900178b6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900178ba:	f88d 0010 	strb.w	r0, [sp, #16]
900178be:	1b5b      	subs	r3, r3, r5
900178c0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
900178c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
900178c4:	442b      	add	r3, r5
900178c6:	4d07      	ldr	r5, [pc, #28]	; (900178e4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900178c8:	f8ad 1012 	strh.w	r1, [sp, #18]
900178cc:	a903      	add	r1, sp, #12
900178ce:	9503      	str	r5, [sp, #12]
900178d0:	f8ad 2014 	strh.w	r2, [sp, #20]
900178d4:	f8ad 3016 	strh.w	r3, [sp, #22]
900178d8:	6803      	ldr	r3, [r0, #0]
900178da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900178dc:	4798      	blx	r3
900178de:	b007      	add	sp, #28
900178e0:	bd30      	pop	{r4, r5, pc}
900178e2:	bf00      	nop
900178e4:	9002b9ec 	.word	0x9002b9ec

900178e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
900178e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900178ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
900178ee:	b08a      	sub	sp, #40	; 0x28
900178f0:	4604      	mov	r4, r0
900178f2:	460d      	mov	r5, r1
900178f4:	b113      	cbz	r3, 900178fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
900178f6:	790b      	ldrb	r3, [r1, #4]
900178f8:	2b00      	cmp	r3, #0
900178fa:	d044      	beq.n	90017986 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900178fc:	f104 0804 	add.w	r8, r4, #4
90017900:	a803      	add	r0, sp, #12
90017902:	4641      	mov	r1, r8
90017904:	f7ff fe0a 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017908:	792b      	ldrb	r3, [r5, #4]
9001790a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001790e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90017912:	b983      	cbnz	r3, 90017936 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90017914:	f104 0336 	add.w	r3, r4, #54	; 0x36
90017918:	892a      	ldrh	r2, [r5, #8]
9001791a:	88e9      	ldrh	r1, [r5, #6]
9001791c:	4640      	mov	r0, r8
9001791e:	1b92      	subs	r2, r2, r6
90017920:	9301      	str	r3, [sp, #4]
90017922:	1bc9      	subs	r1, r1, r7
90017924:	f104 0334 	add.w	r3, r4, #52	; 0x34
90017928:	b212      	sxth	r2, r2
9001792a:	9300      	str	r3, [sp, #0]
9001792c:	b209      	sxth	r1, r1
9001792e:	f104 0330 	add.w	r3, r4, #48	; 0x30
90017932:	f7f9 f9ab 	bl	90010c8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90017936:	6b21      	ldr	r1, [r4, #48]	; 0x30
90017938:	b329      	cbz	r1, 90017986 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001793a:	a805      	add	r0, sp, #20
9001793c:	f7ff fdee 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017940:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90017944:	792b      	ldrb	r3, [r5, #4]
90017946:	a907      	add	r1, sp, #28
90017948:	1abf      	subs	r7, r7, r2
9001794a:	88ea      	ldrh	r2, [r5, #6]
9001794c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001794e:	4417      	add	r7, r2
90017950:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90017952:	f88d 3020 	strb.w	r3, [sp, #32]
90017956:	4417      	add	r7, r2
90017958:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001795c:	1ab6      	subs	r6, r6, r2
9001795e:	892a      	ldrh	r2, [r5, #8]
90017960:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90017964:	4416      	add	r6, r2
90017966:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017968:	4416      	add	r6, r2
9001796a:	4a08      	ldr	r2, [pc, #32]	; (9001798c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001796c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90017970:	2600      	movs	r6, #0
90017972:	9207      	str	r2, [sp, #28]
90017974:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90017978:	6803      	ldr	r3, [r0, #0]
9001797a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001797c:	4798      	blx	r3
9001797e:	792b      	ldrb	r3, [r5, #4]
90017980:	b10b      	cbz	r3, 90017986 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017982:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90017986:	b00a      	add	sp, #40	; 0x28
90017988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001798c:	9002b9c4 	.word	0x9002b9c4

90017990 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90017990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017994:	460c      	mov	r4, r1
90017996:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017998:	b088      	sub	sp, #32
9001799a:	4605      	mov	r5, r0
9001799c:	2900      	cmp	r1, #0
9001799e:	d06d      	beq.n	90017a7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900179a0:	4668      	mov	r0, sp
900179a2:	f7ff fdbb 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900179a6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900179a8:	88e3      	ldrh	r3, [r4, #6]
900179aa:	f9bd 8000 	ldrsh.w	r8, [sp]
900179ae:	440b      	add	r3, r1
900179b0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900179b4:	b21b      	sxth	r3, r3
900179b6:	4543      	cmp	r3, r8
900179b8:	db31      	blt.n	90017a1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900179ba:	f8bd c004 	ldrh.w	ip, [sp, #4]
900179be:	44c4      	add	ip, r8
900179c0:	fa0f fc8c 	sxth.w	ip, ip
900179c4:	4563      	cmp	r3, ip
900179c6:	da2a      	bge.n	90017a1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900179c8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
900179ca:	8926      	ldrh	r6, [r4, #8]
900179cc:	4416      	add	r6, r2
900179ce:	b236      	sxth	r6, r6
900179d0:	42be      	cmp	r6, r7
900179d2:	db24      	blt.n	90017a1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900179d4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
900179d8:	4438      	add	r0, r7
900179da:	b200      	sxth	r0, r0
900179dc:	4286      	cmp	r6, r0
900179de:	da1e      	bge.n	90017a1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900179e0:	8963      	ldrh	r3, [r4, #10]
900179e2:	4419      	add	r1, r3
900179e4:	b209      	sxth	r1, r1
900179e6:	4541      	cmp	r1, r8
900179e8:	db08      	blt.n	900179fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900179ea:	4561      	cmp	r1, ip
900179ec:	da06      	bge.n	900179fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900179ee:	89a3      	ldrh	r3, [r4, #12]
900179f0:	441a      	add	r2, r3
900179f2:	b212      	sxth	r2, r2
900179f4:	42ba      	cmp	r2, r7
900179f6:	db01      	blt.n	900179fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
900179f8:	4282      	cmp	r2, r0
900179fa:	db10      	blt.n	90017a1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900179fc:	4b21      	ldr	r3, [pc, #132]	; (90017a84 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
900179fe:	a904      	add	r1, sp, #16
90017a00:	6b28      	ldr	r0, [r5, #48]	; 0x30
90017a02:	9304      	str	r3, [sp, #16]
90017a04:	2302      	movs	r3, #2
90017a06:	f88d 3014 	strb.w	r3, [sp, #20]
90017a0a:	2300      	movs	r3, #0
90017a0c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017a10:	f8ad 3018 	strh.w	r3, [sp, #24]
90017a14:	f8ad 301a 	strh.w	r3, [sp, #26]
90017a18:	6803      	ldr	r3, [r0, #0]
90017a1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017a1c:	4798      	blx	r3
90017a1e:	1d29      	adds	r1, r5, #4
90017a20:	a802      	add	r0, sp, #8
90017a22:	f7ff fd7b 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017a26:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017a2a:	88e0      	ldrh	r0, [r4, #6]
90017a2c:	eba3 0808 	sub.w	r8, r3, r8
90017a30:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017a34:	7921      	ldrb	r1, [r4, #4]
90017a36:	fa1f f888 	uxth.w	r8, r8
90017a3a:	1bdf      	subs	r7, r3, r7
90017a3c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90017a40:	b2bb      	uxth	r3, r7
90017a42:	4440      	add	r0, r8
90017a44:	8922      	ldrh	r2, [r4, #8]
90017a46:	8967      	ldrh	r7, [r4, #10]
90017a48:	4460      	add	r0, ip
90017a4a:	89a4      	ldrh	r4, [r4, #12]
90017a4c:	441a      	add	r2, r3
90017a4e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90017a50:	44b8      	add	r8, r7
90017a52:	4423      	add	r3, r4
90017a54:	f8ad 0016 	strh.w	r0, [sp, #22]
90017a58:	4432      	add	r2, r6
90017a5a:	44e0      	add	r8, ip
90017a5c:	4433      	add	r3, r6
90017a5e:	4c0a      	ldr	r4, [pc, #40]	; (90017a88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90017a60:	6b28      	ldr	r0, [r5, #48]	; 0x30
90017a62:	f88d 1014 	strb.w	r1, [sp, #20]
90017a66:	a904      	add	r1, sp, #16
90017a68:	9404      	str	r4, [sp, #16]
90017a6a:	f8ad 2018 	strh.w	r2, [sp, #24]
90017a6e:	f8ad 801a 	strh.w	r8, [sp, #26]
90017a72:	f8ad 301c 	strh.w	r3, [sp, #28]
90017a76:	6803      	ldr	r3, [r0, #0]
90017a78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017a7a:	4798      	blx	r3
90017a7c:	b008      	add	sp, #32
90017a7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017a82:	bf00      	nop
90017a84:	9002b9c4 	.word	0x9002b9c4
90017a88:	9002b9d8 	.word	0x9002b9d8

90017a8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90017a8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
90017a8e:	4604      	mov	r4, r0
90017a90:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90017a94:	3201      	adds	r2, #1
90017a96:	d112      	bne.n	90017abe <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90017a98:	2500      	movs	r5, #0
90017a9a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90017a9e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017aa2:	6803      	ldr	r3, [r0, #0]
90017aa4:	9500      	str	r5, [sp, #0]
90017aa6:	466d      	mov	r5, sp
90017aa8:	f8ad 1004 	strh.w	r1, [sp, #4]
90017aac:	f8ad 2006 	strh.w	r2, [sp, #6]
90017ab0:	4629      	mov	r1, r5
90017ab2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017ab4:	4798      	blx	r3
90017ab6:	e895 0003 	ldmia.w	r5, {r0, r1}
90017aba:	e884 0003 	stmia.w	r4, {r0, r1}
90017abe:	4620      	mov	r0, r4
90017ac0:	b003      	add	sp, #12
90017ac2:	bd30      	pop	{r4, r5, pc}

90017ac4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90017ac4:	b513      	push	{r0, r1, r4, lr}
90017ac6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90017aca:	4604      	mov	r4, r0
90017acc:	3301      	adds	r3, #1
90017ace:	d109      	bne.n	90017ae4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90017ad0:	4601      	mov	r1, r0
90017ad2:	4668      	mov	r0, sp
90017ad4:	f7ff fd22 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017ad8:	f8bd 3000 	ldrh.w	r3, [sp]
90017adc:	8423      	strh	r3, [r4, #32]
90017ade:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017ae2:	8463      	strh	r3, [r4, #34]	; 0x22
90017ae4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90017ae8:	b002      	add	sp, #8
90017aea:	bd10      	pop	{r4, pc}

90017aec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90017aec:	b513      	push	{r0, r1, r4, lr}
90017aee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90017af2:	4604      	mov	r4, r0
90017af4:	3301      	adds	r3, #1
90017af6:	d109      	bne.n	90017b0c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90017af8:	4601      	mov	r1, r0
90017afa:	4668      	mov	r0, sp
90017afc:	f7ff fd0e 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017b00:	f8bd 3000 	ldrh.w	r3, [sp]
90017b04:	8423      	strh	r3, [r4, #32]
90017b06:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017b0a:	8463      	strh	r3, [r4, #34]	; 0x22
90017b0c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90017b10:	b002      	add	sp, #8
90017b12:	bd10      	pop	{r4, pc}

90017b14 <_ZN8touchgfx6ScreenC1Ev>:
90017b14:	b570      	push	{r4, r5, r6, lr}
90017b16:	4b17      	ldr	r3, [pc, #92]	; (90017b74 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90017b18:	4605      	mov	r5, r0
90017b1a:	4a17      	ldr	r2, [pc, #92]	; (90017b78 <_ZN8touchgfx6ScreenC1Ev+0x64>)
90017b1c:	2101      	movs	r1, #1
90017b1e:	f845 3b04 	str.w	r3, [r5], #4
90017b22:	2300      	movs	r3, #0
90017b24:	6042      	str	r2, [r0, #4]
90017b26:	4604      	mov	r4, r0
90017b28:	8103      	strh	r3, [r0, #8]
90017b2a:	8143      	strh	r3, [r0, #10]
90017b2c:	8183      	strh	r3, [r0, #12]
90017b2e:	81c3      	strh	r3, [r0, #14]
90017b30:	8203      	strh	r3, [r0, #16]
90017b32:	8243      	strh	r3, [r0, #18]
90017b34:	8283      	strh	r3, [r0, #20]
90017b36:	82c3      	strh	r3, [r0, #22]
90017b38:	6203      	str	r3, [r0, #32]
90017b3a:	8483      	strh	r3, [r0, #36]	; 0x24
90017b3c:	84c3      	strh	r3, [r0, #38]	; 0x26
90017b3e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90017b42:	6343      	str	r3, [r0, #52]	; 0x34
90017b44:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90017b48:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90017b4c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90017b50:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90017b54:	4b09      	ldr	r3, [pc, #36]	; (90017b7c <_ZN8touchgfx6ScreenC1Ev+0x68>)
90017b56:	4628      	mov	r0, r5
90017b58:	f9b3 6000 	ldrsh.w	r6, [r3]
90017b5c:	6b93      	ldr	r3, [r2, #56]	; 0x38
90017b5e:	4a08      	ldr	r2, [pc, #32]	; (90017b80 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90017b60:	f9b2 1000 	ldrsh.w	r1, [r2]
90017b64:	4798      	blx	r3
90017b66:	6863      	ldr	r3, [r4, #4]
90017b68:	4628      	mov	r0, r5
90017b6a:	4631      	mov	r1, r6
90017b6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90017b6e:	4798      	blx	r3
90017b70:	4620      	mov	r0, r4
90017b72:	bd70      	pop	{r4, r5, r6, pc}
90017b74:	9002ba00 	.word	0x9002ba00
90017b78:	9002b2d8 	.word	0x9002b2d8
90017b7c:	240396fa 	.word	0x240396fa
90017b80:	240396f8 	.word	0x240396f8

90017b84 <_ZN8touchgfx6Screen4drawEv>:
90017b84:	4b09      	ldr	r3, [pc, #36]	; (90017bac <_ZN8touchgfx6Screen4drawEv+0x28>)
90017b86:	b507      	push	{r0, r1, r2, lr}
90017b88:	f9b3 2000 	ldrsh.w	r2, [r3]
90017b8c:	2100      	movs	r1, #0
90017b8e:	4b08      	ldr	r3, [pc, #32]	; (90017bb0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90017b90:	9100      	str	r1, [sp, #0]
90017b92:	4669      	mov	r1, sp
90017b94:	f9b3 3000 	ldrsh.w	r3, [r3]
90017b98:	f8ad 2004 	strh.w	r2, [sp, #4]
90017b9c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017ba0:	6803      	ldr	r3, [r0, #0]
90017ba2:	689b      	ldr	r3, [r3, #8]
90017ba4:	4798      	blx	r3
90017ba6:	b003      	add	sp, #12
90017ba8:	f85d fb04 	ldr.w	pc, [sp], #4
90017bac:	240396f8 	.word	0x240396f8
90017bb0:	240396fa 	.word	0x240396fa

90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90017bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017bb8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90017bbc:	b089      	sub	sp, #36	; 0x24
90017bbe:	4680      	mov	r8, r0
90017bc0:	460c      	mov	r4, r1
90017bc2:	2b00      	cmp	r3, #0
90017bc4:	4615      	mov	r5, r2
90017bc6:	dd0e      	ble.n	90017be6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017bc8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90017bcc:	2b00      	cmp	r3, #0
90017bce:	dd0a      	ble.n	90017be6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017bd0:	4628      	mov	r0, r5
90017bd2:	f7ff ff5b 	bl	90017a8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017bd6:	4621      	mov	r1, r4
90017bd8:	f7fe fa85 	bl	900160e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90017bdc:	69eb      	ldr	r3, [r5, #28]
90017bde:	b928      	cbnz	r0, 90017bec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90017be0:	461d      	mov	r5, r3
90017be2:	2b00      	cmp	r3, #0
90017be4:	d1f4      	bne.n	90017bd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90017be6:	b009      	add	sp, #36	; 0x24
90017be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017bec:	ae04      	add	r6, sp, #16
90017bee:	2b00      	cmp	r3, #0
90017bf0:	f000 80b5 	beq.w	90017d5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017bf4:	682b      	ldr	r3, [r5, #0]
90017bf6:	4629      	mov	r1, r5
90017bf8:	a802      	add	r0, sp, #8
90017bfa:	68db      	ldr	r3, [r3, #12]
90017bfc:	4798      	blx	r3
90017bfe:	4628      	mov	r0, r5
90017c00:	f7ff ff60 	bl	90017ac4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017c04:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90017c08:	4407      	add	r7, r0
90017c0a:	4628      	mov	r0, r5
90017c0c:	f7ff ff6e 	bl	90017aec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017c10:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017c14:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90017c18:	b23f      	sxth	r7, r7
90017c1a:	4418      	add	r0, r3
90017c1c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90017c20:	4621      	mov	r1, r4
90017c22:	f8ad 2014 	strh.w	r2, [sp, #20]
90017c26:	f8ad 0012 	strh.w	r0, [sp, #18]
90017c2a:	4630      	mov	r0, r6
90017c2c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017c30:	f8ad 7010 	strh.w	r7, [sp, #16]
90017c34:	f7f9 f90c 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90017c38:	4628      	mov	r0, r5
90017c3a:	f7ff ff27 	bl	90017a8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017c3e:	ab06      	add	r3, sp, #24
90017c40:	4602      	mov	r2, r0
90017c42:	e896 0003 	ldmia.w	r6, {r0, r1}
90017c46:	e883 0003 	stmia.w	r3, {r0, r1}
90017c4a:	4611      	mov	r1, r2
90017c4c:	4618      	mov	r0, r3
90017c4e:	f7f9 f8ff 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90017c52:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017c56:	f9b4 1000 	ldrsh.w	r1, [r4]
90017c5a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90017c5e:	4299      	cmp	r1, r3
90017c60:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90017c64:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90017c68:	d10b      	bne.n	90017c82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017c6a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017c6e:	4552      	cmp	r2, sl
90017c70:	d107      	bne.n	90017c82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017c72:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90017c76:	455a      	cmp	r2, fp
90017c78:	d103      	bne.n	90017c82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90017c7a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90017c7e:	454a      	cmp	r2, r9
90017c80:	d06d      	beq.n	90017d5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017c82:	f1bb 0f00 	cmp.w	fp, #0
90017c86:	dd65      	ble.n	90017d54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90017c88:	f1b9 0f00 	cmp.w	r9, #0
90017c8c:	dd62      	ble.n	90017d54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90017c8e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90017c92:	fa1f f08a 	uxth.w	r0, sl
90017c96:	4552      	cmp	r2, sl
90017c98:	9000      	str	r0, [sp, #0]
90017c9a:	da12      	bge.n	90017cc2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90017c9c:	9301      	str	r3, [sp, #4]
90017c9e:	9b00      	ldr	r3, [sp, #0]
90017ca0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017ca4:	f8ad 2012 	strh.w	r2, [sp, #18]
90017ca8:	1a9a      	subs	r2, r3, r2
90017caa:	f8ad 1010 	strh.w	r1, [sp, #16]
90017cae:	4631      	mov	r1, r6
90017cb0:	f8ad 0014 	strh.w	r0, [sp, #20]
90017cb4:	4640      	mov	r0, r8
90017cb6:	f8ad 2016 	strh.w	r2, [sp, #22]
90017cba:	69ea      	ldr	r2, [r5, #28]
90017cbc:	f7ff ff7a 	bl	90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017cc0:	9b01      	ldr	r3, [sp, #4]
90017cc2:	f9b4 2000 	ldrsh.w	r2, [r4]
90017cc6:	b29f      	uxth	r7, r3
90017cc8:	429a      	cmp	r2, r3
90017cca:	da0d      	bge.n	90017ce8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90017ccc:	f8ad 2010 	strh.w	r2, [sp, #16]
90017cd0:	1aba      	subs	r2, r7, r2
90017cd2:	f8ad a012 	strh.w	sl, [sp, #18]
90017cd6:	4631      	mov	r1, r6
90017cd8:	f8ad 2014 	strh.w	r2, [sp, #20]
90017cdc:	4640      	mov	r0, r8
90017cde:	f8ad 9016 	strh.w	r9, [sp, #22]
90017ce2:	69ea      	ldr	r2, [r5, #28]
90017ce4:	f7ff ff66 	bl	90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017ce8:	8822      	ldrh	r2, [r4, #0]
90017cea:	445f      	add	r7, fp
90017cec:	88a3      	ldrh	r3, [r4, #4]
90017cee:	b2bf      	uxth	r7, r7
90017cf0:	4413      	add	r3, r2
90017cf2:	b23a      	sxth	r2, r7
90017cf4:	b29b      	uxth	r3, r3
90017cf6:	b219      	sxth	r1, r3
90017cf8:	4291      	cmp	r1, r2
90017cfa:	dd0d      	ble.n	90017d18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90017cfc:	1bdb      	subs	r3, r3, r7
90017cfe:	f8ad 2010 	strh.w	r2, [sp, #16]
90017d02:	f8ad a012 	strh.w	sl, [sp, #18]
90017d06:	4631      	mov	r1, r6
90017d08:	f8ad 3014 	strh.w	r3, [sp, #20]
90017d0c:	4640      	mov	r0, r8
90017d0e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017d12:	69ea      	ldr	r2, [r5, #28]
90017d14:	f7ff ff4e 	bl	90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017d18:	88e2      	ldrh	r2, [r4, #6]
90017d1a:	8863      	ldrh	r3, [r4, #2]
90017d1c:	4413      	add	r3, r2
90017d1e:	9a00      	ldr	r2, [sp, #0]
90017d20:	444a      	add	r2, r9
90017d22:	b29b      	uxth	r3, r3
90017d24:	fa1f f982 	uxth.w	r9, r2
90017d28:	b219      	sxth	r1, r3
90017d2a:	fa0f f289 	sxth.w	r2, r9
90017d2e:	428a      	cmp	r2, r1
90017d30:	da15      	bge.n	90017d5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017d32:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90017d36:	eba3 0309 	sub.w	r3, r3, r9
90017d3a:	f9b4 0000 	ldrsh.w	r0, [r4]
90017d3e:	f8ad 1014 	strh.w	r1, [sp, #20]
90017d42:	4631      	mov	r1, r6
90017d44:	f8ad 0010 	strh.w	r0, [sp, #16]
90017d48:	f8ad 2012 	strh.w	r2, [sp, #18]
90017d4c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017d50:	69ea      	ldr	r2, [r5, #28]
90017d52:	e001      	b.n	90017d58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90017d54:	69ea      	ldr	r2, [r5, #28]
90017d56:	4621      	mov	r1, r4
90017d58:	4640      	mov	r0, r8
90017d5a:	f7ff ff2b 	bl	90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017d5e:	4628      	mov	r0, r5
90017d60:	f7ff fe94 	bl	90017a8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017d64:	6861      	ldr	r1, [r4, #4]
90017d66:	4602      	mov	r2, r0
90017d68:	4633      	mov	r3, r6
90017d6a:	6820      	ldr	r0, [r4, #0]
90017d6c:	c303      	stmia	r3!, {r0, r1}
90017d6e:	4611      	mov	r1, r2
90017d70:	4630      	mov	r0, r6
90017d72:	f7f9 f86d 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90017d76:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90017d7a:	2b00      	cmp	r3, #0
90017d7c:	f77f af33 	ble.w	90017be6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017d80:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017d84:	2b00      	cmp	r3, #0
90017d86:	f77f af2e 	ble.w	90017be6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017d8a:	4628      	mov	r0, r5
90017d8c:	f7ff fe9a 	bl	90017ac4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017d90:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90017d94:	1a18      	subs	r0, r3, r0
90017d96:	f8ad 0010 	strh.w	r0, [sp, #16]
90017d9a:	4628      	mov	r0, r5
90017d9c:	f7ff fea6 	bl	90017aec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017da0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90017da4:	4631      	mov	r1, r6
90017da6:	1a18      	subs	r0, r3, r0
90017da8:	f8ad 0012 	strh.w	r0, [sp, #18]
90017dac:	4628      	mov	r0, r5
90017dae:	682b      	ldr	r3, [r5, #0]
90017db0:	689b      	ldr	r3, [r3, #8]
90017db2:	4798      	blx	r3
90017db4:	e717      	b.n	90017be6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90017db6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90017db6:	b570      	push	{r4, r5, r6, lr}
90017db8:	1d06      	adds	r6, r0, #4
90017dba:	b086      	sub	sp, #24
90017dbc:	460c      	mov	r4, r1
90017dbe:	2300      	movs	r3, #0
90017dc0:	4631      	mov	r1, r6
90017dc2:	4605      	mov	r5, r0
90017dc4:	a802      	add	r0, sp, #8
90017dc6:	9301      	str	r3, [sp, #4]
90017dc8:	f7ff fba8 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017dcc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017dd0:	8822      	ldrh	r2, [r4, #0]
90017dd2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90017dd6:	1ad2      	subs	r2, r2, r3
90017dd8:	8863      	ldrh	r3, [r4, #2]
90017dda:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90017dde:	1a5b      	subs	r3, r3, r1
90017de0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90017de4:	f8ad 2010 	strh.w	r2, [sp, #16]
90017de8:	aa01      	add	r2, sp, #4
90017dea:	f8ad 0014 	strh.w	r0, [sp, #20]
90017dee:	4630      	mov	r0, r6
90017df0:	f8ad 1016 	strh.w	r1, [sp, #22]
90017df4:	a904      	add	r1, sp, #16
90017df6:	f8ad 3012 	strh.w	r3, [sp, #18]
90017dfa:	f7f9 f901 	bl	90011000 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90017dfe:	9a01      	ldr	r2, [sp, #4]
90017e00:	b11a      	cbz	r2, 90017e0a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90017e02:	4621      	mov	r1, r4
90017e04:	4628      	mov	r0, r5
90017e06:	f7ff fed5 	bl	90017bb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017e0a:	b006      	add	sp, #24
90017e0c:	bd70      	pop	{r4, r5, r6, pc}

90017e0e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90017e0e:	4602      	mov	r2, r0
90017e10:	b530      	push	{r4, r5, lr}
90017e12:	4604      	mov	r4, r0
90017e14:	b085      	sub	sp, #20
90017e16:	f852 0f08 	ldr.w	r0, [r2, #8]!
90017e1a:	460d      	mov	r5, r1
90017e1c:	466b      	mov	r3, sp
90017e1e:	6851      	ldr	r1, [r2, #4]
90017e20:	c303      	stmia	r3!, {r0, r1}
90017e22:	4629      	mov	r1, r5
90017e24:	4668      	mov	r0, sp
90017e26:	f7f9 f813 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
90017e2a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90017e2e:	b12b      	cbz	r3, 90017e3c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90017e30:	4669      	mov	r1, sp
90017e32:	4620      	mov	r0, r4
90017e34:	f7ff ffbf 	bl	90017db6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90017e38:	b005      	add	sp, #20
90017e3a:	bd30      	pop	{r4, r5, pc}
90017e3c:	3404      	adds	r4, #4
90017e3e:	a802      	add	r0, sp, #8
90017e40:	4621      	mov	r1, r4
90017e42:	f7ff fb6b 	bl	9001751c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017e46:	f8bd 3000 	ldrh.w	r3, [sp]
90017e4a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90017e4e:	4669      	mov	r1, sp
90017e50:	4620      	mov	r0, r4
90017e52:	1a9b      	subs	r3, r3, r2
90017e54:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90017e58:	f8ad 3000 	strh.w	r3, [sp]
90017e5c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017e60:	1a9b      	subs	r3, r3, r2
90017e62:	f8ad 3002 	strh.w	r3, [sp, #2]
90017e66:	f7f9 f892 	bl	90010f8e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90017e6a:	e7e5      	b.n	90017e38 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90017e6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90017e6c:	460b      	mov	r3, r1
90017e6e:	680a      	ldr	r2, [r1, #0]
90017e70:	1d01      	adds	r1, r0, #4
90017e72:	6992      	ldr	r2, [r2, #24]
90017e74:	4618      	mov	r0, r3
90017e76:	4710      	bx	r2

90017e78 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90017e78:	4298      	cmp	r0, r3
90017e7a:	d200      	bcs.n	90017e7e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90017e7c:	b913      	cbnz	r3, 90017e84 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90017e7e:	440a      	add	r2, r1
90017e80:	b210      	sxth	r0, r2
90017e82:	4770      	bx	lr
90017e84:	ee07 0a90 	vmov	s15, r0
90017e88:	eef8 6a67 	vcvt.f32.u32	s13, s15
90017e8c:	ee07 3a90 	vmov	s15, r3
90017e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017e94:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90017e98:	ee07 2a90 	vmov	s15, r2
90017e9c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90017ea0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90017ea4:	ee07 1a90 	vmov	s15, r1
90017ea8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017eac:	ee37 7a66 	vsub.f32	s14, s14, s13
90017eb0:	ee67 5a07 	vmul.f32	s11, s14, s14
90017eb4:	eee5 6a87 	vfma.f32	s13, s11, s14
90017eb8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90017ebc:	eee6 7a26 	vfma.f32	s15, s12, s13
90017ec0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90017ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017ec8:	bfcc      	ite	gt
90017eca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90017ece:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90017ed2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90017ed6:	ee17 3a90 	vmov	r3, s15
90017eda:	b218      	sxth	r0, r3
90017edc:	4770      	bx	lr

90017ede <_ZN8touchgfx12TextProviderC1Ev>:
90017ede:	b538      	push	{r3, r4, r5, lr}
90017ee0:	2500      	movs	r5, #0
90017ee2:	2302      	movs	r3, #2
90017ee4:	4604      	mov	r4, r0
90017ee6:	220e      	movs	r2, #14
90017ee8:	7403      	strb	r3, [r0, #16]
90017eea:	4629      	mov	r1, r5
90017eec:	6145      	str	r5, [r0, #20]
90017eee:	7605      	strb	r5, [r0, #24]
90017ef0:	83c5      	strh	r5, [r0, #30]
90017ef2:	8405      	strh	r5, [r0, #32]
90017ef4:	86c5      	strh	r5, [r0, #54]	; 0x36
90017ef6:	8705      	strh	r5, [r0, #56]	; 0x38
90017ef8:	87c5      	strh	r5, [r0, #62]	; 0x3e
90017efa:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90017efe:	e9c0 5500 	strd	r5, r5, [r0]
90017f02:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90017f06:	304c      	adds	r0, #76	; 0x4c
90017f08:	f00f fdc0 	bl	90027a8c <memset>
90017f0c:	2301      	movs	r3, #1
90017f0e:	4620      	mov	r0, r4
90017f10:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90017f14:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90017f18:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90017f1c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90017f20:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90017f24:	f7ec f930 	bl	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90017f28:	4620      	mov	r0, r4
90017f2a:	bd38      	pop	{r3, r4, r5, pc}

90017f2c <_ZN8touchgfx12TextProvider11endOfStringEv>:
90017f2c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90017f2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90017f32:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90017f34:	fab0 f080 	clz	r0, r0
90017f38:	0940      	lsrs	r0, r0, #5
90017f3a:	4770      	bx	lr

90017f3c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90017f3c:	b530      	push	{r4, r5, lr}
90017f3e:	2500      	movs	r5, #0
90017f40:	2401      	movs	r4, #1
90017f42:	6843      	ldr	r3, [r0, #4]
90017f44:	b913      	cbnz	r3, 90017f4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90017f46:	6803      	ldr	r3, [r0, #0]
90017f48:	b313      	cbz	r3, 90017f90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017f4a:	6043      	str	r3, [r0, #4]
90017f4c:	7e03      	ldrb	r3, [r0, #24]
90017f4e:	b143      	cbz	r3, 90017f62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90017f50:	6943      	ldr	r3, [r0, #20]
90017f52:	b12b      	cbz	r3, 90017f60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017f54:	881a      	ldrh	r2, [r3, #0]
90017f56:	b11a      	cbz	r2, 90017f60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017f58:	1c9a      	adds	r2, r3, #2
90017f5a:	6142      	str	r2, [r0, #20]
90017f5c:	8818      	ldrh	r0, [r3, #0]
90017f5e:	bd30      	pop	{r4, r5, pc}
90017f60:	7605      	strb	r5, [r0, #24]
90017f62:	6843      	ldr	r3, [r0, #4]
90017f64:	8819      	ldrh	r1, [r3, #0]
90017f66:	b199      	cbz	r1, 90017f90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017f68:	1c9a      	adds	r2, r3, #2
90017f6a:	2902      	cmp	r1, #2
90017f6c:	6042      	str	r2, [r0, #4]
90017f6e:	d1f5      	bne.n	90017f5c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90017f70:	7c03      	ldrb	r3, [r0, #16]
90017f72:	2b01      	cmp	r3, #1
90017f74:	d8e5      	bhi.n	90017f42 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017f76:	1c5a      	adds	r2, r3, #1
90017f78:	3302      	adds	r3, #2
90017f7a:	7402      	strb	r2, [r0, #16]
90017f7c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90017f80:	6143      	str	r3, [r0, #20]
90017f82:	2b00      	cmp	r3, #0
90017f84:	d0dd      	beq.n	90017f42 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017f86:	881b      	ldrh	r3, [r3, #0]
90017f88:	2b00      	cmp	r3, #0
90017f8a:	d0da      	beq.n	90017f42 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017f8c:	7604      	strb	r4, [r0, #24]
90017f8e:	e7d8      	b.n	90017f42 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017f90:	2000      	movs	r0, #0
90017f92:	e7e4      	b.n	90017f5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90017f94:	6001      	str	r1, [r0, #0]
90017f96:	2100      	movs	r1, #0
90017f98:	b430      	push	{r4, r5}
90017f9a:	6041      	str	r1, [r0, #4]
90017f9c:	6815      	ldr	r5, [r2, #0]
90017f9e:	6085      	str	r5, [r0, #8]
90017fa0:	6852      	ldr	r2, [r2, #4]
90017fa2:	6443      	str	r3, [r0, #68]	; 0x44
90017fa4:	9b02      	ldr	r3, [sp, #8]
90017fa6:	60c2      	str	r2, [r0, #12]
90017fa8:	7401      	strb	r1, [r0, #16]
90017faa:	6141      	str	r1, [r0, #20]
90017fac:	7601      	strb	r1, [r0, #24]
90017fae:	8701      	strh	r1, [r0, #56]	; 0x38
90017fb0:	8401      	strh	r1, [r0, #32]
90017fb2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90017fb6:	6483      	str	r3, [r0, #72]	; 0x48
90017fb8:	bc30      	pop	{r4, r5}
90017fba:	f7ec b8e5 	b.w	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90017fbe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90017fbe:	b408      	push	{r3}
90017fc0:	b510      	push	{r4, lr}
90017fc2:	b085      	sub	sp, #20
90017fc4:	ac07      	add	r4, sp, #28
90017fc6:	f854 3b04 	ldr.w	r3, [r4], #4
90017fca:	9300      	str	r3, [sp, #0]
90017fcc:	4613      	mov	r3, r2
90017fce:	4622      	mov	r2, r4
90017fd0:	9403      	str	r4, [sp, #12]
90017fd2:	f7ff ffdf 	bl	90017f94 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017fd6:	b005      	add	sp, #20
90017fd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017fdc:	b001      	add	sp, #4
90017fde:	4770      	bx	lr

90017fe0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90017fe0:	b5f0      	push	{r4, r5, r6, r7, lr}
90017fe2:	4605      	mov	r5, r0
90017fe4:	4608      	mov	r0, r1
90017fe6:	b1f1      	cbz	r1, 90018026 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90017fe8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90017fec:	460b      	mov	r3, r1
90017fee:	f101 0708 	add.w	r7, r1, #8
90017ff2:	4622      	mov	r2, r4
90017ff4:	6818      	ldr	r0, [r3, #0]
90017ff6:	3308      	adds	r3, #8
90017ff8:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017ffc:	4626      	mov	r6, r4
90017ffe:	42bb      	cmp	r3, r7
90018000:	c603      	stmia	r6!, {r0, r1}
90018002:	4634      	mov	r4, r6
90018004:	d1f6      	bne.n	90017ff4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90018006:	6818      	ldr	r0, [r3, #0]
90018008:	6030      	str	r0, [r6, #0]
9001800a:	4610      	mov	r0, r2
9001800c:	889b      	ldrh	r3, [r3, #4]
9001800e:	80b3      	strh	r3, [r6, #4]
90018010:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90018014:	015b      	lsls	r3, r3, #5
90018016:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001801a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
9001801e:	430b      	orrs	r3, r1
90018020:	425b      	negs	r3, r3
90018022:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90018026:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018028 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90018028:	b538      	push	{r3, r4, r5, lr}
9001802a:	460c      	mov	r4, r1
9001802c:	6811      	ldr	r1, [r2, #0]
9001802e:	4610      	mov	r0, r2
90018030:	68cd      	ldr	r5, [r1, #12]
90018032:	4619      	mov	r1, r3
90018034:	47a8      	blx	r5
90018036:	2800      	cmp	r0, #0
90018038:	bf08      	it	eq
9001803a:	4620      	moveq	r0, r4
9001803c:	bd38      	pop	{r3, r4, r5, pc}
	...

90018040 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90018040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018042:	4604      	mov	r4, r0
90018044:	4615      	mov	r5, r2
90018046:	4608      	mov	r0, r1
90018048:	b93a      	cbnz	r2, 9001805a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001804a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001804e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90018052:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90018056:	4628      	mov	r0, r5
90018058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001805a:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001805e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90018062:	8893      	ldrh	r3, [r2, #4]
90018064:	ea4f 160c 	mov.w	r6, ip, lsl #4
90018068:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001806c:	79ee      	ldrb	r6, [r5, #7]
9001806e:	4316      	orrs	r6, r2
90018070:	19da      	adds	r2, r3, r7
90018072:	b291      	uxth	r1, r2
90018074:	b2b7      	uxth	r7, r6
90018076:	291d      	cmp	r1, #29
90018078:	d87b      	bhi.n	90018172 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001807a:	2201      	movs	r2, #1
9001807c:	10f6      	asrs	r6, r6, #3
9001807e:	408a      	lsls	r2, r1
90018080:	4974      	ldr	r1, [pc, #464]	; (90018254 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90018082:	420a      	tst	r2, r1
90018084:	d12e      	bne.n	900180e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018086:	f412 7f60 	tst.w	r2, #896	; 0x380
9001808a:	d072      	beq.n	90018172 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001808c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90018090:	462b      	mov	r3, r5
90018092:	f105 0e08 	add.w	lr, r5, #8
90018096:	4615      	mov	r5, r2
90018098:	6818      	ldr	r0, [r3, #0]
9001809a:	3308      	adds	r3, #8
9001809c:	f853 1c04 	ldr.w	r1, [r3, #-4]
900180a0:	4694      	mov	ip, r2
900180a2:	4573      	cmp	r3, lr
900180a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900180a8:	4662      	mov	r2, ip
900180aa:	d1f5      	bne.n	90018098 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
900180ac:	6818      	ldr	r0, [r3, #0]
900180ae:	f8cc 0000 	str.w	r0, [ip]
900180b2:	889b      	ldrh	r3, [r3, #4]
900180b4:	f8ac 3004 	strh.w	r3, [ip, #4]
900180b8:	b2b3      	uxth	r3, r6
900180ba:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
900180be:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
900180c2:	1aca      	subs	r2, r1, r3
900180c4:	1bcf      	subs	r7, r1, r7
900180c6:	f020 0060 	bic.w	r0, r0, #96	; 0x60
900180ca:	b292      	uxth	r2, r2
900180cc:	1afb      	subs	r3, r7, r3
900180ce:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
900180d2:	10d2      	asrs	r2, r2, #3
900180d4:	f002 0260 	and.w	r2, r2, #96	; 0x60
900180d8:	4302      	orrs	r2, r0
900180da:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
900180de:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
900180e2:	e7b8      	b.n	90018056 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
900180e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900180e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900180ea:	8c59      	ldrh	r1, [r3, #34]	; 0x22
900180ec:	f640 6333 	movw	r3, #3635	; 0xe33
900180f0:	4299      	cmp	r1, r3
900180f2:	d110      	bne.n	90018116 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
900180f4:	6803      	ldr	r3, [r0, #0]
900180f6:	68db      	ldr	r3, [r3, #12]
900180f8:	4798      	blx	r3
900180fa:	7b41      	ldrb	r1, [r0, #13]
900180fc:	00cb      	lsls	r3, r1, #3
900180fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018102:	7a03      	ldrb	r3, [r0, #8]
90018104:	0648      	lsls	r0, r1, #25
90018106:	ea43 0302 	orr.w	r3, r3, r2
9001810a:	bf44      	itt	mi
9001810c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018110:	b21b      	sxthmi	r3, r3
90018112:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018116:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001811a:	462a      	mov	r2, r5
9001811c:	f105 0c08 	add.w	ip, r5, #8
90018120:	443b      	add	r3, r7
90018122:	4433      	add	r3, r6
90018124:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90018128:	b29b      	uxth	r3, r3
9001812a:	4635      	mov	r5, r6
9001812c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018130:	6810      	ldr	r0, [r2, #0]
90018132:	3208      	adds	r2, #8
90018134:	f852 1c04 	ldr.w	r1, [r2, #-4]
90018138:	4637      	mov	r7, r6
9001813a:	4562      	cmp	r2, ip
9001813c:	c703      	stmia	r7!, {r0, r1}
9001813e:	463e      	mov	r6, r7
90018140:	d1f6      	bne.n	90018130 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90018142:	6810      	ldr	r0, [r2, #0]
90018144:	6038      	str	r0, [r7, #0]
90018146:	8892      	ldrh	r2, [r2, #4]
90018148:	80ba      	strh	r2, [r7, #4]
9001814a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001814e:	10db      	asrs	r3, r3, #3
90018150:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018154:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018158:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001815c:	4313      	orrs	r3, r2
9001815e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90018162:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018166:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001816a:	1a9b      	subs	r3, r3, r2
9001816c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90018170:	e771      	b.n	90018056 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018172:	f023 0204 	bic.w	r2, r3, #4
90018176:	f640 611b 	movw	r1, #3611	; 0xe1b
9001817a:	428a      	cmp	r2, r1
9001817c:	d003      	beq.n	90018186 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001817e:	f640 621d 	movw	r2, #3613	; 0xe1d
90018182:	4293      	cmp	r3, r2
90018184:	d120      	bne.n	900181c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90018186:	3b01      	subs	r3, #1
90018188:	4602      	mov	r2, r0
9001818a:	4629      	mov	r1, r5
9001818c:	4620      	mov	r0, r4
9001818e:	b29b      	uxth	r3, r3
90018190:	f7ff ff4a 	bl	90018028 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018194:	7b41      	ldrb	r1, [r0, #13]
90018196:	00cb      	lsls	r3, r1, #3
90018198:	0649      	lsls	r1, r1, #25
9001819a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001819e:	7a03      	ldrb	r3, [r0, #8]
900181a0:	ea43 0302 	orr.w	r3, r3, r2
900181a4:	bf44      	itt	mi
900181a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900181aa:	b21b      	sxthmi	r3, r3
900181ac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900181b0:	7b6b      	ldrb	r3, [r5, #13]
900181b2:	7aaa      	ldrb	r2, [r5, #10]
900181b4:	005b      	lsls	r3, r3, #1
900181b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
900181ba:	4313      	orrs	r3, r2
900181bc:	115a      	asrs	r2, r3, #5
900181be:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900181c2:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
900181c6:	e035      	b.n	90018234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
900181c8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
900181cc:	f01c 0f40 	tst.w	ip, #64	; 0x40
900181d0:	f402 7180 	and.w	r1, r2, #256	; 0x100
900181d4:	7a2a      	ldrb	r2, [r5, #8]
900181d6:	ea42 0201 	orr.w	r2, r2, r1
900181da:	f640 6109 	movw	r1, #3593	; 0xe09
900181de:	bf1c      	itt	ne
900181e0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
900181e4:	b212      	sxthne	r2, r2
900181e6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
900181ea:	f023 0210 	bic.w	r2, r3, #16
900181ee:	428a      	cmp	r2, r1
900181f0:	d003      	beq.n	900181fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
900181f2:	f640 6213 	movw	r2, #3603	; 0xe13
900181f6:	4293      	cmp	r3, r2
900181f8:	d129      	bne.n	9001824e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
900181fa:	7b6e      	ldrb	r6, [r5, #13]
900181fc:	4629      	mov	r1, r5
900181fe:	0076      	lsls	r6, r6, #1
90018200:	f406 7280 	and.w	r2, r6, #256	; 0x100
90018204:	7aae      	ldrb	r6, [r5, #10]
90018206:	4316      	orrs	r6, r2
90018208:	f640 6213 	movw	r2, #3603	; 0xe13
9001820c:	4293      	cmp	r3, r2
9001820e:	4602      	mov	r2, r0
90018210:	4620      	mov	r0, r4
90018212:	bf16      	itet	ne
90018214:	f103 33ff 	addne.w	r3, r3, #4294967295
90018218:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001821c:	b29b      	uxthne	r3, r3
9001821e:	f7ff ff03 	bl	90018028 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018222:	7b43      	ldrb	r3, [r0, #13]
90018224:	7a82      	ldrb	r2, [r0, #10]
90018226:	005b      	lsls	r3, r3, #1
90018228:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001822c:	4313      	orrs	r3, r2
9001822e:	1af6      	subs	r6, r6, r3
90018230:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90018234:	7b69      	ldrb	r1, [r5, #13]
90018236:	00cb      	lsls	r3, r1, #3
90018238:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001823c:	7a2b      	ldrb	r3, [r5, #8]
9001823e:	4313      	orrs	r3, r2
90018240:	064a      	lsls	r2, r1, #25
90018242:	bf44      	itt	mi
90018244:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018248:	b21b      	sxthmi	r3, r3
9001824a:	1bdb      	subs	r3, r3, r7
9001824c:	e747      	b.n	900180de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001824e:	2300      	movs	r3, #0
90018250:	e7b7      	b.n	900181c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90018252:	bf00      	nop
90018254:	3fc00079 	.word	0x3fc00079

90018258 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90018258:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001825c:	4604      	mov	r4, r0
9001825e:	b942      	cbnz	r2, 90018272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90018260:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018264:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90018268:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001826c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018270:	e047      	b.n	90018302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018272:	7b51      	ldrb	r1, [r2, #13]
90018274:	8893      	ldrh	r3, [r2, #4]
90018276:	010d      	lsls	r5, r1, #4
90018278:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001827c:	79d5      	ldrb	r5, [r2, #7]
9001827e:	4305      	orrs	r5, r0
90018280:	2d04      	cmp	r5, #4
90018282:	bfcc      	ite	gt
90018284:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90018288:	f04f 0e01 	movle.w	lr, #1
9001828c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90018290:	f200 80ab 	bhi.w	900183ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90018294:	f240 60e7 	movw	r0, #1767	; 0x6e7
90018298:	4283      	cmp	r3, r0
9001829a:	d216      	bcs.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001829c:	f240 605b 	movw	r0, #1627	; 0x65b
900182a0:	4283      	cmp	r3, r0
900182a2:	d859      	bhi.n	90018358 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900182a4:	f240 6057 	movw	r0, #1623	; 0x657
900182a8:	4283      	cmp	r3, r0
900182aa:	d20e      	bcs.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900182ac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
900182b0:	d24a      	bcs.n	90018348 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
900182b2:	f240 604e 	movw	r0, #1614	; 0x64e
900182b6:	4283      	cmp	r3, r0
900182b8:	d207      	bcs.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900182ba:	f240 601a 	movw	r0, #1562	; 0x61a
900182be:	4283      	cmp	r3, r0
900182c0:	d02a      	beq.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900182c2:	d821      	bhi.n	90018308 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900182c4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
900182c8:	d35b      	bcc.n	90018382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900182ca:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
900182ce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900182d2:	f040 80d0 	bne.w	90018476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900182d6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
900182da:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900182de:	f040 80ca 	bne.w	90018476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900182e2:	00cb      	lsls	r3, r1, #3
900182e4:	0649      	lsls	r1, r1, #25
900182e6:	f403 7080 	and.w	r0, r3, #256	; 0x100
900182ea:	7a13      	ldrb	r3, [r2, #8]
900182ec:	ea43 0300 	orr.w	r3, r3, r0
900182f0:	bf44      	itt	mi
900182f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900182f6:	b21b      	sxthmi	r3, r3
900182f8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900182fc:	1b5d      	subs	r5, r3, r5
900182fe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018302:	4610      	mov	r0, r2
90018304:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018308:	f240 604b 	movw	r0, #1611	; 0x64b
9001830c:	4283      	cmp	r3, r0
9001830e:	d338      	bcc.n	90018382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018310:	f240 604c 	movw	r0, #1612	; 0x64c
90018314:	4283      	cmp	r3, r0
90018316:	d9d8      	bls.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018318:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001831c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90018320:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018324:	f040 80f3 	bne.w	9001850e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018328:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001832c:	f040 80ef 	bne.w	9001850e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018330:	00cb      	lsls	r3, r1, #3
90018332:	064e      	lsls	r6, r1, #25
90018334:	f403 7080 	and.w	r0, r3, #256	; 0x100
90018338:	7a13      	ldrb	r3, [r2, #8]
9001833a:	ea43 0300 	orr.w	r3, r3, r0
9001833e:	bf44      	itt	mi
90018340:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018344:	b21b      	sxthmi	r3, r3
90018346:	e7d9      	b.n	900182fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90018348:	f240 6054 	movw	r0, #1620	; 0x654
9001834c:	4283      	cmp	r3, r0
9001834e:	d8e3      	bhi.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018350:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90018354:	d9e0      	bls.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018356:	e7b8      	b.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018358:	f240 6074 	movw	r0, #1652	; 0x674
9001835c:	4283      	cmp	r3, r0
9001835e:	d0b4      	beq.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018360:	d82d      	bhi.n	900183be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90018362:	f240 605e 	movw	r0, #1630	; 0x65e
90018366:	4283      	cmp	r3, r0
90018368:	d804      	bhi.n	90018374 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001836a:	f240 605d 	movw	r0, #1629	; 0x65d
9001836e:	4283      	cmp	r3, r0
90018370:	d3d2      	bcc.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018372:	e7aa      	b.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018374:	f240 605f 	movw	r0, #1631	; 0x65f
90018378:	4283      	cmp	r3, r0
9001837a:	d0cd      	beq.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001837c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90018380:	d0a3      	beq.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018382:	00cb      	lsls	r3, r1, #3
90018384:	0649      	lsls	r1, r1, #25
90018386:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001838a:	7a13      	ldrb	r3, [r2, #8]
9001838c:	ea43 0300 	orr.w	r3, r3, r0
90018390:	bf44      	itt	mi
90018392:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018396:	b21b      	sxthmi	r3, r3
90018398:	1b5d      	subs	r5, r3, r5
9001839a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001839e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900183a2:	7b53      	ldrb	r3, [r2, #13]
900183a4:	015b      	lsls	r3, r3, #5
900183a6:	f403 7180 	and.w	r1, r3, #256	; 0x100
900183aa:	7993      	ldrb	r3, [r2, #6]
900183ac:	430b      	orrs	r3, r1
900183ae:	2105      	movs	r1, #5
900183b0:	005b      	lsls	r3, r3, #1
900183b2:	fb93 f3f1 	sdiv	r3, r3, r1
900183b6:	f992 1009 	ldrsb.w	r1, [r2, #9]
900183ba:	440b      	add	r3, r1
900183bc:	e756      	b.n	9001826c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
900183be:	f240 60e2 	movw	r0, #1762	; 0x6e2
900183c2:	4283      	cmp	r3, r0
900183c4:	d809      	bhi.n	900183da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
900183c6:	f240 60df 	movw	r0, #1759	; 0x6df
900183ca:	4283      	cmp	r3, r0
900183cc:	f4bf af7d 	bcs.w	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900183d0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
900183d4:	2b05      	cmp	r3, #5
900183d6:	d8d4      	bhi.n	90018382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900183d8:	e777      	b.n	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900183da:	f240 60e3 	movw	r0, #1763	; 0x6e3
900183de:	4283      	cmp	r3, r0
900183e0:	d09a      	beq.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900183e2:	f240 60e4 	movw	r0, #1764	; 0x6e4
900183e6:	4283      	cmp	r3, r0
900183e8:	e7ca      	b.n	90018380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
900183ea:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
900183ee:	d22b      	bcs.n	90018448 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
900183f0:	f640 00ed 	movw	r0, #2285	; 0x8ed
900183f4:	4283      	cmp	r3, r0
900183f6:	d28f      	bcs.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900183f8:	f640 00e5 	movw	r0, #2277	; 0x8e5
900183fc:	4283      	cmp	r3, r0
900183fe:	d816      	bhi.n	9001842e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018400:	f640 00e4 	movw	r0, #2276	; 0x8e4
90018404:	4283      	cmp	r3, r0
90018406:	f4bf af60 	bcs.w	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001840a:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001840e:	4283      	cmp	r3, r0
90018410:	d80a      	bhi.n	90018428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90018412:	f240 60eb 	movw	r0, #1771	; 0x6eb
90018416:	4283      	cmp	r3, r0
90018418:	f4bf af57 	bcs.w	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001841c:	f240 60ea 	movw	r0, #1770	; 0x6ea
90018420:	4283      	cmp	r3, r0
90018422:	f43f af79 	beq.w	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018426:	e7ac      	b.n	90018382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018428:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001842c:	e7f8      	b.n	90018420 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001842e:	f640 00e8 	movw	r0, #2280	; 0x8e8
90018432:	4283      	cmp	r3, r0
90018434:	d802      	bhi.n	9001843c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90018436:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001843a:	e798      	b.n	9001836e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001843c:	f640 00e9 	movw	r0, #2281	; 0x8e9
90018440:	4283      	cmp	r3, r0
90018442:	f47f af42 	bne.w	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018446:	e767      	b.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018448:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001844c:	4283      	cmp	r3, r0
9001844e:	f43f af63 	beq.w	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018452:	d802      	bhi.n	9001845a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90018454:	f640 00f2 	movw	r0, #2290	; 0x8f2
90018458:	e7f2      	b.n	90018440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001845a:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001845e:	4283      	cmp	r3, r0
90018460:	d805      	bhi.n	9001846e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90018462:	f640 00f9 	movw	r0, #2297	; 0x8f9
90018466:	4283      	cmp	r3, r0
90018468:	f4ff af2f 	bcc.w	900182ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001846c:	e754      	b.n	90018318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001846e:	f640 00fe 	movw	r0, #2302	; 0x8fe
90018472:	4283      	cmp	r3, r0
90018474:	e7af      	b.n	900183d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018476:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001847a:	4617      	mov	r7, r2
9001847c:	f102 0808 	add.w	r8, r2, #8
90018480:	4666      	mov	r6, ip
90018482:	6838      	ldr	r0, [r7, #0]
90018484:	3708      	adds	r7, #8
90018486:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001848a:	46e6      	mov	lr, ip
9001848c:	4547      	cmp	r7, r8
9001848e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018492:	46f4      	mov	ip, lr
90018494:	d1f5      	bne.n	90018482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018496:	6838      	ldr	r0, [r7, #0]
90018498:	f8ce 0000 	str.w	r0, [lr]
9001849c:	88b9      	ldrh	r1, [r7, #4]
9001849e:	f8ae 1004 	strh.w	r1, [lr, #4]
900184a2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
900184a6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900184aa:	d009      	beq.n	900184c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
900184ac:	7b51      	ldrb	r1, [r2, #13]
900184ae:	7992      	ldrb	r2, [r2, #6]
900184b0:	0149      	lsls	r1, r1, #5
900184b2:	f401 7180 	and.w	r1, r1, #256	; 0x100
900184b6:	4311      	orrs	r1, r2
900184b8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900184bc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
900184c0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900184c4:	b2ad      	uxth	r5, r5
900184c6:	d00d      	beq.n	900184e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
900184c8:	442b      	add	r3, r5
900184ca:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
900184ce:	b29b      	uxth	r3, r3
900184d0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900184d4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
900184d8:	10db      	asrs	r3, r3, #3
900184da:	f003 0360 	and.w	r3, r3, #96	; 0x60
900184de:	4313      	orrs	r3, r2
900184e0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900184e4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
900184e8:	00cb      	lsls	r3, r1, #3
900184ea:	064f      	lsls	r7, r1, #25
900184ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
900184f0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
900184f4:	ea43 0302 	orr.w	r3, r3, r2
900184f8:	bf44      	itt	mi
900184fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900184fe:	b21b      	sxthmi	r3, r3
90018500:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018504:	1b5b      	subs	r3, r3, r5
90018506:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001850a:	4632      	mov	r2, r6
9001850c:	e6f9      	b.n	90018302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001850e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90018512:	4617      	mov	r7, r2
90018514:	f102 0908 	add.w	r9, r2, #8
90018518:	4666      	mov	r6, ip
9001851a:	6838      	ldr	r0, [r7, #0]
9001851c:	3708      	adds	r7, #8
9001851e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018522:	46e0      	mov	r8, ip
90018524:	454f      	cmp	r7, r9
90018526:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001852a:	46c4      	mov	ip, r8
9001852c:	d1f5      	bne.n	9001851a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001852e:	6838      	ldr	r0, [r7, #0]
90018530:	f8c8 0000 	str.w	r0, [r8]
90018534:	88b9      	ldrh	r1, [r7, #4]
90018536:	f8a8 1004 	strh.w	r1, [r8, #4]
9001853a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001853e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018542:	d009      	beq.n	90018558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90018544:	7b51      	ldrb	r1, [r2, #13]
90018546:	7992      	ldrb	r2, [r2, #6]
90018548:	0149      	lsls	r1, r1, #5
9001854a:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001854e:	4311      	orrs	r1, r2
90018550:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018554:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90018558:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001855c:	d00e      	beq.n	9001857c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001855e:	eba3 030e 	sub.w	r3, r3, lr
90018562:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018566:	b29b      	uxth	r3, r3
90018568:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001856c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018570:	10db      	asrs	r3, r3, #3
90018572:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018576:	4313      	orrs	r3, r2
90018578:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001857c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018580:	00cb      	lsls	r3, r1, #3
90018582:	0648      	lsls	r0, r1, #25
90018584:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018588:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001858c:	ea43 0302 	orr.w	r3, r3, r2
90018590:	bf44      	itt	mi
90018592:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018596:	b21b      	sxthmi	r3, r3
90018598:	1b5d      	subs	r5, r3, r5
9001859a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001859e:	e7b4      	b.n	9001850a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

900185a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
900185a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900185a4:	461e      	mov	r6, r3
900185a6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900185a8:	4604      	mov	r4, r0
900185aa:	4617      	mov	r7, r2
900185ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900185b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900185b4:	f7eb fd98 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900185b8:	4605      	mov	r5, r0
900185ba:	b918      	cbnz	r0, 900185c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
900185bc:	6030      	str	r0, [r6, #0]
900185be:	4628      	mov	r0, r5
900185c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900185c4:	683b      	ldr	r3, [r7, #0]
900185c6:	4601      	mov	r1, r0
900185c8:	4638      	mov	r0, r7
900185ca:	68db      	ldr	r3, [r3, #12]
900185cc:	4798      	blx	r3
900185ce:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
900185d2:	4602      	mov	r2, r0
900185d4:	6030      	str	r0, [r6, #0]
900185d6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
900185da:	d213      	bcs.n	90018604 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
900185dc:	4643      	mov	r3, r8
900185de:	4639      	mov	r1, r7
900185e0:	4620      	mov	r0, r4
900185e2:	f7ff fe39 	bl	90018258 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
900185e6:	6030      	str	r0, [r6, #0]
900185e8:	6833      	ldr	r3, [r6, #0]
900185ea:	b143      	cbz	r3, 900185fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
900185ec:	7b5a      	ldrb	r2, [r3, #13]
900185ee:	7a9b      	ldrb	r3, [r3, #10]
900185f0:	0052      	lsls	r2, r2, #1
900185f2:	f402 7280 	and.w	r2, r2, #256	; 0x100
900185f6:	4313      	orrs	r3, r2
900185f8:	bf0c      	ite	eq
900185fa:	2301      	moveq	r3, #1
900185fc:	2300      	movne	r3, #0
900185fe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90018602:	e7dc      	b.n	900185be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90018604:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90018608:	b29b      	uxth	r3, r3
9001860a:	2b7f      	cmp	r3, #127	; 0x7f
9001860c:	d804      	bhi.n	90018618 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001860e:	4639      	mov	r1, r7
90018610:	4620      	mov	r0, r4
90018612:	f7ff fd15 	bl	90018040 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018616:	e7e6      	b.n	900185e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90018618:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001861c:	2b00      	cmp	r3, #0
9001861e:	d0e3      	beq.n	900185e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018620:	f640 1302 	movw	r3, #2306	; 0x902
90018624:	429d      	cmp	r5, r3
90018626:	d1df      	bne.n	900185e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018628:	4601      	mov	r1, r0
9001862a:	4620      	mov	r0, r4
9001862c:	f7ff fcd8 	bl	90017fe0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018630:	e7d9      	b.n	900185e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90018632 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90018632:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90018636:	461e      	mov	r6, r3
90018638:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001863a:	4604      	mov	r4, r0
9001863c:	4617      	mov	r7, r2
9001863e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018642:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018646:	f7eb fd4f 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001864a:	4605      	mov	r5, r0
9001864c:	b918      	cbnz	r0, 90018656 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001864e:	6030      	str	r0, [r6, #0]
90018650:	4628      	mov	r0, r5
90018652:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90018656:	683b      	ldr	r3, [r7, #0]
90018658:	4601      	mov	r1, r0
9001865a:	4638      	mov	r0, r7
9001865c:	f8d3 9008 	ldr.w	r9, [r3, #8]
90018660:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90018664:	47c8      	blx	r9
90018666:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001866a:	4602      	mov	r2, r0
9001866c:	6030      	str	r0, [r6, #0]
9001866e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90018672:	d213      	bcs.n	9001869c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018674:	4643      	mov	r3, r8
90018676:	4639      	mov	r1, r7
90018678:	4620      	mov	r0, r4
9001867a:	f7ff fded 	bl	90018258 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001867e:	6030      	str	r0, [r6, #0]
90018680:	6833      	ldr	r3, [r6, #0]
90018682:	b143      	cbz	r3, 90018696 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018684:	7b5a      	ldrb	r2, [r3, #13]
90018686:	7a9b      	ldrb	r3, [r3, #10]
90018688:	0052      	lsls	r2, r2, #1
9001868a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001868e:	4313      	orrs	r3, r2
90018690:	bf0c      	ite	eq
90018692:	2301      	moveq	r3, #1
90018694:	2300      	movne	r3, #0
90018696:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001869a:	e7d9      	b.n	90018650 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001869c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
900186a0:	b29b      	uxth	r3, r3
900186a2:	2b7f      	cmp	r3, #127	; 0x7f
900186a4:	d804      	bhi.n	900186b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
900186a6:	4639      	mov	r1, r7
900186a8:	4620      	mov	r0, r4
900186aa:	f7ff fcc9 	bl	90018040 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900186ae:	e7e6      	b.n	9001867e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
900186b0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
900186b4:	2b00      	cmp	r3, #0
900186b6:	d0e3      	beq.n	90018680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900186b8:	f640 1302 	movw	r3, #2306	; 0x902
900186bc:	429d      	cmp	r5, r3
900186be:	d1df      	bne.n	90018680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900186c0:	4601      	mov	r1, r0
900186c2:	4620      	mov	r0, r4
900186c4:	f7ff fc8c 	bl	90017fe0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900186c8:	e7d9      	b.n	9001867e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

900186ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
900186ca:	b510      	push	{r4, lr}
900186cc:	4604      	mov	r4, r0
900186ce:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
900186d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900186d4:	b1e1      	cbz	r1, 90018710 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900186d6:	2b0a      	cmp	r3, #10
900186d8:	d02d      	beq.n	90018736 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900186da:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
900186dc:	3901      	subs	r1, #1
900186de:	eb04 0042 	add.w	r0, r4, r2, lsl #1
900186e2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
900186e4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
900186e8:	1c51      	adds	r1, r2, #1
900186ea:	b289      	uxth	r1, r1
900186ec:	2901      	cmp	r1, #1
900186ee:	bf8a      	itet	hi
900186f0:	f102 32ff 	addhi.w	r2, r2, #4294967295
900186f4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
900186f6:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
900186f8:	1c5a      	adds	r2, r3, #1
900186fa:	8722      	strh	r2, [r4, #56]	; 0x38
900186fc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900186fe:	4413      	add	r3, r2
90018700:	b29b      	uxth	r3, r3
90018702:	2b09      	cmp	r3, #9
90018704:	bf88      	it	hi
90018706:	3b0a      	subhi	r3, #10
90018708:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001870c:	8458      	strh	r0, [r3, #34]	; 0x22
9001870e:	e7de      	b.n	900186ce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90018710:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90018712:	2b0a      	cmp	r3, #10
90018714:	d00f      	beq.n	90018736 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018716:	4620      	mov	r0, r4
90018718:	f7ff fc10 	bl	90017f3c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001871c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001871e:	1c5a      	adds	r2, r3, #1
90018720:	8722      	strh	r2, [r4, #56]	; 0x38
90018722:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90018724:	4413      	add	r3, r2
90018726:	b29b      	uxth	r3, r3
90018728:	2b09      	cmp	r3, #9
9001872a:	bf88      	it	hi
9001872c:	3b0a      	subhi	r3, #10
9001872e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018732:	8458      	strh	r0, [r3, #34]	; 0x22
90018734:	e7ec      	b.n	90018710 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018736:	bd10      	pop	{r4, pc}

90018738 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90018738:	b538      	push	{r3, r4, r5, lr}
9001873a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001873c:	4604      	mov	r4, r0
9001873e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90018742:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90018744:	8f02      	ldrh	r2, [r0, #56]	; 0x38
90018746:	3a01      	subs	r2, #1
90018748:	8702      	strh	r2, [r0, #56]	; 0x38
9001874a:	1c5a      	adds	r2, r3, #1
9001874c:	b292      	uxth	r2, r2
9001874e:	2a09      	cmp	r2, #9
90018750:	bf8a      	itet	hi
90018752:	3b09      	subhi	r3, #9
90018754:	86c2      	strhls	r2, [r0, #54]	; 0x36
90018756:	86c3      	strhhi	r3, [r0, #54]	; 0x36
90018758:	f7ff ffb7 	bl	900186ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001875c:	8c23      	ldrh	r3, [r4, #32]
9001875e:	2b01      	cmp	r3, #1
90018760:	bf9c      	itt	ls
90018762:	3301      	addls	r3, #1
90018764:	8423      	strhls	r3, [r4, #32]
90018766:	8be3      	ldrh	r3, [r4, #30]
90018768:	b90b      	cbnz	r3, 9001876e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001876a:	2302      	movs	r3, #2
9001876c:	83e3      	strh	r3, [r4, #30]
9001876e:	8be3      	ldrh	r3, [r4, #30]
90018770:	4628      	mov	r0, r5
90018772:	3b01      	subs	r3, #1
90018774:	b29b      	uxth	r3, r3
90018776:	83e3      	strh	r3, [r4, #30]
90018778:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001877c:	8365      	strh	r5, [r4, #26]
9001877e:	bd38      	pop	{r3, r4, r5, pc}

90018780 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90018780:	428a      	cmp	r2, r1
90018782:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018786:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
90018788:	d932      	bls.n	900187f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001878a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001878c:	1a54      	subs	r4, r2, r1
9001878e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
90018792:	19ee      	adds	r6, r5, r7
90018794:	fa1f fe84 	uxth.w	lr, r4
90018798:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001879c:	3e01      	subs	r6, #1
9001879e:	b2b4      	uxth	r4, r6
900187a0:	eba4 090e 	sub.w	r9, r4, lr
900187a4:	fa1f f989 	uxth.w	r9, r9
900187a8:	2c09      	cmp	r4, #9
900187aa:	4626      	mov	r6, r4
900187ac:	bf88      	it	hi
900187ae:	f1a4 060a 	subhi.w	r6, r4, #10
900187b2:	f1bc 0f00 	cmp.w	ip, #0
900187b6:	f104 34ff 	add.w	r4, r4, #4294967295
900187ba:	bf08      	it	eq
900187bc:	f04f 0c02 	moveq.w	ip, #2
900187c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900187c4:	b2a4      	uxth	r4, r4
900187c6:	f10c 3cff 	add.w	ip, ip, #4294967295
900187ca:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
900187ce:	454c      	cmp	r4, r9
900187d0:	fa1f fc8c 	uxth.w	ip, ip
900187d4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
900187d8:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
900187dc:	d1e4      	bne.n	900187a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
900187de:	eba5 050e 	sub.w	r5, r5, lr
900187e2:	eb0e 0408 	add.w	r4, lr, r8
900187e6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
900187ea:	8705      	strh	r5, [r0, #56]	; 0x38
900187ec:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
900187f0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
900187f2:	250a      	movs	r5, #10
900187f4:	1a64      	subs	r4, r4, r1
900187f6:	4439      	add	r1, r7
900187f8:	b289      	uxth	r1, r1
900187fa:	8704      	strh	r4, [r0, #56]	; 0x38
900187fc:	2909      	cmp	r1, #9
900187fe:	bf88      	it	hi
90018800:	390a      	subhi	r1, #10
90018802:	86c1      	strh	r1, [r0, #54]	; 0x36
90018804:	b18a      	cbz	r2, 9001882a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90018806:	8f01      	ldrh	r1, [r0, #56]	; 0x38
90018808:	3a01      	subs	r2, #1
9001880a:	3101      	adds	r1, #1
9001880c:	b292      	uxth	r2, r2
9001880e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90018812:	8701      	strh	r1, [r0, #56]	; 0x38
90018814:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90018816:	b901      	cbnz	r1, 9001881a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90018818:	86c5      	strh	r5, [r0, #54]	; 0x36
9001881a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001881c:	3901      	subs	r1, #1
9001881e:	b289      	uxth	r1, r1
90018820:	86c1      	strh	r1, [r0, #54]	; 0x36
90018822:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90018826:	844c      	strh	r4, [r1, #34]	; 0x22
90018828:	e7ec      	b.n	90018804 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001882a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001882e:	f7ff bf4c 	b.w	900186ca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90018832 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90018832:	b570      	push	{r4, r5, r6, lr}
90018834:	2500      	movs	r5, #0
90018836:	4295      	cmp	r5, r2
90018838:	d011      	beq.n	9001885e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001883a:	8bc4      	ldrh	r4, [r0, #30]
9001883c:	f831 6b02 	ldrh.w	r6, [r1], #2
90018840:	4414      	add	r4, r2
90018842:	3c01      	subs	r4, #1
90018844:	1b64      	subs	r4, r4, r5
90018846:	b2a4      	uxth	r4, r4
90018848:	2c01      	cmp	r4, #1
9001884a:	bf88      	it	hi
9001884c:	3c02      	subhi	r4, #2
9001884e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90018852:	8b64      	ldrh	r4, [r4, #26]
90018854:	42b4      	cmp	r4, r6
90018856:	d117      	bne.n	90018888 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90018858:	3501      	adds	r5, #1
9001885a:	b2ad      	uxth	r5, r5
9001885c:	e7eb      	b.n	90018836 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001885e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90018862:	2400      	movs	r4, #0
90018864:	4413      	add	r3, r2
90018866:	b2a2      	uxth	r2, r4
90018868:	429a      	cmp	r2, r3
9001886a:	da0f      	bge.n	9001888c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001886c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001886e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90018872:	3401      	adds	r4, #1
90018874:	4432      	add	r2, r6
90018876:	b292      	uxth	r2, r2
90018878:	2a09      	cmp	r2, #9
9001887a:	bf88      	it	hi
9001887c:	3a0a      	subhi	r2, #10
9001887e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90018882:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90018884:	42aa      	cmp	r2, r5
90018886:	d0ee      	beq.n	90018866 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90018888:	2000      	movs	r0, #0
9001888a:	bd70      	pop	{r4, r5, r6, pc}
9001888c:	2001      	movs	r0, #1
9001888e:	e7fc      	b.n	9001888a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90018890 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90018890:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018894:	4605      	mov	r5, r0
90018896:	4616      	mov	r6, r2
90018898:	1c8c      	adds	r4, r1, #2
9001889a:	8809      	ldrh	r1, [r1, #0]
9001889c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
900188a0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
900188a4:	42b3      	cmp	r3, r6
900188a6:	d124      	bne.n	900188f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
900188a8:	f3c1 2903 	ubfx	r9, r1, #8, #4
900188ac:	f3c1 1803 	ubfx	r8, r1, #4, #4
900188b0:	f001 070f 	and.w	r7, r1, #15
900188b4:	4652      	mov	r2, sl
900188b6:	f8cd 8000 	str.w	r8, [sp]
900188ba:	464b      	mov	r3, r9
900188bc:	4621      	mov	r1, r4
900188be:	4628      	mov	r0, r5
900188c0:	f7ff ffb7 	bl	90018832 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900188c4:	4683      	mov	fp, r0
900188c6:	b168      	cbz	r0, 900188e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900188c8:	eb0a 0109 	add.w	r1, sl, r9
900188cc:	463a      	mov	r2, r7
900188ce:	4628      	mov	r0, r5
900188d0:	4441      	add	r1, r8
900188d2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
900188d6:	4649      	mov	r1, r9
900188d8:	f7ff ff52 	bl	90018780 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900188dc:	4658      	mov	r0, fp
900188de:	b003      	add	sp, #12
900188e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900188e4:	eb07 010a 	add.w	r1, r7, sl
900188e8:	4449      	add	r1, r9
900188ea:	4441      	add	r1, r8
900188ec:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900188f0:	e7d2      	b.n	90018898 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
900188f2:	f04f 0b00 	mov.w	fp, #0
900188f6:	e7f1      	b.n	900188dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

900188f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
900188f8:	b570      	push	{r4, r5, r6, lr}
900188fa:	8810      	ldrh	r0, [r2, #0]
900188fc:	4298      	cmp	r0, r3
900188fe:	d817      	bhi.n	90018930 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018900:	1e48      	subs	r0, r1, #1
90018902:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90018906:	4298      	cmp	r0, r3
90018908:	d312      	bcc.n	90018930 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001890a:	2400      	movs	r4, #0
9001890c:	428c      	cmp	r4, r1
9001890e:	d20f      	bcs.n	90018930 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018910:	1860      	adds	r0, r4, r1
90018912:	1040      	asrs	r0, r0, #1
90018914:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90018918:	0085      	lsls	r5, r0, #2
9001891a:	42b3      	cmp	r3, r6
9001891c:	d902      	bls.n	90018924 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001891e:	3001      	adds	r0, #1
90018920:	b284      	uxth	r4, r0
90018922:	e7f3      	b.n	9001890c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90018924:	d201      	bcs.n	9001892a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90018926:	b281      	uxth	r1, r0
90018928:	e7f0      	b.n	9001890c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001892a:	442a      	add	r2, r5
9001892c:	8850      	ldrh	r0, [r2, #2]
9001892e:	bd70      	pop	{r4, r5, r6, pc}
90018930:	2000      	movs	r0, #0
90018932:	e7fc      	b.n	9001892e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90018934 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90018934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018938:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001893a:	4604      	mov	r4, r0
9001893c:	260b      	movs	r6, #11
9001893e:	886f      	ldrh	r7, [r5, #2]
90018940:	087f      	lsrs	r7, r7, #1
90018942:	3e01      	subs	r6, #1
90018944:	d013      	beq.n	9001896e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90018946:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90018948:	462a      	mov	r2, r5
9001894a:	4639      	mov	r1, r7
9001894c:	4620      	mov	r0, r4
9001894e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018952:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018956:	4643      	mov	r3, r8
90018958:	f7ff ffce 	bl	900188f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001895c:	b138      	cbz	r0, 9001896e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001895e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90018962:	4642      	mov	r2, r8
90018964:	4620      	mov	r0, r4
90018966:	f7ff ff93 	bl	90018890 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001896a:	2800      	cmp	r0, #0
9001896c:	d1e9      	bne.n	90018942 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001896e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90018974 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90018974:	b570      	push	{r4, r5, r6, lr}
90018976:	694a      	ldr	r2, [r1, #20]
90018978:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001897a:	684b      	ldr	r3, [r1, #4]
9001897c:	1b54      	subs	r4, r2, r5
9001897e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90018980:	f000 8106 	beq.w	90018b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90018984:	1b9b      	subs	r3, r3, r6
90018986:	d003      	beq.n	90018990 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018988:	4363      	muls	r3, r4
9001898a:	2210      	movs	r2, #16
9001898c:	fb93 f3f2 	sdiv	r3, r3, r2
90018990:	680c      	ldr	r4, [r1, #0]
90018992:	698a      	ldr	r2, [r1, #24]
90018994:	1b65      	subs	r5, r4, r5
90018996:	f000 80fd 	beq.w	90018b94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001899a:	1b92      	subs	r2, r2, r6
9001899c:	d003      	beq.n	900189a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001899e:	436a      	muls	r2, r5
900189a0:	2410      	movs	r4, #16
900189a2:	fb92 f2f4 	sdiv	r2, r2, r4
900189a6:	1a9b      	subs	r3, r3, r2
900189a8:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90018bd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900189ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900189b0:	460a      	mov	r2, r1
900189b2:	ee07 3a90 	vmov	s15, r3
900189b6:	f100 040c 	add.w	r4, r0, #12
900189ba:	4603      	mov	r3, r0
900189bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900189c0:	ee67 7a84 	vmul.f32	s15, s15, s8
900189c4:	ee87 3a27 	vdiv.f32	s6, s14, s15
900189c8:	eeb1 6a43 	vneg.f32	s12, s6
900189cc:	edd2 7a02 	vldr	s15, [r2, #8]
900189d0:	3214      	adds	r2, #20
900189d2:	eec7 6a27 	vdiv.f32	s13, s14, s15
900189d6:	ece3 6a01 	vstmia	r3!, {s13}
900189da:	429c      	cmp	r4, r3
900189dc:	ed52 7a02 	vldr	s15, [r2, #-8]
900189e0:	ee67 7aa6 	vmul.f32	s15, s15, s13
900189e4:	edc3 7a02 	vstr	s15, [r3, #8]
900189e8:	ed52 7a01 	vldr	s15, [r2, #-4]
900189ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
900189f0:	edc3 7a05 	vstr	s15, [r3, #20]
900189f4:	d1ea      	bne.n	900189cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
900189f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900189f8:	698b      	ldr	r3, [r1, #24]
900189fa:	edd0 4a02 	vldr	s9, [r0, #8]
900189fe:	1a9b      	subs	r3, r3, r2
90018a00:	edd0 3a00 	vldr	s7, [r0]
90018a04:	edd0 6a01 	vldr	s13, [r0, #4]
90018a08:	ee07 3a90 	vmov	s15, r3
90018a0c:	684b      	ldr	r3, [r1, #4]
90018a0e:	ee76 6ae4 	vsub.f32	s13, s13, s9
90018a12:	ed90 5a05 	vldr	s10, [r0, #20]
90018a16:	1a9b      	subs	r3, r3, r2
90018a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018a1c:	ee73 4ae4 	vsub.f32	s9, s7, s9
90018a20:	ed90 2a03 	vldr	s4, [r0, #12]
90018a24:	ee07 3a10 	vmov	s14, r3
90018a28:	edd0 5a04 	vldr	s11, [r0, #16]
90018a2c:	ee67 7a84 	vmul.f32	s15, s15, s8
90018a30:	ed90 1a07 	vldr	s2, [r0, #28]
90018a34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018a38:	edd0 2a06 	vldr	s5, [r0, #24]
90018a3c:	ee75 5ac5 	vsub.f32	s11, s11, s10
90018a40:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90018a44:	ee27 7a04 	vmul.f32	s14, s14, s8
90018a48:	ee32 5a45 	vsub.f32	s10, s4, s10
90018a4c:	eee6 7a87 	vfma.f32	s15, s13, s14
90018a50:	ee67 7a83 	vmul.f32	s15, s15, s6
90018a54:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90018a58:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018a5a:	694a      	ldr	r2, [r1, #20]
90018a5c:	1b13      	subs	r3, r2, r4
90018a5e:	ee07 3a10 	vmov	s14, r3
90018a62:	680b      	ldr	r3, [r1, #0]
90018a64:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018a68:	1b1b      	subs	r3, r3, r4
90018a6a:	ee27 7a04 	vmul.f32	s14, s14, s8
90018a6e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90018a72:	ee07 3a10 	vmov	s14, r3
90018a76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018a7a:	ee27 7a04 	vmul.f32	s14, s14, s8
90018a7e:	eee6 4a87 	vfma.f32	s9, s13, s14
90018a82:	ee64 4a86 	vmul.f32	s9, s9, s12
90018a86:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
90018a8a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018a8c:	698b      	ldr	r3, [r1, #24]
90018a8e:	1a9b      	subs	r3, r3, r2
90018a90:	ee06 3a90 	vmov	s13, r3
90018a94:	684b      	ldr	r3, [r1, #4]
90018a96:	1a9b      	subs	r3, r3, r2
90018a98:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018a9c:	ee07 3a10 	vmov	s14, r3
90018aa0:	ee66 6a84 	vmul.f32	s13, s13, s8
90018aa4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018aa8:	ee65 6a66 	vnmul.f32	s13, s10, s13
90018aac:	ee27 7a04 	vmul.f32	s14, s14, s8
90018ab0:	eee5 6a87 	vfma.f32	s13, s11, s14
90018ab4:	ee66 6a83 	vmul.f32	s13, s13, s6
90018ab8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
90018abc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018abe:	694a      	ldr	r2, [r1, #20]
90018ac0:	1b13      	subs	r3, r2, r4
90018ac2:	ee07 3a10 	vmov	s14, r3
90018ac6:	680b      	ldr	r3, [r1, #0]
90018ac8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018acc:	1b1b      	subs	r3, r3, r4
90018ace:	ee27 7a04 	vmul.f32	s14, s14, s8
90018ad2:	ee25 5a47 	vnmul.f32	s10, s10, s14
90018ad6:	ee07 3a10 	vmov	s14, r3
90018ada:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018ade:	ee27 7a04 	vmul.f32	s14, s14, s8
90018ae2:	eea5 5a87 	vfma.f32	s10, s11, s14
90018ae6:	edd0 5a08 	vldr	s11, [r0, #32]
90018aea:	ee31 1a65 	vsub.f32	s2, s2, s11
90018aee:	ee72 5ae5 	vsub.f32	s11, s5, s11
90018af2:	ee25 5a06 	vmul.f32	s10, s10, s12
90018af6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
90018afa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018afc:	698b      	ldr	r3, [r1, #24]
90018afe:	1a9b      	subs	r3, r3, r2
90018b00:	ee07 3a10 	vmov	s14, r3
90018b04:	684b      	ldr	r3, [r1, #4]
90018b06:	1a9b      	subs	r3, r3, r2
90018b08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018b0c:	ee01 3a90 	vmov	s3, r3
90018b10:	ee27 7a04 	vmul.f32	s14, s14, s8
90018b14:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90018b18:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90018b1c:	ee61 1a84 	vmul.f32	s3, s3, s8
90018b20:	eea1 7a21 	vfma.f32	s14, s2, s3
90018b24:	ee27 7a03 	vmul.f32	s14, s14, s6
90018b28:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90018b2c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
90018b2e:	694a      	ldr	r2, [r1, #20]
90018b30:	1b13      	subs	r3, r2, r4
90018b32:	ee03 3a10 	vmov	s6, r3
90018b36:	680b      	ldr	r3, [r1, #0]
90018b38:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018b3c:	1b1b      	subs	r3, r3, r4
90018b3e:	ee23 3a04 	vmul.f32	s6, s6, s8
90018b42:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90018b46:	ee03 3a10 	vmov	s6, r3
90018b4a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90018b4e:	ee23 4a04 	vmul.f32	s8, s6, s8
90018b52:	eee1 5a04 	vfma.f32	s11, s2, s8
90018b56:	ee25 6a86 	vmul.f32	s12, s11, s12
90018b5a:	ee62 5a67 	vnmul.f32	s11, s4, s15
90018b5e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90018b62:	eee3 5aa6 	vfma.f32	s11, s7, s13
90018b66:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90018b6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018b6e:	dd13      	ble.n	90018b98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90018b70:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018b74:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90018b78:	63c3      	str	r3, [r0, #60]	; 0x3c
90018b7a:	eee3 7a87 	vfma.f32	s15, s7, s14
90018b7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90018b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018b86:	dd15      	ble.n	90018bb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90018b88:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018b8c:	6403      	str	r3, [r0, #64]	; 0x40
90018b8e:	bd70      	pop	{r4, r5, r6, pc}
90018b90:	4623      	mov	r3, r4
90018b92:	e6fd      	b.n	90018990 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018b94:	462a      	mov	r2, r5
90018b96:	e706      	b.n	900189a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018b98:	d502      	bpl.n	90018ba0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90018b9a:	f647 73ff 	movw	r3, #32767	; 0x7fff
90018b9e:	e7e9      	b.n	90018b74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90018ba0:	ee22 2a64 	vnmul.f32	s4, s4, s9
90018ba4:	eea3 2a85 	vfma.f32	s4, s7, s10
90018ba8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018bac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018bb0:	dade      	bge.n	90018b70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90018bb2:	e7f2      	b.n	90018b9a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90018bb4:	d502      	bpl.n	90018bbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90018bb6:	f647 73ff 	movw	r3, #32767	; 0x7fff
90018bba:	e7e7      	b.n	90018b8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90018bbc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90018bc0:	eee3 4a86 	vfma.f32	s9, s7, s12
90018bc4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90018bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018bcc:	dadc      	bge.n	90018b88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
90018bce:	e7f2      	b.n	90018bb6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90018bd0:	3d800000 	.word	0x3d800000

90018bd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90018bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018bd8:	2714      	movs	r7, #20
90018bda:	435f      	muls	r7, r3
90018bdc:	eb02 0c07 	add.w	ip, r2, r7
90018be0:	f8dc 5004 	ldr.w	r5, [ip, #4]
90018be4:	f115 0e0f 	adds.w	lr, r5, #15
90018be8:	f100 80a2 	bmi.w	90018d30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90018bec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90018bf0:	9c08      	ldr	r4, [sp, #32]
90018bf2:	2614      	movs	r6, #20
90018bf4:	f8c0 e014 	str.w	lr, [r0, #20]
90018bf8:	4366      	muls	r6, r4
90018bfa:	eb02 0806 	add.w	r8, r2, r6
90018bfe:	f8d8 5004 	ldr.w	r5, [r8, #4]
90018c02:	f115 040f 	adds.w	r4, r5, #15
90018c06:	f100 809f 	bmi.w	90018d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
90018c0a:	1124      	asrs	r4, r4, #4
90018c0c:	eba4 040e 	sub.w	r4, r4, lr
90018c10:	6184      	str	r4, [r0, #24]
90018c12:	2c00      	cmp	r4, #0
90018c14:	f000 808a 	beq.w	90018d2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90018c18:	f8dc 9004 	ldr.w	r9, [ip, #4]
90018c1c:	f8d8 4004 	ldr.w	r4, [r8, #4]
90018c20:	5995      	ldr	r5, [r2, r6]
90018c22:	eba4 0809 	sub.w	r8, r4, r9
90018c26:	59d4      	ldr	r4, [r2, r7]
90018c28:	eba5 0a04 	sub.w	sl, r5, r4
90018c2c:	ea4f 1608 	mov.w	r6, r8, lsl #4
90018c30:	ea4f 150a 	mov.w	r5, sl, lsl #4
90018c34:	fb0e fe05 	mul.w	lr, lr, r5
90018c38:	fb0a ee19 	mls	lr, sl, r9, lr
90018c3c:	fb08 e404 	mla	r4, r8, r4, lr
90018c40:	3c01      	subs	r4, #1
90018c42:	19a4      	adds	r4, r4, r6
90018c44:	f100 808c 	bmi.w	90018d60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90018c48:	fb94 fef6 	sdiv	lr, r4, r6
90018c4c:	fb06 441e 	mls	r4, r6, lr, r4
90018c50:	f8c0 e000 	str.w	lr, [r0]
90018c54:	6104      	str	r4, [r0, #16]
90018c56:	2d00      	cmp	r5, #0
90018c58:	f2c0 8095 	blt.w	90018d86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90018c5c:	fb95 f4f6 	sdiv	r4, r5, r6
90018c60:	fb06 5514 	mls	r5, r6, r4, r5
90018c64:	6044      	str	r4, [r0, #4]
90018c66:	6085      	str	r5, [r0, #8]
90018c68:	60c6      	str	r6, [r0, #12]
90018c6a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90018c6e:	f8dc 4004 	ldr.w	r4, [ip, #4]
90018c72:	6945      	ldr	r5, [r0, #20]
90018c74:	59d2      	ldr	r2, [r2, r7]
90018c76:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90018c7a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 90018da8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90018c7e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90018c82:	ee07 4a10 	vmov	s14, r4
90018c86:	6804      	ldr	r4, [r0, #0]
90018c88:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018c8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018c90:	ee07 2a90 	vmov	s15, r2
90018c94:	ee27 7a26 	vmul.f32	s14, s14, s13
90018c98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018c9c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018ca0:	edd3 6a00 	vldr	s13, [r3]
90018ca4:	eee6 6a07 	vfma.f32	s13, s12, s14
90018ca8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
90018cac:	eee6 6a27 	vfma.f32	s13, s12, s15
90018cb0:	edc0 6a07 	vstr	s13, [r0, #28]
90018cb4:	edd0 6a01 	vldr	s13, [r0, #4]
90018cb8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
90018cbc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018cc0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90018cc4:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018cc8:	ed80 6a08 	vstr	s12, [r0, #32]
90018ccc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
90018cce:	6242      	str	r2, [r0, #36]	; 0x24
90018cd0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
90018cd4:	ed93 6a03 	vldr	s12, [r3, #12]
90018cd8:	eea5 6a87 	vfma.f32	s12, s11, s14
90018cdc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90018ce0:	eea5 6aa7 	vfma.f32	s12, s11, s15
90018ce4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
90018ce8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90018cec:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90018cf0:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018cf4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
90018cf8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018cfa:	6302      	str	r2, [r0, #48]	; 0x30
90018cfc:	ed93 6a06 	vldr	s12, [r3, #24]
90018d00:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90018d04:	eea5 6a87 	vfma.f32	s12, s11, s14
90018d08:	eeb0 7a46 	vmov.f32	s14, s12
90018d0c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90018d10:	eea6 7a27 	vfma.f32	s14, s12, s15
90018d14:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90018d18:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
90018d1c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90018d20:	eee6 7a87 	vfma.f32	s15, s13, s14
90018d24:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90018d28:	6b4b      	ldr	r3, [r1, #52]	; 0x34
90018d2a:	63c3      	str	r3, [r0, #60]	; 0x3c
90018d2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018d30:	2410      	movs	r4, #16
90018d32:	f1c5 0501 	rsb	r5, r5, #1
90018d36:	fb9e fef4 	sdiv	lr, lr, r4
90018d3a:	f015 050f 	ands.w	r5, r5, #15
90018d3e:	bf18      	it	ne
90018d40:	2501      	movne	r5, #1
90018d42:	ebae 0e05 	sub.w	lr, lr, r5
90018d46:	e753      	b.n	90018bf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90018d48:	f04f 0910 	mov.w	r9, #16
90018d4c:	f1c5 0501 	rsb	r5, r5, #1
90018d50:	fb94 f4f9 	sdiv	r4, r4, r9
90018d54:	f015 050f 	ands.w	r5, r5, #15
90018d58:	bf18      	it	ne
90018d5a:	2501      	movne	r5, #1
90018d5c:	1b64      	subs	r4, r4, r5
90018d5e:	e755      	b.n	90018c0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90018d60:	4264      	negs	r4, r4
90018d62:	fb94 fef6 	sdiv	lr, r4, r6
90018d66:	f1ce 0800 	rsb	r8, lr, #0
90018d6a:	fb06 441e 	mls	r4, r6, lr, r4
90018d6e:	f8c0 8000 	str.w	r8, [r0]
90018d72:	6104      	str	r4, [r0, #16]
90018d74:	2c00      	cmp	r4, #0
90018d76:	f43f af6e 	beq.w	90018c56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90018d7a:	ea6f 0e0e 	mvn.w	lr, lr
90018d7e:	1b34      	subs	r4, r6, r4
90018d80:	f8c0 e000 	str.w	lr, [r0]
90018d84:	e766      	b.n	90018c54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90018d86:	426d      	negs	r5, r5
90018d88:	fb95 f4f6 	sdiv	r4, r5, r6
90018d8c:	f1c4 0e00 	rsb	lr, r4, #0
90018d90:	fb06 5514 	mls	r5, r6, r4, r5
90018d94:	f8c0 e004 	str.w	lr, [r0, #4]
90018d98:	6085      	str	r5, [r0, #8]
90018d9a:	2d00      	cmp	r5, #0
90018d9c:	f43f af64 	beq.w	90018c68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90018da0:	43e4      	mvns	r4, r4
90018da2:	1b75      	subs	r5, r6, r5
90018da4:	6044      	str	r4, [r0, #4]
90018da6:	e75e      	b.n	90018c66 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90018da8:	3d800000 	.word	0x3d800000

90018dac <_ZN8touchgfx7Unicode6strlenEPKt>:
90018dac:	4602      	mov	r2, r0
90018dae:	b148      	cbz	r0, 90018dc4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90018db0:	2300      	movs	r3, #0
90018db2:	b298      	uxth	r0, r3
90018db4:	3301      	adds	r3, #1
90018db6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90018dba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
90018dbe:	2900      	cmp	r1, #0
90018dc0:	d1f7      	bne.n	90018db2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90018dc2:	4770      	bx	lr
90018dc4:	4770      	bx	lr

90018dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90018dc6:	b530      	push	{r4, r5, lr}
90018dc8:	4604      	mov	r4, r0
90018dca:	b159      	cbz	r1, 90018de4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90018dcc:	b148      	cbz	r0, 90018de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90018dce:	2300      	movs	r3, #0
90018dd0:	b298      	uxth	r0, r3
90018dd2:	4282      	cmp	r2, r0
90018dd4:	d905      	bls.n	90018de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90018dd6:	5ccd      	ldrb	r5, [r1, r3]
90018dd8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90018ddc:	3301      	adds	r3, #1
90018dde:	2d00      	cmp	r5, #0
90018de0:	d1f6      	bne.n	90018dd0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90018de2:	bd30      	pop	{r4, r5, pc}
90018de4:	4608      	mov	r0, r1
90018de6:	e7fc      	b.n	90018de2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90018de8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90018de8:	b5f0      	push	{r4, r5, r6, r7, lr}
90018dea:	b08b      	sub	sp, #44	; 0x2c
90018dec:	468c      	mov	ip, r1
90018dee:	4604      	mov	r4, r0
90018df0:	2100      	movs	r1, #0
90018df2:	261f      	movs	r6, #31
90018df4:	af01      	add	r7, sp, #4
90018df6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90018dfa:	1e71      	subs	r1, r6, #1
90018dfc:	fb94 fef3 	sdiv	lr, r4, r3
90018e00:	fb03 441e 	mls	r4, r3, lr, r4
90018e04:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90018e08:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90018e0c:	b2ec      	uxtb	r4, r5
90018e0e:	2d09      	cmp	r5, #9
90018e10:	bfd4      	ite	le
90018e12:	3430      	addle	r4, #48	; 0x30
90018e14:	3457      	addgt	r4, #87	; 0x57
90018e16:	b2e4      	uxtb	r4, r4
90018e18:	55bc      	strb	r4, [r7, r6]
90018e1a:	4674      	mov	r4, lr
90018e1c:	b974      	cbnz	r4, 90018e3c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90018e1e:	2800      	cmp	r0, #0
90018e20:	da05      	bge.n	90018e2e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90018e22:	ab0a      	add	r3, sp, #40	; 0x28
90018e24:	4419      	add	r1, r3
90018e26:	232d      	movs	r3, #45	; 0x2d
90018e28:	f801 3c24 	strb.w	r3, [r1, #-36]
90018e2c:	1eb1      	subs	r1, r6, #2
90018e2e:	3101      	adds	r1, #1
90018e30:	4660      	mov	r0, ip
90018e32:	4439      	add	r1, r7
90018e34:	f7ff ffc7 	bl	90018dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90018e38:	b00b      	add	sp, #44	; 0x2c
90018e3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018e3c:	460e      	mov	r6, r1
90018e3e:	e7dc      	b.n	90018dfa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90018e40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90018e40:	b5f0      	push	{r4, r5, r6, r7, lr}
90018e42:	468c      	mov	ip, r1
90018e44:	b08b      	sub	sp, #44	; 0x2c
90018e46:	2100      	movs	r1, #0
90018e48:	ae01      	add	r6, sp, #4
90018e4a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90018e4e:	211f      	movs	r1, #31
90018e50:	fbb0 f7f3 	udiv	r7, r0, r3
90018e54:	fb03 0517 	mls	r5, r3, r7, r0
90018e58:	4638      	mov	r0, r7
90018e5a:	b2ec      	uxtb	r4, r5
90018e5c:	2d09      	cmp	r5, #9
90018e5e:	bfd4      	ite	le
90018e60:	3430      	addle	r4, #48	; 0x30
90018e62:	3457      	addgt	r4, #87	; 0x57
90018e64:	b2e4      	uxtb	r4, r4
90018e66:	558c      	strb	r4, [r1, r6]
90018e68:	1e4c      	subs	r4, r1, #1
90018e6a:	b92f      	cbnz	r7, 90018e78 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90018e6c:	4431      	add	r1, r6
90018e6e:	4660      	mov	r0, ip
90018e70:	f7ff ffa9 	bl	90018dc6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90018e74:	b00b      	add	sp, #44	; 0x2c
90018e76:	bdf0      	pop	{r4, r5, r6, r7, pc}
90018e78:	4621      	mov	r1, r4
90018e7a:	e7e9      	b.n	90018e50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90018e7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90018e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018e80:	b085      	sub	sp, #20
90018e82:	4691      	mov	r9, r2
90018e84:	6802      	ldr	r2, [r0, #0]
90018e86:	4688      	mov	r8, r1
90018e88:	461c      	mov	r4, r3
90018e8a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
90018e8e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90018e92:	4683      	mov	fp, r0
90018e94:	4610      	mov	r0, r2
90018e96:	9103      	str	r1, [sp, #12]
90018e98:	9302      	str	r3, [sp, #8]
90018e9a:	9201      	str	r2, [sp, #4]
90018e9c:	f7ff ff86 	bl	90018dac <_ZN8touchgfx7Unicode6strlenEPKt>
90018ea0:	f1b8 0f00 	cmp.w	r8, #0
90018ea4:	bf0c      	ite	eq
90018ea6:	4684      	moveq	ip, r0
90018ea8:	f100 0c01 	addne.w	ip, r0, #1
90018eac:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90018eb0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90018eb4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90018eb6:	fa1f fc8c 	uxth.w	ip, ip
90018eba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018ebc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90018ec0:	9903      	ldr	r1, [sp, #12]
90018ec2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90018ec6:	d041      	beq.n	90018f4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90018ec8:	d834      	bhi.n	90018f34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90018eca:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
90018ece:	d059      	beq.n	90018f84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90018ed0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90018ed4:	d03a      	beq.n	90018f4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90018ed6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
90018eda:	d034      	beq.n	90018f46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90018edc:	2400      	movs	r4, #0
90018ede:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90018ee2:	3a01      	subs	r2, #1
90018ee4:	b169      	cbz	r1, 90018f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018ee6:	9911      	ldr	r1, [sp, #68]	; 0x44
90018ee8:	458c      	cmp	ip, r1
90018eea:	da09      	bge.n	90018f00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90018eec:	eba1 010c 	sub.w	r1, r1, ip
90018ef0:	b289      	uxth	r1, r1
90018ef2:	b933      	cbnz	r3, 90018f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018ef4:	2e00      	cmp	r6, #0
90018ef6:	d051      	beq.n	90018f9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90018ef8:	2800      	cmp	r0, #0
90018efa:	d04f      	beq.n	90018f9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90018efc:	440c      	add	r4, r1
90018efe:	b2a4      	uxth	r4, r4
90018f00:	2100      	movs	r1, #0
90018f02:	682b      	ldr	r3, [r5, #0]
90018f04:	4293      	cmp	r3, r2
90018f06:	da07      	bge.n	90018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90018f08:	f1b8 0f00 	cmp.w	r8, #0
90018f0c:	d004      	beq.n	90018f18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90018f0e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90018f12:	682b      	ldr	r3, [r5, #0]
90018f14:	3301      	adds	r3, #1
90018f16:	602b      	str	r3, [r5, #0]
90018f18:	2730      	movs	r7, #48	; 0x30
90018f1a:	2c00      	cmp	r4, #0
90018f1c:	d04e      	beq.n	90018fbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90018f1e:	682e      	ldr	r6, [r5, #0]
90018f20:	3c01      	subs	r4, #1
90018f22:	42b2      	cmp	r2, r6
90018f24:	b2a4      	uxth	r4, r4
90018f26:	dd49      	ble.n	90018fbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90018f28:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90018f2c:	682b      	ldr	r3, [r5, #0]
90018f2e:	3301      	adds	r3, #1
90018f30:	602b      	str	r3, [r5, #0]
90018f32:	e7f2      	b.n	90018f1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90018f34:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90018f38:	d01d      	beq.n	90018f76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90018f3a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
90018f3e:	d002      	beq.n	90018f46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90018f40:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90018f44:	e7c9      	b.n	90018eda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90018f46:	4684      	mov	ip, r0
90018f48:	f04f 0800 	mov.w	r8, #0
90018f4c:	2c00      	cmp	r4, #0
90018f4e:	d0c6      	beq.n	90018ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018f50:	b947      	cbnz	r7, 90018f64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90018f52:	2801      	cmp	r0, #1
90018f54:	d106      	bne.n	90018f64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90018f56:	8814      	ldrh	r4, [r2, #0]
90018f58:	2c30      	cmp	r4, #48	; 0x30
90018f5a:	bf02      	ittt	eq
90018f5c:	3202      	addeq	r2, #2
90018f5e:	4638      	moveq	r0, r7
90018f60:	f8cb 2000 	streq.w	r2, [fp]
90018f64:	45bc      	cmp	ip, r7
90018f66:	da14      	bge.n	90018f92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90018f68:	b2bf      	uxth	r7, r7
90018f6a:	eba7 040c 	sub.w	r4, r7, ip
90018f6e:	46bc      	mov	ip, r7
90018f70:	b2a4      	uxth	r4, r4
90018f72:	2600      	movs	r6, #0
90018f74:	e7b3      	b.n	90018ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018f76:	4684      	mov	ip, r0
90018f78:	b16c      	cbz	r4, 90018f96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90018f7a:	42b8      	cmp	r0, r7
90018f7c:	dd00      	ble.n	90018f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90018f7e:	b2b8      	uxth	r0, r7
90018f80:	2400      	movs	r4, #0
90018f82:	e003      	b.n	90018f8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90018f84:	f04f 0c01 	mov.w	ip, #1
90018f88:	2400      	movs	r4, #0
90018f8a:	4660      	mov	r0, ip
90018f8c:	4626      	mov	r6, r4
90018f8e:	46a0      	mov	r8, r4
90018f90:	e7a5      	b.n	90018ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018f92:	2400      	movs	r4, #0
90018f94:	e7ed      	b.n	90018f72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90018f96:	4626      	mov	r6, r4
90018f98:	46a0      	mov	r8, r4
90018f9a:	e7a0      	b.n	90018ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90018f9c:	2900      	cmp	r1, #0
90018f9e:	d0b0      	beq.n	90018f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018fa0:	2720      	movs	r7, #32
90018fa2:	682e      	ldr	r6, [r5, #0]
90018fa4:	2900      	cmp	r1, #0
90018fa6:	d0ac      	beq.n	90018f02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90018fa8:	3901      	subs	r1, #1
90018faa:	4296      	cmp	r6, r2
90018fac:	b289      	uxth	r1, r1
90018fae:	daa7      	bge.n	90018f00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90018fb0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90018fb4:	682b      	ldr	r3, [r5, #0]
90018fb6:	3301      	adds	r3, #1
90018fb8:	602b      	str	r3, [r5, #0]
90018fba:	e7f2      	b.n	90018fa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90018fbc:	b188      	cbz	r0, 90018fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90018fbe:	682b      	ldr	r3, [r5, #0]
90018fc0:	3801      	subs	r0, #1
90018fc2:	429a      	cmp	r2, r3
90018fc4:	b280      	uxth	r0, r0
90018fc6:	dd0c      	ble.n	90018fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90018fc8:	f8db 3000 	ldr.w	r3, [fp]
90018fcc:	1c9c      	adds	r4, r3, #2
90018fce:	f8cb 4000 	str.w	r4, [fp]
90018fd2:	881c      	ldrh	r4, [r3, #0]
90018fd4:	682b      	ldr	r3, [r5, #0]
90018fd6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90018fda:	682b      	ldr	r3, [r5, #0]
90018fdc:	3301      	adds	r3, #1
90018fde:	602b      	str	r3, [r5, #0]
90018fe0:	e7ec      	b.n	90018fbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90018fe2:	2620      	movs	r6, #32
90018fe4:	b151      	cbz	r1, 90018ffc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90018fe6:	6828      	ldr	r0, [r5, #0]
90018fe8:	3901      	subs	r1, #1
90018fea:	4282      	cmp	r2, r0
90018fec:	b289      	uxth	r1, r1
90018fee:	dd05      	ble.n	90018ffc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90018ff0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90018ff4:	682b      	ldr	r3, [r5, #0]
90018ff6:	3301      	adds	r3, #1
90018ff8:	602b      	str	r3, [r5, #0]
90018ffa:	e7f3      	b.n	90018fe4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90018ffc:	b005      	add	sp, #20
90018ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90019002:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019006:	2400      	movs	r4, #0
90019008:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001900c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90019010:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90019014:	8014      	strh	r4, [r2, #0]
90019016:	701c      	strb	r4, [r3, #0]
90019018:	f888 4000 	strb.w	r4, [r8]
9001901c:	f88c 4000 	strb.w	r4, [ip]
90019020:	f88e 4000 	strb.w	r4, [lr]
90019024:	703c      	strb	r4, [r7, #0]
90019026:	6804      	ldr	r4, [r0, #0]
90019028:	b1a4      	cbz	r4, 90019054 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001902a:	8824      	ldrh	r4, [r4, #0]
9001902c:	f04f 0901 	mov.w	r9, #1
90019030:	b314      	cbz	r4, 90019078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019032:	2c2b      	cmp	r4, #43	; 0x2b
90019034:	d001      	beq.n	9001903a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90019036:	2c20      	cmp	r4, #32
90019038:	d110      	bne.n	9001905c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001903a:	8014      	strh	r4, [r2, #0]
9001903c:	6804      	ldr	r4, [r0, #0]
9001903e:	b10c      	cbz	r4, 90019044 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019040:	3402      	adds	r4, #2
90019042:	6004      	str	r4, [r0, #0]
90019044:	680c      	ldr	r4, [r1, #0]
90019046:	b10c      	cbz	r4, 9001904c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019048:	3401      	adds	r4, #1
9001904a:	600c      	str	r4, [r1, #0]
9001904c:	6804      	ldr	r4, [r0, #0]
9001904e:	b17c      	cbz	r4, 90019070 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019050:	8824      	ldrh	r4, [r4, #0]
90019052:	e7ed      	b.n	90019030 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019054:	680c      	ldr	r4, [r1, #0]
90019056:	b17c      	cbz	r4, 90019078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019058:	7824      	ldrb	r4, [r4, #0]
9001905a:	e7e7      	b.n	9001902c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001905c:	2c2d      	cmp	r4, #45	; 0x2d
9001905e:	d102      	bne.n	90019066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019060:	f883 9000 	strb.w	r9, [r3]
90019064:	e7ea      	b.n	9001903c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019066:	2c23      	cmp	r4, #35	; 0x23
90019068:	d107      	bne.n	9001907a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001906a:	f888 9000 	strb.w	r9, [r8]
9001906e:	e7e5      	b.n	9001903c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019070:	680c      	ldr	r4, [r1, #0]
90019072:	b10c      	cbz	r4, 90019078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019074:	7824      	ldrb	r4, [r4, #0]
90019076:	e7db      	b.n	90019030 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019078:	2400      	movs	r4, #0
9001907a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001907e:	2b09      	cmp	r3, #9
90019080:	d901      	bls.n	90019086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90019082:	2c2a      	cmp	r4, #42	; 0x2a
90019084:	d122      	bne.n	900190cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019086:	2301      	movs	r3, #1
90019088:	2c30      	cmp	r4, #48	; 0x30
9001908a:	f88e 3000 	strb.w	r3, [lr]
9001908e:	d10d      	bne.n	900190ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019090:	f88c 3000 	strb.w	r3, [ip]
90019094:	6803      	ldr	r3, [r0, #0]
90019096:	b10b      	cbz	r3, 9001909c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90019098:	3302      	adds	r3, #2
9001909a:	6003      	str	r3, [r0, #0]
9001909c:	680b      	ldr	r3, [r1, #0]
9001909e:	b10b      	cbz	r3, 900190a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
900190a0:	3301      	adds	r3, #1
900190a2:	600b      	str	r3, [r1, #0]
900190a4:	6803      	ldr	r3, [r0, #0]
900190a6:	2b00      	cmp	r3, #0
900190a8:	d02f      	beq.n	9001910a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
900190aa:	881c      	ldrh	r4, [r3, #0]
900190ac:	2c2a      	cmp	r4, #42	; 0x2a
900190ae:	d135      	bne.n	9001911c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900190b0:	f04f 33ff 	mov.w	r3, #4294967295
900190b4:	6033      	str	r3, [r6, #0]
900190b6:	6803      	ldr	r3, [r0, #0]
900190b8:	b10b      	cbz	r3, 900190be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
900190ba:	3302      	adds	r3, #2
900190bc:	6003      	str	r3, [r0, #0]
900190be:	680b      	ldr	r3, [r1, #0]
900190c0:	b10b      	cbz	r3, 900190c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900190c2:	3301      	adds	r3, #1
900190c4:	600b      	str	r3, [r1, #0]
900190c6:	6803      	ldr	r3, [r0, #0]
900190c8:	b31b      	cbz	r3, 90019112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900190ca:	881c      	ldrh	r4, [r3, #0]
900190cc:	2c2e      	cmp	r4, #46	; 0x2e
900190ce:	d11a      	bne.n	90019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900190d0:	2301      	movs	r3, #1
900190d2:	703b      	strb	r3, [r7, #0]
900190d4:	6803      	ldr	r3, [r0, #0]
900190d6:	b10b      	cbz	r3, 900190dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900190d8:	3302      	adds	r3, #2
900190da:	6003      	str	r3, [r0, #0]
900190dc:	680b      	ldr	r3, [r1, #0]
900190de:	b10b      	cbz	r3, 900190e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900190e0:	3301      	adds	r3, #1
900190e2:	600b      	str	r3, [r1, #0]
900190e4:	6803      	ldr	r3, [r0, #0]
900190e6:	2b00      	cmp	r3, #0
900190e8:	d036      	beq.n	90019158 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900190ea:	881b      	ldrh	r3, [r3, #0]
900190ec:	2b2a      	cmp	r3, #42	; 0x2a
900190ee:	d137      	bne.n	90019160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900190f0:	f04f 33ff 	mov.w	r3, #4294967295
900190f4:	602b      	str	r3, [r5, #0]
900190f6:	6803      	ldr	r3, [r0, #0]
900190f8:	b10b      	cbz	r3, 900190fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
900190fa:	3302      	adds	r3, #2
900190fc:	6003      	str	r3, [r0, #0]
900190fe:	680b      	ldr	r3, [r1, #0]
90019100:	b10b      	cbz	r3, 90019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019102:	3301      	adds	r3, #1
90019104:	600b      	str	r3, [r1, #0]
90019106:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001910a:	680c      	ldr	r4, [r1, #0]
9001910c:	b134      	cbz	r4, 9001911c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001910e:	7824      	ldrb	r4, [r4, #0]
90019110:	e7cc      	b.n	900190ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019112:	680b      	ldr	r3, [r1, #0]
90019114:	2b00      	cmp	r3, #0
90019116:	d0f6      	beq.n	90019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019118:	781c      	ldrb	r4, [r3, #0]
9001911a:	e7d7      	b.n	900190cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001911c:	2300      	movs	r3, #0
9001911e:	220a      	movs	r2, #10
90019120:	6033      	str	r3, [r6, #0]
90019122:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90019126:	fa1f f38c 	uxth.w	r3, ip
9001912a:	2b09      	cmp	r3, #9
9001912c:	d8ce      	bhi.n	900190cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001912e:	6833      	ldr	r3, [r6, #0]
90019130:	fb02 c303 	mla	r3, r2, r3, ip
90019134:	6033      	str	r3, [r6, #0]
90019136:	6803      	ldr	r3, [r0, #0]
90019138:	b10b      	cbz	r3, 9001913e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001913a:	3302      	adds	r3, #2
9001913c:	6003      	str	r3, [r0, #0]
9001913e:	680b      	ldr	r3, [r1, #0]
90019140:	b10b      	cbz	r3, 90019146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90019142:	3301      	adds	r3, #1
90019144:	600b      	str	r3, [r1, #0]
90019146:	6803      	ldr	r3, [r0, #0]
90019148:	b10b      	cbz	r3, 9001914e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001914a:	881c      	ldrh	r4, [r3, #0]
9001914c:	e7e9      	b.n	90019122 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001914e:	680c      	ldr	r4, [r1, #0]
90019150:	2c00      	cmp	r4, #0
90019152:	d0e6      	beq.n	90019122 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019154:	7824      	ldrb	r4, [r4, #0]
90019156:	e7e4      	b.n	90019122 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019158:	680b      	ldr	r3, [r1, #0]
9001915a:	b10b      	cbz	r3, 90019160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001915c:	781b      	ldrb	r3, [r3, #0]
9001915e:	e7c5      	b.n	900190ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019160:	2200      	movs	r2, #0
90019162:	240a      	movs	r4, #10
90019164:	602a      	str	r2, [r5, #0]
90019166:	3b30      	subs	r3, #48	; 0x30
90019168:	682a      	ldr	r2, [r5, #0]
9001916a:	b29e      	uxth	r6, r3
9001916c:	2e09      	cmp	r6, #9
9001916e:	d813      	bhi.n	90019198 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019170:	fb04 3302 	mla	r3, r4, r2, r3
90019174:	602b      	str	r3, [r5, #0]
90019176:	6803      	ldr	r3, [r0, #0]
90019178:	b10b      	cbz	r3, 9001917e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001917a:	3302      	adds	r3, #2
9001917c:	6003      	str	r3, [r0, #0]
9001917e:	680b      	ldr	r3, [r1, #0]
90019180:	b10b      	cbz	r3, 90019186 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90019182:	3301      	adds	r3, #1
90019184:	600b      	str	r3, [r1, #0]
90019186:	6803      	ldr	r3, [r0, #0]
90019188:	b10b      	cbz	r3, 9001918e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001918a:	881b      	ldrh	r3, [r3, #0]
9001918c:	e7eb      	b.n	90019166 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001918e:	680b      	ldr	r3, [r1, #0]
90019190:	2b00      	cmp	r3, #0
90019192:	d0e8      	beq.n	90019166 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019194:	781b      	ldrb	r3, [r3, #0]
90019196:	e7e6      	b.n	90019166 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019198:	2a06      	cmp	r2, #6
9001919a:	bfa8      	it	ge
9001919c:	2206      	movge	r2, #6
9001919e:	602a      	str	r2, [r5, #0]
900191a0:	e7b1      	b.n	90019106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

900191a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
900191a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900191a6:	b0a3      	sub	sp, #140	; 0x8c
900191a8:	2600      	movs	r6, #0
900191aa:	4607      	mov	r7, r0
900191ac:	4688      	mov	r8, r1
900191ae:	f10d 0944 	add.w	r9, sp, #68	; 0x44
900191b2:	4631      	mov	r1, r6
900191b4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
900191b6:	4648      	mov	r0, r9
900191b8:	960d      	str	r6, [sp, #52]	; 0x34
900191ba:	e9cd 3208 	strd	r3, r2, [sp, #32]
900191be:	2242      	movs	r2, #66	; 0x42
900191c0:	f00e fc64 	bl	90027a8c <memset>
900191c4:	b15f      	cbz	r7, 900191de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900191c6:	f108 3aff 	add.w	sl, r8, #4294967295
900191ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
900191cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900191ce:	b152      	cbz	r2, 900191e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900191d0:	8812      	ldrh	r2, [r2, #0]
900191d2:	b10a      	cbz	r2, 900191d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900191d4:	459a      	cmp	sl, r3
900191d6:	dc2e      	bgt.n	90019236 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
900191d8:	2200      	movs	r2, #0
900191da:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900191de:	4638      	mov	r0, r7
900191e0:	b023      	add	sp, #140	; 0x8c
900191e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900191e6:	9a08      	ldr	r2, [sp, #32]
900191e8:	2a00      	cmp	r2, #0
900191ea:	d0f5      	beq.n	900191d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900191ec:	7812      	ldrb	r2, [r2, #0]
900191ee:	e7f0      	b.n	900191d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
900191f0:	2d00      	cmp	r5, #0
900191f2:	d0ea      	beq.n	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900191f4:	782a      	ldrb	r2, [r5, #0]
900191f6:	b142      	cbz	r2, 9001920a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
900191f8:	2a25      	cmp	r2, #37	; 0x25
900191fa:	d001      	beq.n	90019200 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
900191fc:	459a      	cmp	sl, r3
900191fe:	dc08      	bgt.n	90019212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019200:	f1bb 0f00 	cmp.w	fp, #0
90019204:	d121      	bne.n	9001924a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019206:	2d00      	cmp	r5, #0
90019208:	d0df      	beq.n	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001920a:	782a      	ldrb	r2, [r5, #0]
9001920c:	f04f 0b00 	mov.w	fp, #0
90019210:	e01d      	b.n	9001924e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90019212:	f1bb 0f00 	cmp.w	fp, #0
90019216:	d077      	beq.n	90019308 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019218:	f8bb 2000 	ldrh.w	r2, [fp]
9001921c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019220:	f1bb 0f00 	cmp.w	fp, #0
90019224:	d002      	beq.n	9001922c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90019226:	f10b 0202 	add.w	r2, fp, #2
9001922a:	9209      	str	r2, [sp, #36]	; 0x24
9001922c:	b10d      	cbz	r5, 90019232 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001922e:	3501      	adds	r5, #1
90019230:	9508      	str	r5, [sp, #32]
90019232:	3301      	adds	r3, #1
90019234:	930d      	str	r3, [sp, #52]	; 0x34
90019236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019238:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001923c:	f1bb 0f00 	cmp.w	fp, #0
90019240:	d0d6      	beq.n	900191f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90019242:	f8bb 2000 	ldrh.w	r2, [fp]
90019246:	2a00      	cmp	r2, #0
90019248:	d1d6      	bne.n	900191f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001924a:	f8bb 2000 	ldrh.w	r2, [fp]
9001924e:	2a00      	cmp	r2, #0
90019250:	d0bb      	beq.n	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019252:	459a      	cmp	sl, r3
90019254:	ddb9      	ble.n	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019256:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001925a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001925e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90019262:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90019266:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001926a:	960e      	str	r6, [sp, #56]	; 0x38
9001926c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90019270:	960f      	str	r6, [sp, #60]	; 0x3c
90019272:	f1bb 0f00 	cmp.w	fp, #0
90019276:	d002      	beq.n	9001927e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90019278:	f10b 0302 	add.w	r3, fp, #2
9001927c:	9309      	str	r3, [sp, #36]	; 0x24
9001927e:	b10d      	cbz	r5, 90019284 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90019280:	1c6b      	adds	r3, r5, #1
90019282:	9308      	str	r3, [sp, #32]
90019284:	ab0f      	add	r3, sp, #60	; 0x3c
90019286:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001928a:	a908      	add	r1, sp, #32
9001928c:	a809      	add	r0, sp, #36	; 0x24
9001928e:	9305      	str	r3, [sp, #20]
90019290:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90019294:	9304      	str	r3, [sp, #16]
90019296:	ab0e      	add	r3, sp, #56	; 0x38
90019298:	9303      	str	r3, [sp, #12]
9001929a:	ab0c      	add	r3, sp, #48	; 0x30
9001929c:	9302      	str	r3, [sp, #8]
9001929e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
900192a2:	9301      	str	r3, [sp, #4]
900192a4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
900192a8:	9300      	str	r3, [sp, #0]
900192aa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
900192ae:	f7ff fea8 	bl	90019002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
900192b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900192b4:	2b00      	cmp	r3, #0
900192b6:	bfbf      	itttt	lt
900192b8:	6823      	ldrlt	r3, [r4, #0]
900192ba:	3404      	addlt	r4, #4
900192bc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900192c0:	930e      	strlt	r3, [sp, #56]	; 0x38
900192c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900192c4:	2b00      	cmp	r3, #0
900192c6:	bfbe      	ittt	lt
900192c8:	6823      	ldrlt	r3, [r4, #0]
900192ca:	3404      	addlt	r4, #4
900192cc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900192d0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900192d4:	bfb8      	it	lt
900192d6:	930f      	strlt	r3, [sp, #60]	; 0x3c
900192d8:	b1d9      	cbz	r1, 90019312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
900192da:	880b      	ldrh	r3, [r1, #0]
900192dc:	2b69      	cmp	r3, #105	; 0x69
900192de:	d01f      	beq.n	90019320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900192e0:	d82f      	bhi.n	90019342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
900192e2:	2b58      	cmp	r3, #88	; 0x58
900192e4:	d01c      	beq.n	90019320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900192e6:	d818      	bhi.n	9001931a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
900192e8:	2b25      	cmp	r3, #37	; 0x25
900192ea:	d034      	beq.n	90019356 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
900192ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900192ee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
900192f2:	f1bb 0f00 	cmp.w	fp, #0
900192f6:	f000 80b7 	beq.w	90019468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
900192fa:	f8bb 5000 	ldrh.w	r5, [fp]
900192fe:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019302:	3301      	adds	r3, #1
90019304:	930d      	str	r3, [sp, #52]	; 0x34
90019306:	e029      	b.n	9001935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019308:	b10d      	cbz	r5, 9001930e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001930a:	782a      	ldrb	r2, [r5, #0]
9001930c:	e786      	b.n	9001921c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001930e:	462a      	mov	r2, r5
90019310:	e784      	b.n	9001921c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019312:	2a00      	cmp	r2, #0
90019314:	d0ea      	beq.n	900192ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019316:	7813      	ldrb	r3, [r2, #0]
90019318:	e7e0      	b.n	900192dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001931a:	3b63      	subs	r3, #99	; 0x63
9001931c:	2b01      	cmp	r3, #1
9001931e:	d8e5      	bhi.n	900192ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019320:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90019324:	b329      	cbz	r1, 90019372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90019326:	880b      	ldrh	r3, [r1, #0]
90019328:	2b69      	cmp	r3, #105	; 0x69
9001932a:	d063      	beq.n	900193f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001932c:	d825      	bhi.n	9001937a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001932e:	2b63      	cmp	r3, #99	; 0x63
90019330:	d038      	beq.n	900193a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90019332:	2b64      	cmp	r3, #100	; 0x64
90019334:	d05e      	beq.n	900193f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019336:	2b58      	cmp	r3, #88	; 0x58
90019338:	d07a      	beq.n	90019430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001933a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001933e:	4625      	mov	r5, r4
90019340:	e036      	b.n	900193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019342:	2b73      	cmp	r3, #115	; 0x73
90019344:	d0ec      	beq.n	90019320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019346:	d802      	bhi.n	9001934e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90019348:	2b6f      	cmp	r3, #111	; 0x6f
9001934a:	d1cf      	bne.n	900192ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001934c:	e7e8      	b.n	90019320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001934e:	2b75      	cmp	r3, #117	; 0x75
90019350:	d0e6      	beq.n	90019320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019352:	2b78      	cmp	r3, #120	; 0x78
90019354:	e7f9      	b.n	9001934a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90019356:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019358:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001935c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001935e:	b10b      	cbz	r3, 90019364 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90019360:	3302      	adds	r3, #2
90019362:	9309      	str	r3, [sp, #36]	; 0x24
90019364:	9b08      	ldr	r3, [sp, #32]
90019366:	2b00      	cmp	r3, #0
90019368:	f43f af2f 	beq.w	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001936c:	3301      	adds	r3, #1
9001936e:	9308      	str	r3, [sp, #32]
90019370:	e72b      	b.n	900191ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019372:	2a00      	cmp	r2, #0
90019374:	d0e1      	beq.n	9001933a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019376:	7813      	ldrb	r3, [r2, #0]
90019378:	e7d6      	b.n	90019328 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001937a:	2b73      	cmp	r3, #115	; 0x73
9001937c:	d036      	beq.n	900193ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001937e:	d807      	bhi.n	90019390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019380:	2b6f      	cmp	r3, #111	; 0x6f
90019382:	d1da      	bne.n	9001933a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019384:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019386:	1d25      	adds	r5, r4, #4
90019388:	2308      	movs	r3, #8
9001938a:	eba8 0202 	sub.w	r2, r8, r2
9001938e:	e049      	b.n	90019424 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019390:	2b75      	cmp	r3, #117	; 0x75
90019392:	d042      	beq.n	9001941a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019394:	2b78      	cmp	r3, #120	; 0x78
90019396:	d1d0      	bne.n	9001933a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019398:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001939a:	1d25      	adds	r5, r4, #4
9001939c:	2310      	movs	r3, #16
9001939e:	eba8 0202 	sub.w	r2, r8, r2
900193a2:	e03f      	b.n	90019424 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
900193a4:	6823      	ldr	r3, [r4, #0]
900193a6:	1d25      	adds	r5, r4, #4
900193a8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
900193ac:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900193b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900193b2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
900193b6:	2b00      	cmp	r3, #0
900193b8:	d051      	beq.n	9001945e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
900193ba:	881a      	ldrh	r2, [r3, #0]
900193bc:	a80d      	add	r0, sp, #52	; 0x34
900193be:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
900193c2:	462c      	mov	r4, r5
900193c4:	9005      	str	r0, [sp, #20]
900193c6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
900193ca:	9004      	str	r0, [sp, #16]
900193cc:	980e      	ldr	r0, [sp, #56]	; 0x38
900193ce:	9003      	str	r0, [sp, #12]
900193d0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
900193d4:	9002      	str	r0, [sp, #8]
900193d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
900193d8:	9001      	str	r0, [sp, #4]
900193da:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
900193de:	e9cd 8706 	strd	r8, r7, [sp, #24]
900193e2:	9000      	str	r0, [sp, #0]
900193e4:	a810      	add	r0, sp, #64	; 0x40
900193e6:	f7ff fd49 	bl	90018e7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
900193ea:	e7b7      	b.n	9001935c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
900193ec:	1d25      	adds	r5, r4, #4
900193ee:	6823      	ldr	r3, [r4, #0]
900193f0:	9310      	str	r3, [sp, #64]	; 0x40
900193f2:	e7dd      	b.n	900193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900193f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900193f6:	230a      	movs	r3, #10
900193f8:	4649      	mov	r1, r9
900193fa:	6820      	ldr	r0, [r4, #0]
900193fc:	eba8 0202 	sub.w	r2, r8, r2
90019400:	1d25      	adds	r5, r4, #4
90019402:	b292      	uxth	r2, r2
90019404:	f7ff fcf0 	bl	90018de8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019408:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001940c:	2b2d      	cmp	r3, #45	; 0x2d
9001940e:	d1cf      	bne.n	900193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019410:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90019414:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019416:	3302      	adds	r3, #2
90019418:	e7ea      	b.n	900193f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001941a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001941c:	1d25      	adds	r5, r4, #4
9001941e:	230a      	movs	r3, #10
90019420:	eba8 0202 	sub.w	r2, r8, r2
90019424:	b292      	uxth	r2, r2
90019426:	4649      	mov	r1, r9
90019428:	6820      	ldr	r0, [r4, #0]
9001942a:	f7ff fd09 	bl	90018e40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001942e:	e7bf      	b.n	900193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019430:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019432:	2310      	movs	r3, #16
90019434:	4649      	mov	r1, r9
90019436:	6820      	ldr	r0, [r4, #0]
90019438:	eba8 0202 	sub.w	r2, r8, r2
9001943c:	1d25      	adds	r5, r4, #4
9001943e:	b292      	uxth	r2, r2
90019440:	f7ff fcfe 	bl	90018e40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019444:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90019448:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001944c:	2b00      	cmp	r3, #0
9001944e:	d0af      	beq.n	900193b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019450:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90019454:	2919      	cmp	r1, #25
90019456:	d8f7      	bhi.n	90019448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019458:	3b20      	subs	r3, #32
9001945a:	8013      	strh	r3, [r2, #0]
9001945c:	e7f4      	b.n	90019448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001945e:	9a08      	ldr	r2, [sp, #32]
90019460:	2a00      	cmp	r2, #0
90019462:	d0ab      	beq.n	900193bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019464:	7812      	ldrb	r2, [r2, #0]
90019466:	e7a9      	b.n	900193bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019468:	2d00      	cmp	r5, #0
9001946a:	f43f af48 	beq.w	900192fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001946e:	782d      	ldrb	r5, [r5, #0]
90019470:	e745      	b.n	900192fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019472:	b507      	push	{r0, r1, r2, lr}
90019474:	9300      	str	r3, [sp, #0]
90019476:	4613      	mov	r3, r2
90019478:	2200      	movs	r2, #0
9001947a:	f7ff fe92 	bl	900191a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001947e:	b003      	add	sp, #12
90019480:	f85d fb04 	ldr.w	pc, [sp], #4

90019484 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019484:	b40c      	push	{r2, r3}
90019486:	b507      	push	{r0, r1, r2, lr}
90019488:	ab04      	add	r3, sp, #16
9001948a:	f853 2b04 	ldr.w	r2, [r3], #4
9001948e:	9301      	str	r3, [sp, #4]
90019490:	f7ff ffef 	bl	90019472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019494:	b003      	add	sp, #12
90019496:	f85d eb04 	ldr.w	lr, [sp], #4
9001949a:	b002      	add	sp, #8
9001949c:	4770      	bx	lr
	...

900194a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
900194a0:	4b01      	ldr	r3, [pc, #4]	; (900194a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
900194a2:	6018      	str	r0, [r3, #0]
900194a4:	4770      	bx	lr
900194a6:	bf00      	nop
900194a8:	2403976c 	.word	0x2403976c

900194ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
900194ac:	4b06      	ldr	r3, [pc, #24]	; (900194c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
900194ae:	881a      	ldrh	r2, [r3, #0]
900194b0:	4282      	cmp	r2, r0
900194b2:	d807      	bhi.n	900194c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
900194b4:	4b05      	ldr	r3, [pc, #20]	; (900194cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
900194b6:	881b      	ldrh	r3, [r3, #0]
900194b8:	4413      	add	r3, r2
900194ba:	4298      	cmp	r0, r3
900194bc:	bfac      	ite	ge
900194be:	2000      	movge	r0, #0
900194c0:	2001      	movlt	r0, #1
900194c2:	4770      	bx	lr
900194c4:	2000      	movs	r0, #0
900194c6:	4770      	bx	lr
900194c8:	2403978c 	.word	0x2403978c
900194cc:	24039790 	.word	0x24039790

900194d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
900194d0:	b508      	push	{r3, lr}
900194d2:	4601      	mov	r1, r0
900194d4:	f7ff ffea 	bl	900194ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
900194d8:	b118      	cbz	r0, 900194e2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
900194da:	4b02      	ldr	r3, [pc, #8]	; (900194e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
900194dc:	681b      	ldr	r3, [r3, #0]
900194de:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
900194e2:	bd08      	pop	{r3, pc}
900194e4:	24039770 	.word	0x24039770

900194e8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
900194e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900194ea:	4c24      	ldr	r4, [pc, #144]	; (9001957c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
900194ec:	6823      	ldr	r3, [r4, #0]
900194ee:	2b00      	cmp	r3, #0
900194f0:	d042      	beq.n	90019578 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900194f2:	4a23      	ldr	r2, [pc, #140]	; (90019580 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
900194f4:	4d23      	ldr	r5, [pc, #140]	; (90019584 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
900194f6:	8811      	ldrh	r1, [r2, #0]
900194f8:	f8b5 c000 	ldrh.w	ip, [r5]
900194fc:	4822      	ldr	r0, [pc, #136]	; (90019588 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
900194fe:	4461      	add	r1, ip
90019500:	1c4a      	adds	r2, r1, #1
90019502:	008f      	lsls	r7, r1, #2
90019504:	f022 0201 	bic.w	r2, r2, #1
90019508:	19de      	adds	r6, r3, r7
9001950a:	0412      	lsls	r2, r2, #16
9001950c:	6006      	str	r6, [r0, #0]
9001950e:	4e1f      	ldr	r6, [pc, #124]	; (9001958c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90019510:	0c12      	lsrs	r2, r2, #16
90019512:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90019516:	19da      	adds	r2, r3, r7
90019518:	6032      	str	r2, [r6, #0]
9001951a:	220e      	movs	r2, #14
9001951c:	fb02 f20c 	mul.w	r2, r2, ip
90019520:	3203      	adds	r2, #3
90019522:	f022 0203 	bic.w	r2, r2, #3
90019526:	443a      	add	r2, r7
90019528:	4f19      	ldr	r7, [pc, #100]	; (90019590 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001952a:	4413      	add	r3, r2
9001952c:	603b      	str	r3, [r7, #0]
9001952e:	2300      	movs	r3, #0
90019530:	4f18      	ldr	r7, [pc, #96]	; (90019594 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90019532:	469c      	mov	ip, r3
90019534:	803b      	strh	r3, [r7, #0]
90019536:	4f18      	ldr	r7, [pc, #96]	; (90019598 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90019538:	683f      	ldr	r7, [r7, #0]
9001953a:	1aba      	subs	r2, r7, r2
9001953c:	4f17      	ldr	r7, [pc, #92]	; (9001959c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001953e:	603a      	str	r2, [r7, #0]
90019540:	f64f 77ff 	movw	r7, #65535	; 0xffff
90019544:	4a16      	ldr	r2, [pc, #88]	; (900195a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90019546:	8013      	strh	r3, [r2, #0]
90019548:	428b      	cmp	r3, r1
9001954a:	d10d      	bne.n	90019568 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001954c:	882d      	ldrh	r5, [r5, #0]
9001954e:	2300      	movs	r3, #0
90019550:	6830      	ldr	r0, [r6, #0]
90019552:	240e      	movs	r4, #14
90019554:	429d      	cmp	r5, r3
90019556:	d90f      	bls.n	90019578 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019558:	fb04 0203 	mla	r2, r4, r3, r0
9001955c:	3301      	adds	r3, #1
9001955e:	7b11      	ldrb	r1, [r2, #12]
90019560:	f36f 1145 	bfc	r1, #5, #1
90019564:	7311      	strb	r1, [r2, #12]
90019566:	e7f5      	b.n	90019554 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90019568:	6822      	ldr	r2, [r4, #0]
9001956a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001956e:	6802      	ldr	r2, [r0, #0]
90019570:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90019574:	3301      	adds	r3, #1
90019576:	e7e7      	b.n	90019548 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90019578:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001957a:	bf00      	nop
9001957c:	24039770 	.word	0x24039770
90019580:	2403978c 	.word	0x2403978c
90019584:	24039790 	.word	0x24039790
90019588:	24039784 	.word	0x24039784
9001958c:	24039774 	.word	0x24039774
90019590:	2403977c 	.word	0x2403977c
90019594:	2403978e 	.word	0x2403978e
90019598:	24039778 	.word	0x24039778
9001959c:	24039788 	.word	0x24039788
900195a0:	24039780 	.word	0x24039780

900195a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
900195a4:	4b06      	ldr	r3, [pc, #24]	; (900195c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
900195a6:	681b      	ldr	r3, [r3, #0]
900195a8:	b943      	cbnz	r3, 900195bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
900195aa:	b139      	cbz	r1, 900195bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
900195ac:	4b05      	ldr	r3, [pc, #20]	; (900195c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
900195ae:	801a      	strh	r2, [r3, #0]
900195b0:	4b05      	ldr	r3, [pc, #20]	; (900195c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
900195b2:	6019      	str	r1, [r3, #0]
900195b4:	4b05      	ldr	r3, [pc, #20]	; (900195cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
900195b6:	6018      	str	r0, [r3, #0]
900195b8:	f7ff bf96 	b.w	900194e8 <_ZN8touchgfx6Bitmap10clearCacheEv>
900195bc:	4770      	bx	lr
900195be:	bf00      	nop
900195c0:	2403977c 	.word	0x2403977c
900195c4:	24039790 	.word	0x24039790
900195c8:	24039778 	.word	0x24039778
900195cc:	24039770 	.word	0x24039770

900195d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
900195d0:	b470      	push	{r4, r5, r6}
900195d2:	4c07      	ldr	r4, [pc, #28]	; (900195f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
900195d4:	4605      	mov	r5, r0
900195d6:	4610      	mov	r0, r2
900195d8:	9a03      	ldr	r2, [sp, #12]
900195da:	6826      	ldr	r6, [r4, #0]
900195dc:	b936      	cbnz	r6, 900195ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
900195de:	6025      	str	r5, [r4, #0]
900195e0:	4c04      	ldr	r4, [pc, #16]	; (900195f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
900195e2:	8021      	strh	r1, [r4, #0]
900195e4:	4619      	mov	r1, r3
900195e6:	bc70      	pop	{r4, r5, r6}
900195e8:	f7ff bfdc 	b.w	900195a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
900195ec:	bc70      	pop	{r4, r5, r6}
900195ee:	4770      	bx	lr
900195f0:	24039794 	.word	0x24039794
900195f4:	2403978c 	.word	0x2403978c

900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
900195f8:	4a12      	ldr	r2, [pc, #72]	; (90019644 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
900195fa:	8803      	ldrh	r3, [r0, #0]
900195fc:	8812      	ldrh	r2, [r2, #0]
900195fe:	4293      	cmp	r3, r2
90019600:	d207      	bcs.n	90019612 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90019602:	4a11      	ldr	r2, [pc, #68]	; (90019648 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90019604:	2114      	movs	r1, #20
90019606:	6812      	ldr	r2, [r2, #0]
90019608:	fb01 2303 	mla	r3, r1, r3, r2
9001960c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90019610:	4770      	bx	lr
90019612:	490e      	ldr	r1, [pc, #56]	; (9001964c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90019614:	8809      	ldrh	r1, [r1, #0]
90019616:	4411      	add	r1, r2
90019618:	428b      	cmp	r3, r1
9001961a:	da04      	bge.n	90019626 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001961c:	1a9b      	subs	r3, r3, r2
9001961e:	4a0c      	ldr	r2, [pc, #48]	; (90019650 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90019620:	210e      	movs	r1, #14
90019622:	6812      	ldr	r2, [r2, #0]
90019624:	e7f0      	b.n	90019608 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90019626:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001962a:	4293      	cmp	r3, r2
9001962c:	d108      	bne.n	90019640 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001962e:	4b09      	ldr	r3, [pc, #36]	; (90019654 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90019630:	781b      	ldrb	r3, [r3, #0]
90019632:	b91b      	cbnz	r3, 9001963c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90019634:	4b08      	ldr	r3, [pc, #32]	; (90019658 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90019636:	f9b3 0000 	ldrsh.w	r0, [r3]
9001963a:	4770      	bx	lr
9001963c:	4b07      	ldr	r3, [pc, #28]	; (9001965c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001963e:	e7fa      	b.n	90019636 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90019640:	2000      	movs	r0, #0
90019642:	4770      	bx	lr
90019644:	2403978c 	.word	0x2403978c
90019648:	24039794 	.word	0x24039794
9001964c:	24039790 	.word	0x24039790
90019650:	24039774 	.word	0x24039774
90019654:	240396fc 	.word	0x240396fc
90019658:	240396fe 	.word	0x240396fe
9001965c:	24039700 	.word	0x24039700

90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90019660:	4a12      	ldr	r2, [pc, #72]	; (900196ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90019662:	8803      	ldrh	r3, [r0, #0]
90019664:	8812      	ldrh	r2, [r2, #0]
90019666:	4293      	cmp	r3, r2
90019668:	d207      	bcs.n	9001967a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001966a:	4a11      	ldr	r2, [pc, #68]	; (900196b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001966c:	2114      	movs	r1, #20
9001966e:	6812      	ldr	r2, [r2, #0]
90019670:	fb01 2303 	mla	r3, r1, r3, r2
90019674:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019678:	4770      	bx	lr
9001967a:	490e      	ldr	r1, [pc, #56]	; (900196b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001967c:	8809      	ldrh	r1, [r1, #0]
9001967e:	4411      	add	r1, r2
90019680:	428b      	cmp	r3, r1
90019682:	da04      	bge.n	9001968e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019684:	1a9b      	subs	r3, r3, r2
90019686:	4a0c      	ldr	r2, [pc, #48]	; (900196b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019688:	210e      	movs	r1, #14
9001968a:	6812      	ldr	r2, [r2, #0]
9001968c:	e7f0      	b.n	90019670 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001968e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019692:	4293      	cmp	r3, r2
90019694:	d108      	bne.n	900196a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019696:	4b09      	ldr	r3, [pc, #36]	; (900196bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019698:	781b      	ldrb	r3, [r3, #0]
9001969a:	b91b      	cbnz	r3, 900196a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001969c:	4b08      	ldr	r3, [pc, #32]	; (900196c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001969e:	f9b3 0000 	ldrsh.w	r0, [r3]
900196a2:	4770      	bx	lr
900196a4:	4b07      	ldr	r3, [pc, #28]	; (900196c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
900196a6:	e7fa      	b.n	9001969e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
900196a8:	2000      	movs	r0, #0
900196aa:	4770      	bx	lr
900196ac:	2403978c 	.word	0x2403978c
900196b0:	24039794 	.word	0x24039794
900196b4:	24039790 	.word	0x24039790
900196b8:	24039774 	.word	0x24039774
900196bc:	240396fc 	.word	0x240396fc
900196c0:	24039700 	.word	0x24039700
900196c4:	240396fe 	.word	0x240396fe

900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
900196c8:	4a1f      	ldr	r2, [pc, #124]	; (90019748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
900196ca:	b510      	push	{r4, lr}
900196cc:	880b      	ldrh	r3, [r1, #0]
900196ce:	8812      	ldrh	r2, [r2, #0]
900196d0:	4293      	cmp	r3, r2
900196d2:	d213      	bcs.n	900196fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
900196d4:	4a1d      	ldr	r2, [pc, #116]	; (9001974c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
900196d6:	2114      	movs	r1, #20
900196d8:	6812      	ldr	r2, [r2, #0]
900196da:	fb01 2303 	mla	r3, r1, r3, r2
900196de:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
900196e2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
900196e6:	8a1a      	ldrh	r2, [r3, #16]
900196e8:	8a5b      	ldrh	r3, [r3, #18]
900196ea:	f3c2 020c 	ubfx	r2, r2, #0, #13
900196ee:	8004      	strh	r4, [r0, #0]
900196f0:	f3c3 030c 	ubfx	r3, r3, #0, #13
900196f4:	8041      	strh	r1, [r0, #2]
900196f6:	8082      	strh	r2, [r0, #4]
900196f8:	80c3      	strh	r3, [r0, #6]
900196fa:	e00e      	b.n	9001971a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
900196fc:	4914      	ldr	r1, [pc, #80]	; (90019750 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
900196fe:	8809      	ldrh	r1, [r1, #0]
90019700:	4411      	add	r1, r2
90019702:	428b      	cmp	r3, r1
90019704:	da0a      	bge.n	9001971c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90019706:	1a9b      	subs	r3, r3, r2
90019708:	4a12      	ldr	r2, [pc, #72]	; (90019754 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001970a:	210e      	movs	r1, #14
9001970c:	6812      	ldr	r2, [r2, #0]
9001970e:	fb01 2303 	mla	r3, r1, r3, r2
90019712:	681a      	ldr	r2, [r3, #0]
90019714:	6002      	str	r2, [r0, #0]
90019716:	685a      	ldr	r2, [r3, #4]
90019718:	6042      	str	r2, [r0, #4]
9001971a:	bd10      	pop	{r4, pc}
9001971c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019720:	4293      	cmp	r3, r2
90019722:	d10b      	bne.n	9001973c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
90019724:	4b0c      	ldr	r3, [pc, #48]	; (90019758 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90019726:	f9b3 1000 	ldrsh.w	r1, [r3]
9001972a:	4b0c      	ldr	r3, [pc, #48]	; (9001975c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001972c:	8081      	strh	r1, [r0, #4]
9001972e:	f9b3 2000 	ldrsh.w	r2, [r3]
90019732:	2300      	movs	r3, #0
90019734:	80c2      	strh	r2, [r0, #6]
90019736:	8003      	strh	r3, [r0, #0]
90019738:	8043      	strh	r3, [r0, #2]
9001973a:	e7ee      	b.n	9001971a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001973c:	2300      	movs	r3, #0
9001973e:	8003      	strh	r3, [r0, #0]
90019740:	8043      	strh	r3, [r0, #2]
90019742:	8083      	strh	r3, [r0, #4]
90019744:	e7d8      	b.n	900196f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019746:	bf00      	nop
90019748:	2403978c 	.word	0x2403978c
9001974c:	24039794 	.word	0x24039794
90019750:	24039790 	.word	0x24039790
90019754:	24039774 	.word	0x24039774
90019758:	240396f8 	.word	0x240396f8
9001975c:	240396fa 	.word	0x240396fa

90019760 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90019760:	4a17      	ldr	r2, [pc, #92]	; (900197c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90019762:	8803      	ldrh	r3, [r0, #0]
90019764:	8812      	ldrh	r2, [r2, #0]
90019766:	4293      	cmp	r3, r2
90019768:	d213      	bcs.n	90019792 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001976a:	4a16      	ldr	r2, [pc, #88]	; (900197c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001976c:	2114      	movs	r1, #20
9001976e:	6812      	ldr	r2, [r2, #0]
90019770:	fb01 2303 	mla	r3, r1, r3, r2
90019774:	8a1a      	ldrh	r2, [r3, #16]
90019776:	8919      	ldrh	r1, [r3, #8]
90019778:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001977c:	428a      	cmp	r2, r1
9001977e:	db1d      	blt.n	900197bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019780:	8a58      	ldrh	r0, [r3, #18]
90019782:	f3c0 000c 	ubfx	r0, r0, #0, #13
90019786:	895b      	ldrh	r3, [r3, #10]
90019788:	4298      	cmp	r0, r3
9001978a:	bfac      	ite	ge
9001978c:	2000      	movge	r0, #0
9001978e:	2001      	movlt	r0, #1
90019790:	4770      	bx	lr
90019792:	490d      	ldr	r1, [pc, #52]	; (900197c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90019794:	8809      	ldrh	r1, [r1, #0]
90019796:	4411      	add	r1, r2
90019798:	428b      	cmp	r3, r1
9001979a:	da0d      	bge.n	900197b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001979c:	1a9b      	subs	r3, r3, r2
9001979e:	4a0b      	ldr	r2, [pc, #44]	; (900197cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
900197a0:	210e      	movs	r1, #14
900197a2:	6812      	ldr	r2, [r2, #0]
900197a4:	fb01 2303 	mla	r3, r1, r3, r2
900197a8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
900197ac:	891a      	ldrh	r2, [r3, #8]
900197ae:	4291      	cmp	r1, r2
900197b0:	db04      	blt.n	900197bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
900197b2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
900197b6:	e7e6      	b.n	90019786 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
900197b8:	2000      	movs	r0, #0
900197ba:	4770      	bx	lr
900197bc:	2001      	movs	r0, #1
900197be:	4770      	bx	lr
900197c0:	2403978c 	.word	0x2403978c
900197c4:	24039794 	.word	0x24039794
900197c8:	24039790 	.word	0x24039790
900197cc:	24039774 	.word	0x24039774

900197d0 <_ZNK8touchgfx6Bitmap7getDataEv>:
900197d0:	4a12      	ldr	r2, [pc, #72]	; (9001981c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
900197d2:	8803      	ldrh	r3, [r0, #0]
900197d4:	8811      	ldrh	r1, [r2, #0]
900197d6:	428b      	cmp	r3, r1
900197d8:	d20b      	bcs.n	900197f2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
900197da:	4a11      	ldr	r2, [pc, #68]	; (90019820 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900197dc:	6812      	ldr	r2, [r2, #0]
900197de:	b112      	cbz	r2, 900197e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
900197e0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900197e4:	b9c0      	cbnz	r0, 90019818 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
900197e6:	4a0f      	ldr	r2, [pc, #60]	; (90019824 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
900197e8:	6811      	ldr	r1, [r2, #0]
900197ea:	2214      	movs	r2, #20
900197ec:	4353      	muls	r3, r2
900197ee:	58c8      	ldr	r0, [r1, r3]
900197f0:	4770      	bx	lr
900197f2:	4a0d      	ldr	r2, [pc, #52]	; (90019828 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
900197f4:	8812      	ldrh	r2, [r2, #0]
900197f6:	440a      	add	r2, r1
900197f8:	4293      	cmp	r3, r2
900197fa:	da04      	bge.n	90019806 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
900197fc:	4a08      	ldr	r2, [pc, #32]	; (90019820 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900197fe:	6812      	ldr	r2, [r2, #0]
90019800:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019804:	4770      	bx	lr
90019806:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001980a:	4293      	cmp	r3, r2
9001980c:	d103      	bne.n	90019816 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001980e:	4b07      	ldr	r3, [pc, #28]	; (9001982c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90019810:	681b      	ldr	r3, [r3, #0]
90019812:	6c58      	ldr	r0, [r3, #68]	; 0x44
90019814:	4770      	bx	lr
90019816:	2000      	movs	r0, #0
90019818:	4770      	bx	lr
9001981a:	bf00      	nop
9001981c:	2403978c 	.word	0x2403978c
90019820:	24039770 	.word	0x24039770
90019824:	24039794 	.word	0x24039794
90019828:	24039790 	.word	0x24039790
9001982c:	24039704 	.word	0x24039704

90019830 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90019830:	4b24      	ldr	r3, [pc, #144]	; (900198c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90019832:	8802      	ldrh	r2, [r0, #0]
90019834:	8818      	ldrh	r0, [r3, #0]
90019836:	4282      	cmp	r2, r0
90019838:	d221      	bcs.n	9001987e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001983a:	4b23      	ldr	r3, [pc, #140]	; (900198c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001983c:	6819      	ldr	r1, [r3, #0]
9001983e:	2314      	movs	r3, #20
90019840:	fb03 1302 	mla	r3, r3, r2, r1
90019844:	6858      	ldr	r0, [r3, #4]
90019846:	2800      	cmp	r0, #0
90019848:	d03a      	beq.n	900198c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001984a:	4920      	ldr	r1, [pc, #128]	; (900198cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001984c:	6809      	ldr	r1, [r1, #0]
9001984e:	2900      	cmp	r1, #0
90019850:	d036      	beq.n	900198c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019852:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90019856:	2900      	cmp	r1, #0
90019858:	d032      	beq.n	900198c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001985a:	891a      	ldrh	r2, [r3, #8]
9001985c:	8958      	ldrh	r0, [r3, #10]
9001985e:	4350      	muls	r0, r2
90019860:	7c5a      	ldrb	r2, [r3, #17]
90019862:	7cdb      	ldrb	r3, [r3, #19]
90019864:	0952      	lsrs	r2, r2, #5
90019866:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001986a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001986e:	2b0b      	cmp	r3, #11
90019870:	bf18      	it	ne
90019872:	0040      	lslne	r0, r0, #1
90019874:	3003      	adds	r0, #3
90019876:	f020 0003 	bic.w	r0, r0, #3
9001987a:	4408      	add	r0, r1
9001987c:	4770      	bx	lr
9001987e:	4b14      	ldr	r3, [pc, #80]	; (900198d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90019880:	881b      	ldrh	r3, [r3, #0]
90019882:	4403      	add	r3, r0
90019884:	429a      	cmp	r2, r3
90019886:	da1a      	bge.n	900198be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019888:	4b12      	ldr	r3, [pc, #72]	; (900198d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001988a:	1a10      	subs	r0, r2, r0
9001988c:	210e      	movs	r1, #14
9001988e:	681b      	ldr	r3, [r3, #0]
90019890:	fb01 3000 	mla	r0, r1, r0, r3
90019894:	7b03      	ldrb	r3, [r0, #12]
90019896:	f003 031f 	and.w	r3, r3, #31
9001989a:	2b0b      	cmp	r3, #11
9001989c:	d10b      	bne.n	900198b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001989e:	8903      	ldrh	r3, [r0, #8]
900198a0:	8940      	ldrh	r0, [r0, #10]
900198a2:	4358      	muls	r0, r3
900198a4:	4b09      	ldr	r3, [pc, #36]	; (900198cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900198a6:	3003      	adds	r0, #3
900198a8:	6819      	ldr	r1, [r3, #0]
900198aa:	f020 0303 	bic.w	r3, r0, #3
900198ae:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
900198b2:	4418      	add	r0, r3
900198b4:	4770      	bx	lr
900198b6:	2b0d      	cmp	r3, #13
900198b8:	d101      	bne.n	900198be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
900198ba:	300d      	adds	r0, #13
900198bc:	4770      	bx	lr
900198be:	2000      	movs	r0, #0
900198c0:	4770      	bx	lr
900198c2:	bf00      	nop
900198c4:	2403978c 	.word	0x2403978c
900198c8:	24039794 	.word	0x24039794
900198cc:	24039770 	.word	0x24039770
900198d0:	24039790 	.word	0x24039790
900198d4:	24039774 	.word	0x24039774

900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
900198d8:	4a17      	ldr	r2, [pc, #92]	; (90019938 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
900198da:	b510      	push	{r4, lr}
900198dc:	8803      	ldrh	r3, [r0, #0]
900198de:	8812      	ldrh	r2, [r2, #0]
900198e0:	4293      	cmp	r3, r2
900198e2:	d20c      	bcs.n	900198fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
900198e4:	4a15      	ldr	r2, [pc, #84]	; (9001993c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
900198e6:	2114      	movs	r1, #20
900198e8:	6812      	ldr	r2, [r2, #0]
900198ea:	fb01 2303 	mla	r3, r1, r3, r2
900198ee:	7c58      	ldrb	r0, [r3, #17]
900198f0:	0942      	lsrs	r2, r0, #5
900198f2:	7cd8      	ldrb	r0, [r3, #19]
900198f4:	f3c0 1042 	ubfx	r0, r0, #5, #3
900198f8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
900198fc:	bd10      	pop	{r4, pc}
900198fe:	4910      	ldr	r1, [pc, #64]	; (90019940 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90019900:	8809      	ldrh	r1, [r1, #0]
90019902:	4411      	add	r1, r2
90019904:	428b      	cmp	r3, r1
90019906:	da09      	bge.n	9001991c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
90019908:	1a9b      	subs	r3, r3, r2
9001990a:	4a0e      	ldr	r2, [pc, #56]	; (90019944 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001990c:	210e      	movs	r1, #14
9001990e:	6812      	ldr	r2, [r2, #0]
90019910:	fb01 2303 	mla	r3, r1, r3, r2
90019914:	7b18      	ldrb	r0, [r3, #12]
90019916:	f000 001f 	and.w	r0, r0, #31
9001991a:	e7ef      	b.n	900198fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001991c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019920:	4293      	cmp	r3, r2
90019922:	d106      	bne.n	90019932 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90019924:	f7f7 fd78 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90019928:	6803      	ldr	r3, [r0, #0]
9001992a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001992e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019930:	4718      	bx	r3
90019932:	2000      	movs	r0, #0
90019934:	e7e2      	b.n	900198fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90019936:	bf00      	nop
90019938:	2403978c 	.word	0x2403978c
9001993c:	24039794 	.word	0x24039794
90019940:	24039790 	.word	0x24039790
90019944:	24039774 	.word	0x24039774

90019948 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90019948:	2010      	movs	r0, #16
9001994a:	4770      	bx	lr

9001994c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001994c:	4b02      	ldr	r3, [pc, #8]	; (90019958 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001994e:	8818      	ldrh	r0, [r3, #0]
90019950:	0040      	lsls	r0, r0, #1
90019952:	b280      	uxth	r0, r0
90019954:	4770      	bx	lr
90019956:	bf00      	nop
90019958:	240396fe 	.word	0x240396fe

9001995c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001995c:	2bff      	cmp	r3, #255	; 0xff
9001995e:	d050      	beq.n	90019a02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90019960:	2a0b      	cmp	r2, #11
90019962:	d04a      	beq.n	900199fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90019964:	d80e      	bhi.n	90019984 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90019966:	2a03      	cmp	r2, #3
90019968:	d03f      	beq.n	900199ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001996a:	d804      	bhi.n	90019976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001996c:	2a01      	cmp	r2, #1
9001996e:	d03e      	beq.n	900199ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90019970:	d93f      	bls.n	900199f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90019972:	6b80      	ldr	r0, [r0, #56]	; 0x38
90019974:	4770      	bx	lr
90019976:	2a09      	cmp	r2, #9
90019978:	d03f      	beq.n	900199fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001997a:	d83c      	bhi.n	900199f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001997c:	2a08      	cmp	r2, #8
9001997e:	d03a      	beq.n	900199f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90019980:	2000      	movs	r0, #0
90019982:	4770      	bx	lr
90019984:	2a2f      	cmp	r2, #47	; 0x2f
90019986:	d024      	beq.n	900199d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90019988:	d80d      	bhi.n	900199a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001998a:	2a2d      	cmp	r2, #45	; 0x2d
9001998c:	d014      	beq.n	900199b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001998e:	d826      	bhi.n	900199de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90019990:	2a2c      	cmp	r2, #44	; 0x2c
90019992:	d1f5      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019994:	684b      	ldr	r3, [r1, #4]
90019996:	781b      	ldrb	r3, [r3, #0]
90019998:	2b01      	cmp	r3, #1
9001999a:	d018      	beq.n	900199ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001999c:	d323      	bcc.n	900199e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001999e:	2b02      	cmp	r3, #2
900199a0:	d1ee      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900199a2:	6880      	ldr	r0, [r0, #8]
900199a4:	4770      	bx	lr
900199a6:	2a31      	cmp	r2, #49	; 0x31
900199a8:	d004      	beq.n	900199b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
900199aa:	d328      	bcc.n	900199fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
900199ac:	2a32      	cmp	r2, #50	; 0x32
900199ae:	d026      	beq.n	900199fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
900199b0:	2a33      	cmp	r2, #51	; 0x33
900199b2:	d1e5      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900199b4:	6f00      	ldr	r0, [r0, #112]	; 0x70
900199b6:	4770      	bx	lr
900199b8:	684b      	ldr	r3, [r1, #4]
900199ba:	781b      	ldrb	r3, [r3, #0]
900199bc:	2b01      	cmp	r3, #1
900199be:	d004      	beq.n	900199ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
900199c0:	d30b      	bcc.n	900199da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900199c2:	2b02      	cmp	r3, #2
900199c4:	d1dc      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900199c6:	6900      	ldr	r0, [r0, #16]
900199c8:	4770      	bx	lr
900199ca:	6a00      	ldr	r0, [r0, #32]
900199cc:	4770      	bx	lr
900199ce:	6980      	ldr	r0, [r0, #24]
900199d0:	4770      	bx	lr
900199d2:	684b      	ldr	r3, [r1, #4]
900199d4:	781b      	ldrb	r3, [r3, #0]
900199d6:	2b00      	cmp	r3, #0
900199d8:	d1d2      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900199da:	6b00      	ldr	r0, [r0, #48]	; 0x30
900199dc:	4770      	bx	lr
900199de:	684b      	ldr	r3, [r1, #4]
900199e0:	781b      	ldrb	r3, [r3, #0]
900199e2:	2b00      	cmp	r3, #0
900199e4:	d1cc      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900199e6:	6a80      	ldr	r0, [r0, #40]	; 0x28
900199e8:	4770      	bx	lr
900199ea:	6c80      	ldr	r0, [r0, #72]	; 0x48
900199ec:	4770      	bx	lr
900199ee:	6d00      	ldr	r0, [r0, #80]	; 0x50
900199f0:	4770      	bx	lr
900199f2:	6c00      	ldr	r0, [r0, #64]	; 0x40
900199f4:	4770      	bx	lr
900199f6:	6d80      	ldr	r0, [r0, #88]	; 0x58
900199f8:	4770      	bx	lr
900199fa:	6e00      	ldr	r0, [r0, #96]	; 0x60
900199fc:	4770      	bx	lr
900199fe:	6e80      	ldr	r0, [r0, #104]	; 0x68
90019a00:	4770      	bx	lr
90019a02:	2a0b      	cmp	r2, #11
90019a04:	d049      	beq.n	90019a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90019a06:	d80e      	bhi.n	90019a26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
90019a08:	2a03      	cmp	r2, #3
90019a0a:	d040      	beq.n	90019a8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
90019a0c:	d804      	bhi.n	90019a18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
90019a0e:	2a01      	cmp	r2, #1
90019a10:	d03f      	beq.n	90019a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
90019a12:	d940      	bls.n	90019a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
90019a14:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90019a16:	4770      	bx	lr
90019a18:	2a09      	cmp	r2, #9
90019a1a:	d03e      	beq.n	90019a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90019a1c:	d801      	bhi.n	90019a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
90019a1e:	2a08      	cmp	r2, #8
90019a20:	d1ae      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a22:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90019a24:	4770      	bx	lr
90019a26:	2a2f      	cmp	r2, #47	; 0x2f
90019a28:	d024      	beq.n	90019a74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
90019a2a:	d80d      	bhi.n	90019a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
90019a2c:	2a2d      	cmp	r2, #45	; 0x2d
90019a2e:	d014      	beq.n	90019a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90019a30:	d826      	bhi.n	90019a80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90019a32:	2a2c      	cmp	r2, #44	; 0x2c
90019a34:	d1a4      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a36:	684b      	ldr	r3, [r1, #4]
90019a38:	781b      	ldrb	r3, [r3, #0]
90019a3a:	2b01      	cmp	r3, #1
90019a3c:	d018      	beq.n	90019a70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
90019a3e:	d324      	bcc.n	90019a8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90019a40:	2b02      	cmp	r3, #2
90019a42:	d19d      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a44:	68c0      	ldr	r0, [r0, #12]
90019a46:	4770      	bx	lr
90019a48:	2a31      	cmp	r2, #49	; 0x31
90019a4a:	d004      	beq.n	90019a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
90019a4c:	d327      	bcc.n	90019a9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90019a4e:	2a32      	cmp	r2, #50	; 0x32
90019a50:	d025      	beq.n	90019a9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90019a52:	2a33      	cmp	r2, #51	; 0x33
90019a54:	d194      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a56:	6f40      	ldr	r0, [r0, #116]	; 0x74
90019a58:	4770      	bx	lr
90019a5a:	684b      	ldr	r3, [r1, #4]
90019a5c:	781b      	ldrb	r3, [r3, #0]
90019a5e:	2b01      	cmp	r3, #1
90019a60:	d004      	beq.n	90019a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90019a62:	d30b      	bcc.n	90019a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90019a64:	2b02      	cmp	r3, #2
90019a66:	d18b      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a68:	6940      	ldr	r0, [r0, #20]
90019a6a:	4770      	bx	lr
90019a6c:	6a40      	ldr	r0, [r0, #36]	; 0x24
90019a6e:	4770      	bx	lr
90019a70:	69c0      	ldr	r0, [r0, #28]
90019a72:	4770      	bx	lr
90019a74:	684b      	ldr	r3, [r1, #4]
90019a76:	781b      	ldrb	r3, [r3, #0]
90019a78:	2b00      	cmp	r3, #0
90019a7a:	d181      	bne.n	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a7c:	6b40      	ldr	r0, [r0, #52]	; 0x34
90019a7e:	4770      	bx	lr
90019a80:	684b      	ldr	r3, [r1, #4]
90019a82:	781b      	ldrb	r3, [r3, #0]
90019a84:	2b00      	cmp	r3, #0
90019a86:	f47f af7b 	bne.w	90019980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019a8a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90019a8c:	4770      	bx	lr
90019a8e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90019a90:	4770      	bx	lr
90019a92:	6d40      	ldr	r0, [r0, #84]	; 0x54
90019a94:	4770      	bx	lr
90019a96:	6c40      	ldr	r0, [r0, #68]	; 0x44
90019a98:	4770      	bx	lr
90019a9a:	6e40      	ldr	r0, [r0, #100]	; 0x64
90019a9c:	4770      	bx	lr
90019a9e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
90019aa0:	4770      	bx	lr

90019aa2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019aa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019aa6:	b087      	sub	sp, #28
90019aa8:	9815      	ldr	r0, [sp, #84]	; 0x54
90019aaa:	9205      	str	r2, [sp, #20]
90019aac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019ab0:	9101      	str	r1, [sp, #4]
90019ab2:	9202      	str	r2, [sp, #8]
90019ab4:	6841      	ldr	r1, [r0, #4]
90019ab6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
90019aba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90019abe:	fb01 2404 	mla	r4, r1, r4, r2
90019ac2:	6802      	ldr	r2, [r0, #0]
90019ac4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019ac8:	f8de 2000 	ldr.w	r2, [lr]
90019acc:	9203      	str	r2, [sp, #12]
90019ace:	f8de 2004 	ldr.w	r2, [lr, #4]
90019ad2:	3204      	adds	r2, #4
90019ad4:	9204      	str	r2, [sp, #16]
90019ad6:	9a02      	ldr	r2, [sp, #8]
90019ad8:	43d6      	mvns	r6, r2
90019ada:	b2f6      	uxtb	r6, r6
90019adc:	9a01      	ldr	r2, [sp, #4]
90019ade:	2a00      	cmp	r2, #0
90019ae0:	dc03      	bgt.n	90019aea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90019ae2:	9a05      	ldr	r2, [sp, #20]
90019ae4:	2a00      	cmp	r2, #0
90019ae6:	f340 8129 	ble.w	90019d3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90019aea:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019aec:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019af0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019af4:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019af6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019afa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019afe:	2b00      	cmp	r3, #0
90019b00:	dd0e      	ble.n	90019b20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019b02:	1408      	asrs	r0, r1, #16
90019b04:	d405      	bmi.n	90019b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019b06:	4560      	cmp	r0, ip
90019b08:	da03      	bge.n	90019b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019b0a:	1410      	asrs	r0, r2, #16
90019b0c:	d401      	bmi.n	90019b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019b0e:	42b8      	cmp	r0, r7
90019b10:	db07      	blt.n	90019b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90019b12:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019b14:	3b01      	subs	r3, #1
90019b16:	3402      	adds	r4, #2
90019b18:	4401      	add	r1, r0
90019b1a:	9814      	ldr	r0, [sp, #80]	; 0x50
90019b1c:	4402      	add	r2, r0
90019b1e:	e7ee      	b.n	90019afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90019b20:	d071      	beq.n	90019c06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90019b22:	1e58      	subs	r0, r3, #1
90019b24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90019b26:	fb05 1500 	mla	r5, r5, r0, r1
90019b2a:	142d      	asrs	r5, r5, #16
90019b2c:	d45f      	bmi.n	90019bee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019b2e:	4565      	cmp	r5, ip
90019b30:	da5d      	bge.n	90019bee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019b32:	9d14      	ldr	r5, [sp, #80]	; 0x50
90019b34:	fb05 2000 	mla	r0, r5, r0, r2
90019b38:	1400      	asrs	r0, r0, #16
90019b3a:	d458      	bmi.n	90019bee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019b3c:	42b8      	cmp	r0, r7
90019b3e:	da56      	bge.n	90019bee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90019b40:	4699      	mov	r9, r3
90019b42:	46a2      	mov	sl, r4
90019b44:	f8bd b008 	ldrh.w	fp, [sp, #8]
90019b48:	f1b9 0f00 	cmp.w	r9, #0
90019b4c:	dd57      	ble.n	90019bfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
90019b4e:	ea4f 4c22 	mov.w	ip, r2, asr #16
90019b52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019b56:	9803      	ldr	r0, [sp, #12]
90019b58:	140d      	asrs	r5, r1, #16
90019b5a:	f109 39ff 	add.w	r9, r9, #4294967295
90019b5e:	fb07 000c 	mla	r0, r7, ip, r0
90019b62:	5d40      	ldrb	r0, [r0, r5]
90019b64:	9d04      	ldr	r5, [sp, #16]
90019b66:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019b6a:	f8ba 5000 	ldrh.w	r5, [sl]
90019b6e:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019b72:	122f      	asrs	r7, r5, #8
90019b74:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019b78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019b7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019b80:	00ed      	lsls	r5, r5, #3
90019b82:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90019b86:	fb17 f706 	smulbb	r7, r7, r6
90019b8a:	b2ed      	uxtb	r5, r5
90019b8c:	fb18 f806 	smulbb	r8, r8, r6
90019b90:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019b94:	10c7      	asrs	r7, r0, #3
90019b96:	fb15 f506 	smulbb	r5, r5, r6
90019b9a:	00c0      	lsls	r0, r0, #3
90019b9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019ba0:	fa1f fc8c 	uxth.w	ip, ip
90019ba4:	b2c0      	uxtb	r0, r0
90019ba6:	fb07 870b 	mla	r7, r7, fp, r8
90019baa:	fb00 500b 	mla	r0, r0, fp, r5
90019bae:	f10c 0501 	add.w	r5, ip, #1
90019bb2:	b2bf      	uxth	r7, r7
90019bb4:	b280      	uxth	r0, r0
90019bb6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019bba:	f107 0801 	add.w	r8, r7, #1
90019bbe:	1c45      	adds	r5, r0, #1
90019bc0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019bc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019bc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019bcc:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019bce:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019bd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019bd6:	4401      	add	r1, r0
90019bd8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90019bdc:	9814      	ldr	r0, [sp, #80]	; 0x50
90019bde:	ea45 0c0c 	orr.w	ip, r5, ip
90019be2:	4402      	add	r2, r0
90019be4:	ea4c 0c08 	orr.w	ip, ip, r8
90019be8:	f82a cb02 	strh.w	ip, [sl], #2
90019bec:	e7ac      	b.n	90019b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019bee:	f04f 0800 	mov.w	r8, #0
90019bf2:	f8bd a008 	ldrh.w	sl, [sp, #8]
90019bf6:	eb03 0008 	add.w	r0, r3, r8
90019bfa:	2800      	cmp	r0, #0
90019bfc:	dc41      	bgt.n	90019c82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90019bfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019c02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019c06:	9b01      	ldr	r3, [sp, #4]
90019c08:	2b00      	cmp	r3, #0
90019c0a:	f340 8097 	ble.w	90019d3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90019c0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019c12:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c14:	ee30 0a04 	vadd.f32	s0, s0, s8
90019c18:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019c1c:	eef0 6a62 	vmov.f32	s13, s5
90019c20:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019c24:	ee31 1a05 	vadd.f32	s2, s2, s10
90019c28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019c2c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90019c30:	eef0 6a43 	vmov.f32	s13, s6
90019c34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019c38:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90019c3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019c40:	ee61 7a27 	vmul.f32	s15, s2, s15
90019c44:	ee77 2a62 	vsub.f32	s5, s14, s5
90019c48:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019c4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019c50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019c54:	ee12 2a90 	vmov	r2, s5
90019c58:	eef0 2a47 	vmov.f32	s5, s14
90019c5c:	fb92 f3f3 	sdiv	r3, r2, r3
90019c60:	ee13 2a10 	vmov	r2, s6
90019c64:	9313      	str	r3, [sp, #76]	; 0x4c
90019c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c68:	eeb0 3a67 	vmov.f32	s6, s15
90019c6c:	fb92 f3f3 	sdiv	r3, r2, r3
90019c70:	9314      	str	r3, [sp, #80]	; 0x50
90019c72:	9b01      	ldr	r3, [sp, #4]
90019c74:	9a05      	ldr	r2, [sp, #20]
90019c76:	3b01      	subs	r3, #1
90019c78:	9301      	str	r3, [sp, #4]
90019c7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019c7c:	bf08      	it	eq
90019c7e:	4613      	moveq	r3, r2
90019c80:	e72c      	b.n	90019adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90019c82:	140f      	asrs	r7, r1, #16
90019c84:	d453      	bmi.n	90019d2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019c86:	f8de 5008 	ldr.w	r5, [lr, #8]
90019c8a:	42bd      	cmp	r5, r7
90019c8c:	dd4f      	ble.n	90019d2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019c8e:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019c92:	d44c      	bmi.n	90019d2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019c94:	f8de 000c 	ldr.w	r0, [lr, #12]
90019c98:	4560      	cmp	r0, ip
90019c9a:	dd48      	ble.n	90019d2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90019c9c:	9803      	ldr	r0, [sp, #12]
90019c9e:	b22d      	sxth	r5, r5
90019ca0:	fb0c 0505 	mla	r5, ip, r5, r0
90019ca4:	5de8      	ldrb	r0, [r5, r7]
90019ca6:	9d04      	ldr	r5, [sp, #16]
90019ca8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019cac:	f06f 0501 	mvn.w	r5, #1
90019cb0:	fb05 fb08 	mul.w	fp, r5, r8
90019cb4:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019cb8:	f834 500b 	ldrh.w	r5, [r4, fp]
90019cbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019cc0:	122f      	asrs	r7, r5, #8
90019cc2:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019cc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019cca:	00ed      	lsls	r5, r5, #3
90019ccc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019cd0:	fb17 f706 	smulbb	r7, r7, r6
90019cd4:	b2ed      	uxtb	r5, r5
90019cd6:	fb19 f906 	smulbb	r9, r9, r6
90019cda:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019cde:	10c7      	asrs	r7, r0, #3
90019ce0:	fb15 f506 	smulbb	r5, r5, r6
90019ce4:	00c0      	lsls	r0, r0, #3
90019ce6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019cea:	fa1f fc8c 	uxth.w	ip, ip
90019cee:	b2c0      	uxtb	r0, r0
90019cf0:	fb07 970a 	mla	r7, r7, sl, r9
90019cf4:	fb00 500a 	mla	r0, r0, sl, r5
90019cf8:	f10c 0501 	add.w	r5, ip, #1
90019cfc:	b2bf      	uxth	r7, r7
90019cfe:	b280      	uxth	r0, r0
90019d00:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019d04:	f107 0901 	add.w	r9, r7, #1
90019d08:	1c45      	adds	r5, r0, #1
90019d0a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019d0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019d12:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019d16:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019d1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019d1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90019d22:	ea45 0c0c 	orr.w	ip, r5, ip
90019d26:	ea4c 0c09 	orr.w	ip, ip, r9
90019d2a:	f824 c00b 	strh.w	ip, [r4, fp]
90019d2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019d30:	f108 38ff 	add.w	r8, r8, #4294967295
90019d34:	4401      	add	r1, r0
90019d36:	9814      	ldr	r0, [sp, #80]	; 0x50
90019d38:	4402      	add	r2, r0
90019d3a:	e75c      	b.n	90019bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90019d3c:	b007      	add	sp, #28
90019d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019d42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019d46:	b085      	sub	sp, #20
90019d48:	4693      	mov	fp, r2
90019d4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019d4e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019d50:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019d52:	6870      	ldr	r0, [r6, #4]
90019d54:	9100      	str	r1, [sp, #0]
90019d56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019d5a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019d5e:	fb00 2404 	mla	r4, r0, r4, r2
90019d62:	6832      	ldr	r2, [r6, #0]
90019d64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019d68:	682a      	ldr	r2, [r5, #0]
90019d6a:	9201      	str	r2, [sp, #4]
90019d6c:	686a      	ldr	r2, [r5, #4]
90019d6e:	3204      	adds	r2, #4
90019d70:	9202      	str	r2, [sp, #8]
90019d72:	9a00      	ldr	r2, [sp, #0]
90019d74:	2a00      	cmp	r2, #0
90019d76:	dc03      	bgt.n	90019d80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019d78:	f1bb 0f00 	cmp.w	fp, #0
90019d7c:	f340 80a0 	ble.w	90019ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90019d80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019d82:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019d86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019d8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019d8c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019d90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019d94:	2b00      	cmp	r3, #0
90019d96:	dd0c      	ble.n	90019db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90019d98:	1406      	asrs	r6, r0, #16
90019d9a:	d405      	bmi.n	90019da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019d9c:	454e      	cmp	r6, r9
90019d9e:	da03      	bge.n	90019da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019da0:	1416      	asrs	r6, r2, #16
90019da2:	d401      	bmi.n	90019da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019da4:	4546      	cmp	r6, r8
90019da6:	db05      	blt.n	90019db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019da8:	4470      	add	r0, lr
90019daa:	4462      	add	r2, ip
90019dac:	3b01      	subs	r3, #1
90019dae:	3402      	adds	r4, #2
90019db0:	e7f0      	b.n	90019d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019db2:	d00f      	beq.n	90019dd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90019db4:	1e5e      	subs	r6, r3, #1
90019db6:	fb0e 0706 	mla	r7, lr, r6, r0
90019dba:	143f      	asrs	r7, r7, #16
90019dbc:	d541      	bpl.n	90019e42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90019dbe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019dc2:	4698      	mov	r8, r3
90019dc4:	9603      	str	r6, [sp, #12]
90019dc6:	f1b8 0f00 	cmp.w	r8, #0
90019dca:	dc59      	bgt.n	90019e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019dcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019dd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019dd4:	9b00      	ldr	r3, [sp, #0]
90019dd6:	2b00      	cmp	r3, #0
90019dd8:	dd72      	ble.n	90019ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90019dda:	ee30 0a04 	vadd.f32	s0, s0, s8
90019dde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019de0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019de4:	eeb0 6a62 	vmov.f32	s12, s5
90019de8:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019dec:	ee31 1a05 	vadd.f32	s2, s2, s10
90019df0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019df4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019df8:	eeb0 6a43 	vmov.f32	s12, s6
90019dfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019e00:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019e04:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019e08:	ee61 7a27 	vmul.f32	s15, s2, s15
90019e0c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019e10:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019e14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019e18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019e1c:	ee12 2a90 	vmov	r2, s5
90019e20:	eef0 2a47 	vmov.f32	s5, s14
90019e24:	fb92 fef3 	sdiv	lr, r2, r3
90019e28:	ee13 2a10 	vmov	r2, s6
90019e2c:	eeb0 3a67 	vmov.f32	s6, s15
90019e30:	fb92 fcf3 	sdiv	ip, r2, r3
90019e34:	9b00      	ldr	r3, [sp, #0]
90019e36:	3b01      	subs	r3, #1
90019e38:	9300      	str	r3, [sp, #0]
90019e3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019e3c:	bf08      	it	eq
90019e3e:	465b      	moveq	r3, fp
90019e40:	e797      	b.n	90019d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019e42:	454f      	cmp	r7, r9
90019e44:	dabb      	bge.n	90019dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019e46:	fb0c 2606 	mla	r6, ip, r6, r2
90019e4a:	1436      	asrs	r6, r6, #16
90019e4c:	d4b7      	bmi.n	90019dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019e4e:	4546      	cmp	r6, r8
90019e50:	dab5      	bge.n	90019dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019e52:	461e      	mov	r6, r3
90019e54:	46a0      	mov	r8, r4
90019e56:	2e00      	cmp	r6, #0
90019e58:	ddb8      	ble.n	90019dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90019e5a:	1417      	asrs	r7, r2, #16
90019e5c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019e60:	9901      	ldr	r1, [sp, #4]
90019e62:	ea4f 4920 	mov.w	r9, r0, asr #16
90019e66:	4462      	add	r2, ip
90019e68:	4470      	add	r0, lr
90019e6a:	fb0a 1707 	mla	r7, sl, r7, r1
90019e6e:	9902      	ldr	r1, [sp, #8]
90019e70:	3e01      	subs	r6, #1
90019e72:	f817 7009 	ldrb.w	r7, [r7, r9]
90019e76:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019e7a:	f828 7b02 	strh.w	r7, [r8], #2
90019e7e:	e7ea      	b.n	90019e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90019e80:	ea5f 4920 	movs.w	r9, r0, asr #16
90019e84:	d417      	bmi.n	90019eb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019e86:	68ae      	ldr	r6, [r5, #8]
90019e88:	454e      	cmp	r6, r9
90019e8a:	dd14      	ble.n	90019eb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019e8c:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019e90:	d411      	bmi.n	90019eb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019e92:	68ef      	ldr	r7, [r5, #12]
90019e94:	4557      	cmp	r7, sl
90019e96:	dd0e      	ble.n	90019eb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90019e98:	9f01      	ldr	r7, [sp, #4]
90019e9a:	b236      	sxth	r6, r6
90019e9c:	f06f 0101 	mvn.w	r1, #1
90019ea0:	fb0a 7606 	mla	r6, sl, r6, r7
90019ea4:	9f02      	ldr	r7, [sp, #8]
90019ea6:	f816 6009 	ldrb.w	r6, [r6, r9]
90019eaa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90019eae:	fb01 f608 	mul.w	r6, r1, r8
90019eb2:	9903      	ldr	r1, [sp, #12]
90019eb4:	538f      	strh	r7, [r1, r6]
90019eb6:	4470      	add	r0, lr
90019eb8:	4462      	add	r2, ip
90019eba:	f108 38ff 	add.w	r8, r8, #4294967295
90019ebe:	e782      	b.n	90019dc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019ec0:	b005      	add	sp, #20
90019ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019ec6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019ec6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019eca:	b087      	sub	sp, #28
90019ecc:	9c15      	ldr	r4, [sp, #84]	; 0x54
90019ece:	9205      	str	r2, [sp, #20]
90019ed0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019ed4:	9102      	str	r1, [sp, #8]
90019ed6:	9203      	str	r2, [sp, #12]
90019ed8:	6861      	ldr	r1, [r4, #4]
90019eda:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90019ede:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
90019ee2:	fb01 2000 	mla	r0, r1, r0, r2
90019ee6:	6822      	ldr	r2, [r4, #0]
90019ee8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90019eec:	9200      	str	r2, [sp, #0]
90019eee:	f8dc 2000 	ldr.w	r2, [ip]
90019ef2:	9204      	str	r2, [sp, #16]
90019ef4:	f8dc 2004 	ldr.w	r2, [ip, #4]
90019ef8:	3204      	adds	r2, #4
90019efa:	9201      	str	r2, [sp, #4]
90019efc:	9a03      	ldr	r2, [sp, #12]
90019efe:	43d5      	mvns	r5, r2
90019f00:	b2ed      	uxtb	r5, r5
90019f02:	9a02      	ldr	r2, [sp, #8]
90019f04:	2a00      	cmp	r2, #0
90019f06:	dc03      	bgt.n	90019f10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90019f08:	9a05      	ldr	r2, [sp, #20]
90019f0a:	2a00      	cmp	r2, #0
90019f0c:	f340 812c 	ble.w	9001a168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90019f10:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019f12:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90019f16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019f1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019f1c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90019f20:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019f24:	2b00      	cmp	r3, #0
90019f26:	dd10      	ble.n	90019f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019f28:	140c      	asrs	r4, r1, #16
90019f2a:	d405      	bmi.n	90019f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019f2c:	4574      	cmp	r4, lr
90019f2e:	da03      	bge.n	90019f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019f30:	1414      	asrs	r4, r2, #16
90019f32:	d401      	bmi.n	90019f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90019f34:	42bc      	cmp	r4, r7
90019f36:	db09      	blt.n	90019f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90019f38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019f3a:	3b01      	subs	r3, #1
90019f3c:	9800      	ldr	r0, [sp, #0]
90019f3e:	4421      	add	r1, r4
90019f40:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019f42:	3002      	adds	r0, #2
90019f44:	4422      	add	r2, r4
90019f46:	9000      	str	r0, [sp, #0]
90019f48:	e7ec      	b.n	90019f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90019f4a:	d071      	beq.n	9001a030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90019f4c:	1e5c      	subs	r4, r3, #1
90019f4e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019f50:	fb06 1604 	mla	r6, r6, r4, r1
90019f54:	1436      	asrs	r6, r6, #16
90019f56:	d45d      	bmi.n	9001a014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019f58:	4576      	cmp	r6, lr
90019f5a:	da5b      	bge.n	9001a014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019f5c:	9e14      	ldr	r6, [sp, #80]	; 0x50
90019f5e:	fb06 2404 	mla	r4, r6, r4, r2
90019f62:	1424      	asrs	r4, r4, #16
90019f64:	d456      	bmi.n	9001a014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019f66:	42bc      	cmp	r4, r7
90019f68:	da54      	bge.n	9001a014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019f6a:	4698      	mov	r8, r3
90019f6c:	f8dd 9000 	ldr.w	r9, [sp]
90019f70:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90019f74:	f1b8 0f00 	cmp.w	r8, #0
90019f78:	dd54      	ble.n	9001a024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90019f7a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90019f7e:	1414      	asrs	r4, r2, #16
90019f80:	9804      	ldr	r0, [sp, #16]
90019f82:	140e      	asrs	r6, r1, #16
90019f84:	f108 38ff 	add.w	r8, r8, #4294967295
90019f88:	fb07 0404 	mla	r4, r7, r4, r0
90019f8c:	9801      	ldr	r0, [sp, #4]
90019f8e:	f814 e006 	ldrb.w	lr, [r4, r6]
90019f92:	f8b9 4000 	ldrh.w	r4, [r9]
90019f96:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019f9a:	1227      	asrs	r7, r4, #8
90019f9c:	eb00 0b0e 	add.w	fp, r0, lr
90019fa0:	f810 e00e 	ldrb.w	lr, [r0, lr]
90019fa4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019fa8:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019faa:	f89b 6002 	ldrb.w	r6, [fp, #2]
90019fae:	f89b b001 	ldrb.w	fp, [fp, #1]
90019fb2:	4401      	add	r1, r0
90019fb4:	fb16 f60a 	smulbb	r6, r6, sl
90019fb8:	9814      	ldr	r0, [sp, #80]	; 0x50
90019fba:	fb1b fb0a 	smulbb	fp, fp, sl
90019fbe:	fb07 6705 	mla	r7, r7, r5, r6
90019fc2:	10e6      	asrs	r6, r4, #3
90019fc4:	00e4      	lsls	r4, r4, #3
90019fc6:	4402      	add	r2, r0
90019fc8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019fcc:	b2bf      	uxth	r7, r7
90019fce:	b2e4      	uxtb	r4, r4
90019fd0:	fb06 b605 	mla	r6, r6, r5, fp
90019fd4:	fb14 f405 	smulbb	r4, r4, r5
90019fd8:	b2b6      	uxth	r6, r6
90019fda:	fb0e 4e0a 	mla	lr, lr, sl, r4
90019fde:	1c7c      	adds	r4, r7, #1
90019fe0:	f106 0b01 	add.w	fp, r6, #1
90019fe4:	fa1f fe8e 	uxth.w	lr, lr
90019fe8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90019fec:	f10e 0401 	add.w	r4, lr, #1
90019ff0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90019ff4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90019ff8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90019ffc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a000:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a004:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a008:	4327      	orrs	r7, r4
9001a00a:	ea47 070b 	orr.w	r7, r7, fp
9001a00e:	f829 7b02 	strh.w	r7, [r9], #2
9001a012:	e7af      	b.n	90019f74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001a014:	f04f 0e00 	mov.w	lr, #0
9001a018:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001a01c:	eb03 040e 	add.w	r4, r3, lr
9001a020:	2c00      	cmp	r4, #0
9001a022:	dc43      	bgt.n	9001a0ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001a024:	9a00      	ldr	r2, [sp, #0]
9001a026:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a02a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a02e:	9300      	str	r3, [sp, #0]
9001a030:	9b02      	ldr	r3, [sp, #8]
9001a032:	2b00      	cmp	r3, #0
9001a034:	f340 8098 	ble.w	9001a168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a038:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a03c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a03e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a042:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a046:	eef0 6a62 	vmov.f32	s13, s5
9001a04a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a04e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a052:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a056:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001a05a:	eef0 6a43 	vmov.f32	s13, s6
9001a05e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a062:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001a066:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a06a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a06e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a072:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a076:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a07a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a07e:	ee12 2a90 	vmov	r2, s5
9001a082:	eef0 2a47 	vmov.f32	s5, s14
9001a086:	fb92 f3f3 	sdiv	r3, r2, r3
9001a08a:	ee13 2a10 	vmov	r2, s6
9001a08e:	9313      	str	r3, [sp, #76]	; 0x4c
9001a090:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a092:	eeb0 3a67 	vmov.f32	s6, s15
9001a096:	fb92 f3f3 	sdiv	r3, r2, r3
9001a09a:	9314      	str	r3, [sp, #80]	; 0x50
9001a09c:	9b02      	ldr	r3, [sp, #8]
9001a09e:	9a05      	ldr	r2, [sp, #20]
9001a0a0:	3b01      	subs	r3, #1
9001a0a2:	9302      	str	r3, [sp, #8]
9001a0a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a0a6:	bf08      	it	eq
9001a0a8:	4613      	moveq	r3, r2
9001a0aa:	e72a      	b.n	90019f02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a0ac:	140f      	asrs	r7, r1, #16
9001a0ae:	d454      	bmi.n	9001a15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a0b0:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001a0b4:	42be      	cmp	r6, r7
9001a0b6:	dd50      	ble.n	9001a15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a0b8:	ea5f 4822 	movs.w	r8, r2, asr #16
9001a0bc:	d44d      	bmi.n	9001a15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a0be:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001a0c2:	4544      	cmp	r4, r8
9001a0c4:	dd49      	ble.n	9001a15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a0c6:	9c04      	ldr	r4, [sp, #16]
9001a0c8:	b236      	sxth	r6, r6
9001a0ca:	f06f 0001 	mvn.w	r0, #1
9001a0ce:	fb08 4606 	mla	r6, r8, r6, r4
9001a0d2:	9c01      	ldr	r4, [sp, #4]
9001a0d4:	fb00 fa0e 	mul.w	sl, r0, lr
9001a0d8:	9800      	ldr	r0, [sp, #0]
9001a0da:	f816 8007 	ldrb.w	r8, [r6, r7]
9001a0de:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001a0e2:	eb04 0b08 	add.w	fp, r4, r8
9001a0e6:	f830 400a 	ldrh.w	r4, [r0, sl]
9001a0ea:	9801      	ldr	r0, [sp, #4]
9001a0ec:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a0f0:	1227      	asrs	r7, r4, #8
9001a0f2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a0f6:	fb16 f609 	smulbb	r6, r6, r9
9001a0fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a0fe:	f810 8008 	ldrb.w	r8, [r0, r8]
9001a102:	fb1b fb09 	smulbb	fp, fp, r9
9001a106:	fb07 6705 	mla	r7, r7, r5, r6
9001a10a:	10e6      	asrs	r6, r4, #3
9001a10c:	00e4      	lsls	r4, r4, #3
9001a10e:	9800      	ldr	r0, [sp, #0]
9001a110:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a114:	b2bf      	uxth	r7, r7
9001a116:	b2e4      	uxtb	r4, r4
9001a118:	fb06 b605 	mla	r6, r6, r5, fp
9001a11c:	fb14 f405 	smulbb	r4, r4, r5
9001a120:	b2b6      	uxth	r6, r6
9001a122:	fb08 4809 	mla	r8, r8, r9, r4
9001a126:	1c7c      	adds	r4, r7, #1
9001a128:	f106 0b01 	add.w	fp, r6, #1
9001a12c:	fa1f f888 	uxth.w	r8, r8
9001a130:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a134:	f108 0401 	add.w	r4, r8, #1
9001a138:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a13c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a140:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001a144:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a148:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a14c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a150:	4327      	orrs	r7, r4
9001a152:	ea47 070b 	orr.w	r7, r7, fp
9001a156:	f820 700a 	strh.w	r7, [r0, sl]
9001a15a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a15c:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a160:	4401      	add	r1, r0
9001a162:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a164:	4402      	add	r2, r0
9001a166:	e759      	b.n	9001a01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a168:	b007      	add	sp, #28
9001a16a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a174:	b085      	sub	sp, #20
9001a176:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a17a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a17c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001a17e:	9203      	str	r2, [sp, #12]
9001a180:	6870      	ldr	r0, [r6, #4]
9001a182:	686f      	ldr	r7, [r5, #4]
9001a184:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001a188:	3704      	adds	r7, #4
9001a18a:	9101      	str	r1, [sp, #4]
9001a18c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a190:	fb00 2404 	mla	r4, r0, r4, r2
9001a194:	6832      	ldr	r2, [r6, #0]
9001a196:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a19a:	682a      	ldr	r2, [r5, #0]
9001a19c:	9202      	str	r2, [sp, #8]
9001a19e:	9a01      	ldr	r2, [sp, #4]
9001a1a0:	2a00      	cmp	r2, #0
9001a1a2:	dc03      	bgt.n	9001a1ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a1a4:	9a03      	ldr	r2, [sp, #12]
9001a1a6:	2a00      	cmp	r2, #0
9001a1a8:	f340 80cc 	ble.w	9001a344 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a1ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a1ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a1b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a1b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a1b8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a1bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a1c0:	2b00      	cmp	r3, #0
9001a1c2:	dd0d      	ble.n	9001a1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a1c4:	1406      	asrs	r6, r0, #16
9001a1c6:	d405      	bmi.n	9001a1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a1c8:	454e      	cmp	r6, r9
9001a1ca:	da03      	bge.n	9001a1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a1cc:	1416      	asrs	r6, r2, #16
9001a1ce:	d401      	bmi.n	9001a1d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a1d0:	4546      	cmp	r6, r8
9001a1d2:	db06      	blt.n	9001a1e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a1d4:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001a1d6:	4460      	add	r0, ip
9001a1d8:	3b01      	subs	r3, #1
9001a1da:	3402      	adds	r4, #2
9001a1dc:	4432      	add	r2, r6
9001a1de:	e7ef      	b.n	9001a1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001a1e0:	d00f      	beq.n	9001a202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a1e2:	1e5e      	subs	r6, r3, #1
9001a1e4:	fb0c 0e06 	mla	lr, ip, r6, r0
9001a1e8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001a1ec:	d543      	bpl.n	9001a276 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001a1ee:	4698      	mov	r8, r3
9001a1f0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001a1f4:	f1b8 0f00 	cmp.w	r8, #0
9001a1f8:	dc71      	bgt.n	9001a2de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001a1fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a1fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a202:	9b01      	ldr	r3, [sp, #4]
9001a204:	2b00      	cmp	r3, #0
9001a206:	f340 809d 	ble.w	9001a344 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a20a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a20e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a210:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a214:	eeb0 6a62 	vmov.f32	s12, s5
9001a218:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a21c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a220:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a224:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a228:	eeb0 6a43 	vmov.f32	s12, s6
9001a22c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a230:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a234:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a238:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a23c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a240:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a244:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a248:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a24c:	ee12 2a90 	vmov	r2, s5
9001a250:	eef0 2a47 	vmov.f32	s5, s14
9001a254:	fb92 fcf3 	sdiv	ip, r2, r3
9001a258:	ee13 2a10 	vmov	r2, s6
9001a25c:	eeb0 3a67 	vmov.f32	s6, s15
9001a260:	fb92 f3f3 	sdiv	r3, r2, r3
9001a264:	9312      	str	r3, [sp, #72]	; 0x48
9001a266:	9b01      	ldr	r3, [sp, #4]
9001a268:	9a03      	ldr	r2, [sp, #12]
9001a26a:	3b01      	subs	r3, #1
9001a26c:	9301      	str	r3, [sp, #4]
9001a26e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a270:	bf08      	it	eq
9001a272:	4613      	moveq	r3, r2
9001a274:	e793      	b.n	9001a19e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001a276:	45ce      	cmp	lr, r9
9001a278:	dab9      	bge.n	9001a1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a27a:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a27c:	fb01 2606 	mla	r6, r1, r6, r2
9001a280:	1436      	asrs	r6, r6, #16
9001a282:	d4b4      	bmi.n	9001a1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a284:	4546      	cmp	r6, r8
9001a286:	dab2      	bge.n	9001a1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a288:	4698      	mov	r8, r3
9001a28a:	46a2      	mov	sl, r4
9001a28c:	f1b8 0f00 	cmp.w	r8, #0
9001a290:	ddb3      	ble.n	9001a1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a292:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a296:	1416      	asrs	r6, r2, #16
9001a298:	9902      	ldr	r1, [sp, #8]
9001a29a:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001a29e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a2a2:	4460      	add	r0, ip
9001a2a4:	fb09 1606 	mla	r6, r9, r6, r1
9001a2a8:	4928      	ldr	r1, [pc, #160]	; (9001a34c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001a2aa:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001a2ae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a2b2:	eb07 0b0e 	add.w	fp, r7, lr
9001a2b6:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001a2ba:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001a2be:	00f6      	lsls	r6, r6, #3
9001a2c0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001a2c4:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a2c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a2ca:	440a      	add	r2, r1
9001a2cc:	ea49 0606 	orr.w	r6, r9, r6
9001a2d0:	f817 900e 	ldrb.w	r9, [r7, lr]
9001a2d4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001a2d8:	f82a 6b02 	strh.w	r6, [sl], #2
9001a2dc:	e7d6      	b.n	9001a28c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a2de:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a2e2:	d429      	bmi.n	9001a338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a2e4:	68ae      	ldr	r6, [r5, #8]
9001a2e6:	454e      	cmp	r6, r9
9001a2e8:	dd26      	ble.n	9001a338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a2ea:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001a2ee:	d423      	bmi.n	9001a338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a2f0:	68e9      	ldr	r1, [r5, #12]
9001a2f2:	4559      	cmp	r1, fp
9001a2f4:	dd20      	ble.n	9001a338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a2f6:	fa0f fe86 	sxth.w	lr, r6
9001a2fa:	9902      	ldr	r1, [sp, #8]
9001a2fc:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001a300:	f06f 0101 	mvn.w	r1, #1
9001a304:	f81e e009 	ldrb.w	lr, [lr, r9]
9001a308:	fb01 f908 	mul.w	r9, r1, r8
9001a30c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001a310:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a314:	eb07 060e 	add.w	r6, r7, lr
9001a318:	f896 b002 	ldrb.w	fp, [r6, #2]
9001a31c:	7876      	ldrb	r6, [r6, #1]
9001a31e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001a322:	00f6      	lsls	r6, r6, #3
9001a324:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a328:	ea4b 0606 	orr.w	r6, fp, r6
9001a32c:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001a330:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001a334:	f82a 6009 	strh.w	r6, [sl, r9]
9001a338:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a33a:	4460      	add	r0, ip
9001a33c:	f108 38ff 	add.w	r8, r8, #4294967295
9001a340:	440a      	add	r2, r1
9001a342:	e757      	b.n	9001a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a344:	b005      	add	sp, #20
9001a346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a34a:	bf00      	nop
9001a34c:	fffff800 	.word	0xfffff800

9001a350 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a354:	b087      	sub	sp, #28
9001a356:	468b      	mov	fp, r1
9001a358:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a35c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a35e:	9204      	str	r2, [sp, #16]
9001a360:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a364:	6841      	ldr	r1, [r0, #4]
9001a366:	9205      	str	r2, [sp, #20]
9001a368:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a36c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a370:	fb01 2404 	mla	r4, r1, r4, r2
9001a374:	6802      	ldr	r2, [r0, #0]
9001a376:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a37a:	f8dc 2000 	ldr.w	r2, [ip]
9001a37e:	9201      	str	r2, [sp, #4]
9001a380:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a384:	3204      	adds	r2, #4
9001a386:	9202      	str	r2, [sp, #8]
9001a388:	f1bb 0f00 	cmp.w	fp, #0
9001a38c:	dc03      	bgt.n	9001a396 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001a38e:	9a04      	ldr	r2, [sp, #16]
9001a390:	2a00      	cmp	r2, #0
9001a392:	f340 8138 	ble.w	9001a606 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001a396:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a398:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a39c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a3a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a3a2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001a3a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a3aa:	2b00      	cmp	r3, #0
9001a3ac:	dd0e      	ble.n	9001a3cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a3ae:	1402      	asrs	r2, r0, #16
9001a3b0:	d405      	bmi.n	9001a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a3b2:	42ba      	cmp	r2, r7
9001a3b4:	da03      	bge.n	9001a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a3b6:	140a      	asrs	r2, r1, #16
9001a3b8:	d401      	bmi.n	9001a3be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a3ba:	42b2      	cmp	r2, r6
9001a3bc:	db07      	blt.n	9001a3ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a3be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a3c0:	3b01      	subs	r3, #1
9001a3c2:	3402      	adds	r4, #2
9001a3c4:	4410      	add	r0, r2
9001a3c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a3c8:	4411      	add	r1, r2
9001a3ca:	e7ee      	b.n	9001a3aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001a3cc:	d019      	beq.n	9001a402 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a3ce:	1e5a      	subs	r2, r3, #1
9001a3d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a3d2:	fb05 0502 	mla	r5, r5, r2, r0
9001a3d6:	142d      	asrs	r5, r5, #16
9001a3d8:	d409      	bmi.n	9001a3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a3da:	42bd      	cmp	r5, r7
9001a3dc:	da07      	bge.n	9001a3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a3de:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a3e0:	fb05 1202 	mla	r2, r5, r2, r1
9001a3e4:	1412      	asrs	r2, r2, #16
9001a3e6:	d402      	bmi.n	9001a3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a3e8:	42b2      	cmp	r2, r6
9001a3ea:	f2c0 80ac 	blt.w	9001a546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001a3ee:	f04f 0e00 	mov.w	lr, #0
9001a3f2:	eb03 020e 	add.w	r2, r3, lr
9001a3f6:	2a00      	cmp	r2, #0
9001a3f8:	dc3e      	bgt.n	9001a478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a3fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a3fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a402:	f1bb 0f00 	cmp.w	fp, #0
9001a406:	f340 80fe 	ble.w	9001a606 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001a40a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a40e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a410:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a414:	f1bb 0b01 	subs.w	fp, fp, #1
9001a418:	eeb0 6a62 	vmov.f32	s12, s5
9001a41c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a420:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a424:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a428:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a42c:	eeb0 6a43 	vmov.f32	s12, s6
9001a430:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a434:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a438:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a43c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a440:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a444:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a448:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a44c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a450:	ee12 2a90 	vmov	r2, s5
9001a454:	eef0 2a47 	vmov.f32	s5, s14
9001a458:	fb92 f3f3 	sdiv	r3, r2, r3
9001a45c:	ee13 2a10 	vmov	r2, s6
9001a460:	9313      	str	r3, [sp, #76]	; 0x4c
9001a462:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a464:	eeb0 3a67 	vmov.f32	s6, s15
9001a468:	fb92 f3f3 	sdiv	r3, r2, r3
9001a46c:	9a04      	ldr	r2, [sp, #16]
9001a46e:	9314      	str	r3, [sp, #80]	; 0x50
9001a470:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a472:	bf08      	it	eq
9001a474:	4613      	moveq	r3, r2
9001a476:	e787      	b.n	9001a388 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a478:	1406      	asrs	r6, r0, #16
9001a47a:	d45d      	bmi.n	9001a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a47c:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001a480:	42b5      	cmp	r5, r6
9001a482:	dd59      	ble.n	9001a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a484:	140f      	asrs	r7, r1, #16
9001a486:	d457      	bmi.n	9001a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a488:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001a48c:	42ba      	cmp	r2, r7
9001a48e:	dd53      	ble.n	9001a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a490:	9a01      	ldr	r2, [sp, #4]
9001a492:	b22d      	sxth	r5, r5
9001a494:	fb07 2505 	mla	r5, r7, r5, r2
9001a498:	5daa      	ldrb	r2, [r5, r6]
9001a49a:	9d02      	ldr	r5, [sp, #8]
9001a49c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001a4a0:	0e2e      	lsrs	r6, r5, #24
9001a4a2:	d049      	beq.n	9001a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001a4a4:	f06f 0201 	mvn.w	r2, #1
9001a4a8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a4ac:	fb02 f20e 	mul.w	r2, r2, lr
9001a4b0:	f834 8002 	ldrh.w	r8, [r4, r2]
9001a4b4:	9203      	str	r2, [sp, #12]
9001a4b6:	9a05      	ldr	r2, [sp, #20]
9001a4b8:	ea4f 2728 	mov.w	r7, r8, asr #8
9001a4bc:	4356      	muls	r6, r2
9001a4be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a4c2:	1c72      	adds	r2, r6, #1
9001a4c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001a4c8:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a4cc:	b2ed      	uxtb	r5, r5
9001a4ce:	1212      	asrs	r2, r2, #8
9001a4d0:	fa1f f982 	uxth.w	r9, r2
9001a4d4:	43d2      	mvns	r2, r2
9001a4d6:	fb16 f609 	smulbb	r6, r6, r9
9001a4da:	b2d2      	uxtb	r2, r2
9001a4dc:	fb15 f509 	smulbb	r5, r5, r9
9001a4e0:	fb07 6702 	mla	r7, r7, r2, r6
9001a4e4:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001a4e8:	fb1a fa09 	smulbb	sl, sl, r9
9001a4ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a4f0:	b2bf      	uxth	r7, r7
9001a4f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a4f6:	fa5f f888 	uxtb.w	r8, r8
9001a4fa:	fb06 a602 	mla	r6, r6, r2, sl
9001a4fe:	fb08 5502 	mla	r5, r8, r2, r5
9001a502:	1c7a      	adds	r2, r7, #1
9001a504:	b2b6      	uxth	r6, r6
9001a506:	b2ad      	uxth	r5, r5
9001a508:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a50c:	9a03      	ldr	r2, [sp, #12]
9001a50e:	f105 0a01 	add.w	sl, r5, #1
9001a512:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a516:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a51a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a51e:	ea4a 0707 	orr.w	r7, sl, r7
9001a522:	f106 0a01 	add.w	sl, r6, #1
9001a526:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a52a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a52e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a532:	ea47 070a 	orr.w	r7, r7, sl
9001a536:	52a7      	strh	r7, [r4, r2]
9001a538:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a53a:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a53e:	4410      	add	r0, r2
9001a540:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a542:	4411      	add	r1, r2
9001a544:	e755      	b.n	9001a3f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a546:	f04f 0800 	mov.w	r8, #0
9001a54a:	eba3 0208 	sub.w	r2, r3, r8
9001a54e:	2a00      	cmp	r2, #0
9001a550:	f77f af53 	ble.w	9001a3fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a554:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001a558:	140a      	asrs	r2, r1, #16
9001a55a:	9f01      	ldr	r7, [sp, #4]
9001a55c:	1405      	asrs	r5, r0, #16
9001a55e:	fb06 7202 	mla	r2, r6, r2, r7
9001a562:	5d52      	ldrb	r2, [r2, r5]
9001a564:	9d02      	ldr	r5, [sp, #8]
9001a566:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001a56a:	0e2e      	lsrs	r6, r5, #24
9001a56c:	d044      	beq.n	9001a5f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001a56e:	9a05      	ldr	r2, [sp, #20]
9001a570:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a574:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a578:	4356      	muls	r6, r2
9001a57a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a57e:	1c72      	adds	r2, r6, #1
9001a580:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a584:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001a588:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a58c:	b2ed      	uxtb	r5, r5
9001a58e:	1212      	asrs	r2, r2, #8
9001a590:	fa1f f982 	uxth.w	r9, r2
9001a594:	43d2      	mvns	r2, r2
9001a596:	fb16 f609 	smulbb	r6, r6, r9
9001a59a:	b2d2      	uxtb	r2, r2
9001a59c:	fb15 f509 	smulbb	r5, r5, r9
9001a5a0:	fb07 6702 	mla	r7, r7, r2, r6
9001a5a4:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a5a8:	fb1a fa09 	smulbb	sl, sl, r9
9001a5ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a5b0:	b2bf      	uxth	r7, r7
9001a5b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a5b6:	fa5f fe8e 	uxtb.w	lr, lr
9001a5ba:	fb06 a602 	mla	r6, r6, r2, sl
9001a5be:	fb0e 5502 	mla	r5, lr, r2, r5
9001a5c2:	1c7a      	adds	r2, r7, #1
9001a5c4:	b2b6      	uxth	r6, r6
9001a5c6:	b2ad      	uxth	r5, r5
9001a5c8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a5cc:	f105 0a01 	add.w	sl, r5, #1
9001a5d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a5d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a5d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a5dc:	ea4a 0707 	orr.w	r7, sl, r7
9001a5e0:	f106 0a01 	add.w	sl, r6, #1
9001a5e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a5e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a5ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a5f0:	ea47 070a 	orr.w	r7, r7, sl
9001a5f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001a5f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a5fa:	f108 0801 	add.w	r8, r8, #1
9001a5fe:	4410      	add	r0, r2
9001a600:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a602:	4411      	add	r1, r2
9001a604:	e7a1      	b.n	9001a54a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001a606:	b007      	add	sp, #28
9001a608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a60c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a610:	b085      	sub	sp, #20
9001a612:	468b      	mov	fp, r1
9001a614:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a618:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a61a:	9203      	str	r2, [sp, #12]
9001a61c:	6841      	ldr	r1, [r0, #4]
9001a61e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001a622:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a626:	fb01 2404 	mla	r4, r1, r4, r2
9001a62a:	6802      	ldr	r2, [r0, #0]
9001a62c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a630:	f8de 2000 	ldr.w	r2, [lr]
9001a634:	9200      	str	r2, [sp, #0]
9001a636:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a63a:	3204      	adds	r2, #4
9001a63c:	9201      	str	r2, [sp, #4]
9001a63e:	f1bb 0f00 	cmp.w	fp, #0
9001a642:	dc03      	bgt.n	9001a64c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001a644:	9a03      	ldr	r2, [sp, #12]
9001a646:	2a00      	cmp	r2, #0
9001a648:	f340 8153 	ble.w	9001a8f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a64c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a64e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a652:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a656:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a658:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001a65c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a660:	2b00      	cmp	r3, #0
9001a662:	dd0e      	ble.n	9001a682 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a664:	1408      	asrs	r0, r1, #16
9001a666:	d405      	bmi.n	9001a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a668:	42b8      	cmp	r0, r7
9001a66a:	da03      	bge.n	9001a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a66c:	1410      	asrs	r0, r2, #16
9001a66e:	d401      	bmi.n	9001a674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001a670:	42b0      	cmp	r0, r6
9001a672:	db07      	blt.n	9001a684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001a674:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a676:	3b01      	subs	r3, #1
9001a678:	3402      	adds	r4, #2
9001a67a:	4401      	add	r1, r0
9001a67c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a67e:	4402      	add	r2, r0
9001a680:	e7ee      	b.n	9001a660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001a682:	d017      	beq.n	9001a6b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a684:	1e58      	subs	r0, r3, #1
9001a686:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001a688:	fb05 1500 	mla	r5, r5, r0, r1
9001a68c:	142d      	asrs	r5, r5, #16
9001a68e:	d409      	bmi.n	9001a6a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a690:	42bd      	cmp	r5, r7
9001a692:	da07      	bge.n	9001a6a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a694:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001a696:	fb05 2000 	mla	r0, r5, r0, r2
9001a69a:	1400      	asrs	r0, r0, #16
9001a69c:	d402      	bmi.n	9001a6a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a69e:	42b0      	cmp	r0, r6
9001a6a0:	f2c0 80bc 	blt.w	9001a81c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001a6a4:	2600      	movs	r6, #0
9001a6a6:	1998      	adds	r0, r3, r6
9001a6a8:	2800      	cmp	r0, #0
9001a6aa:	dc3e      	bgt.n	9001a72a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001a6ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a6b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a6b4:	f1bb 0f00 	cmp.w	fp, #0
9001a6b8:	f340 811b 	ble.w	9001a8f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001a6bc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a6c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a6c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a6c6:	f1bb 0b01 	subs.w	fp, fp, #1
9001a6ca:	eeb0 6a62 	vmov.f32	s12, s5
9001a6ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a6d2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a6d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a6da:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a6de:	eeb0 6a43 	vmov.f32	s12, s6
9001a6e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a6e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a6ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a6ee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a6f2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a6f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a6fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a6fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a702:	ee12 2a90 	vmov	r2, s5
9001a706:	eef0 2a47 	vmov.f32	s5, s14
9001a70a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a70e:	ee13 2a10 	vmov	r2, s6
9001a712:	9311      	str	r3, [sp, #68]	; 0x44
9001a714:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a716:	eeb0 3a67 	vmov.f32	s6, s15
9001a71a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a71e:	9a03      	ldr	r2, [sp, #12]
9001a720:	9312      	str	r3, [sp, #72]	; 0x48
9001a722:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a724:	bf08      	it	eq
9001a726:	4613      	moveq	r3, r2
9001a728:	e789      	b.n	9001a63e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001a72a:	140f      	asrs	r7, r1, #16
9001a72c:	d426      	bmi.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a72e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a732:	42bd      	cmp	r5, r7
9001a734:	dd22      	ble.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a736:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a73a:	d41f      	bmi.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a73c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a740:	4560      	cmp	r0, ip
9001a742:	dd1b      	ble.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a744:	9800      	ldr	r0, [sp, #0]
9001a746:	b22d      	sxth	r5, r5
9001a748:	fb0c 0505 	mla	r5, ip, r5, r0
9001a74c:	5de8      	ldrb	r0, [r5, r7]
9001a74e:	9d01      	ldr	r5, [sp, #4]
9001a750:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001a754:	0e07      	lsrs	r7, r0, #24
9001a756:	2fff      	cmp	r7, #255	; 0xff
9001a758:	d116      	bne.n	9001a788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a75a:	f06f 0501 	mvn.w	r5, #1
9001a75e:	fb05 f706 	mul.w	r7, r5, r6
9001a762:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001a766:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a76a:	0945      	lsrs	r5, r0, #5
9001a76c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a770:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a774:	ea4c 0505 	orr.w	r5, ip, r5
9001a778:	4305      	orrs	r5, r0
9001a77a:	53e5      	strh	r5, [r4, r7]
9001a77c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a77e:	3e01      	subs	r6, #1
9001a780:	4401      	add	r1, r0
9001a782:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a784:	4402      	add	r2, r0
9001a786:	e78e      	b.n	9001a6a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001a788:	b2fd      	uxtb	r5, r7
9001a78a:	2f00      	cmp	r7, #0
9001a78c:	d0f6      	beq.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a78e:	f06f 0701 	mvn.w	r7, #1
9001a792:	fa1f f985 	uxth.w	r9, r5
9001a796:	43ed      	mvns	r5, r5
9001a798:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a79c:	4377      	muls	r7, r6
9001a79e:	fb1a fa09 	smulbb	sl, sl, r9
9001a7a2:	b2ed      	uxtb	r5, r5
9001a7a4:	f834 8007 	ldrh.w	r8, [r4, r7]
9001a7a8:	9702      	str	r7, [sp, #8]
9001a7aa:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a7ae:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001a7b2:	fb17 f709 	smulbb	r7, r7, r9
9001a7b6:	b2c0      	uxtb	r0, r0
9001a7b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a7bc:	fb10 f009 	smulbb	r0, r0, r9
9001a7c0:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a7c4:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001a7c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a7cc:	fa1f fc8c 	uxth.w	ip, ip
9001a7d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a7d4:	fa5f f888 	uxtb.w	r8, r8
9001a7d8:	fb07 a705 	mla	r7, r7, r5, sl
9001a7dc:	fb08 0005 	mla	r0, r8, r5, r0
9001a7e0:	f10c 0501 	add.w	r5, ip, #1
9001a7e4:	b2bf      	uxth	r7, r7
9001a7e6:	b280      	uxth	r0, r0
9001a7e8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a7ec:	f100 0a01 	add.w	sl, r0, #1
9001a7f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a7f4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a7f8:	9802      	ldr	r0, [sp, #8]
9001a7fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a7fe:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a802:	f107 0a01 	add.w	sl, r7, #1
9001a806:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a80a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a80e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a812:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a816:	f824 c000 	strh.w	ip, [r4, r0]
9001a81a:	e7af      	b.n	9001a77c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a81c:	f04f 0800 	mov.w	r8, #0
9001a820:	eba3 0008 	sub.w	r0, r3, r8
9001a824:	2800      	cmp	r0, #0
9001a826:	f77f af41 	ble.w	9001a6ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a82a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001a82e:	1410      	asrs	r0, r2, #16
9001a830:	9f00      	ldr	r7, [sp, #0]
9001a832:	140d      	asrs	r5, r1, #16
9001a834:	fb06 7000 	mla	r0, r6, r0, r7
9001a838:	5d40      	ldrb	r0, [r0, r5]
9001a83a:	9d01      	ldr	r5, [sp, #4]
9001a83c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a840:	0e2e      	lsrs	r6, r5, #24
9001a842:	2eff      	cmp	r6, #255	; 0xff
9001a844:	d112      	bne.n	9001a86c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001a846:	482c      	ldr	r0, [pc, #176]	; (9001a8f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001a848:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a84c:	0968      	lsrs	r0, r5, #5
9001a84e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a852:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a856:	4330      	orrs	r0, r6
9001a858:	4328      	orrs	r0, r5
9001a85a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001a85e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a860:	f108 0801 	add.w	r8, r8, #1
9001a864:	4401      	add	r1, r0
9001a866:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a868:	4402      	add	r2, r0
9001a86a:	e7d9      	b.n	9001a820 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a86c:	b2f0      	uxtb	r0, r6
9001a86e:	2e00      	cmp	r6, #0
9001a870:	d0f5      	beq.n	9001a85e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001a872:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001a876:	fa1f f980 	uxth.w	r9, r0
9001a87a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a87e:	43c0      	mvns	r0, r0
9001a880:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a884:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a888:	fb16 f609 	smulbb	r6, r6, r9
9001a88c:	b2c0      	uxtb	r0, r0
9001a88e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a892:	b2ed      	uxtb	r5, r5
9001a894:	fb1a fa09 	smulbb	sl, sl, r9
9001a898:	fb07 6700 	mla	r7, r7, r0, r6
9001a89c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a8a0:	fb15 f509 	smulbb	r5, r5, r9
9001a8a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a8a8:	b2bf      	uxth	r7, r7
9001a8aa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a8ae:	fa5f fc8c 	uxtb.w	ip, ip
9001a8b2:	fb06 a600 	mla	r6, r6, r0, sl
9001a8b6:	fb0c 5500 	mla	r5, ip, r0, r5
9001a8ba:	1c78      	adds	r0, r7, #1
9001a8bc:	b2b6      	uxth	r6, r6
9001a8be:	b2ad      	uxth	r5, r5
9001a8c0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a8c4:	f105 0a01 	add.w	sl, r5, #1
9001a8c8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a8cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a8d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a8d4:	ea4a 0707 	orr.w	r7, sl, r7
9001a8d8:	f106 0a01 	add.w	sl, r6, #1
9001a8dc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a8e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a8e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a8e8:	ea47 070a 	orr.w	r7, r7, sl
9001a8ec:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001a8f0:	e7b5      	b.n	9001a85e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001a8f2:	b005      	add	sp, #20
9001a8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a8f8:	fffff800 	.word	0xfffff800

9001a8fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a900:	b087      	sub	sp, #28
9001a902:	468b      	mov	fp, r1
9001a904:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a908:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001a90a:	9204      	str	r2, [sp, #16]
9001a90c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a910:	6861      	ldr	r1, [r4, #4]
9001a912:	9205      	str	r2, [sp, #20]
9001a914:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001a918:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001a91c:	fb01 2000 	mla	r0, r1, r0, r2
9001a920:	6822      	ldr	r2, [r4, #0]
9001a922:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001a926:	f8de 2000 	ldr.w	r2, [lr]
9001a92a:	9201      	str	r2, [sp, #4]
9001a92c:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a930:	9202      	str	r2, [sp, #8]
9001a932:	f1bb 0f00 	cmp.w	fp, #0
9001a936:	dc03      	bgt.n	9001a940 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001a938:	9a04      	ldr	r2, [sp, #16]
9001a93a:	2a00      	cmp	r2, #0
9001a93c:	f340 8142 	ble.w	9001abc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001a940:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a942:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a946:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a94a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a94c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001a950:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a954:	2b00      	cmp	r3, #0
9001a956:	dd0e      	ble.n	9001a976 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001a958:	140c      	asrs	r4, r1, #16
9001a95a:	d405      	bmi.n	9001a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a95c:	42bc      	cmp	r4, r7
9001a95e:	da03      	bge.n	9001a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a960:	1414      	asrs	r4, r2, #16
9001a962:	d401      	bmi.n	9001a968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001a964:	42b4      	cmp	r4, r6
9001a966:	db07      	blt.n	9001a978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a968:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a96a:	3b01      	subs	r3, #1
9001a96c:	3002      	adds	r0, #2
9001a96e:	4421      	add	r1, r4
9001a970:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a972:	4422      	add	r2, r4
9001a974:	e7ee      	b.n	9001a954 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001a976:	d019      	beq.n	9001a9ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a978:	1e5c      	subs	r4, r3, #1
9001a97a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a97c:	fb05 1504 	mla	r5, r5, r4, r1
9001a980:	142d      	asrs	r5, r5, #16
9001a982:	d409      	bmi.n	9001a998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a984:	42bd      	cmp	r5, r7
9001a986:	da07      	bge.n	9001a998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a988:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a98a:	fb05 2404 	mla	r4, r5, r4, r2
9001a98e:	1424      	asrs	r4, r4, #16
9001a990:	d402      	bmi.n	9001a998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001a992:	42b4      	cmp	r4, r6
9001a994:	f2c0 80b1 	blt.w	9001aafa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001a998:	f04f 0800 	mov.w	r8, #0
9001a99c:	eb03 0408 	add.w	r4, r3, r8
9001a9a0:	2c00      	cmp	r4, #0
9001a9a2:	dc3e      	bgt.n	9001aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001a9a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a9a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001a9ac:	f1bb 0f00 	cmp.w	fp, #0
9001a9b0:	f340 8108 	ble.w	9001abc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001a9b4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a9b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a9ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a9be:	f1bb 0b01 	subs.w	fp, fp, #1
9001a9c2:	eeb0 6a62 	vmov.f32	s12, s5
9001a9c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a9ca:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a9ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a9d6:	eeb0 6a43 	vmov.f32	s12, s6
9001a9da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a9e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a9e6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a9ea:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a9ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a9f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a9f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a9fa:	ee12 2a90 	vmov	r2, s5
9001a9fe:	eef0 2a47 	vmov.f32	s5, s14
9001aa02:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa06:	ee13 2a10 	vmov	r2, s6
9001aa0a:	9313      	str	r3, [sp, #76]	; 0x4c
9001aa0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aa0e:	eeb0 3a67 	vmov.f32	s6, s15
9001aa12:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa16:	9a04      	ldr	r2, [sp, #16]
9001aa18:	9314      	str	r3, [sp, #80]	; 0x50
9001aa1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aa1c:	bf08      	it	eq
9001aa1e:	4613      	moveq	r3, r2
9001aa20:	e787      	b.n	9001a932 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001aa22:	140e      	asrs	r6, r1, #16
9001aa24:	d462      	bmi.n	9001aaec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001aa26:	f8de 5008 	ldr.w	r5, [lr, #8]
9001aa2a:	42b5      	cmp	r5, r6
9001aa2c:	dd5e      	ble.n	9001aaec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001aa2e:	1417      	asrs	r7, r2, #16
9001aa30:	d45c      	bmi.n	9001aaec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001aa32:	f8de 400c 	ldr.w	r4, [lr, #12]
9001aa36:	42bc      	cmp	r4, r7
9001aa38:	dd58      	ble.n	9001aaec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001aa3a:	b22d      	sxth	r5, r5
9001aa3c:	9c02      	ldr	r4, [sp, #8]
9001aa3e:	fb07 6505 	mla	r5, r7, r5, r6
9001aa42:	5d66      	ldrb	r6, [r4, r5]
9001aa44:	2e00      	cmp	r6, #0
9001aa46:	d051      	beq.n	9001aaec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001aa48:	9c01      	ldr	r4, [sp, #4]
9001aa4a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001aa4e:	f06f 0401 	mvn.w	r4, #1
9001aa52:	fb04 f408 	mul.w	r4, r4, r8
9001aa56:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001aa5a:	5b05      	ldrh	r5, [r0, r4]
9001aa5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001aa60:	9403      	str	r4, [sp, #12]
9001aa62:	9c05      	ldr	r4, [sp, #20]
9001aa64:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001aa68:	4366      	muls	r6, r4
9001aa6a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001aa6e:	1c74      	adds	r4, r6, #1
9001aa70:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001aa74:	122e      	asrs	r6, r5, #8
9001aa76:	1224      	asrs	r4, r4, #8
9001aa78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001aa7c:	00ed      	lsls	r5, r5, #3
9001aa7e:	b2a7      	uxth	r7, r4
9001aa80:	43e4      	mvns	r4, r4
9001aa82:	b2ed      	uxtb	r5, r5
9001aa84:	b2e4      	uxtb	r4, r4
9001aa86:	fb16 f604 	smulbb	r6, r6, r4
9001aa8a:	fb15 f504 	smulbb	r5, r5, r4
9001aa8e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001aa92:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001aa96:	fb1a fa04 	smulbb	sl, sl, r4
9001aa9a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001aa9e:	fa1f fc8c 	uxth.w	ip, ip
9001aaa2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001aaa6:	fa5f f989 	uxtb.w	r9, r9
9001aaaa:	fb06 a607 	mla	r6, r6, r7, sl
9001aaae:	f10c 0401 	add.w	r4, ip, #1
9001aab2:	fb09 5507 	mla	r5, r9, r7, r5
9001aab6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001aaba:	9c03      	ldr	r4, [sp, #12]
9001aabc:	b2ad      	uxth	r5, r5
9001aabe:	b2b6      	uxth	r6, r6
9001aac0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001aac4:	f105 0a01 	add.w	sl, r5, #1
9001aac8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001aacc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001aad0:	ea4a 0c0c 	orr.w	ip, sl, ip
9001aad4:	f106 0a01 	add.w	sl, r6, #1
9001aad8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001aadc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aae0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aae4:	ea4c 0c0a 	orr.w	ip, ip, sl
9001aae8:	f820 c004 	strh.w	ip, [r0, r4]
9001aaec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001aaee:	f108 38ff 	add.w	r8, r8, #4294967295
9001aaf2:	4421      	add	r1, r4
9001aaf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001aaf6:	4422      	add	r2, r4
9001aaf8:	e750      	b.n	9001a99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001aafa:	f04f 0900 	mov.w	r9, #0
9001aafe:	eba3 0409 	sub.w	r4, r3, r9
9001ab02:	2c00      	cmp	r4, #0
9001ab04:	f77f af4e 	ble.w	9001a9a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ab08:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ab0c:	140d      	asrs	r5, r1, #16
9001ab0e:	1414      	asrs	r4, r2, #16
9001ab10:	fb06 5404 	mla	r4, r6, r4, r5
9001ab14:	9d02      	ldr	r5, [sp, #8]
9001ab16:	5d2e      	ldrb	r6, [r5, r4]
9001ab18:	2e00      	cmp	r6, #0
9001ab1a:	d04c      	beq.n	9001abb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001ab1c:	9d01      	ldr	r5, [sp, #4]
9001ab1e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001ab22:	9c05      	ldr	r4, [sp, #20]
9001ab24:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001ab28:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001ab2c:	4366      	muls	r6, r4
9001ab2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ab32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ab36:	1c74      	adds	r4, r6, #1
9001ab38:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ab3c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001ab40:	122e      	asrs	r6, r5, #8
9001ab42:	1224      	asrs	r4, r4, #8
9001ab44:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ab48:	00ed      	lsls	r5, r5, #3
9001ab4a:	b2a7      	uxth	r7, r4
9001ab4c:	43e4      	mvns	r4, r4
9001ab4e:	b2ed      	uxtb	r5, r5
9001ab50:	b2e4      	uxtb	r4, r4
9001ab52:	fb16 f604 	smulbb	r6, r6, r4
9001ab56:	fb15 f504 	smulbb	r5, r5, r4
9001ab5a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ab5e:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ab62:	fb1a fa04 	smulbb	sl, sl, r4
9001ab66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ab6a:	fa1f fc8c 	uxth.w	ip, ip
9001ab6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ab72:	fa5f f888 	uxtb.w	r8, r8
9001ab76:	fb06 a607 	mla	r6, r6, r7, sl
9001ab7a:	f10c 0401 	add.w	r4, ip, #1
9001ab7e:	fb08 5507 	mla	r5, r8, r7, r5
9001ab82:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ab86:	b2ad      	uxth	r5, r5
9001ab88:	b2b6      	uxth	r6, r6
9001ab8a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ab8e:	f105 0a01 	add.w	sl, r5, #1
9001ab92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ab96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ab9a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ab9e:	f106 0a01 	add.w	sl, r6, #1
9001aba2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001aba6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001abaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001abae:	ea4c 0c0a 	orr.w	ip, ip, sl
9001abb2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001abb6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001abb8:	f109 0901 	add.w	r9, r9, #1
9001abbc:	4421      	add	r1, r4
9001abbe:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001abc0:	4422      	add	r2, r4
9001abc2:	e79c      	b.n	9001aafe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001abc4:	b007      	add	sp, #28
9001abc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001abca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001abca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001abce:	b085      	sub	sp, #20
9001abd0:	468b      	mov	fp, r1
9001abd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001abd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001abd8:	9203      	str	r2, [sp, #12]
9001abda:	6861      	ldr	r1, [r4, #4]
9001abdc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001abe0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001abe4:	fb01 2000 	mla	r0, r1, r0, r2
9001abe8:	6822      	ldr	r2, [r4, #0]
9001abea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001abee:	f8d8 2000 	ldr.w	r2, [r8]
9001abf2:	9200      	str	r2, [sp, #0]
9001abf4:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001abf8:	9201      	str	r2, [sp, #4]
9001abfa:	f1bb 0f00 	cmp.w	fp, #0
9001abfe:	dc03      	bgt.n	9001ac08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ac00:	9a03      	ldr	r2, [sp, #12]
9001ac02:	2a00      	cmp	r2, #0
9001ac04:	f340 8146 	ble.w	9001ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ac08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ac0a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ac0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ac12:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ac14:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ac18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ac1c:	2b00      	cmp	r3, #0
9001ac1e:	dd0e      	ble.n	9001ac3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ac20:	140c      	asrs	r4, r1, #16
9001ac22:	d405      	bmi.n	9001ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ac24:	42bc      	cmp	r4, r7
9001ac26:	da03      	bge.n	9001ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ac28:	1414      	asrs	r4, r2, #16
9001ac2a:	d401      	bmi.n	9001ac30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ac2c:	42b4      	cmp	r4, r6
9001ac2e:	db07      	blt.n	9001ac40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ac30:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ac32:	3b01      	subs	r3, #1
9001ac34:	3002      	adds	r0, #2
9001ac36:	4421      	add	r1, r4
9001ac38:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ac3a:	4422      	add	r2, r4
9001ac3c:	e7ee      	b.n	9001ac1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ac3e:	d017      	beq.n	9001ac70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ac40:	1e5c      	subs	r4, r3, #1
9001ac42:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ac44:	fb05 1504 	mla	r5, r5, r4, r1
9001ac48:	142d      	asrs	r5, r5, #16
9001ac4a:	d409      	bmi.n	9001ac60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ac4c:	42bd      	cmp	r5, r7
9001ac4e:	da07      	bge.n	9001ac60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ac50:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ac52:	fb05 2404 	mla	r4, r5, r4, r2
9001ac56:	1424      	asrs	r4, r4, #16
9001ac58:	d402      	bmi.n	9001ac60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ac5a:	42b4      	cmp	r4, r6
9001ac5c:	f2c0 80b3 	blt.w	9001adc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001ac60:	2600      	movs	r6, #0
9001ac62:	199c      	adds	r4, r3, r6
9001ac64:	2c00      	cmp	r4, #0
9001ac66:	dc3e      	bgt.n	9001ace6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001ac68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ac6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ac70:	f1bb 0f00 	cmp.w	fp, #0
9001ac74:	f340 810e 	ble.w	9001ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ac78:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ac7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ac7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ac82:	f1bb 0b01 	subs.w	fp, fp, #1
9001ac86:	eeb0 6a62 	vmov.f32	s12, s5
9001ac8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ac8e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ac92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ac96:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001ac9a:	eeb0 6a43 	vmov.f32	s12, s6
9001ac9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aca2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001aca6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001acaa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001acae:	ee77 2a62 	vsub.f32	s5, s14, s5
9001acb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001acb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001acba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001acbe:	ee12 2a90 	vmov	r2, s5
9001acc2:	eef0 2a47 	vmov.f32	s5, s14
9001acc6:	fb92 f3f3 	sdiv	r3, r2, r3
9001acca:	ee13 2a10 	vmov	r2, s6
9001acce:	9311      	str	r3, [sp, #68]	; 0x44
9001acd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001acd2:	eeb0 3a67 	vmov.f32	s6, s15
9001acd6:	fb92 f3f3 	sdiv	r3, r2, r3
9001acda:	9a03      	ldr	r2, [sp, #12]
9001acdc:	9312      	str	r3, [sp, #72]	; 0x48
9001acde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ace0:	bf08      	it	eq
9001ace2:	4613      	moveq	r3, r2
9001ace4:	e789      	b.n	9001abfa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ace6:	140f      	asrs	r7, r1, #16
9001ace8:	d418      	bmi.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001acea:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001acee:	42bd      	cmp	r5, r7
9001acf0:	dd14      	ble.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001acf2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001acf6:	d411      	bmi.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001acf8:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001acfc:	4564      	cmp	r4, ip
9001acfe:	dd0d      	ble.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ad00:	b22d      	sxth	r5, r5
9001ad02:	9c01      	ldr	r4, [sp, #4]
9001ad04:	fb0c 7505 	mla	r5, ip, r5, r7
9001ad08:	5d64      	ldrb	r4, [r4, r5]
9001ad0a:	2cff      	cmp	r4, #255	; 0xff
9001ad0c:	d10c      	bne.n	9001ad28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001ad0e:	9c00      	ldr	r4, [sp, #0]
9001ad10:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001ad14:	f06f 0401 	mvn.w	r4, #1
9001ad18:	4374      	muls	r4, r6
9001ad1a:	5305      	strh	r5, [r0, r4]
9001ad1c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ad1e:	3e01      	subs	r6, #1
9001ad20:	4421      	add	r1, r4
9001ad22:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ad24:	4422      	add	r2, r4
9001ad26:	e79c      	b.n	9001ac62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ad28:	2c00      	cmp	r4, #0
9001ad2a:	d0f7      	beq.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001ad2c:	9f00      	ldr	r7, [sp, #0]
9001ad2e:	fa1f fc84 	uxth.w	ip, r4
9001ad32:	43e4      	mvns	r4, r4
9001ad34:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001ad38:	f06f 0501 	mvn.w	r5, #1
9001ad3c:	b2e4      	uxtb	r4, r4
9001ad3e:	4375      	muls	r5, r6
9001ad40:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001ad44:	9502      	str	r5, [sp, #8]
9001ad46:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ad4a:	5b45      	ldrh	r5, [r0, r5]
9001ad4c:	122f      	asrs	r7, r5, #8
9001ad4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ad52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ad56:	00ed      	lsls	r5, r5, #3
9001ad58:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ad5c:	fb17 f704 	smulbb	r7, r7, r4
9001ad60:	b2ed      	uxtb	r5, r5
9001ad62:	fb1a fa04 	smulbb	sl, sl, r4
9001ad66:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001ad6a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001ad6e:	fb15 f504 	smulbb	r5, r5, r4
9001ad72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001ad76:	fa1f fe8e 	uxth.w	lr, lr
9001ad7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ad7e:	fa5f f989 	uxtb.w	r9, r9
9001ad82:	fb07 a70c 	mla	r7, r7, ip, sl
9001ad86:	f10e 0401 	add.w	r4, lr, #1
9001ad8a:	fb09 550c 	mla	r5, r9, ip, r5
9001ad8e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001ad92:	9c02      	ldr	r4, [sp, #8]
9001ad94:	b2ad      	uxth	r5, r5
9001ad96:	b2bf      	uxth	r7, r7
9001ad98:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001ad9c:	f105 0a01 	add.w	sl, r5, #1
9001ada0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ada4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ada8:	ea4a 0e0e 	orr.w	lr, sl, lr
9001adac:	f107 0a01 	add.w	sl, r7, #1
9001adb0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001adb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001adb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001adbc:	ea4e 0e0a 	orr.w	lr, lr, sl
9001adc0:	f820 e004 	strh.w	lr, [r0, r4]
9001adc4:	e7aa      	b.n	9001ad1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001adc6:	f04f 0900 	mov.w	r9, #0
9001adca:	eba3 0409 	sub.w	r4, r3, r9
9001adce:	2c00      	cmp	r4, #0
9001add0:	f77f af4a 	ble.w	9001ac68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001add4:	1414      	asrs	r4, r2, #16
9001add6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001adda:	140d      	asrs	r5, r1, #16
9001addc:	fb06 5504 	mla	r5, r6, r4, r5
9001ade0:	9c01      	ldr	r4, [sp, #4]
9001ade2:	5d64      	ldrb	r4, [r4, r5]
9001ade4:	2cff      	cmp	r4, #255	; 0xff
9001ade6:	d10b      	bne.n	9001ae00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001ade8:	9c00      	ldr	r4, [sp, #0]
9001adea:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001adee:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001adf2:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001adf4:	f109 0901 	add.w	r9, r9, #1
9001adf8:	4421      	add	r1, r4
9001adfa:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001adfc:	4422      	add	r2, r4
9001adfe:	e7e4      	b.n	9001adca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001ae00:	2c00      	cmp	r4, #0
9001ae02:	d0f6      	beq.n	9001adf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001ae04:	9e00      	ldr	r6, [sp, #0]
9001ae06:	b2a7      	uxth	r7, r4
9001ae08:	43e4      	mvns	r4, r4
9001ae0a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001ae0e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001ae12:	b2e4      	uxtb	r4, r4
9001ae14:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ae18:	122e      	asrs	r6, r5, #8
9001ae1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ae1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ae22:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ae26:	00ed      	lsls	r5, r5, #3
9001ae28:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ae2c:	fb16 f604 	smulbb	r6, r6, r4
9001ae30:	b2ed      	uxtb	r5, r5
9001ae32:	fb1a fa04 	smulbb	sl, sl, r4
9001ae36:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ae3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ae3e:	fb15 f504 	smulbb	r5, r5, r4
9001ae42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ae46:	fa1f fc8c 	uxth.w	ip, ip
9001ae4a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001ae4e:	fa5f fe8e 	uxtb.w	lr, lr
9001ae52:	fb06 a607 	mla	r6, r6, r7, sl
9001ae56:	f10c 0401 	add.w	r4, ip, #1
9001ae5a:	fb0e 5507 	mla	r5, lr, r7, r5
9001ae5e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ae62:	b2ad      	uxth	r5, r5
9001ae64:	b2b6      	uxth	r6, r6
9001ae66:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ae6a:	f105 0a01 	add.w	sl, r5, #1
9001ae6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ae72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ae76:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ae7a:	f106 0a01 	add.w	sl, r6, #1
9001ae7e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ae82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ae86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ae8a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ae8e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001ae92:	e7ae      	b.n	9001adf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001ae94:	b005      	add	sp, #20
9001ae96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ae9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ae9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ae9e:	b085      	sub	sp, #20
9001aea0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001aea2:	9203      	str	r2, [sp, #12]
9001aea4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001aea8:	9100      	str	r1, [sp, #0]
9001aeaa:	9201      	str	r2, [sp, #4]
9001aeac:	6841      	ldr	r1, [r0, #4]
9001aeae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001aeb2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001aeb6:	fb01 2404 	mla	r4, r1, r4, r2
9001aeba:	6802      	ldr	r2, [r0, #0]
9001aebc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001aec0:	f8de 2000 	ldr.w	r2, [lr]
9001aec4:	9202      	str	r2, [sp, #8]
9001aec6:	9a01      	ldr	r2, [sp, #4]
9001aec8:	43d6      	mvns	r6, r2
9001aeca:	b2f6      	uxtb	r6, r6
9001aecc:	9a00      	ldr	r2, [sp, #0]
9001aece:	2a00      	cmp	r2, #0
9001aed0:	dc03      	bgt.n	9001aeda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001aed2:	9a03      	ldr	r2, [sp, #12]
9001aed4:	2a00      	cmp	r2, #0
9001aed6:	f340 8124 	ble.w	9001b122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001aeda:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001aedc:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001aee0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001aee4:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001aee6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001aeea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001aeee:	2b00      	cmp	r3, #0
9001aef0:	dd0e      	ble.n	9001af10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001aef2:	1408      	asrs	r0, r1, #16
9001aef4:	d405      	bmi.n	9001af02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aef6:	4560      	cmp	r0, ip
9001aef8:	da03      	bge.n	9001af02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aefa:	1410      	asrs	r0, r2, #16
9001aefc:	d401      	bmi.n	9001af02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001aefe:	42b8      	cmp	r0, r7
9001af00:	db07      	blt.n	9001af12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001af02:	9811      	ldr	r0, [sp, #68]	; 0x44
9001af04:	3b01      	subs	r3, #1
9001af06:	3402      	adds	r4, #2
9001af08:	4401      	add	r1, r0
9001af0a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001af0c:	4402      	add	r2, r0
9001af0e:	e7ee      	b.n	9001aeee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001af10:	d06e      	beq.n	9001aff0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001af12:	1e58      	subs	r0, r3, #1
9001af14:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001af16:	fb05 1500 	mla	r5, r5, r0, r1
9001af1a:	142d      	asrs	r5, r5, #16
9001af1c:	d45c      	bmi.n	9001afd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001af1e:	4565      	cmp	r5, ip
9001af20:	da5a      	bge.n	9001afd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001af22:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001af24:	fb05 2000 	mla	r0, r5, r0, r2
9001af28:	1400      	asrs	r0, r0, #16
9001af2a:	d455      	bmi.n	9001afd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001af2c:	42b8      	cmp	r0, r7
9001af2e:	da53      	bge.n	9001afd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001af30:	4699      	mov	r9, r3
9001af32:	46a2      	mov	sl, r4
9001af34:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001af38:	f1b9 0f00 	cmp.w	r9, #0
9001af3c:	dd54      	ble.n	9001afe8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001af3e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001af42:	140d      	asrs	r5, r1, #16
9001af44:	1410      	asrs	r0, r2, #16
9001af46:	f109 39ff 	add.w	r9, r9, #4294967295
9001af4a:	fb07 5000 	mla	r0, r7, r0, r5
9001af4e:	9d02      	ldr	r5, [sp, #8]
9001af50:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001af54:	f8ba 5000 	ldrh.w	r5, [sl]
9001af58:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001af5c:	122f      	asrs	r7, r5, #8
9001af5e:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001af62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001af66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001af6a:	00ed      	lsls	r5, r5, #3
9001af6c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001af70:	fb17 f706 	smulbb	r7, r7, r6
9001af74:	b2ed      	uxtb	r5, r5
9001af76:	fb18 f806 	smulbb	r8, r8, r6
9001af7a:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001af7e:	10c7      	asrs	r7, r0, #3
9001af80:	fb15 f506 	smulbb	r5, r5, r6
9001af84:	00c0      	lsls	r0, r0, #3
9001af86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001af8a:	fa1f fc8c 	uxth.w	ip, ip
9001af8e:	b2c0      	uxtb	r0, r0
9001af90:	fb07 870b 	mla	r7, r7, fp, r8
9001af94:	fb00 500b 	mla	r0, r0, fp, r5
9001af98:	f10c 0501 	add.w	r5, ip, #1
9001af9c:	b2bf      	uxth	r7, r7
9001af9e:	b280      	uxth	r0, r0
9001afa0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001afa4:	f107 0801 	add.w	r8, r7, #1
9001afa8:	1c45      	adds	r5, r0, #1
9001afaa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001afae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001afb2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001afb6:	9811      	ldr	r0, [sp, #68]	; 0x44
9001afb8:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001afbc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001afc0:	4401      	add	r1, r0
9001afc2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001afc6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001afc8:	ea45 0c0c 	orr.w	ip, r5, ip
9001afcc:	4402      	add	r2, r0
9001afce:	ea4c 0c08 	orr.w	ip, ip, r8
9001afd2:	f82a cb02 	strh.w	ip, [sl], #2
9001afd6:	e7af      	b.n	9001af38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001afd8:	f04f 0800 	mov.w	r8, #0
9001afdc:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001afe0:	eb03 0008 	add.w	r0, r3, r8
9001afe4:	2800      	cmp	r0, #0
9001afe6:	dc41      	bgt.n	9001b06c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001afe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001afec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aff0:	9b00      	ldr	r3, [sp, #0]
9001aff2:	2b00      	cmp	r3, #0
9001aff4:	f340 8095 	ble.w	9001b122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001aff8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001affc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001affe:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b002:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b006:	eef0 6a62 	vmov.f32	s13, s5
9001b00a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b00e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b012:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b016:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001b01a:	eef0 6a43 	vmov.f32	s13, s6
9001b01e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b022:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001b026:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b02a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b02e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b032:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b036:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b03a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b03e:	ee12 2a90 	vmov	r2, s5
9001b042:	eef0 2a47 	vmov.f32	s5, s14
9001b046:	fb92 f3f3 	sdiv	r3, r2, r3
9001b04a:	ee13 2a10 	vmov	r2, s6
9001b04e:	9311      	str	r3, [sp, #68]	; 0x44
9001b050:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b052:	eeb0 3a67 	vmov.f32	s6, s15
9001b056:	fb92 f3f3 	sdiv	r3, r2, r3
9001b05a:	9312      	str	r3, [sp, #72]	; 0x48
9001b05c:	9b00      	ldr	r3, [sp, #0]
9001b05e:	9a03      	ldr	r2, [sp, #12]
9001b060:	3b01      	subs	r3, #1
9001b062:	9300      	str	r3, [sp, #0]
9001b064:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b066:	bf08      	it	eq
9001b068:	4613      	moveq	r3, r2
9001b06a:	e72f      	b.n	9001aecc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b06c:	140f      	asrs	r7, r1, #16
9001b06e:	d451      	bmi.n	9001b114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b070:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b074:	42bd      	cmp	r5, r7
9001b076:	dd4d      	ble.n	9001b114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b078:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b07c:	d44a      	bmi.n	9001b114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b07e:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b082:	4560      	cmp	r0, ip
9001b084:	dd46      	ble.n	9001b114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b086:	b22d      	sxth	r5, r5
9001b088:	9802      	ldr	r0, [sp, #8]
9001b08a:	fb0c 7505 	mla	r5, ip, r5, r7
9001b08e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001b092:	f06f 0501 	mvn.w	r5, #1
9001b096:	fb05 fb08 	mul.w	fp, r5, r8
9001b09a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b09e:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b0a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b0a6:	122f      	asrs	r7, r5, #8
9001b0a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b0ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b0b0:	00ed      	lsls	r5, r5, #3
9001b0b2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b0b6:	fb17 f706 	smulbb	r7, r7, r6
9001b0ba:	b2ed      	uxtb	r5, r5
9001b0bc:	fb19 f906 	smulbb	r9, r9, r6
9001b0c0:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b0c4:	10c7      	asrs	r7, r0, #3
9001b0c6:	fb15 f506 	smulbb	r5, r5, r6
9001b0ca:	00c0      	lsls	r0, r0, #3
9001b0cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b0d0:	fa1f fc8c 	uxth.w	ip, ip
9001b0d4:	b2c0      	uxtb	r0, r0
9001b0d6:	fb07 970a 	mla	r7, r7, sl, r9
9001b0da:	fb00 500a 	mla	r0, r0, sl, r5
9001b0de:	f10c 0501 	add.w	r5, ip, #1
9001b0e2:	b2bf      	uxth	r7, r7
9001b0e4:	b280      	uxth	r0, r0
9001b0e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b0ea:	f107 0901 	add.w	r9, r7, #1
9001b0ee:	1c45      	adds	r5, r0, #1
9001b0f0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b0f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b0f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b0fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b100:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b104:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b108:	ea45 0c0c 	orr.w	ip, r5, ip
9001b10c:	ea4c 0c09 	orr.w	ip, ip, r9
9001b110:	f824 c00b 	strh.w	ip, [r4, fp]
9001b114:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b116:	f108 38ff 	add.w	r8, r8, #4294967295
9001b11a:	4401      	add	r1, r0
9001b11c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b11e:	4402      	add	r2, r0
9001b120:	e75e      	b.n	9001afe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001b122:	b005      	add	sp, #20
9001b124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b128 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b12c:	b085      	sub	sp, #20
9001b12e:	4693      	mov	fp, r2
9001b130:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b134:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b136:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001b138:	6870      	ldr	r0, [r6, #4]
9001b13a:	9101      	str	r1, [sp, #4]
9001b13c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b140:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001b144:	fb00 2404 	mla	r4, r0, r4, r2
9001b148:	6832      	ldr	r2, [r6, #0]
9001b14a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b14e:	682a      	ldr	r2, [r5, #0]
9001b150:	9202      	str	r2, [sp, #8]
9001b152:	9a01      	ldr	r2, [sp, #4]
9001b154:	2a00      	cmp	r2, #0
9001b156:	dc03      	bgt.n	9001b160 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b158:	f1bb 0f00 	cmp.w	fp, #0
9001b15c:	f340 809a 	ble.w	9001b294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b160:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b162:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b166:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b16a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b16c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b170:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b174:	2b00      	cmp	r3, #0
9001b176:	dd0c      	ble.n	9001b192 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001b178:	1406      	asrs	r6, r0, #16
9001b17a:	d405      	bmi.n	9001b188 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b17c:	454e      	cmp	r6, r9
9001b17e:	da03      	bge.n	9001b188 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b180:	1416      	asrs	r6, r2, #16
9001b182:	d401      	bmi.n	9001b188 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b184:	4546      	cmp	r6, r8
9001b186:	db05      	blt.n	9001b194 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b188:	4470      	add	r0, lr
9001b18a:	4462      	add	r2, ip
9001b18c:	3b01      	subs	r3, #1
9001b18e:	3402      	adds	r4, #2
9001b190:	e7f0      	b.n	9001b174 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b192:	d00f      	beq.n	9001b1b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001b194:	1e5e      	subs	r6, r3, #1
9001b196:	fb0e 0706 	mla	r7, lr, r6, r0
9001b19a:	143f      	asrs	r7, r7, #16
9001b19c:	d541      	bpl.n	9001b222 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001b19e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b1a2:	4698      	mov	r8, r3
9001b1a4:	9603      	str	r6, [sp, #12]
9001b1a6:	f1b8 0f00 	cmp.w	r8, #0
9001b1aa:	dc56      	bgt.n	9001b25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001b1ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b1b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b1b4:	9b01      	ldr	r3, [sp, #4]
9001b1b6:	2b00      	cmp	r3, #0
9001b1b8:	dd6c      	ble.n	9001b294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b1ba:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b1be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b1c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b1c4:	eeb0 6a62 	vmov.f32	s12, s5
9001b1c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b1cc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b1d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b1d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b1d8:	eeb0 6a43 	vmov.f32	s12, s6
9001b1dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b1e0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b1e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b1e8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b1ec:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b1f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b1f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b1f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b1fc:	ee12 2a90 	vmov	r2, s5
9001b200:	eef0 2a47 	vmov.f32	s5, s14
9001b204:	fb92 fef3 	sdiv	lr, r2, r3
9001b208:	ee13 2a10 	vmov	r2, s6
9001b20c:	eeb0 3a67 	vmov.f32	s6, s15
9001b210:	fb92 fcf3 	sdiv	ip, r2, r3
9001b214:	9b01      	ldr	r3, [sp, #4]
9001b216:	3b01      	subs	r3, #1
9001b218:	9301      	str	r3, [sp, #4]
9001b21a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b21c:	bf08      	it	eq
9001b21e:	465b      	moveq	r3, fp
9001b220:	e797      	b.n	9001b152 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b222:	454f      	cmp	r7, r9
9001b224:	dabb      	bge.n	9001b19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b226:	fb0c 2606 	mla	r6, ip, r6, r2
9001b22a:	1436      	asrs	r6, r6, #16
9001b22c:	d4b7      	bmi.n	9001b19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b22e:	4546      	cmp	r6, r8
9001b230:	dab5      	bge.n	9001b19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b232:	461e      	mov	r6, r3
9001b234:	46a0      	mov	r8, r4
9001b236:	2e00      	cmp	r6, #0
9001b238:	ddb8      	ble.n	9001b1ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b23a:	1417      	asrs	r7, r2, #16
9001b23c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b240:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b244:	9902      	ldr	r1, [sp, #8]
9001b246:	4470      	add	r0, lr
9001b248:	4462      	add	r2, ip
9001b24a:	fb0a 9707 	mla	r7, sl, r7, r9
9001b24e:	3e01      	subs	r6, #1
9001b250:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b254:	f828 7b02 	strh.w	r7, [r8], #2
9001b258:	e7ed      	b.n	9001b236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001b25a:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b25e:	d414      	bmi.n	9001b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b260:	68ae      	ldr	r6, [r5, #8]
9001b262:	454e      	cmp	r6, r9
9001b264:	dd11      	ble.n	9001b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b266:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b26a:	d40e      	bmi.n	9001b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b26c:	68ef      	ldr	r7, [r5, #12]
9001b26e:	4557      	cmp	r7, sl
9001b270:	dd0b      	ble.n	9001b28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b272:	b236      	sxth	r6, r6
9001b274:	f06f 0101 	mvn.w	r1, #1
9001b278:	9f02      	ldr	r7, [sp, #8]
9001b27a:	fb0a 9606 	mla	r6, sl, r6, r9
9001b27e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b282:	fb01 f608 	mul.w	r6, r1, r8
9001b286:	9903      	ldr	r1, [sp, #12]
9001b288:	538f      	strh	r7, [r1, r6]
9001b28a:	4470      	add	r0, lr
9001b28c:	4462      	add	r2, ip
9001b28e:	f108 38ff 	add.w	r8, r8, #4294967295
9001b292:	e788      	b.n	9001b1a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b294:	b005      	add	sp, #20
9001b296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b29a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b29a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b29e:	b087      	sub	sp, #28
9001b2a0:	468b      	mov	fp, r1
9001b2a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b2a6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b2a8:	9203      	str	r2, [sp, #12]
9001b2aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b2ae:	6841      	ldr	r1, [r0, #4]
9001b2b0:	9204      	str	r2, [sp, #16]
9001b2b2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001b2b6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001b2ba:	fb01 2505 	mla	r5, r1, r5, r2
9001b2be:	6802      	ldr	r2, [r0, #0]
9001b2c0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001b2c4:	f8d9 2000 	ldr.w	r2, [r9]
9001b2c8:	9201      	str	r2, [sp, #4]
9001b2ca:	f1bb 0f00 	cmp.w	fp, #0
9001b2ce:	dc03      	bgt.n	9001b2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b2d0:	9a03      	ldr	r2, [sp, #12]
9001b2d2:	2a00      	cmp	r2, #0
9001b2d4:	f340 8158 	ble.w	9001b588 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b2d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b2da:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001b2de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b2e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b2e4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001b2e8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b2ec:	2b00      	cmp	r3, #0
9001b2ee:	dd0e      	ble.n	9001b30e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b2f0:	1402      	asrs	r2, r0, #16
9001b2f2:	d405      	bmi.n	9001b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b2f4:	42ba      	cmp	r2, r7
9001b2f6:	da03      	bge.n	9001b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b2f8:	140a      	asrs	r2, r1, #16
9001b2fa:	d401      	bmi.n	9001b300 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b2fc:	42b2      	cmp	r2, r6
9001b2fe:	db07      	blt.n	9001b310 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b300:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b302:	3b01      	subs	r3, #1
9001b304:	3502      	adds	r5, #2
9001b306:	4410      	add	r0, r2
9001b308:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b30a:	4411      	add	r1, r2
9001b30c:	e7ee      	b.n	9001b2ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b30e:	d017      	beq.n	9001b340 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b310:	1e5a      	subs	r2, r3, #1
9001b312:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b314:	fb04 0402 	mla	r4, r4, r2, r0
9001b318:	1424      	asrs	r4, r4, #16
9001b31a:	d409      	bmi.n	9001b330 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b31c:	42bc      	cmp	r4, r7
9001b31e:	da07      	bge.n	9001b330 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b320:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b322:	fb04 1202 	mla	r2, r4, r2, r1
9001b326:	1412      	asrs	r2, r2, #16
9001b328:	d402      	bmi.n	9001b330 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b32a:	42b2      	cmp	r2, r6
9001b32c:	f2c0 80bf 	blt.w	9001b4ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b330:	2700      	movs	r7, #0
9001b332:	19da      	adds	r2, r3, r7
9001b334:	2a00      	cmp	r2, #0
9001b336:	dc3e      	bgt.n	9001b3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b338:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b33c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001b340:	f1bb 0f00 	cmp.w	fp, #0
9001b344:	f340 8120 	ble.w	9001b588 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b348:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b34c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b34e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b352:	f1bb 0b01 	subs.w	fp, fp, #1
9001b356:	eeb0 6a62 	vmov.f32	s12, s5
9001b35a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b35e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b366:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001b36a:	eeb0 6a43 	vmov.f32	s12, s6
9001b36e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b372:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001b376:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b37a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b37e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b382:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b386:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b38a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b38e:	ee12 2a90 	vmov	r2, s5
9001b392:	eef0 2a47 	vmov.f32	s5, s14
9001b396:	fb92 f3f3 	sdiv	r3, r2, r3
9001b39a:	ee13 2a10 	vmov	r2, s6
9001b39e:	9313      	str	r3, [sp, #76]	; 0x4c
9001b3a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b3a2:	eeb0 3a67 	vmov.f32	s6, s15
9001b3a6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b3aa:	9a03      	ldr	r2, [sp, #12]
9001b3ac:	9314      	str	r3, [sp, #80]	; 0x50
9001b3ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b3b0:	bf08      	it	eq
9001b3b2:	4613      	moveq	r3, r2
9001b3b4:	e789      	b.n	9001b2ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b3b6:	1406      	asrs	r6, r0, #16
9001b3b8:	d42d      	bmi.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b3ba:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001b3be:	42b4      	cmp	r4, r6
9001b3c0:	dd29      	ble.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b3c2:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001b3c6:	d426      	bmi.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b3c8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001b3cc:	4562      	cmp	r2, ip
9001b3ce:	dd22      	ble.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b3d0:	b224      	sxth	r4, r4
9001b3d2:	9a01      	ldr	r2, [sp, #4]
9001b3d4:	fb0c 6404 	mla	r4, ip, r4, r6
9001b3d8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001b3dc:	0e22      	lsrs	r2, r4, #24
9001b3de:	d01a      	beq.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b3e0:	9e04      	ldr	r6, [sp, #16]
9001b3e2:	4372      	muls	r2, r6
9001b3e4:	1c56      	adds	r6, r2, #1
9001b3e6:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001b3ea:	0a26      	lsrs	r6, r4, #8
9001b3ec:	1212      	asrs	r2, r2, #8
9001b3ee:	9605      	str	r6, [sp, #20]
9001b3f0:	2aff      	cmp	r2, #255	; 0xff
9001b3f2:	d116      	bne.n	9001b422 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001b3f4:	f06f 0201 	mvn.w	r2, #1
9001b3f8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b3fc:	fb02 fc07 	mul.w	ip, r2, r7
9001b400:	0962      	lsrs	r2, r4, #5
9001b402:	f026 0607 	bic.w	r6, r6, #7
9001b406:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001b40a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b40e:	4316      	orrs	r6, r2
9001b410:	4326      	orrs	r6, r4
9001b412:	f825 600c 	strh.w	r6, [r5, ip]
9001b416:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b418:	3f01      	subs	r7, #1
9001b41a:	4410      	add	r0, r2
9001b41c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b41e:	4411      	add	r1, r2
9001b420:	e787      	b.n	9001b332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b422:	f06f 0601 	mvn.w	r6, #1
9001b426:	fa1f fa82 	uxth.w	sl, r2
9001b42a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001b42e:	43d2      	mvns	r2, r2
9001b430:	437e      	muls	r6, r7
9001b432:	b2e4      	uxtb	r4, r4
9001b434:	fb1c fc0a 	smulbb	ip, ip, sl
9001b438:	b2d2      	uxtb	r2, r2
9001b43a:	f835 8006 	ldrh.w	r8, [r5, r6]
9001b43e:	fb14 f40a 	smulbb	r4, r4, sl
9001b442:	9602      	str	r6, [sp, #8]
9001b444:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001b448:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001b44c:	fb16 f60a 	smulbb	r6, r6, sl
9001b450:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b454:	fb0e ce02 	mla	lr, lr, r2, ip
9001b458:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001b45c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b460:	fa1f fe8e 	uxth.w	lr, lr
9001b464:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001b468:	fa5f f888 	uxtb.w	r8, r8
9001b46c:	fb0c 6c02 	mla	ip, ip, r2, r6
9001b470:	fb08 4402 	mla	r4, r8, r2, r4
9001b474:	f10e 0201 	add.w	r2, lr, #1
9001b478:	fa1f fc8c 	uxth.w	ip, ip
9001b47c:	b2a4      	uxth	r4, r4
9001b47e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001b482:	9a02      	ldr	r2, [sp, #8]
9001b484:	1c66      	adds	r6, r4, #1
9001b486:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001b48a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001b48e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b492:	ea46 0e0e 	orr.w	lr, r6, lr
9001b496:	f10c 0601 	add.w	r6, ip, #1
9001b49a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001b49e:	0976      	lsrs	r6, r6, #5
9001b4a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001b4a4:	ea4e 0e06 	orr.w	lr, lr, r6
9001b4a8:	f825 e002 	strh.w	lr, [r5, r2]
9001b4ac:	e7b3      	b.n	9001b416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b4ae:	f04f 0800 	mov.w	r8, #0
9001b4b2:	eba3 0208 	sub.w	r2, r3, r8
9001b4b6:	2a00      	cmp	r2, #0
9001b4b8:	f77f af3e 	ble.w	9001b338 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b4bc:	1404      	asrs	r4, r0, #16
9001b4be:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001b4c2:	140a      	asrs	r2, r1, #16
9001b4c4:	fb06 4202 	mla	r2, r6, r2, r4
9001b4c8:	9c01      	ldr	r4, [sp, #4]
9001b4ca:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001b4ce:	0e22      	lsrs	r2, r4, #24
9001b4d0:	d015      	beq.n	9001b4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001b4d2:	9e04      	ldr	r6, [sp, #16]
9001b4d4:	4372      	muls	r2, r6
9001b4d6:	1c56      	adds	r6, r2, #1
9001b4d8:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001b4dc:	0a26      	lsrs	r6, r4, #8
9001b4de:	1212      	asrs	r2, r2, #8
9001b4e0:	2aff      	cmp	r2, #255	; 0xff
9001b4e2:	d113      	bne.n	9001b50c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001b4e4:	0962      	lsrs	r2, r4, #5
9001b4e6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b4ea:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001b4ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b4f2:	f026 0607 	bic.w	r6, r6, #7
9001b4f6:	4316      	orrs	r6, r2
9001b4f8:	4326      	orrs	r6, r4
9001b4fa:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001b4fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b500:	f108 0801 	add.w	r8, r8, #1
9001b504:	4410      	add	r0, r2
9001b506:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b508:	4411      	add	r1, r2
9001b50a:	e7d2      	b.n	9001b4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001b50c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001b510:	fa1f fa82 	uxth.w	sl, r2
9001b514:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001b518:	43d2      	mvns	r2, r2
9001b51a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b51e:	fb17 f70a 	smulbb	r7, r7, sl
9001b522:	b2d2      	uxtb	r2, r2
9001b524:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b528:	b2e4      	uxtb	r4, r4
9001b52a:	b2f6      	uxtb	r6, r6
9001b52c:	fb0c 7c02 	mla	ip, ip, r2, r7
9001b530:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b534:	fb14 f40a 	smulbb	r4, r4, sl
9001b538:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b53c:	fa1f fc8c 	uxth.w	ip, ip
9001b540:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b544:	fb16 f60a 	smulbb	r6, r6, sl
9001b548:	fa5f fe8e 	uxtb.w	lr, lr
9001b54c:	fb0e 4402 	mla	r4, lr, r2, r4
9001b550:	fb07 6702 	mla	r7, r7, r2, r6
9001b554:	f10c 0201 	add.w	r2, ip, #1
9001b558:	b2a4      	uxth	r4, r4
9001b55a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001b55e:	1c66      	adds	r6, r4, #1
9001b560:	b2bf      	uxth	r7, r7
9001b562:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b566:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001b56a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001b56e:	ea46 0c0c 	orr.w	ip, r6, ip
9001b572:	1c7e      	adds	r6, r7, #1
9001b574:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001b578:	0976      	lsrs	r6, r6, #5
9001b57a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001b57e:	ea4c 0c06 	orr.w	ip, ip, r6
9001b582:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001b586:	e7ba      	b.n	9001b4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001b588:	b007      	add	sp, #28
9001b58a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001b590 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b594:	b085      	sub	sp, #20
9001b596:	468b      	mov	fp, r1
9001b598:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b59c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b59e:	9203      	str	r2, [sp, #12]
9001b5a0:	6841      	ldr	r1, [r0, #4]
9001b5a2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001b5a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b5aa:	fb01 2404 	mla	r4, r1, r4, r2
9001b5ae:	6802      	ldr	r2, [r0, #0]
9001b5b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b5b4:	f8d8 2000 	ldr.w	r2, [r8]
9001b5b8:	9201      	str	r2, [sp, #4]
9001b5ba:	f1bb 0f00 	cmp.w	fp, #0
9001b5be:	dc03      	bgt.n	9001b5c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b5c0:	9a03      	ldr	r2, [sp, #12]
9001b5c2:	2a00      	cmp	r2, #0
9001b5c4:	f340 814f 	ble.w	9001b866 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001b5c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b5ca:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b5ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b5d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b5d4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b5d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b5dc:	2b00      	cmp	r3, #0
9001b5de:	dd0e      	ble.n	9001b5fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b5e0:	1408      	asrs	r0, r1, #16
9001b5e2:	d405      	bmi.n	9001b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b5e4:	42b8      	cmp	r0, r7
9001b5e6:	da03      	bge.n	9001b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b5e8:	1410      	asrs	r0, r2, #16
9001b5ea:	d401      	bmi.n	9001b5f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b5ec:	42b0      	cmp	r0, r6
9001b5ee:	db07      	blt.n	9001b600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b5f0:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b5f2:	3b01      	subs	r3, #1
9001b5f4:	3402      	adds	r4, #2
9001b5f6:	4401      	add	r1, r0
9001b5f8:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b5fa:	4402      	add	r2, r0
9001b5fc:	e7ee      	b.n	9001b5dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b5fe:	d017      	beq.n	9001b630 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b600:	1e58      	subs	r0, r3, #1
9001b602:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b604:	fb05 1500 	mla	r5, r5, r0, r1
9001b608:	142d      	asrs	r5, r5, #16
9001b60a:	d409      	bmi.n	9001b620 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b60c:	42bd      	cmp	r5, r7
9001b60e:	da07      	bge.n	9001b620 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b610:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b612:	fb05 2000 	mla	r0, r5, r0, r2
9001b616:	1400      	asrs	r0, r0, #16
9001b618:	d402      	bmi.n	9001b620 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001b61a:	42b0      	cmp	r0, r6
9001b61c:	f2c0 80ba 	blt.w	9001b794 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001b620:	2600      	movs	r6, #0
9001b622:	1998      	adds	r0, r3, r6
9001b624:	2800      	cmp	r0, #0
9001b626:	dc3e      	bgt.n	9001b6a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001b628:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b62c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b630:	f1bb 0f00 	cmp.w	fp, #0
9001b634:	f340 8117 	ble.w	9001b866 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001b638:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b63c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b63e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b642:	f1bb 0b01 	subs.w	fp, fp, #1
9001b646:	eeb0 6a62 	vmov.f32	s12, s5
9001b64a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b64e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b652:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b656:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b65a:	eeb0 6a43 	vmov.f32	s12, s6
9001b65e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b662:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b666:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b66a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b66e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b672:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b676:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b67e:	ee12 2a90 	vmov	r2, s5
9001b682:	eef0 2a47 	vmov.f32	s5, s14
9001b686:	fb92 f3f3 	sdiv	r3, r2, r3
9001b68a:	ee13 2a10 	vmov	r2, s6
9001b68e:	9311      	str	r3, [sp, #68]	; 0x44
9001b690:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b692:	eeb0 3a67 	vmov.f32	s6, s15
9001b696:	fb92 f3f3 	sdiv	r3, r2, r3
9001b69a:	9a03      	ldr	r2, [sp, #12]
9001b69c:	9312      	str	r3, [sp, #72]	; 0x48
9001b69e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b6a0:	bf08      	it	eq
9001b6a2:	4613      	moveq	r3, r2
9001b6a4:	e789      	b.n	9001b5ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b6a6:	140f      	asrs	r7, r1, #16
9001b6a8:	d424      	bmi.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b6aa:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b6ae:	42bd      	cmp	r5, r7
9001b6b0:	dd20      	ble.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b6b2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b6b6:	d41d      	bmi.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b6b8:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001b6bc:	4560      	cmp	r0, ip
9001b6be:	dd19      	ble.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b6c0:	b22d      	sxth	r5, r5
9001b6c2:	9801      	ldr	r0, [sp, #4]
9001b6c4:	fb0c 7505 	mla	r5, ip, r5, r7
9001b6c8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001b6cc:	0e07      	lsrs	r7, r0, #24
9001b6ce:	2fff      	cmp	r7, #255	; 0xff
9001b6d0:	d116      	bne.n	9001b700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b6d2:	f06f 0501 	mvn.w	r5, #1
9001b6d6:	fb05 f706 	mul.w	r7, r5, r6
9001b6da:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001b6de:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b6e2:	0945      	lsrs	r5, r0, #5
9001b6e4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b6e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b6ec:	ea4c 0505 	orr.w	r5, ip, r5
9001b6f0:	4305      	orrs	r5, r0
9001b6f2:	53e5      	strh	r5, [r4, r7]
9001b6f4:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b6f6:	3e01      	subs	r6, #1
9001b6f8:	4401      	add	r1, r0
9001b6fa:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b6fc:	4402      	add	r2, r0
9001b6fe:	e790      	b.n	9001b622 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b700:	b2fd      	uxtb	r5, r7
9001b702:	2f00      	cmp	r7, #0
9001b704:	d0f6      	beq.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b706:	f06f 0701 	mvn.w	r7, #1
9001b70a:	fa1f f985 	uxth.w	r9, r5
9001b70e:	43ed      	mvns	r5, r5
9001b710:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b714:	4377      	muls	r7, r6
9001b716:	fb1a fa09 	smulbb	sl, sl, r9
9001b71a:	b2ed      	uxtb	r5, r5
9001b71c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001b720:	9702      	str	r7, [sp, #8]
9001b722:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b726:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b72a:	fb17 f709 	smulbb	r7, r7, r9
9001b72e:	b2c0      	uxtb	r0, r0
9001b730:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b734:	fb10 f009 	smulbb	r0, r0, r9
9001b738:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b73c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001b740:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b744:	fa1f fc8c 	uxth.w	ip, ip
9001b748:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b74c:	fa5f fe8e 	uxtb.w	lr, lr
9001b750:	fb07 a705 	mla	r7, r7, r5, sl
9001b754:	fb0e 0005 	mla	r0, lr, r5, r0
9001b758:	f10c 0501 	add.w	r5, ip, #1
9001b75c:	b2bf      	uxth	r7, r7
9001b75e:	b280      	uxth	r0, r0
9001b760:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b764:	f100 0a01 	add.w	sl, r0, #1
9001b768:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b76c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b770:	9802      	ldr	r0, [sp, #8]
9001b772:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b776:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b77a:	f107 0a01 	add.w	sl, r7, #1
9001b77e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b782:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b786:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b78a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b78e:	f824 c000 	strh.w	ip, [r4, r0]
9001b792:	e7af      	b.n	9001b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b794:	f04f 0e00 	mov.w	lr, #0
9001b798:	eba3 000e 	sub.w	r0, r3, lr
9001b79c:	2800      	cmp	r0, #0
9001b79e:	f77f af43 	ble.w	9001b628 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b7a2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b7a6:	140d      	asrs	r5, r1, #16
9001b7a8:	1410      	asrs	r0, r2, #16
9001b7aa:	fb06 5000 	mla	r0, r6, r0, r5
9001b7ae:	9d01      	ldr	r5, [sp, #4]
9001b7b0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b7b4:	0e2e      	lsrs	r6, r5, #24
9001b7b6:	2eff      	cmp	r6, #255	; 0xff
9001b7b8:	d112      	bne.n	9001b7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001b7ba:	482c      	ldr	r0, [pc, #176]	; (9001b86c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001b7bc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b7c0:	0968      	lsrs	r0, r5, #5
9001b7c2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b7c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001b7ca:	4330      	orrs	r0, r6
9001b7cc:	4328      	orrs	r0, r5
9001b7ce:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001b7d2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b7d4:	f10e 0e01 	add.w	lr, lr, #1
9001b7d8:	4401      	add	r1, r0
9001b7da:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b7dc:	4402      	add	r2, r0
9001b7de:	e7db      	b.n	9001b798 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001b7e0:	b2f0      	uxtb	r0, r6
9001b7e2:	2e00      	cmp	r6, #0
9001b7e4:	d0f5      	beq.n	9001b7d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b7e6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001b7ea:	fa1f f980 	uxth.w	r9, r0
9001b7ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b7f2:	43c0      	mvns	r0, r0
9001b7f4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b7f8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b7fc:	fb16 f609 	smulbb	r6, r6, r9
9001b800:	b2c0      	uxtb	r0, r0
9001b802:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b806:	b2ed      	uxtb	r5, r5
9001b808:	fb1a fa09 	smulbb	sl, sl, r9
9001b80c:	fb07 6700 	mla	r7, r7, r0, r6
9001b810:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b814:	fb15 f509 	smulbb	r5, r5, r9
9001b818:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b81c:	b2bf      	uxth	r7, r7
9001b81e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b822:	fa5f fc8c 	uxtb.w	ip, ip
9001b826:	fb06 a600 	mla	r6, r6, r0, sl
9001b82a:	fb0c 5500 	mla	r5, ip, r0, r5
9001b82e:	1c78      	adds	r0, r7, #1
9001b830:	b2b6      	uxth	r6, r6
9001b832:	b2ad      	uxth	r5, r5
9001b834:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b838:	f105 0a01 	add.w	sl, r5, #1
9001b83c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001b840:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b844:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b848:	ea4a 0707 	orr.w	r7, sl, r7
9001b84c:	f106 0a01 	add.w	sl, r6, #1
9001b850:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b854:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b858:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b85c:	ea47 070a 	orr.w	r7, r7, sl
9001b860:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001b864:	e7b5      	b.n	9001b7d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001b866:	b005      	add	sp, #20
9001b868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b86c:	fffff800 	.word	0xfffff800

9001b870 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b874:	b087      	sub	sp, #28
9001b876:	468b      	mov	fp, r1
9001b878:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b87c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b87e:	9203      	str	r2, [sp, #12]
9001b880:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b884:	6841      	ldr	r1, [r0, #4]
9001b886:	9204      	str	r2, [sp, #16]
9001b888:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001b88c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001b890:	fb01 2404 	mla	r4, r1, r4, r2
9001b894:	6802      	ldr	r2, [r0, #0]
9001b896:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b89a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001b89e:	3201      	adds	r2, #1
9001b8a0:	f022 0201 	bic.w	r2, r2, #1
9001b8a4:	9200      	str	r2, [sp, #0]
9001b8a6:	f8d9 2000 	ldr.w	r2, [r9]
9001b8aa:	9201      	str	r2, [sp, #4]
9001b8ac:	f1bb 0f00 	cmp.w	fp, #0
9001b8b0:	dc03      	bgt.n	9001b8ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001b8b2:	9a03      	ldr	r2, [sp, #12]
9001b8b4:	2a00      	cmp	r2, #0
9001b8b6:	f340 816a 	ble.w	9001bb8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001b8ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b8bc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001b8c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b8c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b8c6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001b8ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b8ce:	2b00      	cmp	r3, #0
9001b8d0:	dd0e      	ble.n	9001b8f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b8d2:	1402      	asrs	r2, r0, #16
9001b8d4:	d405      	bmi.n	9001b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b8d6:	42ba      	cmp	r2, r7
9001b8d8:	da03      	bge.n	9001b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b8da:	140a      	asrs	r2, r1, #16
9001b8dc:	d401      	bmi.n	9001b8e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b8de:	42b2      	cmp	r2, r6
9001b8e0:	db07      	blt.n	9001b8f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001b8e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b8e4:	3b01      	subs	r3, #1
9001b8e6:	3402      	adds	r4, #2
9001b8e8:	4410      	add	r0, r2
9001b8ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b8ec:	4411      	add	r1, r2
9001b8ee:	e7ee      	b.n	9001b8ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001b8f0:	d017      	beq.n	9001b922 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b8f2:	1e5a      	subs	r2, r3, #1
9001b8f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001b8f6:	fb05 0502 	mla	r5, r5, r2, r0
9001b8fa:	142d      	asrs	r5, r5, #16
9001b8fc:	d409      	bmi.n	9001b912 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b8fe:	42bd      	cmp	r5, r7
9001b900:	da07      	bge.n	9001b912 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b902:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001b904:	fb05 1202 	mla	r2, r5, r2, r1
9001b908:	1412      	asrs	r2, r2, #16
9001b90a:	d402      	bmi.n	9001b912 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b90c:	42b2      	cmp	r2, r6
9001b90e:	f2c0 80c8 	blt.w	9001baa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001b912:	2700      	movs	r7, #0
9001b914:	19da      	adds	r2, r3, r7
9001b916:	2a00      	cmp	r2, #0
9001b918:	dc3e      	bgt.n	9001b998 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b91a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b91e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b922:	f1bb 0f00 	cmp.w	fp, #0
9001b926:	f340 8132 	ble.w	9001bb8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001b92a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b92e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b930:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b934:	f1bb 0b01 	subs.w	fp, fp, #1
9001b938:	eeb0 6a62 	vmov.f32	s12, s5
9001b93c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b940:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b944:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b948:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001b94c:	eeb0 6a43 	vmov.f32	s12, s6
9001b950:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b954:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001b958:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b95c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b960:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b964:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b968:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b96c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b970:	ee12 2a90 	vmov	r2, s5
9001b974:	eef0 2a47 	vmov.f32	s5, s14
9001b978:	fb92 f3f3 	sdiv	r3, r2, r3
9001b97c:	ee13 2a10 	vmov	r2, s6
9001b980:	9313      	str	r3, [sp, #76]	; 0x4c
9001b982:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b984:	eeb0 3a67 	vmov.f32	s6, s15
9001b988:	fb92 f3f3 	sdiv	r3, r2, r3
9001b98c:	9a03      	ldr	r2, [sp, #12]
9001b98e:	9314      	str	r3, [sp, #80]	; 0x50
9001b990:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b992:	bf08      	it	eq
9001b994:	4613      	moveq	r3, r2
9001b996:	e789      	b.n	9001b8ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001b998:	1405      	asrs	r5, r0, #16
9001b99a:	d436      	bmi.n	9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b99c:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001b9a0:	42aa      	cmp	r2, r5
9001b9a2:	dd32      	ble.n	9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b9a4:	140e      	asrs	r6, r1, #16
9001b9a6:	d430      	bmi.n	9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b9a8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001b9ac:	42b2      	cmp	r2, r6
9001b9ae:	dd2c      	ble.n	9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b9b0:	9a00      	ldr	r2, [sp, #0]
9001b9b2:	fb06 5502 	mla	r5, r6, r2, r5
9001b9b6:	9e01      	ldr	r6, [sp, #4]
9001b9b8:	086a      	lsrs	r2, r5, #1
9001b9ba:	5cb2      	ldrb	r2, [r6, r2]
9001b9bc:	07ee      	lsls	r6, r5, #31
9001b9be:	bf54      	ite	pl
9001b9c0:	f002 020f 	andpl.w	r2, r2, #15
9001b9c4:	1112      	asrmi	r2, r2, #4
9001b9c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001b9ca:	b2d2      	uxtb	r2, r2
9001b9cc:	b1ea      	cbz	r2, 9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001b9ce:	9d04      	ldr	r5, [sp, #16]
9001b9d0:	436a      	muls	r2, r5
9001b9d2:	1c55      	adds	r5, r2, #1
9001b9d4:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001b9d8:	4d6e      	ldr	r5, [pc, #440]	; (9001bb94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001b9da:	1212      	asrs	r2, r2, #8
9001b9dc:	682d      	ldr	r5, [r5, #0]
9001b9de:	2aff      	cmp	r2, #255	; 0xff
9001b9e0:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001b9e4:	9605      	str	r6, [sp, #20]
9001b9e6:	d116      	bne.n	9001ba16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001b9e8:	f06f 0201 	mvn.w	r2, #1
9001b9ec:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b9f0:	fb02 fc07 	mul.w	ip, r2, r7
9001b9f4:	096a      	lsrs	r2, r5, #5
9001b9f6:	f026 0607 	bic.w	r6, r6, #7
9001b9fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b9fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ba02:	4316      	orrs	r6, r2
9001ba04:	432e      	orrs	r6, r5
9001ba06:	f824 600c 	strh.w	r6, [r4, ip]
9001ba0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ba0c:	3f01      	subs	r7, #1
9001ba0e:	4410      	add	r0, r2
9001ba10:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ba12:	4411      	add	r1, r2
9001ba14:	e77e      	b.n	9001b914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001ba16:	f06f 0601 	mvn.w	r6, #1
9001ba1a:	fa1f fa82 	uxth.w	sl, r2
9001ba1e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001ba22:	43d2      	mvns	r2, r2
9001ba24:	437e      	muls	r6, r7
9001ba26:	b2ed      	uxtb	r5, r5
9001ba28:	fb1c fc0a 	smulbb	ip, ip, sl
9001ba2c:	b2d2      	uxtb	r2, r2
9001ba2e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001ba32:	fb15 f50a 	smulbb	r5, r5, sl
9001ba36:	9602      	str	r6, [sp, #8]
9001ba38:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ba3c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ba40:	fb16 f60a 	smulbb	r6, r6, sl
9001ba44:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ba48:	fb0e ce02 	mla	lr, lr, r2, ip
9001ba4c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ba50:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ba54:	fa1f fe8e 	uxth.w	lr, lr
9001ba58:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001ba5c:	fa5f f888 	uxtb.w	r8, r8
9001ba60:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ba64:	fb08 5502 	mla	r5, r8, r2, r5
9001ba68:	f10e 0201 	add.w	r2, lr, #1
9001ba6c:	fa1f fc8c 	uxth.w	ip, ip
9001ba70:	b2ad      	uxth	r5, r5
9001ba72:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ba76:	9a02      	ldr	r2, [sp, #8]
9001ba78:	1c6e      	adds	r6, r5, #1
9001ba7a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001ba7e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001ba82:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ba86:	ea46 0e0e 	orr.w	lr, r6, lr
9001ba8a:	f10c 0601 	add.w	r6, ip, #1
9001ba8e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ba92:	0976      	lsrs	r6, r6, #5
9001ba94:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001ba98:	ea4e 0e06 	orr.w	lr, lr, r6
9001ba9c:	f824 e002 	strh.w	lr, [r4, r2]
9001baa0:	e7b3      	b.n	9001ba0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001baa2:	f04f 0800 	mov.w	r8, #0
9001baa6:	eba3 0208 	sub.w	r2, r3, r8
9001baaa:	2a00      	cmp	r2, #0
9001baac:	f77f af35 	ble.w	9001b91a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001bab0:	1402      	asrs	r2, r0, #16
9001bab2:	9e00      	ldr	r6, [sp, #0]
9001bab4:	140d      	asrs	r5, r1, #16
9001bab6:	fb06 2505 	mla	r5, r6, r5, r2
9001baba:	9e01      	ldr	r6, [sp, #4]
9001babc:	086a      	lsrs	r2, r5, #1
9001babe:	07ed      	lsls	r5, r5, #31
9001bac0:	5cb2      	ldrb	r2, [r6, r2]
9001bac2:	bf54      	ite	pl
9001bac4:	f002 020f 	andpl.w	r2, r2, #15
9001bac8:	1112      	asrmi	r2, r2, #4
9001baca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bace:	b2d2      	uxtb	r2, r2
9001bad0:	b1c2      	cbz	r2, 9001bb04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bad2:	9d04      	ldr	r5, [sp, #16]
9001bad4:	436a      	muls	r2, r5
9001bad6:	1c55      	adds	r5, r2, #1
9001bad8:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001badc:	4d2d      	ldr	r5, [pc, #180]	; (9001bb94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001bade:	1212      	asrs	r2, r2, #8
9001bae0:	682e      	ldr	r6, [r5, #0]
9001bae2:	2aff      	cmp	r2, #255	; 0xff
9001bae4:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001bae8:	d113      	bne.n	9001bb12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001baea:	0972      	lsrs	r2, r6, #5
9001baec:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001baf0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001baf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001baf8:	f025 0507 	bic.w	r5, r5, #7
9001bafc:	4315      	orrs	r5, r2
9001bafe:	4335      	orrs	r5, r6
9001bb00:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001bb04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bb06:	f108 0801 	add.w	r8, r8, #1
9001bb0a:	4410      	add	r0, r2
9001bb0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bb0e:	4411      	add	r1, r2
9001bb10:	e7c9      	b.n	9001baa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001bb12:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001bb16:	fa1f fa82 	uxth.w	sl, r2
9001bb1a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001bb1e:	43d2      	mvns	r2, r2
9001bb20:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bb24:	fb17 f70a 	smulbb	r7, r7, sl
9001bb28:	b2d2      	uxtb	r2, r2
9001bb2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bb2e:	b2f6      	uxtb	r6, r6
9001bb30:	b2ed      	uxtb	r5, r5
9001bb32:	fb0c 7c02 	mla	ip, ip, r2, r7
9001bb36:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bb3a:	fb16 f60a 	smulbb	r6, r6, sl
9001bb3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bb42:	fa1f fc8c 	uxth.w	ip, ip
9001bb46:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bb4a:	fb15 f50a 	smulbb	r5, r5, sl
9001bb4e:	fa5f fe8e 	uxtb.w	lr, lr
9001bb52:	fb0e 6602 	mla	r6, lr, r2, r6
9001bb56:	fb07 5702 	mla	r7, r7, r2, r5
9001bb5a:	f10c 0201 	add.w	r2, ip, #1
9001bb5e:	b2b6      	uxth	r6, r6
9001bb60:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001bb64:	1c75      	adds	r5, r6, #1
9001bb66:	b2bf      	uxth	r7, r7
9001bb68:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bb6c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001bb70:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bb74:	ea45 0c0c 	orr.w	ip, r5, ip
9001bb78:	1c7d      	adds	r5, r7, #1
9001bb7a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001bb7e:	096d      	lsrs	r5, r5, #5
9001bb80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bb84:	ea4c 0c05 	orr.w	ip, ip, r5
9001bb88:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001bb8c:	e7ba      	b.n	9001bb04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bb8e:	b007      	add	sp, #28
9001bb90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bb94:	24039714 	.word	0x24039714

9001bb98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb9c:	b087      	sub	sp, #28
9001bb9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bba2:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001beac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001bba6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001bba8:	9101      	str	r1, [sp, #4]
9001bbaa:	9205      	str	r2, [sp, #20]
9001bbac:	6841      	ldr	r1, [r0, #4]
9001bbae:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001bbb2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001bbb6:	fb01 2404 	mla	r4, r1, r4, r2
9001bbba:	6802      	ldr	r2, [r0, #0]
9001bbbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbc0:	f8db 2008 	ldr.w	r2, [fp, #8]
9001bbc4:	3201      	adds	r2, #1
9001bbc6:	f022 0201 	bic.w	r2, r2, #1
9001bbca:	9202      	str	r2, [sp, #8]
9001bbcc:	f8db 2000 	ldr.w	r2, [fp]
9001bbd0:	9203      	str	r2, [sp, #12]
9001bbd2:	9a01      	ldr	r2, [sp, #4]
9001bbd4:	2a00      	cmp	r2, #0
9001bbd6:	dc03      	bgt.n	9001bbe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001bbd8:	9a05      	ldr	r2, [sp, #20]
9001bbda:	2a00      	cmp	r2, #0
9001bbdc:	f340 8162 	ble.w	9001bea4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001bbe0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bbe2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001bbe6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bbea:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bbec:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001bbf0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bbf4:	2b00      	cmp	r3, #0
9001bbf6:	dd0e      	ble.n	9001bc16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001bbf8:	1402      	asrs	r2, r0, #16
9001bbfa:	d405      	bmi.n	9001bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbfc:	42ba      	cmp	r2, r7
9001bbfe:	da03      	bge.n	9001bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bc00:	140a      	asrs	r2, r1, #16
9001bc02:	d401      	bmi.n	9001bc08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bc04:	42b2      	cmp	r2, r6
9001bc06:	db07      	blt.n	9001bc18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001bc08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bc0a:	3b01      	subs	r3, #1
9001bc0c:	3402      	adds	r4, #2
9001bc0e:	4410      	add	r0, r2
9001bc10:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bc12:	4411      	add	r1, r2
9001bc14:	e7ee      	b.n	9001bbf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001bc16:	d017      	beq.n	9001bc48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001bc18:	1e5a      	subs	r2, r3, #1
9001bc1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001bc1c:	fb05 0502 	mla	r5, r5, r2, r0
9001bc20:	142d      	asrs	r5, r5, #16
9001bc22:	d409      	bmi.n	9001bc38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bc24:	42bd      	cmp	r5, r7
9001bc26:	da07      	bge.n	9001bc38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bc28:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001bc2a:	fb05 1202 	mla	r2, r5, r2, r1
9001bc2e:	1412      	asrs	r2, r2, #16
9001bc30:	d402      	bmi.n	9001bc38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bc32:	42b2      	cmp	r2, r6
9001bc34:	f2c0 80c3 	blt.w	9001bdbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001bc38:	2500      	movs	r5, #0
9001bc3a:	195a      	adds	r2, r3, r5
9001bc3c:	2a00      	cmp	r2, #0
9001bc3e:	dc3f      	bgt.n	9001bcc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001bc40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc44:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc48:	9b01      	ldr	r3, [sp, #4]
9001bc4a:	2b00      	cmp	r3, #0
9001bc4c:	f340 812a 	ble.w	9001bea4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001bc50:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc54:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bc56:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc5a:	eeb0 6a62 	vmov.f32	s12, s5
9001bc5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc62:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc6a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001bc6e:	eeb0 6a43 	vmov.f32	s12, s6
9001bc72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc76:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001bc7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc7e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc82:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc86:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bc8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bc8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bc92:	ee12 2a90 	vmov	r2, s5
9001bc96:	eef0 2a47 	vmov.f32	s5, s14
9001bc9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc9e:	ee13 2a10 	vmov	r2, s6
9001bca2:	9313      	str	r3, [sp, #76]	; 0x4c
9001bca4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bca6:	eeb0 3a67 	vmov.f32	s6, s15
9001bcaa:	fb92 f3f3 	sdiv	r3, r2, r3
9001bcae:	9314      	str	r3, [sp, #80]	; 0x50
9001bcb0:	9b01      	ldr	r3, [sp, #4]
9001bcb2:	9a05      	ldr	r2, [sp, #20]
9001bcb4:	3b01      	subs	r3, #1
9001bcb6:	9301      	str	r3, [sp, #4]
9001bcb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bcba:	bf08      	it	eq
9001bcbc:	4613      	moveq	r3, r2
9001bcbe:	e788      	b.n	9001bbd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001bcc0:	1406      	asrs	r6, r0, #16
9001bcc2:	d42c      	bmi.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bcc4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001bcc8:	42b2      	cmp	r2, r6
9001bcca:	dd28      	ble.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bccc:	140f      	asrs	r7, r1, #16
9001bcce:	d426      	bmi.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bcd0:	f8db 200c 	ldr.w	r2, [fp, #12]
9001bcd4:	42ba      	cmp	r2, r7
9001bcd6:	dd22      	ble.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bcd8:	9a02      	ldr	r2, [sp, #8]
9001bcda:	fb07 6602 	mla	r6, r7, r2, r6
9001bcde:	9f03      	ldr	r7, [sp, #12]
9001bce0:	0872      	lsrs	r2, r6, #1
9001bce2:	07f6      	lsls	r6, r6, #31
9001bce4:	5cba      	ldrb	r2, [r7, r2]
9001bce6:	bf54      	ite	pl
9001bce8:	f002 020f 	andpl.w	r2, r2, #15
9001bcec:	1112      	asrmi	r2, r2, #4
9001bcee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bcf2:	b2d2      	uxtb	r2, r2
9001bcf4:	2aff      	cmp	r2, #255	; 0xff
9001bcf6:	d118      	bne.n	9001bd2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001bcf8:	f06f 0601 	mvn.w	r6, #1
9001bcfc:	f8d8 2000 	ldr.w	r2, [r8]
9001bd00:	fb06 f705 	mul.w	r7, r6, r5
9001bd04:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001bd08:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001bd0c:	0956      	lsrs	r6, r2, #5
9001bd0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001bd12:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001bd16:	ea4c 0606 	orr.w	r6, ip, r6
9001bd1a:	4316      	orrs	r6, r2
9001bd1c:	53e6      	strh	r6, [r4, r7]
9001bd1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bd20:	3d01      	subs	r5, #1
9001bd22:	4410      	add	r0, r2
9001bd24:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bd26:	4411      	add	r1, r2
9001bd28:	e787      	b.n	9001bc3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001bd2a:	2a00      	cmp	r2, #0
9001bd2c:	d0f7      	beq.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bd2e:	f06f 0601 	mvn.w	r6, #1
9001bd32:	f8d8 c000 	ldr.w	ip, [r8]
9001bd36:	fa1f f982 	uxth.w	r9, r2
9001bd3a:	43d2      	mvns	r2, r2
9001bd3c:	436e      	muls	r6, r5
9001bd3e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001bd42:	b2d2      	uxtb	r2, r2
9001bd44:	f834 e006 	ldrh.w	lr, [r4, r6]
9001bd48:	fb1a fa09 	smulbb	sl, sl, r9
9001bd4c:	9604      	str	r6, [sp, #16]
9001bd4e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001bd52:	ea4f 272e 	mov.w	r7, lr, asr #8
9001bd56:	fb16 f609 	smulbb	r6, r6, r9
9001bd5a:	fa5f fc8c 	uxtb.w	ip, ip
9001bd5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bd62:	fb1c fc09 	smulbb	ip, ip, r9
9001bd66:	fb07 6702 	mla	r7, r7, r2, r6
9001bd6a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001bd6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bd72:	b2bf      	uxth	r7, r7
9001bd74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001bd78:	fa5f fe8e 	uxtb.w	lr, lr
9001bd7c:	fb06 a602 	mla	r6, r6, r2, sl
9001bd80:	fb0e cc02 	mla	ip, lr, r2, ip
9001bd84:	1c7a      	adds	r2, r7, #1
9001bd86:	b2b6      	uxth	r6, r6
9001bd88:	fa1f fc8c 	uxth.w	ip, ip
9001bd8c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bd90:	9a04      	ldr	r2, [sp, #16]
9001bd92:	f10c 0a01 	add.w	sl, ip, #1
9001bd96:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bd9a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001bd9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bda2:	ea4a 0707 	orr.w	r7, sl, r7
9001bda6:	f106 0a01 	add.w	sl, r6, #1
9001bdaa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bdae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bdb2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001bdb6:	ea47 070a 	orr.w	r7, r7, sl
9001bdba:	52a7      	strh	r7, [r4, r2]
9001bdbc:	e7af      	b.n	9001bd1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001bdbe:	f04f 0e00 	mov.w	lr, #0
9001bdc2:	eba3 020e 	sub.w	r2, r3, lr
9001bdc6:	2a00      	cmp	r2, #0
9001bdc8:	f77f af3a 	ble.w	9001bc40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001bdcc:	1402      	asrs	r2, r0, #16
9001bdce:	9e02      	ldr	r6, [sp, #8]
9001bdd0:	140d      	asrs	r5, r1, #16
9001bdd2:	fb06 2505 	mla	r5, r6, r5, r2
9001bdd6:	9e03      	ldr	r6, [sp, #12]
9001bdd8:	086a      	lsrs	r2, r5, #1
9001bdda:	07ed      	lsls	r5, r5, #31
9001bddc:	5cb2      	ldrb	r2, [r6, r2]
9001bdde:	bf54      	ite	pl
9001bde0:	f002 020f 	andpl.w	r2, r2, #15
9001bde4:	1112      	asrmi	r2, r2, #4
9001bde6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bdea:	b2d2      	uxtb	r2, r2
9001bdec:	2aff      	cmp	r2, #255	; 0xff
9001bdee:	d115      	bne.n	9001be1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001bdf0:	f8d8 5000 	ldr.w	r5, [r8]
9001bdf4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001bdf8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001bdfc:	096a      	lsrs	r2, r5, #5
9001bdfe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001be02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001be06:	4332      	orrs	r2, r6
9001be08:	432a      	orrs	r2, r5
9001be0a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001be0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001be10:	f10e 0e01 	add.w	lr, lr, #1
9001be14:	4410      	add	r0, r2
9001be16:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001be18:	4411      	add	r1, r2
9001be1a:	e7d2      	b.n	9001bdc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001be1c:	2a00      	cmp	r2, #0
9001be1e:	d0f6      	beq.n	9001be0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001be20:	f8d8 7000 	ldr.w	r7, [r8]
9001be24:	fa1f f982 	uxth.w	r9, r2
9001be28:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001be2c:	43d2      	mvns	r2, r2
9001be2e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001be32:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001be36:	ea4f 262c 	mov.w	r6, ip, asr #8
9001be3a:	fb15 f509 	smulbb	r5, r5, r9
9001be3e:	b2d2      	uxtb	r2, r2
9001be40:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001be44:	b2ff      	uxtb	r7, r7
9001be46:	fb1a fa09 	smulbb	sl, sl, r9
9001be4a:	fb06 5602 	mla	r6, r6, r2, r5
9001be4e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001be52:	fb17 f709 	smulbb	r7, r7, r9
9001be56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001be5a:	b2b6      	uxth	r6, r6
9001be5c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001be60:	fa5f fc8c 	uxtb.w	ip, ip
9001be64:	fb05 a502 	mla	r5, r5, r2, sl
9001be68:	fb0c 7702 	mla	r7, ip, r2, r7
9001be6c:	1c72      	adds	r2, r6, #1
9001be6e:	b2ad      	uxth	r5, r5
9001be70:	b2bf      	uxth	r7, r7
9001be72:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001be76:	f107 0a01 	add.w	sl, r7, #1
9001be7a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001be7e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001be82:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001be86:	ea4a 0606 	orr.w	r6, sl, r6
9001be8a:	f105 0a01 	add.w	sl, r5, #1
9001be8e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001be92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001be96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001be9a:	ea46 060a 	orr.w	r6, r6, sl
9001be9e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001bea2:	e7b4      	b.n	9001be0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001bea4:	b007      	add	sp, #28
9001bea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001beaa:	bf00      	nop
9001beac:	24039714 	.word	0x24039714

9001beb0 <_ZN8touchgfx8LCD16bppD1Ev>:
9001beb0:	4770      	bx	lr

9001beb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001beb2:	4770      	bx	lr

9001beb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001beb4:	4770      	bx	lr

9001beb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001beb6:	4770      	bx	lr

9001beb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001beb8:	4770      	bx	lr

9001beba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001beba:	4770      	bx	lr

9001bebc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001bebc:	4770      	bx	lr

9001bebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001bebe:	4770      	bx	lr

9001bec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001bec0:	4770      	bx	lr

9001bec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001bec2:	4770      	bx	lr

9001bec4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001bec4:	4770      	bx	lr

9001bec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001bec6:	4770      	bx	lr

9001bec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001bec8:	4770      	bx	lr

9001beca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001beca:	4770      	bx	lr

9001becc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001becc:	4770      	bx	lr

9001bece <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001bece:	4770      	bx	lr

9001bed0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001bed0:	4770      	bx	lr

9001bed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001bed2:	4770      	bx	lr

9001bed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001bed4:	4770      	bx	lr

9001bed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001bed6:	4770      	bx	lr

9001bed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001bed8:	4770      	bx	lr

9001beda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001beda:	4770      	bx	lr

9001bedc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001bedc:	4770      	bx	lr

9001bede <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001bede:	4770      	bx	lr

9001bee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001bee0:	4770      	bx	lr

9001bee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001bee2:	4770      	bx	lr

9001bee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001bee4:	4770      	bx	lr

9001bee6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001bee6:	4770      	bx	lr

9001bee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001bee8:	4770      	bx	lr

9001beea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001beea:	4770      	bx	lr

9001beec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001beec:	4770      	bx	lr

9001beee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001beee:	4770      	bx	lr

9001bef0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001bef0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001bef4:	b088      	sub	sp, #32
9001bef6:	4606      	mov	r6, r0
9001bef8:	4688      	mov	r8, r1
9001befa:	4691      	mov	r9, r2
9001befc:	ac08      	add	r4, sp, #32
9001befe:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001bf02:	4620      	mov	r0, r4
9001bf04:	f7fd fc64 	bl	900197d0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001bf08:	6833      	ldr	r3, [r6, #0]
9001bf0a:	4605      	mov	r5, r0
9001bf0c:	4620      	mov	r0, r4
9001bf0e:	699f      	ldr	r7, [r3, #24]
9001bf10:	f7fd fb72 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001bf14:	4682      	mov	sl, r0
9001bf16:	4620      	mov	r0, r4
9001bf18:	f7fd fba2 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001bf1c:	9500      	str	r5, [sp, #0]
9001bf1e:	464b      	mov	r3, r9
9001bf20:	4642      	mov	r2, r8
9001bf22:	4631      	mov	r1, r6
9001bf24:	e9cd a001 	strd	sl, r0, [sp, #4]
9001bf28:	a806      	add	r0, sp, #24
9001bf2a:	47b8      	blx	r7
9001bf2c:	4628      	mov	r0, r5
9001bf2e:	b008      	add	sp, #32
9001bf30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001bf34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001bf34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001bf38:	2300      	movs	r3, #0
9001bf3a:	9300      	str	r3, [sp, #0]
9001bf3c:	4b3d      	ldr	r3, [pc, #244]	; (9001c034 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001bf3e:	781b      	ldrb	r3, [r3, #0]
9001bf40:	2b00      	cmp	r3, #0
9001bf42:	d137      	bne.n	9001bfb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001bf44:	4a3c      	ldr	r2, [pc, #240]	; (9001c038 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001bf46:	f9b2 2000 	ldrsh.w	r2, [r2]
9001bf4a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001bf4e:	2b00      	cmp	r3, #0
9001bf50:	d132      	bne.n	9001bfb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001bf52:	4b3a      	ldr	r3, [pc, #232]	; (9001c03c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001bf54:	f9b3 3000 	ldrsh.w	r3, [r3]
9001bf58:	ac02      	add	r4, sp, #8
9001bf5a:	6808      	ldr	r0, [r1, #0]
9001bf5c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001bf60:	ab02      	add	r3, sp, #8
9001bf62:	6849      	ldr	r1, [r1, #4]
9001bf64:	4d36      	ldr	r5, [pc, #216]	; (9001c040 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001bf66:	c303      	stmia	r3!, {r0, r1}
9001bf68:	4669      	mov	r1, sp
9001bf6a:	4620      	mov	r0, r4
9001bf6c:	f7fa f828 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bf70:	4668      	mov	r0, sp
9001bf72:	f7f9 ffe1 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bf76:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001bf7a:	f8bd 2000 	ldrh.w	r2, [sp]
9001bf7e:	462f      	mov	r7, r5
9001bf80:	6828      	ldr	r0, [r5, #0]
9001bf82:	4413      	add	r3, r2
9001bf84:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001bf88:	f8ad 3008 	strh.w	r3, [sp, #8]
9001bf8c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001bf90:	4413      	add	r3, r2
9001bf92:	f8ad 300a 	strh.w	r3, [sp, #10]
9001bf96:	6803      	ldr	r3, [r0, #0]
9001bf98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001bf9a:	4798      	blx	r3
9001bf9c:	f010 0f01 	tst.w	r0, #1
9001bfa0:	d00c      	beq.n	9001bfbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001bfa2:	6828      	ldr	r0, [r5, #0]
9001bfa4:	6803      	ldr	r3, [r0, #0]
9001bfa6:	e894 0006 	ldmia.w	r4, {r1, r2}
9001bfaa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001bfac:	4798      	blx	r3
9001bfae:	b004      	add	sp, #16
9001bfb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001bfb4:	4a21      	ldr	r2, [pc, #132]	; (9001c03c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001bfb6:	e7c6      	b.n	9001bf46 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001bfb8:	4b1f      	ldr	r3, [pc, #124]	; (9001c038 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001bfba:	e7cb      	b.n	9001bf54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001bfbc:	6838      	ldr	r0, [r7, #0]
9001bfbe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001bfc2:	6803      	ldr	r3, [r0, #0]
9001bfc4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001bfc8:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001bfcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001bfce:	4798      	blx	r3
9001bfd0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001bfd4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001bfd8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001bfdc:	fb16 3602 	smlabb	r6, r6, r2, r3
9001bfe0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001bfe4:	6838      	ldr	r0, [r7, #0]
9001bfe6:	6803      	ldr	r3, [r0, #0]
9001bfe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bfea:	4798      	blx	r3
9001bfec:	4a12      	ldr	r2, [pc, #72]	; (9001c038 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001bfee:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001bff2:	8813      	ldrh	r3, [r2, #0]
9001bff4:	4691      	mov	r9, r2
9001bff6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001bffa:	435d      	muls	r5, r3
9001bffc:	fb03 1404 	mla	r4, r3, r4, r1
9001c000:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c004:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c008:	6838      	ldr	r0, [r7, #0]
9001c00a:	42ac      	cmp	r4, r5
9001c00c:	6803      	ldr	r3, [r0, #0]
9001c00e:	d20e      	bcs.n	9001c02e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001c010:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001c014:	4632      	mov	r2, r6
9001c016:	4643      	mov	r3, r8
9001c018:	4621      	mov	r1, r4
9001c01a:	47d0      	blx	sl
9001c01c:	f8b9 3000 	ldrh.w	r3, [r9]
9001c020:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c024:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001c028:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c02c:	e7ec      	b.n	9001c008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001c02e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c030:	4798      	blx	r3
9001c032:	e7bc      	b.n	9001bfae <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001c034:	240396fc 	.word	0x240396fc
9001c038:	240396fe 	.word	0x240396fe
9001c03c:	24039700 	.word	0x24039700
9001c040:	24039704 	.word	0x24039704

9001c044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001c044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c048:	b08b      	sub	sp, #44	; 0x2c
9001c04a:	460f      	mov	r7, r1
9001c04c:	4616      	mov	r6, r2
9001c04e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001c052:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001c056:	f1bb 0f00 	cmp.w	fp, #0
9001c05a:	d04a      	beq.n	9001c0f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c05c:	6810      	ldr	r0, [r2, #0]
9001c05e:	ad06      	add	r5, sp, #24
9001c060:	6851      	ldr	r1, [r2, #4]
9001c062:	c503      	stmia	r5!, {r0, r1}
9001c064:	6818      	ldr	r0, [r3, #0]
9001c066:	ad08      	add	r5, sp, #32
9001c068:	6859      	ldr	r1, [r3, #4]
9001c06a:	c503      	stmia	r5!, {r0, r1}
9001c06c:	a806      	add	r0, sp, #24
9001c06e:	f7f9 ff63 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c072:	4631      	mov	r1, r6
9001c074:	a808      	add	r0, sp, #32
9001c076:	f7f9 ffa3 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c07a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001c07e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001c082:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001c086:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001c08a:	fb16 2103 	smlabb	r1, r6, r3, r2
9001c08e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001c092:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001c096:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001c09a:	4f5f      	ldr	r7, [pc, #380]	; (9001c218 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c09c:	440a      	add	r2, r1
9001c09e:	6838      	ldr	r0, [r7, #0]
9001c0a0:	46b9      	mov	r9, r7
9001c0a2:	f8ad 2020 	strh.w	r2, [sp, #32]
9001c0a6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001c0aa:	4413      	add	r3, r2
9001c0ac:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001c0b0:	6803      	ldr	r3, [r0, #0]
9001c0b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c0b4:	4798      	blx	r3
9001c0b6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c0ba:	d11d      	bne.n	9001c0f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001c0bc:	b9fc      	cbnz	r4, 9001c0fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c0be:	f010 0f01 	tst.w	r0, #1
9001c0c2:	d01c      	beq.n	9001c0fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c0c4:	f8d9 0000 	ldr.w	r0, [r9]
9001c0c8:	2700      	movs	r7, #0
9001c0ca:	b2ad      	uxth	r5, r5
9001c0cc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001c0d0:	6801      	ldr	r1, [r0, #0]
9001c0d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001c0d6:	f8cd b00c 	str.w	fp, [sp, #12]
9001c0da:	9501      	str	r5, [sp, #4]
9001c0dc:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001c0e0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001c0e4:	9402      	str	r4, [sp, #8]
9001c0e6:	fa1f f488 	uxth.w	r4, r8
9001c0ea:	9400      	str	r4, [sp, #0]
9001c0ec:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001c0ee:	4631      	mov	r1, r6
9001c0f0:	47a0      	blx	r4
9001c0f2:	b00b      	add	sp, #44	; 0x2c
9001c0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c0f8:	f010 0f04 	tst.w	r0, #4
9001c0fc:	e7e1      	b.n	9001c0c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001c0fe:	f8d9 0000 	ldr.w	r0, [r9]
9001c102:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001c106:	6803      	ldr	r3, [r0, #0]
9001c108:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c10a:	4798      	blx	r3
9001c10c:	4b43      	ldr	r3, [pc, #268]	; (9001c21c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001c10e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001c112:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c116:	881a      	ldrh	r2, [r3, #0]
9001c118:	469a      	mov	sl, r3
9001c11a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001c11e:	fb05 f502 	mul.w	r5, r5, r2
9001c122:	fb02 1404 	mla	r4, r2, r4, r1
9001c126:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c12a:	d059      	beq.n	9001c1e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001c12c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001c130:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c134:	fa1f f28b 	uxth.w	r2, fp
9001c138:	469e      	mov	lr, r3
9001c13a:	fa1f f989 	uxth.w	r9, r9
9001c13e:	42ac      	cmp	r4, r5
9001c140:	d264      	bcs.n	9001c20c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c142:	eb04 0a07 	add.w	sl, r4, r7
9001c146:	4554      	cmp	r4, sl
9001c148:	d23d      	bcs.n	9001c1c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001c14a:	8821      	ldrh	r1, [r4, #0]
9001c14c:	f836 3b02 	ldrh.w	r3, [r6], #2
9001c150:	1208      	asrs	r0, r1, #8
9001c152:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c156:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c15a:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001c15e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c162:	00c9      	lsls	r1, r1, #3
9001c164:	fb10 f009 	smulbb	r0, r0, r9
9001c168:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001c16c:	b2c9      	uxtb	r1, r1
9001c16e:	fb0c 0c02 	mla	ip, ip, r2, r0
9001c172:	10d8      	asrs	r0, r3, #3
9001c174:	fb1b fb09 	smulbb	fp, fp, r9
9001c178:	00db      	lsls	r3, r3, #3
9001c17a:	fa1f fc8c 	uxth.w	ip, ip
9001c17e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001c182:	fb11 f109 	smulbb	r1, r1, r9
9001c186:	b2db      	uxtb	r3, r3
9001c188:	fb00 b002 	mla	r0, r0, r2, fp
9001c18c:	f10c 0b01 	add.w	fp, ip, #1
9001c190:	fb03 1302 	mla	r3, r3, r2, r1
9001c194:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001c198:	b29b      	uxth	r3, r3
9001c19a:	b280      	uxth	r0, r0
9001c19c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001c1a0:	f103 0c01 	add.w	ip, r3, #1
9001c1a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001c1a8:	1c43      	adds	r3, r0, #1
9001c1aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001c1ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c1b2:	0940      	lsrs	r0, r0, #5
9001c1b4:	ea4c 0c0b 	orr.w	ip, ip, fp
9001c1b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c1bc:	ea4c 0c00 	orr.w	ip, ip, r0
9001c1c0:	f824 cb02 	strh.w	ip, [r4], #2
9001c1c4:	e7bf      	b.n	9001c146 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001c1c6:	f8be 3000 	ldrh.w	r3, [lr]
9001c1ca:	eba3 0308 	sub.w	r3, r3, r8
9001c1ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c1d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c1d6:	eba3 0308 	sub.w	r3, r3, r8
9001c1da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c1de:	e7ae      	b.n	9001c13e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001c1e0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c1e4:	f8d9 0000 	ldr.w	r0, [r9]
9001c1e8:	42ac      	cmp	r4, r5
9001c1ea:	6803      	ldr	r3, [r0, #0]
9001c1ec:	d20e      	bcs.n	9001c20c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c1ee:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001c1f2:	4632      	mov	r2, r6
9001c1f4:	463b      	mov	r3, r7
9001c1f6:	4621      	mov	r1, r4
9001c1f8:	47c0      	blx	r8
9001c1fa:	f8ba 3000 	ldrh.w	r3, [sl]
9001c1fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c202:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c206:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c20a:	e7eb      	b.n	9001c1e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001c20c:	4b02      	ldr	r3, [pc, #8]	; (9001c218 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c20e:	6818      	ldr	r0, [r3, #0]
9001c210:	6803      	ldr	r3, [r0, #0]
9001c212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c214:	4798      	blx	r3
9001c216:	e76c      	b.n	9001c0f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c218:	24039704 	.word	0x24039704
9001c21c:	240396fe 	.word	0x240396fe

9001c220 <_ZN8touchgfx8LCD16bppD0Ev>:
9001c220:	b510      	push	{r4, lr}
9001c222:	4604      	mov	r4, r0
9001c224:	2184      	movs	r1, #132	; 0x84
9001c226:	f00b f97b 	bl	90027520 <_ZdlPvj>
9001c22a:	4620      	mov	r0, r4
9001c22c:	bd10      	pop	{r4, pc}

9001c22e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001c22e:	b510      	push	{r4, lr}
9001c230:	4604      	mov	r4, r0
9001c232:	2104      	movs	r1, #4
9001c234:	f00b f974 	bl	90027520 <_ZdlPvj>
9001c238:	4620      	mov	r0, r4
9001c23a:	bd10      	pop	{r4, pc}

9001c23c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001c23c:	b510      	push	{r4, lr}
9001c23e:	4604      	mov	r4, r0
9001c240:	2104      	movs	r1, #4
9001c242:	f00b f96d 	bl	90027520 <_ZdlPvj>
9001c246:	4620      	mov	r0, r4
9001c248:	bd10      	pop	{r4, pc}

9001c24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001c24a:	b510      	push	{r4, lr}
9001c24c:	4604      	mov	r4, r0
9001c24e:	f640 0144 	movw	r1, #2116	; 0x844
9001c252:	f00b f965 	bl	90027520 <_ZdlPvj>
9001c256:	4620      	mov	r0, r4
9001c258:	bd10      	pop	{r4, pc}

9001c25a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c25a:	b510      	push	{r4, lr}
9001c25c:	4604      	mov	r4, r0
9001c25e:	2104      	movs	r1, #4
9001c260:	f00b f95e 	bl	90027520 <_ZdlPvj>
9001c264:	4620      	mov	r0, r4
9001c266:	bd10      	pop	{r4, pc}

9001c268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c268:	b510      	push	{r4, lr}
9001c26a:	4604      	mov	r4, r0
9001c26c:	2104      	movs	r1, #4
9001c26e:	f00b f957 	bl	90027520 <_ZdlPvj>
9001c272:	4620      	mov	r0, r4
9001c274:	bd10      	pop	{r4, pc}

9001c276 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c276:	b510      	push	{r4, lr}
9001c278:	4604      	mov	r4, r0
9001c27a:	2104      	movs	r1, #4
9001c27c:	f00b f950 	bl	90027520 <_ZdlPvj>
9001c280:	4620      	mov	r0, r4
9001c282:	bd10      	pop	{r4, pc}

9001c284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c284:	b510      	push	{r4, lr}
9001c286:	4604      	mov	r4, r0
9001c288:	2104      	movs	r1, #4
9001c28a:	f00b f949 	bl	90027520 <_ZdlPvj>
9001c28e:	4620      	mov	r0, r4
9001c290:	bd10      	pop	{r4, pc}

9001c292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c292:	b510      	push	{r4, lr}
9001c294:	4604      	mov	r4, r0
9001c296:	2104      	movs	r1, #4
9001c298:	f00b f942 	bl	90027520 <_ZdlPvj>
9001c29c:	4620      	mov	r0, r4
9001c29e:	bd10      	pop	{r4, pc}

9001c2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001c2a0:	b510      	push	{r4, lr}
9001c2a2:	4604      	mov	r4, r0
9001c2a4:	2104      	movs	r1, #4
9001c2a6:	f00b f93b 	bl	90027520 <_ZdlPvj>
9001c2aa:	4620      	mov	r0, r4
9001c2ac:	bd10      	pop	{r4, pc}

9001c2ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c2ae:	b510      	push	{r4, lr}
9001c2b0:	4604      	mov	r4, r0
9001c2b2:	2104      	movs	r1, #4
9001c2b4:	f00b f934 	bl	90027520 <_ZdlPvj>
9001c2b8:	4620      	mov	r0, r4
9001c2ba:	bd10      	pop	{r4, pc}

9001c2bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001c2bc:	b510      	push	{r4, lr}
9001c2be:	4604      	mov	r4, r0
9001c2c0:	2104      	movs	r1, #4
9001c2c2:	f00b f92d 	bl	90027520 <_ZdlPvj>
9001c2c6:	4620      	mov	r0, r4
9001c2c8:	bd10      	pop	{r4, pc}

9001c2ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c2ca:	b510      	push	{r4, lr}
9001c2cc:	4604      	mov	r4, r0
9001c2ce:	2104      	movs	r1, #4
9001c2d0:	f00b f926 	bl	90027520 <_ZdlPvj>
9001c2d4:	4620      	mov	r0, r4
9001c2d6:	bd10      	pop	{r4, pc}

9001c2d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c2d8:	b510      	push	{r4, lr}
9001c2da:	4604      	mov	r4, r0
9001c2dc:	2104      	movs	r1, #4
9001c2de:	f00b f91f 	bl	90027520 <_ZdlPvj>
9001c2e2:	4620      	mov	r0, r4
9001c2e4:	bd10      	pop	{r4, pc}

9001c2e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c2e6:	b510      	push	{r4, lr}
9001c2e8:	4604      	mov	r4, r0
9001c2ea:	2104      	movs	r1, #4
9001c2ec:	f00b f918 	bl	90027520 <_ZdlPvj>
9001c2f0:	4620      	mov	r0, r4
9001c2f2:	bd10      	pop	{r4, pc}

9001c2f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c2f4:	b510      	push	{r4, lr}
9001c2f6:	4604      	mov	r4, r0
9001c2f8:	2104      	movs	r1, #4
9001c2fa:	f00b f911 	bl	90027520 <_ZdlPvj>
9001c2fe:	4620      	mov	r0, r4
9001c300:	bd10      	pop	{r4, pc}

9001c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c302:	b510      	push	{r4, lr}
9001c304:	4604      	mov	r4, r0
9001c306:	2104      	movs	r1, #4
9001c308:	f00b f90a 	bl	90027520 <_ZdlPvj>
9001c30c:	4620      	mov	r0, r4
9001c30e:	bd10      	pop	{r4, pc}

9001c310 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c310:	b510      	push	{r4, lr}
9001c312:	4604      	mov	r4, r0
9001c314:	2104      	movs	r1, #4
9001c316:	f00b f903 	bl	90027520 <_ZdlPvj>
9001c31a:	4620      	mov	r0, r4
9001c31c:	bd10      	pop	{r4, pc}

9001c31e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c31e:	b510      	push	{r4, lr}
9001c320:	4604      	mov	r4, r0
9001c322:	2104      	movs	r1, #4
9001c324:	f00b f8fc 	bl	90027520 <_ZdlPvj>
9001c328:	4620      	mov	r0, r4
9001c32a:	bd10      	pop	{r4, pc}

9001c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c32c:	b510      	push	{r4, lr}
9001c32e:	4604      	mov	r4, r0
9001c330:	2104      	movs	r1, #4
9001c332:	f00b f8f5 	bl	90027520 <_ZdlPvj>
9001c336:	4620      	mov	r0, r4
9001c338:	bd10      	pop	{r4, pc}

9001c33a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c33a:	b510      	push	{r4, lr}
9001c33c:	4604      	mov	r4, r0
9001c33e:	2104      	movs	r1, #4
9001c340:	f00b f8ee 	bl	90027520 <_ZdlPvj>
9001c344:	4620      	mov	r0, r4
9001c346:	bd10      	pop	{r4, pc}

9001c348 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c348:	b510      	push	{r4, lr}
9001c34a:	4604      	mov	r4, r0
9001c34c:	2104      	movs	r1, #4
9001c34e:	f00b f8e7 	bl	90027520 <_ZdlPvj>
9001c352:	4620      	mov	r0, r4
9001c354:	bd10      	pop	{r4, pc}

9001c356 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c356:	b510      	push	{r4, lr}
9001c358:	4604      	mov	r4, r0
9001c35a:	2104      	movs	r1, #4
9001c35c:	f00b f8e0 	bl	90027520 <_ZdlPvj>
9001c360:	4620      	mov	r0, r4
9001c362:	bd10      	pop	{r4, pc}

9001c364 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c364:	b510      	push	{r4, lr}
9001c366:	4604      	mov	r4, r0
9001c368:	2104      	movs	r1, #4
9001c36a:	f00b f8d9 	bl	90027520 <_ZdlPvj>
9001c36e:	4620      	mov	r0, r4
9001c370:	bd10      	pop	{r4, pc}

9001c372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c372:	b510      	push	{r4, lr}
9001c374:	4604      	mov	r4, r0
9001c376:	2104      	movs	r1, #4
9001c378:	f00b f8d2 	bl	90027520 <_ZdlPvj>
9001c37c:	4620      	mov	r0, r4
9001c37e:	bd10      	pop	{r4, pc}

9001c380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c380:	b510      	push	{r4, lr}
9001c382:	4604      	mov	r4, r0
9001c384:	2104      	movs	r1, #4
9001c386:	f00b f8cb 	bl	90027520 <_ZdlPvj>
9001c38a:	4620      	mov	r0, r4
9001c38c:	bd10      	pop	{r4, pc}

9001c38e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c38e:	b510      	push	{r4, lr}
9001c390:	4604      	mov	r4, r0
9001c392:	2104      	movs	r1, #4
9001c394:	f00b f8c4 	bl	90027520 <_ZdlPvj>
9001c398:	4620      	mov	r0, r4
9001c39a:	bd10      	pop	{r4, pc}

9001c39c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c39c:	b510      	push	{r4, lr}
9001c39e:	4604      	mov	r4, r0
9001c3a0:	2104      	movs	r1, #4
9001c3a2:	f00b f8bd 	bl	90027520 <_ZdlPvj>
9001c3a6:	4620      	mov	r0, r4
9001c3a8:	bd10      	pop	{r4, pc}

9001c3aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001c3aa:	b510      	push	{r4, lr}
9001c3ac:	4604      	mov	r4, r0
9001c3ae:	2104      	movs	r1, #4
9001c3b0:	f00b f8b6 	bl	90027520 <_ZdlPvj>
9001c3b4:	4620      	mov	r0, r4
9001c3b6:	bd10      	pop	{r4, pc}

9001c3b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001c3b8:	b510      	push	{r4, lr}
9001c3ba:	4604      	mov	r4, r0
9001c3bc:	2104      	movs	r1, #4
9001c3be:	f00b f8af 	bl	90027520 <_ZdlPvj>
9001c3c2:	4620      	mov	r0, r4
9001c3c4:	bd10      	pop	{r4, pc}

9001c3c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001c3c6:	b510      	push	{r4, lr}
9001c3c8:	4604      	mov	r4, r0
9001c3ca:	2104      	movs	r1, #4
9001c3cc:	f00b f8a8 	bl	90027520 <_ZdlPvj>
9001c3d0:	4620      	mov	r0, r4
9001c3d2:	bd10      	pop	{r4, pc}

9001c3d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001c3d4:	b510      	push	{r4, lr}
9001c3d6:	4604      	mov	r4, r0
9001c3d8:	2104      	movs	r1, #4
9001c3da:	f00b f8a1 	bl	90027520 <_ZdlPvj>
9001c3de:	4620      	mov	r0, r4
9001c3e0:	bd10      	pop	{r4, pc}
	...

9001c3e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c3e8:	b08f      	sub	sp, #60	; 0x3c
9001c3ea:	461c      	mov	r4, r3
9001c3ec:	9205      	str	r2, [sp, #20]
9001c3ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c3f2:	9100      	str	r1, [sp, #0]
9001c3f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001c3f6:	9201      	str	r2, [sp, #4]
9001c3f8:	2a00      	cmp	r2, #0
9001c3fa:	f000 8116 	beq.w	9001c62a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001c3fe:	6820      	ldr	r0, [r4, #0]
9001c400:	aa0a      	add	r2, sp, #40	; 0x28
9001c402:	6861      	ldr	r1, [r4, #4]
9001c404:	c203      	stmia	r2!, {r0, r1}
9001c406:	6818      	ldr	r0, [r3, #0]
9001c408:	aa0c      	add	r2, sp, #48	; 0x30
9001c40a:	6859      	ldr	r1, [r3, #4]
9001c40c:	c203      	stmia	r2!, {r0, r1}
9001c40e:	a80a      	add	r0, sp, #40	; 0x28
9001c410:	f7f9 fd92 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c414:	4621      	mov	r1, r4
9001c416:	a80c      	add	r0, sp, #48	; 0x30
9001c418:	f7f9 fdd2 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c41c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c420:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001c424:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001c428:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001c42c:	bfdb      	ittet	le
9001c42e:	b2b3      	uxthle	r3, r6
9001c430:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001c434:	2301      	movgt	r3, #1
9001c436:	fb92 f3f3 	sdivle	r3, r2, r3
9001c43a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c43e:	441d      	add	r5, r3
9001c440:	fb92 f1f3 	sdiv	r1, r2, r3
9001c444:	fa1f fc81 	uxth.w	ip, r1
9001c448:	3d01      	subs	r5, #1
9001c44a:	fb0c 2413 	mls	r4, ip, r3, r2
9001c44e:	4661      	mov	r1, ip
9001c450:	fb14 f406 	smulbb	r4, r4, r6
9001c454:	4404      	add	r4, r0
9001c456:	fb95 f5f3 	sdiv	r5, r5, r3
9001c45a:	b2a4      	uxth	r4, r4
9001c45c:	b131      	cbz	r1, 9001c46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001c45e:	9b05      	ldr	r3, [sp, #20]
9001c460:	9900      	ldr	r1, [sp, #0]
9001c462:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001c466:	ba1b      	rev	r3, r3
9001c468:	4419      	add	r1, r3
9001c46a:	9100      	str	r1, [sp, #0]
9001c46c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001c470:	b2ad      	uxth	r5, r5
9001c472:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001c476:	4418      	add	r0, r3
9001c478:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c47c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001c480:	00ad      	lsls	r5, r5, #2
9001c482:	441a      	add	r2, r3
9001c484:	4b6a      	ldr	r3, [pc, #424]	; (9001c630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c486:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001c48a:	6818      	ldr	r0, [r3, #0]
9001c48c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001c490:	6803      	ldr	r3, [r0, #0]
9001c492:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c494:	4798      	blx	r3
9001c496:	4967      	ldr	r1, [pc, #412]	; (9001c634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001c498:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c49c:	2c00      	cmp	r4, #0
9001c49e:	880b      	ldrh	r3, [r1, #0]
9001c4a0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001c4a4:	bf0c      	ite	eq
9001c4a6:	46c6      	moveq	lr, r8
9001c4a8:	f04f 0e00 	movne.w	lr, #0
9001c4ac:	9109      	str	r1, [sp, #36]	; 0x24
9001c4ae:	fb03 c202 	mla	r2, r3, r2, ip
9001c4b2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c4b6:	4373      	muls	r3, r6
9001c4b8:	fa1f fe8e 	uxth.w	lr, lr
9001c4bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c4c0:	9103      	str	r1, [sp, #12]
9001c4c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c4c6:	9306      	str	r3, [sp, #24]
9001c4c8:	1d2b      	adds	r3, r5, #4
9001c4ca:	9307      	str	r3, [sp, #28]
9001c4cc:	9b01      	ldr	r3, [sp, #4]
9001c4ce:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001c4d2:	2300      	movs	r3, #0
9001c4d4:	b292      	uxth	r2, r2
9001c4d6:	9302      	str	r3, [sp, #8]
9001c4d8:	9204      	str	r2, [sp, #16]
9001c4da:	9a06      	ldr	r2, [sp, #24]
9001c4dc:	4282      	cmp	r2, r0
9001c4de:	f240 809f 	bls.w	9001c620 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001c4e2:	b963      	cbnz	r3, 9001c4fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c4e4:	9b00      	ldr	r3, [sp, #0]
9001c4e6:	781a      	ldrb	r2, [r3, #0]
9001c4e8:	0993      	lsrs	r3, r2, #6
9001c4ea:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001c4ee:	9202      	str	r2, [sp, #8]
9001c4f0:	1e5a      	subs	r2, r3, #1
9001c4f2:	2a02      	cmp	r2, #2
9001c4f4:	d815      	bhi.n	9001c522 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001c4f6:	9a00      	ldr	r2, [sp, #0]
9001c4f8:	b29b      	uxth	r3, r3
9001c4fa:	3201      	adds	r2, #1
9001c4fc:	9200      	str	r2, [sp, #0]
9001c4fe:	b1b4      	cbz	r4, 9001c52e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001c500:	429c      	cmp	r4, r3
9001c502:	bf91      	iteee	ls
9001c504:	1b1c      	subls	r4, r3, r4
9001c506:	1ae4      	subhi	r4, r4, r3
9001c508:	4671      	movhi	r1, lr
9001c50a:	f04f 0a00 	movhi.w	sl, #0
9001c50e:	bf9b      	ittet	ls
9001c510:	fa1f fa84 	uxthls.w	sl, r4
9001c514:	2400      	movls	r4, #0
9001c516:	b2a4      	uxthhi	r4, r4
9001c518:	fa1f f188 	uxthls.w	r1, r8
9001c51c:	4653      	mov	r3, sl
9001c51e:	468e      	mov	lr, r1
9001c520:	e7db      	b.n	9001c4da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001c522:	9a00      	ldr	r2, [sp, #0]
9001c524:	9b00      	ldr	r3, [sp, #0]
9001c526:	3202      	adds	r2, #2
9001c528:	785b      	ldrb	r3, [r3, #1]
9001c52a:	9200      	str	r2, [sp, #0]
9001c52c:	e7e7      	b.n	9001c4fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001c52e:	2202      	movs	r2, #2
9001c530:	9907      	ldr	r1, [sp, #28]
9001c532:	4573      	cmp	r3, lr
9001c534:	4615      	mov	r5, r2
9001c536:	9a02      	ldr	r2, [sp, #8]
9001c538:	bf24      	itt	cs
9001c53a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001c53e:	46f1      	movcs	r9, lr
9001c540:	fb15 1202 	smlabb	r2, r5, r2, r1
9001c544:	9905      	ldr	r1, [sp, #20]
9001c546:	bf34      	ite	cc
9001c548:	4699      	movcc	r9, r3
9001c54a:	fa1f fa8a 	uxthcs.w	sl, sl
9001c54e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001c552:	bf38      	it	cc
9001c554:	ebae 0103 	subcc.w	r1, lr, r3
9001c558:	9a01      	ldr	r2, [sp, #4]
9001c55a:	bf2e      	itee	cs
9001c55c:	4621      	movcs	r1, r4
9001c55e:	b289      	uxthcc	r1, r1
9001c560:	46a2      	movcc	sl, r4
9001c562:	2aff      	cmp	r2, #255	; 0xff
9001c564:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001c568:	d105      	bne.n	9001c576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001c56a:	4481      	add	r9, r0
9001c56c:	4581      	cmp	r9, r0
9001c56e:	d045      	beq.n	9001c5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c570:	f820 cb02 	strh.w	ip, [r0], #2
9001c574:	e7fa      	b.n	9001c56c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001c576:	ea4f 222c 	mov.w	r2, ip, asr #8
9001c57a:	9d03      	ldr	r5, [sp, #12]
9001c57c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001c580:	4481      	add	r9, r0
9001c582:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c586:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001c58a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001c58e:	fa5f fc8c 	uxtb.w	ip, ip
9001c592:	436a      	muls	r2, r5
9001c594:	fb0b fb05 	mul.w	fp, fp, r5
9001c598:	fb0c fc05 	mul.w	ip, ip, r5
9001c59c:	9208      	str	r2, [sp, #32]
9001c59e:	4581      	cmp	r9, r0
9001c5a0:	d02c      	beq.n	9001c5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001c5a2:	8802      	ldrh	r2, [r0, #0]
9001c5a4:	9d04      	ldr	r5, [sp, #16]
9001c5a6:	1216      	asrs	r6, r2, #8
9001c5a8:	9f04      	ldr	r7, [sp, #16]
9001c5aa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c5ae:	fb16 f605 	smulbb	r6, r6, r5
9001c5b2:	9d08      	ldr	r5, [sp, #32]
9001c5b4:	442e      	add	r6, r5
9001c5b6:	10d5      	asrs	r5, r2, #3
9001c5b8:	00d2      	lsls	r2, r2, #3
9001c5ba:	b2b6      	uxth	r6, r6
9001c5bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c5c0:	b2d2      	uxtb	r2, r2
9001c5c2:	fb15 f507 	smulbb	r5, r5, r7
9001c5c6:	fb12 f207 	smulbb	r2, r2, r7
9001c5ca:	1c77      	adds	r7, r6, #1
9001c5cc:	445d      	add	r5, fp
9001c5ce:	4462      	add	r2, ip
9001c5d0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001c5d4:	b2ad      	uxth	r5, r5
9001c5d6:	b292      	uxth	r2, r2
9001c5d8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c5dc:	1c57      	adds	r7, r2, #1
9001c5de:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001c5e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c5e6:	4316      	orrs	r6, r2
9001c5e8:	1c6a      	adds	r2, r5, #1
9001c5ea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001c5ee:	096d      	lsrs	r5, r5, #5
9001c5f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c5f4:	432e      	orrs	r6, r5
9001c5f6:	f820 6b02 	strh.w	r6, [r0], #2
9001c5fa:	e7d0      	b.n	9001c59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001c5fc:	4573      	cmp	r3, lr
9001c5fe:	d38d      	bcc.n	9001c51c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c600:	fa1f f188 	uxth.w	r1, r8
9001c604:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001c608:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001c60a:	1a64      	subs	r4, r4, r1
9001c60c:	881b      	ldrh	r3, [r3, #0]
9001c60e:	b2a4      	uxth	r4, r4
9001c610:	eba3 0308 	sub.w	r3, r3, r8
9001c614:	2c00      	cmp	r4, #0
9001c616:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c61a:	bf18      	it	ne
9001c61c:	2100      	movne	r1, #0
9001c61e:	e77d      	b.n	9001c51c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001c620:	4b03      	ldr	r3, [pc, #12]	; (9001c630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001c622:	6818      	ldr	r0, [r3, #0]
9001c624:	6803      	ldr	r3, [r0, #0]
9001c626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c628:	4798      	blx	r3
9001c62a:	b00f      	add	sp, #60	; 0x3c
9001c62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c630:	24039704 	.word	0x24039704
9001c634:	240396fe 	.word	0x240396fe

9001c638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c63c:	b09f      	sub	sp, #124	; 0x7c
9001c63e:	461d      	mov	r5, r3
9001c640:	4604      	mov	r4, r0
9001c642:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001c644:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001c648:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001c64c:	9209      	str	r2, [sp, #36]	; 0x24
9001c64e:	2a00      	cmp	r2, #0
9001c650:	f000 81ed 	beq.w	9001ca2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001c654:	6828      	ldr	r0, [r5, #0]
9001c656:	aa1a      	add	r2, sp, #104	; 0x68
9001c658:	6869      	ldr	r1, [r5, #4]
9001c65a:	c203      	stmia	r2!, {r0, r1}
9001c65c:	6818      	ldr	r0, [r3, #0]
9001c65e:	aa1c      	add	r2, sp, #112	; 0x70
9001c660:	6859      	ldr	r1, [r3, #4]
9001c662:	c203      	stmia	r2!, {r0, r1}
9001c664:	a81a      	add	r0, sp, #104	; 0x68
9001c666:	f7f9 fc67 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c66a:	4629      	mov	r1, r5
9001c66c:	a81c      	add	r0, sp, #112	; 0x70
9001c66e:	f7f9 fca7 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c672:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001c676:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001c67a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001c67e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001c682:	bfdb      	ittet	le
9001c684:	b29a      	uxthle	r2, r3
9001c686:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001c68a:	2201      	movgt	r2, #1
9001c68c:	fb91 f2f2 	sdivle	r2, r1, r2
9001c690:	9202      	str	r2, [sp, #8]
9001c692:	9802      	ldr	r0, [sp, #8]
9001c694:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001c698:	9902      	ldr	r1, [sp, #8]
9001c69a:	fb92 f0f0 	sdiv	r0, r2, r0
9001c69e:	b280      	uxth	r0, r0
9001c6a0:	4488      	add	r8, r1
9001c6a2:	9010      	str	r0, [sp, #64]	; 0x40
9001c6a4:	f108 38ff 	add.w	r8, r8, #4294967295
9001c6a8:	9802      	ldr	r0, [sp, #8]
9001c6aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001c6ac:	fb05 2510 	mls	r5, r5, r0, r2
9001c6b0:	fb98 f8f1 	sdiv	r8, r8, r1
9001c6b4:	fb15 f503 	smulbb	r5, r5, r3
9001c6b8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001c6bc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001c6c0:	f108 0801 	add.w	r8, r8, #1
9001c6c4:	440d      	add	r5, r1
9001c6c6:	4419      	add	r1, r3
9001c6c8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001c6cc:	fa1f f888 	uxth.w	r8, r8
9001c6d0:	441a      	add	r2, r3
9001c6d2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001c6d6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001c6da:	b2ad      	uxth	r5, r5
9001c6dc:	9304      	str	r3, [sp, #16]
9001c6de:	4b94      	ldr	r3, [pc, #592]	; (9001c930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001c6e0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001c6e4:	6818      	ldr	r0, [r3, #0]
9001c6e6:	6803      	ldr	r3, [r0, #0]
9001c6e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c6ea:	4798      	blx	r3
9001c6ec:	4b91      	ldr	r3, [pc, #580]	; (9001c934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c6ee:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001c6f2:	2d00      	cmp	r5, #0
9001c6f4:	881a      	ldrh	r2, [r3, #0]
9001c6f6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c6fa:	fb02 f606 	mul.w	r6, r2, r6
9001c6fe:	fb02 7101 	mla	r1, r2, r1, r7
9001c702:	9318      	str	r3, [sp, #96]	; 0x60
9001c704:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c708:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001c70c:	f04f 0100 	mov.w	r1, #0
9001c710:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001c714:	930f      	str	r3, [sp, #60]	; 0x3c
9001c716:	4b88      	ldr	r3, [pc, #544]	; (9001c938 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001c718:	920a      	str	r2, [sp, #40]	; 0x28
9001c71a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c71c:	eba3 0304 	sub.w	r3, r3, r4
9001c720:	910d      	str	r1, [sp, #52]	; 0x34
9001c722:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001c726:	9319      	str	r3, [sp, #100]	; 0x64
9001c728:	f108 0204 	add.w	r2, r8, #4
9001c72c:	9211      	str	r2, [sp, #68]	; 0x44
9001c72e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c730:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001c734:	9215      	str	r2, [sp, #84]	; 0x54
9001c736:	9a04      	ldr	r2, [sp, #16]
9001c738:	bf18      	it	ne
9001c73a:	2200      	movne	r2, #0
9001c73c:	b292      	uxth	r2, r2
9001c73e:	9910      	ldr	r1, [sp, #64]	; 0x40
9001c740:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c742:	fa11 f383 	uxtah	r3, r1, r3
9001c746:	9914      	ldr	r1, [sp, #80]	; 0x50
9001c748:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c74c:	3304      	adds	r3, #4
9001c74e:	9306      	str	r3, [sp, #24]
9001c750:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c752:	4283      	cmp	r3, r0
9001c754:	f240 8166 	bls.w	9001ca24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001c758:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001c75c:	f04f 0a01 	mov.w	sl, #1
9001c760:	9902      	ldr	r1, [sp, #8]
9001c762:	9e06      	ldr	r6, [sp, #24]
9001c764:	46d3      	mov	fp, sl
9001c766:	4657      	mov	r7, sl
9001c768:	7836      	ldrb	r6, [r6, #0]
9001c76a:	fbb5 f3f3 	udiv	r3, r5, r3
9001c76e:	1acb      	subs	r3, r1, r3
9001c770:	9612      	str	r6, [sp, #72]	; 0x48
9001c772:	3601      	adds	r6, #1
9001c774:	b29b      	uxth	r3, r3
9001c776:	9605      	str	r6, [sp, #20]
9001c778:	9316      	str	r3, [sp, #88]	; 0x58
9001c77a:	9b06      	ldr	r3, [sp, #24]
9001c77c:	7859      	ldrb	r1, [r3, #1]
9001c77e:	789b      	ldrb	r3, [r3, #2]
9001c780:	021b      	lsls	r3, r3, #8
9001c782:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001c786:	9906      	ldr	r1, [sp, #24]
9001c788:	78c9      	ldrb	r1, [r1, #3]
9001c78a:	430b      	orrs	r3, r1
9001c78c:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001c78e:	4419      	add	r1, r3
9001c790:	1c4e      	adds	r6, r1, #1
9001c792:	7849      	ldrb	r1, [r1, #1]
9001c794:	9603      	str	r6, [sp, #12]
9001c796:	0209      	lsls	r1, r1, #8
9001c798:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c79a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001c79e:	5cf3      	ldrb	r3, [r6, r3]
9001c7a0:	4319      	orrs	r1, r3
9001c7a2:	b28b      	uxth	r3, r1
9001c7a4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001c7a8:	930c      	str	r3, [sp, #48]	; 0x30
9001c7aa:	2300      	movs	r3, #0
9001c7ac:	9307      	str	r3, [sp, #28]
9001c7ae:	469c      	mov	ip, r3
9001c7b0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001c7b4:	930e      	str	r3, [sp, #56]	; 0x38
9001c7b6:	2d00      	cmp	r5, #0
9001c7b8:	d07e      	beq.n	9001c8b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001c7ba:	42af      	cmp	r7, r5
9001c7bc:	d26e      	bcs.n	9001c89c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001c7be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001c7c0:	1bed      	subs	r5, r5, r7
9001c7c2:	9201      	str	r2, [sp, #4]
9001c7c4:	4283      	cmp	r3, r0
9001c7c6:	b2ad      	uxth	r5, r5
9001c7c8:	d802      	bhi.n	9001c7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001c7ca:	e073      	b.n	9001c8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001c7cc:	2b00      	cmp	r3, #0
9001c7ce:	d15f      	bne.n	9001c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001c7d0:	9b03      	ldr	r3, [sp, #12]
9001c7d2:	f1cb 0207 	rsb	r2, fp, #7
9001c7d6:	785b      	ldrb	r3, [r3, #1]
9001c7d8:	4093      	lsls	r3, r2
9001c7da:	005b      	lsls	r3, r3, #1
9001c7dc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001c7e0:	9b03      	ldr	r3, [sp, #12]
9001c7e2:	781b      	ldrb	r3, [r3, #0]
9001c7e4:	fa43 f30b 	asr.w	r3, r3, fp
9001c7e8:	b2db      	uxtb	r3, r3
9001c7ea:	4313      	orrs	r3, r2
9001c7ec:	f10b 0201 	add.w	r2, fp, #1
9001c7f0:	fa5f fb82 	uxtb.w	fp, r2
9001c7f4:	9a03      	ldr	r2, [sp, #12]
9001c7f6:	b29f      	uxth	r7, r3
9001c7f8:	f1bb 0f08 	cmp.w	fp, #8
9001c7fc:	bf13      	iteet	ne
9001c7fe:	3201      	addne	r2, #1
9001c800:	3202      	addeq	r2, #2
9001c802:	f04f 0b00 	moveq.w	fp, #0
9001c806:	9203      	strne	r2, [sp, #12]
9001c808:	bf08      	it	eq
9001c80a:	9203      	streq	r2, [sp, #12]
9001c80c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c80e:	42ba      	cmp	r2, r7
9001c810:	d309      	bcc.n	9001c826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001c812:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001c816:	2301      	movs	r3, #1
9001c818:	9a05      	ldr	r2, [sp, #20]
9001c81a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001c81e:	d30e      	bcc.n	9001c83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001c820:	469a      	mov	sl, r3
9001c822:	2600      	movs	r6, #0
9001c824:	e035      	b.n	9001c892 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001c826:	9b05      	ldr	r3, [sp, #20]
9001c828:	429f      	cmp	r7, r3
9001c82a:	d318      	bcc.n	9001c85e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001c82c:	eb04 030a 	add.w	r3, r4, sl
9001c830:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001c834:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001c838:	f10a 0301 	add.w	r3, sl, #1
9001c83c:	b29b      	uxth	r3, r3
9001c83e:	9a05      	ldr	r2, [sp, #20]
9001c840:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001c844:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c848:	990c      	ldr	r1, [sp, #48]	; 0x30
9001c84a:	7116      	strb	r6, [r2, #4]
9001c84c:	f10a 0601 	add.w	r6, sl, #1
9001c850:	80d1      	strh	r1, [r2, #6]
9001c852:	7156      	strb	r6, [r2, #5]
9001c854:	9a05      	ldr	r2, [sp, #20]
9001c856:	3201      	adds	r2, #1
9001c858:	b292      	uxth	r2, r2
9001c85a:	9205      	str	r2, [sp, #20]
9001c85c:	e7e0      	b.n	9001c820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001c85e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001c862:	463a      	mov	r2, r7
9001c864:	795b      	ldrb	r3, [r3, #5]
9001c866:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001c86a:	4426      	add	r6, r4
9001c86c:	9919      	ldr	r1, [sp, #100]	; 0x64
9001c86e:	eb01 0c06 	add.w	ip, r1, r6
9001c872:	f1bc 0f00 	cmp.w	ip, #0
9001c876:	dd07      	ble.n	9001c888 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001c878:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001c87c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001c880:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001c884:	88d2      	ldrh	r2, [r2, #6]
9001c886:	e7f1      	b.n	9001c86c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001c888:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001c88c:	b29b      	uxth	r3, r3
9001c88e:	e7c3      	b.n	9001c818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001c890:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001c892:	970c      	str	r7, [sp, #48]	; 0x30
9001c894:	46b4      	mov	ip, r6
9001c896:	9a01      	ldr	r2, [sp, #4]
9001c898:	461f      	mov	r7, r3
9001c89a:	e78c      	b.n	9001c7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001c89c:	1b7b      	subs	r3, r7, r5
9001c89e:	eb0c 0605 	add.w	r6, ip, r5
9001c8a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c8a6:	b29b      	uxth	r3, r3
9001c8a8:	b2b6      	uxth	r6, r6
9001c8aa:	9201      	str	r2, [sp, #4]
9001c8ac:	2500      	movs	r5, #0
9001c8ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001c8b0:	4282      	cmp	r2, r0
9001c8b2:	d88b      	bhi.n	9001c7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001c8b4:	9a01      	ldr	r2, [sp, #4]
9001c8b6:	e74b      	b.n	9001c750 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001c8b8:	4297      	cmp	r7, r2
9001c8ba:	d332      	bcc.n	9001c922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001c8bc:	1abb      	subs	r3, r7, r2
9001c8be:	9208      	str	r2, [sp, #32]
9001c8c0:	9501      	str	r5, [sp, #4]
9001c8c2:	b29b      	uxth	r3, r3
9001c8c4:	9909      	ldr	r1, [sp, #36]	; 0x24
9001c8c6:	29ff      	cmp	r1, #255	; 0xff
9001c8c8:	9908      	ldr	r1, [sp, #32]
9001c8ca:	eb0c 0601 	add.w	r6, ip, r1
9001c8ce:	d135      	bne.n	9001c93c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001c8d0:	f1a0 0e02 	sub.w	lr, r0, #2
9001c8d4:	b2b6      	uxth	r6, r6
9001c8d6:	45b4      	cmp	ip, r6
9001c8d8:	f040 808c 	bne.w	9001c9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001c8dc:	9908      	ldr	r1, [sp, #32]
9001c8de:	4297      	cmp	r7, r2
9001c8e0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001c8e4:	d3e2      	bcc.n	9001c8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001c8e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001c8e8:	9904      	ldr	r1, [sp, #16]
9001c8ea:	8812      	ldrh	r2, [r2, #0]
9001c8ec:	1a52      	subs	r2, r2, r1
9001c8ee:	9916      	ldr	r1, [sp, #88]	; 0x58
9001c8f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c8f4:	9a07      	ldr	r2, [sp, #28]
9001c8f6:	3201      	adds	r2, #1
9001c8f8:	428a      	cmp	r2, r1
9001c8fa:	9207      	str	r2, [sp, #28]
9001c8fc:	f040 8087 	bne.w	9001ca0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001c900:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001c904:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001c908:	9b04      	ldr	r3, [sp, #16]
9001c90a:	1bed      	subs	r5, r5, r7
9001c90c:	b2ad      	uxth	r5, r5
9001c90e:	2d00      	cmp	r5, #0
9001c910:	bf08      	it	eq
9001c912:	461a      	moveq	r2, r3
9001c914:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c916:	bf18      	it	ne
9001c918:	2200      	movne	r2, #0
9001c91a:	3301      	adds	r3, #1
9001c91c:	b292      	uxth	r2, r2
9001c91e:	930d      	str	r3, [sp, #52]	; 0x34
9001c920:	e70d      	b.n	9001c73e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001c922:	1bd1      	subs	r1, r2, r7
9001c924:	9708      	str	r7, [sp, #32]
9001c926:	b28b      	uxth	r3, r1
9001c928:	9301      	str	r3, [sp, #4]
9001c92a:	462b      	mov	r3, r5
9001c92c:	e7ca      	b.n	9001c8c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001c92e:	bf00      	nop
9001c930:	24039704 	.word	0x24039704
9001c934:	240396fe 	.word	0x240396fe
9001c938:	fffff7fb 	.word	0xfffff7fb
9001c93c:	b2b6      	uxth	r6, r6
9001c93e:	900b      	str	r0, [sp, #44]	; 0x2c
9001c940:	45b4      	cmp	ip, r6
9001c942:	d0cb      	beq.n	9001c8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001c944:	f10c 0101 	add.w	r1, ip, #1
9001c948:	44a4      	add	ip, r4
9001c94a:	9117      	str	r1, [sp, #92]	; 0x5c
9001c94c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001c950:	9911      	ldr	r1, [sp, #68]	; 0x44
9001c952:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001c956:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001c958:	ea4f 2825 	mov.w	r8, r5, asr #8
9001c95c:	f8b1 c000 	ldrh.w	ip, [r1]
9001c960:	990e      	ldr	r1, [sp, #56]	; 0x38
9001c962:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001c966:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001c96a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001c96e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001c972:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c976:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001c97a:	fb1e fe01 	smulbb	lr, lr, r1
9001c97e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001c980:	fa5f fc8c 	uxtb.w	ip, ip
9001c984:	fb08 e801 	mla	r8, r8, r1, lr
9001c988:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001c98c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001c98e:	00ed      	lsls	r5, r5, #3
9001c990:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001c994:	fa1f f888 	uxth.w	r8, r8
9001c998:	fb19 f901 	smulbb	r9, r9, r1
9001c99c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001c99e:	b2ed      	uxtb	r5, r5
9001c9a0:	fb0e 9e01 	mla	lr, lr, r1, r9
9001c9a4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001c9a6:	fb1c fc01 	smulbb	ip, ip, r1
9001c9aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001c9ac:	fa1f fe8e 	uxth.w	lr, lr
9001c9b0:	fb05 c501 	mla	r5, r5, r1, ip
9001c9b4:	f108 0c01 	add.w	ip, r8, #1
9001c9b8:	f10e 0901 	add.w	r9, lr, #1
9001c9bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001c9be:	b2ad      	uxth	r5, r5
9001c9c0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001c9c4:	f105 0c01 	add.w	ip, r5, #1
9001c9c8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001c9cc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001c9d0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001c9d4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001c9d8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c9dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c9e0:	ea4c 0808 	orr.w	r8, ip, r8
9001c9e4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001c9e8:	ea48 0809 	orr.w	r8, r8, r9
9001c9ec:	f821 8b02 	strh.w	r8, [r1], #2
9001c9f0:	910b      	str	r1, [sp, #44]	; 0x2c
9001c9f2:	e7a5      	b.n	9001c940 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001c9f4:	f10c 0801 	add.w	r8, ip, #1
9001c9f8:	44a4      	add	ip, r4
9001c9fa:	9911      	ldr	r1, [sp, #68]	; 0x44
9001c9fc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001ca00:	fa1f fc88 	uxth.w	ip, r8
9001ca04:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001ca08:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001ca0c:	e763      	b.n	9001c8d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001ca0e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ca12:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001ca16:	1aad      	subs	r5, r5, r2
9001ca18:	b2ad      	uxth	r5, r5
9001ca1a:	2d00      	cmp	r5, #0
9001ca1c:	bf18      	it	ne
9001ca1e:	2200      	movne	r2, #0
9001ca20:	9201      	str	r2, [sp, #4]
9001ca22:	e744      	b.n	9001c8ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001ca24:	4b03      	ldr	r3, [pc, #12]	; (9001ca34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001ca26:	6818      	ldr	r0, [r3, #0]
9001ca28:	6803      	ldr	r3, [r0, #0]
9001ca2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ca2c:	4798      	blx	r3
9001ca2e:	b01f      	add	sp, #124	; 0x7c
9001ca30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ca34:	24039704 	.word	0x24039704

9001ca38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ca38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ca3c:	b08f      	sub	sp, #60	; 0x3c
9001ca3e:	461c      	mov	r4, r3
9001ca40:	460f      	mov	r7, r1
9001ca42:	9203      	str	r2, [sp, #12]
9001ca44:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001ca48:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001ca4a:	9202      	str	r2, [sp, #8]
9001ca4c:	2a00      	cmp	r2, #0
9001ca4e:	f000 8128 	beq.w	9001cca2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001ca52:	6820      	ldr	r0, [r4, #0]
9001ca54:	aa0a      	add	r2, sp, #40	; 0x28
9001ca56:	6861      	ldr	r1, [r4, #4]
9001ca58:	c203      	stmia	r2!, {r0, r1}
9001ca5a:	6818      	ldr	r0, [r3, #0]
9001ca5c:	aa0c      	add	r2, sp, #48	; 0x30
9001ca5e:	6859      	ldr	r1, [r3, #4]
9001ca60:	c203      	stmia	r2!, {r0, r1}
9001ca62:	a80a      	add	r0, sp, #40	; 0x28
9001ca64:	f7f9 fa68 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca68:	4621      	mov	r1, r4
9001ca6a:	a80c      	add	r0, sp, #48	; 0x30
9001ca6c:	f7f9 faa8 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca70:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001ca74:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001ca78:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ca7c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001ca80:	bfdb      	ittet	le
9001ca82:	b2b3      	uxthle	r3, r6
9001ca84:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ca88:	2301      	movgt	r3, #1
9001ca8a:	fb92 f3f3 	sdivle	r3, r2, r3
9001ca8e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ca92:	441d      	add	r5, r3
9001ca94:	fb92 f1f3 	sdiv	r1, r2, r3
9001ca98:	fa1f fc81 	uxth.w	ip, r1
9001ca9c:	3d01      	subs	r5, #1
9001ca9e:	fb0c 2413 	mls	r4, ip, r3, r2
9001caa2:	4661      	mov	r1, ip
9001caa4:	fb14 f406 	smulbb	r4, r4, r6
9001caa8:	4404      	add	r4, r0
9001caaa:	fb95 f5f3 	sdiv	r5, r5, r3
9001caae:	b2a4      	uxth	r4, r4
9001cab0:	b121      	cbz	r1, 9001cabc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001cab2:	9b03      	ldr	r3, [sp, #12]
9001cab4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cab8:	ba1b      	rev	r3, r3
9001caba:	441f      	add	r7, r3
9001cabc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001cac0:	b2ad      	uxth	r5, r5
9001cac2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001cac6:	4418      	add	r0, r3
9001cac8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001cacc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001cad0:	00ad      	lsls	r5, r5, #2
9001cad2:	441a      	add	r2, r3
9001cad4:	4b74      	ldr	r3, [pc, #464]	; (9001cca8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001cad6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001cada:	6818      	ldr	r0, [r3, #0]
9001cadc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001cae0:	6803      	ldr	r3, [r0, #0]
9001cae2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cae4:	4798      	blx	r3
9001cae6:	4a71      	ldr	r2, [pc, #452]	; (9001ccac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001cae8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001caec:	2c00      	cmp	r4, #0
9001caee:	8813      	ldrh	r3, [r2, #0]
9001caf0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001caf4:	bf0c      	ite	eq
9001caf6:	46c8      	moveq	r8, r9
9001caf8:	f04f 0800 	movne.w	r8, #0
9001cafc:	9209      	str	r2, [sp, #36]	; 0x24
9001cafe:	fb03 c101 	mla	r1, r3, r1, ip
9001cb02:	4373      	muls	r3, r6
9001cb04:	fa1f f888 	uxth.w	r8, r8
9001cb08:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cb0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cb10:	9304      	str	r3, [sp, #16]
9001cb12:	1d2b      	adds	r3, r5, #4
9001cb14:	9305      	str	r3, [sp, #20]
9001cb16:	2300      	movs	r3, #0
9001cb18:	9301      	str	r3, [sp, #4]
9001cb1a:	9a04      	ldr	r2, [sp, #16]
9001cb1c:	4282      	cmp	r2, r0
9001cb1e:	f240 80bb 	bls.w	9001cc98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001cb22:	b95b      	cbnz	r3, 9001cb3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001cb24:	783a      	ldrb	r2, [r7, #0]
9001cb26:	0993      	lsrs	r3, r2, #6
9001cb28:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001cb2c:	9201      	str	r2, [sp, #4]
9001cb2e:	1e5a      	subs	r2, r3, #1
9001cb30:	2a02      	cmp	r2, #2
9001cb32:	bf8d      	iteet	hi
9001cb34:	787b      	ldrbhi	r3, [r7, #1]
9001cb36:	3701      	addls	r7, #1
9001cb38:	b29b      	uxthls	r3, r3
9001cb3a:	3702      	addhi	r7, #2
9001cb3c:	b184      	cbz	r4, 9001cb60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001cb3e:	429c      	cmp	r4, r3
9001cb40:	bf91      	iteee	ls
9001cb42:	1b1c      	subls	r4, r3, r4
9001cb44:	1ae4      	subhi	r4, r4, r3
9001cb46:	46c4      	movhi	ip, r8
9001cb48:	f04f 0a00 	movhi.w	sl, #0
9001cb4c:	bf9b      	ittet	ls
9001cb4e:	fa1f fa84 	uxthls.w	sl, r4
9001cb52:	2400      	movls	r4, #0
9001cb54:	b2a4      	uxthhi	r4, r4
9001cb56:	fa1f fc89 	uxthls.w	ip, r9
9001cb5a:	4653      	mov	r3, sl
9001cb5c:	46e0      	mov	r8, ip
9001cb5e:	e7dc      	b.n	9001cb1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001cb60:	2204      	movs	r2, #4
9001cb62:	9905      	ldr	r1, [sp, #20]
9001cb64:	4543      	cmp	r3, r8
9001cb66:	4615      	mov	r5, r2
9001cb68:	9a01      	ldr	r2, [sp, #4]
9001cb6a:	bf24      	itt	cs
9001cb6c:	eba3 0a08 	subcs.w	sl, r3, r8
9001cb70:	46c6      	movcs	lr, r8
9001cb72:	fb15 1202 	smlabb	r2, r5, r2, r1
9001cb76:	9903      	ldr	r1, [sp, #12]
9001cb78:	bf3c      	itt	cc
9001cb7a:	eba8 0c03 	subcc.w	ip, r8, r3
9001cb7e:	469e      	movcc	lr, r3
9001cb80:	588a      	ldr	r2, [r1, r2]
9001cb82:	bf26      	itte	cs
9001cb84:	fa1f fa8a 	uxthcs.w	sl, sl
9001cb88:	46a4      	movcs	ip, r4
9001cb8a:	fa1f fc8c 	uxthcc.w	ip, ip
9001cb8e:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001cb92:	bf38      	it	cc
9001cb94:	46a2      	movcc	sl, r4
9001cb96:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001cb9a:	2900      	cmp	r1, #0
9001cb9c:	d066      	beq.n	9001cc6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001cb9e:	29ff      	cmp	r1, #255	; 0xff
9001cba0:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001cba4:	d114      	bne.n	9001cbd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001cba6:	9d02      	ldr	r5, [sp, #8]
9001cba8:	2dff      	cmp	r5, #255	; 0xff
9001cbaa:	d111      	bne.n	9001cbd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001cbac:	0951      	lsrs	r1, r2, #5
9001cbae:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001cbb2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cbb6:	4486      	add	lr, r0
9001cbb8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001cbbc:	f026 0607 	bic.w	r6, r6, #7
9001cbc0:	430e      	orrs	r6, r1
9001cbc2:	4316      	orrs	r6, r2
9001cbc4:	b2b6      	uxth	r6, r6
9001cbc6:	4586      	cmp	lr, r0
9001cbc8:	d051      	beq.n	9001cc6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001cbca:	f820 6b02 	strh.w	r6, [r0], #2
9001cbce:	e7fa      	b.n	9001cbc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001cbd0:	9d02      	ldr	r5, [sp, #8]
9001cbd2:	b2f6      	uxtb	r6, r6
9001cbd4:	4486      	add	lr, r0
9001cbd6:	4369      	muls	r1, r5
9001cbd8:	1c4d      	adds	r5, r1, #1
9001cbda:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001cbde:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001cbe2:	b2d2      	uxtb	r2, r2
9001cbe4:	122d      	asrs	r5, r5, #8
9001cbe6:	ea6f 0b05 	mvn.w	fp, r5
9001cbea:	b2ad      	uxth	r5, r5
9001cbec:	fb11 f105 	smulbb	r1, r1, r5
9001cbf0:	fa5f fb8b 	uxtb.w	fp, fp
9001cbf4:	fb16 f605 	smulbb	r6, r6, r5
9001cbf8:	fb12 f205 	smulbb	r2, r2, r5
9001cbfc:	b289      	uxth	r1, r1
9001cbfe:	b2b6      	uxth	r6, r6
9001cc00:	b292      	uxth	r2, r2
9001cc02:	9106      	str	r1, [sp, #24]
9001cc04:	9607      	str	r6, [sp, #28]
9001cc06:	9208      	str	r2, [sp, #32]
9001cc08:	4586      	cmp	lr, r0
9001cc0a:	d030      	beq.n	9001cc6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001cc0c:	8802      	ldrh	r2, [r0, #0]
9001cc0e:	9906      	ldr	r1, [sp, #24]
9001cc10:	1216      	asrs	r6, r2, #8
9001cc12:	10d5      	asrs	r5, r2, #3
9001cc14:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cc18:	00d2      	lsls	r2, r2, #3
9001cc1a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001cc1e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cc22:	b2d2      	uxtb	r2, r2
9001cc24:	fb06 160b 	mla	r6, r6, fp, r1
9001cc28:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cc2c:	9907      	ldr	r1, [sp, #28]
9001cc2e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001cc32:	b2b6      	uxth	r6, r6
9001cc34:	fb05 150b 	mla	r5, r5, fp, r1
9001cc38:	9908      	ldr	r1, [sp, #32]
9001cc3a:	fb02 120b 	mla	r2, r2, fp, r1
9001cc3e:	1c71      	adds	r1, r6, #1
9001cc40:	b2ad      	uxth	r5, r5
9001cc42:	b292      	uxth	r2, r2
9001cc44:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001cc48:	1c51      	adds	r1, r2, #1
9001cc4a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001cc4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cc52:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cc56:	4316      	orrs	r6, r2
9001cc58:	1c6a      	adds	r2, r5, #1
9001cc5a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001cc5e:	096d      	lsrs	r5, r5, #5
9001cc60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cc64:	432e      	orrs	r6, r5
9001cc66:	f820 6b02 	strh.w	r6, [r0], #2
9001cc6a:	e7cd      	b.n	9001cc08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001cc6c:	4470      	add	r0, lr
9001cc6e:	4543      	cmp	r3, r8
9001cc70:	f4ff af73 	bcc.w	9001cb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001cc74:	fa1f fc89 	uxth.w	ip, r9
9001cc78:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001cc7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001cc7e:	eba4 040c 	sub.w	r4, r4, ip
9001cc82:	881b      	ldrh	r3, [r3, #0]
9001cc84:	b2a4      	uxth	r4, r4
9001cc86:	eba3 0309 	sub.w	r3, r3, r9
9001cc8a:	2c00      	cmp	r4, #0
9001cc8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cc90:	bf18      	it	ne
9001cc92:	f04f 0c00 	movne.w	ip, #0
9001cc96:	e760      	b.n	9001cb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001cc98:	4b03      	ldr	r3, [pc, #12]	; (9001cca8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001cc9a:	6818      	ldr	r0, [r3, #0]
9001cc9c:	6803      	ldr	r3, [r0, #0]
9001cc9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cca0:	4798      	blx	r3
9001cca2:	b00f      	add	sp, #60	; 0x3c
9001cca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cca8:	24039704 	.word	0x24039704
9001ccac:	240396fe 	.word	0x240396fe

9001ccb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ccb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccb4:	b093      	sub	sp, #76	; 0x4c
9001ccb6:	461c      	mov	r4, r3
9001ccb8:	9205      	str	r2, [sp, #20]
9001ccba:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001ccbe:	9101      	str	r1, [sp, #4]
9001ccc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ccc2:	9202      	str	r2, [sp, #8]
9001ccc4:	2a00      	cmp	r2, #0
9001ccc6:	f000 812e 	beq.w	9001cf26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ccca:	6820      	ldr	r0, [r4, #0]
9001cccc:	aa0e      	add	r2, sp, #56	; 0x38
9001ccce:	6861      	ldr	r1, [r4, #4]
9001ccd0:	c203      	stmia	r2!, {r0, r1}
9001ccd2:	6818      	ldr	r0, [r3, #0]
9001ccd4:	aa10      	add	r2, sp, #64	; 0x40
9001ccd6:	6859      	ldr	r1, [r3, #4]
9001ccd8:	c203      	stmia	r2!, {r0, r1}
9001ccda:	a80e      	add	r0, sp, #56	; 0x38
9001ccdc:	f7f9 f92c 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cce0:	4621      	mov	r1, r4
9001cce2:	a810      	add	r0, sp, #64	; 0x40
9001cce4:	f7f9 f96c 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cce8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ccec:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001ccf0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ccf4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001ccf8:	bfdb      	ittet	le
9001ccfa:	b2b3      	uxthle	r3, r6
9001ccfc:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001cd00:	2301      	movgt	r3, #1
9001cd02:	fb92 f3f3 	sdivle	r3, r2, r3
9001cd06:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cd0a:	441d      	add	r5, r3
9001cd0c:	fb92 f1f3 	sdiv	r1, r2, r3
9001cd10:	fa1f fc81 	uxth.w	ip, r1
9001cd14:	3d01      	subs	r5, #1
9001cd16:	fb0c 2413 	mls	r4, ip, r3, r2
9001cd1a:	4661      	mov	r1, ip
9001cd1c:	fb14 f406 	smulbb	r4, r4, r6
9001cd20:	4404      	add	r4, r0
9001cd22:	fb95 f5f3 	sdiv	r5, r5, r3
9001cd26:	b2a4      	uxth	r4, r4
9001cd28:	b131      	cbz	r1, 9001cd38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001cd2a:	9b05      	ldr	r3, [sp, #20]
9001cd2c:	9901      	ldr	r1, [sp, #4]
9001cd2e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001cd32:	ba1b      	rev	r3, r3
9001cd34:	4419      	add	r1, r3
9001cd36:	9101      	str	r1, [sp, #4]
9001cd38:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001cd3c:	b2ad      	uxth	r5, r5
9001cd3e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001cd42:	4418      	add	r0, r3
9001cd44:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001cd48:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001cd4c:	00ad      	lsls	r5, r5, #2
9001cd4e:	441a      	add	r2, r3
9001cd50:	4b76      	ldr	r3, [pc, #472]	; (9001cf2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001cd52:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001cd56:	6818      	ldr	r0, [r3, #0]
9001cd58:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001cd5c:	6803      	ldr	r3, [r0, #0]
9001cd5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cd60:	4798      	blx	r3
9001cd62:	4973      	ldr	r1, [pc, #460]	; (9001cf30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001cd64:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001cd68:	2c00      	cmp	r4, #0
9001cd6a:	880b      	ldrh	r3, [r1, #0]
9001cd6c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cd70:	910d      	str	r1, [sp, #52]	; 0x34
9001cd72:	fb03 c202 	mla	r2, r3, r2, ip
9001cd76:	bf08      	it	eq
9001cd78:	46dc      	moveq	ip, fp
9001cd7a:	fb03 f306 	mul.w	r3, r3, r6
9001cd7e:	bf18      	it	ne
9001cd80:	f04f 0c00 	movne.w	ip, #0
9001cd84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cd88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cd8c:	fa1f fc8c 	uxth.w	ip, ip
9001cd90:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cd94:	9106      	str	r1, [sp, #24]
9001cd96:	9308      	str	r3, [sp, #32]
9001cd98:	1d2b      	adds	r3, r5, #4
9001cd9a:	9309      	str	r3, [sp, #36]	; 0x24
9001cd9c:	9b02      	ldr	r3, [sp, #8]
9001cd9e:	43da      	mvns	r2, r3
9001cda0:	2300      	movs	r3, #0
9001cda2:	b2d2      	uxtb	r2, r2
9001cda4:	9303      	str	r3, [sp, #12]
9001cda6:	9207      	str	r2, [sp, #28]
9001cda8:	9a08      	ldr	r2, [sp, #32]
9001cdaa:	4282      	cmp	r2, r0
9001cdac:	f240 80b6 	bls.w	9001cf1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001cdb0:	b963      	cbnz	r3, 9001cdcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001cdb2:	9b01      	ldr	r3, [sp, #4]
9001cdb4:	781a      	ldrb	r2, [r3, #0]
9001cdb6:	0993      	lsrs	r3, r2, #6
9001cdb8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001cdbc:	9203      	str	r2, [sp, #12]
9001cdbe:	1e5a      	subs	r2, r3, #1
9001cdc0:	2a02      	cmp	r2, #2
9001cdc2:	d815      	bhi.n	9001cdf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001cdc4:	9a01      	ldr	r2, [sp, #4]
9001cdc6:	b29b      	uxth	r3, r3
9001cdc8:	3201      	adds	r2, #1
9001cdca:	9201      	str	r2, [sp, #4]
9001cdcc:	b1b4      	cbz	r4, 9001cdfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001cdce:	429c      	cmp	r4, r3
9001cdd0:	bf91      	iteee	ls
9001cdd2:	1b1c      	subls	r4, r3, r4
9001cdd4:	1ae4      	subhi	r4, r4, r3
9001cdd6:	4666      	movhi	r6, ip
9001cdd8:	f04f 0800 	movhi.w	r8, #0
9001cddc:	bf9b      	ittet	ls
9001cdde:	fa1f f884 	uxthls.w	r8, r4
9001cde2:	2400      	movls	r4, #0
9001cde4:	b2a4      	uxthhi	r4, r4
9001cde6:	fa1f f68b 	uxthls.w	r6, fp
9001cdea:	4643      	mov	r3, r8
9001cdec:	46b4      	mov	ip, r6
9001cdee:	e7db      	b.n	9001cda8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001cdf0:	9a01      	ldr	r2, [sp, #4]
9001cdf2:	9b01      	ldr	r3, [sp, #4]
9001cdf4:	3202      	adds	r2, #2
9001cdf6:	785b      	ldrb	r3, [r3, #1]
9001cdf8:	9201      	str	r2, [sp, #4]
9001cdfa:	e7e7      	b.n	9001cdcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001cdfc:	2203      	movs	r2, #3
9001cdfe:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ce00:	4563      	cmp	r3, ip
9001ce02:	4615      	mov	r5, r2
9001ce04:	9a03      	ldr	r2, [sp, #12]
9001ce06:	bf2c      	ite	cs
9001ce08:	eba3 080c 	subcs.w	r8, r3, ip
9001ce0c:	ebac 0603 	subcc.w	r6, ip, r3
9001ce10:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ce14:	9905      	ldr	r1, [sp, #20]
9001ce16:	bf24      	itt	cs
9001ce18:	fa1f f888 	uxthcs.w	r8, r8
9001ce1c:	46e1      	movcs	r9, ip
9001ce1e:	eb01 0502 	add.w	r5, r1, r2
9001ce22:	9902      	ldr	r1, [sp, #8]
9001ce24:	bf2f      	iteee	cs
9001ce26:	4626      	movcs	r6, r4
9001ce28:	b2b6      	uxthcc	r6, r6
9001ce2a:	4699      	movcc	r9, r3
9001ce2c:	46a0      	movcc	r8, r4
9001ce2e:	29ff      	cmp	r1, #255	; 0xff
9001ce30:	d04a      	beq.n	9001cec8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001ce32:	9f06      	ldr	r7, [sp, #24]
9001ce34:	46ca      	mov	sl, r9
9001ce36:	78a9      	ldrb	r1, [r5, #2]
9001ce38:	9004      	str	r0, [sp, #16]
9001ce3a:	4379      	muls	r1, r7
9001ce3c:	910a      	str	r1, [sp, #40]	; 0x28
9001ce3e:	7869      	ldrb	r1, [r5, #1]
9001ce40:	4379      	muls	r1, r7
9001ce42:	910b      	str	r1, [sp, #44]	; 0x2c
9001ce44:	9905      	ldr	r1, [sp, #20]
9001ce46:	5c8a      	ldrb	r2, [r1, r2]
9001ce48:	437a      	muls	r2, r7
9001ce4a:	920c      	str	r2, [sp, #48]	; 0x30
9001ce4c:	f1ba 0f00 	cmp.w	sl, #0
9001ce50:	d03d      	beq.n	9001cece <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001ce52:	9a04      	ldr	r2, [sp, #16]
9001ce54:	f10a 3aff 	add.w	sl, sl, #4294967295
9001ce58:	9f07      	ldr	r7, [sp, #28]
9001ce5a:	8812      	ldrh	r2, [r2, #0]
9001ce5c:	fa1f fa8a 	uxth.w	sl, sl
9001ce60:	46be      	mov	lr, r7
9001ce62:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001ce64:	1215      	asrs	r5, r2, #8
9001ce66:	10d1      	asrs	r1, r2, #3
9001ce68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ce6c:	00d2      	lsls	r2, r2, #3
9001ce6e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ce72:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ce76:	b2d2      	uxtb	r2, r2
9001ce78:	fb05 750e 	mla	r5, r5, lr, r7
9001ce7c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001ce80:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001ce82:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ce86:	b2ad      	uxth	r5, r5
9001ce88:	fb01 710e 	mla	r1, r1, lr, r7
9001ce8c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ce8e:	fb02 720e 	mla	r2, r2, lr, r7
9001ce92:	f105 0e01 	add.w	lr, r5, #1
9001ce96:	b289      	uxth	r1, r1
9001ce98:	b292      	uxth	r2, r2
9001ce9a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ce9e:	f102 0e01 	add.w	lr, r2, #1
9001cea2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001cea6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001ceaa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ceae:	4315      	orrs	r5, r2
9001ceb0:	1c4a      	adds	r2, r1, #1
9001ceb2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ceb6:	9a04      	ldr	r2, [sp, #16]
9001ceb8:	0949      	lsrs	r1, r1, #5
9001ceba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001cebe:	430d      	orrs	r5, r1
9001cec0:	f822 5b02 	strh.w	r5, [r2], #2
9001cec4:	9204      	str	r2, [sp, #16]
9001cec6:	e7c1      	b.n	9001ce4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001cec8:	4649      	mov	r1, r9
9001ceca:	4686      	mov	lr, r0
9001cecc:	b999      	cbnz	r1, 9001cef6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001cece:	4563      	cmp	r3, ip
9001ced0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001ced4:	d389      	bcc.n	9001cdea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ced6:	fa1f f68b 	uxth.w	r6, fp
9001ceda:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001cede:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001cee0:	1ba4      	subs	r4, r4, r6
9001cee2:	881b      	ldrh	r3, [r3, #0]
9001cee4:	b2a4      	uxth	r4, r4
9001cee6:	eba3 030b 	sub.w	r3, r3, fp
9001ceea:	2c00      	cmp	r4, #0
9001ceec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cef0:	bf18      	it	ne
9001cef2:	2600      	movne	r6, #0
9001cef4:	e779      	b.n	9001cdea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001cef6:	78aa      	ldrb	r2, [r5, #2]
9001cef8:	3901      	subs	r1, #1
9001cefa:	4f0e      	ldr	r7, [pc, #56]	; (9001cf34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001cefc:	b289      	uxth	r1, r1
9001cefe:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001cf02:	786a      	ldrb	r2, [r5, #1]
9001cf04:	00d2      	lsls	r2, r2, #3
9001cf06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001cf0a:	ea4a 0202 	orr.w	r2, sl, r2
9001cf0e:	f895 a000 	ldrb.w	sl, [r5]
9001cf12:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001cf16:	f82e 2b02 	strh.w	r2, [lr], #2
9001cf1a:	e7d7      	b.n	9001cecc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001cf1c:	4b03      	ldr	r3, [pc, #12]	; (9001cf2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001cf1e:	6818      	ldr	r0, [r3, #0]
9001cf20:	6803      	ldr	r3, [r0, #0]
9001cf22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cf24:	4798      	blx	r3
9001cf26:	b013      	add	sp, #76	; 0x4c
9001cf28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cf2c:	24039704 	.word	0x24039704
9001cf30:	240396fe 	.word	0x240396fe
9001cf34:	fffff800 	.word	0xfffff800

9001cf38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001cf38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf3c:	b09d      	sub	sp, #116	; 0x74
9001cf3e:	461c      	mov	r4, r3
9001cf40:	4683      	mov	fp, r0
9001cf42:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001cf44:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001cf48:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001cf4c:	920e      	str	r2, [sp, #56]	; 0x38
9001cf4e:	2a00      	cmp	r2, #0
9001cf50:	f000 81e4 	beq.w	9001d31c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001cf54:	6820      	ldr	r0, [r4, #0]
9001cf56:	aa18      	add	r2, sp, #96	; 0x60
9001cf58:	6861      	ldr	r1, [r4, #4]
9001cf5a:	c203      	stmia	r2!, {r0, r1}
9001cf5c:	6818      	ldr	r0, [r3, #0]
9001cf5e:	aa1a      	add	r2, sp, #104	; 0x68
9001cf60:	6859      	ldr	r1, [r3, #4]
9001cf62:	c203      	stmia	r2!, {r0, r1}
9001cf64:	a818      	add	r0, sp, #96	; 0x60
9001cf66:	f7f8 ffe7 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cf6a:	4621      	mov	r1, r4
9001cf6c:	a81a      	add	r0, sp, #104	; 0x68
9001cf6e:	f7f9 f827 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cf72:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001cf76:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001cf7a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001cf7e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001cf82:	bfdb      	ittet	le
9001cf84:	b29a      	uxthle	r2, r3
9001cf86:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001cf8a:	2201      	movgt	r2, #1
9001cf8c:	fb91 f2f2 	sdivle	r2, r1, r2
9001cf90:	9202      	str	r2, [sp, #8]
9001cf92:	9802      	ldr	r0, [sp, #8]
9001cf94:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001cf98:	9902      	ldr	r1, [sp, #8]
9001cf9a:	fb92 f0f0 	sdiv	r0, r2, r0
9001cf9e:	b280      	uxth	r0, r0
9001cfa0:	440c      	add	r4, r1
9001cfa2:	900f      	str	r0, [sp, #60]	; 0x3c
9001cfa4:	3c01      	subs	r4, #1
9001cfa6:	9802      	ldr	r0, [sp, #8]
9001cfa8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001cfaa:	fb05 2510 	mls	r5, r5, r0, r2
9001cfae:	fb94 f4f1 	sdiv	r4, r4, r1
9001cfb2:	fb15 f503 	smulbb	r5, r5, r3
9001cfb6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001cfba:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001cfbe:	3401      	adds	r4, #1
9001cfc0:	440d      	add	r5, r1
9001cfc2:	4419      	add	r1, r3
9001cfc4:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001cfc8:	b2a4      	uxth	r4, r4
9001cfca:	441a      	add	r2, r3
9001cfcc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001cfd0:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001cfd4:	00a4      	lsls	r4, r4, #2
9001cfd6:	9306      	str	r3, [sp, #24]
9001cfd8:	b2ad      	uxth	r5, r5
9001cfda:	4bb3      	ldr	r3, [pc, #716]	; (9001d2a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001cfdc:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001cfe0:	6818      	ldr	r0, [r3, #0]
9001cfe2:	6803      	ldr	r3, [r0, #0]
9001cfe4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cfe6:	4798      	blx	r3
9001cfe8:	4bb0      	ldr	r3, [pc, #704]	; (9001d2ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001cfea:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001cfee:	2d00      	cmp	r5, #0
9001cff0:	881a      	ldrh	r2, [r3, #0]
9001cff2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001cff6:	fb02 f606 	mul.w	r6, r2, r6
9001cffa:	fb02 7101 	mla	r1, r2, r1, r7
9001cffe:	9316      	str	r3, [sp, #88]	; 0x58
9001d000:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001d004:	4baa      	ldr	r3, [pc, #680]	; (9001d2b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001d006:	bf18      	it	ne
9001d008:	2100      	movne	r1, #0
9001d00a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001d00e:	eba3 030b 	sub.w	r3, r3, fp
9001d012:	920a      	str	r2, [sp, #40]	; 0x28
9001d014:	f104 0204 	add.w	r2, r4, #4
9001d018:	9317      	str	r3, [sp, #92]	; 0x5c
9001d01a:	9213      	str	r2, [sp, #76]	; 0x4c
9001d01c:	9a06      	ldr	r2, [sp, #24]
9001d01e:	bf08      	it	eq
9001d020:	4611      	moveq	r1, r2
9001d022:	2200      	movs	r2, #0
9001d024:	b289      	uxth	r1, r1
9001d026:	920d      	str	r2, [sp, #52]	; 0x34
9001d028:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d02a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d02c:	fa12 f383 	uxtah	r3, r2, r3
9001d030:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d032:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d036:	3304      	adds	r3, #4
9001d038:	9308      	str	r3, [sp, #32]
9001d03a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d03c:	4543      	cmp	r3, r8
9001d03e:	f240 8168 	bls.w	9001d312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001d042:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001d046:	f04f 0e01 	mov.w	lr, #1
9001d04a:	9a02      	ldr	r2, [sp, #8]
9001d04c:	9808      	ldr	r0, [sp, #32]
9001d04e:	fbb5 f3f3 	udiv	r3, r5, r3
9001d052:	1ad3      	subs	r3, r2, r3
9001d054:	7800      	ldrb	r0, [r0, #0]
9001d056:	b29b      	uxth	r3, r3
9001d058:	9010      	str	r0, [sp, #64]	; 0x40
9001d05a:	3001      	adds	r0, #1
9001d05c:	9314      	str	r3, [sp, #80]	; 0x50
9001d05e:	9b08      	ldr	r3, [sp, #32]
9001d060:	9007      	str	r0, [sp, #28]
9001d062:	785a      	ldrb	r2, [r3, #1]
9001d064:	789b      	ldrb	r3, [r3, #2]
9001d066:	021b      	lsls	r3, r3, #8
9001d068:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d06c:	9a08      	ldr	r2, [sp, #32]
9001d06e:	78d2      	ldrb	r2, [r2, #3]
9001d070:	4313      	orrs	r3, r2
9001d072:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d074:	441a      	add	r2, r3
9001d076:	1c50      	adds	r0, r2, #1
9001d078:	7852      	ldrb	r2, [r2, #1]
9001d07a:	9005      	str	r0, [sp, #20]
9001d07c:	0212      	lsls	r2, r2, #8
9001d07e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d080:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001d084:	5cc3      	ldrb	r3, [r0, r3]
9001d086:	431a      	orrs	r2, r3
9001d088:	b293      	uxth	r3, r2
9001d08a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001d08e:	930b      	str	r3, [sp, #44]	; 0x2c
9001d090:	2300      	movs	r3, #0
9001d092:	9309      	str	r3, [sp, #36]	; 0x24
9001d094:	2301      	movs	r3, #1
9001d096:	9301      	str	r3, [sp, #4]
9001d098:	9304      	str	r3, [sp, #16]
9001d09a:	2300      	movs	r3, #0
9001d09c:	9303      	str	r3, [sp, #12]
9001d09e:	2d00      	cmp	r5, #0
9001d0a0:	d07d      	beq.n	9001d19e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001d0a2:	45ae      	cmp	lr, r5
9001d0a4:	d26c      	bcs.n	9001d180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001d0a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d0a8:	eba5 050e 	sub.w	r5, r5, lr
9001d0ac:	460c      	mov	r4, r1
9001d0ae:	4543      	cmp	r3, r8
9001d0b0:	b2ad      	uxth	r5, r5
9001d0b2:	d802      	bhi.n	9001d0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001d0b4:	e071      	b.n	9001d19a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001d0b6:	2b00      	cmp	r3, #0
9001d0b8:	d15d      	bne.n	9001d176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001d0ba:	9b05      	ldr	r3, [sp, #20]
9001d0bc:	9a04      	ldr	r2, [sp, #16]
9001d0be:	785b      	ldrb	r3, [r3, #1]
9001d0c0:	f1c2 0207 	rsb	r2, r2, #7
9001d0c4:	9904      	ldr	r1, [sp, #16]
9001d0c6:	4093      	lsls	r3, r2
9001d0c8:	005b      	lsls	r3, r3, #1
9001d0ca:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d0ce:	9b05      	ldr	r3, [sp, #20]
9001d0d0:	781b      	ldrb	r3, [r3, #0]
9001d0d2:	410b      	asrs	r3, r1
9001d0d4:	3101      	adds	r1, #1
9001d0d6:	b2c9      	uxtb	r1, r1
9001d0d8:	b2db      	uxtb	r3, r3
9001d0da:	2908      	cmp	r1, #8
9001d0dc:	9104      	str	r1, [sp, #16]
9001d0de:	9905      	ldr	r1, [sp, #20]
9001d0e0:	ea43 0302 	orr.w	r3, r3, r2
9001d0e4:	bf0c      	ite	eq
9001d0e6:	3102      	addeq	r1, #2
9001d0e8:	3101      	addne	r1, #1
9001d0ea:	b29a      	uxth	r2, r3
9001d0ec:	bf05      	ittet	eq
9001d0ee:	9105      	streq	r1, [sp, #20]
9001d0f0:	2100      	moveq	r1, #0
9001d0f2:	9105      	strne	r1, [sp, #20]
9001d0f4:	9104      	streq	r1, [sp, #16]
9001d0f6:	9910      	ldr	r1, [sp, #64]	; 0x40
9001d0f8:	4291      	cmp	r1, r2
9001d0fa:	d30a      	bcc.n	9001d112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001d0fc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001d100:	2301      	movs	r3, #1
9001d102:	9907      	ldr	r1, [sp, #28]
9001d104:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001d108:	d30f      	bcc.n	9001d12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d10a:	2100      	movs	r1, #0
9001d10c:	9301      	str	r3, [sp, #4]
9001d10e:	9103      	str	r1, [sp, #12]
9001d110:	e032      	b.n	9001d178 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001d112:	9b07      	ldr	r3, [sp, #28]
9001d114:	429a      	cmp	r2, r3
9001d116:	d318      	bcc.n	9001d14a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001d118:	9b01      	ldr	r3, [sp, #4]
9001d11a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001d11e:	445b      	add	r3, fp
9001d120:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001d124:	9b01      	ldr	r3, [sp, #4]
9001d126:	3301      	adds	r3, #1
9001d128:	b29b      	uxth	r3, r3
9001d12a:	9907      	ldr	r1, [sp, #28]
9001d12c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001d130:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d134:	7108      	strb	r0, [r1, #4]
9001d136:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001d138:	80c8      	strh	r0, [r1, #6]
9001d13a:	9801      	ldr	r0, [sp, #4]
9001d13c:	3001      	adds	r0, #1
9001d13e:	7148      	strb	r0, [r1, #5]
9001d140:	9907      	ldr	r1, [sp, #28]
9001d142:	3101      	adds	r1, #1
9001d144:	b289      	uxth	r1, r1
9001d146:	9107      	str	r1, [sp, #28]
9001d148:	e7df      	b.n	9001d10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001d14a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001d14e:	4611      	mov	r1, r2
9001d150:	795b      	ldrb	r3, [r3, #5]
9001d152:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001d156:	4458      	add	r0, fp
9001d158:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001d15a:	4406      	add	r6, r0
9001d15c:	2e00      	cmp	r6, #0
9001d15e:	dd06      	ble.n	9001d16e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d160:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d164:	790e      	ldrb	r6, [r1, #4]
9001d166:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001d16a:	88c9      	ldrh	r1, [r1, #6]
9001d16c:	e7f4      	b.n	9001d158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001d16e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001d172:	b29b      	uxth	r3, r3
9001d174:	e7c5      	b.n	9001d102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001d176:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d178:	4621      	mov	r1, r4
9001d17a:	920b      	str	r2, [sp, #44]	; 0x2c
9001d17c:	469e      	mov	lr, r3
9001d17e:	e78e      	b.n	9001d09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001d180:	9a03      	ldr	r2, [sp, #12]
9001d182:	ebae 0305 	sub.w	r3, lr, r5
9001d186:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d18a:	442a      	add	r2, r5
9001d18c:	b29b      	uxth	r3, r3
9001d18e:	b292      	uxth	r2, r2
9001d190:	9203      	str	r2, [sp, #12]
9001d192:	2500      	movs	r5, #0
9001d194:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d196:	4542      	cmp	r2, r8
9001d198:	d88d      	bhi.n	9001d0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d19a:	4621      	mov	r1, r4
9001d19c:	e74d      	b.n	9001d03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001d19e:	458e      	cmp	lr, r1
9001d1a0:	f04f 0900 	mov.w	r9, #0
9001d1a4:	bf2b      	itete	cs
9001d1a6:	ebae 0301 	subcs.w	r3, lr, r1
9001d1aa:	eba1 040e 	subcc.w	r4, r1, lr
9001d1ae:	462c      	movcs	r4, r5
9001d1b0:	462b      	movcc	r3, r5
9001d1b2:	bf27      	ittee	cs
9001d1b4:	b29b      	uxthcs	r3, r3
9001d1b6:	910c      	strcs	r1, [sp, #48]	; 0x30
9001d1b8:	b2a4      	uxthcc	r4, r4
9001d1ba:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001d1be:	9a03      	ldr	r2, [sp, #12]
9001d1c0:	980c      	ldr	r0, [sp, #48]	; 0x30
9001d1c2:	444a      	add	r2, r9
9001d1c4:	4548      	cmp	r0, r9
9001d1c6:	b292      	uxth	r2, r2
9001d1c8:	d074      	beq.n	9001d2b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001d1ca:	2004      	movs	r0, #4
9001d1cc:	445a      	add	r2, fp
9001d1ce:	4605      	mov	r5, r0
9001d1d0:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001d1d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d1d6:	fb15 0202 	smlabb	r2, r5, r2, r0
9001d1da:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d1dc:	5880      	ldr	r0, [r0, r2]
9001d1de:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001d1e2:	d014      	beq.n	9001d20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d1e4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d1e8:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001d1ec:	d112      	bne.n	9001d214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d1ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d1f0:	2aff      	cmp	r2, #255	; 0xff
9001d1f2:	d10f      	bne.n	9001d214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d1f4:	0942      	lsrs	r2, r0, #5
9001d1f6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001d1fa:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d1fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d202:	f025 0507 	bic.w	r5, r5, #7
9001d206:	4315      	orrs	r5, r2
9001d208:	4305      	orrs	r5, r0
9001d20a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001d20e:	f109 0901 	add.w	r9, r9, #1
9001d212:	e7d4      	b.n	9001d1be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001d214:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001d218:	b2ed      	uxtb	r5, r5
9001d21a:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d21e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d222:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001d226:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d22a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001d22e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d232:	9215      	str	r2, [sp, #84]	; 0x54
9001d234:	fa5f fc8c 	uxtb.w	ip, ip
9001d238:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d23a:	b2c0      	uxtb	r0, r0
9001d23c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d240:	fb02 fa0a 	mul.w	sl, r2, sl
9001d244:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001d248:	f10a 0201 	add.w	r2, sl, #1
9001d24c:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001d250:	1212      	asrs	r2, r2, #8
9001d252:	fa1f fa82 	uxth.w	sl, r2
9001d256:	43d2      	mvns	r2, r2
9001d258:	fb16 f60a 	smulbb	r6, r6, sl
9001d25c:	b2d2      	uxtb	r2, r2
9001d25e:	fb10 f00a 	smulbb	r0, r0, sl
9001d262:	fb07 6702 	mla	r7, r7, r2, r6
9001d266:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001d268:	fb0c 0002 	mla	r0, ip, r2, r0
9001d26c:	fb15 f50a 	smulbb	r5, r5, sl
9001d270:	b2bf      	uxth	r7, r7
9001d272:	b280      	uxth	r0, r0
9001d274:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d278:	fb06 5602 	mla	r6, r6, r2, r5
9001d27c:	1c7a      	adds	r2, r7, #1
9001d27e:	1c45      	adds	r5, r0, #1
9001d280:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d284:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d288:	b2b6      	uxth	r6, r6
9001d28a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d28e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d292:	432f      	orrs	r7, r5
9001d294:	1c75      	adds	r5, r6, #1
9001d296:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d29a:	096d      	lsrs	r5, r5, #5
9001d29c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d2a0:	432f      	orrs	r7, r5
9001d2a2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001d2a6:	e7b2      	b.n	9001d20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d2a8:	24039704 	.word	0x24039704
9001d2ac:	240396fe 	.word	0x240396fe
9001d2b0:	fffff7fb 	.word	0xfffff7fb
9001d2b4:	9203      	str	r2, [sp, #12]
9001d2b6:	458e      	cmp	lr, r1
9001d2b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001d2ba:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d2be:	f4ff af68 	bcc.w	9001d192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001d2c2:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001d2c4:	9906      	ldr	r1, [sp, #24]
9001d2c6:	8812      	ldrh	r2, [r2, #0]
9001d2c8:	1a52      	subs	r2, r2, r1
9001d2ca:	9914      	ldr	r1, [sp, #80]	; 0x50
9001d2cc:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d2d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d2d2:	3201      	adds	r2, #1
9001d2d4:	428a      	cmp	r2, r1
9001d2d6:	9209      	str	r2, [sp, #36]	; 0x24
9001d2d8:	d111      	bne.n	9001d2fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001d2da:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001d2de:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001d2e2:	9b06      	ldr	r3, [sp, #24]
9001d2e4:	eba5 0509 	sub.w	r5, r5, r9
9001d2e8:	b2ad      	uxth	r5, r5
9001d2ea:	2d00      	cmp	r5, #0
9001d2ec:	bf08      	it	eq
9001d2ee:	4619      	moveq	r1, r3
9001d2f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d2f2:	bf18      	it	ne
9001d2f4:	2100      	movne	r1, #0
9001d2f6:	3301      	adds	r3, #1
9001d2f8:	b289      	uxth	r1, r1
9001d2fa:	930d      	str	r3, [sp, #52]	; 0x34
9001d2fc:	e694      	b.n	9001d028 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001d2fe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d302:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001d306:	1b2d      	subs	r5, r5, r4
9001d308:	b2ad      	uxth	r5, r5
9001d30a:	2d00      	cmp	r5, #0
9001d30c:	bf18      	it	ne
9001d30e:	2400      	movne	r4, #0
9001d310:	e740      	b.n	9001d194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001d312:	4b04      	ldr	r3, [pc, #16]	; (9001d324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001d314:	6818      	ldr	r0, [r3, #0]
9001d316:	6803      	ldr	r3, [r0, #0]
9001d318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d31a:	4798      	blx	r3
9001d31c:	b01d      	add	sp, #116	; 0x74
9001d31e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d322:	bf00      	nop
9001d324:	24039704 	.word	0x24039704

9001d328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d32c:	b09f      	sub	sp, #124	; 0x7c
9001d32e:	461d      	mov	r5, r3
9001d330:	4604      	mov	r4, r0
9001d332:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d334:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001d338:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001d33c:	920a      	str	r2, [sp, #40]	; 0x28
9001d33e:	2a00      	cmp	r2, #0
9001d340:	f000 81fe 	beq.w	9001d740 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001d344:	6828      	ldr	r0, [r5, #0]
9001d346:	aa1a      	add	r2, sp, #104	; 0x68
9001d348:	6869      	ldr	r1, [r5, #4]
9001d34a:	c203      	stmia	r2!, {r0, r1}
9001d34c:	6818      	ldr	r0, [r3, #0]
9001d34e:	aa1c      	add	r2, sp, #112	; 0x70
9001d350:	6859      	ldr	r1, [r3, #4]
9001d352:	c203      	stmia	r2!, {r0, r1}
9001d354:	a81a      	add	r0, sp, #104	; 0x68
9001d356:	f7f8 fdef 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d35a:	4629      	mov	r1, r5
9001d35c:	a81c      	add	r0, sp, #112	; 0x70
9001d35e:	f7f8 fe2f 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d362:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d366:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001d36a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d36e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001d372:	bfdb      	ittet	le
9001d374:	b29a      	uxthle	r2, r3
9001d376:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d37a:	2201      	movgt	r2, #1
9001d37c:	fb91 f2f2 	sdivle	r2, r1, r2
9001d380:	9201      	str	r2, [sp, #4]
9001d382:	9801      	ldr	r0, [sp, #4]
9001d384:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001d388:	9901      	ldr	r1, [sp, #4]
9001d38a:	fb92 f0f0 	sdiv	r0, r2, r0
9001d38e:	b280      	uxth	r0, r0
9001d390:	440e      	add	r6, r1
9001d392:	9010      	str	r0, [sp, #64]	; 0x40
9001d394:	3e01      	subs	r6, #1
9001d396:	9801      	ldr	r0, [sp, #4]
9001d398:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d39a:	fb05 2510 	mls	r5, r5, r0, r2
9001d39e:	fb96 f6f1 	sdiv	r6, r6, r1
9001d3a2:	fb15 f503 	smulbb	r5, r5, r3
9001d3a6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001d3aa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001d3ae:	3601      	adds	r6, #1
9001d3b0:	440d      	add	r5, r1
9001d3b2:	4419      	add	r1, r3
9001d3b4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001d3b8:	b2b6      	uxth	r6, r6
9001d3ba:	441a      	add	r2, r3
9001d3bc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001d3c0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001d3c4:	b2ad      	uxth	r5, r5
9001d3c6:	9304      	str	r3, [sp, #16]
9001d3c8:	4b96      	ldr	r3, [pc, #600]	; (9001d624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d3ca:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001d3ce:	6818      	ldr	r0, [r3, #0]
9001d3d0:	6803      	ldr	r3, [r0, #0]
9001d3d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d3d4:	4798      	blx	r3
9001d3d6:	4b94      	ldr	r3, [pc, #592]	; (9001d628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001d3d8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001d3dc:	2d00      	cmp	r5, #0
9001d3de:	881a      	ldrh	r2, [r3, #0]
9001d3e0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001d3e4:	fb02 f707 	mul.w	r7, r2, r7
9001d3e8:	fb02 c101 	mla	r1, r2, r1, ip
9001d3ec:	9318      	str	r3, [sp, #96]	; 0x60
9001d3ee:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001d3f2:	4b8e      	ldr	r3, [pc, #568]	; (9001d62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001d3f4:	bf18      	it	ne
9001d3f6:	2100      	movne	r1, #0
9001d3f8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001d3fc:	eba3 0304 	sub.w	r3, r3, r4
9001d400:	920b      	str	r2, [sp, #44]	; 0x2c
9001d402:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d404:	9319      	str	r3, [sp, #100]	; 0x64
9001d406:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001d40a:	f106 0204 	add.w	r2, r6, #4
9001d40e:	9206      	str	r2, [sp, #24]
9001d410:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d412:	ea6f 0202 	mvn.w	r2, r2
9001d416:	b2d2      	uxtb	r2, r2
9001d418:	9215      	str	r2, [sp, #84]	; 0x54
9001d41a:	9a04      	ldr	r2, [sp, #16]
9001d41c:	bf08      	it	eq
9001d41e:	4611      	moveq	r1, r2
9001d420:	2200      	movs	r2, #0
9001d422:	b289      	uxth	r1, r1
9001d424:	920d      	str	r2, [sp, #52]	; 0x34
9001d426:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d428:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d42a:	fa12 f383 	uxtah	r3, r2, r3
9001d42e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d430:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d434:	3304      	adds	r3, #4
9001d436:	9307      	str	r3, [sp, #28]
9001d438:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d43a:	455b      	cmp	r3, fp
9001d43c:	f240 817b 	bls.w	9001d736 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001d440:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001d444:	f04f 0801 	mov.w	r8, #1
9001d448:	9a01      	ldr	r2, [sp, #4]
9001d44a:	9807      	ldr	r0, [sp, #28]
9001d44c:	46c4      	mov	ip, r8
9001d44e:	f8cd 8008 	str.w	r8, [sp, #8]
9001d452:	7800      	ldrb	r0, [r0, #0]
9001d454:	fbb5 f3f3 	udiv	r3, r5, r3
9001d458:	1ad3      	subs	r3, r2, r3
9001d45a:	9011      	str	r0, [sp, #68]	; 0x44
9001d45c:	3001      	adds	r0, #1
9001d45e:	b29b      	uxth	r3, r3
9001d460:	9005      	str	r0, [sp, #20]
9001d462:	9316      	str	r3, [sp, #88]	; 0x58
9001d464:	9b07      	ldr	r3, [sp, #28]
9001d466:	785a      	ldrb	r2, [r3, #1]
9001d468:	789b      	ldrb	r3, [r3, #2]
9001d46a:	021b      	lsls	r3, r3, #8
9001d46c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d470:	9a07      	ldr	r2, [sp, #28]
9001d472:	78d2      	ldrb	r2, [r2, #3]
9001d474:	4313      	orrs	r3, r2
9001d476:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d478:	441a      	add	r2, r3
9001d47a:	1c50      	adds	r0, r2, #1
9001d47c:	7852      	ldrb	r2, [r2, #1]
9001d47e:	9003      	str	r0, [sp, #12]
9001d480:	0212      	lsls	r2, r2, #8
9001d482:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d484:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001d488:	5cc3      	ldrb	r3, [r0, r3]
9001d48a:	431a      	orrs	r2, r3
9001d48c:	b293      	uxth	r3, r2
9001d48e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001d492:	930c      	str	r3, [sp, #48]	; 0x30
9001d494:	2300      	movs	r3, #0
9001d496:	9308      	str	r3, [sp, #32]
9001d498:	461a      	mov	r2, r3
9001d49a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001d49e:	930e      	str	r3, [sp, #56]	; 0x38
9001d4a0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001d4a4:	930f      	str	r3, [sp, #60]	; 0x3c
9001d4a6:	2d00      	cmp	r5, #0
9001d4a8:	d07d      	beq.n	9001d5a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001d4aa:	45ac      	cmp	ip, r5
9001d4ac:	d26d      	bcs.n	9001d58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001d4ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d4b0:	eba5 050c 	sub.w	r5, r5, ip
9001d4b4:	4608      	mov	r0, r1
9001d4b6:	455b      	cmp	r3, fp
9001d4b8:	b2ad      	uxth	r5, r5
9001d4ba:	d802      	bhi.n	9001d4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001d4bc:	e071      	b.n	9001d5a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001d4be:	2b00      	cmp	r3, #0
9001d4c0:	d15d      	bne.n	9001d57e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001d4c2:	9b03      	ldr	r3, [sp, #12]
9001d4c4:	9a02      	ldr	r2, [sp, #8]
9001d4c6:	785b      	ldrb	r3, [r3, #1]
9001d4c8:	f1c2 0207 	rsb	r2, r2, #7
9001d4cc:	9902      	ldr	r1, [sp, #8]
9001d4ce:	4093      	lsls	r3, r2
9001d4d0:	005b      	lsls	r3, r3, #1
9001d4d2:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d4d6:	9b03      	ldr	r3, [sp, #12]
9001d4d8:	781b      	ldrb	r3, [r3, #0]
9001d4da:	410b      	asrs	r3, r1
9001d4dc:	3101      	adds	r1, #1
9001d4de:	b2c9      	uxtb	r1, r1
9001d4e0:	b2db      	uxtb	r3, r3
9001d4e2:	2908      	cmp	r1, #8
9001d4e4:	9102      	str	r1, [sp, #8]
9001d4e6:	9903      	ldr	r1, [sp, #12]
9001d4e8:	ea43 0302 	orr.w	r3, r3, r2
9001d4ec:	bf0c      	ite	eq
9001d4ee:	3102      	addeq	r1, #2
9001d4f0:	3101      	addne	r1, #1
9001d4f2:	b29a      	uxth	r2, r3
9001d4f4:	bf05      	ittet	eq
9001d4f6:	9103      	streq	r1, [sp, #12]
9001d4f8:	2100      	moveq	r1, #0
9001d4fa:	9103      	strne	r1, [sp, #12]
9001d4fc:	9102      	streq	r1, [sp, #8]
9001d4fe:	9911      	ldr	r1, [sp, #68]	; 0x44
9001d500:	4291      	cmp	r1, r2
9001d502:	d30a      	bcc.n	9001d51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d504:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001d508:	2301      	movs	r3, #1
9001d50a:	9905      	ldr	r1, [sp, #20]
9001d50c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001d510:	d30f      	bcc.n	9001d532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001d512:	2100      	movs	r1, #0
9001d514:	4698      	mov	r8, r3
9001d516:	9100      	str	r1, [sp, #0]
9001d518:	e032      	b.n	9001d580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001d51a:	9b05      	ldr	r3, [sp, #20]
9001d51c:	429a      	cmp	r2, r3
9001d51e:	d318      	bcc.n	9001d552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001d520:	eb04 0308 	add.w	r3, r4, r8
9001d524:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001d528:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001d52c:	f108 0301 	add.w	r3, r8, #1
9001d530:	b29b      	uxth	r3, r3
9001d532:	9905      	ldr	r1, [sp, #20]
9001d534:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001d538:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d53c:	710e      	strb	r6, [r1, #4]
9001d53e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001d540:	80ce      	strh	r6, [r1, #6]
9001d542:	f108 0601 	add.w	r6, r8, #1
9001d546:	714e      	strb	r6, [r1, #5]
9001d548:	9905      	ldr	r1, [sp, #20]
9001d54a:	3101      	adds	r1, #1
9001d54c:	b289      	uxth	r1, r1
9001d54e:	9105      	str	r1, [sp, #20]
9001d550:	e7df      	b.n	9001d512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001d552:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001d556:	4611      	mov	r1, r2
9001d558:	795b      	ldrb	r3, [r3, #5]
9001d55a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001d55e:	4426      	add	r6, r4
9001d560:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001d562:	4437      	add	r7, r6
9001d564:	2f00      	cmp	r7, #0
9001d566:	dd06      	ble.n	9001d576 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001d568:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001d56c:	790f      	ldrb	r7, [r1, #4]
9001d56e:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001d572:	88c9      	ldrh	r1, [r1, #6]
9001d574:	e7f4      	b.n	9001d560 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001d576:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001d57a:	b29b      	uxth	r3, r3
9001d57c:	e7c5      	b.n	9001d50a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001d57e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001d580:	920c      	str	r2, [sp, #48]	; 0x30
9001d582:	4601      	mov	r1, r0
9001d584:	9a00      	ldr	r2, [sp, #0]
9001d586:	469c      	mov	ip, r3
9001d588:	e78d      	b.n	9001d4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d58a:	ebac 0305 	sub.w	r3, ip, r5
9001d58e:	1957      	adds	r7, r2, r5
9001d590:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d594:	b2ba      	uxth	r2, r7
9001d596:	b29b      	uxth	r3, r3
9001d598:	9200      	str	r2, [sp, #0]
9001d59a:	2500      	movs	r5, #0
9001d59c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d59e:	455a      	cmp	r2, fp
9001d5a0:	d88d      	bhi.n	9001d4be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001d5a2:	4601      	mov	r1, r0
9001d5a4:	e748      	b.n	9001d438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001d5a6:	458c      	cmp	ip, r1
9001d5a8:	bf27      	ittee	cs
9001d5aa:	ebac 0301 	subcs.w	r3, ip, r1
9001d5ae:	4628      	movcs	r0, r5
9001d5b0:	eba1 000c 	subcc.w	r0, r1, ip
9001d5b4:	462b      	movcc	r3, r5
9001d5b6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001d5b8:	bf27      	ittee	cs
9001d5ba:	b29b      	uxthcs	r3, r3
9001d5bc:	9109      	strcs	r1, [sp, #36]	; 0x24
9001d5be:	b280      	uxthcc	r0, r0
9001d5c0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001d5c4:	2dff      	cmp	r5, #255	; 0xff
9001d5c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001d5c8:	eb02 0705 	add.w	r7, r2, r5
9001d5cc:	b2bd      	uxth	r5, r7
9001d5ce:	9500      	str	r5, [sp, #0]
9001d5d0:	d12e      	bne.n	9001d630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001d5d2:	465e      	mov	r6, fp
9001d5d4:	9d00      	ldr	r5, [sp, #0]
9001d5d6:	42aa      	cmp	r2, r5
9001d5d8:	f040 8083 	bne.w	9001d6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001d5dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d5de:	458c      	cmp	ip, r1
9001d5e0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d5e4:	d3d9      	bcc.n	9001d59a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001d5e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001d5e8:	9904      	ldr	r1, [sp, #16]
9001d5ea:	8812      	ldrh	r2, [r2, #0]
9001d5ec:	1a52      	subs	r2, r2, r1
9001d5ee:	9916      	ldr	r1, [sp, #88]	; 0x58
9001d5f0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001d5f4:	9a08      	ldr	r2, [sp, #32]
9001d5f6:	3201      	adds	r2, #1
9001d5f8:	428a      	cmp	r2, r1
9001d5fa:	9208      	str	r2, [sp, #32]
9001d5fc:	f040 8091 	bne.w	9001d722 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001d600:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001d604:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001d608:	9b04      	ldr	r3, [sp, #16]
9001d60a:	eba5 050c 	sub.w	r5, r5, ip
9001d60e:	b2ad      	uxth	r5, r5
9001d610:	2d00      	cmp	r5, #0
9001d612:	bf08      	it	eq
9001d614:	4619      	moveq	r1, r3
9001d616:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d618:	bf18      	it	ne
9001d61a:	2100      	movne	r1, #0
9001d61c:	3301      	adds	r3, #1
9001d61e:	b289      	uxth	r1, r1
9001d620:	930d      	str	r3, [sp, #52]	; 0x34
9001d622:	e700      	b.n	9001d426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001d624:	24039704 	.word	0x24039704
9001d628:	240396fe 	.word	0x240396fe
9001d62c:	fffff7fb 	.word	0xfffff7fb
9001d630:	46d9      	mov	r9, fp
9001d632:	9d00      	ldr	r5, [sp, #0]
9001d634:	42aa      	cmp	r2, r5
9001d636:	d0d1      	beq.n	9001d5dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001d638:	1c55      	adds	r5, r2, #1
9001d63a:	4422      	add	r2, r4
9001d63c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001d640:	9a06      	ldr	r2, [sp, #24]
9001d642:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d646:	9517      	str	r5, [sp, #92]	; 0x5c
9001d648:	4472      	add	r2, lr
9001d64a:	9212      	str	r2, [sp, #72]	; 0x48
9001d64c:	f8b9 2000 	ldrh.w	r2, [r9]
9001d650:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001d652:	1216      	asrs	r6, r2, #8
9001d654:	f897 a002 	ldrb.w	sl, [r7, #2]
9001d658:	10d5      	asrs	r5, r2, #3
9001d65a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d65c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d660:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d664:	00d2      	lsls	r2, r2, #3
9001d666:	fb1a fa07 	smulbb	sl, sl, r7
9001d66a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d66e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d670:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d674:	b2d2      	uxtb	r2, r2
9001d676:	fb06 a607 	mla	r6, r6, r7, sl
9001d67a:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001d67c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d680:	f897 a001 	ldrb.w	sl, [r7, #1]
9001d684:	b2b6      	uxth	r6, r6
9001d686:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d688:	fb1a fa07 	smulbb	sl, sl, r7
9001d68c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d68e:	fb05 a507 	mla	r5, r5, r7, sl
9001d692:	9f06      	ldr	r7, [sp, #24]
9001d694:	f106 0a01 	add.w	sl, r6, #1
9001d698:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d69c:	b2ad      	uxth	r5, r5
9001d69e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001d6a0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d6a4:	f105 0a01 	add.w	sl, r5, #1
9001d6a8:	fb1e fe07 	smulbb	lr, lr, r7
9001d6ac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d6ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d6b2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001d6b6:	fb02 e207 	mla	r2, r2, r7, lr
9001d6ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d6be:	b292      	uxth	r2, r2
9001d6c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d6c4:	f102 0e01 	add.w	lr, r2, #1
9001d6c8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001d6cc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001d6d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d6d4:	ea4e 0606 	orr.w	r6, lr, r6
9001d6d8:	ea46 060a 	orr.w	r6, r6, sl
9001d6dc:	f829 6b02 	strh.w	r6, [r9], #2
9001d6e0:	e7a7      	b.n	9001d632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001d6e2:	f102 0e01 	add.w	lr, r2, #1
9001d6e6:	4422      	add	r2, r4
9001d6e8:	9f06      	ldr	r7, [sp, #24]
9001d6ea:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001d6ee:	9a06      	ldr	r2, [sp, #24]
9001d6f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001d6f4:	eb02 0a05 	add.w	sl, r2, r5
9001d6f8:	4a13      	ldr	r2, [pc, #76]	; (9001d748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001d6fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001d6fe:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001d702:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001d706:	00d2      	lsls	r2, r2, #3
9001d708:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d70c:	ea49 0202 	orr.w	r2, r9, r2
9001d710:	f817 9005 	ldrb.w	r9, [r7, r5]
9001d714:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001d718:	f826 2b02 	strh.w	r2, [r6], #2
9001d71c:	fa1f f28e 	uxth.w	r2, lr
9001d720:	e758      	b.n	9001d5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001d722:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001d726:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001d72a:	1a2d      	subs	r5, r5, r0
9001d72c:	b2ad      	uxth	r5, r5
9001d72e:	2d00      	cmp	r5, #0
9001d730:	bf18      	it	ne
9001d732:	2000      	movne	r0, #0
9001d734:	e732      	b.n	9001d59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001d736:	4b05      	ldr	r3, [pc, #20]	; (9001d74c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001d738:	6818      	ldr	r0, [r3, #0]
9001d73a:	6803      	ldr	r3, [r0, #0]
9001d73c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d73e:	4798      	blx	r3
9001d740:	b01f      	add	sp, #124	; 0x7c
9001d742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d746:	bf00      	nop
9001d748:	fffff800 	.word	0xfffff800
9001d74c:	24039704 	.word	0x24039704

9001d750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001d750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d754:	b091      	sub	sp, #68	; 0x44
9001d756:	469b      	mov	fp, r3
9001d758:	4616      	mov	r6, r2
9001d75a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001d75e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001d762:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001d766:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001d76a:	4604      	mov	r4, r0
9001d76c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001d770:	4640      	mov	r0, r8
9001d772:	460d      	mov	r5, r1
9001d774:	4659      	mov	r1, fp
9001d776:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001d77a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001d77e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001d782:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001d786:	f7f3 fb63 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
9001d78a:	4631      	mov	r1, r6
9001d78c:	4640      	mov	r0, r8
9001d78e:	f7f3 fb5f 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
9001d792:	4b74      	ldr	r3, [pc, #464]	; (9001d964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001d794:	8818      	ldrh	r0, [r3, #0]
9001d796:	4b74      	ldr	r3, [pc, #464]	; (9001d968 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001d798:	b202      	sxth	r2, r0
9001d79a:	8819      	ldrh	r1, [r3, #0]
9001d79c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001d7a0:	b20e      	sxth	r6, r1
9001d7a2:	2b00      	cmp	r3, #0
9001d7a4:	da07      	bge.n	9001d7b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001d7a6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001d7aa:	4463      	add	r3, ip
9001d7ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001d7b0:	2300      	movs	r3, #0
9001d7b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001d7b6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001d7ba:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001d7be:	1ad2      	subs	r2, r2, r3
9001d7c0:	4594      	cmp	ip, r2
9001d7c2:	bfc4      	itt	gt
9001d7c4:	1ac2      	subgt	r2, r0, r3
9001d7c6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001d7ca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001d7ce:	2a00      	cmp	r2, #0
9001d7d0:	da07      	bge.n	9001d7e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001d7d2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001d7d6:	4462      	add	r2, ip
9001d7d8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001d7dc:	2200      	movs	r2, #0
9001d7de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001d7e2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001d7e6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001d7ea:	eba6 060a 	sub.w	r6, r6, sl
9001d7ee:	42b2      	cmp	r2, r6
9001d7f0:	bfc4      	itt	gt
9001d7f2:	eba1 020a 	subgt.w	r2, r1, sl
9001d7f6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001d7fa:	4a5c      	ldr	r2, [pc, #368]	; (9001d96c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001d7fc:	7812      	ldrb	r2, [r2, #0]
9001d7fe:	b9a2      	cbnz	r2, 9001d82a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001d800:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001d804:	4286      	cmp	r6, r0
9001d806:	4640      	mov	r0, r8
9001d808:	9303      	str	r3, [sp, #12]
9001d80a:	bf14      	ite	ne
9001d80c:	2600      	movne	r6, #0
9001d80e:	2601      	moveq	r6, #1
9001d810:	f7f3 fb61 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001d814:	9b03      	ldr	r3, [sp, #12]
9001d816:	b160      	cbz	r0, 9001d832 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001d818:	2300      	movs	r3, #0
9001d81a:	8023      	strh	r3, [r4, #0]
9001d81c:	8063      	strh	r3, [r4, #2]
9001d81e:	80a3      	strh	r3, [r4, #4]
9001d820:	4620      	mov	r0, r4
9001d822:	80e3      	strh	r3, [r4, #6]
9001d824:	b011      	add	sp, #68	; 0x44
9001d826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d82a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001d82e:	428e      	cmp	r6, r1
9001d830:	e7e9      	b.n	9001d806 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001d832:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001d836:	a90e      	add	r1, sp, #56	; 0x38
9001d838:	900e      	str	r0, [sp, #56]	; 0x38
9001d83a:	a80c      	add	r0, sp, #48	; 0x30
9001d83c:	9205      	str	r2, [sp, #20]
9001d83e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001d842:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001d846:	9206      	str	r2, [sp, #24]
9001d848:	f8bb 2000 	ldrh.w	r2, [fp]
9001d84c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001d850:	1a9b      	subs	r3, r3, r2
9001d852:	b21b      	sxth	r3, r3
9001d854:	9303      	str	r3, [sp, #12]
9001d856:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001d85a:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001d974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001d85e:	ebaa 0a03 	sub.w	sl, sl, r3
9001d862:	fa0f f38a 	sxth.w	r3, sl
9001d866:	9304      	str	r3, [sp, #16]
9001d868:	9b03      	ldr	r3, [sp, #12]
9001d86a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001d86e:	9b04      	ldr	r3, [sp, #16]
9001d870:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001d874:	9b05      	ldr	r3, [sp, #20]
9001d876:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001d87a:	9b06      	ldr	r3, [sp, #24]
9001d87c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001d880:	f7f8 fb9e 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d884:	4640      	mov	r0, r8
9001d886:	f7f8 fb57 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d88a:	a80e      	add	r0, sp, #56	; 0x38
9001d88c:	f7f8 fb54 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d890:	4b37      	ldr	r3, [pc, #220]	; (9001d970 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001d892:	4628      	mov	r0, r5
9001d894:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001d898:	881b      	ldrh	r3, [r3, #0]
9001d89a:	9307      	str	r3, [sp, #28]
9001d89c:	682b      	ldr	r3, [r5, #0]
9001d89e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001d8a0:	4798      	blx	r3
9001d8a2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001d8a6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001d8aa:	4681      	mov	r9, r0
9001d8ac:	f8db 0000 	ldr.w	r0, [fp]
9001d8b0:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001d8b4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001d8b6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d8ba:	6803      	ldr	r3, [r0, #0]
9001d8bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001d8be:	4798      	blx	r3
9001d8c0:	4607      	mov	r7, r0
9001d8c2:	f8db 0000 	ldr.w	r0, [fp]
9001d8c6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001d8ca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001d8ce:	6803      	ldr	r3, [r0, #0]
9001d8d0:	9109      	str	r1, [sp, #36]	; 0x24
9001d8d2:	9208      	str	r2, [sp, #32]
9001d8d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d8d6:	4798      	blx	r3
9001d8d8:	f010 0f01 	tst.w	r0, #1
9001d8dc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001d8e0:	d012      	beq.n	9001d908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001d8e2:	f8db 0000 	ldr.w	r0, [fp]
9001d8e6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001d8ea:	6803      	ldr	r3, [r0, #0]
9001d8ec:	9200      	str	r2, [sp, #0]
9001d8ee:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001d8f0:	462b      	mov	r3, r5
9001d8f2:	e898 0006 	ldmia.w	r8, {r1, r2}
9001d8f6:	47b0      	blx	r6
9001d8f8:	9b03      	ldr	r3, [sp, #12]
9001d8fa:	8023      	strh	r3, [r4, #0]
9001d8fc:	9b04      	ldr	r3, [sp, #16]
9001d8fe:	8063      	strh	r3, [r4, #2]
9001d900:	9b05      	ldr	r3, [sp, #20]
9001d902:	80a3      	strh	r3, [r4, #4]
9001d904:	9b06      	ldr	r3, [sp, #24]
9001d906:	e78b      	b.n	9001d820 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001d908:	fb09 f202 	mul.w	r2, r9, r2
9001d90c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001d910:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001d914:	440f      	add	r7, r1
9001d916:	b166      	cbz	r6, 9001d932 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001d918:	9a07      	ldr	r2, [sp, #28]
9001d91a:	4592      	cmp	sl, r2
9001d91c:	d109      	bne.n	9001d932 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001d91e:	f8db 0000 	ldr.w	r0, [fp]
9001d922:	fb09 f303 	mul.w	r3, r9, r3
9001d926:	4629      	mov	r1, r5
9001d928:	6802      	ldr	r2, [r0, #0]
9001d92a:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001d92c:	463a      	mov	r2, r7
9001d92e:	47b0      	blx	r6
9001d930:	e7e2      	b.n	9001d8f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001d932:	fb0a f303 	mul.w	r3, sl, r3
9001d936:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001d93a:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001d974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001d93e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001d942:	4545      	cmp	r5, r8
9001d944:	d2d8      	bcs.n	9001d8f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001d946:	f8db 0000 	ldr.w	r0, [fp]
9001d94a:	4629      	mov	r1, r5
9001d94c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d950:	4435      	add	r5, r6
9001d952:	6802      	ldr	r2, [r0, #0]
9001d954:	005b      	lsls	r3, r3, #1
9001d956:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001d95a:	463a      	mov	r2, r7
9001d95c:	47d0      	blx	sl
9001d95e:	444f      	add	r7, r9
9001d960:	e7ef      	b.n	9001d942 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001d962:	bf00      	nop
9001d964:	240396f8 	.word	0x240396f8
9001d968:	240396fa 	.word	0x240396fa
9001d96c:	240396fc 	.word	0x240396fc
9001d970:	240396fe 	.word	0x240396fe
9001d974:	24039704 	.word	0x24039704

9001d978 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001d978:	b5f0      	push	{r4, r5, r6, r7, lr}
9001d97a:	4606      	mov	r6, r0
9001d97c:	b087      	sub	sp, #28
9001d97e:	460c      	mov	r4, r1
9001d980:	4617      	mov	r7, r2
9001d982:	461d      	mov	r5, r3
9001d984:	b333      	cbz	r3, 9001d9d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001d986:	4608      	mov	r0, r1
9001d988:	f7f3 faa5 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001d98c:	bb10      	cbnz	r0, 9001d9d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001d98e:	6820      	ldr	r0, [r4, #0]
9001d990:	ab04      	add	r3, sp, #16
9001d992:	6861      	ldr	r1, [r4, #4]
9001d994:	4c1b      	ldr	r4, [pc, #108]	; (9001da04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001d996:	c303      	stmia	r3!, {r0, r1}
9001d998:	a804      	add	r0, sp, #16
9001d99a:	f7f8 facd 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d99e:	6820      	ldr	r0, [r4, #0]
9001d9a0:	6803      	ldr	r3, [r0, #0]
9001d9a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d9a4:	4798      	blx	r3
9001d9a6:	2dff      	cmp	r5, #255	; 0xff
9001d9a8:	d016      	beq.n	9001d9d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001d9aa:	f010 0f08 	tst.w	r0, #8
9001d9ae:	6820      	ldr	r0, [r4, #0]
9001d9b0:	d015      	beq.n	9001d9de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001d9b2:	2400      	movs	r4, #0
9001d9b4:	6801      	ldr	r1, [r0, #0]
9001d9b6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001d9ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d9be:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001d9c2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001d9c6:	9401      	str	r4, [sp, #4]
9001d9c8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001d9cc:	9400      	str	r4, [sp, #0]
9001d9ce:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001d9d0:	4639      	mov	r1, r7
9001d9d2:	47a0      	blx	r4
9001d9d4:	b007      	add	sp, #28
9001d9d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001d9d8:	f010 0f02 	tst.w	r0, #2
9001d9dc:	e7e7      	b.n	9001d9ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001d9de:	6803      	ldr	r3, [r0, #0]
9001d9e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d9e2:	4798      	blx	r3
9001d9e4:	4b08      	ldr	r3, [pc, #32]	; (9001da08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001d9e6:	4601      	mov	r1, r0
9001d9e8:	4630      	mov	r0, r6
9001d9ea:	881a      	ldrh	r2, [r3, #0]
9001d9ec:	6833      	ldr	r3, [r6, #0]
9001d9ee:	e9cd 7500 	strd	r7, r5, [sp]
9001d9f2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001d9f4:	ab04      	add	r3, sp, #16
9001d9f6:	47a8      	blx	r5
9001d9f8:	6820      	ldr	r0, [r4, #0]
9001d9fa:	6803      	ldr	r3, [r0, #0]
9001d9fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d9fe:	4798      	blx	r3
9001da00:	e7e8      	b.n	9001d9d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001da02:	bf00      	nop
9001da04:	24039704 	.word	0x24039704
9001da08:	240396fe 	.word	0x240396fe

9001da0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001da0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001da10:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001da14:	4688      	mov	r8, r1
9001da16:	4614      	mov	r4, r2
9001da18:	461d      	mov	r5, r3
9001da1a:	9e08      	ldr	r6, [sp, #32]
9001da1c:	2f00      	cmp	r7, #0
9001da1e:	f000 80ab 	beq.w	9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001da22:	4618      	mov	r0, r3
9001da24:	f7f3 fa57 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001da28:	2800      	cmp	r0, #0
9001da2a:	f040 80a5 	bne.w	9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001da2e:	f9b5 1000 	ldrsh.w	r1, [r5]
9001da32:	2fff      	cmp	r7, #255	; 0xff
9001da34:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001da38:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001da3c:	fb04 1303 	mla	r3, r4, r3, r1
9001da40:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001da44:	eba4 0200 	sub.w	r2, r4, r0
9001da48:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001da4c:	fb04 f505 	mul.w	r5, r4, r5
9001da50:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001da54:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001da58:	d04a      	beq.n	9001daf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001da5a:	b2bc      	uxth	r4, r7
9001da5c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001da60:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001da64:	fa5f f788 	uxtb.w	r7, r8
9001da68:	b2f3      	uxtb	r3, r6
9001da6a:	0040      	lsls	r0, r0, #1
9001da6c:	fb0e fe04 	mul.w	lr, lr, r4
9001da70:	4367      	muls	r7, r4
9001da72:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001da76:	4363      	muls	r3, r4
9001da78:	fa1f fc8c 	uxth.w	ip, ip
9001da7c:	42a9      	cmp	r1, r5
9001da7e:	d27b      	bcs.n	9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001da80:	eb01 0900 	add.w	r9, r1, r0
9001da84:	4549      	cmp	r1, r9
9001da86:	d231      	bcs.n	9001daec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001da88:	880a      	ldrh	r2, [r1, #0]
9001da8a:	1214      	asrs	r4, r2, #8
9001da8c:	10d6      	asrs	r6, r2, #3
9001da8e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001da92:	00d2      	lsls	r2, r2, #3
9001da94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001da98:	b2d2      	uxtb	r2, r2
9001da9a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001da9e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001daa2:	fb14 f40c 	smulbb	r4, r4, ip
9001daa6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001daaa:	fb12 f20c 	smulbb	r2, r2, ip
9001daae:	fb16 f60c 	smulbb	r6, r6, ip
9001dab2:	4474      	add	r4, lr
9001dab4:	441a      	add	r2, r3
9001dab6:	b2a4      	uxth	r4, r4
9001dab8:	443e      	add	r6, r7
9001daba:	b292      	uxth	r2, r2
9001dabc:	f104 0a01 	add.w	sl, r4, #1
9001dac0:	b2b6      	uxth	r6, r6
9001dac2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001dac6:	f102 0a01 	add.w	sl, r2, #1
9001daca:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001dace:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001dad2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dad6:	4322      	orrs	r2, r4
9001dad8:	1c74      	adds	r4, r6, #1
9001dada:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001dade:	0976      	lsrs	r6, r6, #5
9001dae0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001dae4:	4332      	orrs	r2, r6
9001dae6:	f821 2b02 	strh.w	r2, [r1], #2
9001daea:	e7cb      	b.n	9001da84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001daec:	4441      	add	r1, r8
9001daee:	e7c5      	b.n	9001da7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001daf0:	0973      	lsrs	r3, r6, #5
9001daf2:	4f22      	ldr	r7, [pc, #136]	; (9001db7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001daf4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001daf8:	ea08 0707 	and.w	r7, r8, r7
9001dafc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001db00:	433b      	orrs	r3, r7
9001db02:	07e7      	lsls	r7, r4, #31
9001db04:	ea43 0306 	orr.w	r3, r3, r6
9001db08:	b29b      	uxth	r3, r3
9001db0a:	d50b      	bpl.n	9001db24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001db0c:	0040      	lsls	r0, r0, #1
9001db0e:	0052      	lsls	r2, r2, #1
9001db10:	42a9      	cmp	r1, r5
9001db12:	d231      	bcs.n	9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001db14:	180c      	adds	r4, r1, r0
9001db16:	42a1      	cmp	r1, r4
9001db18:	d202      	bcs.n	9001db20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001db1a:	f821 3b02 	strh.w	r3, [r1], #2
9001db1e:	e7fa      	b.n	9001db16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001db20:	4411      	add	r1, r2
9001db22:	e7f5      	b.n	9001db10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001db24:	078e      	lsls	r6, r1, #30
9001db26:	d008      	beq.n	9001db3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001db28:	0066      	lsls	r6, r4, #1
9001db2a:	460a      	mov	r2, r1
9001db2c:	42aa      	cmp	r2, r5
9001db2e:	d202      	bcs.n	9001db36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001db30:	8013      	strh	r3, [r2, #0]
9001db32:	4432      	add	r2, r6
9001db34:	e7fa      	b.n	9001db2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001db36:	3102      	adds	r1, #2
9001db38:	3801      	subs	r0, #1
9001db3a:	07c2      	lsls	r2, r0, #31
9001db3c:	d50b      	bpl.n	9001db56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001db3e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001db42:	0066      	lsls	r6, r4, #1
9001db44:	3a01      	subs	r2, #1
9001db46:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001db4a:	42aa      	cmp	r2, r5
9001db4c:	d202      	bcs.n	9001db54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001db4e:	8013      	strh	r3, [r2, #0]
9001db50:	4432      	add	r2, r6
9001db52:	e7fa      	b.n	9001db4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001db54:	3801      	subs	r0, #1
9001db56:	b178      	cbz	r0, 9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001db58:	1040      	asrs	r0, r0, #1
9001db5a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001db5e:	0080      	lsls	r0, r0, #2
9001db60:	0064      	lsls	r4, r4, #1
9001db62:	42a9      	cmp	r1, r5
9001db64:	d208      	bcs.n	9001db78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001db66:	180e      	adds	r6, r1, r0
9001db68:	460a      	mov	r2, r1
9001db6a:	42b2      	cmp	r2, r6
9001db6c:	d202      	bcs.n	9001db74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001db6e:	f842 3b04 	str.w	r3, [r2], #4
9001db72:	e7fa      	b.n	9001db6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001db74:	4421      	add	r1, r4
9001db76:	e7f4      	b.n	9001db62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001db78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001db7c:	00fff800 	.word	0x00fff800

9001db80 <_ZN8touchgfx8LCD16bppC1Ev>:
9001db80:	2200      	movs	r2, #0
9001db82:	4912      	ldr	r1, [pc, #72]	; (9001dbcc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001db84:	6042      	str	r2, [r0, #4]
9001db86:	6001      	str	r1, [r0, #0]
9001db88:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001db8c:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001db90:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001db94:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001db98:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001db9c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001dba0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001dba4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001dba8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001dbac:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001dbb0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001dbb4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001dbb8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001dbbc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001dbc0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001dbc4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001dbc8:	4770      	bx	lr
9001dbca:	bf00      	nop
9001dbcc:	9002bcb8 	.word	0x9002bcb8

9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001dbd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dbd4:	b08d      	sub	sp, #52	; 0x34
9001dbd6:	460d      	mov	r5, r1
9001dbd8:	4604      	mov	r4, r0
9001dbda:	4699      	mov	r9, r3
9001dbdc:	6808      	ldr	r0, [r1, #0]
9001dbde:	ab08      	add	r3, sp, #32
9001dbe0:	6849      	ldr	r1, [r1, #4]
9001dbe2:	c303      	stmia	r3!, {r0, r1}
9001dbe4:	6810      	ldr	r0, [r2, #0]
9001dbe6:	ab0a      	add	r3, sp, #40	; 0x28
9001dbe8:	6851      	ldr	r1, [r2, #4]
9001dbea:	c303      	stmia	r3!, {r0, r1}
9001dbec:	a808      	add	r0, sp, #32
9001dbee:	f7f8 f9a3 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dbf2:	4629      	mov	r1, r5
9001dbf4:	a80a      	add	r0, sp, #40	; 0x28
9001dbf6:	4d67      	ldr	r5, [pc, #412]	; (9001dd94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001dbf8:	f7f8 f9e2 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dbfc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001dc00:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001dc04:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001dc08:	6828      	ldr	r0, [r5, #0]
9001dc0a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001dc0e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001dc12:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001dc16:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001dc1a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001dc1e:	440a      	add	r2, r1
9001dc20:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001dc24:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001dc28:	4413      	add	r3, r2
9001dc2a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001dc2e:	6803      	ldr	r3, [r0, #0]
9001dc30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dc32:	4798      	blx	r3
9001dc34:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001dc38:	d119      	bne.n	9001dc6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001dc3a:	f010 0f20 	tst.w	r0, #32
9001dc3e:	6828      	ldr	r0, [r5, #0]
9001dc40:	d018      	beq.n	9001dc74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001dc42:	2500      	movs	r5, #0
9001dc44:	6801      	ldr	r1, [r0, #0]
9001dc46:	b2b6      	uxth	r6, r6
9001dc48:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001dc4c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001dc50:	9601      	str	r6, [sp, #4]
9001dc52:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001dc56:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001dc5a:	9502      	str	r5, [sp, #8]
9001dc5c:	fa1f f588 	uxth.w	r5, r8
9001dc60:	9500      	str	r5, [sp, #0]
9001dc62:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001dc64:	4621      	mov	r1, r4
9001dc66:	47a8      	blx	r5
9001dc68:	b00d      	add	sp, #52	; 0x34
9001dc6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dc6e:	f010 0f40 	tst.w	r0, #64	; 0x40
9001dc72:	e7e4      	b.n	9001dc3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001dc74:	6803      	ldr	r3, [r0, #0]
9001dc76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001dc78:	4798      	blx	r3
9001dc7a:	4947      	ldr	r1, [pc, #284]	; (9001dd98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001dc7c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001dc80:	880b      	ldrh	r3, [r1, #0]
9001dc82:	468a      	mov	sl, r1
9001dc84:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001dc88:	fb03 5202 	mla	r2, r3, r2, r5
9001dc8c:	4373      	muls	r3, r6
9001dc8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dc92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dc96:	9307      	str	r3, [sp, #28]
9001dc98:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001dc9c:	9306      	str	r3, [sp, #24]
9001dc9e:	9b07      	ldr	r3, [sp, #28]
9001dca0:	4298      	cmp	r0, r3
9001dca2:	d270      	bcs.n	9001dd86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001dca4:	9b06      	ldr	r3, [sp, #24]
9001dca6:	4621      	mov	r1, r4
9001dca8:	eb00 0b03 	add.w	fp, r0, r3
9001dcac:	4558      	cmp	r0, fp
9001dcae:	d25d      	bcs.n	9001dd6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001dcb0:	f851 4b04 	ldr.w	r4, [r1], #4
9001dcb4:	0e23      	lsrs	r3, r4, #24
9001dcb6:	d014      	beq.n	9001dce2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001dcb8:	2bff      	cmp	r3, #255	; 0xff
9001dcba:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001dcbe:	d112      	bne.n	9001dce6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001dcc0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001dcc4:	d10f      	bne.n	9001dce6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001dcc6:	0963      	lsrs	r3, r4, #5
9001dcc8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001dccc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001dcd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001dcd4:	f02c 0c07 	bic.w	ip, ip, #7
9001dcd8:	ea43 0c0c 	orr.w	ip, r3, ip
9001dcdc:	ea4c 0404 	orr.w	r4, ip, r4
9001dce0:	8004      	strh	r4, [r0, #0]
9001dce2:	3002      	adds	r0, #2
9001dce4:	e7e2      	b.n	9001dcac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001dce6:	fb09 f303 	mul.w	r3, r9, r3
9001dcea:	8807      	ldrh	r7, [r0, #0]
9001dcec:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001dcf0:	fa5f fc8c 	uxtb.w	ip, ip
9001dcf4:	1c5a      	adds	r2, r3, #1
9001dcf6:	123e      	asrs	r6, r7, #8
9001dcf8:	10fd      	asrs	r5, r7, #3
9001dcfa:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001dcfe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001dd02:	00ff      	lsls	r7, r7, #3
9001dd04:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001dd08:	1212      	asrs	r2, r2, #8
9001dd0a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001dd0e:	b293      	uxth	r3, r2
9001dd10:	43d2      	mvns	r2, r2
9001dd12:	b2ff      	uxtb	r7, r7
9001dd14:	fb1e fe03 	smulbb	lr, lr, r3
9001dd18:	b2d2      	uxtb	r2, r2
9001dd1a:	fb1c fc03 	smulbb	ip, ip, r3
9001dd1e:	b2e4      	uxtb	r4, r4
9001dd20:	fb06 e602 	mla	r6, r6, r2, lr
9001dd24:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001dd28:	fb14 f403 	smulbb	r4, r4, r3
9001dd2c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001dd30:	b2b6      	uxth	r6, r6
9001dd32:	fb05 c502 	mla	r5, r5, r2, ip
9001dd36:	fb07 4702 	mla	r7, r7, r2, r4
9001dd3a:	f106 0e01 	add.w	lr, r6, #1
9001dd3e:	b2ad      	uxth	r5, r5
9001dd40:	b2bf      	uxth	r7, r7
9001dd42:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001dd46:	f105 0c01 	add.w	ip, r5, #1
9001dd4a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001dd4e:	1c7e      	adds	r6, r7, #1
9001dd50:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001dd54:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001dd58:	096d      	lsrs	r5, r5, #5
9001dd5a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001dd5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001dd62:	ea46 060e 	orr.w	r6, r6, lr
9001dd66:	432e      	orrs	r6, r5
9001dd68:	8006      	strh	r6, [r0, #0]
9001dd6a:	e7ba      	b.n	9001dce2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001dd6c:	f8ba 3000 	ldrh.w	r3, [sl]
9001dd70:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001dd74:	eba3 0308 	sub.w	r3, r3, r8
9001dd78:	eba4 0408 	sub.w	r4, r4, r8
9001dd7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dd80:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001dd84:	e78b      	b.n	9001dc9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001dd86:	4b03      	ldr	r3, [pc, #12]	; (9001dd94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001dd88:	6818      	ldr	r0, [r3, #0]
9001dd8a:	6803      	ldr	r3, [r0, #0]
9001dd8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dd8e:	4798      	blx	r3
9001dd90:	e76a      	b.n	9001dc68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001dd92:	bf00      	nop
9001dd94:	24039704 	.word	0x24039704
9001dd98:	240396fe 	.word	0x240396fe

9001dd9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001dd9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001dda0:	b085      	sub	sp, #20
9001dda2:	6810      	ldr	r0, [r2, #0]
9001dda4:	460c      	mov	r4, r1
9001dda6:	6851      	ldr	r1, [r2, #4]
9001dda8:	466d      	mov	r5, sp
9001ddaa:	4616      	mov	r6, r2
9001ddac:	c503      	stmia	r5!, {r0, r1}
9001ddae:	6818      	ldr	r0, [r3, #0]
9001ddb0:	6859      	ldr	r1, [r3, #4]
9001ddb2:	c503      	stmia	r5!, {r0, r1}
9001ddb4:	4668      	mov	r0, sp
9001ddb6:	4d2e      	ldr	r5, [pc, #184]	; (9001de70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001ddb8:	f7f8 f8be 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ddbc:	4631      	mov	r1, r6
9001ddbe:	a802      	add	r0, sp, #8
9001ddc0:	4e2c      	ldr	r6, [pc, #176]	; (9001de74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001ddc2:	f7f8 f8fd 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ddc6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001ddca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001ddce:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ddd2:	6828      	ldr	r0, [r5, #0]
9001ddd4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ddd8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001dddc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001dde0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001dde4:	f8bd 1000 	ldrh.w	r1, [sp]
9001dde8:	440a      	add	r2, r1
9001ddea:	f8ad 2008 	strh.w	r2, [sp, #8]
9001ddee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ddf2:	4413      	add	r3, r2
9001ddf4:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ddf8:	6803      	ldr	r3, [r0, #0]
9001ddfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ddfc:	4798      	blx	r3
9001ddfe:	8833      	ldrh	r3, [r6, #0]
9001de00:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001de04:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001de08:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001de0c:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001de78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001de10:	fb03 1202 	mla	r2, r3, r2, r1
9001de14:	fb08 f303 	mul.w	r3, r8, r3
9001de18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001de1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001de20:	4298      	cmp	r0, r3
9001de22:	d21d      	bcs.n	9001de60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001de24:	eb00 080c 	add.w	r8, r0, ip
9001de28:	4540      	cmp	r0, r8
9001de2a:	d20f      	bcs.n	9001de4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001de2c:	f854 1b04 	ldr.w	r1, [r4], #4
9001de30:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001de34:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001de38:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001de3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001de40:	ea42 0209 	orr.w	r2, r2, r9
9001de44:	430a      	orrs	r2, r1
9001de46:	f820 2b02 	strh.w	r2, [r0], #2
9001de4a:	e7ed      	b.n	9001de28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001de4c:	8832      	ldrh	r2, [r6, #0]
9001de4e:	1bd2      	subs	r2, r2, r7
9001de50:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001de54:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001de58:	1bd2      	subs	r2, r2, r7
9001de5a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001de5e:	e7df      	b.n	9001de20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001de60:	6828      	ldr	r0, [r5, #0]
9001de62:	6803      	ldr	r3, [r0, #0]
9001de64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001de66:	4798      	blx	r3
9001de68:	b005      	add	sp, #20
9001de6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001de6e:	bf00      	nop
9001de70:	24039704 	.word	0x24039704
9001de74:	240396fe 	.word	0x240396fe
9001de78:	fffff800 	.word	0xfffff800

9001de7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001de7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001de80:	b08e      	sub	sp, #56	; 0x38
9001de82:	460e      	mov	r6, r1
9001de84:	4604      	mov	r4, r0
9001de86:	461d      	mov	r5, r3
9001de88:	6808      	ldr	r0, [r1, #0]
9001de8a:	ab0a      	add	r3, sp, #40	; 0x28
9001de8c:	6849      	ldr	r1, [r1, #4]
9001de8e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001e064 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001de92:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001e068 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001de96:	c303      	stmia	r3!, {r0, r1}
9001de98:	6810      	ldr	r0, [r2, #0]
9001de9a:	ab0c      	add	r3, sp, #48	; 0x30
9001de9c:	6851      	ldr	r1, [r2, #4]
9001de9e:	c303      	stmia	r3!, {r0, r1}
9001dea0:	a80a      	add	r0, sp, #40	; 0x28
9001dea2:	f7f8 f849 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dea6:	4631      	mov	r1, r6
9001dea8:	a80c      	add	r0, sp, #48	; 0x30
9001deaa:	f7f8 f889 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001deae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001deb2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001deb6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001deba:	f8d8 0000 	ldr.w	r0, [r8]
9001debe:	fb11 2103 	smlabb	r1, r1, r3, r2
9001dec2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001dec6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001deca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001dece:	440c      	add	r4, r1
9001ded0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001ded4:	440a      	add	r2, r1
9001ded6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001deda:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001dede:	4413      	add	r3, r2
9001dee0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001dee4:	6803      	ldr	r3, [r0, #0]
9001dee6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dee8:	4798      	blx	r3
9001deea:	2dff      	cmp	r5, #255	; 0xff
9001deec:	d124      	bne.n	9001df38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001deee:	f010 0f01 	tst.w	r0, #1
9001def2:	f8d8 0000 	ldr.w	r0, [r8]
9001def6:	d022      	beq.n	9001df3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001def8:	2100      	movs	r1, #0
9001defa:	f04f 0e01 	mov.w	lr, #1
9001defe:	f8d0 c000 	ldr.w	ip, [r0]
9001df02:	b2b6      	uxth	r6, r6
9001df04:	f8cd e018 	str.w	lr, [sp, #24]
9001df08:	b2bf      	uxth	r7, r7
9001df0a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001df0e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001df12:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001df16:	f8b9 e000 	ldrh.w	lr, [r9]
9001df1a:	9503      	str	r5, [sp, #12]
9001df1c:	9601      	str	r6, [sp, #4]
9001df1e:	9700      	str	r7, [sp, #0]
9001df20:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001df24:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001df28:	9102      	str	r1, [sp, #8]
9001df2a:	4621      	mov	r1, r4
9001df2c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001df30:	47a8      	blx	r5
9001df32:	b00e      	add	sp, #56	; 0x38
9001df34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001df38:	f010 0f04 	tst.w	r0, #4
9001df3c:	e7d9      	b.n	9001def2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001df3e:	6803      	ldr	r3, [r0, #0]
9001df40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001df42:	4798      	blx	r3
9001df44:	f8b9 3000 	ldrh.w	r3, [r9]
9001df48:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001df4c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001df50:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001df54:	435e      	muls	r6, r3
9001df56:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001df5a:	2dff      	cmp	r5, #255	; 0xff
9001df5c:	fb03 1202 	mla	r2, r3, r2, r1
9001df60:	ebac 0c07 	sub.w	ip, ip, r7
9001df64:	eba3 0707 	sub.w	r7, r3, r7
9001df68:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001df6c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001df70:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001df74:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001df78:	d049      	beq.n	9001e00e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001df7a:	43eb      	mvns	r3, r5
9001df7c:	fa1f f985 	uxth.w	r9, r5
9001df80:	b2db      	uxtb	r3, r3
9001df82:	42b0      	cmp	r0, r6
9001df84:	d266      	bcs.n	9001e054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001df86:	eb00 0a0e 	add.w	sl, r0, lr
9001df8a:	4550      	cmp	r0, sl
9001df8c:	4621      	mov	r1, r4
9001df8e:	f104 0403 	add.w	r4, r4, #3
9001df92:	d25b      	bcs.n	9001e04c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001df94:	8802      	ldrh	r2, [r0, #0]
9001df96:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001df9a:	ea4f 2822 	mov.w	r8, r2, asr #8
9001df9e:	fb11 f109 	smulbb	r1, r1, r9
9001dfa2:	10d5      	asrs	r5, r2, #3
9001dfa4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001dfa8:	00d2      	lsls	r2, r2, #3
9001dfaa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001dfae:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001dfb2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001dfb6:	fb08 1803 	mla	r8, r8, r3, r1
9001dfba:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001dfbe:	b2d2      	uxtb	r2, r2
9001dfc0:	fb11 f109 	smulbb	r1, r1, r9
9001dfc4:	fa1f f888 	uxth.w	r8, r8
9001dfc8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dfcc:	fb05 1503 	mla	r5, r5, r3, r1
9001dfd0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001dfd4:	fb11 f109 	smulbb	r1, r1, r9
9001dfd8:	b2ad      	uxth	r5, r5
9001dfda:	fb02 1203 	mla	r2, r2, r3, r1
9001dfde:	f108 0101 	add.w	r1, r8, #1
9001dfe2:	b292      	uxth	r2, r2
9001dfe4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001dfe8:	1c51      	adds	r1, r2, #1
9001dfea:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001dfee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001dff2:	1c69      	adds	r1, r5, #1
9001dff4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001dff8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dffc:	096d      	lsrs	r5, r5, #5
9001dffe:	ea42 0208 	orr.w	r2, r2, r8
9001e002:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e006:	432a      	orrs	r2, r5
9001e008:	f820 2b02 	strh.w	r2, [r0], #2
9001e00c:	e7bd      	b.n	9001df8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001e00e:	4a14      	ldr	r2, [pc, #80]	; (9001e060 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001e010:	42b0      	cmp	r0, r6
9001e012:	d21f      	bcs.n	9001e054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e014:	eb00 050e 	add.w	r5, r0, lr
9001e018:	42a8      	cmp	r0, r5
9001e01a:	4621      	mov	r1, r4
9001e01c:	f104 0403 	add.w	r4, r4, #3
9001e020:	d210      	bcs.n	9001e044 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001e022:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001e026:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e02a:	00db      	lsls	r3, r3, #3
9001e02c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001e030:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e034:	430b      	orrs	r3, r1
9001e036:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e03a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001e03e:	f820 3b02 	strh.w	r3, [r0], #2
9001e042:	e7e9      	b.n	9001e018 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001e044:	4438      	add	r0, r7
9001e046:	eb01 040c 	add.w	r4, r1, ip
9001e04a:	e7e1      	b.n	9001e010 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001e04c:	4438      	add	r0, r7
9001e04e:	eb01 040c 	add.w	r4, r1, ip
9001e052:	e796      	b.n	9001df82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001e054:	4b03      	ldr	r3, [pc, #12]	; (9001e064 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001e056:	6818      	ldr	r0, [r3, #0]
9001e058:	6803      	ldr	r3, [r0, #0]
9001e05a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e05c:	4798      	blx	r3
9001e05e:	e768      	b.n	9001df32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001e060:	fffff800 	.word	0xfffff800
9001e064:	24039704 	.word	0x24039704
9001e068:	240396fe 	.word	0x240396fe

9001e06c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001e06c:	b4f0      	push	{r4, r5, r6, r7}
9001e06e:	4616      	mov	r6, r2
9001e070:	461c      	mov	r4, r3
9001e072:	460d      	mov	r5, r1
9001e074:	9a04      	ldr	r2, [sp, #16]
9001e076:	2e01      	cmp	r6, #1
9001e078:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001e07c:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001e080:	d012      	beq.n	9001e0a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001e082:	d303      	bcc.n	9001e08c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001e084:	2e02      	cmp	r6, #2
9001e086:	d00a      	beq.n	9001e09e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001e088:	bcf0      	pop	{r4, r5, r6, r7}
9001e08a:	4770      	bx	lr
9001e08c:	6805      	ldr	r5, [r0, #0]
9001e08e:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001e092:	68ed      	ldr	r5, [r5, #12]
9001e094:	4613      	mov	r3, r2
9001e096:	4622      	mov	r2, r4
9001e098:	46ac      	mov	ip, r5
9001e09a:	bcf0      	pop	{r4, r5, r6, r7}
9001e09c:	4760      	bx	ip
9001e09e:	4621      	mov	r1, r4
9001e0a0:	4628      	mov	r0, r5
9001e0a2:	bcf0      	pop	{r4, r5, r6, r7}
9001e0a4:	f7ff bd94 	b.w	9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e0a8:	4621      	mov	r1, r4
9001e0aa:	4628      	mov	r0, r5
9001e0ac:	bcf0      	pop	{r4, r5, r6, r7}
9001e0ae:	f7ff bee5 	b.w	9001de7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001e0b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001e0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e0b8:	b093      	sub	sp, #76	; 0x4c
9001e0ba:	4681      	mov	r9, r0
9001e0bc:	4688      	mov	r8, r1
9001e0be:	6810      	ldr	r0, [r2, #0]
9001e0c0:	6851      	ldr	r1, [r2, #4]
9001e0c2:	ac0e      	add	r4, sp, #56	; 0x38
9001e0c4:	4616      	mov	r6, r2
9001e0c6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001e0ca:	4f6b      	ldr	r7, [pc, #428]	; (9001e278 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001e0cc:	c403      	stmia	r4!, {r0, r1}
9001e0ce:	6818      	ldr	r0, [r3, #0]
9001e0d0:	ac10      	add	r4, sp, #64	; 0x40
9001e0d2:	6859      	ldr	r1, [r3, #4]
9001e0d4:	c403      	stmia	r4!, {r0, r1}
9001e0d6:	a80e      	add	r0, sp, #56	; 0x38
9001e0d8:	f7f7 ff2e 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e0dc:	4631      	mov	r1, r6
9001e0de:	a810      	add	r0, sp, #64	; 0x40
9001e0e0:	4e66      	ldr	r6, [pc, #408]	; (9001e27c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e0e2:	f7f7 ff6d 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e0e6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001e0ea:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001e0ee:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001e0f2:	6830      	ldr	r0, [r6, #0]
9001e0f4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e0f8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001e0fc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001e100:	4489      	add	r9, r1
9001e102:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001e106:	440a      	add	r2, r1
9001e108:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001e10c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001e110:	4413      	add	r3, r2
9001e112:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001e116:	6803      	ldr	r3, [r0, #0]
9001e118:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e11a:	4798      	blx	r3
9001e11c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001e120:	6830      	ldr	r0, [r6, #0]
9001e122:	d01d      	beq.n	9001e160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001e124:	2200      	movs	r2, #0
9001e126:	6801      	ldr	r1, [r0, #0]
9001e128:	b2a4      	uxth	r4, r4
9001e12a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001e12e:	b2ad      	uxth	r5, r5
9001e130:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e134:	220b      	movs	r2, #11
9001e136:	9207      	str	r2, [sp, #28]
9001e138:	883a      	ldrh	r2, [r7, #0]
9001e13a:	9502      	str	r5, [sp, #8]
9001e13c:	9206      	str	r2, [sp, #24]
9001e13e:	2201      	movs	r2, #1
9001e140:	9401      	str	r4, [sp, #4]
9001e142:	e9cd a204 	strd	sl, r2, [sp, #16]
9001e146:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001e14a:	9203      	str	r2, [sp, #12]
9001e14c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001e150:	9200      	str	r2, [sp, #0]
9001e152:	4642      	mov	r2, r8
9001e154:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001e156:	4649      	mov	r1, r9
9001e158:	47a0      	blx	r4
9001e15a:	b013      	add	sp, #76	; 0x4c
9001e15c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e160:	6803      	ldr	r3, [r0, #0]
9001e162:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e164:	4798      	blx	r3
9001e166:	883b      	ldrh	r3, [r7, #0]
9001e168:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001e16c:	f04f 0e04 	mov.w	lr, #4
9001e170:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001e174:	435d      	muls	r5, r3
9001e176:	fb03 1202 	mla	r2, r3, r2, r1
9001e17a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e17e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001e182:	920c      	str	r2, [sp, #48]	; 0x30
9001e184:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001e188:	1b12      	subs	r2, r2, r4
9001e18a:	920d      	str	r2, [sp, #52]	; 0x34
9001e18c:	0062      	lsls	r2, r4, #1
9001e18e:	1b1c      	subs	r4, r3, r4
9001e190:	920a      	str	r2, [sp, #40]	; 0x28
9001e192:	0063      	lsls	r3, r4, #1
9001e194:	930b      	str	r3, [sp, #44]	; 0x2c
9001e196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e198:	4298      	cmp	r0, r3
9001e19a:	d266      	bcs.n	9001e26a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001e19c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e19e:	eb00 0b03 	add.w	fp, r0, r3
9001e1a2:	4558      	cmp	r0, fp
9001e1a4:	d25c      	bcs.n	9001e260 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001e1a6:	f819 3b01 	ldrb.w	r3, [r9], #1
9001e1aa:	fb1e e303 	smlabb	r3, lr, r3, lr
9001e1ae:	f858 2003 	ldr.w	r2, [r8, r3]
9001e1b2:	0e11      	lsrs	r1, r2, #24
9001e1b4:	d012      	beq.n	9001e1dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e1b6:	29ff      	cmp	r1, #255	; 0xff
9001e1b8:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001e1bc:	d110      	bne.n	9001e1e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e1be:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001e1c2:	d10d      	bne.n	9001e1e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e1c4:	0953      	lsrs	r3, r2, #5
9001e1c6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001e1ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e1ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e1d2:	f027 0707 	bic.w	r7, r7, #7
9001e1d6:	431f      	orrs	r7, r3
9001e1d8:	433a      	orrs	r2, r7
9001e1da:	8002      	strh	r2, [r0, #0]
9001e1dc:	3002      	adds	r0, #2
9001e1de:	e7e0      	b.n	9001e1a2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001e1e0:	fb0a f101 	mul.w	r1, sl, r1
9001e1e4:	8806      	ldrh	r6, [r0, #0]
9001e1e6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001e1ea:	b2d2      	uxtb	r2, r2
9001e1ec:	1c4b      	adds	r3, r1, #1
9001e1ee:	1235      	asrs	r5, r6, #8
9001e1f0:	10f4      	asrs	r4, r6, #3
9001e1f2:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001e1f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e1fa:	00f6      	lsls	r6, r6, #3
9001e1fc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001e200:	121b      	asrs	r3, r3, #8
9001e202:	b2f6      	uxtb	r6, r6
9001e204:	b299      	uxth	r1, r3
9001e206:	43db      	mvns	r3, r3
9001e208:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e20c:	fb1c fc01 	smulbb	ip, ip, r1
9001e210:	b2db      	uxtb	r3, r3
9001e212:	fb12 f201 	smulbb	r2, r2, r1
9001e216:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e21a:	fb05 c503 	mla	r5, r5, r3, ip
9001e21e:	b2ff      	uxtb	r7, r7
9001e220:	fb06 2203 	mla	r2, r6, r3, r2
9001e224:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001e228:	fb17 f701 	smulbb	r7, r7, r1
9001e22c:	b2ad      	uxth	r5, r5
9001e22e:	b292      	uxth	r2, r2
9001e230:	fb04 7403 	mla	r4, r4, r3, r7
9001e234:	f105 0c01 	add.w	ip, r5, #1
9001e238:	1c57      	adds	r7, r2, #1
9001e23a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e23e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e242:	b2a4      	uxth	r4, r4
9001e244:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e248:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e24c:	433d      	orrs	r5, r7
9001e24e:	1c67      	adds	r7, r4, #1
9001e250:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001e254:	0964      	lsrs	r4, r4, #5
9001e256:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001e25a:	4325      	orrs	r5, r4
9001e25c:	8005      	strh	r5, [r0, #0]
9001e25e:	e7bd      	b.n	9001e1dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e260:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001e262:	4418      	add	r0, r3
9001e264:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e266:	4499      	add	r9, r3
9001e268:	e795      	b.n	9001e196 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001e26a:	4b04      	ldr	r3, [pc, #16]	; (9001e27c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e26c:	6818      	ldr	r0, [r3, #0]
9001e26e:	6803      	ldr	r3, [r0, #0]
9001e270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e272:	4798      	blx	r3
9001e274:	e771      	b.n	9001e15a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001e276:	bf00      	nop
9001e278:	240396fe 	.word	0x240396fe
9001e27c:	24039704 	.word	0x24039704

9001e280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001e280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e284:	b087      	sub	sp, #28
9001e286:	4680      	mov	r8, r0
9001e288:	460d      	mov	r5, r1
9001e28a:	4614      	mov	r4, r2
9001e28c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001e290:	2e00      	cmp	r6, #0
9001e292:	f000 80b9 	beq.w	9001e408 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001e296:	6810      	ldr	r0, [r2, #0]
9001e298:	af02      	add	r7, sp, #8
9001e29a:	6851      	ldr	r1, [r2, #4]
9001e29c:	c703      	stmia	r7!, {r0, r1}
9001e29e:	6818      	ldr	r0, [r3, #0]
9001e2a0:	af04      	add	r7, sp, #16
9001e2a2:	6859      	ldr	r1, [r3, #4]
9001e2a4:	c703      	stmia	r7!, {r0, r1}
9001e2a6:	a802      	add	r0, sp, #8
9001e2a8:	f7f7 fe46 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e2ac:	4621      	mov	r1, r4
9001e2ae:	a804      	add	r0, sp, #16
9001e2b0:	f7f7 fe86 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e2b4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e2b8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e2bc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001e2c0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001e2c4:	fb14 2103 	smlabb	r1, r4, r3, r2
9001e2c8:	eb08 0401 	add.w	r4, r8, r1
9001e2cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e2d0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e2d4:	440a      	add	r2, r1
9001e2d6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001e2da:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e2de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e2e2:	4413      	add	r3, r2
9001e2e4:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e2e8:	4b49      	ldr	r3, [pc, #292]	; (9001e410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e2ea:	6818      	ldr	r0, [r3, #0]
9001e2ec:	6803      	ldr	r3, [r0, #0]
9001e2ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e2f0:	4798      	blx	r3
9001e2f2:	4b48      	ldr	r3, [pc, #288]	; (9001e414 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001e2f4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001e2f8:	2eff      	cmp	r6, #255	; 0xff
9001e2fa:	881a      	ldrh	r2, [r3, #0]
9001e2fc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001e300:	fb02 c101 	mla	r1, r2, r1, ip
9001e304:	fb02 f207 	mul.w	r2, r2, r7
9001e308:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e30c:	f105 0104 	add.w	r1, r5, #4
9001e310:	461d      	mov	r5, r3
9001e312:	d05a      	beq.n	9001e3ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001e314:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001e318:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e31c:	b2b6      	uxth	r6, r6
9001e31e:	9301      	str	r3, [sp, #4]
9001e320:	fa1f fe8e 	uxth.w	lr, lr
9001e324:	4282      	cmp	r2, r0
9001e326:	d96a      	bls.n	9001e3fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e328:	eb00 0b0a 	add.w	fp, r0, sl
9001e32c:	4583      	cmp	fp, r0
9001e32e:	d940      	bls.n	9001e3b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001e330:	8805      	ldrh	r5, [r0, #0]
9001e332:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e336:	122f      	asrs	r7, r5, #8
9001e338:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e33c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e340:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e344:	00ed      	lsls	r5, r5, #3
9001e346:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e34a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e34e:	fb17 f70e 	smulbb	r7, r7, lr
9001e352:	b2ed      	uxtb	r5, r5
9001e354:	fb19 f90e 	smulbb	r9, r9, lr
9001e358:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e35c:	fb15 f50e 	smulbb	r5, r5, lr
9001e360:	fb0c 7c06 	mla	ip, ip, r6, r7
9001e364:	10df      	asrs	r7, r3, #3
9001e366:	00db      	lsls	r3, r3, #3
9001e368:	fa1f fc8c 	uxth.w	ip, ip
9001e36c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e370:	b2db      	uxtb	r3, r3
9001e372:	fb07 9706 	mla	r7, r7, r6, r9
9001e376:	f10c 0901 	add.w	r9, ip, #1
9001e37a:	fb03 5306 	mla	r3, r3, r6, r5
9001e37e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001e382:	b29b      	uxth	r3, r3
9001e384:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001e388:	b2bf      	uxth	r7, r7
9001e38a:	f103 0c01 	add.w	ip, r3, #1
9001e38e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e392:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e396:	ea4c 0c09 	orr.w	ip, ip, r9
9001e39a:	f107 0901 	add.w	r9, r7, #1
9001e39e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001e3a2:	097f      	lsrs	r7, r7, #5
9001e3a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001e3a8:	ea4c 0c07 	orr.w	ip, ip, r7
9001e3ac:	f820 cb02 	strh.w	ip, [r0], #2
9001e3b0:	e7bc      	b.n	9001e32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001e3b2:	9b01      	ldr	r3, [sp, #4]
9001e3b4:	881b      	ldrh	r3, [r3, #0]
9001e3b6:	eba3 0308 	sub.w	r3, r3, r8
9001e3ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e3be:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e3c2:	eba3 0308 	sub.w	r3, r3, r8
9001e3c6:	441c      	add	r4, r3
9001e3c8:	e7ac      	b.n	9001e324 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001e3ca:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e3ce:	4282      	cmp	r2, r0
9001e3d0:	d915      	bls.n	9001e3fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e3d2:	eb00 060a 	add.w	r6, r0, sl
9001e3d6:	4286      	cmp	r6, r0
9001e3d8:	d906      	bls.n	9001e3e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001e3da:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e3de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e3e2:	f820 3b02 	strh.w	r3, [r0], #2
9001e3e6:	e7f6      	b.n	9001e3d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001e3e8:	882b      	ldrh	r3, [r5, #0]
9001e3ea:	eba3 0308 	sub.w	r3, r3, r8
9001e3ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e3f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e3f6:	eba3 0308 	sub.w	r3, r3, r8
9001e3fa:	441c      	add	r4, r3
9001e3fc:	e7e7      	b.n	9001e3ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001e3fe:	4b04      	ldr	r3, [pc, #16]	; (9001e410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e400:	6818      	ldr	r0, [r3, #0]
9001e402:	6803      	ldr	r3, [r0, #0]
9001e404:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e406:	4798      	blx	r3
9001e408:	b007      	add	sp, #28
9001e40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e40e:	bf00      	nop
9001e410:	24039704 	.word	0x24039704
9001e414:	240396fe 	.word	0x240396fe

9001e418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001e418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e41c:	b091      	sub	sp, #68	; 0x44
9001e41e:	4680      	mov	r8, r0
9001e420:	460f      	mov	r7, r1
9001e422:	4614      	mov	r4, r2
9001e424:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001e428:	2d00      	cmp	r5, #0
9001e42a:	d051      	beq.n	9001e4d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e42c:	6810      	ldr	r0, [r2, #0]
9001e42e:	ae0c      	add	r6, sp, #48	; 0x30
9001e430:	6851      	ldr	r1, [r2, #4]
9001e432:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001e634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001e436:	c603      	stmia	r6!, {r0, r1}
9001e438:	6818      	ldr	r0, [r3, #0]
9001e43a:	ae0e      	add	r6, sp, #56	; 0x38
9001e43c:	6859      	ldr	r1, [r3, #4]
9001e43e:	c603      	stmia	r6!, {r0, r1}
9001e440:	a80c      	add	r0, sp, #48	; 0x30
9001e442:	f7f7 fd79 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e446:	4621      	mov	r1, r4
9001e448:	a80e      	add	r0, sp, #56	; 0x38
9001e44a:	f7f7 fdb9 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e44e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001e452:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001e456:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001e45a:	f8d9 0000 	ldr.w	r0, [r9]
9001e45e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e462:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001e466:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001e46a:	eb08 0401 	add.w	r4, r8, r1
9001e46e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001e472:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001e638 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001e476:	440a      	add	r2, r1
9001e478:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001e47c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001e480:	4413      	add	r3, r2
9001e482:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001e486:	6803      	ldr	r3, [r0, #0]
9001e488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e48a:	4798      	blx	r3
9001e48c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001e490:	f8d9 0000 	ldr.w	r0, [r9]
9001e494:	d01f      	beq.n	9001e4d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001e496:	2200      	movs	r2, #0
9001e498:	6801      	ldr	r1, [r0, #0]
9001e49a:	b2b6      	uxth	r6, r6
9001e49c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001e4a0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e4a4:	220b      	movs	r2, #11
9001e4a6:	9207      	str	r2, [sp, #28]
9001e4a8:	f8b8 2000 	ldrh.w	r2, [r8]
9001e4ac:	9601      	str	r6, [sp, #4]
9001e4ae:	9206      	str	r2, [sp, #24]
9001e4b0:	2201      	movs	r2, #1
9001e4b2:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001e4b6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001e4ba:	9203      	str	r2, [sp, #12]
9001e4bc:	fa1f f28a 	uxth.w	r2, sl
9001e4c0:	9202      	str	r2, [sp, #8]
9001e4c2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001e4c6:	9200      	str	r2, [sp, #0]
9001e4c8:	463a      	mov	r2, r7
9001e4ca:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001e4cc:	4621      	mov	r1, r4
9001e4ce:	47a8      	blx	r5
9001e4d0:	b011      	add	sp, #68	; 0x44
9001e4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e4d6:	6803      	ldr	r3, [r0, #0]
9001e4d8:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001e4dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e4de:	4798      	blx	r3
9001e4e0:	f8b8 2000 	ldrh.w	r2, [r8]
9001e4e4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001e4e8:	2dff      	cmp	r5, #255	; 0xff
9001e4ea:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001e4ee:	fb0a fa02 	mul.w	sl, sl, r2
9001e4f2:	fb02 1303 	mla	r3, r2, r3, r1
9001e4f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e4fa:	d062      	beq.n	9001e5c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001e4fc:	ea6f 0c05 	mvn.w	ip, r5
9001e500:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001e504:	b2ad      	uxth	r5, r5
9001e506:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001e50a:	fa5f fc8c 	uxtb.w	ip, ip
9001e50e:	930a      	str	r3, [sp, #40]	; 0x28
9001e510:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e512:	4298      	cmp	r0, r3
9001e514:	f080 8085 	bcs.w	9001e622 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e518:	eb00 0b09 	add.w	fp, r0, r9
9001e51c:	4558      	cmp	r0, fp
9001e51e:	d246      	bcs.n	9001e5ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001e520:	f814 eb01 	ldrb.w	lr, [r4], #1
9001e524:	2303      	movs	r3, #3
9001e526:	2204      	movs	r2, #4
9001e528:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001e52c:	8803      	ldrh	r3, [r0, #0]
9001e52e:	eb07 0a0e 	add.w	sl, r7, lr
9001e532:	1219      	asrs	r1, r3, #8
9001e534:	10da      	asrs	r2, r3, #3
9001e536:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e53a:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001e53e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e542:	00db      	lsls	r3, r3, #3
9001e544:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e548:	fb18 f805 	smulbb	r8, r8, r5
9001e54c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001e550:	fb1e fe05 	smulbb	lr, lr, r5
9001e554:	b2db      	uxtb	r3, r3
9001e556:	fb01 810c 	mla	r1, r1, ip, r8
9001e55a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001e55e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001e562:	fb18 f805 	smulbb	r8, r8, r5
9001e566:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001e56a:	b289      	uxth	r1, r1
9001e56c:	fb02 820c 	mla	r2, r2, ip, r8
9001e570:	fb03 e30c 	mla	r3, r3, ip, lr
9001e574:	f101 0801 	add.w	r8, r1, #1
9001e578:	b292      	uxth	r2, r2
9001e57a:	b29b      	uxth	r3, r3
9001e57c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001e580:	f102 0801 	add.w	r8, r2, #1
9001e584:	f103 0e01 	add.w	lr, r3, #1
9001e588:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001e58c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001e590:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001e594:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e598:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001e59c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001e5a0:	ea4e 0101 	orr.w	r1, lr, r1
9001e5a4:	ea41 0108 	orr.w	r1, r1, r8
9001e5a8:	f820 1b02 	strh.w	r1, [r0], #2
9001e5ac:	e7b6      	b.n	9001e51c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001e5ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001e5b0:	881b      	ldrh	r3, [r3, #0]
9001e5b2:	1b9b      	subs	r3, r3, r6
9001e5b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e5b8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001e5bc:	1b9b      	subs	r3, r3, r6
9001e5be:	441c      	add	r4, r3
9001e5c0:	e7a6      	b.n	9001e510 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001e5c2:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001e5c6:	2203      	movs	r2, #3
9001e5c8:	2504      	movs	r5, #4
9001e5ca:	4919      	ldr	r1, [pc, #100]	; (9001e630 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001e5cc:	4550      	cmp	r0, sl
9001e5ce:	d228      	bcs.n	9001e622 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001e5d0:	eb00 0c09 	add.w	ip, r0, r9
9001e5d4:	4560      	cmp	r0, ip
9001e5d6:	4623      	mov	r3, r4
9001e5d8:	d219      	bcs.n	9001e60e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001e5da:	f893 e000 	ldrb.w	lr, [r3]
9001e5de:	3401      	adds	r4, #1
9001e5e0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001e5e4:	eb07 0b0e 	add.w	fp, r7, lr
9001e5e8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001e5ec:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001e5f0:	f89b b001 	ldrb.w	fp, [fp, #1]
9001e5f4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001e5f8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001e5fc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001e600:	ea43 030b 	orr.w	r3, r3, fp
9001e604:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001e608:	f820 3b02 	strh.w	r3, [r0], #2
9001e60c:	e7e2      	b.n	9001e5d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001e60e:	f8b8 3000 	ldrh.w	r3, [r8]
9001e612:	1b9b      	subs	r3, r3, r6
9001e614:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e618:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001e61c:	1b9b      	subs	r3, r3, r6
9001e61e:	441c      	add	r4, r3
9001e620:	e7d4      	b.n	9001e5cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001e622:	4b04      	ldr	r3, [pc, #16]	; (9001e634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001e624:	6818      	ldr	r0, [r3, #0]
9001e626:	6803      	ldr	r3, [r0, #0]
9001e628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e62a:	4798      	blx	r3
9001e62c:	e750      	b.n	9001e4d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001e62e:	bf00      	nop
9001e630:	fffff800 	.word	0xfffff800
9001e634:	24039704 	.word	0x24039704
9001e638:	240396fe 	.word	0x240396fe

9001e63c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001e63c:	b4f0      	push	{r4, r5, r6, r7}
9001e63e:	460c      	mov	r4, r1
9001e640:	4611      	mov	r1, r2
9001e642:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001e646:	461a      	mov	r2, r3
9001e648:	780f      	ldrb	r7, [r1, #0]
9001e64a:	9b04      	ldr	r3, [sp, #16]
9001e64c:	2f01      	cmp	r7, #1
9001e64e:	784e      	ldrb	r6, [r1, #1]
9001e650:	d036      	beq.n	9001e6c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
9001e652:	d31e      	bcc.n	9001e692 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
9001e654:	2f02      	cmp	r7, #2
9001e656:	d14a      	bne.n	9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e658:	2e03      	cmp	r6, #3
9001e65a:	d848      	bhi.n	9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e65c:	e8df f006 	tbb	[pc, r6]
9001e660:	16140702 	.word	0x16140702
9001e664:	9504      	str	r5, [sp, #16]
9001e666:	4620      	mov	r0, r4
9001e668:	bcf0      	pop	{r4, r5, r6, r7}
9001e66a:	f7ff be09 	b.w	9001e280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001e66e:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e670:	2800      	cmp	r0, #0
9001e672:	d03c      	beq.n	9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e674:	6806      	ldr	r6, [r0, #0]
9001e676:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e67a:	68b5      	ldr	r5, [r6, #8]
9001e67c:	4613      	mov	r3, r2
9001e67e:	46ac      	mov	ip, r5
9001e680:	460a      	mov	r2, r1
9001e682:	4621      	mov	r1, r4
9001e684:	bcf0      	pop	{r4, r5, r6, r7}
9001e686:	4760      	bx	ip
9001e688:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e68a:	e7f1      	b.n	9001e670 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e68c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e690:	e7ee      	b.n	9001e670 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001e692:	2e03      	cmp	r6, #3
9001e694:	d82b      	bhi.n	9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e696:	e8df f006 	tbb	[pc, r6]
9001e69a:	0702      	.short	0x0702
9001e69c:	100e      	.short	0x100e
9001e69e:	9504      	str	r5, [sp, #16]
9001e6a0:	4620      	mov	r0, r4
9001e6a2:	bcf0      	pop	{r4, r5, r6, r7}
9001e6a4:	f7ff bd06 	b.w	9001e0b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001e6a8:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e6aa:	b300      	cbz	r0, 9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e6ac:	6806      	ldr	r6, [r0, #0]
9001e6ae:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e6b2:	68f5      	ldr	r5, [r6, #12]
9001e6b4:	e7e2      	b.n	9001e67c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e6b6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e6b8:	e7f7      	b.n	9001e6aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001e6ba:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e6be:	e7f4      	b.n	9001e6aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001e6c0:	2e03      	cmp	r6, #3
9001e6c2:	d814      	bhi.n	9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e6c4:	e8df f006 	tbb	[pc, r6]
9001e6c8:	100e0702 	.word	0x100e0702
9001e6cc:	9504      	str	r5, [sp, #16]
9001e6ce:	4620      	mov	r0, r4
9001e6d0:	bcf0      	pop	{r4, r5, r6, r7}
9001e6d2:	f7ff bea1 	b.w	9001e418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001e6d6:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001e6d8:	b148      	cbz	r0, 9001e6ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001e6da:	6806      	ldr	r6, [r0, #0]
9001e6dc:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001e6e0:	6935      	ldr	r5, [r6, #16]
9001e6e2:	e7cb      	b.n	9001e67c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001e6e4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001e6e6:	e7f7      	b.n	9001e6d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001e6e8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001e6ec:	e7f4      	b.n	9001e6d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001e6ee:	bcf0      	pop	{r4, r5, r6, r7}
9001e6f0:	4770      	bx	lr
	...

9001e6f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001e6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6f8:	b087      	sub	sp, #28
9001e6fa:	4604      	mov	r4, r0
9001e6fc:	460e      	mov	r6, r1
9001e6fe:	6810      	ldr	r0, [r2, #0]
9001e700:	6851      	ldr	r1, [r2, #4]
9001e702:	ad02      	add	r5, sp, #8
9001e704:	4617      	mov	r7, r2
9001e706:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001e70a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001e93c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001e70e:	c503      	stmia	r5!, {r0, r1}
9001e710:	6818      	ldr	r0, [r3, #0]
9001e712:	ad04      	add	r5, sp, #16
9001e714:	6859      	ldr	r1, [r3, #4]
9001e716:	c503      	stmia	r5!, {r0, r1}
9001e718:	a802      	add	r0, sp, #8
9001e71a:	f7f7 fc0d 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e71e:	4639      	mov	r1, r7
9001e720:	a804      	add	r0, sp, #16
9001e722:	f7f7 fc4d 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e726:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e72a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e72e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001e732:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e736:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e73a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001e73e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001e742:	440e      	add	r6, r1
9001e744:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e748:	440a      	add	r2, r1
9001e74a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e74e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e752:	4413      	add	r3, r2
9001e754:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e758:	4b77      	ldr	r3, [pc, #476]	; (9001e938 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e75a:	6818      	ldr	r0, [r3, #0]
9001e75c:	6803      	ldr	r3, [r0, #0]
9001e75e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e760:	4798      	blx	r3
9001e762:	f8b9 b000 	ldrh.w	fp, [r9]
9001e766:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e76a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001e76e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e772:	fb05 f50b 	mul.w	r5, r5, fp
9001e776:	fb0b 2303 	mla	r3, fp, r3, r2
9001e77a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e77e:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e782:	9300      	str	r3, [sp, #0]
9001e784:	d069      	beq.n	9001e85a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001e786:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001e78a:	4558      	cmp	r0, fp
9001e78c:	f080 80cc 	bcs.w	9001e928 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e790:	9b00      	ldr	r3, [sp, #0]
9001e792:	4631      	mov	r1, r6
9001e794:	18c3      	adds	r3, r0, r3
9001e796:	9301      	str	r3, [sp, #4]
9001e798:	9b01      	ldr	r3, [sp, #4]
9001e79a:	4298      	cmp	r0, r3
9001e79c:	d24f      	bcs.n	9001e83e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001e79e:	f811 2b01 	ldrb.w	r2, [r1], #1
9001e7a2:	2a00      	cmp	r2, #0
9001e7a4:	d048      	beq.n	9001e838 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e7a6:	fb0a f202 	mul.w	r2, sl, r2
9001e7aa:	1c53      	adds	r3, r2, #1
9001e7ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e7b0:	121b      	asrs	r3, r3, #8
9001e7b2:	d041      	beq.n	9001e838 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001e7b4:	8802      	ldrh	r2, [r0, #0]
9001e7b6:	b29e      	uxth	r6, r3
9001e7b8:	f8b4 c000 	ldrh.w	ip, [r4]
9001e7bc:	43db      	mvns	r3, r3
9001e7be:	1215      	asrs	r5, r2, #8
9001e7c0:	b2db      	uxtb	r3, r3
9001e7c2:	ea4f 272c 	mov.w	r7, ip, asr #8
9001e7c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e7ca:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e7ce:	fb15 f503 	smulbb	r5, r5, r3
9001e7d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e7d6:	00d2      	lsls	r2, r2, #3
9001e7d8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e7dc:	fb07 5706 	mla	r7, r7, r6, r5
9001e7e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001e7e4:	b2d2      	uxtb	r2, r2
9001e7e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e7ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e7ee:	fb1e fe03 	smulbb	lr, lr, r3
9001e7f2:	b2bf      	uxth	r7, r7
9001e7f4:	fb12 f203 	smulbb	r2, r2, r3
9001e7f8:	fa5f fc8c 	uxtb.w	ip, ip
9001e7fc:	fb05 e506 	mla	r5, r5, r6, lr
9001e800:	f107 0e01 	add.w	lr, r7, #1
9001e804:	fb0c 2c06 	mla	ip, ip, r6, r2
9001e808:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001e80c:	fa1f fc8c 	uxth.w	ip, ip
9001e810:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001e814:	b2ad      	uxth	r5, r5
9001e816:	f10c 0701 	add.w	r7, ip, #1
9001e81a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001e81e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e822:	ea47 070e 	orr.w	r7, r7, lr
9001e826:	f105 0e01 	add.w	lr, r5, #1
9001e82a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e82e:	096d      	lsrs	r5, r5, #5
9001e830:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e834:	432f      	orrs	r7, r5
9001e836:	8007      	strh	r7, [r0, #0]
9001e838:	3002      	adds	r0, #2
9001e83a:	3402      	adds	r4, #2
9001e83c:	e7ac      	b.n	9001e798 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001e83e:	f8b9 3000 	ldrh.w	r3, [r9]
9001e842:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001e846:	eba3 0308 	sub.w	r3, r3, r8
9001e84a:	eba6 0608 	sub.w	r6, r6, r8
9001e84e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e852:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001e856:	440e      	add	r6, r1
9001e858:	e797      	b.n	9001e78a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001e85a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001e85e:	42a8      	cmp	r0, r5
9001e860:	d262      	bcs.n	9001e928 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001e862:	9b00      	ldr	r3, [sp, #0]
9001e864:	4631      	mov	r1, r6
9001e866:	eb00 0b03 	add.w	fp, r0, r3
9001e86a:	4558      	cmp	r0, fp
9001e86c:	d24e      	bcs.n	9001e90c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001e86e:	f811 3b01 	ldrb.w	r3, [r1], #1
9001e872:	b12b      	cbz	r3, 9001e880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001e874:	2bff      	cmp	r3, #255	; 0xff
9001e876:	f8b4 e000 	ldrh.w	lr, [r4]
9001e87a:	d104      	bne.n	9001e886 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001e87c:	f8a0 e000 	strh.w	lr, [r0]
9001e880:	3002      	adds	r0, #2
9001e882:	3402      	adds	r4, #2
9001e884:	e7f1      	b.n	9001e86a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001e886:	8802      	ldrh	r2, [r0, #0]
9001e888:	b29f      	uxth	r7, r3
9001e88a:	43db      	mvns	r3, r3
9001e88c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e890:	1216      	asrs	r6, r2, #8
9001e892:	b2db      	uxtb	r3, r3
9001e894:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e898:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e89c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001e8a0:	00d2      	lsls	r2, r2, #3
9001e8a2:	fb16 f603 	smulbb	r6, r6, r3
9001e8a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001e8aa:	b2d2      	uxtb	r2, r2
9001e8ac:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e8b0:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e8b4:	fb1a fa03 	smulbb	sl, sl, r3
9001e8b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e8bc:	fa1f fc8c 	uxth.w	ip, ip
9001e8c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e8c4:	fb12 f303 	smulbb	r3, r2, r3
9001e8c8:	fa5f fe8e 	uxtb.w	lr, lr
9001e8cc:	fb06 a607 	mla	r6, r6, r7, sl
9001e8d0:	f10c 0201 	add.w	r2, ip, #1
9001e8d4:	fb0e 3307 	mla	r3, lr, r7, r3
9001e8d8:	b2b6      	uxth	r6, r6
9001e8da:	b29b      	uxth	r3, r3
9001e8dc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e8e0:	f106 0a01 	add.w	sl, r6, #1
9001e8e4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001e8e8:	f103 0c01 	add.w	ip, r3, #1
9001e8ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001e8f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e8f4:	0976      	lsrs	r6, r6, #5
9001e8f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e8fa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e8fe:	ea4c 0c02 	orr.w	ip, ip, r2
9001e902:	ea4c 0c06 	orr.w	ip, ip, r6
9001e906:	f8a0 c000 	strh.w	ip, [r0]
9001e90a:	e7b9      	b.n	9001e880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001e90c:	f8b9 3000 	ldrh.w	r3, [r9]
9001e910:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001e914:	eba3 0308 	sub.w	r3, r3, r8
9001e918:	eba6 0608 	sub.w	r6, r6, r8
9001e91c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e920:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001e924:	440e      	add	r6, r1
9001e926:	e79a      	b.n	9001e85e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001e928:	4b03      	ldr	r3, [pc, #12]	; (9001e938 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001e92a:	6818      	ldr	r0, [r3, #0]
9001e92c:	6803      	ldr	r3, [r0, #0]
9001e92e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e930:	4798      	blx	r3
9001e932:	b007      	add	sp, #28
9001e934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e938:	24039704 	.word	0x24039704
9001e93c:	240396fe 	.word	0x240396fe

9001e940 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001e940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e944:	b089      	sub	sp, #36	; 0x24
9001e946:	4682      	mov	sl, r0
9001e948:	460f      	mov	r7, r1
9001e94a:	4691      	mov	r9, r2
9001e94c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001e950:	4698      	mov	r8, r3
9001e952:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001e954:	2e00      	cmp	r6, #0
9001e956:	d03d      	beq.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001e958:	4608      	mov	r0, r1
9001e95a:	f7fa fe4d 	bl	900195f8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001e95e:	4605      	mov	r5, r0
9001e960:	4638      	mov	r0, r7
9001e962:	f7fa fe7d 	bl	90019660 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001e966:	f8ad 000e 	strh.w	r0, [sp, #14]
9001e96a:	4638      	mov	r0, r7
9001e96c:	f8ad 9008 	strh.w	r9, [sp, #8]
9001e970:	f8ad 500c 	strh.w	r5, [sp, #12]
9001e974:	f8ad 800a 	strh.w	r8, [sp, #10]
9001e978:	f7fa ff2a 	bl	900197d0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001e97c:	4605      	mov	r5, r0
9001e97e:	4638      	mov	r0, r7
9001e980:	f7fa ff56 	bl	90019830 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001e984:	4681      	mov	r9, r0
9001e986:	4638      	mov	r0, r7
9001e988:	f7fa ffa6 	bl	900198d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001e98c:	280b      	cmp	r0, #11
9001e98e:	d821      	bhi.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001e990:	e8df f000 	tbb	[pc, r0]
9001e994:	2006aebe 	.word	0x2006aebe
9001e998:	20202020 	.word	0x20202020
9001e99c:	b5202020 	.word	0xb5202020
9001e9a0:	4bb0      	ldr	r3, [pc, #704]	; (9001ec64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001e9a2:	6818      	ldr	r0, [r3, #0]
9001e9a4:	6803      	ldr	r3, [r0, #0]
9001e9a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e9a8:	4798      	blx	r3
9001e9aa:	2eff      	cmp	r6, #255	; 0xff
9001e9ac:	d101      	bne.n	9001e9b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001e9ae:	0683      	lsls	r3, r0, #26
9001e9b0:	d506      	bpl.n	9001e9c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001e9b2:	4633      	mov	r3, r6
9001e9b4:	4622      	mov	r2, r4
9001e9b6:	a902      	add	r1, sp, #8
9001e9b8:	4628      	mov	r0, r5
9001e9ba:	f7ff f909 	bl	9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e9be:	e009      	b.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001e9c0:	4638      	mov	r0, r7
9001e9c2:	f7fa fecd 	bl	90019760 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001e9c6:	b940      	cbnz	r0, 9001e9da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001e9c8:	4623      	mov	r3, r4
9001e9ca:	aa02      	add	r2, sp, #8
9001e9cc:	4629      	mov	r1, r5
9001e9ce:	4650      	mov	r0, sl
9001e9d0:	f7ff f9e4 	bl	9001dd9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001e9d4:	b009      	add	sp, #36	; 0x24
9001e9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e9da:	f10d 0818 	add.w	r8, sp, #24
9001e9de:	4639      	mov	r1, r7
9001e9e0:	af04      	add	r7, sp, #16
9001e9e2:	4640      	mov	r0, r8
9001e9e4:	f7fa fe70 	bl	900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001e9e8:	e898 0003 	ldmia.w	r8, {r0, r1}
9001e9ec:	e887 0003 	stmia.w	r7, {r0, r1}
9001e9f0:	4638      	mov	r0, r7
9001e9f2:	4621      	mov	r1, r4
9001e9f4:	f7f2 fa2c 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
9001e9f8:	4638      	mov	r0, r7
9001e9fa:	f7f2 fa6c 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001e9fe:	2800      	cmp	r0, #0
9001ea00:	d1d7      	bne.n	9001e9b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001ea02:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ea06:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001ea0a:	4293      	cmp	r3, r2
9001ea0c:	dd12      	ble.n	9001ea34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001ea0e:	1a9b      	subs	r3, r3, r2
9001ea10:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ea14:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001ea18:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ea1c:	4628      	mov	r0, r5
9001ea1e:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ea22:	4642      	mov	r2, r8
9001ea24:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ea28:	a902      	add	r1, sp, #8
9001ea2a:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ea2e:	4633      	mov	r3, r6
9001ea30:	f7ff f8ce 	bl	9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ea34:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ea38:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ea3c:	4293      	cmp	r3, r2
9001ea3e:	dd12      	ble.n	9001ea66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001ea40:	1a9b      	subs	r3, r3, r2
9001ea42:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ea46:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ea4a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ea4e:	4642      	mov	r2, r8
9001ea50:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ea54:	4628      	mov	r0, r5
9001ea56:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ea5a:	23ff      	movs	r3, #255	; 0xff
9001ea5c:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ea60:	a902      	add	r1, sp, #8
9001ea62:	f7ff f8b5 	bl	9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ea66:	463b      	mov	r3, r7
9001ea68:	aa02      	add	r2, sp, #8
9001ea6a:	4629      	mov	r1, r5
9001ea6c:	4650      	mov	r0, sl
9001ea6e:	f7ff f995 	bl	9001dd9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001ea72:	88a2      	ldrh	r2, [r4, #4]
9001ea74:	8823      	ldrh	r3, [r4, #0]
9001ea76:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ea7a:	4413      	add	r3, r2
9001ea7c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ea80:	440a      	add	r2, r1
9001ea82:	b29b      	uxth	r3, r3
9001ea84:	b292      	uxth	r2, r2
9001ea86:	b218      	sxth	r0, r3
9001ea88:	b211      	sxth	r1, r2
9001ea8a:	4288      	cmp	r0, r1
9001ea8c:	dd12      	ble.n	9001eab4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001ea8e:	1a9b      	subs	r3, r3, r2
9001ea90:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ea94:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001ea98:	4642      	mov	r2, r8
9001ea9a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ea9e:	a902      	add	r1, sp, #8
9001eaa0:	f8ad 301c 	strh.w	r3, [sp, #28]
9001eaa4:	23ff      	movs	r3, #255	; 0xff
9001eaa6:	f8ad 001e 	strh.w	r0, [sp, #30]
9001eaaa:	4628      	mov	r0, r5
9001eaac:	f8ad 601a 	strh.w	r6, [sp, #26]
9001eab0:	f7ff f88e 	bl	9001dbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001eab4:	88e2      	ldrh	r2, [r4, #6]
9001eab6:	8863      	ldrh	r3, [r4, #2]
9001eab8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001eabc:	4413      	add	r3, r2
9001eabe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001eac2:	440a      	add	r2, r1
9001eac4:	b29b      	uxth	r3, r3
9001eac6:	b292      	uxth	r2, r2
9001eac8:	b218      	sxth	r0, r3
9001eaca:	b211      	sxth	r1, r2
9001eacc:	4288      	cmp	r0, r1
9001eace:	dd81      	ble.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ead0:	1a9b      	subs	r3, r3, r2
9001ead2:	f9b4 6000 	ldrsh.w	r6, [r4]
9001ead6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001eada:	4642      	mov	r2, r8
9001eadc:	f8ad 301e 	strh.w	r3, [sp, #30]
9001eae0:	23ff      	movs	r3, #255	; 0xff
9001eae2:	f8ad 6018 	strh.w	r6, [sp, #24]
9001eae6:	f8ad 101a 	strh.w	r1, [sp, #26]
9001eaea:	f8ad 001c 	strh.w	r0, [sp, #28]
9001eaee:	e762      	b.n	9001e9b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001eaf0:	4633      	mov	r3, r6
9001eaf2:	4622      	mov	r2, r4
9001eaf4:	a902      	add	r1, sp, #8
9001eaf6:	4628      	mov	r0, r5
9001eaf8:	f7ff f9c0 	bl	9001de7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001eafc:	e76a      	b.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eafe:	e9cd 4600 	strd	r4, r6, [sp]
9001eb02:	ab02      	add	r3, sp, #8
9001eb04:	464a      	mov	r2, r9
9001eb06:	4629      	mov	r1, r5
9001eb08:	4650      	mov	r0, sl
9001eb0a:	f7ff fd97 	bl	9001e63c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001eb0e:	e761      	b.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eb10:	4638      	mov	r0, r7
9001eb12:	f7fa fe25 	bl	90019760 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001eb16:	b950      	cbnz	r0, 9001eb2e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001eb18:	f8da 3000 	ldr.w	r3, [sl]
9001eb1c:	aa02      	add	r2, sp, #8
9001eb1e:	4629      	mov	r1, r5
9001eb20:	e9cd 6000 	strd	r6, r0, [sp]
9001eb24:	4650      	mov	r0, sl
9001eb26:	68de      	ldr	r6, [r3, #12]
9001eb28:	4623      	mov	r3, r4
9001eb2a:	47b0      	blx	r6
9001eb2c:	e752      	b.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eb2e:	f10d 0818 	add.w	r8, sp, #24
9001eb32:	4639      	mov	r1, r7
9001eb34:	af04      	add	r7, sp, #16
9001eb36:	4640      	mov	r0, r8
9001eb38:	f7fa fdc6 	bl	900196c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001eb3c:	e898 0003 	ldmia.w	r8, {r0, r1}
9001eb40:	e887 0003 	stmia.w	r7, {r0, r1}
9001eb44:	4638      	mov	r0, r7
9001eb46:	4621      	mov	r1, r4
9001eb48:	f7f2 f982 	bl	90010e50 <_ZN8touchgfx4RectaNERKS0_>
9001eb4c:	4638      	mov	r0, r7
9001eb4e:	f7f2 f9c2 	bl	90010ed6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001eb52:	b138      	cbz	r0, 9001eb64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001eb54:	4623      	mov	r3, r4
9001eb56:	9600      	str	r6, [sp, #0]
9001eb58:	aa02      	add	r2, sp, #8
9001eb5a:	4649      	mov	r1, r9
9001eb5c:	4628      	mov	r0, r5
9001eb5e:	f7ff fdc9 	bl	9001e6f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001eb62:	e737      	b.n	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001eb64:	f8da 3000 	ldr.w	r3, [sl]
9001eb68:	aa02      	add	r2, sp, #8
9001eb6a:	4629      	mov	r1, r5
9001eb6c:	e9cd 6000 	strd	r6, r0, [sp]
9001eb70:	4650      	mov	r0, sl
9001eb72:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001eb76:	463b      	mov	r3, r7
9001eb78:	47d8      	blx	fp
9001eb7a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001eb7e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001eb82:	4293      	cmp	r3, r2
9001eb84:	dd13      	ble.n	9001ebae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001eb86:	f9b4 0000 	ldrsh.w	r0, [r4]
9001eb8a:	1a9b      	subs	r3, r3, r2
9001eb8c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001eb90:	f8ad 0018 	strh.w	r0, [sp, #24]
9001eb94:	4628      	mov	r0, r5
9001eb96:	f8ad 201a 	strh.w	r2, [sp, #26]
9001eb9a:	aa02      	add	r2, sp, #8
9001eb9c:	f8ad 101c 	strh.w	r1, [sp, #28]
9001eba0:	4649      	mov	r1, r9
9001eba2:	f8ad 301e 	strh.w	r3, [sp, #30]
9001eba6:	4643      	mov	r3, r8
9001eba8:	9600      	str	r6, [sp, #0]
9001ebaa:	f7ff fda3 	bl	9001e6f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ebae:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ebb2:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ebb6:	4293      	cmp	r3, r2
9001ebb8:	dd13      	ble.n	9001ebe2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001ebba:	1a9b      	subs	r3, r3, r2
9001ebbc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ebc0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ebc4:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ebc8:	aa02      	add	r2, sp, #8
9001ebca:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ebce:	4628      	mov	r0, r5
9001ebd0:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ebd4:	4643      	mov	r3, r8
9001ebd6:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ebda:	4649      	mov	r1, r9
9001ebdc:	9600      	str	r6, [sp, #0]
9001ebde:	f7ff fd89 	bl	9001e6f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ebe2:	88a2      	ldrh	r2, [r4, #4]
9001ebe4:	8823      	ldrh	r3, [r4, #0]
9001ebe6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ebea:	4413      	add	r3, r2
9001ebec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ebf0:	440a      	add	r2, r1
9001ebf2:	b29b      	uxth	r3, r3
9001ebf4:	b292      	uxth	r2, r2
9001ebf6:	b218      	sxth	r0, r3
9001ebf8:	b211      	sxth	r1, r2
9001ebfa:	4288      	cmp	r0, r1
9001ebfc:	dd13      	ble.n	9001ec26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001ebfe:	1a9b      	subs	r3, r3, r2
9001ec00:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ec04:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001ec08:	aa02      	add	r2, sp, #8
9001ec0a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ec0e:	4649      	mov	r1, r9
9001ec10:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ec14:	4643      	mov	r3, r8
9001ec16:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ec1a:	4628      	mov	r0, r5
9001ec1c:	9600      	str	r6, [sp, #0]
9001ec1e:	f8ad 701a 	strh.w	r7, [sp, #26]
9001ec22:	f7ff fd67 	bl	9001e6f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ec26:	88e2      	ldrh	r2, [r4, #6]
9001ec28:	8863      	ldrh	r3, [r4, #2]
9001ec2a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ec2e:	4413      	add	r3, r2
9001ec30:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001ec34:	440a      	add	r2, r1
9001ec36:	b29b      	uxth	r3, r3
9001ec38:	b292      	uxth	r2, r2
9001ec3a:	b218      	sxth	r0, r3
9001ec3c:	b211      	sxth	r1, r2
9001ec3e:	4288      	cmp	r0, r1
9001ec40:	f77f aec8 	ble.w	9001e9d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ec44:	f9b4 7000 	ldrsh.w	r7, [r4]
9001ec48:	1a9b      	subs	r3, r3, r2
9001ec4a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001ec4e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ec52:	4643      	mov	r3, r8
9001ec54:	f8ad 7018 	strh.w	r7, [sp, #24]
9001ec58:	f8ad 101a 	strh.w	r1, [sp, #26]
9001ec5c:	f8ad 001c 	strh.w	r0, [sp, #28]
9001ec60:	9600      	str	r6, [sp, #0]
9001ec62:	e779      	b.n	9001eb58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001ec64:	24039704 	.word	0x24039704

9001ec68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001ec68:	b180      	cbz	r0, 9001ec8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001ec6a:	2903      	cmp	r1, #3
9001ec6c:	d81c      	bhi.n	9001eca8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001ec6e:	e8df f001 	tbb	[pc, r1]
9001ec72:	1d02      	.short	0x1d02
9001ec74:	1f08      	.short	0x1f08
9001ec76:	4b10      	ldr	r3, [pc, #64]	; (9001ecb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ec78:	8818      	ldrh	r0, [r3, #0]
9001ec7a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ec7e:	4240      	negs	r0, r0
9001ec80:	4770      	bx	lr
9001ec82:	4b0d      	ldr	r3, [pc, #52]	; (9001ecb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001ec84:	8818      	ldrh	r0, [r3, #0]
9001ec86:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ec8a:	4770      	bx	lr
9001ec8c:	2903      	cmp	r1, #3
9001ec8e:	d80b      	bhi.n	9001eca8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001ec90:	a301      	add	r3, pc, #4	; (adr r3, 9001ec98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001ec92:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ec96:	bf00      	nop
9001ec98:	9001ecad 	.word	0x9001ecad
9001ec9c:	9001ec83 	.word	0x9001ec83
9001eca0:	9001ecb1 	.word	0x9001ecb1
9001eca4:	9001ec77 	.word	0x9001ec77
9001eca8:	2000      	movs	r0, #0
9001ecaa:	4770      	bx	lr
9001ecac:	2001      	movs	r0, #1
9001ecae:	4770      	bx	lr
9001ecb0:	f04f 30ff 	mov.w	r0, #4294967295
9001ecb4:	4770      	bx	lr
9001ecb6:	bf00      	nop
9001ecb8:	240396fe 	.word	0x240396fe

9001ecbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001ecbc:	b180      	cbz	r0, 9001ece0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001ecbe:	2903      	cmp	r1, #3
9001ecc0:	d81c      	bhi.n	9001ecfc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ecc2:	e8df f001 	tbb	[pc, r1]
9001ecc6:	021d      	.short	0x021d
9001ecc8:	071f      	.short	0x071f
9001ecca:	4b10      	ldr	r3, [pc, #64]	; (9001ed0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001eccc:	8818      	ldrh	r0, [r3, #0]
9001ecce:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ecd2:	4770      	bx	lr
9001ecd4:	4b0d      	ldr	r3, [pc, #52]	; (9001ed0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001ecd6:	8818      	ldrh	r0, [r3, #0]
9001ecd8:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001ecdc:	4240      	negs	r0, r0
9001ecde:	4770      	bx	lr
9001ece0:	2903      	cmp	r1, #3
9001ece2:	d80b      	bhi.n	9001ecfc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001ece4:	a301      	add	r3, pc, #4	; (adr r3, 9001ecec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001ece6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001ecea:	bf00      	nop
9001ecec:	9001eccb 	.word	0x9001eccb
9001ecf0:	9001ed05 	.word	0x9001ed05
9001ecf4:	9001ecd5 	.word	0x9001ecd5
9001ecf8:	9001ed01 	.word	0x9001ed01
9001ecfc:	2000      	movs	r0, #0
9001ecfe:	4770      	bx	lr
9001ed00:	2001      	movs	r0, #1
9001ed02:	4770      	bx	lr
9001ed04:	f04f 30ff 	mov.w	r0, #4294967295
9001ed08:	4770      	bx	lr
9001ed0a:	bf00      	nop
9001ed0c:	240396fe 	.word	0x240396fe

9001ed10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001ed10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ed14:	b099      	sub	sp, #100	; 0x64
9001ed16:	910b      	str	r1, [sp, #44]	; 0x2c
9001ed18:	a914      	add	r1, sp, #80	; 0x50
9001ed1a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001ed1e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001ed22:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001ed26:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001ed2a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001ed2e:	e881 000c 	stmia.w	r1, {r2, r3}
9001ed32:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001ed36:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001ed3a:	9309      	str	r3, [sp, #36]	; 0x24
9001ed3c:	f891 900d 	ldrb.w	r9, [r1, #13]
9001ed40:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001ed44:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001ed48:	9310      	str	r3, [sp, #64]	; 0x40
9001ed4a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001ed4e:	930c      	str	r3, [sp, #48]	; 0x30
9001ed50:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001ed54:	798f      	ldrb	r7, [r1, #6]
9001ed56:	431f      	orrs	r7, r3
9001ed58:	f000 8195 	beq.w	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ed5c:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001ed60:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001ed64:	f891 9007 	ldrb.w	r9, [r1, #7]
9001ed68:	ea59 0903 	orrs.w	r9, r9, r3
9001ed6c:	f000 818b 	beq.w	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ed70:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001ed74:	b29b      	uxth	r3, r3
9001ed76:	2d00      	cmp	r5, #0
9001ed78:	f000 812e 	beq.w	9001efd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001ed7c:	1aed      	subs	r5, r5, r3
9001ed7e:	b2ad      	uxth	r5, r5
9001ed80:	042b      	lsls	r3, r5, #16
9001ed82:	d502      	bpl.n	9001ed8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001ed84:	1b64      	subs	r4, r4, r5
9001ed86:	2500      	movs	r5, #0
9001ed88:	b224      	sxth	r4, r4
9001ed8a:	f9b2 1000 	ldrsh.w	r1, [r2]
9001ed8e:	a814      	add	r0, sp, #80	; 0x50
9001ed90:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001ed94:	428c      	cmp	r4, r1
9001ed96:	b28b      	uxth	r3, r1
9001ed98:	bfbf      	itttt	lt
9001ed9a:	18ed      	addlt	r5, r5, r3
9001ed9c:	1b2c      	sublt	r4, r5, r4
9001ed9e:	b2a5      	uxthlt	r5, r4
9001eda0:	460c      	movlt	r4, r1
9001eda2:	8891      	ldrh	r1, [r2, #4]
9001eda4:	440b      	add	r3, r1
9001eda6:	4621      	mov	r1, r4
9001eda8:	b21b      	sxth	r3, r3
9001edaa:	930f      	str	r3, [sp, #60]	; 0x3c
9001edac:	88d3      	ldrh	r3, [r2, #6]
9001edae:	8852      	ldrh	r2, [r2, #2]
9001edb0:	4413      	add	r3, r2
9001edb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001edb4:	b21b      	sxth	r3, r3
9001edb6:	930d      	str	r3, [sp, #52]	; 0x34
9001edb8:	4bbd      	ldr	r3, [pc, #756]	; (9001f0b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001edba:	f893 b000 	ldrb.w	fp, [r3]
9001edbe:	f10b 3cff 	add.w	ip, fp, #4294967295
9001edc2:	f1dc 0300 	rsbs	r3, ip, #0
9001edc6:	eb43 030c 	adc.w	r3, r3, ip
9001edca:	930e      	str	r3, [sp, #56]	; 0x38
9001edcc:	4653      	mov	r3, sl
9001edce:	f7f6 ff28 	bl	90015c22 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001edd2:	4621      	mov	r1, r4
9001edd4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001edd8:	4653      	mov	r3, sl
9001edda:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001eddc:	a814      	add	r0, sp, #80	; 0x50
9001edde:	f7f6 ff3d 	bl	90015c5c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001ede2:	a918      	add	r1, sp, #96	; 0x60
9001ede4:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001ede8:	a817      	add	r0, sp, #92	; 0x5c
9001edea:	f7f7 f863 	bl	90015eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001edee:	f1ba 0f00 	cmp.w	sl, #0
9001edf2:	f040 80f4 	bne.w	9001efde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001edf6:	f1bb 0f01 	cmp.w	fp, #1
9001edfa:	f040 80f8 	bne.w	9001efee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001edfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ee00:	2b00      	cmp	r3, #0
9001ee02:	f040 8145 	bne.w	9001f090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001ee06:	b2ba      	uxth	r2, r7
9001ee08:	b905      	cbnz	r5, 9001ee0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001ee0a:	b16e      	cbz	r6, 9001ee28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001ee0c:	fb06 5302 	mla	r3, r6, r2, r5
9001ee10:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001ee12:	4631      	mov	r1, r6
9001ee14:	fb08 f303 	mul.w	r3, r8, r3
9001ee18:	f003 0607 	and.w	r6, r3, #7
9001ee1c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001ee20:	9328      	str	r3, [sp, #160]	; 0xa0
9001ee22:	eba9 0301 	sub.w	r3, r9, r1
9001ee26:	930a      	str	r3, [sp, #40]	; 0x28
9001ee28:	4651      	mov	r1, sl
9001ee2a:	980e      	ldr	r0, [sp, #56]	; 0x38
9001ee2c:	f7ff ff1c 	bl	9001ec68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001ee30:	4681      	mov	r9, r0
9001ee32:	980e      	ldr	r0, [sp, #56]	; 0x38
9001ee34:	f7ff ff42 	bl	9001ecbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001ee38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ee3a:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ee3c:	4683      	mov	fp, r0
9001ee3e:	eba3 0a01 	sub.w	sl, r3, r1
9001ee42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ee44:	459a      	cmp	sl, r3
9001ee46:	bfa8      	it	ge
9001ee48:	469a      	movge	sl, r3
9001ee4a:	f1ba 0f00 	cmp.w	sl, #0
9001ee4e:	f340 811a 	ble.w	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ee52:	1b64      	subs	r4, r4, r5
9001ee54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001ee56:	1b1c      	subs	r4, r3, r4
9001ee58:	42bc      	cmp	r4, r7
9001ee5a:	bfd4      	ite	le
9001ee5c:	ebc5 0504 	rsble	r5, r5, r4
9001ee60:	ebc5 0507 	rsbgt	r5, r5, r7
9001ee64:	2d00      	cmp	r5, #0
9001ee66:	f340 810e 	ble.w	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001ee6a:	1b52      	subs	r2, r2, r5
9001ee6c:	fb08 f302 	mul.w	r3, r8, r2
9001ee70:	930f      	str	r3, [sp, #60]	; 0x3c
9001ee72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ee74:	2b00      	cmp	r3, #0
9001ee76:	f040 8116 	bne.w	9001f0a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001ee7a:	4b8e      	ldr	r3, [pc, #568]	; (9001f0b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001ee7c:	6818      	ldr	r0, [r3, #0]
9001ee7e:	6803      	ldr	r3, [r0, #0]
9001ee80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ee82:	4798      	blx	r3
9001ee84:	2301      	movs	r3, #1
9001ee86:	4a8c      	ldr	r2, [pc, #560]	; (9001f0b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001ee88:	fa03 f308 	lsl.w	r3, r3, r8
9001ee8c:	8811      	ldrh	r1, [r2, #0]
9001ee8e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001ee92:	3b01      	subs	r3, #1
9001ee94:	b2db      	uxtb	r3, r3
9001ee96:	930e      	str	r3, [sp, #56]	; 0x38
9001ee98:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001ee9c:	fb01 2303 	mla	r3, r1, r3, r2
9001eea0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001eea4:	930a      	str	r3, [sp, #40]	; 0x28
9001eea6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001eea8:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001eeac:	9313      	str	r3, [sp, #76]	; 0x4c
9001eeae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001eeb0:	0a19      	lsrs	r1, r3, #8
9001eeb2:	b2cb      	uxtb	r3, r1
9001eeb4:	9312      	str	r3, [sp, #72]	; 0x48
9001eeb6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001eeb8:	b2db      	uxtb	r3, r3
9001eeba:	9311      	str	r3, [sp, #68]	; 0x44
9001eebc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001eebe:	095a      	lsrs	r2, r3, #5
9001eec0:	4b7e      	ldr	r3, [pc, #504]	; (9001f0bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001eec2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001eec6:	400b      	ands	r3, r1
9001eec8:	4313      	orrs	r3, r2
9001eeca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001eecc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001eed0:	4313      	orrs	r3, r2
9001eed2:	b29b      	uxth	r3, r3
9001eed4:	9310      	str	r3, [sp, #64]	; 0x40
9001eed6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001eed8:	781a      	ldrb	r2, [r3, #0]
9001eeda:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001eede:	fb05 b919 	mls	r9, r5, r9, fp
9001eee2:	4132      	asrs	r2, r6
9001eee4:	fb03 fb05 	mul.w	fp, r3, r5
9001eee8:	930d      	str	r3, [sp, #52]	; 0x34
9001eeea:	b2d2      	uxtb	r2, r2
9001eeec:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001eef0:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001eef4:	f0c0 80f5 	bcc.w	9001f0e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001eef8:	46ae      	mov	lr, r5
9001eefa:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001eefe:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001ef02:	f0c0 80dd 	bcc.w	9001f0c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001ef06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ef08:	4013      	ands	r3, r2
9001ef0a:	d055      	beq.n	9001efb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001ef0c:	20ff      	movs	r0, #255	; 0xff
9001ef0e:	990e      	ldr	r1, [sp, #56]	; 0x38
9001ef10:	fb90 f1f1 	sdiv	r1, r0, r1
9001ef14:	434b      	muls	r3, r1
9001ef16:	2bfe      	cmp	r3, #254	; 0xfe
9001ef18:	dd03      	ble.n	9001ef22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001ef1a:	990c      	ldr	r1, [sp, #48]	; 0x30
9001ef1c:	4281      	cmp	r1, r0
9001ef1e:	f000 80c4 	beq.w	9001f0aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001ef22:	990c      	ldr	r1, [sp, #48]	; 0x30
9001ef24:	f8bc 4000 	ldrh.w	r4, [ip]
9001ef28:	fb11 f303 	smulbb	r3, r1, r3
9001ef2c:	1220      	asrs	r0, r4, #8
9001ef2e:	b29b      	uxth	r3, r3
9001ef30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ef34:	1c59      	adds	r1, r3, #1
9001ef36:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001ef3a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001ef3e:	10e1      	asrs	r1, r4, #3
9001ef40:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001ef44:	00e4      	lsls	r4, r4, #3
9001ef46:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ef4a:	b29f      	uxth	r7, r3
9001ef4c:	43db      	mvns	r3, r3
9001ef4e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001ef52:	b2db      	uxtb	r3, r3
9001ef54:	b2e4      	uxtb	r4, r4
9001ef56:	9309      	str	r3, [sp, #36]	; 0x24
9001ef58:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001ef5a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001ef5e:	fb13 f907 	smulbb	r9, r3, r7
9001ef62:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ef64:	fb00 9003 	mla	r0, r0, r3, r9
9001ef68:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001ef6a:	fb13 f907 	smulbb	r9, r3, r7
9001ef6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ef70:	b280      	uxth	r0, r0
9001ef72:	fb01 9103 	mla	r1, r1, r3, r9
9001ef76:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001ef78:	fb13 f707 	smulbb	r7, r3, r7
9001ef7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ef7e:	b289      	uxth	r1, r1
9001ef80:	fb04 7403 	mla	r4, r4, r3, r7
9001ef84:	1c43      	adds	r3, r0, #1
9001ef86:	b2a4      	uxth	r4, r4
9001ef88:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001ef8c:	f104 0901 	add.w	r9, r4, #1
9001ef90:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001ef94:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001ef98:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001ef9c:	ea49 0000 	orr.w	r0, r9, r0
9001efa0:	f101 0901 	add.w	r9, r1, #1
9001efa4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001efa8:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001efac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001efb0:	ea40 0009 	orr.w	r0, r0, r9
9001efb4:	f8ac 0000 	strh.w	r0, [ip]
9001efb8:	4446      	add	r6, r8
9001efba:	b2b6      	uxth	r6, r6
9001efbc:	2e07      	cmp	r6, #7
9001efbe:	bf89      	itett	hi
9001efc0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001efc2:	fa42 f208 	asrls.w	r2, r2, r8
9001efc6:	2600      	movhi	r6, #0
9001efc8:	785a      	ldrbhi	r2, [r3, #1]
9001efca:	bf8a      	itet	hi
9001efcc:	3301      	addhi	r3, #1
9001efce:	b2d2      	uxtbls	r2, r2
9001efd0:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001efd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001efd4:	449c      	add	ip, r3
9001efd6:	e792      	b.n	9001eefe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001efd8:	441c      	add	r4, r3
9001efda:	b224      	sxth	r4, r4
9001efdc:	e6d5      	b.n	9001ed8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001efde:	f1ba 0f01 	cmp.w	sl, #1
9001efe2:	f47f af0c 	bne.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001efe6:	f1bb 0f01 	cmp.w	fp, #1
9001efea:	f47f af08 	bne.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001efee:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001f0b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001eff2:	f8db 0000 	ldr.w	r0, [fp]
9001eff6:	6803      	ldr	r3, [r0, #0]
9001eff8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001effa:	4798      	blx	r3
9001effc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001f000:	465a      	mov	r2, fp
9001f002:	d006      	beq.n	9001f012 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f004:	f1b8 0f04 	cmp.w	r8, #4
9001f008:	d140      	bne.n	9001f08c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001f00a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f00c:	3300      	adds	r3, #0
9001f00e:	bf18      	it	ne
9001f010:	2301      	movne	r3, #1
9001f012:	0580      	lsls	r0, r0, #22
9001f014:	d56e      	bpl.n	9001f0f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f016:	f1b8 0f08 	cmp.w	r8, #8
9001f01a:	d16b      	bne.n	9001f0f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f01c:	2b00      	cmp	r3, #0
9001f01e:	bf0c      	ite	eq
9001f020:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001f024:	f44f 7180 	movne.w	r1, #256	; 0x100
9001f028:	2d00      	cmp	r5, #0
9001f02a:	f47f aee8 	bne.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f02e:	2e00      	cmp	r6, #0
9001f030:	f47f aee5 	bne.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f034:	19e3      	adds	r3, r4, r7
9001f036:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001f038:	4283      	cmp	r3, r0
9001f03a:	f73f aee0 	bgt.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f03e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f040:	980d      	ldr	r0, [sp, #52]	; 0x34
9001f042:	444b      	add	r3, r9
9001f044:	4283      	cmp	r3, r0
9001f046:	f73f aeda 	bgt.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f04a:	b2bf      	uxth	r7, r7
9001f04c:	f1b8 0f08 	cmp.w	r8, #8
9001f050:	6810      	ldr	r0, [r2, #0]
9001f052:	f04f 0500 	mov.w	r5, #0
9001f056:	bf18      	it	ne
9001f058:	3701      	addne	r7, #1
9001f05a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001f05e:	6804      	ldr	r4, [r0, #0]
9001f060:	bf18      	it	ne
9001f062:	f027 0701 	bicne.w	r7, r7, #1
9001f066:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f06a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001f06e:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f070:	bf18      	it	ne
9001f072:	b2bf      	uxthne	r7, r7
9001f074:	9104      	str	r1, [sp, #16]
9001f076:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001f078:	e9cd 7900 	strd	r7, r9, [sp]
9001f07c:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001f080:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001f082:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001f084:	47a0      	blx	r4
9001f086:	b019      	add	sp, #100	; 0x64
9001f088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f08c:	2300      	movs	r3, #0
9001f08e:	e7c0      	b.n	9001f012 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f090:	2208      	movs	r2, #8
9001f092:	fb92 f3f8 	sdiv	r3, r2, r8
9001f096:	1e5a      	subs	r2, r3, #1
9001f098:	443a      	add	r2, r7
9001f09a:	fb92 f2f3 	sdiv	r2, r2, r3
9001f09e:	fb12 f203 	smulbb	r2, r2, r3
9001f0a2:	b292      	uxth	r2, r2
9001f0a4:	e6b0      	b.n	9001ee08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001f0a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f0a8:	e6ec      	b.n	9001ee84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001f0aa:	9810      	ldr	r0, [sp, #64]	; 0x40
9001f0ac:	e782      	b.n	9001efb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001f0ae:	bf00      	nop
9001f0b0:	240396fc 	.word	0x240396fc
9001f0b4:	24039704 	.word	0x24039704
9001f0b8:	240396fe 	.word	0x240396fe
9001f0bc:	00fff800 	.word	0x00fff800
9001f0c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f0c2:	b153      	cbz	r3, 9001f0da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001f0c4:	441e      	add	r6, r3
9001f0c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f0c8:	b2b6      	uxth	r6, r6
9001f0ca:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001f0ce:	f006 0607 	and.w	r6, r6, #7
9001f0d2:	781a      	ldrb	r2, [r3, #0]
9001f0d4:	9328      	str	r3, [sp, #160]	; 0xa0
9001f0d6:	4132      	asrs	r2, r6
9001f0d8:	b2d2      	uxtb	r2, r2
9001f0da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f0dc:	445b      	add	r3, fp
9001f0de:	930a      	str	r3, [sp, #40]	; 0x28
9001f0e0:	e706      	b.n	9001eef0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001f0e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f0e4:	2b00      	cmp	r3, #0
9001f0e6:	d1ce      	bne.n	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f0e8:	4b05      	ldr	r3, [pc, #20]	; (9001f100 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001f0ea:	6818      	ldr	r0, [r3, #0]
9001f0ec:	6803      	ldr	r3, [r0, #0]
9001f0ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f0f0:	4798      	blx	r3
9001f0f2:	e7c8      	b.n	9001f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f0f4:	2b00      	cmp	r3, #0
9001f0f6:	f43f ae82 	beq.w	9001edfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f0fa:	f44f 7180 	mov.w	r1, #256	; 0x100
9001f0fe:	e793      	b.n	9001f028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001f100:	24039704 	.word	0x24039704

9001f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001f104:	b538      	push	{r3, r4, r5, lr}
9001f106:	4c15      	ldr	r4, [pc, #84]	; (9001f15c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001f108:	4605      	mov	r5, r0
9001f10a:	7823      	ldrb	r3, [r4, #0]
9001f10c:	f3bf 8f5b 	dmb	ish
9001f110:	07da      	lsls	r2, r3, #31
9001f112:	d40b      	bmi.n	9001f12c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f114:	4620      	mov	r0, r4
9001f116:	f008 fa05 	bl	90027524 <__cxa_guard_acquire>
9001f11a:	b138      	cbz	r0, 9001f12c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f11c:	4620      	mov	r0, r4
9001f11e:	f008 fa0d 	bl	9002753c <__cxa_guard_release>
9001f122:	4a0f      	ldr	r2, [pc, #60]	; (9001f160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f124:	490f      	ldr	r1, [pc, #60]	; (9001f164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001f126:	4810      	ldr	r0, [pc, #64]	; (9001f168 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f128:	f008 f9f5 	bl	90027516 <__aeabi_atexit>
9001f12c:	4c0f      	ldr	r4, [pc, #60]	; (9001f16c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001f12e:	7823      	ldrb	r3, [r4, #0]
9001f130:	f3bf 8f5b 	dmb	ish
9001f134:	07db      	lsls	r3, r3, #31
9001f136:	d40b      	bmi.n	9001f150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f138:	4620      	mov	r0, r4
9001f13a:	f008 f9f3 	bl	90027524 <__cxa_guard_acquire>
9001f13e:	b138      	cbz	r0, 9001f150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f140:	4620      	mov	r0, r4
9001f142:	f008 f9fb 	bl	9002753c <__cxa_guard_release>
9001f146:	4a06      	ldr	r2, [pc, #24]	; (9001f160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f148:	4909      	ldr	r1, [pc, #36]	; (9001f170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001f14a:	480a      	ldr	r0, [pc, #40]	; (9001f174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f14c:	f008 f9e3 	bl	90027516 <__aeabi_atexit>
9001f150:	4b05      	ldr	r3, [pc, #20]	; (9001f168 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f152:	612b      	str	r3, [r5, #16]
9001f154:	4b07      	ldr	r3, [pc, #28]	; (9001f174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f156:	616b      	str	r3, [r5, #20]
9001f158:	bd38      	pop	{r3, r4, r5, pc}
9001f15a:	bf00      	nop
9001f15c:	240397e4 	.word	0x240397e4
9001f160:	24000000 	.word	0x24000000
9001f164:	9001beeb 	.word	0x9001beeb
9001f168:	240000cc 	.word	0x240000cc
9001f16c:	240397e8 	.word	0x240397e8
9001f170:	9001bee9 	.word	0x9001bee9
9001f174:	240000d0 	.word	0x240000d0

9001f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001f178:	b538      	push	{r3, r4, r5, lr}
9001f17a:	4c15      	ldr	r4, [pc, #84]	; (9001f1d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001f17c:	4605      	mov	r5, r0
9001f17e:	7823      	ldrb	r3, [r4, #0]
9001f180:	f3bf 8f5b 	dmb	ish
9001f184:	07da      	lsls	r2, r3, #31
9001f186:	d40b      	bmi.n	9001f1a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f188:	4620      	mov	r0, r4
9001f18a:	f008 f9cb 	bl	90027524 <__cxa_guard_acquire>
9001f18e:	b138      	cbz	r0, 9001f1a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f190:	4620      	mov	r0, r4
9001f192:	f008 f9d3 	bl	9002753c <__cxa_guard_release>
9001f196:	4a0f      	ldr	r2, [pc, #60]	; (9001f1d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f198:	490f      	ldr	r1, [pc, #60]	; (9001f1d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001f19a:	4810      	ldr	r0, [pc, #64]	; (9001f1dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f19c:	f008 f9bb 	bl	90027516 <__aeabi_atexit>
9001f1a0:	4c0f      	ldr	r4, [pc, #60]	; (9001f1e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001f1a2:	7823      	ldrb	r3, [r4, #0]
9001f1a4:	f3bf 8f5b 	dmb	ish
9001f1a8:	07db      	lsls	r3, r3, #31
9001f1aa:	d40b      	bmi.n	9001f1c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f1ac:	4620      	mov	r0, r4
9001f1ae:	f008 f9b9 	bl	90027524 <__cxa_guard_acquire>
9001f1b2:	b138      	cbz	r0, 9001f1c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f1b4:	4620      	mov	r0, r4
9001f1b6:	f008 f9c1 	bl	9002753c <__cxa_guard_release>
9001f1ba:	4a06      	ldr	r2, [pc, #24]	; (9001f1d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f1bc:	4909      	ldr	r1, [pc, #36]	; (9001f1e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001f1be:	480a      	ldr	r0, [pc, #40]	; (9001f1e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f1c0:	f008 f9a9 	bl	90027516 <__aeabi_atexit>
9001f1c4:	4b05      	ldr	r3, [pc, #20]	; (9001f1dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f1c6:	60ab      	str	r3, [r5, #8]
9001f1c8:	4b07      	ldr	r3, [pc, #28]	; (9001f1e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f1ca:	60eb      	str	r3, [r5, #12]
9001f1cc:	bd38      	pop	{r3, r4, r5, pc}
9001f1ce:	bf00      	nop
9001f1d0:	240397bc 	.word	0x240397bc
9001f1d4:	24000000 	.word	0x24000000
9001f1d8:	9001beef 	.word	0x9001beef
9001f1dc:	240000a4 	.word	0x240000a4
9001f1e0:	240397c0 	.word	0x240397c0
9001f1e4:	9001beed 	.word	0x9001beed
9001f1e8:	240000a8 	.word	0x240000a8

9001f1ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001f1ec:	b510      	push	{r4, lr}
9001f1ee:	4604      	mov	r4, r0
9001f1f0:	f7ff ff88 	bl	9001f104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001f1f4:	4620      	mov	r0, r4
9001f1f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f1fa:	f7ff bfbd 	b.w	9001f178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001f200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001f200:	b538      	push	{r3, r4, r5, lr}
9001f202:	4c15      	ldr	r4, [pc, #84]	; (9001f258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001f204:	4605      	mov	r5, r0
9001f206:	7823      	ldrb	r3, [r4, #0]
9001f208:	f3bf 8f5b 	dmb	ish
9001f20c:	07da      	lsls	r2, r3, #31
9001f20e:	d40b      	bmi.n	9001f228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f210:	4620      	mov	r0, r4
9001f212:	f008 f987 	bl	90027524 <__cxa_guard_acquire>
9001f216:	b138      	cbz	r0, 9001f228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f218:	4620      	mov	r0, r4
9001f21a:	f008 f98f 	bl	9002753c <__cxa_guard_release>
9001f21e:	4a0f      	ldr	r2, [pc, #60]	; (9001f25c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f220:	490f      	ldr	r1, [pc, #60]	; (9001f260 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001f222:	4810      	ldr	r0, [pc, #64]	; (9001f264 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f224:	f008 f977 	bl	90027516 <__aeabi_atexit>
9001f228:	4c0f      	ldr	r4, [pc, #60]	; (9001f268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001f22a:	7823      	ldrb	r3, [r4, #0]
9001f22c:	f3bf 8f5b 	dmb	ish
9001f230:	07db      	lsls	r3, r3, #31
9001f232:	d40b      	bmi.n	9001f24c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f234:	4620      	mov	r0, r4
9001f236:	f008 f975 	bl	90027524 <__cxa_guard_acquire>
9001f23a:	b138      	cbz	r0, 9001f24c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f23c:	4620      	mov	r0, r4
9001f23e:	f008 f97d 	bl	9002753c <__cxa_guard_release>
9001f242:	4a06      	ldr	r2, [pc, #24]	; (9001f25c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f244:	4909      	ldr	r1, [pc, #36]	; (9001f26c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001f246:	480a      	ldr	r0, [pc, #40]	; (9001f270 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f248:	f008 f965 	bl	90027516 <__aeabi_atexit>
9001f24c:	4b05      	ldr	r3, [pc, #20]	; (9001f264 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f24e:	622b      	str	r3, [r5, #32]
9001f250:	4b07      	ldr	r3, [pc, #28]	; (9001f270 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f252:	626b      	str	r3, [r5, #36]	; 0x24
9001f254:	bd38      	pop	{r3, r4, r5, pc}
9001f256:	bf00      	nop
9001f258:	240397ec 	.word	0x240397ec
9001f25c:	24000000 	.word	0x24000000
9001f260:	9001bee3 	.word	0x9001bee3
9001f264:	240000d4 	.word	0x240000d4
9001f268:	240397f0 	.word	0x240397f0
9001f26c:	9001bee1 	.word	0x9001bee1
9001f270:	240000d8 	.word	0x240000d8

9001f274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001f274:	b538      	push	{r3, r4, r5, lr}
9001f276:	4c15      	ldr	r4, [pc, #84]	; (9001f2cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001f278:	4605      	mov	r5, r0
9001f27a:	7823      	ldrb	r3, [r4, #0]
9001f27c:	f3bf 8f5b 	dmb	ish
9001f280:	07da      	lsls	r2, r3, #31
9001f282:	d40b      	bmi.n	9001f29c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f284:	4620      	mov	r0, r4
9001f286:	f008 f94d 	bl	90027524 <__cxa_guard_acquire>
9001f28a:	b138      	cbz	r0, 9001f29c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f28c:	4620      	mov	r0, r4
9001f28e:	f008 f955 	bl	9002753c <__cxa_guard_release>
9001f292:	4a0f      	ldr	r2, [pc, #60]	; (9001f2d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f294:	490f      	ldr	r1, [pc, #60]	; (9001f2d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001f296:	4810      	ldr	r0, [pc, #64]	; (9001f2d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f298:	f008 f93d 	bl	90027516 <__aeabi_atexit>
9001f29c:	4c0f      	ldr	r4, [pc, #60]	; (9001f2dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001f29e:	7823      	ldrb	r3, [r4, #0]
9001f2a0:	f3bf 8f5b 	dmb	ish
9001f2a4:	07db      	lsls	r3, r3, #31
9001f2a6:	d40b      	bmi.n	9001f2c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f2a8:	4620      	mov	r0, r4
9001f2aa:	f008 f93b 	bl	90027524 <__cxa_guard_acquire>
9001f2ae:	b138      	cbz	r0, 9001f2c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f2b0:	4620      	mov	r0, r4
9001f2b2:	f008 f943 	bl	9002753c <__cxa_guard_release>
9001f2b6:	4a06      	ldr	r2, [pc, #24]	; (9001f2d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f2b8:	4909      	ldr	r1, [pc, #36]	; (9001f2e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001f2ba:	480a      	ldr	r0, [pc, #40]	; (9001f2e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f2bc:	f008 f92b 	bl	90027516 <__aeabi_atexit>
9001f2c0:	4b05      	ldr	r3, [pc, #20]	; (9001f2d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f2c2:	61ab      	str	r3, [r5, #24]
9001f2c4:	4b07      	ldr	r3, [pc, #28]	; (9001f2e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f2c6:	61eb      	str	r3, [r5, #28]
9001f2c8:	bd38      	pop	{r3, r4, r5, pc}
9001f2ca:	bf00      	nop
9001f2cc:	240397c4 	.word	0x240397c4
9001f2d0:	24000000 	.word	0x24000000
9001f2d4:	9001bee7 	.word	0x9001bee7
9001f2d8:	240000ac 	.word	0x240000ac
9001f2dc:	240397c8 	.word	0x240397c8
9001f2e0:	9001bee5 	.word	0x9001bee5
9001f2e4:	240000b0 	.word	0x240000b0

9001f2e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001f2e8:	b510      	push	{r4, lr}
9001f2ea:	4604      	mov	r4, r0
9001f2ec:	f7ff ff88 	bl	9001f200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001f2f0:	4620      	mov	r0, r4
9001f2f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f2f6:	f7ff bfbd 	b.w	9001f274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001f2fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001f2fc:	b538      	push	{r3, r4, r5, lr}
9001f2fe:	4c15      	ldr	r4, [pc, #84]	; (9001f354 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001f300:	4605      	mov	r5, r0
9001f302:	7823      	ldrb	r3, [r4, #0]
9001f304:	f3bf 8f5b 	dmb	ish
9001f308:	07da      	lsls	r2, r3, #31
9001f30a:	d40b      	bmi.n	9001f324 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f30c:	4620      	mov	r0, r4
9001f30e:	f008 f909 	bl	90027524 <__cxa_guard_acquire>
9001f312:	b138      	cbz	r0, 9001f324 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f314:	4620      	mov	r0, r4
9001f316:	f008 f911 	bl	9002753c <__cxa_guard_release>
9001f31a:	4a0f      	ldr	r2, [pc, #60]	; (9001f358 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f31c:	490f      	ldr	r1, [pc, #60]	; (9001f35c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001f31e:	4810      	ldr	r0, [pc, #64]	; (9001f360 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f320:	f008 f8f9 	bl	90027516 <__aeabi_atexit>
9001f324:	4c0f      	ldr	r4, [pc, #60]	; (9001f364 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001f326:	7823      	ldrb	r3, [r4, #0]
9001f328:	f3bf 8f5b 	dmb	ish
9001f32c:	07db      	lsls	r3, r3, #31
9001f32e:	d40b      	bmi.n	9001f348 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f330:	4620      	mov	r0, r4
9001f332:	f008 f8f7 	bl	90027524 <__cxa_guard_acquire>
9001f336:	b138      	cbz	r0, 9001f348 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f338:	4620      	mov	r0, r4
9001f33a:	f008 f8ff 	bl	9002753c <__cxa_guard_release>
9001f33e:	4a06      	ldr	r2, [pc, #24]	; (9001f358 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f340:	4909      	ldr	r1, [pc, #36]	; (9001f368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001f342:	480a      	ldr	r0, [pc, #40]	; (9001f36c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f344:	f008 f8e7 	bl	90027516 <__aeabi_atexit>
9001f348:	4b05      	ldr	r3, [pc, #20]	; (9001f360 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f34a:	632b      	str	r3, [r5, #48]	; 0x30
9001f34c:	4b07      	ldr	r3, [pc, #28]	; (9001f36c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f34e:	636b      	str	r3, [r5, #52]	; 0x34
9001f350:	bd38      	pop	{r3, r4, r5, pc}
9001f352:	bf00      	nop
9001f354:	240397fc 	.word	0x240397fc
9001f358:	24000000 	.word	0x24000000
9001f35c:	9001bedb 	.word	0x9001bedb
9001f360:	240000e4 	.word	0x240000e4
9001f364:	24039800 	.word	0x24039800
9001f368:	9001bed9 	.word	0x9001bed9
9001f36c:	240000e8 	.word	0x240000e8

9001f370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001f370:	b538      	push	{r3, r4, r5, lr}
9001f372:	4c15      	ldr	r4, [pc, #84]	; (9001f3c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001f374:	4605      	mov	r5, r0
9001f376:	7823      	ldrb	r3, [r4, #0]
9001f378:	f3bf 8f5b 	dmb	ish
9001f37c:	07da      	lsls	r2, r3, #31
9001f37e:	d40b      	bmi.n	9001f398 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f380:	4620      	mov	r0, r4
9001f382:	f008 f8cf 	bl	90027524 <__cxa_guard_acquire>
9001f386:	b138      	cbz	r0, 9001f398 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f388:	4620      	mov	r0, r4
9001f38a:	f008 f8d7 	bl	9002753c <__cxa_guard_release>
9001f38e:	4a0f      	ldr	r2, [pc, #60]	; (9001f3cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f390:	490f      	ldr	r1, [pc, #60]	; (9001f3d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001f392:	4810      	ldr	r0, [pc, #64]	; (9001f3d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f394:	f008 f8bf 	bl	90027516 <__aeabi_atexit>
9001f398:	4c0f      	ldr	r4, [pc, #60]	; (9001f3d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001f39a:	7823      	ldrb	r3, [r4, #0]
9001f39c:	f3bf 8f5b 	dmb	ish
9001f3a0:	07db      	lsls	r3, r3, #31
9001f3a2:	d40b      	bmi.n	9001f3bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f3a4:	4620      	mov	r0, r4
9001f3a6:	f008 f8bd 	bl	90027524 <__cxa_guard_acquire>
9001f3aa:	b138      	cbz	r0, 9001f3bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f3ac:	4620      	mov	r0, r4
9001f3ae:	f008 f8c5 	bl	9002753c <__cxa_guard_release>
9001f3b2:	4a06      	ldr	r2, [pc, #24]	; (9001f3cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f3b4:	4909      	ldr	r1, [pc, #36]	; (9001f3dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001f3b6:	480a      	ldr	r0, [pc, #40]	; (9001f3e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f3b8:	f008 f8ad 	bl	90027516 <__aeabi_atexit>
9001f3bc:	4b05      	ldr	r3, [pc, #20]	; (9001f3d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f3be:	62ab      	str	r3, [r5, #40]	; 0x28
9001f3c0:	4b07      	ldr	r3, [pc, #28]	; (9001f3e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f3c2:	62eb      	str	r3, [r5, #44]	; 0x2c
9001f3c4:	bd38      	pop	{r3, r4, r5, pc}
9001f3c6:	bf00      	nop
9001f3c8:	240397cc 	.word	0x240397cc
9001f3cc:	24000000 	.word	0x24000000
9001f3d0:	9001bedf 	.word	0x9001bedf
9001f3d4:	240000b4 	.word	0x240000b4
9001f3d8:	240397d0 	.word	0x240397d0
9001f3dc:	9001bedd 	.word	0x9001bedd
9001f3e0:	240000b8 	.word	0x240000b8

9001f3e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001f3e4:	b510      	push	{r4, lr}
9001f3e6:	4604      	mov	r4, r0
9001f3e8:	f7ff ff88 	bl	9001f2fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001f3ec:	4620      	mov	r0, r4
9001f3ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f3f2:	f7ff bfbd 	b.w	9001f370 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001f3f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001f3f8:	b538      	push	{r3, r4, r5, lr}
9001f3fa:	4c15      	ldr	r4, [pc, #84]	; (9001f450 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001f3fc:	4605      	mov	r5, r0
9001f3fe:	7823      	ldrb	r3, [r4, #0]
9001f400:	f3bf 8f5b 	dmb	ish
9001f404:	07da      	lsls	r2, r3, #31
9001f406:	d40b      	bmi.n	9001f420 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f408:	4620      	mov	r0, r4
9001f40a:	f008 f88b 	bl	90027524 <__cxa_guard_acquire>
9001f40e:	b138      	cbz	r0, 9001f420 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001f410:	4620      	mov	r0, r4
9001f412:	f008 f893 	bl	9002753c <__cxa_guard_release>
9001f416:	4a0f      	ldr	r2, [pc, #60]	; (9001f454 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f418:	490f      	ldr	r1, [pc, #60]	; (9001f458 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001f41a:	4810      	ldr	r0, [pc, #64]	; (9001f45c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f41c:	f008 f87b 	bl	90027516 <__aeabi_atexit>
9001f420:	4c0f      	ldr	r4, [pc, #60]	; (9001f460 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001f422:	7823      	ldrb	r3, [r4, #0]
9001f424:	f3bf 8f5b 	dmb	ish
9001f428:	07db      	lsls	r3, r3, #31
9001f42a:	d40b      	bmi.n	9001f444 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f42c:	4620      	mov	r0, r4
9001f42e:	f008 f879 	bl	90027524 <__cxa_guard_acquire>
9001f432:	b138      	cbz	r0, 9001f444 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001f434:	4620      	mov	r0, r4
9001f436:	f008 f881 	bl	9002753c <__cxa_guard_release>
9001f43a:	4a06      	ldr	r2, [pc, #24]	; (9001f454 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001f43c:	4909      	ldr	r1, [pc, #36]	; (9001f464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001f43e:	480a      	ldr	r0, [pc, #40]	; (9001f468 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f440:	f008 f869 	bl	90027516 <__aeabi_atexit>
9001f444:	4b05      	ldr	r3, [pc, #20]	; (9001f45c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001f446:	652b      	str	r3, [r5, #80]	; 0x50
9001f448:	4b07      	ldr	r3, [pc, #28]	; (9001f468 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001f44a:	656b      	str	r3, [r5, #84]	; 0x54
9001f44c:	bd38      	pop	{r3, r4, r5, pc}
9001f44e:	bf00      	nop
9001f450:	24039804 	.word	0x24039804
9001f454:	24000000 	.word	0x24000000
9001f458:	9001becb 	.word	0x9001becb
9001f45c:	240000ec 	.word	0x240000ec
9001f460:	24039808 	.word	0x24039808
9001f464:	9001bec9 	.word	0x9001bec9
9001f468:	240000f0 	.word	0x240000f0

9001f46c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001f46c:	b538      	push	{r3, r4, r5, lr}
9001f46e:	4c15      	ldr	r4, [pc, #84]	; (9001f4c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001f470:	4605      	mov	r5, r0
9001f472:	7823      	ldrb	r3, [r4, #0]
9001f474:	f3bf 8f5b 	dmb	ish
9001f478:	07da      	lsls	r2, r3, #31
9001f47a:	d40b      	bmi.n	9001f494 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f47c:	4620      	mov	r0, r4
9001f47e:	f008 f851 	bl	90027524 <__cxa_guard_acquire>
9001f482:	b138      	cbz	r0, 9001f494 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001f484:	4620      	mov	r0, r4
9001f486:	f008 f859 	bl	9002753c <__cxa_guard_release>
9001f48a:	4a0f      	ldr	r2, [pc, #60]	; (9001f4c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f48c:	490f      	ldr	r1, [pc, #60]	; (9001f4cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001f48e:	4810      	ldr	r0, [pc, #64]	; (9001f4d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f490:	f008 f841 	bl	90027516 <__aeabi_atexit>
9001f494:	4c0f      	ldr	r4, [pc, #60]	; (9001f4d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001f496:	7823      	ldrb	r3, [r4, #0]
9001f498:	f3bf 8f5b 	dmb	ish
9001f49c:	07db      	lsls	r3, r3, #31
9001f49e:	d40b      	bmi.n	9001f4b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f4a0:	4620      	mov	r0, r4
9001f4a2:	f008 f83f 	bl	90027524 <__cxa_guard_acquire>
9001f4a6:	b138      	cbz	r0, 9001f4b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001f4a8:	4620      	mov	r0, r4
9001f4aa:	f008 f847 	bl	9002753c <__cxa_guard_release>
9001f4ae:	4a06      	ldr	r2, [pc, #24]	; (9001f4c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001f4b0:	4909      	ldr	r1, [pc, #36]	; (9001f4d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001f4b2:	480a      	ldr	r0, [pc, #40]	; (9001f4dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f4b4:	f008 f82f 	bl	90027516 <__aeabi_atexit>
9001f4b8:	4b05      	ldr	r3, [pc, #20]	; (9001f4d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001f4ba:	64ab      	str	r3, [r5, #72]	; 0x48
9001f4bc:	4b07      	ldr	r3, [pc, #28]	; (9001f4dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001f4be:	64eb      	str	r3, [r5, #76]	; 0x4c
9001f4c0:	bd38      	pop	{r3, r4, r5, pc}
9001f4c2:	bf00      	nop
9001f4c4:	2403980c 	.word	0x2403980c
9001f4c8:	24000000 	.word	0x24000000
9001f4cc:	9001becf 	.word	0x9001becf
9001f4d0:	240000f4 	.word	0x240000f4
9001f4d4:	24039810 	.word	0x24039810
9001f4d8:	9001becd 	.word	0x9001becd
9001f4dc:	240000f8 	.word	0x240000f8

9001f4e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001f4e0:	b538      	push	{r3, r4, r5, lr}
9001f4e2:	4c15      	ldr	r4, [pc, #84]	; (9001f538 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001f4e4:	4605      	mov	r5, r0
9001f4e6:	7823      	ldrb	r3, [r4, #0]
9001f4e8:	f3bf 8f5b 	dmb	ish
9001f4ec:	07da      	lsls	r2, r3, #31
9001f4ee:	d40b      	bmi.n	9001f508 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f4f0:	4620      	mov	r0, r4
9001f4f2:	f008 f817 	bl	90027524 <__cxa_guard_acquire>
9001f4f6:	b138      	cbz	r0, 9001f508 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001f4f8:	4620      	mov	r0, r4
9001f4fa:	f008 f81f 	bl	9002753c <__cxa_guard_release>
9001f4fe:	4a0f      	ldr	r2, [pc, #60]	; (9001f53c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f500:	490f      	ldr	r1, [pc, #60]	; (9001f540 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001f502:	4810      	ldr	r0, [pc, #64]	; (9001f544 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f504:	f008 f807 	bl	90027516 <__aeabi_atexit>
9001f508:	4c0f      	ldr	r4, [pc, #60]	; (9001f548 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001f50a:	7823      	ldrb	r3, [r4, #0]
9001f50c:	f3bf 8f5b 	dmb	ish
9001f510:	07db      	lsls	r3, r3, #31
9001f512:	d40b      	bmi.n	9001f52c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f514:	4620      	mov	r0, r4
9001f516:	f008 f805 	bl	90027524 <__cxa_guard_acquire>
9001f51a:	b138      	cbz	r0, 9001f52c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001f51c:	4620      	mov	r0, r4
9001f51e:	f008 f80d 	bl	9002753c <__cxa_guard_release>
9001f522:	4a06      	ldr	r2, [pc, #24]	; (9001f53c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001f524:	4909      	ldr	r1, [pc, #36]	; (9001f54c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001f526:	480a      	ldr	r0, [pc, #40]	; (9001f550 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f528:	f007 fff5 	bl	90027516 <__aeabi_atexit>
9001f52c:	4b05      	ldr	r3, [pc, #20]	; (9001f544 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001f52e:	642b      	str	r3, [r5, #64]	; 0x40
9001f530:	4b07      	ldr	r3, [pc, #28]	; (9001f550 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001f532:	646b      	str	r3, [r5, #68]	; 0x44
9001f534:	bd38      	pop	{r3, r4, r5, pc}
9001f536:	bf00      	nop
9001f538:	240397d4 	.word	0x240397d4
9001f53c:	24000000 	.word	0x24000000
9001f540:	9001bed3 	.word	0x9001bed3
9001f544:	240000bc 	.word	0x240000bc
9001f548:	240397d8 	.word	0x240397d8
9001f54c:	9001bed1 	.word	0x9001bed1
9001f550:	240000c0 	.word	0x240000c0

9001f554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001f554:	b538      	push	{r3, r4, r5, lr}
9001f556:	4c15      	ldr	r4, [pc, #84]	; (9001f5ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001f558:	4605      	mov	r5, r0
9001f55a:	7823      	ldrb	r3, [r4, #0]
9001f55c:	f3bf 8f5b 	dmb	ish
9001f560:	07da      	lsls	r2, r3, #31
9001f562:	d40b      	bmi.n	9001f57c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f564:	4620      	mov	r0, r4
9001f566:	f007 ffdd 	bl	90027524 <__cxa_guard_acquire>
9001f56a:	b138      	cbz	r0, 9001f57c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001f56c:	4620      	mov	r0, r4
9001f56e:	f007 ffe5 	bl	9002753c <__cxa_guard_release>
9001f572:	4a0f      	ldr	r2, [pc, #60]	; (9001f5b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f574:	490f      	ldr	r1, [pc, #60]	; (9001f5b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001f576:	4810      	ldr	r0, [pc, #64]	; (9001f5b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f578:	f007 ffcd 	bl	90027516 <__aeabi_atexit>
9001f57c:	4c0f      	ldr	r4, [pc, #60]	; (9001f5bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001f57e:	7823      	ldrb	r3, [r4, #0]
9001f580:	f3bf 8f5b 	dmb	ish
9001f584:	07db      	lsls	r3, r3, #31
9001f586:	d40b      	bmi.n	9001f5a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f588:	4620      	mov	r0, r4
9001f58a:	f007 ffcb 	bl	90027524 <__cxa_guard_acquire>
9001f58e:	b138      	cbz	r0, 9001f5a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001f590:	4620      	mov	r0, r4
9001f592:	f007 ffd3 	bl	9002753c <__cxa_guard_release>
9001f596:	4a06      	ldr	r2, [pc, #24]	; (9001f5b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001f598:	4909      	ldr	r1, [pc, #36]	; (9001f5c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001f59a:	480a      	ldr	r0, [pc, #40]	; (9001f5c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f59c:	f007 ffbb 	bl	90027516 <__aeabi_atexit>
9001f5a0:	4b05      	ldr	r3, [pc, #20]	; (9001f5b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001f5a2:	63ab      	str	r3, [r5, #56]	; 0x38
9001f5a4:	4b07      	ldr	r3, [pc, #28]	; (9001f5c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001f5a6:	63eb      	str	r3, [r5, #60]	; 0x3c
9001f5a8:	bd38      	pop	{r3, r4, r5, pc}
9001f5aa:	bf00      	nop
9001f5ac:	240397f4 	.word	0x240397f4
9001f5b0:	24000000 	.word	0x24000000
9001f5b4:	9001bed7 	.word	0x9001bed7
9001f5b8:	240000dc 	.word	0x240000dc
9001f5bc:	240397f8 	.word	0x240397f8
9001f5c0:	9001bed5 	.word	0x9001bed5
9001f5c4:	240000e0 	.word	0x240000e0

9001f5c8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001f5c8:	b510      	push	{r4, lr}
9001f5ca:	4604      	mov	r4, r0
9001f5cc:	f7ff ff14 	bl	9001f3f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001f5d0:	4620      	mov	r0, r4
9001f5d2:	f7ff ff85 	bl	9001f4e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001f5d6:	4620      	mov	r0, r4
9001f5d8:	f7ff ff48 	bl	9001f46c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001f5dc:	4620      	mov	r0, r4
9001f5de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f5e2:	f7ff bfb7 	b.w	9001f554 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001f5e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001f5e8:	b538      	push	{r3, r4, r5, lr}
9001f5ea:	4c15      	ldr	r4, [pc, #84]	; (9001f640 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001f5ec:	4605      	mov	r5, r0
9001f5ee:	7823      	ldrb	r3, [r4, #0]
9001f5f0:	f3bf 8f5b 	dmb	ish
9001f5f4:	07da      	lsls	r2, r3, #31
9001f5f6:	d40b      	bmi.n	9001f610 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f5f8:	4620      	mov	r0, r4
9001f5fa:	f007 ff93 	bl	90027524 <__cxa_guard_acquire>
9001f5fe:	b138      	cbz	r0, 9001f610 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001f600:	4620      	mov	r0, r4
9001f602:	f007 ff9b 	bl	9002753c <__cxa_guard_release>
9001f606:	4a0f      	ldr	r2, [pc, #60]	; (9001f644 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f608:	490f      	ldr	r1, [pc, #60]	; (9001f648 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001f60a:	4810      	ldr	r0, [pc, #64]	; (9001f64c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f60c:	f007 ff83 	bl	90027516 <__aeabi_atexit>
9001f610:	4c0f      	ldr	r4, [pc, #60]	; (9001f650 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001f612:	7823      	ldrb	r3, [r4, #0]
9001f614:	f3bf 8f5b 	dmb	ish
9001f618:	07db      	lsls	r3, r3, #31
9001f61a:	d40b      	bmi.n	9001f634 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f61c:	4620      	mov	r0, r4
9001f61e:	f007 ff81 	bl	90027524 <__cxa_guard_acquire>
9001f622:	b138      	cbz	r0, 9001f634 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001f624:	4620      	mov	r0, r4
9001f626:	f007 ff89 	bl	9002753c <__cxa_guard_release>
9001f62a:	4a06      	ldr	r2, [pc, #24]	; (9001f644 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001f62c:	4909      	ldr	r1, [pc, #36]	; (9001f654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001f62e:	480a      	ldr	r0, [pc, #40]	; (9001f658 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f630:	f007 ff71 	bl	90027516 <__aeabi_atexit>
9001f634:	4b05      	ldr	r3, [pc, #20]	; (9001f64c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001f636:	662b      	str	r3, [r5, #96]	; 0x60
9001f638:	4b07      	ldr	r3, [pc, #28]	; (9001f658 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001f63a:	666b      	str	r3, [r5, #100]	; 0x64
9001f63c:	bd38      	pop	{r3, r4, r5, pc}
9001f63e:	bf00      	nop
9001f640:	240397dc 	.word	0x240397dc
9001f644:	24000000 	.word	0x24000000
9001f648:	9001bec3 	.word	0x9001bec3
9001f64c:	240000c4 	.word	0x240000c4
9001f650:	240397e0 	.word	0x240397e0
9001f654:	9001bec1 	.word	0x9001bec1
9001f658:	240000c8 	.word	0x240000c8

9001f65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001f65c:	b538      	push	{r3, r4, r5, lr}
9001f65e:	4c15      	ldr	r4, [pc, #84]	; (9001f6b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001f660:	4605      	mov	r5, r0
9001f662:	7823      	ldrb	r3, [r4, #0]
9001f664:	f3bf 8f5b 	dmb	ish
9001f668:	07da      	lsls	r2, r3, #31
9001f66a:	d40b      	bmi.n	9001f684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f66c:	4620      	mov	r0, r4
9001f66e:	f007 ff59 	bl	90027524 <__cxa_guard_acquire>
9001f672:	b138      	cbz	r0, 9001f684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001f674:	4620      	mov	r0, r4
9001f676:	f007 ff61 	bl	9002753c <__cxa_guard_release>
9001f67a:	4a0f      	ldr	r2, [pc, #60]	; (9001f6b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f67c:	490f      	ldr	r1, [pc, #60]	; (9001f6bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001f67e:	4810      	ldr	r0, [pc, #64]	; (9001f6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f680:	f007 ff49 	bl	90027516 <__aeabi_atexit>
9001f684:	4c0f      	ldr	r4, [pc, #60]	; (9001f6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001f686:	7823      	ldrb	r3, [r4, #0]
9001f688:	f3bf 8f5b 	dmb	ish
9001f68c:	07db      	lsls	r3, r3, #31
9001f68e:	d40b      	bmi.n	9001f6a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f690:	4620      	mov	r0, r4
9001f692:	f007 ff47 	bl	90027524 <__cxa_guard_acquire>
9001f696:	b138      	cbz	r0, 9001f6a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001f698:	4620      	mov	r0, r4
9001f69a:	f007 ff4f 	bl	9002753c <__cxa_guard_release>
9001f69e:	4a06      	ldr	r2, [pc, #24]	; (9001f6b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001f6a0:	4909      	ldr	r1, [pc, #36]	; (9001f6c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001f6a2:	480a      	ldr	r0, [pc, #40]	; (9001f6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f6a4:	f007 ff37 	bl	90027516 <__aeabi_atexit>
9001f6a8:	4b05      	ldr	r3, [pc, #20]	; (9001f6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001f6aa:	65ab      	str	r3, [r5, #88]	; 0x58
9001f6ac:	4b07      	ldr	r3, [pc, #28]	; (9001f6cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001f6ae:	65eb      	str	r3, [r5, #92]	; 0x5c
9001f6b0:	bd38      	pop	{r3, r4, r5, pc}
9001f6b2:	bf00      	nop
9001f6b4:	240397b4 	.word	0x240397b4
9001f6b8:	24000000 	.word	0x24000000
9001f6bc:	9001bec7 	.word	0x9001bec7
9001f6c0:	2400009c 	.word	0x2400009c
9001f6c4:	240397b8 	.word	0x240397b8
9001f6c8:	9001bec5 	.word	0x9001bec5
9001f6cc:	240000a0 	.word	0x240000a0

9001f6d0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001f6d0:	b510      	push	{r4, lr}
9001f6d2:	4604      	mov	r4, r0
9001f6d4:	f7ff ff88 	bl	9001f5e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001f6d8:	4620      	mov	r0, r4
9001f6da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f6de:	f7ff bfbd 	b.w	9001f65c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001f6e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001f6e4:	b538      	push	{r3, r4, r5, lr}
9001f6e6:	4c15      	ldr	r4, [pc, #84]	; (9001f73c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001f6e8:	4605      	mov	r5, r0
9001f6ea:	7823      	ldrb	r3, [r4, #0]
9001f6ec:	f3bf 8f5b 	dmb	ish
9001f6f0:	07da      	lsls	r2, r3, #31
9001f6f2:	d40b      	bmi.n	9001f70c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f6f4:	4620      	mov	r0, r4
9001f6f6:	f007 ff15 	bl	90027524 <__cxa_guard_acquire>
9001f6fa:	b138      	cbz	r0, 9001f70c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001f6fc:	4620      	mov	r0, r4
9001f6fe:	f007 ff1d 	bl	9002753c <__cxa_guard_release>
9001f702:	4a0f      	ldr	r2, [pc, #60]	; (9001f740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f704:	490f      	ldr	r1, [pc, #60]	; (9001f744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001f706:	4810      	ldr	r0, [pc, #64]	; (9001f748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f708:	f007 ff05 	bl	90027516 <__aeabi_atexit>
9001f70c:	4c0f      	ldr	r4, [pc, #60]	; (9001f74c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001f70e:	7823      	ldrb	r3, [r4, #0]
9001f710:	f3bf 8f5b 	dmb	ish
9001f714:	07db      	lsls	r3, r3, #31
9001f716:	d40b      	bmi.n	9001f730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f718:	4620      	mov	r0, r4
9001f71a:	f007 ff03 	bl	90027524 <__cxa_guard_acquire>
9001f71e:	b138      	cbz	r0, 9001f730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001f720:	4620      	mov	r0, r4
9001f722:	f007 ff0b 	bl	9002753c <__cxa_guard_release>
9001f726:	4a06      	ldr	r2, [pc, #24]	; (9001f740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001f728:	4909      	ldr	r1, [pc, #36]	; (9001f750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001f72a:	480a      	ldr	r0, [pc, #40]	; (9001f754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f72c:	f007 fef3 	bl	90027516 <__aeabi_atexit>
9001f730:	4b05      	ldr	r3, [pc, #20]	; (9001f748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001f732:	672b      	str	r3, [r5, #112]	; 0x70
9001f734:	4b07      	ldr	r3, [pc, #28]	; (9001f754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001f736:	676b      	str	r3, [r5, #116]	; 0x74
9001f738:	bd38      	pop	{r3, r4, r5, pc}
9001f73a:	bf00      	nop
9001f73c:	240397ac 	.word	0x240397ac
9001f740:	24000000 	.word	0x24000000
9001f744:	9001bebb 	.word	0x9001bebb
9001f748:	24000094 	.word	0x24000094
9001f74c:	240397b0 	.word	0x240397b0
9001f750:	9001beb9 	.word	0x9001beb9
9001f754:	24000098 	.word	0x24000098

9001f758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001f758:	b538      	push	{r3, r4, r5, lr}
9001f75a:	4c15      	ldr	r4, [pc, #84]	; (9001f7b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001f75c:	4605      	mov	r5, r0
9001f75e:	7823      	ldrb	r3, [r4, #0]
9001f760:	f3bf 8f5b 	dmb	ish
9001f764:	07da      	lsls	r2, r3, #31
9001f766:	d40b      	bmi.n	9001f780 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f768:	4620      	mov	r0, r4
9001f76a:	f007 fedb 	bl	90027524 <__cxa_guard_acquire>
9001f76e:	b138      	cbz	r0, 9001f780 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001f770:	4620      	mov	r0, r4
9001f772:	f007 fee3 	bl	9002753c <__cxa_guard_release>
9001f776:	4a0f      	ldr	r2, [pc, #60]	; (9001f7b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f778:	490f      	ldr	r1, [pc, #60]	; (9001f7b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001f77a:	4810      	ldr	r0, [pc, #64]	; (9001f7bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f77c:	f007 fecb 	bl	90027516 <__aeabi_atexit>
9001f780:	4c0f      	ldr	r4, [pc, #60]	; (9001f7c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001f782:	7823      	ldrb	r3, [r4, #0]
9001f784:	f3bf 8f5b 	dmb	ish
9001f788:	07db      	lsls	r3, r3, #31
9001f78a:	d40b      	bmi.n	9001f7a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f78c:	4620      	mov	r0, r4
9001f78e:	f007 fec9 	bl	90027524 <__cxa_guard_acquire>
9001f792:	b138      	cbz	r0, 9001f7a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001f794:	4620      	mov	r0, r4
9001f796:	f007 fed1 	bl	9002753c <__cxa_guard_release>
9001f79a:	4a06      	ldr	r2, [pc, #24]	; (9001f7b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001f79c:	4909      	ldr	r1, [pc, #36]	; (9001f7c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001f79e:	480a      	ldr	r0, [pc, #40]	; (9001f7c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f7a0:	f007 feb9 	bl	90027516 <__aeabi_atexit>
9001f7a4:	4b05      	ldr	r3, [pc, #20]	; (9001f7bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001f7a6:	66ab      	str	r3, [r5, #104]	; 0x68
9001f7a8:	4b07      	ldr	r3, [pc, #28]	; (9001f7c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001f7aa:	66eb      	str	r3, [r5, #108]	; 0x6c
9001f7ac:	bd38      	pop	{r3, r4, r5, pc}
9001f7ae:	bf00      	nop
9001f7b0:	240397a4 	.word	0x240397a4
9001f7b4:	24000000 	.word	0x24000000
9001f7b8:	9001bebf 	.word	0x9001bebf
9001f7bc:	2400008c 	.word	0x2400008c
9001f7c0:	240397a8 	.word	0x240397a8
9001f7c4:	9001bebd 	.word	0x9001bebd
9001f7c8:	24000090 	.word	0x24000090

9001f7cc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001f7cc:	b510      	push	{r4, lr}
9001f7ce:	4604      	mov	r4, r0
9001f7d0:	f7ff ff88 	bl	9001f6e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001f7d4:	4620      	mov	r0, r4
9001f7d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f7da:	f7ff bfbd 	b.w	9001f758 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001f7de <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001f7de:	b510      	push	{r4, lr}
9001f7e0:	4604      	mov	r4, r0
9001f7e2:	f7ff fff3 	bl	9001f7cc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001f7e6:	4620      	mov	r0, r4
9001f7e8:	f7ff ff72 	bl	9001f6d0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001f7ec:	4620      	mov	r0, r4
9001f7ee:	f7ff fdf9 	bl	9001f3e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001f7f2:	4620      	mov	r0, r4
9001f7f4:	f7ff fcfa 	bl	9001f1ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001f7f8:	4620      	mov	r0, r4
9001f7fa:	f7ff fd75 	bl	9001f2e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001f7fe:	4620      	mov	r0, r4
9001f800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f804:	f7ff bee0 	b.w	9001f5c8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001f808 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001f808:	b538      	push	{r3, r4, r5, lr}
9001f80a:	4c0b      	ldr	r4, [pc, #44]	; (9001f838 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001f80c:	4605      	mov	r5, r0
9001f80e:	7823      	ldrb	r3, [r4, #0]
9001f810:	f3bf 8f5b 	dmb	ish
9001f814:	07db      	lsls	r3, r3, #31
9001f816:	d40b      	bmi.n	9001f830 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f818:	4620      	mov	r0, r4
9001f81a:	f007 fe83 	bl	90027524 <__cxa_guard_acquire>
9001f81e:	b138      	cbz	r0, 9001f830 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001f820:	4620      	mov	r0, r4
9001f822:	f007 fe8b 	bl	9002753c <__cxa_guard_release>
9001f826:	4a05      	ldr	r2, [pc, #20]	; (9001f83c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001f828:	4905      	ldr	r1, [pc, #20]	; (9001f840 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001f82a:	4806      	ldr	r0, [pc, #24]	; (9001f844 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f82c:	f007 fe73 	bl	90027516 <__aeabi_atexit>
9001f830:	4b04      	ldr	r3, [pc, #16]	; (9001f844 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001f832:	67ab      	str	r3, [r5, #120]	; 0x78
9001f834:	bd38      	pop	{r3, r4, r5, pc}
9001f836:	bf00      	nop
9001f838:	24039798 	.word	0x24039798
9001f83c:	24000000 	.word	0x24000000
9001f840:	9001beb7 	.word	0x9001beb7
9001f844:	24000084 	.word	0x24000084

9001f848 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001f848:	b538      	push	{r3, r4, r5, lr}
9001f84a:	4c0b      	ldr	r4, [pc, #44]	; (9001f878 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001f84c:	4605      	mov	r5, r0
9001f84e:	7823      	ldrb	r3, [r4, #0]
9001f850:	f3bf 8f5b 	dmb	ish
9001f854:	07db      	lsls	r3, r3, #31
9001f856:	d40b      	bmi.n	9001f870 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f858:	4620      	mov	r0, r4
9001f85a:	f007 fe63 	bl	90027524 <__cxa_guard_acquire>
9001f85e:	b138      	cbz	r0, 9001f870 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001f860:	4620      	mov	r0, r4
9001f862:	f007 fe6b 	bl	9002753c <__cxa_guard_release>
9001f866:	4a05      	ldr	r2, [pc, #20]	; (9001f87c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001f868:	4905      	ldr	r1, [pc, #20]	; (9001f880 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001f86a:	4806      	ldr	r0, [pc, #24]	; (9001f884 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001f86c:	f007 fe53 	bl	90027516 <__aeabi_atexit>
9001f870:	4b04      	ldr	r3, [pc, #16]	; (9001f884 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001f872:	67eb      	str	r3, [r5, #124]	; 0x7c
9001f874:	bd38      	pop	{r3, r4, r5, pc}
9001f876:	bf00      	nop
9001f878:	2403979c 	.word	0x2403979c
9001f87c:	24000000 	.word	0x24000000
9001f880:	9001beb5 	.word	0x9001beb5
9001f884:	24000088 	.word	0x24000088

9001f888 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001f888:	b570      	push	{r4, r5, r6, lr}
9001f88a:	4d0d      	ldr	r5, [pc, #52]	; (9001f8c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001f88c:	4606      	mov	r6, r0
9001f88e:	4c0d      	ldr	r4, [pc, #52]	; (9001f8c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001f890:	782b      	ldrb	r3, [r5, #0]
9001f892:	f3bf 8f5b 	dmb	ish
9001f896:	f013 0f01 	tst.w	r3, #1
9001f89a:	d10d      	bne.n	9001f8b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001f89c:	4628      	mov	r0, r5
9001f89e:	f007 fe41 	bl	90027524 <__cxa_guard_acquire>
9001f8a2:	b148      	cbz	r0, 9001f8b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001f8a4:	4b08      	ldr	r3, [pc, #32]	; (9001f8c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001f8a6:	4628      	mov	r0, r5
9001f8a8:	6023      	str	r3, [r4, #0]
9001f8aa:	f007 fe47 	bl	9002753c <__cxa_guard_release>
9001f8ae:	4a07      	ldr	r2, [pc, #28]	; (9001f8cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001f8b0:	4620      	mov	r0, r4
9001f8b2:	4907      	ldr	r1, [pc, #28]	; (9001f8d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001f8b4:	f007 fe2f 	bl	90027516 <__aeabi_atexit>
9001f8b8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
9001f8bc:	bd70      	pop	{r4, r5, r6, pc}
9001f8be:	bf00      	nop
9001f8c0:	240397a0 	.word	0x240397a0
9001f8c4:	24039814 	.word	0x24039814
9001f8c8:	9002ba6c 	.word	0x9002ba6c
9001f8cc:	24000000 	.word	0x24000000
9001f8d0:	9001beb3 	.word	0x9001beb3

9001f8d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001f8d4:	b510      	push	{r4, lr}
9001f8d6:	4604      	mov	r4, r0
9001f8d8:	f7ff ff96 	bl	9001f808 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001f8dc:	4620      	mov	r0, r4
9001f8de:	f7ff ffb3 	bl	9001f848 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001f8e2:	4620      	mov	r0, r4
9001f8e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f8e8:	f7ff bfce 	b.w	9001f888 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001f8ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001f8ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f8f0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001f8f4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001f8f8:	2d00      	cmp	r5, #0
9001f8fa:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001f8fe:	fb05 4c0e 	mla	ip, r5, lr, r4
9001f902:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001f906:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001f90a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001f90e:	eb02 0a0c 	add.w	sl, r2, ip
9001f912:	8808      	ldrh	r0, [r1, #0]
9001f914:	f2c0 80b0 	blt.w	9001fa78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001f918:	45ab      	cmp	fp, r5
9001f91a:	f340 80ad 	ble.w	9001fa78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001f91e:	2c00      	cmp	r4, #0
9001f920:	f2c0 80a8 	blt.w	9001fa74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001f924:	45a6      	cmp	lr, r4
9001f926:	f340 80a5 	ble.w	9001fa74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001f92a:	f812 200c 	ldrb.w	r2, [r2, ip]
9001f92e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001f932:	1c62      	adds	r2, r4, #1
9001f934:	f100 80a3 	bmi.w	9001fa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f938:	4596      	cmp	lr, r2
9001f93a:	f340 80a0 	ble.w	9001fa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f93e:	f1b9 0f00 	cmp.w	r9, #0
9001f942:	f000 809c 	beq.w	9001fa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001f946:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f94a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001f94e:	3501      	adds	r5, #1
9001f950:	f100 8099 	bmi.w	9001fa86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f954:	45ab      	cmp	fp, r5
9001f956:	f340 8096 	ble.w	9001fa86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f95a:	2f00      	cmp	r7, #0
9001f95c:	f000 8093 	beq.w	9001fa86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001f960:	2c00      	cmp	r4, #0
9001f962:	f2c0 808e 	blt.w	9001fa82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001f966:	45a6      	cmp	lr, r4
9001f968:	f340 808b 	ble.w	9001fa82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001f96c:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001f970:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001f974:	3401      	adds	r4, #1
9001f976:	f100 8089 	bmi.w	9001fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f97a:	45a6      	cmp	lr, r4
9001f97c:	f340 8086 	ble.w	9001fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f980:	f1b9 0f00 	cmp.w	r9, #0
9001f984:	f000 8082 	beq.w	9001fa8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001f988:	44d6      	add	lr, sl
9001f98a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f98e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001f992:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001f996:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001f99a:	fb19 fe07 	smulbb	lr, r9, r7
9001f99e:	f1c7 0210 	rsb	r2, r7, #16
9001f9a2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001f9a6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001f9aa:	eba2 0209 	sub.w	r2, r2, r9
9001f9ae:	ea44 0808 	orr.w	r8, r4, r8
9001f9b2:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001f9b6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001f9ba:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001f9be:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001f9c2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001f9c6:	ea44 0c0c 	orr.w	ip, r4, ip
9001f9ca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001f9ce:	fb04 f40c 	mul.w	r4, r4, ip
9001f9d2:	fb02 4808 	mla	r8, r2, r8, r4
9001f9d6:	041a      	lsls	r2, r3, #16
9001f9d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001f9dc:	b2b4      	uxth	r4, r6
9001f9de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001f9e2:	43f6      	mvns	r6, r6
9001f9e4:	4313      	orrs	r3, r2
9001f9e6:	042a      	lsls	r2, r5, #16
9001f9e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001f9ec:	b2f6      	uxtb	r6, r6
9001f9ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001f9f2:	fb0e 8303 	mla	r3, lr, r3, r8
9001f9f6:	432a      	orrs	r2, r5
9001f9f8:	fb07 3202 	mla	r2, r7, r2, r3
9001f9fc:	10c7      	asrs	r7, r0, #3
9001f9fe:	0d53      	lsrs	r3, r2, #21
9001fa00:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001fa04:	0952      	lsrs	r2, r2, #5
9001fa06:	fb17 f706 	smulbb	r7, r7, r6
9001fa0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fa0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001fa12:	431a      	orrs	r2, r3
9001fa14:	b293      	uxth	r3, r2
9001fa16:	1202      	asrs	r2, r0, #8
9001fa18:	121d      	asrs	r5, r3, #8
9001fa1a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001fa1e:	00c0      	lsls	r0, r0, #3
9001fa20:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fa24:	fb12 f206 	smulbb	r2, r2, r6
9001fa28:	b2c0      	uxtb	r0, r0
9001fa2a:	fb05 2504 	mla	r5, r5, r4, r2
9001fa2e:	10da      	asrs	r2, r3, #3
9001fa30:	fb10 f006 	smulbb	r0, r0, r6
9001fa34:	00db      	lsls	r3, r3, #3
9001fa36:	b2ad      	uxth	r5, r5
9001fa38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fa3c:	b2db      	uxtb	r3, r3
9001fa3e:	fb02 7204 	mla	r2, r2, r4, r7
9001fa42:	fb03 0004 	mla	r0, r3, r4, r0
9001fa46:	1c6b      	adds	r3, r5, #1
9001fa48:	b292      	uxth	r2, r2
9001fa4a:	b280      	uxth	r0, r0
9001fa4c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fa50:	1c43      	adds	r3, r0, #1
9001fa52:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fa56:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001fa5a:	1c50      	adds	r0, r2, #1
9001fa5c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001fa60:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fa64:	0952      	lsrs	r2, r2, #5
9001fa66:	432b      	orrs	r3, r5
9001fa68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fa6c:	4313      	orrs	r3, r2
9001fa6e:	800b      	strh	r3, [r1, #0]
9001fa70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fa74:	4680      	mov	r8, r0
9001fa76:	e75c      	b.n	9001f932 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001fa78:	4684      	mov	ip, r0
9001fa7a:	4680      	mov	r8, r0
9001fa7c:	e767      	b.n	9001f94e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fa7e:	4684      	mov	ip, r0
9001fa80:	e765      	b.n	9001f94e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001fa82:	4605      	mov	r5, r0
9001fa84:	e776      	b.n	9001f974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001fa86:	4603      	mov	r3, r0
9001fa88:	4605      	mov	r5, r0
9001fa8a:	e782      	b.n	9001f992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001fa8c:	4603      	mov	r3, r0
9001fa8e:	e780      	b.n	9001f992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001fa90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fa90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa94:	b099      	sub	sp, #100	; 0x64
9001fa96:	9215      	str	r2, [sp, #84]	; 0x54
9001fa98:	9309      	str	r3, [sp, #36]	; 0x24
9001fa9a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001fa9c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001faa0:	9016      	str	r0, [sp, #88]	; 0x58
9001faa2:	930d      	str	r3, [sp, #52]	; 0x34
9001faa4:	6850      	ldr	r0, [r2, #4]
9001faa6:	910c      	str	r1, [sp, #48]	; 0x30
9001faa8:	6812      	ldr	r2, [r2, #0]
9001faaa:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001faae:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001fab2:	fb00 1303 	mla	r3, r0, r3, r1
9001fab6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001faba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fabc:	681b      	ldr	r3, [r3, #0]
9001fabe:	930b      	str	r3, [sp, #44]	; 0x2c
9001fac0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fac2:	685e      	ldr	r6, [r3, #4]
9001fac4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001fac6:	3604      	adds	r6, #4
9001fac8:	43db      	mvns	r3, r3
9001faca:	b2db      	uxtb	r3, r3
9001facc:	930a      	str	r3, [sp, #40]	; 0x28
9001face:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fad0:	2b00      	cmp	r3, #0
9001fad2:	dc03      	bgt.n	9001fadc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001fad4:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001fad6:	2b00      	cmp	r3, #0
9001fad8:	f340 8225 	ble.w	9001ff26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fadc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fade:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fae2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fae6:	1e48      	subs	r0, r1, #1
9001fae8:	1e57      	subs	r7, r2, #1
9001faea:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001faec:	2b00      	cmp	r3, #0
9001faee:	f340 80e3 	ble.w	9001fcb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001faf2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001faf6:	ea4f 4325 	mov.w	r3, r5, asr #16
9001fafa:	d406      	bmi.n	9001fb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fafc:	4584      	cmp	ip, r0
9001fafe:	da04      	bge.n	9001fb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fb00:	2b00      	cmp	r3, #0
9001fb02:	db02      	blt.n	9001fb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001fb04:	42bb      	cmp	r3, r7
9001fb06:	f2c0 80d8 	blt.w	9001fcba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001fb0a:	f11c 0c01 	adds.w	ip, ip, #1
9001fb0e:	f100 80c9 	bmi.w	9001fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fb12:	4561      	cmp	r1, ip
9001fb14:	f2c0 80c6 	blt.w	9001fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fb18:	3301      	adds	r3, #1
9001fb1a:	f100 80c3 	bmi.w	9001fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fb1e:	429a      	cmp	r2, r3
9001fb20:	f2c0 80c0 	blt.w	9001fca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001fb24:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001fb28:	4647      	mov	r7, r8
9001fb2a:	f1bb 0f00 	cmp.w	fp, #0
9001fb2e:	f340 80e3 	ble.w	9001fcf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001fb32:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001fb34:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fb38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fb3a:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001fb3e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001fb42:	ea5f 422a 	movs.w	r2, sl, asr #16
9001fb46:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fb4a:	689b      	ldr	r3, [r3, #8]
9001fb4c:	f100 8121 	bmi.w	9001fd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fb50:	f103 39ff 	add.w	r9, r3, #4294967295
9001fb54:	454a      	cmp	r2, r9
9001fb56:	f280 811c 	bge.w	9001fd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fb5a:	f1bc 0f00 	cmp.w	ip, #0
9001fb5e:	f2c0 8118 	blt.w	9001fd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fb62:	f10e 39ff 	add.w	r9, lr, #4294967295
9001fb66:	45cc      	cmp	ip, r9
9001fb68:	f280 8113 	bge.w	9001fd92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001fb6c:	b21b      	sxth	r3, r3
9001fb6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001fb70:	fb0c 2203 	mla	r2, ip, r3, r2
9001fb74:	eb04 0902 	add.w	r9, r4, r2
9001fb78:	5ca2      	ldrb	r2, [r4, r2]
9001fb7a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001fb7e:	2800      	cmp	r0, #0
9001fb80:	f000 80fe 	beq.w	9001fd80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001fb84:	f899 2001 	ldrb.w	r2, [r9, #1]
9001fb88:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001fb8c:	9211      	str	r2, [sp, #68]	; 0x44
9001fb8e:	b151      	cbz	r1, 9001fba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fb90:	eb09 0203 	add.w	r2, r9, r3
9001fb94:	f819 3003 	ldrb.w	r3, [r9, r3]
9001fb98:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fb9c:	930f      	str	r3, [sp, #60]	; 0x3c
9001fb9e:	7853      	ldrb	r3, [r2, #1]
9001fba0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fba4:	9312      	str	r3, [sp, #72]	; 0x48
9001fba6:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001fba8:	fb10 f201 	smulbb	r2, r0, r1
9001fbac:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001fbae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fbb2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fbb6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001fbba:	10d2      	asrs	r2, r2, #3
9001fbbc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001fbc0:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001fbc4:	ea4c 0c03 	orr.w	ip, ip, r3
9001fbc8:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001fbca:	041b      	lsls	r3, r3, #16
9001fbcc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001fbd0:	4323      	orrs	r3, r4
9001fbd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fbd4:	4353      	muls	r3, r2
9001fbd6:	fb09 330c 	mla	r3, r9, ip, r3
9001fbda:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001fbde:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001fbe2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001fbe6:	ea4c 0e0e 	orr.w	lr, ip, lr
9001fbea:	f1c1 0c10 	rsb	ip, r1, #16
9001fbee:	ebac 0c00 	sub.w	ip, ip, r0
9001fbf2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001fbf6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001fbfa:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001fbfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001fc00:	0418      	lsls	r0, r3, #16
9001fc02:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fc06:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001fc0a:	4318      	orrs	r0, r3
9001fc0c:	fb02 c200 	mla	r2, r2, r0, ip
9001fc10:	8838      	ldrh	r0, [r7, #0]
9001fc12:	0d53      	lsrs	r3, r2, #21
9001fc14:	0952      	lsrs	r2, r2, #5
9001fc16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fc1a:	1201      	asrs	r1, r0, #8
9001fc1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001fc20:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001fc24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001fc28:	00c0      	lsls	r0, r0, #3
9001fc2a:	431a      	orrs	r2, r3
9001fc2c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001fc30:	fb11 f104 	smulbb	r1, r1, r4
9001fc34:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001fc38:	b292      	uxth	r2, r2
9001fc3a:	fb1e fe04 	smulbb	lr, lr, r4
9001fc3e:	b2c0      	uxtb	r0, r0
9001fc40:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001fc44:	fb10 f004 	smulbb	r0, r0, r4
9001fc48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001fc4c:	fb0c 1c03 	mla	ip, ip, r3, r1
9001fc50:	10d1      	asrs	r1, r2, #3
9001fc52:	00d2      	lsls	r2, r2, #3
9001fc54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001fc58:	fa1f fc8c 	uxth.w	ip, ip
9001fc5c:	b2d2      	uxtb	r2, r2
9001fc5e:	fb01 e103 	mla	r1, r1, r3, lr
9001fc62:	fb02 0303 	mla	r3, r2, r3, r0
9001fc66:	b289      	uxth	r1, r1
9001fc68:	b29a      	uxth	r2, r3
9001fc6a:	f10c 0301 	add.w	r3, ip, #1
9001fc6e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001fc72:	1c53      	adds	r3, r2, #1
9001fc74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fc78:	1c4a      	adds	r2, r1, #1
9001fc7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001fc7e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001fc82:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fc86:	0949      	lsrs	r1, r1, #5
9001fc88:	ea43 030c 	orr.w	r3, r3, ip
9001fc8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001fc90:	430b      	orrs	r3, r1
9001fc92:	803b      	strh	r3, [r7, #0]
9001fc94:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001fc96:	3702      	adds	r7, #2
9001fc98:	f10b 3bff 	add.w	fp, fp, #4294967295
9001fc9c:	449a      	add	sl, r3
9001fc9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001fca0:	441d      	add	r5, r3
9001fca2:	e742      	b.n	9001fb2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001fca4:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001fca6:	f108 0802 	add.w	r8, r8, #2
9001fcaa:	449a      	add	sl, r3
9001fcac:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001fcae:	441d      	add	r5, r3
9001fcb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fcb2:	3b01      	subs	r3, #1
9001fcb4:	9309      	str	r3, [sp, #36]	; 0x24
9001fcb6:	e718      	b.n	9001faea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001fcb8:	d023      	beq.n	9001fd02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001fcba:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fcbc:	9825      	ldr	r0, [sp, #148]	; 0x94
9001fcbe:	3b01      	subs	r3, #1
9001fcc0:	fb00 a003 	mla	r0, r0, r3, sl
9001fcc4:	1400      	asrs	r0, r0, #16
9001fcc6:	f53f af2d 	bmi.w	9001fb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fcca:	3901      	subs	r1, #1
9001fccc:	4288      	cmp	r0, r1
9001fcce:	f6bf af29 	bge.w	9001fb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fcd2:	9926      	ldr	r1, [sp, #152]	; 0x98
9001fcd4:	fb01 5303 	mla	r3, r1, r3, r5
9001fcd8:	141b      	asrs	r3, r3, #16
9001fcda:	f53f af23 	bmi.w	9001fb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fcde:	3a01      	subs	r2, #1
9001fce0:	4293      	cmp	r3, r2
9001fce2:	f6bf af1f 	bge.w	9001fb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001fce6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001fcea:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001fcee:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001fcf2:	f1be 0f00 	cmp.w	lr, #0
9001fcf6:	dc6c      	bgt.n	9001fdd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001fcf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fcfa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001fcfe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fd02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fd04:	2b00      	cmp	r3, #0
9001fd06:	f340 810e 	ble.w	9001ff26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001fd0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001fd0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001fd10:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fd14:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fd18:	eef0 6a62 	vmov.f32	s13, s5
9001fd1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001fd20:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fd24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fd28:	ee16 aa90 	vmov	sl, s13
9001fd2c:	eef0 6a43 	vmov.f32	s13, s6
9001fd30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fd34:	ee16 5a90 	vmov	r5, s13
9001fd38:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fd3c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fd40:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fd44:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fd48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fd4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fd50:	ee12 2a90 	vmov	r2, s5
9001fd54:	eef0 2a47 	vmov.f32	s5, s14
9001fd58:	fb92 f3f3 	sdiv	r3, r2, r3
9001fd5c:	ee13 2a10 	vmov	r2, s6
9001fd60:	9325      	str	r3, [sp, #148]	; 0x94
9001fd62:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001fd64:	eeb0 3a67 	vmov.f32	s6, s15
9001fd68:	fb92 f3f3 	sdiv	r3, r2, r3
9001fd6c:	9326      	str	r3, [sp, #152]	; 0x98
9001fd6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001fd70:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001fd72:	3b01      	subs	r3, #1
9001fd74:	930c      	str	r3, [sp, #48]	; 0x30
9001fd76:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001fd78:	bf08      	it	eq
9001fd7a:	4613      	moveq	r3, r2
9001fd7c:	9309      	str	r3, [sp, #36]	; 0x24
9001fd7e:	e6a6      	b.n	9001face <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001fd80:	2900      	cmp	r1, #0
9001fd82:	f43f af10 	beq.w	9001fba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fd86:	f819 3003 	ldrb.w	r3, [r9, r3]
9001fd8a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fd8e:	930f      	str	r3, [sp, #60]	; 0x3c
9001fd90:	e709      	b.n	9001fba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001fd92:	f112 0901 	adds.w	r9, r2, #1
9001fd96:	f53f af7d 	bmi.w	9001fc94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001fd9a:	454b      	cmp	r3, r9
9001fd9c:	f6ff af7a 	blt.w	9001fc94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001fda0:	f11c 0901 	adds.w	r9, ip, #1
9001fda4:	f53f af76 	bmi.w	9001fc94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001fda8:	45ce      	cmp	lr, r9
9001fdaa:	f6ff af73 	blt.w	9001fc94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001fdae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001fdb0:	b21b      	sxth	r3, r3
9001fdb2:	9202      	str	r2, [sp, #8]
9001fdb4:	fa0f f28e 	sxth.w	r2, lr
9001fdb8:	9300      	str	r3, [sp, #0]
9001fdba:	4633      	mov	r3, r6
9001fdbc:	9201      	str	r2, [sp, #4]
9001fdbe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001fdc0:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001fdc4:	e9cd c003 	strd	ip, r0, [sp, #12]
9001fdc8:	4639      	mov	r1, r7
9001fdca:	9816      	ldr	r0, [sp, #88]	; 0x58
9001fdcc:	f7ff fd8e 	bl	9001f8ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001fdd0:	e760      	b.n	9001fc94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001fdd2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001fdd4:	ea4f 422a 	mov.w	r2, sl, asr #16
9001fdd8:	1429      	asrs	r1, r5, #16
9001fdda:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001fddc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001fde0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001fde4:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001fde8:	fb03 2101 	mla	r1, r3, r1, r2
9001fdec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001fdee:	440a      	add	r2, r1
9001fdf0:	5c61      	ldrb	r1, [r4, r1]
9001fdf2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001fdf6:	f1bc 0f00 	cmp.w	ip, #0
9001fdfa:	f000 808c 	beq.w	9001ff16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001fdfe:	7857      	ldrb	r7, [r2, #1]
9001fe00:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001fe04:	9413      	str	r4, [sp, #76]	; 0x4c
9001fe06:	b140      	cbz	r0, 9001fe1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001fe08:	18d7      	adds	r7, r2, r3
9001fe0a:	5cd3      	ldrb	r3, [r2, r3]
9001fe0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fe10:	9310      	str	r3, [sp, #64]	; 0x40
9001fe12:	787b      	ldrb	r3, [r7, #1]
9001fe14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001fe18:	9314      	str	r3, [sp, #80]	; 0x50
9001fe1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001fe1c:	fb1c f200 	smulbb	r2, ip, r0
9001fe20:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001fe22:	f10e 3eff 	add.w	lr, lr, #4294967295
9001fe26:	041f      	lsls	r7, r3, #16
9001fe28:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001fe2c:	10d2      	asrs	r2, r2, #3
9001fe2e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001fe32:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001fe36:	431f      	orrs	r7, r3
9001fe38:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001fe3c:	9317      	str	r3, [sp, #92]	; 0x5c
9001fe3e:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001fe40:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001fe42:	041b      	lsls	r3, r3, #16
9001fe44:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001fe48:	ea43 030b 	orr.w	r3, r3, fp
9001fe4c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001fe50:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001fe54:	4353      	muls	r3, r2
9001fe56:	fb04 3707 	mla	r7, r4, r7, r3
9001fe5a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001fe5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fe60:	ea43 0b01 	orr.w	fp, r3, r1
9001fe64:	f1c0 0110 	rsb	r1, r0, #16
9001fe68:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001fe6a:	eba1 0c0c 	sub.w	ip, r1, ip
9001fe6e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001fe72:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001fe76:	fb0c 770b 	mla	r7, ip, fp, r7
9001fe7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001fe7e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9001fe82:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001fe86:	ea4c 0c0b 	orr.w	ip, ip, fp
9001fe8a:	fb02 770c 	mla	r7, r2, ip, r7
9001fe8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001fe90:	0d79      	lsrs	r1, r7, #21
9001fe92:	8812      	ldrh	r2, [r2, #0]
9001fe94:	097f      	lsrs	r7, r7, #5
9001fe96:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001fe9a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001fe9e:	430f      	orrs	r7, r1
9001fea0:	1211      	asrs	r1, r2, #8
9001fea2:	b2bb      	uxth	r3, r7
9001fea4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001fea8:	10d7      	asrs	r7, r2, #3
9001feaa:	fb11 f104 	smulbb	r1, r1, r4
9001feae:	1218      	asrs	r0, r3, #8
9001feb0:	00d2      	lsls	r2, r2, #3
9001feb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001feb6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001feba:	fb17 f704 	smulbb	r7, r7, r4
9001febe:	b2d2      	uxtb	r2, r2
9001fec0:	fb00 1009 	mla	r0, r0, r9, r1
9001fec4:	10d9      	asrs	r1, r3, #3
9001fec6:	fb12 f204 	smulbb	r2, r2, r4
9001feca:	00db      	lsls	r3, r3, #3
9001fecc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001fed0:	b280      	uxth	r0, r0
9001fed2:	b2db      	uxtb	r3, r3
9001fed4:	fb01 7109 	mla	r1, r1, r9, r7
9001fed8:	fb03 2309 	mla	r3, r3, r9, r2
9001fedc:	1c42      	adds	r2, r0, #1
9001fede:	b289      	uxth	r1, r1
9001fee0:	b29b      	uxth	r3, r3
9001fee2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001fee6:	1c4f      	adds	r7, r1, #1
9001fee8:	1c5a      	adds	r2, r3, #1
9001feea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001feee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001fef2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001fef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001fef8:	0949      	lsrs	r1, r1, #5
9001fefa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fefe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ff02:	4310      	orrs	r0, r2
9001ff04:	4308      	orrs	r0, r1
9001ff06:	f823 0b02 	strh.w	r0, [r3], #2
9001ff0a:	930e      	str	r3, [sp, #56]	; 0x38
9001ff0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001ff0e:	449a      	add	sl, r3
9001ff10:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001ff12:	441d      	add	r5, r3
9001ff14:	e6ed      	b.n	9001fcf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001ff16:	2800      	cmp	r0, #0
9001ff18:	f43f af7f 	beq.w	9001fe1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ff1c:	5cd3      	ldrb	r3, [r2, r3]
9001ff1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ff22:	9310      	str	r3, [sp, #64]	; 0x40
9001ff24:	e779      	b.n	9001fe1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ff26:	b019      	add	sp, #100	; 0x64
9001ff28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ff2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001ff2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ff30:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
9001ff34:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001ff38:	f1b8 0f00 	cmp.w	r8, #0
9001ff3c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
9001ff40:	fb08 470e 	mla	r7, r8, lr, r4
9001ff44:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001ff48:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9001ff4c:	eb02 0907 	add.w	r9, r2, r7
9001ff50:	8808      	ldrh	r0, [r1, #0]
9001ff52:	db67      	blt.n	90020024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001ff54:	45c2      	cmp	sl, r8
9001ff56:	dd65      	ble.n	90020024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001ff58:	2c00      	cmp	r4, #0
9001ff5a:	db61      	blt.n	90020020 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ff5c:	45a6      	cmp	lr, r4
9001ff5e:	dd5f      	ble.n	90020020 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ff60:	5dd2      	ldrb	r2, [r2, r7]
9001ff62:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001ff66:	1c62      	adds	r2, r4, #1
9001ff68:	d45f      	bmi.n	9002002a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ff6a:	4596      	cmp	lr, r2
9001ff6c:	dd5d      	ble.n	9002002a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ff6e:	2d00      	cmp	r5, #0
9001ff70:	d05b      	beq.n	9002002a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ff72:	f899 2001 	ldrb.w	r2, [r9, #1]
9001ff76:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001ff7a:	f118 0801 	adds.w	r8, r8, #1
9001ff7e:	d458      	bmi.n	90020032 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ff80:	45c2      	cmp	sl, r8
9001ff82:	dd56      	ble.n	90020032 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ff84:	2e00      	cmp	r6, #0
9001ff86:	d054      	beq.n	90020032 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ff88:	2c00      	cmp	r4, #0
9001ff8a:	db50      	blt.n	9002002e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ff8c:	45a6      	cmp	lr, r4
9001ff8e:	dd4e      	ble.n	9002002e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ff90:	f819 200e 	ldrb.w	r2, [r9, lr]
9001ff94:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001ff98:	3401      	adds	r4, #1
9001ff9a:	d407      	bmi.n	9001ffac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ff9c:	45a6      	cmp	lr, r4
9001ff9e:	dd05      	ble.n	9001ffac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ffa0:	b125      	cbz	r5, 9001ffac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ffa2:	44ce      	add	lr, r9
9001ffa4:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001ffa8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001ffac:	fb15 f406 	smulbb	r4, r5, r6
9001ffb0:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001ffb4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001ffb8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001ffbc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ffc0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001ffc4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001ffc8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001ffcc:	ea43 0c0c 	orr.w	ip, r3, ip
9001ffd0:	f1c6 0310 	rsb	r3, r6, #16
9001ffd4:	ea4e 0707 	orr.w	r7, lr, r7
9001ffd8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001ffdc:	1b5b      	subs	r3, r3, r5
9001ffde:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001ffe2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ffe6:	437d      	muls	r5, r7
9001ffe8:	fb03 5c0c 	mla	ip, r3, ip, r5
9001ffec:	0403      	lsls	r3, r0, #16
9001ffee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001fff2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001fff6:	4318      	orrs	r0, r3
9001fff8:	0413      	lsls	r3, r2, #16
9001fffa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001fffe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020002:	fb04 c000 	mla	r0, r4, r0, ip
90020006:	4313      	orrs	r3, r2
90020008:	fb06 0003 	mla	r0, r6, r3, r0
9002000c:	0d43      	lsrs	r3, r0, #21
9002000e:	0940      	lsrs	r0, r0, #5
90020010:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020014:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020018:	4318      	orrs	r0, r3
9002001a:	8008      	strh	r0, [r1, #0]
9002001c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020020:	4684      	mov	ip, r0
90020022:	e7a0      	b.n	9001ff66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90020024:	4607      	mov	r7, r0
90020026:	4684      	mov	ip, r0
90020028:	e7a7      	b.n	9001ff7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002002a:	4607      	mov	r7, r0
9002002c:	e7a5      	b.n	9001ff7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002002e:	4602      	mov	r2, r0
90020030:	e7b2      	b.n	9001ff98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90020032:	4602      	mov	r2, r0
90020034:	e7ba      	b.n	9001ffac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90020036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020036:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002003a:	b093      	sub	sp, #76	; 0x4c
9002003c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90020040:	920f      	str	r2, [sp, #60]	; 0x3c
90020042:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020044:	9010      	str	r0, [sp, #64]	; 0x40
90020046:	9108      	str	r1, [sp, #32]
90020048:	6850      	ldr	r0, [r2, #4]
9002004a:	9306      	str	r3, [sp, #24]
9002004c:	6812      	ldr	r2, [r2, #0]
9002004e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90020052:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90020056:	fb00 1303 	mla	r3, r0, r3, r1
9002005a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002005e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020060:	681b      	ldr	r3, [r3, #0]
90020062:	9307      	str	r3, [sp, #28]
90020064:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020066:	685f      	ldr	r7, [r3, #4]
90020068:	3704      	adds	r7, #4
9002006a:	9b08      	ldr	r3, [sp, #32]
9002006c:	2b00      	cmp	r3, #0
9002006e:	dc03      	bgt.n	90020078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020070:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020072:	2b00      	cmp	r3, #0
90020074:	f340 81b2 	ble.w	900203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020078:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002007a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002007e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020082:	1e48      	subs	r0, r1, #1
90020084:	f102 3cff 	add.w	ip, r2, #4294967295
90020088:	9b06      	ldr	r3, [sp, #24]
9002008a:	2b00      	cmp	r3, #0
9002008c:	f340 80a9 	ble.w	900201e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020090:	ea5f 4e24 	movs.w	lr, r4, asr #16
90020094:	ea4f 4326 	mov.w	r3, r6, asr #16
90020098:	d406      	bmi.n	900200a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002009a:	4586      	cmp	lr, r0
9002009c:	da04      	bge.n	900200a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002009e:	2b00      	cmp	r3, #0
900200a0:	db02      	blt.n	900200a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900200a2:	4563      	cmp	r3, ip
900200a4:	f2c0 809e 	blt.w	900201e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
900200a8:	f11e 0e01 	adds.w	lr, lr, #1
900200ac:	f100 808f 	bmi.w	900201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900200b0:	4571      	cmp	r1, lr
900200b2:	f2c0 808c 	blt.w	900201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900200b6:	3301      	adds	r3, #1
900200b8:	f100 8089 	bmi.w	900201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900200bc:	429a      	cmp	r2, r3
900200be:	f2c0 8086 	blt.w	900201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900200c2:	f8dd b018 	ldr.w	fp, [sp, #24]
900200c6:	46c8      	mov	r8, r9
900200c8:	f1bb 0f00 	cmp.w	fp, #0
900200cc:	f340 80a6 	ble.w	9002021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900200d0:	9a24      	ldr	r2, [sp, #144]	; 0x90
900200d2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900200d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900200d8:	f3c4 3003 	ubfx	r0, r4, #12, #4
900200dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900200e0:	1422      	asrs	r2, r4, #16
900200e2:	f3c6 3103 	ubfx	r1, r6, #12, #4
900200e6:	689b      	ldr	r3, [r3, #8]
900200e8:	f100 80e3 	bmi.w	900202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900200ec:	f103 3aff 	add.w	sl, r3, #4294967295
900200f0:	4552      	cmp	r2, sl
900200f2:	f280 80de 	bge.w	900202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900200f6:	f1bc 0f00 	cmp.w	ip, #0
900200fa:	f2c0 80da 	blt.w	900202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900200fe:	f10e 3aff 	add.w	sl, lr, #4294967295
90020102:	45d4      	cmp	ip, sl
90020104:	f280 80d5 	bge.w	900202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020108:	b21b      	sxth	r3, r3
9002010a:	9d07      	ldr	r5, [sp, #28]
9002010c:	fb0c 2203 	mla	r2, ip, r3, r2
90020110:	eb05 0a02 	add.w	sl, r5, r2
90020114:	5caa      	ldrb	r2, [r5, r2]
90020116:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9002011a:	2800      	cmp	r0, #0
9002011c:	f000 80c0 	beq.w	900202a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90020120:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020124:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90020128:	920b      	str	r2, [sp, #44]	; 0x2c
9002012a:	b151      	cbz	r1, 90020142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002012c:	eb0a 0203 	add.w	r2, sl, r3
90020130:	f81a 3003 	ldrb.w	r3, [sl, r3]
90020134:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020138:	9309      	str	r3, [sp, #36]	; 0x24
9002013a:	7853      	ldrb	r3, [r2, #1]
9002013c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020140:	930c      	str	r3, [sp, #48]	; 0x30
90020142:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020144:	fb10 f201 	smulbb	r2, r0, r1
90020148:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002014a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002014e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020152:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90020156:	10d2      	asrs	r2, r2, #3
90020158:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002015c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90020160:	ea4c 0c03 	orr.w	ip, ip, r3
90020164:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020166:	041b      	lsls	r3, r3, #16
90020168:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002016c:	432b      	orrs	r3, r5
9002016e:	4353      	muls	r3, r2
90020170:	fb0a 330c 	mla	r3, sl, ip, r3
90020174:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020178:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002017c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020180:	ea4c 0e0e 	orr.w	lr, ip, lr
90020184:	f1c1 0c10 	rsb	ip, r1, #16
90020188:	ebac 0c00 	sub.w	ip, ip, r0
9002018c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020190:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90020194:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020198:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002019a:	0418      	lsls	r0, r3, #16
9002019c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900201a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900201a4:	4318      	orrs	r0, r3
900201a6:	fb02 c200 	mla	r2, r2, r0, ip
900201aa:	0d53      	lsrs	r3, r2, #21
900201ac:	0952      	lsrs	r2, r2, #5
900201ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900201b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900201b6:	431a      	orrs	r2, r3
900201b8:	f8a8 2000 	strh.w	r2, [r8]
900201bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900201be:	f108 0802 	add.w	r8, r8, #2
900201c2:	f10b 3bff 	add.w	fp, fp, #4294967295
900201c6:	441c      	add	r4, r3
900201c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900201ca:	441e      	add	r6, r3
900201cc:	e77c      	b.n	900200c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900201ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900201d0:	f109 0902 	add.w	r9, r9, #2
900201d4:	441c      	add	r4, r3
900201d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900201d8:	441e      	add	r6, r3
900201da:	9b06      	ldr	r3, [sp, #24]
900201dc:	3b01      	subs	r3, #1
900201de:	9306      	str	r3, [sp, #24]
900201e0:	e752      	b.n	90020088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900201e2:	d020      	beq.n	90020226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900201e4:	9b06      	ldr	r3, [sp, #24]
900201e6:	981f      	ldr	r0, [sp, #124]	; 0x7c
900201e8:	3b01      	subs	r3, #1
900201ea:	fb00 4003 	mla	r0, r0, r3, r4
900201ee:	1400      	asrs	r0, r0, #16
900201f0:	f53f af67 	bmi.w	900200c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900201f4:	3901      	subs	r1, #1
900201f6:	4288      	cmp	r0, r1
900201f8:	f6bf af63 	bge.w	900200c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900201fc:	9920      	ldr	r1, [sp, #128]	; 0x80
900201fe:	fb01 6303 	mla	r3, r1, r3, r6
90020202:	141b      	asrs	r3, r3, #16
90020204:	f53f af5d 	bmi.w	900200c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020208:	3a01      	subs	r2, #1
9002020a:	4293      	cmp	r3, r2
9002020c:	f6bf af59 	bge.w	900200c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020210:	f8dd 8018 	ldr.w	r8, [sp, #24]
90020214:	46ca      	mov	sl, r9
90020216:	f1b8 0f00 	cmp.w	r8, #0
9002021a:	dc67      	bgt.n	900202ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9002021c:	9b06      	ldr	r3, [sp, #24]
9002021e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90020222:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90020226:	9b08      	ldr	r3, [sp, #32]
90020228:	2b00      	cmp	r3, #0
9002022a:	f340 80d7 	ble.w	900203dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002022e:	ee30 0a04 	vadd.f32	s0, s0, s8
90020232:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020234:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020238:	eeb0 6a62 	vmov.f32	s12, s5
9002023c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020240:	ee31 1a05 	vadd.f32	s2, s2, s10
90020244:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020248:	ee16 4a10 	vmov	r4, s12
9002024c:	eeb0 6a43 	vmov.f32	s12, s6
90020250:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020254:	ee16 6a10 	vmov	r6, s12
90020258:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002025c:	ee61 7a27 	vmul.f32	s15, s2, s15
90020260:	ee77 2a62 	vsub.f32	s5, s14, s5
90020264:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020268:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002026c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020270:	ee12 2a90 	vmov	r2, s5
90020274:	eef0 2a47 	vmov.f32	s5, s14
90020278:	fb92 f3f3 	sdiv	r3, r2, r3
9002027c:	ee13 2a10 	vmov	r2, s6
90020280:	931f      	str	r3, [sp, #124]	; 0x7c
90020282:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020284:	eeb0 3a67 	vmov.f32	s6, s15
90020288:	fb92 f3f3 	sdiv	r3, r2, r3
9002028c:	9320      	str	r3, [sp, #128]	; 0x80
9002028e:	9b08      	ldr	r3, [sp, #32]
90020290:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020292:	3b01      	subs	r3, #1
90020294:	9308      	str	r3, [sp, #32]
90020296:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020298:	bf08      	it	eq
9002029a:	4613      	moveq	r3, r2
9002029c:	9306      	str	r3, [sp, #24]
9002029e:	e6e4      	b.n	9002006a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900202a0:	2900      	cmp	r1, #0
900202a2:	f43f af4e 	beq.w	90020142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900202a6:	f81a 3003 	ldrb.w	r3, [sl, r3]
900202aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900202ae:	9309      	str	r3, [sp, #36]	; 0x24
900202b0:	e747      	b.n	90020142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900202b2:	f112 0a01 	adds.w	sl, r2, #1
900202b6:	d481      	bmi.n	900201bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900202b8:	4553      	cmp	r3, sl
900202ba:	f6ff af7f 	blt.w	900201bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900202be:	f11c 0a01 	adds.w	sl, ip, #1
900202c2:	f53f af7b 	bmi.w	900201bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900202c6:	45d6      	cmp	lr, sl
900202c8:	f6ff af78 	blt.w	900201bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900202cc:	b21b      	sxth	r3, r3
900202ce:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900202d2:	fa0f f28e 	sxth.w	r2, lr
900202d6:	9300      	str	r3, [sp, #0]
900202d8:	463b      	mov	r3, r7
900202da:	9201      	str	r2, [sp, #4]
900202dc:	9a07      	ldr	r2, [sp, #28]
900202de:	e9cd 0104 	strd	r0, r1, [sp, #16]
900202e2:	4641      	mov	r1, r8
900202e4:	9810      	ldr	r0, [sp, #64]	; 0x40
900202e6:	f7ff fe21 	bl	9001ff2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900202ea:	e767      	b.n	900201bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900202ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
900202ee:	1422      	asrs	r2, r4, #16
900202f0:	1431      	asrs	r1, r6, #16
900202f2:	9d07      	ldr	r5, [sp, #28]
900202f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900202f8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900202fc:	f3c6 3003 	ubfx	r0, r6, #12, #4
90020300:	fb03 2101 	mla	r1, r3, r1, r2
90020304:	9a07      	ldr	r2, [sp, #28]
90020306:	440a      	add	r2, r1
90020308:	5c69      	ldrb	r1, [r5, r1]
9002030a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002030e:	f1be 0f00 	cmp.w	lr, #0
90020312:	d05c      	beq.n	900203ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90020314:	f892 c001 	ldrb.w	ip, [r2, #1]
90020318:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9002031c:	950d      	str	r5, [sp, #52]	; 0x34
9002031e:	b150      	cbz	r0, 90020336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020320:	eb02 0c03 	add.w	ip, r2, r3
90020324:	5cd3      	ldrb	r3, [r2, r3]
90020326:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002032a:	930a      	str	r3, [sp, #40]	; 0x28
9002032c:	f89c 3001 	ldrb.w	r3, [ip, #1]
90020330:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020334:	930e      	str	r3, [sp, #56]	; 0x38
90020336:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020338:	fb1e f200 	smulbb	r2, lr, r0
9002033c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002033e:	f108 38ff 	add.w	r8, r8, #4294967295
90020342:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020346:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002034a:	10d2      	asrs	r2, r2, #3
9002034c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90020350:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020354:	ea4c 0c03 	orr.w	ip, ip, r3
90020358:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9002035c:	9311      	str	r3, [sp, #68]	; 0x44
9002035e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020360:	9d11      	ldr	r5, [sp, #68]	; 0x44
90020362:	041b      	lsls	r3, r3, #16
90020364:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020368:	ea43 030b 	orr.w	r3, r3, fp
9002036c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020370:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020374:	4353      	muls	r3, r2
90020376:	fb05 3c0c 	mla	ip, r5, ip, r3
9002037a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002037e:	ea43 0b01 	orr.w	fp, r3, r1
90020382:	f1c0 0110 	rsb	r1, r0, #16
90020386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020388:	eba1 0e0e 	sub.w	lr, r1, lr
9002038c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020390:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020394:	fb0e cc0b 	mla	ip, lr, fp, ip
90020398:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9002039c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
900203a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900203a4:	ea4b 0e0e 	orr.w	lr, fp, lr
900203a8:	fb02 cc0e 	mla	ip, r2, lr, ip
900203ac:	ea4f 535c 	mov.w	r3, ip, lsr #21
900203b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900203b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900203b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900203bc:	ea43 0c0c 	orr.w	ip, r3, ip
900203c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900203c2:	441c      	add	r4, r3
900203c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900203c6:	f82a cb02 	strh.w	ip, [sl], #2
900203ca:	441e      	add	r6, r3
900203cc:	e723      	b.n	90020216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900203ce:	2800      	cmp	r0, #0
900203d0:	d0b1      	beq.n	90020336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900203d2:	5cd3      	ldrb	r3, [r2, r3]
900203d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900203d8:	930a      	str	r3, [sp, #40]	; 0x28
900203da:	e7ac      	b.n	90020336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900203dc:	b013      	add	sp, #76	; 0x4c
900203de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900203e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900203e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900203e6:	880d      	ldrh	r5, [r1, #0]
900203e8:	b087      	sub	sp, #28
900203ea:	10ef      	asrs	r7, r5, #3
900203ec:	9103      	str	r1, [sp, #12]
900203ee:	ea4f 2a25 	mov.w	sl, r5, asr #8
900203f2:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
900203f6:	00ed      	lsls	r5, r5, #3
900203f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900203fc:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90020400:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90020404:	b2ed      	uxtb	r5, r5
90020406:	9701      	str	r7, [sp, #4]
90020408:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9002040c:	9502      	str	r5, [sp, #8]
9002040e:	9d01      	ldr	r5, [sp, #4]
90020410:	9902      	ldr	r1, [sp, #8]
90020412:	022d      	lsls	r5, r5, #8
90020414:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
90020418:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
9002041c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90020420:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90020424:	430d      	orrs	r5, r1
90020426:	fb06 0709 	mla	r7, r6, r9, r0
9002042a:	2e00      	cmp	r6, #0
9002042c:	9505      	str	r5, [sp, #20]
9002042e:	eb02 0c07 	add.w	ip, r2, r7
90020432:	f2c0 80b6 	blt.w	900205a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020436:	45b3      	cmp	fp, r6
90020438:	f340 80b3 	ble.w	900205a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9002043c:	2800      	cmp	r0, #0
9002043e:	f2c0 80ae 	blt.w	9002059e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020442:	4581      	cmp	r9, r0
90020444:	f340 80ab 	ble.w	9002059e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020448:	5dd7      	ldrb	r7, [r2, r7]
9002044a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002044e:	441f      	add	r7, r3
90020450:	1c42      	adds	r2, r0, #1
90020452:	f100 80a9 	bmi.w	900205a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020456:	4591      	cmp	r9, r2
90020458:	f340 80a6 	ble.w	900205a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002045c:	2c00      	cmp	r4, #0
9002045e:	f000 80a3 	beq.w	900205a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020462:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020466:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002046a:	441d      	add	r5, r3
9002046c:	3601      	adds	r6, #1
9002046e:	f100 809f 	bmi.w	900205b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020472:	45b3      	cmp	fp, r6
90020474:	f340 809c 	ble.w	900205b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020478:	f1be 0f00 	cmp.w	lr, #0
9002047c:	f000 8098 	beq.w	900205b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020480:	2800      	cmp	r0, #0
90020482:	f2c0 8093 	blt.w	900205ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020486:	4581      	cmp	r9, r0
90020488:	f340 8090 	ble.w	900205ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9002048c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020490:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020494:	441e      	add	r6, r3
90020496:	3001      	adds	r0, #1
90020498:	f100 808d 	bmi.w	900205b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002049c:	4581      	cmp	r9, r0
9002049e:	f340 808a 	ble.w	900205b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900204a2:	2c00      	cmp	r4, #0
900204a4:	f000 8087 	beq.w	900205b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900204a8:	44e1      	add	r9, ip
900204aa:	f899 2001 	ldrb.w	r2, [r9, #1]
900204ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900204b2:	4413      	add	r3, r2
900204b4:	b2a4      	uxth	r4, r4
900204b6:	f897 c002 	ldrb.w	ip, [r7, #2]
900204ba:	fa1f fe8e 	uxth.w	lr, lr
900204be:	9901      	ldr	r1, [sp, #4]
900204c0:	fb04 fb0e 	mul.w	fp, r4, lr
900204c4:	0124      	lsls	r4, r4, #4
900204c6:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900204ca:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
900204ce:	eba4 040b 	sub.w	r4, r4, fp
900204d2:	fa1f f08e 	uxth.w	r0, lr
900204d6:	b2a2      	uxth	r2, r4
900204d8:	78ac      	ldrb	r4, [r5, #2]
900204da:	eba9 0900 	sub.w	r9, r9, r0
900204de:	fa1f fe88 	uxth.w	lr, r8
900204e2:	4354      	muls	r4, r2
900204e4:	ea6f 0808 	mvn.w	r8, r8
900204e8:	fa1f f989 	uxth.w	r9, r9
900204ec:	fa5f f888 	uxtb.w	r8, r8
900204f0:	fb09 440c 	mla	r4, r9, ip, r4
900204f4:	f896 c002 	ldrb.w	ip, [r6, #2]
900204f8:	fb1a fa08 	smulbb	sl, sl, r8
900204fc:	fb00 440c 	mla	r4, r0, ip, r4
90020500:	f893 c002 	ldrb.w	ip, [r3, #2]
90020504:	fb0b 4c0c 	mla	ip, fp, ip, r4
90020508:	787c      	ldrb	r4, [r7, #1]
9002050a:	783f      	ldrb	r7, [r7, #0]
9002050c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020510:	fb0c ac0e 	mla	ip, ip, lr, sl
90020514:	f895 a001 	ldrb.w	sl, [r5, #1]
90020518:	782d      	ldrb	r5, [r5, #0]
9002051a:	fb02 fa0a 	mul.w	sl, r2, sl
9002051e:	fa1f fc8c 	uxth.w	ip, ip
90020522:	436a      	muls	r2, r5
90020524:	7835      	ldrb	r5, [r6, #0]
90020526:	fb09 aa04 	mla	sl, r9, r4, sl
9002052a:	7874      	ldrb	r4, [r6, #1]
9002052c:	fb09 2207 	mla	r2, r9, r7, r2
90020530:	fb00 aa04 	mla	sl, r0, r4, sl
90020534:	785c      	ldrb	r4, [r3, #1]
90020536:	fb00 2005 	mla	r0, r0, r5, r2
9002053a:	781b      	ldrb	r3, [r3, #0]
9002053c:	fb0b a404 	mla	r4, fp, r4, sl
90020540:	fb11 fa08 	smulbb	sl, r1, r8
90020544:	fb0b 0b03 	mla	fp, fp, r3, r0
90020548:	9b02      	ldr	r3, [sp, #8]
9002054a:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002054e:	fb13 f808 	smulbb	r8, r3, r8
90020552:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90020556:	fb04 a40e 	mla	r4, r4, lr, sl
9002055a:	f10c 0301 	add.w	r3, ip, #1
9002055e:	fb0b 8e0e 	mla	lr, fp, lr, r8
90020562:	b2a4      	uxth	r4, r4
90020564:	fa1f fe8e 	uxth.w	lr, lr
90020568:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002056c:	f104 0a01 	add.w	sl, r4, #1
90020570:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90020574:	f10e 0c01 	add.w	ip, lr, #1
90020578:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002057c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020580:	0964      	lsrs	r4, r4, #5
90020582:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020586:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002058a:	ea4c 0c03 	orr.w	ip, ip, r3
9002058e:	9b03      	ldr	r3, [sp, #12]
90020590:	ea4c 0c04 	orr.w	ip, ip, r4
90020594:	f8a3 c000 	strh.w	ip, [r3]
90020598:	b007      	add	sp, #28
9002059a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002059e:	af05      	add	r7, sp, #20
900205a0:	e756      	b.n	90020450 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900205a2:	ad05      	add	r5, sp, #20
900205a4:	462f      	mov	r7, r5
900205a6:	e761      	b.n	9002046c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900205a8:	ad05      	add	r5, sp, #20
900205aa:	e75f      	b.n	9002046c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900205ac:	ae05      	add	r6, sp, #20
900205ae:	e772      	b.n	90020496 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900205b0:	ab05      	add	r3, sp, #20
900205b2:	461e      	mov	r6, r3
900205b4:	e77e      	b.n	900204b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900205b6:	ab05      	add	r3, sp, #20
900205b8:	e77c      	b.n	900204b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900205ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900205ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900205be:	b095      	sub	sp, #84	; 0x54
900205c0:	9212      	str	r2, [sp, #72]	; 0x48
900205c2:	9309      	str	r3, [sp, #36]	; 0x24
900205c4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900205c6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
900205ca:	9013      	str	r0, [sp, #76]	; 0x4c
900205cc:	930f      	str	r3, [sp, #60]	; 0x3c
900205ce:	6850      	ldr	r0, [r2, #4]
900205d0:	910e      	str	r1, [sp, #56]	; 0x38
900205d2:	6812      	ldr	r2, [r2, #0]
900205d4:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
900205d8:	fb00 1303 	mla	r3, r0, r3, r1
900205dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900205e0:	930a      	str	r3, [sp, #40]	; 0x28
900205e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
900205e4:	681b      	ldr	r3, [r3, #0]
900205e6:	930d      	str	r3, [sp, #52]	; 0x34
900205e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
900205ea:	685c      	ldr	r4, [r3, #4]
900205ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900205ee:	3404      	adds	r4, #4
900205f0:	43db      	mvns	r3, r3
900205f2:	b2db      	uxtb	r3, r3
900205f4:	930b      	str	r3, [sp, #44]	; 0x2c
900205f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900205f8:	2b00      	cmp	r3, #0
900205fa:	dc03      	bgt.n	90020604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900205fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
900205fe:	2b00      	cmp	r3, #0
90020600:	f340 8255 	ble.w	90020aae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020604:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020606:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002060a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002060e:	1e48      	subs	r0, r1, #1
90020610:	1e55      	subs	r5, r2, #1
90020612:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020614:	2b00      	cmp	r3, #0
90020616:	f340 80f9 	ble.w	9002080c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9002061a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9002061c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002061e:	1436      	asrs	r6, r6, #16
90020620:	ea4f 4323 	mov.w	r3, r3, asr #16
90020624:	d406      	bmi.n	90020634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020626:	4286      	cmp	r6, r0
90020628:	da04      	bge.n	90020634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002062a:	2b00      	cmp	r3, #0
9002062c:	db02      	blt.n	90020634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002062e:	42ab      	cmp	r3, r5
90020630:	f2c0 80ed 	blt.w	9002080e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90020634:	3601      	adds	r6, #1
90020636:	f100 80da 	bmi.w	900207ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002063a:	42b1      	cmp	r1, r6
9002063c:	f2c0 80d7 	blt.w	900207ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020640:	3301      	adds	r3, #1
90020642:	f100 80d4 	bmi.w	900207ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020646:	429a      	cmp	r2, r3
90020648:	f2c0 80d1 	blt.w	900207ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002064c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002064e:	9311      	str	r3, [sp, #68]	; 0x44
90020650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020652:	930c      	str	r3, [sp, #48]	; 0x30
90020654:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020656:	2b00      	cmp	r3, #0
90020658:	f340 80fa 	ble.w	90020850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002065c:	9826      	ldr	r0, [sp, #152]	; 0x98
9002065e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020660:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020662:	68c6      	ldr	r6, [r0, #12]
90020664:	141d      	asrs	r5, r3, #16
90020666:	981f      	ldr	r0, [sp, #124]	; 0x7c
90020668:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002066c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002066e:	9a26      	ldr	r2, [sp, #152]	; 0x98
90020670:	1400      	asrs	r0, r0, #16
90020672:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020676:	6892      	ldr	r2, [r2, #8]
90020678:	f100 813e 	bmi.w	900208f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002067c:	1e57      	subs	r7, r2, #1
9002067e:	42b8      	cmp	r0, r7
90020680:	f280 813a 	bge.w	900208f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020684:	2d00      	cmp	r5, #0
90020686:	f2c0 8137 	blt.w	900208f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002068a:	1e77      	subs	r7, r6, #1
9002068c:	42bd      	cmp	r5, r7
9002068e:	f280 8133 	bge.w	900208f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020692:	b212      	sxth	r2, r2
90020694:	fb05 0002 	mla	r0, r5, r2, r0
90020698:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002069a:	f815 a000 	ldrb.w	sl, [r5, r0]
9002069e:	182e      	adds	r6, r5, r0
900206a0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900206a4:	eb04 050a 	add.w	r5, r4, sl
900206a8:	2b00      	cmp	r3, #0
900206aa:	f000 8117 	beq.w	900208dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900206ae:	f896 c001 	ldrb.w	ip, [r6, #1]
900206b2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900206b6:	44a4      	add	ip, r4
900206b8:	2900      	cmp	r1, #0
900206ba:	f000 8117 	beq.w	900208ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900206be:	18b0      	adds	r0, r6, r2
900206c0:	5cb2      	ldrb	r2, [r6, r2]
900206c2:	7840      	ldrb	r0, [r0, #1]
900206c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900206c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900206cc:	4422      	add	r2, r4
900206ce:	4420      	add	r0, r4
900206d0:	b29b      	uxth	r3, r3
900206d2:	f89c 7002 	ldrb.w	r7, [ip, #2]
900206d6:	b289      	uxth	r1, r1
900206d8:	f895 b002 	ldrb.w	fp, [r5, #2]
900206dc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900206de:	fb03 f901 	mul.w	r9, r3, r1
900206e2:	011b      	lsls	r3, r3, #4
900206e4:	f8b6 e000 	ldrh.w	lr, [r6]
900206e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900206ec:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
900206f0:	eba3 0309 	sub.w	r3, r3, r9
900206f4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
900206f8:	b289      	uxth	r1, r1
900206fa:	f814 a00a 	ldrb.w	sl, [r4, sl]
900206fe:	b29b      	uxth	r3, r3
90020700:	eba8 0801 	sub.w	r8, r8, r1
90020704:	435f      	muls	r7, r3
90020706:	fa1f f888 	uxth.w	r8, r8
9002070a:	9310      	str	r3, [sp, #64]	; 0x40
9002070c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002070e:	fb08 770b 	mla	r7, r8, fp, r7
90020712:	f892 b002 	ldrb.w	fp, [r2, #2]
90020716:	fb01 770b 	mla	r7, r1, fp, r7
9002071a:	f890 b002 	ldrb.w	fp, [r0, #2]
9002071e:	fb09 770b 	mla	r7, r9, fp, r7
90020722:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90020726:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002072a:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002072e:	fb1b fb03 	smulbb	fp, fp, r3
90020732:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020734:	fb07 b706 	mla	r7, r7, r6, fp
90020738:	f895 b001 	ldrb.w	fp, [r5, #1]
9002073c:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020740:	f89c c000 	ldrb.w	ip, [ip]
90020744:	b2bf      	uxth	r7, r7
90020746:	435d      	muls	r5, r3
90020748:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002074a:	fb08 550b 	mla	r5, r8, fp, r5
9002074e:	f892 b001 	ldrb.w	fp, [r2, #1]
90020752:	fb01 550b 	mla	r5, r1, fp, r5
90020756:	f890 b001 	ldrb.w	fp, [r0, #1]
9002075a:	fb09 550b 	mla	r5, r9, fp, r5
9002075e:	ea4f 0bee 	mov.w	fp, lr, asr #3
90020762:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020766:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002076a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002076e:	fa5f fe8e 	uxtb.w	lr, lr
90020772:	fb1b fb03 	smulbb	fp, fp, r3
90020776:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020778:	fb03 f30c 	mul.w	r3, r3, ip
9002077c:	f892 c000 	ldrb.w	ip, [r2]
90020780:	fb05 b506 	mla	r5, r5, r6, fp
90020784:	fb08 330a 	mla	r3, r8, sl, r3
90020788:	b2ad      	uxth	r5, r5
9002078a:	fb01 330c 	mla	r3, r1, ip, r3
9002078e:	f890 c000 	ldrb.w	ip, [r0]
90020792:	f105 0b01 	add.w	fp, r5, #1
90020796:	fb09 3c0c 	mla	ip, r9, ip, r3
9002079a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002079c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900207a0:	fb1e fe03 	smulbb	lr, lr, r3
900207a4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900207a8:	1c7b      	adds	r3, r7, #1
900207aa:	096d      	lsrs	r5, r5, #5
900207ac:	fb0c e606 	mla	r6, ip, r6, lr
900207b0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900207b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900207b8:	b2b6      	uxth	r6, r6
900207ba:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
900207be:	1c77      	adds	r7, r6, #1
900207c0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
900207c4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900207c8:	431f      	orrs	r7, r3
900207ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900207cc:	433d      	orrs	r5, r7
900207ce:	801d      	strh	r5, [r3, #0]
900207d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900207d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
900207d4:	3302      	adds	r3, #2
900207d6:	930c      	str	r3, [sp, #48]	; 0x30
900207d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900207da:	4413      	add	r3, r2
900207dc:	9a22      	ldr	r2, [sp, #136]	; 0x88
900207de:	931f      	str	r3, [sp, #124]	; 0x7c
900207e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207e2:	4413      	add	r3, r2
900207e4:	9320      	str	r3, [sp, #128]	; 0x80
900207e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900207e8:	3b01      	subs	r3, #1
900207ea:	9311      	str	r3, [sp, #68]	; 0x44
900207ec:	e732      	b.n	90020654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900207ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900207f0:	9e21      	ldr	r6, [sp, #132]	; 0x84
900207f2:	4433      	add	r3, r6
900207f4:	9e22      	ldr	r6, [sp, #136]	; 0x88
900207f6:	931f      	str	r3, [sp, #124]	; 0x7c
900207f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207fa:	4433      	add	r3, r6
900207fc:	9320      	str	r3, [sp, #128]	; 0x80
900207fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020800:	3b01      	subs	r3, #1
90020802:	9309      	str	r3, [sp, #36]	; 0x24
90020804:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020806:	3302      	adds	r3, #2
90020808:	930a      	str	r3, [sp, #40]	; 0x28
9002080a:	e702      	b.n	90020612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002080c:	d027      	beq.n	9002085e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9002080e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020810:	9821      	ldr	r0, [sp, #132]	; 0x84
90020812:	3b01      	subs	r3, #1
90020814:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90020816:	fb00 5003 	mla	r0, r0, r3, r5
9002081a:	1400      	asrs	r0, r0, #16
9002081c:	f53f af16 	bmi.w	9002064c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020820:	3901      	subs	r1, #1
90020822:	4288      	cmp	r0, r1
90020824:	f6bf af12 	bge.w	9002064c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020828:	9922      	ldr	r1, [sp, #136]	; 0x88
9002082a:	9820      	ldr	r0, [sp, #128]	; 0x80
9002082c:	fb01 0303 	mla	r3, r1, r3, r0
90020830:	141b      	asrs	r3, r3, #16
90020832:	f53f af0b 	bmi.w	9002064c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020836:	3a01      	subs	r2, #1
90020838:	4293      	cmp	r3, r2
9002083a:	f6bf af07 	bge.w	9002064c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002083e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020840:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90020844:	9311      	str	r3, [sp, #68]	; 0x44
90020846:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020848:	930c      	str	r3, [sp, #48]	; 0x30
9002084a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002084c:	2b00      	cmp	r3, #0
9002084e:	dc70      	bgt.n	90020932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90020850:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020852:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90020854:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020858:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002085c:	930a      	str	r3, [sp, #40]	; 0x28
9002085e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020860:	2b00      	cmp	r3, #0
90020862:	f340 8124 	ble.w	90020aae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020866:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002086a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9002086c:	ee30 0a04 	vadd.f32	s0, s0, s8
90020870:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020874:	eef0 6a62 	vmov.f32	s13, s5
90020878:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002087c:	ee31 1a05 	vadd.f32	s2, s2, s10
90020880:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020884:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90020888:	eef0 6a43 	vmov.f32	s13, s6
9002088c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020890:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
90020894:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020898:	ee61 7a27 	vmul.f32	s15, s2, s15
9002089c:	ee77 2a62 	vsub.f32	s5, s14, s5
900208a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900208a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900208a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900208ac:	ee12 2a90 	vmov	r2, s5
900208b0:	eef0 2a47 	vmov.f32	s5, s14
900208b4:	fb92 f3f3 	sdiv	r3, r2, r3
900208b8:	ee13 2a10 	vmov	r2, s6
900208bc:	9321      	str	r3, [sp, #132]	; 0x84
900208be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900208c0:	eeb0 3a67 	vmov.f32	s6, s15
900208c4:	fb92 f3f3 	sdiv	r3, r2, r3
900208c8:	9322      	str	r3, [sp, #136]	; 0x88
900208ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900208cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
900208ce:	3b01      	subs	r3, #1
900208d0:	930e      	str	r3, [sp, #56]	; 0x38
900208d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900208d4:	bf08      	it	eq
900208d6:	4613      	moveq	r3, r2
900208d8:	9309      	str	r3, [sp, #36]	; 0x24
900208da:	e68c      	b.n	900205f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900208dc:	b149      	cbz	r1, 900208f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900208de:	5cb2      	ldrb	r2, [r6, r2]
900208e0:	4628      	mov	r0, r5
900208e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900208e6:	4422      	add	r2, r4
900208e8:	46ac      	mov	ip, r5
900208ea:	e6f1      	b.n	900206d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900208ec:	4628      	mov	r0, r5
900208ee:	462a      	mov	r2, r5
900208f0:	e6ee      	b.n	900206d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900208f2:	4628      	mov	r0, r5
900208f4:	462a      	mov	r2, r5
900208f6:	e7f7      	b.n	900208e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900208f8:	1c47      	adds	r7, r0, #1
900208fa:	f53f af69 	bmi.w	900207d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900208fe:	42ba      	cmp	r2, r7
90020900:	f6ff af66 	blt.w	900207d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020904:	1c6f      	adds	r7, r5, #1
90020906:	f53f af63 	bmi.w	900207d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002090a:	42be      	cmp	r6, r7
9002090c:	f6ff af60 	blt.w	900207d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020910:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90020912:	b236      	sxth	r6, r6
90020914:	b212      	sxth	r2, r2
90020916:	9002      	str	r0, [sp, #8]
90020918:	9601      	str	r6, [sp, #4]
9002091a:	9200      	str	r2, [sp, #0]
9002091c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002091e:	e9cd 1705 	strd	r1, r7, [sp, #20]
90020922:	e9cd 5303 	strd	r5, r3, [sp, #12]
90020926:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9002092a:	4623      	mov	r3, r4
9002092c:	f7ff fd59 	bl	900203e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90020930:	e74e      	b.n	900207d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020932:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020934:	9820      	ldr	r0, [sp, #128]	; 0x80
90020936:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002093a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9002093c:	9a26      	ldr	r2, [sp, #152]	; 0x98
9002093e:	1400      	asrs	r0, r0, #16
90020940:	142d      	asrs	r5, r5, #16
90020942:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020944:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020948:	f3c3 3303 	ubfx	r3, r3, #12, #4
9002094c:	fb02 5000 	mla	r0, r2, r0, r5
90020950:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90020952:	f815 9000 	ldrb.w	r9, [r5, r0]
90020956:	182e      	adds	r6, r5, r0
90020958:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9002095c:	eb04 0509 	add.w	r5, r4, r9
90020960:	2b00      	cmp	r3, #0
90020962:	f000 8096 	beq.w	90020a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90020966:	7877      	ldrb	r7, [r6, #1]
90020968:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002096c:	4427      	add	r7, r4
9002096e:	2900      	cmp	r1, #0
90020970:	f000 8097 	beq.w	90020aa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90020974:	18b0      	adds	r0, r6, r2
90020976:	5cb2      	ldrb	r2, [r6, r2]
90020978:	7840      	ldrb	r0, [r0, #1]
9002097a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002097e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020982:	4422      	add	r2, r4
90020984:	4420      	add	r0, r4
90020986:	b29b      	uxth	r3, r3
90020988:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9002098a:	b289      	uxth	r1, r1
9002098c:	f895 b002 	ldrb.w	fp, [r5, #2]
90020990:	f8b6 c000 	ldrh.w	ip, [r6]
90020994:	fb03 f801 	mul.w	r8, r3, r1
90020998:	011b      	lsls	r3, r3, #4
9002099a:	78be      	ldrb	r6, [r7, #2]
9002099c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
900209a0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
900209a4:	eba3 0308 	sub.w	r3, r3, r8
900209a8:	f814 9009 	ldrb.w	r9, [r4, r9]
900209ac:	b289      	uxth	r1, r1
900209ae:	b29b      	uxth	r3, r3
900209b0:	ebae 0e01 	sub.w	lr, lr, r1
900209b4:	435e      	muls	r6, r3
900209b6:	fa1f fe8e 	uxth.w	lr, lr
900209ba:	9310      	str	r3, [sp, #64]	; 0x40
900209bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900209be:	fb0e 660b 	mla	r6, lr, fp, r6
900209c2:	f892 b002 	ldrb.w	fp, [r2, #2]
900209c6:	fb01 660b 	mla	r6, r1, fp, r6
900209ca:	f890 b002 	ldrb.w	fp, [r0, #2]
900209ce:	fb08 660b 	mla	r6, r8, fp, r6
900209d2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900209d6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
900209da:	f3c6 2607 	ubfx	r6, r6, #8, #8
900209de:	fb1b fb03 	smulbb	fp, fp, r3
900209e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900209e4:	fb06 b60a 	mla	r6, r6, sl, fp
900209e8:	f895 b001 	ldrb.w	fp, [r5, #1]
900209ec:	787d      	ldrb	r5, [r7, #1]
900209ee:	783f      	ldrb	r7, [r7, #0]
900209f0:	b2b6      	uxth	r6, r6
900209f2:	435d      	muls	r5, r3
900209f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900209f6:	fb0e 550b 	mla	r5, lr, fp, r5
900209fa:	f892 b001 	ldrb.w	fp, [r2, #1]
900209fe:	fb01 550b 	mla	r5, r1, fp, r5
90020a02:	f890 b001 	ldrb.w	fp, [r0, #1]
90020a06:	fb08 550b 	mla	r5, r8, fp, r5
90020a0a:	ea4f 0bec 	mov.w	fp, ip, asr #3
90020a0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020a12:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90020a16:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020a1a:	fa5f fc8c 	uxtb.w	ip, ip
90020a1e:	fb1b fb03 	smulbb	fp, fp, r3
90020a22:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020a24:	437b      	muls	r3, r7
90020a26:	7817      	ldrb	r7, [r2, #0]
90020a28:	fb05 b50a 	mla	r5, r5, sl, fp
90020a2c:	fb0e 3309 	mla	r3, lr, r9, r3
90020a30:	b2ad      	uxth	r5, r5
90020a32:	fb01 3307 	mla	r3, r1, r7, r3
90020a36:	7807      	ldrb	r7, [r0, #0]
90020a38:	f105 0b01 	add.w	fp, r5, #1
90020a3c:	fb08 3707 	mla	r7, r8, r7, r3
90020a40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020a42:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020a46:	fb1c fc03 	smulbb	ip, ip, r3
90020a4a:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020a4e:	1c73      	adds	r3, r6, #1
90020a50:	096d      	lsrs	r5, r5, #5
90020a52:	fb07 c70a 	mla	r7, r7, sl, ip
90020a56:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90020a5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020a5e:	b2bf      	uxth	r7, r7
90020a60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020a62:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90020a66:	1c7a      	adds	r2, r7, #1
90020a68:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90020a6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020a70:	4316      	orrs	r6, r2
90020a72:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020a74:	432e      	orrs	r6, r5
90020a76:	f823 6b02 	strh.w	r6, [r3], #2
90020a7a:	930c      	str	r3, [sp, #48]	; 0x30
90020a7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020a7e:	4413      	add	r3, r2
90020a80:	9a22      	ldr	r2, [sp, #136]	; 0x88
90020a82:	931f      	str	r3, [sp, #124]	; 0x7c
90020a84:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020a86:	4413      	add	r3, r2
90020a88:	9320      	str	r3, [sp, #128]	; 0x80
90020a8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020a8c:	3b01      	subs	r3, #1
90020a8e:	9311      	str	r3, [sp, #68]	; 0x44
90020a90:	e6db      	b.n	9002084a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90020a92:	b149      	cbz	r1, 90020aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90020a94:	5cb2      	ldrb	r2, [r6, r2]
90020a96:	4628      	mov	r0, r5
90020a98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020a9c:	4422      	add	r2, r4
90020a9e:	462f      	mov	r7, r5
90020aa0:	e771      	b.n	90020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020aa2:	4628      	mov	r0, r5
90020aa4:	462a      	mov	r2, r5
90020aa6:	e76e      	b.n	90020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90020aa8:	4628      	mov	r0, r5
90020aaa:	462a      	mov	r2, r5
90020aac:	e7f7      	b.n	90020a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90020aae:	b015      	add	sp, #84	; 0x54
90020ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020ab4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90020ab4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ab8:	880f      	ldrh	r7, [r1, #0]
90020aba:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90020abe:	023c      	lsls	r4, r7, #8
90020ac0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90020ac4:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90020ac8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90020acc:	017c      	lsls	r4, r7, #5
90020ace:	00ff      	lsls	r7, r7, #3
90020ad0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90020ad4:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
90020ad8:	b2ff      	uxtb	r7, r7
90020ada:	ea4b 0404 	orr.w	r4, fp, r4
90020ade:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90020ae2:	4327      	orrs	r7, r4
90020ae4:	fb05 ca0e 	mla	sl, r5, lr, ip
90020ae8:	2d00      	cmp	r5, #0
90020aea:	9701      	str	r7, [sp, #4]
90020aec:	eb02 080a 	add.w	r8, r2, sl
90020af0:	db7e      	blt.n	90020bf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020af2:	45a9      	cmp	r9, r5
90020af4:	dd7c      	ble.n	90020bf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90020af6:	f1bc 0f00 	cmp.w	ip, #0
90020afa:	db77      	blt.n	90020bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020afc:	45e6      	cmp	lr, ip
90020afe:	dd75      	ble.n	90020bec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90020b00:	f812 700a 	ldrb.w	r7, [r2, sl]
90020b04:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020b08:	441f      	add	r7, r3
90020b0a:	f11c 0201 	adds.w	r2, ip, #1
90020b0e:	d472      	bmi.n	90020bf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020b10:	4596      	cmp	lr, r2
90020b12:	dd70      	ble.n	90020bf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020b14:	2800      	cmp	r0, #0
90020b16:	d06e      	beq.n	90020bf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90020b18:	f898 4001 	ldrb.w	r4, [r8, #1]
90020b1c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90020b20:	441c      	add	r4, r3
90020b22:	3501      	adds	r5, #1
90020b24:	d46b      	bmi.n	90020bfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020b26:	45a9      	cmp	r9, r5
90020b28:	dd69      	ble.n	90020bfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020b2a:	2e00      	cmp	r6, #0
90020b2c:	d067      	beq.n	90020bfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90020b2e:	f1bc 0f00 	cmp.w	ip, #0
90020b32:	db62      	blt.n	90020bfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020b34:	45e6      	cmp	lr, ip
90020b36:	dd60      	ble.n	90020bfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90020b38:	f818 500e 	ldrb.w	r5, [r8, lr]
90020b3c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020b40:	441d      	add	r5, r3
90020b42:	f11c 0201 	adds.w	r2, ip, #1
90020b46:	d45d      	bmi.n	90020c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020b48:	4596      	cmp	lr, r2
90020b4a:	dd5b      	ble.n	90020c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020b4c:	2800      	cmp	r0, #0
90020b4e:	d059      	beq.n	90020c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90020b50:	44c6      	add	lr, r8
90020b52:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020b56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020b5a:	4413      	add	r3, r2
90020b5c:	b280      	uxth	r0, r0
90020b5e:	f897 e002 	ldrb.w	lr, [r7, #2]
90020b62:	b2b2      	uxth	r2, r6
90020b64:	f897 9000 	ldrb.w	r9, [r7]
90020b68:	787f      	ldrb	r7, [r7, #1]
90020b6a:	fb00 f602 	mul.w	r6, r0, r2
90020b6e:	0100      	lsls	r0, r0, #4
90020b70:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90020b74:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90020b78:	1b80      	subs	r0, r0, r6
90020b7a:	fa1f fc82 	uxth.w	ip, r2
90020b7e:	b282      	uxth	r2, r0
90020b80:	78a0      	ldrb	r0, [r4, #2]
90020b82:	eba8 080c 	sub.w	r8, r8, ip
90020b86:	4350      	muls	r0, r2
90020b88:	fa1f f888 	uxth.w	r8, r8
90020b8c:	fb08 0e0e 	mla	lr, r8, lr, r0
90020b90:	78a8      	ldrb	r0, [r5, #2]
90020b92:	fb0c e000 	mla	r0, ip, r0, lr
90020b96:	f893 e002 	ldrb.w	lr, [r3, #2]
90020b9a:	fb06 0e0e 	mla	lr, r6, lr, r0
90020b9e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
90020ba2:	f894 e000 	ldrb.w	lr, [r4]
90020ba6:	fb02 fe0e 	mul.w	lr, r2, lr
90020baa:	fb08 e909 	mla	r9, r8, r9, lr
90020bae:	f895 e000 	ldrb.w	lr, [r5]
90020bb2:	fb0c 990e 	mla	r9, ip, lr, r9
90020bb6:	f893 e000 	ldrb.w	lr, [r3]
90020bba:	785b      	ldrb	r3, [r3, #1]
90020bbc:	fb06 9e0e 	mla	lr, r6, lr, r9
90020bc0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90020bc4:	ea4e 0e00 	orr.w	lr, lr, r0
90020bc8:	7860      	ldrb	r0, [r4, #1]
90020bca:	4350      	muls	r0, r2
90020bcc:	786a      	ldrb	r2, [r5, #1]
90020bce:	fb08 0007 	mla	r0, r8, r7, r0
90020bd2:	fb0c 0202 	mla	r2, ip, r2, r0
90020bd6:	fb06 2303 	mla	r3, r6, r3, r2
90020bda:	095b      	lsrs	r3, r3, #5
90020bdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020be0:	ea4e 0303 	orr.w	r3, lr, r3
90020be4:	800b      	strh	r3, [r1, #0]
90020be6:	b003      	add	sp, #12
90020be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020bec:	af01      	add	r7, sp, #4
90020bee:	e78c      	b.n	90020b0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90020bf0:	ac01      	add	r4, sp, #4
90020bf2:	4627      	mov	r7, r4
90020bf4:	e795      	b.n	90020b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020bf6:	ac01      	add	r4, sp, #4
90020bf8:	e793      	b.n	90020b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90020bfa:	ad01      	add	r5, sp, #4
90020bfc:	e7a1      	b.n	90020b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90020bfe:	ab01      	add	r3, sp, #4
90020c00:	461d      	mov	r5, r3
90020c02:	e7ab      	b.n	90020b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90020c04:	ab01      	add	r3, sp, #4
90020c06:	e7a9      	b.n	90020b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90020c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020c0c:	b08f      	sub	sp, #60	; 0x3c
90020c0e:	920c      	str	r2, [sp, #48]	; 0x30
90020c10:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90020c12:	900d      	str	r0, [sp, #52]	; 0x34
90020c14:	910a      	str	r1, [sp, #40]	; 0x28
90020c16:	6850      	ldr	r0, [r2, #4]
90020c18:	9306      	str	r3, [sp, #24]
90020c1a:	6812      	ldr	r2, [r2, #0]
90020c1c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90020c20:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90020c24:	fb00 1303 	mla	r3, r0, r3, r1
90020c28:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020c2c:	9307      	str	r3, [sp, #28]
90020c2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c30:	681b      	ldr	r3, [r3, #0]
90020c32:	9308      	str	r3, [sp, #32]
90020c34:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c36:	685c      	ldr	r4, [r3, #4]
90020c38:	3404      	adds	r4, #4
90020c3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020c3c:	2b00      	cmp	r3, #0
90020c3e:	dc03      	bgt.n	90020c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90020c40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020c42:	2b00      	cmp	r3, #0
90020c44:	f340 81d5 	ble.w	90020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90020c48:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020c4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020c52:	1e48      	subs	r0, r1, #1
90020c54:	1e56      	subs	r6, r2, #1
90020c56:	9b06      	ldr	r3, [sp, #24]
90020c58:	2b00      	cmp	r3, #0
90020c5a:	f340 80b6 	ble.w	90020dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90020c5e:	ea5f 472b 	movs.w	r7, fp, asr #16
90020c62:	ea4f 4325 	mov.w	r3, r5, asr #16
90020c66:	d406      	bmi.n	90020c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020c68:	4287      	cmp	r7, r0
90020c6a:	da04      	bge.n	90020c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020c6c:	2b00      	cmp	r3, #0
90020c6e:	db02      	blt.n	90020c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90020c70:	42b3      	cmp	r3, r6
90020c72:	f2c0 80ab 	blt.w	90020dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90020c76:	3701      	adds	r7, #1
90020c78:	f100 809c 	bmi.w	90020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020c7c:	42b9      	cmp	r1, r7
90020c7e:	f2c0 8099 	blt.w	90020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020c82:	3301      	adds	r3, #1
90020c84:	f100 8096 	bmi.w	90020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020c88:	429a      	cmp	r2, r3
90020c8a:	f2c0 8093 	blt.w	90020db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020c8e:	9b06      	ldr	r3, [sp, #24]
90020c90:	930b      	str	r3, [sp, #44]	; 0x2c
90020c92:	9b07      	ldr	r3, [sp, #28]
90020c94:	9309      	str	r3, [sp, #36]	; 0x24
90020c96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020c98:	2b00      	cmp	r3, #0
90020c9a:	f340 80b4 	ble.w	90020e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90020c9e:	9820      	ldr	r0, [sp, #128]	; 0x80
90020ca0:	142e      	asrs	r6, r5, #16
90020ca2:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020ca4:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020ca8:	68c7      	ldr	r7, [r0, #12]
90020caa:	ea5f 402b 	movs.w	r0, fp, asr #16
90020cae:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020cb2:	6892      	ldr	r2, [r2, #8]
90020cb4:	f100 80fb 	bmi.w	90020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020cb8:	f102 3cff 	add.w	ip, r2, #4294967295
90020cbc:	4560      	cmp	r0, ip
90020cbe:	f280 80f6 	bge.w	90020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020cc2:	2e00      	cmp	r6, #0
90020cc4:	f2c0 80f3 	blt.w	90020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020cc8:	f107 3cff 	add.w	ip, r7, #4294967295
90020ccc:	4566      	cmp	r6, ip
90020cce:	f280 80ee 	bge.w	90020eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90020cd2:	b212      	sxth	r2, r2
90020cd4:	fb06 0002 	mla	r0, r6, r2, r0
90020cd8:	9e08      	ldr	r6, [sp, #32]
90020cda:	1837      	adds	r7, r6, r0
90020cdc:	5c30      	ldrb	r0, [r6, r0]
90020cde:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90020ce2:	eb04 0c08 	add.w	ip, r4, r8
90020ce6:	2b00      	cmp	r3, #0
90020ce8:	f000 80d3 	beq.w	90020e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90020cec:	787e      	ldrb	r6, [r7, #1]
90020cee:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020cf2:	4426      	add	r6, r4
90020cf4:	2900      	cmp	r1, #0
90020cf6:	f000 80d4 	beq.w	90020ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90020cfa:	18b8      	adds	r0, r7, r2
90020cfc:	5cba      	ldrb	r2, [r7, r2]
90020cfe:	7840      	ldrb	r0, [r0, #1]
90020d00:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020d04:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020d08:	4422      	add	r2, r4
90020d0a:	4420      	add	r0, r4
90020d0c:	b29b      	uxth	r3, r3
90020d0e:	78b7      	ldrb	r7, [r6, #2]
90020d10:	b289      	uxth	r1, r1
90020d12:	f89c a002 	ldrb.w	sl, [ip, #2]
90020d16:	f89c c001 	ldrb.w	ip, [ip, #1]
90020d1a:	fb03 f901 	mul.w	r9, r3, r1
90020d1e:	011b      	lsls	r3, r3, #4
90020d20:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020d24:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90020d28:	eba3 0309 	sub.w	r3, r3, r9
90020d2c:	b289      	uxth	r1, r1
90020d2e:	b29b      	uxth	r3, r3
90020d30:	ebae 0e01 	sub.w	lr, lr, r1
90020d34:	435f      	muls	r7, r3
90020d36:	fa1f fe8e 	uxth.w	lr, lr
90020d3a:	fb0e 770a 	mla	r7, lr, sl, r7
90020d3e:	f892 a002 	ldrb.w	sl, [r2, #2]
90020d42:	fb01 770a 	mla	r7, r1, sl, r7
90020d46:	f890 a002 	ldrb.w	sl, [r0, #2]
90020d4a:	fb09 7a0a 	mla	sl, r9, sl, r7
90020d4e:	f814 7008 	ldrb.w	r7, [r4, r8]
90020d52:	f896 8000 	ldrb.w	r8, [r6]
90020d56:	7876      	ldrb	r6, [r6, #1]
90020d58:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90020d5c:	fb03 f808 	mul.w	r8, r3, r8
90020d60:	4373      	muls	r3, r6
90020d62:	fb0e 8807 	mla	r8, lr, r7, r8
90020d66:	7817      	ldrb	r7, [r2, #0]
90020d68:	fb0e 330c 	mla	r3, lr, ip, r3
90020d6c:	fb01 8807 	mla	r8, r1, r7, r8
90020d70:	7807      	ldrb	r7, [r0, #0]
90020d72:	fb09 8707 	mla	r7, r9, r7, r8
90020d76:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020d7a:	ea47 070a 	orr.w	r7, r7, sl
90020d7e:	f892 a001 	ldrb.w	sl, [r2, #1]
90020d82:	fb01 310a 	mla	r1, r1, sl, r3
90020d86:	f890 a001 	ldrb.w	sl, [r0, #1]
90020d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020d8c:	fb09 1a0a 	mla	sl, r9, sl, r1
90020d90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020d94:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90020d98:	ea47 070a 	orr.w	r7, r7, sl
90020d9c:	801f      	strh	r7, [r3, #0]
90020d9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020da0:	3302      	adds	r3, #2
90020da2:	9309      	str	r3, [sp, #36]	; 0x24
90020da4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90020da6:	449b      	add	fp, r3
90020da8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020daa:	441d      	add	r5, r3
90020dac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020dae:	3b01      	subs	r3, #1
90020db0:	930b      	str	r3, [sp, #44]	; 0x2c
90020db2:	e770      	b.n	90020c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90020db4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90020db6:	449b      	add	fp, r3
90020db8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020dba:	441d      	add	r5, r3
90020dbc:	9b06      	ldr	r3, [sp, #24]
90020dbe:	3b01      	subs	r3, #1
90020dc0:	9306      	str	r3, [sp, #24]
90020dc2:	9b07      	ldr	r3, [sp, #28]
90020dc4:	3302      	adds	r3, #2
90020dc6:	9307      	str	r3, [sp, #28]
90020dc8:	e745      	b.n	90020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90020dca:	d023      	beq.n	90020e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90020dcc:	9b06      	ldr	r3, [sp, #24]
90020dce:	981b      	ldr	r0, [sp, #108]	; 0x6c
90020dd0:	3b01      	subs	r3, #1
90020dd2:	fb00 b003 	mla	r0, r0, r3, fp
90020dd6:	1400      	asrs	r0, r0, #16
90020dd8:	f53f af59 	bmi.w	90020c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020ddc:	3901      	subs	r1, #1
90020dde:	4288      	cmp	r0, r1
90020de0:	f6bf af55 	bge.w	90020c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020de4:	991c      	ldr	r1, [sp, #112]	; 0x70
90020de6:	fb01 5303 	mla	r3, r1, r3, r5
90020dea:	141b      	asrs	r3, r3, #16
90020dec:	f53f af4f 	bmi.w	90020c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020df0:	3a01      	subs	r2, #1
90020df2:	4293      	cmp	r3, r2
90020df4:	f6bf af4b 	bge.w	90020c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020df8:	9b06      	ldr	r3, [sp, #24]
90020dfa:	9309      	str	r3, [sp, #36]	; 0x24
90020dfc:	9b07      	ldr	r3, [sp, #28]
90020dfe:	930b      	str	r3, [sp, #44]	; 0x2c
90020e00:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e02:	2b00      	cmp	r3, #0
90020e04:	dc70      	bgt.n	90020ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90020e06:	9b06      	ldr	r3, [sp, #24]
90020e08:	9a07      	ldr	r2, [sp, #28]
90020e0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020e0e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020e12:	9307      	str	r3, [sp, #28]
90020e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020e16:	2b00      	cmp	r3, #0
90020e18:	f340 80eb 	ble.w	90020ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90020e1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020e20:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020e22:	ee30 0a04 	vadd.f32	s0, s0, s8
90020e26:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020e2a:	eef0 6a62 	vmov.f32	s13, s5
90020e2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020e32:	ee31 1a05 	vadd.f32	s2, s2, s10
90020e36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020e3a:	ee16 ba90 	vmov	fp, s13
90020e3e:	eef0 6a43 	vmov.f32	s13, s6
90020e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020e46:	ee16 5a90 	vmov	r5, s13
90020e4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020e4e:	ee61 7a27 	vmul.f32	s15, s2, s15
90020e52:	ee77 2a62 	vsub.f32	s5, s14, s5
90020e56:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020e5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020e5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020e62:	ee12 2a90 	vmov	r2, s5
90020e66:	eef0 2a47 	vmov.f32	s5, s14
90020e6a:	fb92 f3f3 	sdiv	r3, r2, r3
90020e6e:	ee13 2a10 	vmov	r2, s6
90020e72:	931b      	str	r3, [sp, #108]	; 0x6c
90020e74:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020e76:	eeb0 3a67 	vmov.f32	s6, s15
90020e7a:	fb92 f3f3 	sdiv	r3, r2, r3
90020e7e:	931c      	str	r3, [sp, #112]	; 0x70
90020e80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020e82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90020e84:	3b01      	subs	r3, #1
90020e86:	930a      	str	r3, [sp, #40]	; 0x28
90020e88:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020e8a:	bf08      	it	eq
90020e8c:	4613      	moveq	r3, r2
90020e8e:	9306      	str	r3, [sp, #24]
90020e90:	e6d3      	b.n	90020c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90020e92:	b149      	cbz	r1, 90020ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90020e94:	5cba      	ldrb	r2, [r7, r2]
90020e96:	4660      	mov	r0, ip
90020e98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020e9c:	4422      	add	r2, r4
90020e9e:	4666      	mov	r6, ip
90020ea0:	e734      	b.n	90020d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90020ea2:	4660      	mov	r0, ip
90020ea4:	4662      	mov	r2, ip
90020ea6:	e731      	b.n	90020d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90020ea8:	4660      	mov	r0, ip
90020eaa:	4662      	mov	r2, ip
90020eac:	e7f7      	b.n	90020e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90020eae:	f110 0c01 	adds.w	ip, r0, #1
90020eb2:	f53f af74 	bmi.w	90020d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020eb6:	4562      	cmp	r2, ip
90020eb8:	f6ff af71 	blt.w	90020d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020ebc:	f116 0c01 	adds.w	ip, r6, #1
90020ec0:	f53f af6d 	bmi.w	90020d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020ec4:	4567      	cmp	r7, ip
90020ec6:	f6ff af6a 	blt.w	90020d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020eca:	b23f      	sxth	r7, r7
90020ecc:	b212      	sxth	r2, r2
90020ece:	9701      	str	r7, [sp, #4]
90020ed0:	9200      	str	r2, [sp, #0]
90020ed2:	e9cd 3104 	strd	r3, r1, [sp, #16]
90020ed6:	e9cd 0602 	strd	r0, r6, [sp, #8]
90020eda:	4623      	mov	r3, r4
90020edc:	980d      	ldr	r0, [sp, #52]	; 0x34
90020ede:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90020ee2:	f7ff fde7 	bl	90020ab4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90020ee6:	e75a      	b.n	90020d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020ee8:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020eea:	ea4f 462b 	mov.w	r6, fp, asr #16
90020eee:	1428      	asrs	r0, r5, #16
90020ef0:	f3cb 3303 	ubfx	r3, fp, #12, #4
90020ef4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020ef8:	f3c5 3103 	ubfx	r1, r5, #12, #4
90020efc:	fb02 6000 	mla	r0, r2, r0, r6
90020f00:	9e08      	ldr	r6, [sp, #32]
90020f02:	f816 8000 	ldrb.w	r8, [r6, r0]
90020f06:	1837      	adds	r7, r6, r0
90020f08:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90020f0c:	eb04 0c08 	add.w	ip, r4, r8
90020f10:	2b00      	cmp	r3, #0
90020f12:	d060      	beq.n	90020fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90020f14:	787e      	ldrb	r6, [r7, #1]
90020f16:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020f1a:	4426      	add	r6, r4
90020f1c:	2900      	cmp	r1, #0
90020f1e:	d062      	beq.n	90020fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90020f20:	18b8      	adds	r0, r7, r2
90020f22:	5cba      	ldrb	r2, [r7, r2]
90020f24:	7840      	ldrb	r0, [r0, #1]
90020f26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020f2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020f2e:	4422      	add	r2, r4
90020f30:	4420      	add	r0, r4
90020f32:	b29b      	uxth	r3, r3
90020f34:	78b7      	ldrb	r7, [r6, #2]
90020f36:	b289      	uxth	r1, r1
90020f38:	f89c a002 	ldrb.w	sl, [ip, #2]
90020f3c:	f89c c001 	ldrb.w	ip, [ip, #1]
90020f40:	fb03 f901 	mul.w	r9, r3, r1
90020f44:	011b      	lsls	r3, r3, #4
90020f46:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020f4a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90020f4e:	eba3 0309 	sub.w	r3, r3, r9
90020f52:	b289      	uxth	r1, r1
90020f54:	b29b      	uxth	r3, r3
90020f56:	ebae 0e01 	sub.w	lr, lr, r1
90020f5a:	435f      	muls	r7, r3
90020f5c:	fa1f fe8e 	uxth.w	lr, lr
90020f60:	fb0e 770a 	mla	r7, lr, sl, r7
90020f64:	f892 a002 	ldrb.w	sl, [r2, #2]
90020f68:	fb01 770a 	mla	r7, r1, sl, r7
90020f6c:	f890 a002 	ldrb.w	sl, [r0, #2]
90020f70:	fb09 7a0a 	mla	sl, r9, sl, r7
90020f74:	f814 7008 	ldrb.w	r7, [r4, r8]
90020f78:	f896 8000 	ldrb.w	r8, [r6]
90020f7c:	7876      	ldrb	r6, [r6, #1]
90020f7e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90020f82:	fb03 f808 	mul.w	r8, r3, r8
90020f86:	4373      	muls	r3, r6
90020f88:	7856      	ldrb	r6, [r2, #1]
90020f8a:	fb0e 8807 	mla	r8, lr, r7, r8
90020f8e:	7817      	ldrb	r7, [r2, #0]
90020f90:	fb0e 330c 	mla	r3, lr, ip, r3
90020f94:	fb01 8807 	mla	r8, r1, r7, r8
90020f98:	7807      	ldrb	r7, [r0, #0]
90020f9a:	fb01 3306 	mla	r3, r1, r6, r3
90020f9e:	fb09 8707 	mla	r7, r9, r7, r8
90020fa2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020fa6:	ea47 070a 	orr.w	r7, r7, sl
90020faa:	f890 a001 	ldrb.w	sl, [r0, #1]
90020fae:	fb09 3a0a 	mla	sl, r9, sl, r3
90020fb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020fb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90020fb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90020fbc:	ea47 070a 	orr.w	r7, r7, sl
90020fc0:	f823 7b02 	strh.w	r7, [r3], #2
90020fc4:	930b      	str	r3, [sp, #44]	; 0x2c
90020fc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90020fc8:	449b      	add	fp, r3
90020fca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020fcc:	441d      	add	r5, r3
90020fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020fd0:	3b01      	subs	r3, #1
90020fd2:	9309      	str	r3, [sp, #36]	; 0x24
90020fd4:	e714      	b.n	90020e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90020fd6:	b149      	cbz	r1, 90020fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90020fd8:	5cba      	ldrb	r2, [r7, r2]
90020fda:	4660      	mov	r0, ip
90020fdc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020fe0:	4422      	add	r2, r4
90020fe2:	4666      	mov	r6, ip
90020fe4:	e7a5      	b.n	90020f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90020fe6:	4660      	mov	r0, ip
90020fe8:	4662      	mov	r2, ip
90020fea:	e7a2      	b.n	90020f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90020fec:	4660      	mov	r0, ip
90020fee:	4662      	mov	r2, ip
90020ff0:	e7f7      	b.n	90020fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90020ff2:	b00f      	add	sp, #60	; 0x3c
90020ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90020ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ffc:	b085      	sub	sp, #20
90020ffe:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90021002:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90021006:	9102      	str	r1, [sp, #8]
90021008:	2c00      	cmp	r4, #0
9002100a:	fb04 710c 	mla	r1, r4, ip, r7
9002100e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90021012:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90021016:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9002101a:	eb02 0e01 	add.w	lr, r2, r1
9002101e:	f2c0 8122 	blt.w	90021266 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021022:	45a0      	cmp	r8, r4
90021024:	f340 811f 	ble.w	90021266 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021028:	2f00      	cmp	r7, #0
9002102a:	f2c0 811a 	blt.w	90021262 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002102e:	45bc      	cmp	ip, r7
90021030:	f340 8117 	ble.w	90021262 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90021034:	5c52      	ldrb	r2, [r2, r1]
90021036:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002103a:	1c7a      	adds	r2, r7, #1
9002103c:	f100 8116 	bmi.w	9002126c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021040:	4594      	cmp	ip, r2
90021042:	f340 8113 	ble.w	9002126c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021046:	2e00      	cmp	r6, #0
90021048:	f000 8112 	beq.w	90021270 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9002104c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021050:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021054:	3401      	adds	r4, #1
90021056:	f100 810f 	bmi.w	90021278 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002105a:	45a0      	cmp	r8, r4
9002105c:	f340 810c 	ble.w	90021278 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021060:	2800      	cmp	r0, #0
90021062:	f000 810c 	beq.w	9002127e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90021066:	2f00      	cmp	r7, #0
90021068:	f2c0 8104 	blt.w	90021274 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002106c:	45bc      	cmp	ip, r7
9002106e:	f340 8101 	ble.w	90021274 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021072:	f81e 200c 	ldrb.w	r2, [lr, ip]
90021076:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002107a:	3701      	adds	r7, #1
9002107c:	f100 8102 	bmi.w	90021284 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021080:	45bc      	cmp	ip, r7
90021082:	f340 80ff 	ble.w	90021284 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021086:	2e00      	cmp	r6, #0
90021088:	f000 80fe 	beq.w	90021288 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002108c:	44f4      	add	ip, lr
9002108e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90021092:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90021096:	b2b6      	uxth	r6, r6
90021098:	b280      	uxth	r0, r0
9002109a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002109e:	fb00 fe06 	mul.w	lr, r0, r6
900210a2:	0136      	lsls	r6, r6, #4
900210a4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900210a8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900210ac:	eba6 070e 	sub.w	r7, r6, lr
900210b0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900210b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
900210b8:	b280      	uxth	r0, r0
900210ba:	b2bf      	uxth	r7, r7
900210bc:	1a1b      	subs	r3, r3, r0
900210be:	ea4f 6812 	mov.w	r8, r2, lsr #24
900210c2:	fb0a f607 	mul.w	r6, sl, r7
900210c6:	b29b      	uxth	r3, r3
900210c8:	fb0b 6603 	mla	r6, fp, r3, r6
900210cc:	fb00 6609 	mla	r6, r0, r9, r6
900210d0:	fb0e 6608 	mla	r6, lr, r8, r6
900210d4:	f3c6 2607 	ubfx	r6, r6, #8, #8
900210d8:	9600      	str	r6, [sp, #0]
900210da:	2e00      	cmp	r6, #0
900210dc:	f000 80be 	beq.w	9002125c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900210e0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900210e4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900210e8:	9e02      	ldr	r6, [sp, #8]
900210ea:	fb0b fc0c 	mul.w	ip, fp, ip
900210ee:	fb0b f505 	mul.w	r5, fp, r5
900210f2:	8836      	ldrh	r6, [r6, #0]
900210f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900210f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900210fc:	9501      	str	r5, [sp, #4]
900210fe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90021102:	44dc      	add	ip, fp
90021104:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021108:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002110c:	9503      	str	r5, [sp, #12]
9002110e:	9d01      	ldr	r5, [sp, #4]
90021110:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90021114:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021118:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002111c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021120:	fb0a fc0c 	mul.w	ip, sl, ip
90021124:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90021128:	fb0a fa01 	mul.w	sl, sl, r1
9002112c:	ea4f 251c 	mov.w	r5, ip, lsr #8
90021130:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021134:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90021138:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002113c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90021140:	4465      	add	r5, ip
90021142:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021146:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002114a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002114e:	fb09 fc0c 	mul.w	ip, r9, ip
90021152:	0a2d      	lsrs	r5, r5, #8
90021154:	fb09 f904 	mul.w	r9, r9, r4
90021158:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002115c:	ea4f 211c 	mov.w	r1, ip, lsr #8
90021160:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021164:	f509 7480 	add.w	r4, r9, #256	; 0x100
90021168:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002116c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021170:	437d      	muls	r5, r7
90021172:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90021176:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002117a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002117e:	4461      	add	r1, ip
90021180:	fb08 f404 	mul.w	r4, r8, r4
90021184:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021188:	fb08 f802 	mul.w	r8, r8, r2
9002118c:	0a09      	lsrs	r1, r1, #8
9002118e:	0a22      	lsrs	r2, r4, #8
90021190:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90021194:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021198:	fb07 f70a 	mul.w	r7, r7, sl
9002119c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900211a0:	4414      	add	r4, r2
900211a2:	f508 7280 	add.w	r2, r8, #256	; 0x100
900211a6:	0a24      	lsrs	r4, r4, #8
900211a8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900211ac:	9a03      	ldr	r2, [sp, #12]
900211ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900211b2:	fb02 5503 	mla	r5, r2, r3, r5
900211b6:	ea4f 2818 	mov.w	r8, r8, lsr #8
900211ba:	9a00      	ldr	r2, [sp, #0]
900211bc:	fb04 540e 	mla	r4, r4, lr, r5
900211c0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900211c4:	1235      	asrs	r5, r6, #8
900211c6:	fb01 4100 	mla	r1, r1, r0, r4
900211ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900211ce:	0a09      	lsrs	r1, r1, #8
900211d0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900211d4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900211d8:	fb03 7101 	mla	r1, r3, r1, r7
900211dc:	fb0e 1e08 	mla	lr, lr, r8, r1
900211e0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900211e4:	fb00 e101 	mla	r1, r0, r1, lr
900211e8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900211ec:	b287      	uxth	r7, r0
900211ee:	0a09      	lsrs	r1, r1, #8
900211f0:	437a      	muls	r2, r7
900211f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900211f6:	1c53      	adds	r3, r2, #1
900211f8:	4321      	orrs	r1, r4
900211fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900211fe:	0c0a      	lsrs	r2, r1, #16
90021200:	f3c1 2407 	ubfx	r4, r1, #8, #8
90021204:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90021208:	b2c8      	uxtb	r0, r1
9002120a:	fb12 f207 	smulbb	r2, r2, r7
9002120e:	fb14 f407 	smulbb	r4, r4, r7
90021212:	b2db      	uxtb	r3, r3
90021214:	fb10 f007 	smulbb	r0, r0, r7
90021218:	fb05 2503 	mla	r5, r5, r3, r2
9002121c:	10f2      	asrs	r2, r6, #3
9002121e:	00f6      	lsls	r6, r6, #3
90021220:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021224:	b2ad      	uxth	r5, r5
90021226:	b2f6      	uxtb	r6, r6
90021228:	fb02 4203 	mla	r2, r2, r3, r4
9002122c:	fb06 0303 	mla	r3, r6, r3, r0
90021230:	b294      	uxth	r4, r2
90021232:	b299      	uxth	r1, r3
90021234:	1c6b      	adds	r3, r5, #1
90021236:	1c62      	adds	r2, r4, #1
90021238:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002123c:	1c4b      	adds	r3, r1, #1
9002123e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90021242:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021246:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002124a:	0952      	lsrs	r2, r2, #5
9002124c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021250:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021254:	432b      	orrs	r3, r5
90021256:	4313      	orrs	r3, r2
90021258:	9a02      	ldr	r2, [sp, #8]
9002125a:	8013      	strh	r3, [r2, #0]
9002125c:	b005      	add	sp, #20
9002125e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021262:	2500      	movs	r5, #0
90021264:	e6e9      	b.n	9002103a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90021266:	2100      	movs	r1, #0
90021268:	460d      	mov	r5, r1
9002126a:	e6f3      	b.n	90021054 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002126c:	2100      	movs	r1, #0
9002126e:	e6f1      	b.n	90021054 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021270:	4631      	mov	r1, r6
90021272:	e6ef      	b.n	90021054 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021274:	2400      	movs	r4, #0
90021276:	e700      	b.n	9002107a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021278:	2200      	movs	r2, #0
9002127a:	4614      	mov	r4, r2
9002127c:	e70b      	b.n	90021096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002127e:	4602      	mov	r2, r0
90021280:	4604      	mov	r4, r0
90021282:	e708      	b.n	90021096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021284:	2200      	movs	r2, #0
90021286:	e706      	b.n	90021096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021288:	4632      	mov	r2, r6
9002128a:	e704      	b.n	90021096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002128c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002128c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021290:	b09f      	sub	sp, #124	; 0x7c
90021292:	921b      	str	r2, [sp, #108]	; 0x6c
90021294:	9309      	str	r3, [sp, #36]	; 0x24
90021296:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90021298:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9002129c:	901d      	str	r0, [sp, #116]	; 0x74
9002129e:	931c      	str	r3, [sp, #112]	; 0x70
900212a0:	6850      	ldr	r0, [r2, #4]
900212a2:	9119      	str	r1, [sp, #100]	; 0x64
900212a4:	6812      	ldr	r2, [r2, #0]
900212a6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900212a8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
900212ac:	fb00 1303 	mla	r3, r0, r3, r1
900212b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900212b4:	930c      	str	r3, [sp, #48]	; 0x30
900212b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900212b8:	681b      	ldr	r3, [r3, #0]
900212ba:	9312      	str	r3, [sp, #72]	; 0x48
900212bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900212be:	685e      	ldr	r6, [r3, #4]
900212c0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
900212c4:	3604      	adds	r6, #4
900212c6:	930d      	str	r3, [sp, #52]	; 0x34
900212c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900212ca:	2b00      	cmp	r3, #0
900212cc:	dc03      	bgt.n	900212d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900212ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900212d0:	2b00      	cmp	r3, #0
900212d2:	f340 8387 	ble.w	900219e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900212d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900212d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900212dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900212e0:	1e48      	subs	r0, r1, #1
900212e2:	1e57      	subs	r7, r2, #1
900212e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900212e6:	2b00      	cmp	r3, #0
900212e8:	f340 8194 	ble.w	90021614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900212ec:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900212ee:	142b      	asrs	r3, r5, #16
900212f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900212f4:	d406      	bmi.n	90021304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212f6:	4584      	cmp	ip, r0
900212f8:	da04      	bge.n	90021304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212fa:	2b00      	cmp	r3, #0
900212fc:	db02      	blt.n	90021304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212fe:	42bb      	cmp	r3, r7
90021300:	f2c0 8189 	blt.w	90021616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021304:	f11c 0c01 	adds.w	ip, ip, #1
90021308:	f100 8177 	bmi.w	900215fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002130c:	4561      	cmp	r1, ip
9002130e:	f2c0 8174 	blt.w	900215fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021312:	3301      	adds	r3, #1
90021314:	f100 8171 	bmi.w	900215fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021318:	429a      	cmp	r2, r3
9002131a:	f2c0 816e 	blt.w	900215fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002131e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021320:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90021322:	931a      	str	r3, [sp, #104]	; 0x68
90021324:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90021326:	2b00      	cmp	r3, #0
90021328:	f340 8193 	ble.w	90021652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9002132c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002132e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021332:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021336:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002133a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002133c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90021340:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021342:	141b      	asrs	r3, r3, #16
90021344:	f100 81d6 	bmi.w	900216f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021348:	f100 38ff 	add.w	r8, r0, #4294967295
9002134c:	4543      	cmp	r3, r8
9002134e:	f280 81d1 	bge.w	900216f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021352:	f1bc 0f00 	cmp.w	ip, #0
90021356:	f2c0 81cd 	blt.w	900216f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002135a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002135e:	45c4      	cmp	ip, r8
90021360:	f280 81c8 	bge.w	900216f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021364:	b200      	sxth	r0, r0
90021366:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021368:	fb0c 3300 	mla	r3, ip, r0, r3
9002136c:	eb04 0803 	add.w	r8, r4, r3
90021370:	5ce3      	ldrb	r3, [r4, r3]
90021372:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021376:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002137a:	2a00      	cmp	r2, #0
9002137c:	f000 81af 	beq.w	900216de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021380:	f898 c001 	ldrb.w	ip, [r8, #1]
90021384:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021388:	940e      	str	r4, [sp, #56]	; 0x38
9002138a:	0e24      	lsrs	r4, r4, #24
9002138c:	9415      	str	r4, [sp, #84]	; 0x54
9002138e:	b179      	cbz	r1, 900213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021390:	eb08 0c00 	add.w	ip, r8, r0
90021394:	f818 0000 	ldrb.w	r0, [r8, r0]
90021398:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002139c:	900a      	str	r0, [sp, #40]	; 0x28
9002139e:	0e00      	lsrs	r0, r0, #24
900213a0:	9013      	str	r0, [sp, #76]	; 0x4c
900213a2:	f89c 0001 	ldrb.w	r0, [ip, #1]
900213a6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900213aa:	900f      	str	r0, [sp, #60]	; 0x3c
900213ac:	0e00      	lsrs	r0, r0, #24
900213ae:	9016      	str	r0, [sp, #88]	; 0x58
900213b0:	b292      	uxth	r2, r2
900213b2:	9815      	ldr	r0, [sp, #84]	; 0x54
900213b4:	b289      	uxth	r1, r1
900213b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900213b8:	fb02 f901 	mul.w	r9, r2, r1
900213bc:	0112      	lsls	r2, r2, #4
900213be:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900213c2:	eba2 0809 	sub.w	r8, r2, r9
900213c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900213ca:	b289      	uxth	r1, r1
900213cc:	fa1f f888 	uxth.w	r8, r8
900213d0:	1a52      	subs	r2, r2, r1
900213d2:	fb08 f000 	mul.w	r0, r8, r0
900213d6:	b292      	uxth	r2, r2
900213d8:	fb02 000e 	mla	r0, r2, lr, r0
900213dc:	fb01 0004 	mla	r0, r1, r4, r0
900213e0:	9c16      	ldr	r4, [sp, #88]	; 0x58
900213e2:	fb09 0004 	mla	r0, r9, r4, r0
900213e6:	f3c0 2007 	ubfx	r0, r0, #8, #8
900213ea:	2800      	cmp	r0, #0
900213ec:	f000 80fa 	beq.w	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900213f0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900213f4:	d01b      	beq.n	9002142e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900213f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900213fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900213fe:	fb0e fa0a 	mul.w	sl, lr, sl
90021402:	fb0e fe03 	mul.w	lr, lr, r3
90021406:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002140a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002140e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90021412:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021416:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002141a:	4453      	add	r3, sl
9002141c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021420:	0a1b      	lsrs	r3, r3, #8
90021422:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021426:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002142a:	ea43 030c 	orr.w	r3, r3, ip
9002142e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021430:	2cff      	cmp	r4, #255	; 0xff
90021432:	d021      	beq.n	90021478 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90021434:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021436:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002143a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002143c:	fb04 fb0b 	mul.w	fp, r4, fp
90021440:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021442:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021446:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021448:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002144c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021450:	fb04 fa0a 	mul.w	sl, r4, sl
90021454:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021458:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002145c:	44de      	add	lr, fp
9002145e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021462:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021466:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002146a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002146e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021472:	ea4e 040a 	orr.w	r4, lr, sl
90021476:	940e      	str	r4, [sp, #56]	; 0x38
90021478:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002147a:	2cff      	cmp	r4, #255	; 0xff
9002147c:	d021      	beq.n	900214c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002147e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021480:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021484:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021486:	fb04 fb0b 	mul.w	fp, r4, fp
9002148a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002148c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021490:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021492:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021496:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002149a:	fb04 fa0a 	mul.w	sl, r4, sl
9002149e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900214a2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900214a6:	44de      	add	lr, fp
900214a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900214ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900214b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900214b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900214b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900214bc:	ea4e 040a 	orr.w	r4, lr, sl
900214c0:	940a      	str	r4, [sp, #40]	; 0x28
900214c2:	9c16      	ldr	r4, [sp, #88]	; 0x58
900214c4:	2cff      	cmp	r4, #255	; 0xff
900214c6:	d021      	beq.n	9002150c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900214c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900214ca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900214ce:	9c16      	ldr	r4, [sp, #88]	; 0x58
900214d0:	fb04 fb0b 	mul.w	fp, r4, fp
900214d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900214d6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900214da:	9c16      	ldr	r4, [sp, #88]	; 0x58
900214dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900214e0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900214e4:	fb04 fa0a 	mul.w	sl, r4, sl
900214e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900214ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900214f0:	44de      	add	lr, fp
900214f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900214f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900214fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900214fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021502:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021506:	ea4e 040a 	orr.w	r4, lr, sl
9002150a:	940f      	str	r4, [sp, #60]	; 0x3c
9002150c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002150e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90021512:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021516:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002151a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002151c:	fb08 fc0c 	mul.w	ip, r8, ip
90021520:	fb02 cc0e 	mla	ip, r2, lr, ip
90021524:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021528:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002152a:	fb01 cc0e 	mla	ip, r1, lr, ip
9002152e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021532:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021534:	fb09 cc0e 	mla	ip, r9, lr, ip
90021538:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9002153c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002153e:	fb08 f80e 	mul.w	r8, r8, lr
90021542:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021546:	fb02 8303 	mla	r3, r2, r3, r8
9002154a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002154c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021550:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021554:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90021556:	fb01 330a 	mla	r3, r1, sl, r3
9002155a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
9002155e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90021560:	fb09 3901 	mla	r9, r9, r1, r3
90021564:	883b      	ldrh	r3, [r7, #0]
90021566:	4342      	muls	r2, r0
90021568:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002156c:	1c50      	adds	r0, r2, #1
9002156e:	1219      	asrs	r1, r3, #8
90021570:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90021574:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90021578:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002157c:	ea4c 0c09 	orr.w	ip, ip, r9
90021580:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90021584:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021588:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002158c:	b2c0      	uxtb	r0, r0
9002158e:	fb12 f204 	smulbb	r2, r2, r4
90021592:	fa5f fc8c 	uxtb.w	ip, ip
90021596:	fb1e fe04 	smulbb	lr, lr, r4
9002159a:	fb01 2100 	mla	r1, r1, r0, r2
9002159e:	10da      	asrs	r2, r3, #3
900215a0:	fb1c fc04 	smulbb	ip, ip, r4
900215a4:	00db      	lsls	r3, r3, #3
900215a6:	b289      	uxth	r1, r1
900215a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900215ac:	b2db      	uxtb	r3, r3
900215ae:	fb02 e200 	mla	r2, r2, r0, lr
900215b2:	fb03 c300 	mla	r3, r3, r0, ip
900215b6:	b292      	uxth	r2, r2
900215b8:	fa1f fc83 	uxth.w	ip, r3
900215bc:	1c4b      	adds	r3, r1, #1
900215be:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900215c2:	f10c 0301 	add.w	r3, ip, #1
900215c6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900215ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900215ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900215d2:	430b      	orrs	r3, r1
900215d4:	1c51      	adds	r1, r2, #1
900215d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900215da:	0952      	lsrs	r2, r2, #5
900215dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900215e0:	4313      	orrs	r3, r2
900215e2:	803b      	strh	r3, [r7, #0]
900215e4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900215e6:	3702      	adds	r7, #2
900215e8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900215ea:	441a      	add	r2, r3
900215ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900215ee:	441d      	add	r5, r3
900215f0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900215f2:	9229      	str	r2, [sp, #164]	; 0xa4
900215f4:	3b01      	subs	r3, #1
900215f6:	931a      	str	r3, [sp, #104]	; 0x68
900215f8:	e694      	b.n	90021324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900215fa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900215fc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900215fe:	441c      	add	r4, r3
90021600:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021602:	441d      	add	r5, r3
90021604:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021606:	9429      	str	r4, [sp, #164]	; 0xa4
90021608:	3b01      	subs	r3, #1
9002160a:	9309      	str	r3, [sp, #36]	; 0x24
9002160c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002160e:	3302      	adds	r3, #2
90021610:	930c      	str	r3, [sp, #48]	; 0x30
90021612:	e667      	b.n	900212e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021614:	d024      	beq.n	90021660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90021616:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021618:	982b      	ldr	r0, [sp, #172]	; 0xac
9002161a:	3b01      	subs	r3, #1
9002161c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9002161e:	fb00 4003 	mla	r0, r0, r3, r4
90021622:	1400      	asrs	r0, r0, #16
90021624:	f53f ae7b 	bmi.w	9002131e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021628:	3901      	subs	r1, #1
9002162a:	4288      	cmp	r0, r1
9002162c:	f6bf ae77 	bge.w	9002131e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021630:	992c      	ldr	r1, [sp, #176]	; 0xb0
90021632:	fb01 5303 	mla	r3, r1, r3, r5
90021636:	141b      	asrs	r3, r3, #16
90021638:	f53f ae71 	bmi.w	9002131e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002163c:	3a01      	subs	r2, #1
9002163e:	4293      	cmp	r3, r2
90021640:	f6bf ae6d 	bge.w	9002131e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021644:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90021648:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
9002164c:	f1bb 0f00 	cmp.w	fp, #0
90021650:	dc70      	bgt.n	90021734 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90021652:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021654:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021658:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002165a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002165e:	930c      	str	r3, [sp, #48]	; 0x30
90021660:	9b19      	ldr	r3, [sp, #100]	; 0x64
90021662:	2b00      	cmp	r3, #0
90021664:	f340 81be 	ble.w	900219e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021668:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002166c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002166e:	ee30 0a04 	vadd.f32	s0, s0, s8
90021672:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021676:	eef0 6a62 	vmov.f32	s13, s5
9002167a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002167e:	ee31 1a05 	vadd.f32	s2, s2, s10
90021682:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021686:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9002168a:	eef0 6a43 	vmov.f32	s13, s6
9002168e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021692:	ee16 5a90 	vmov	r5, s13
90021696:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002169a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002169e:	ee77 2a62 	vsub.f32	s5, s14, s5
900216a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900216a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900216aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900216ae:	ee12 2a90 	vmov	r2, s5
900216b2:	eef0 2a47 	vmov.f32	s5, s14
900216b6:	fb92 f3f3 	sdiv	r3, r2, r3
900216ba:	ee13 2a10 	vmov	r2, s6
900216be:	932b      	str	r3, [sp, #172]	; 0xac
900216c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900216c2:	eeb0 3a67 	vmov.f32	s6, s15
900216c6:	fb92 f3f3 	sdiv	r3, r2, r3
900216ca:	932c      	str	r3, [sp, #176]	; 0xb0
900216cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
900216ce:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
900216d0:	3b01      	subs	r3, #1
900216d2:	9319      	str	r3, [sp, #100]	; 0x64
900216d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900216d6:	bf08      	it	eq
900216d8:	4613      	moveq	r3, r2
900216da:	9309      	str	r3, [sp, #36]	; 0x24
900216dc:	e5f4      	b.n	900212c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900216de:	2900      	cmp	r1, #0
900216e0:	f43f ae66 	beq.w	900213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900216e4:	f818 0000 	ldrb.w	r0, [r8, r0]
900216e8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900216ec:	900a      	str	r0, [sp, #40]	; 0x28
900216ee:	0e00      	lsrs	r0, r0, #24
900216f0:	9013      	str	r0, [sp, #76]	; 0x4c
900216f2:	e65d      	b.n	900213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900216f4:	f113 0801 	adds.w	r8, r3, #1
900216f8:	f53f af74 	bmi.w	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900216fc:	4540      	cmp	r0, r8
900216fe:	f6ff af71 	blt.w	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021702:	f11c 0801 	adds.w	r8, ip, #1
90021706:	f53f af6d 	bmi.w	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002170a:	45c6      	cmp	lr, r8
9002170c:	f6ff af6a 	blt.w	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021710:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90021712:	b200      	sxth	r0, r0
90021714:	9302      	str	r3, [sp, #8]
90021716:	fa0f f38e 	sxth.w	r3, lr
9002171a:	9000      	str	r0, [sp, #0]
9002171c:	9301      	str	r3, [sp, #4]
9002171e:	4633      	mov	r3, r6
90021720:	981d      	ldr	r0, [sp, #116]	; 0x74
90021722:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021726:	e9cd c203 	strd	ip, r2, [sp, #12]
9002172a:	4639      	mov	r1, r7
9002172c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9002172e:	f7ff fc63 	bl	90020ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90021732:	e757      	b.n	900215e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021734:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021736:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002173a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9002173c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021740:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021742:	1427      	asrs	r7, r4, #16
90021744:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021746:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002174a:	142b      	asrs	r3, r5, #16
9002174c:	fb01 7303 	mla	r3, r1, r3, r7
90021750:	18e7      	adds	r7, r4, r3
90021752:	5ce3      	ldrb	r3, [r4, r3]
90021754:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021758:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002175c:	2a00      	cmp	r2, #0
9002175e:	f000 8137 	beq.w	900219d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90021762:	f897 e001 	ldrb.w	lr, [r7, #1]
90021766:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002176a:	9410      	str	r4, [sp, #64]	; 0x40
9002176c:	0e24      	lsrs	r4, r4, #24
9002176e:	9417      	str	r4, [sp, #92]	; 0x5c
90021770:	b170      	cbz	r0, 90021790 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021772:	eb07 0e01 	add.w	lr, r7, r1
90021776:	5c79      	ldrb	r1, [r7, r1]
90021778:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002177c:	910b      	str	r1, [sp, #44]	; 0x2c
9002177e:	0e09      	lsrs	r1, r1, #24
90021780:	9114      	str	r1, [sp, #80]	; 0x50
90021782:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021786:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002178a:	9111      	str	r1, [sp, #68]	; 0x44
9002178c:	0e09      	lsrs	r1, r1, #24
9002178e:	9118      	str	r1, [sp, #96]	; 0x60
90021790:	b292      	uxth	r2, r2
90021792:	9917      	ldr	r1, [sp, #92]	; 0x5c
90021794:	b280      	uxth	r0, r0
90021796:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021798:	fb02 f800 	mul.w	r8, r2, r0
9002179c:	0112      	lsls	r2, r2, #4
9002179e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900217a2:	eba2 0e08 	sub.w	lr, r2, r8
900217a6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900217aa:	b280      	uxth	r0, r0
900217ac:	fa1f fe8e 	uxth.w	lr, lr
900217b0:	1a12      	subs	r2, r2, r0
900217b2:	fb0e f101 	mul.w	r1, lr, r1
900217b6:	b292      	uxth	r2, r2
900217b8:	fb02 110c 	mla	r1, r2, ip, r1
900217bc:	fb00 1104 	mla	r1, r0, r4, r1
900217c0:	9c18      	ldr	r4, [sp, #96]	; 0x60
900217c2:	fb08 1104 	mla	r1, r8, r4, r1
900217c6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900217ca:	2900      	cmp	r1, #0
900217cc:	f000 80f5 	beq.w	900219ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900217d0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900217d4:	d019      	beq.n	9002180a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900217d6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900217da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900217de:	fb0c fa0a 	mul.w	sl, ip, sl
900217e2:	fb0c fc03 	mul.w	ip, ip, r3
900217e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900217ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900217ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900217f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900217f6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900217fa:	4453      	add	r3, sl
900217fc:	0a3f      	lsrs	r7, r7, #8
900217fe:	0a1b      	lsrs	r3, r3, #8
90021800:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90021804:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021808:	433b      	orrs	r3, r7
9002180a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002180c:	2cff      	cmp	r4, #255	; 0xff
9002180e:	d020      	beq.n	90021852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90021810:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021812:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021816:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021818:	4367      	muls	r7, r4
9002181a:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002181c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021820:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021824:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021826:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002182a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002182e:	fb04 fa0a 	mul.w	sl, r4, sl
90021832:	44bc      	add	ip, r7
90021834:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021838:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002183c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021840:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021844:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021848:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002184c:	ea4c 040a 	orr.w	r4, ip, sl
90021850:	9410      	str	r4, [sp, #64]	; 0x40
90021852:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021854:	2cff      	cmp	r4, #255	; 0xff
90021856:	d020      	beq.n	9002189a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90021858:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002185a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002185e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021860:	4367      	muls	r7, r4
90021862:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021864:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021868:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002186c:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002186e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021872:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021876:	fb04 fa0a 	mul.w	sl, r4, sl
9002187a:	44bc      	add	ip, r7
9002187c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021880:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021884:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021888:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002188c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021890:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021894:	ea4c 040a 	orr.w	r4, ip, sl
90021898:	940b      	str	r4, [sp, #44]	; 0x2c
9002189a:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002189c:	2cff      	cmp	r4, #255	; 0xff
9002189e:	d020      	beq.n	900218e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900218a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
900218a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900218a6:	9c18      	ldr	r4, [sp, #96]	; 0x60
900218a8:	4367      	muls	r7, r4
900218aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
900218ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900218b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900218b4:	9c18      	ldr	r4, [sp, #96]	; 0x60
900218b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900218ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900218be:	fb04 fa0a 	mul.w	sl, r4, sl
900218c2:	44bc      	add	ip, r7
900218c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900218c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900218cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900218d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900218d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900218d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900218dc:	ea4c 040a 	orr.w	r4, ip, sl
900218e0:	9411      	str	r4, [sp, #68]	; 0x44
900218e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
900218e4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900218e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900218ec:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900218f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900218f2:	fb0e f707 	mul.w	r7, lr, r7
900218f6:	fb02 770c 	mla	r7, r2, ip, r7
900218fa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900218fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021900:	fb00 770c 	mla	r7, r0, ip, r7
90021904:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021908:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002190a:	fb08 770c 	mla	r7, r8, ip, r7
9002190e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90021912:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021914:	fb0e fe0c 	mul.w	lr, lr, ip
90021918:	0a3f      	lsrs	r7, r7, #8
9002191a:	fb02 e303 	mla	r3, r2, r3, lr
9002191e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021920:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90021924:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021928:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002192a:	fb00 330a 	mla	r3, r0, sl, r3
9002192e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90021932:	f8b9 0000 	ldrh.w	r0, [r9]
90021936:	fb08 3c0c 	mla	ip, r8, ip, r3
9002193a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002193c:	1202      	asrs	r2, r0, #8
9002193e:	434b      	muls	r3, r1
90021940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021944:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021948:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002194c:	1c59      	adds	r1, r3, #1
9002194e:	ea47 070c 	orr.w	r7, r7, ip
90021952:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021956:	0c3b      	lsrs	r3, r7, #16
90021958:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002195c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90021960:	b2ff      	uxtb	r7, r7
90021962:	fb13 f304 	smulbb	r3, r3, r4
90021966:	b2c9      	uxtb	r1, r1
90021968:	fb1c fc04 	smulbb	ip, ip, r4
9002196c:	fb02 3201 	mla	r2, r2, r1, r3
90021970:	10c3      	asrs	r3, r0, #3
90021972:	fb17 f704 	smulbb	r7, r7, r4
90021976:	00c0      	lsls	r0, r0, #3
90021978:	b292      	uxth	r2, r2
9002197a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002197e:	b2c0      	uxtb	r0, r0
90021980:	fb03 c301 	mla	r3, r3, r1, ip
90021984:	f102 0c01 	add.w	ip, r2, #1
90021988:	fb00 7001 	mla	r0, r0, r1, r7
9002198c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90021990:	b280      	uxth	r0, r0
90021992:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
90021996:	b29b      	uxth	r3, r3
90021998:	1c42      	adds	r2, r0, #1
9002199a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002199e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900219a2:	ea42 020c 	orr.w	r2, r2, ip
900219a6:	f103 0c01 	add.w	ip, r3, #1
900219aa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900219ae:	095b      	lsrs	r3, r3, #5
900219b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900219b4:	431a      	orrs	r2, r3
900219b6:	f8a9 2000 	strh.w	r2, [r9]
900219ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900219bc:	f109 0902 	add.w	r9, r9, #2
900219c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900219c2:	f10b 3bff 	add.w	fp, fp, #4294967295
900219c6:	441a      	add	r2, r3
900219c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900219ca:	9229      	str	r2, [sp, #164]	; 0xa4
900219cc:	441d      	add	r5, r3
900219ce:	e63d      	b.n	9002164c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900219d0:	2800      	cmp	r0, #0
900219d2:	f43f aedd 	beq.w	90021790 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900219d6:	5c79      	ldrb	r1, [r7, r1]
900219d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900219dc:	910b      	str	r1, [sp, #44]	; 0x2c
900219de:	0e09      	lsrs	r1, r1, #24
900219e0:	9114      	str	r1, [sp, #80]	; 0x50
900219e2:	e6d5      	b.n	90021790 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900219e4:	b01f      	add	sp, #124	; 0x7c
900219e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900219ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900219ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900219ee:	b089      	sub	sp, #36	; 0x24
900219f0:	9101      	str	r1, [sp, #4]
900219f2:	9801      	ldr	r0, [sp, #4]
900219f4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
900219f8:	8800      	ldrh	r0, [r0, #0]
900219fa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
900219fe:	1206      	asrs	r6, r0, #8
90021a00:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90021a04:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
90021a08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90021a0c:	9602      	str	r6, [sp, #8]
90021a0e:	10c6      	asrs	r6, r0, #3
90021a10:	00c0      	lsls	r0, r0, #3
90021a12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90021a16:	b2c0      	uxtb	r0, r0
90021a18:	9603      	str	r6, [sp, #12]
90021a1a:	9004      	str	r0, [sp, #16]
90021a1c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90021a20:	fb07 100c 	mla	r0, r7, ip, r1
90021a24:	2f00      	cmp	r7, #0
90021a26:	eb02 0e00 	add.w	lr, r2, r0
90021a2a:	f2c0 810a 	blt.w	90021c42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021a2e:	45b8      	cmp	r8, r7
90021a30:	f340 8107 	ble.w	90021c42 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90021a34:	2900      	cmp	r1, #0
90021a36:	f2c0 8102 	blt.w	90021c3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021a3a:	458c      	cmp	ip, r1
90021a3c:	f340 80ff 	ble.w	90021c3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90021a40:	5c12      	ldrb	r2, [r2, r0]
90021a42:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90021a46:	1c4a      	adds	r2, r1, #1
90021a48:	f100 80fe 	bmi.w	90021c48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021a4c:	4594      	cmp	ip, r2
90021a4e:	f340 80fb 	ble.w	90021c48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90021a52:	2d00      	cmp	r5, #0
90021a54:	f000 80fa 	beq.w	90021c4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90021a58:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021a5c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90021a60:	3701      	adds	r7, #1
90021a62:	f100 80f7 	bmi.w	90021c54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021a66:	45b8      	cmp	r8, r7
90021a68:	f340 80f4 	ble.w	90021c54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90021a6c:	2c00      	cmp	r4, #0
90021a6e:	f000 80f4 	beq.w	90021c5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90021a72:	2900      	cmp	r1, #0
90021a74:	eb0e 020c 	add.w	r2, lr, ip
90021a78:	f2c0 80ea 	blt.w	90021c50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021a7c:	458c      	cmp	ip, r1
90021a7e:	f340 80e7 	ble.w	90021c50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90021a82:	f81e 700c 	ldrb.w	r7, [lr, ip]
90021a86:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90021a8a:	3101      	adds	r1, #1
90021a8c:	f100 80e8 	bmi.w	90021c60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021a90:	458c      	cmp	ip, r1
90021a92:	f340 80e5 	ble.w	90021c60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90021a96:	2d00      	cmp	r5, #0
90021a98:	f000 80e4 	beq.w	90021c64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90021a9c:	7852      	ldrb	r2, [r2, #1]
90021a9e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021aa2:	0e0b      	lsrs	r3, r1, #24
90021aa4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
90021aa8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90021aac:	9300      	str	r3, [sp, #0]
90021aae:	b2a4      	uxth	r4, r4
90021ab0:	b2ab      	uxth	r3, r5
90021ab2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
90021ab6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90021aba:	fb03 f904 	mul.w	r9, r3, r4
90021abe:	011b      	lsls	r3, r3, #4
90021ac0:	fb0a f505 	mul.w	r5, sl, r5
90021ac4:	ea4f 6817 	mov.w	r8, r7, lsr #24
90021ac8:	eba3 0e09 	sub.w	lr, r3, r9
90021acc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90021ad0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90021ad4:	0a28      	lsrs	r0, r5, #8
90021ad6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
90021ada:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90021ade:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021ae2:	fb0a f303 	mul.w	r3, sl, r3
90021ae6:	fb08 f707 	mul.w	r7, r8, r7
90021aea:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90021aee:	4405      	add	r5, r0
90021af0:	fb08 fc0c 	mul.w	ip, r8, ip
90021af4:	b2a4      	uxth	r4, r4
90021af6:	0a2d      	lsrs	r5, r5, #8
90021af8:	fa1f fe8e 	uxth.w	lr, lr
90021afc:	1b12      	subs	r2, r2, r4
90021afe:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90021b02:	b292      	uxth	r2, r2
90021b04:	9005      	str	r0, [sp, #20]
90021b06:	f503 7080 	add.w	r0, r3, #256	; 0x100
90021b0a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90021b0e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90021b12:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021b16:	0a1b      	lsrs	r3, r3, #8
90021b18:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021b1c:	9306      	str	r3, [sp, #24]
90021b1e:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90021b22:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90021b26:	4460      	add	r0, ip
90021b28:	fb0b f303 	mul.w	r3, fp, r3
90021b2c:	fb0b f606 	mul.w	r6, fp, r6
90021b30:	0a00      	lsrs	r0, r0, #8
90021b32:	0a1d      	lsrs	r5, r3, #8
90021b34:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90021b38:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90021b3c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021b40:	441d      	add	r5, r3
90021b42:	f506 7380 	add.w	r3, r6, #256	; 0x100
90021b46:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90021b4a:	f507 7380 	add.w	r3, r7, #256	; 0x100
90021b4e:	0a2d      	lsrs	r5, r5, #8
90021b50:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90021b54:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90021b58:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021b5c:	0a36      	lsrs	r6, r6, #8
90021b5e:	0a1b      	lsrs	r3, r3, #8
90021b60:	fb05 f50e 	mul.w	r5, r5, lr
90021b64:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90021b68:	9307      	str	r3, [sp, #28]
90021b6a:	0e0b      	lsrs	r3, r1, #24
90021b6c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021b70:	fb0e f606 	mul.w	r6, lr, r6
90021b74:	435f      	muls	r7, r3
90021b76:	4359      	muls	r1, r3
90021b78:	9b05      	ldr	r3, [sp, #20]
90021b7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021b7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021b82:	fb03 5502 	mla	r5, r3, r2, r5
90021b86:	9b06      	ldr	r3, [sp, #24]
90021b88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021b8c:	fb0e fe0b 	mul.w	lr, lr, fp
90021b90:	44bc      	add	ip, r7
90021b92:	f501 7780 	add.w	r7, r1, #256	; 0x100
90021b96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021b9a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021b9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021ba2:	0a09      	lsrs	r1, r1, #8
90021ba4:	fb0c 5509 	mla	r5, ip, r9, r5
90021ba8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021bac:	fb00 5504 	mla	r5, r0, r4, r5
90021bb0:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90021bb4:	9b07      	ldr	r3, [sp, #28]
90021bb6:	fb02 6000 	mla	r0, r2, r0, r6
90021bba:	0a2d      	lsrs	r5, r5, #8
90021bbc:	fb02 e20a 	mla	r2, r2, sl, lr
90021bc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021bc4:	fb09 0001 	mla	r0, r9, r1, r0
90021bc8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021bcc:	fb04 0003 	mla	r0, r4, r3, r0
90021bd0:	9b00      	ldr	r3, [sp, #0]
90021bd2:	fb04 2408 	mla	r4, r4, r8, r2
90021bd6:	9a04      	ldr	r2, [sp, #16]
90021bd8:	0a00      	lsrs	r0, r0, #8
90021bda:	fb09 4903 	mla	r9, r9, r3, r4
90021bde:	9b02      	ldr	r3, [sp, #8]
90021be0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90021be4:	ea6f 2929 	mvn.w	r9, r9, asr #8
90021be8:	4305      	orrs	r5, r0
90021bea:	fa5f f989 	uxtb.w	r9, r9
90021bee:	fb03 f109 	mul.w	r1, r3, r9
90021bf2:	9b03      	ldr	r3, [sp, #12]
90021bf4:	fb03 f309 	mul.w	r3, r3, r9
90021bf8:	fb02 f909 	mul.w	r9, r2, r9
90021bfc:	1c4a      	adds	r2, r1, #1
90021bfe:	1c58      	adds	r0, r3, #1
90021c00:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021c04:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90021c08:	0c2a      	lsrs	r2, r5, #16
90021c0a:	0a2b      	lsrs	r3, r5, #8
90021c0c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90021c10:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021c14:	0212      	lsls	r2, r2, #8
90021c16:	00db      	lsls	r3, r3, #3
90021c18:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90021c1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021c20:	4313      	orrs	r3, r2
90021c22:	f109 0201 	add.w	r2, r9, #1
90021c26:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90021c2a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90021c2e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90021c32:	431d      	orrs	r5, r3
90021c34:	9b01      	ldr	r3, [sp, #4]
90021c36:	801d      	strh	r5, [r3, #0]
90021c38:	b009      	add	sp, #36	; 0x24
90021c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021c3e:	2000      	movs	r0, #0
90021c40:	e701      	b.n	90021a46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90021c42:	2600      	movs	r6, #0
90021c44:	4630      	mov	r0, r6
90021c46:	e70b      	b.n	90021a60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021c48:	2600      	movs	r6, #0
90021c4a:	e709      	b.n	90021a60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021c4c:	462e      	mov	r6, r5
90021c4e:	e707      	b.n	90021a60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90021c50:	2700      	movs	r7, #0
90021c52:	e71a      	b.n	90021a8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90021c54:	2100      	movs	r1, #0
90021c56:	460f      	mov	r7, r1
90021c58:	e723      	b.n	90021aa2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021c5a:	4621      	mov	r1, r4
90021c5c:	4627      	mov	r7, r4
90021c5e:	e720      	b.n	90021aa2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021c60:	2100      	movs	r1, #0
90021c62:	e71e      	b.n	90021aa2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90021c64:	4629      	mov	r1, r5
90021c66:	e71c      	b.n	90021aa2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90021c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021c6c:	b09b      	sub	sp, #108	; 0x6c
90021c6e:	9218      	str	r2, [sp, #96]	; 0x60
90021c70:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90021c72:	9019      	str	r0, [sp, #100]	; 0x64
90021c74:	9116      	str	r1, [sp, #88]	; 0x58
90021c76:	6850      	ldr	r0, [r2, #4]
90021c78:	9307      	str	r3, [sp, #28]
90021c7a:	6812      	ldr	r2, [r2, #0]
90021c7c:	9d26      	ldr	r5, [sp, #152]	; 0x98
90021c7e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90021c82:	fb00 1303 	mla	r3, r0, r3, r1
90021c86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021c8a:	930a      	str	r3, [sp, #40]	; 0x28
90021c8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021c8e:	681b      	ldr	r3, [r3, #0]
90021c90:	930f      	str	r3, [sp, #60]	; 0x3c
90021c92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021c94:	685e      	ldr	r6, [r3, #4]
90021c96:	3604      	adds	r6, #4
90021c98:	9b16      	ldr	r3, [sp, #88]	; 0x58
90021c9a:	2b00      	cmp	r3, #0
90021c9c:	dc03      	bgt.n	90021ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021c9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021ca0:	2b00      	cmp	r3, #0
90021ca2:	f340 8373 	ble.w	9002238c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90021ca6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021ca8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021cac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021cb0:	1e48      	subs	r0, r1, #1
90021cb2:	1e57      	subs	r7, r2, #1
90021cb4:	9b07      	ldr	r3, [sp, #28]
90021cb6:	2b00      	cmp	r3, #0
90021cb8:	f340 818f 	ble.w	90021fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90021cbc:	9c25      	ldr	r4, [sp, #148]	; 0x94
90021cbe:	142b      	asrs	r3, r5, #16
90021cc0:	ea5f 4c24 	movs.w	ip, r4, asr #16
90021cc4:	d406      	bmi.n	90021cd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021cc6:	4584      	cmp	ip, r0
90021cc8:	da04      	bge.n	90021cd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021cca:	2b00      	cmp	r3, #0
90021ccc:	db02      	blt.n	90021cd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021cce:	42bb      	cmp	r3, r7
90021cd0:	f2c0 8184 	blt.w	90021fdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90021cd4:	f11c 0c01 	adds.w	ip, ip, #1
90021cd8:	f100 8172 	bmi.w	90021fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021cdc:	4561      	cmp	r1, ip
90021cde:	f2c0 816f 	blt.w	90021fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021ce2:	3301      	adds	r3, #1
90021ce4:	f100 816c 	bmi.w	90021fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021ce8:	429a      	cmp	r2, r3
90021cea:	f2c0 8169 	blt.w	90021fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021cee:	9b07      	ldr	r3, [sp, #28]
90021cf0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90021cf2:	9317      	str	r3, [sp, #92]	; 0x5c
90021cf4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90021cf6:	2b00      	cmp	r3, #0
90021cf8:	f340 818e 	ble.w	90022018 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90021cfc:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021cfe:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021d02:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021d06:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021d0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021d0c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90021d10:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021d12:	141b      	asrs	r3, r3, #16
90021d14:	f100 81d1 	bmi.w	900220ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021d18:	f101 38ff 	add.w	r8, r1, #4294967295
90021d1c:	4543      	cmp	r3, r8
90021d1e:	f280 81cc 	bge.w	900220ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021d22:	f1bc 0f00 	cmp.w	ip, #0
90021d26:	f2c0 81c8 	blt.w	900220ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021d2a:	f10e 38ff 	add.w	r8, lr, #4294967295
90021d2e:	45c4      	cmp	ip, r8
90021d30:	f280 81c3 	bge.w	900220ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021d34:	b209      	sxth	r1, r1
90021d36:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021d38:	fb0c 3301 	mla	r3, ip, r1, r3
90021d3c:	eb04 0803 	add.w	r8, r4, r3
90021d40:	5ce3      	ldrb	r3, [r4, r3]
90021d42:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021d46:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90021d4a:	2a00      	cmp	r2, #0
90021d4c:	f000 81aa 	beq.w	900220a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90021d50:	f898 c001 	ldrb.w	ip, [r8, #1]
90021d54:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021d58:	940b      	str	r4, [sp, #44]	; 0x2c
90021d5a:	0e24      	lsrs	r4, r4, #24
90021d5c:	9412      	str	r4, [sp, #72]	; 0x48
90021d5e:	b178      	cbz	r0, 90021d80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90021d60:	eb08 0c01 	add.w	ip, r8, r1
90021d64:	f818 1001 	ldrb.w	r1, [r8, r1]
90021d68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021d6c:	9108      	str	r1, [sp, #32]
90021d6e:	0e09      	lsrs	r1, r1, #24
90021d70:	9110      	str	r1, [sp, #64]	; 0x40
90021d72:	f89c 1001 	ldrb.w	r1, [ip, #1]
90021d76:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021d7a:	910c      	str	r1, [sp, #48]	; 0x30
90021d7c:	0e09      	lsrs	r1, r1, #24
90021d7e:	9113      	str	r1, [sp, #76]	; 0x4c
90021d80:	b292      	uxth	r2, r2
90021d82:	9912      	ldr	r1, [sp, #72]	; 0x48
90021d84:	b280      	uxth	r0, r0
90021d86:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021d88:	fb02 f900 	mul.w	r9, r2, r0
90021d8c:	0112      	lsls	r2, r2, #4
90021d8e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90021d92:	eba2 0809 	sub.w	r8, r2, r9
90021d96:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90021d9a:	b280      	uxth	r0, r0
90021d9c:	fa1f f888 	uxth.w	r8, r8
90021da0:	1a12      	subs	r2, r2, r0
90021da2:	fb08 f101 	mul.w	r1, r8, r1
90021da6:	b292      	uxth	r2, r2
90021da8:	fb02 110e 	mla	r1, r2, lr, r1
90021dac:	fb00 1104 	mla	r1, r0, r4, r1
90021db0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021db2:	fb09 1104 	mla	r1, r9, r4, r1
90021db6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90021dba:	2900      	cmp	r1, #0
90021dbc:	f000 80f5 	beq.w	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021dc0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90021dc4:	d01b      	beq.n	90021dfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021dc6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90021dca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021dce:	fb0e fa0a 	mul.w	sl, lr, sl
90021dd2:	fb0e fe03 	mul.w	lr, lr, r3
90021dd6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021dda:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90021dde:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90021de2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021de6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021dea:	4453      	add	r3, sl
90021dec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021df0:	0a1b      	lsrs	r3, r3, #8
90021df2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021df6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021dfa:	ea43 030c 	orr.w	r3, r3, ip
90021dfe:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021e00:	2cff      	cmp	r4, #255	; 0xff
90021e02:	d021      	beq.n	90021e48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90021e04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021e06:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021e0a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021e0c:	fb04 fb0b 	mul.w	fp, r4, fp
90021e10:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021e12:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021e16:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021e18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021e1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021e20:	fb04 fa0a 	mul.w	sl, r4, sl
90021e24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021e28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021e2c:	44de      	add	lr, fp
90021e2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021e32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021e36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021e3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021e3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021e42:	ea4e 040a 	orr.w	r4, lr, sl
90021e46:	940b      	str	r4, [sp, #44]	; 0x2c
90021e48:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021e4a:	2cff      	cmp	r4, #255	; 0xff
90021e4c:	d021      	beq.n	90021e92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021e4e:	9c08      	ldr	r4, [sp, #32]
90021e50:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021e54:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021e56:	fb04 fb0b 	mul.w	fp, r4, fp
90021e5a:	9c08      	ldr	r4, [sp, #32]
90021e5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021e60:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021e62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021e66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021e6a:	fb04 fa0a 	mul.w	sl, r4, sl
90021e6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021e72:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021e76:	44de      	add	lr, fp
90021e78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021e7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021e80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021e84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021e88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021e8c:	ea4e 040a 	orr.w	r4, lr, sl
90021e90:	9408      	str	r4, [sp, #32]
90021e92:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021e94:	2cff      	cmp	r4, #255	; 0xff
90021e96:	d021      	beq.n	90021edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90021e98:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90021e9a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021e9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021ea0:	fb04 fb0b 	mul.w	fp, r4, fp
90021ea4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90021ea6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021eaa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021eac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021eb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021eb4:	fb04 fa0a 	mul.w	sl, r4, sl
90021eb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021ebc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021ec0:	44de      	add	lr, fp
90021ec2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021ec6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021eca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021ece:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021ed2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021ed6:	ea4e 040a 	orr.w	r4, lr, sl
90021eda:	940c      	str	r4, [sp, #48]	; 0x30
90021edc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021ede:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90021ee2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021ee6:	43c9      	mvns	r1, r1
90021ee8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021eec:	9c08      	ldr	r4, [sp, #32]
90021eee:	fb08 fc0c 	mul.w	ip, r8, ip
90021ef2:	fb02 cc0e 	mla	ip, r2, lr, ip
90021ef6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021efa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90021efc:	fb00 cc0e 	mla	ip, r0, lr, ip
90021f00:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021f04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021f06:	fb09 cc0e 	mla	ip, r9, lr, ip
90021f0a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90021f0e:	fb08 f80e 	mul.w	r8, r8, lr
90021f12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f16:	fa5f fe81 	uxtb.w	lr, r1
90021f1a:	fb02 8303 	mla	r3, r2, r3, r8
90021f1e:	9a08      	ldr	r2, [sp, #32]
90021f20:	f8b7 8000 	ldrh.w	r8, [r7]
90021f24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021f28:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021f2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90021f2e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90021f32:	fb00 330a 	mla	r3, r0, sl, r3
90021f36:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90021f3a:	ea4f 2228 	mov.w	r2, r8, asr #8
90021f3e:	fb09 3900 	mla	r9, r9, r0, r3
90021f42:	ea4f 00e8 	mov.w	r0, r8, asr #3
90021f46:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021f4a:	b2c9      	uxtb	r1, r1
90021f4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021f50:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021f54:	fb02 f20e 	mul.w	r2, r2, lr
90021f58:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90021f5c:	fb00 f00e 	mul.w	r0, r0, lr
90021f60:	1c53      	adds	r3, r2, #1
90021f62:	fb01 f10e 	mul.w	r1, r1, lr
90021f66:	ea4c 0c09 	orr.w	ip, ip, r9
90021f6a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90021f6e:	ea4f 431c 	mov.w	r3, ip, lsr #16
90021f72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021f76:	4a60      	ldr	r2, [pc, #384]	; (900220f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90021f78:	b2db      	uxtb	r3, r3
90021f7a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90021f7e:	1c43      	adds	r3, r0, #1
90021f80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90021f84:	ea4f 231c 	mov.w	r3, ip, lsr #8
90021f88:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021f8c:	00db      	lsls	r3, r3, #3
90021f8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021f92:	4313      	orrs	r3, r2
90021f94:	1c4a      	adds	r2, r1, #1
90021f96:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021f9a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90021f9e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90021fa2:	ea4c 0c03 	orr.w	ip, ip, r3
90021fa6:	f8a7 c000 	strh.w	ip, [r7]
90021faa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90021fac:	3702      	adds	r7, #2
90021fae:	9a25      	ldr	r2, [sp, #148]	; 0x94
90021fb0:	441a      	add	r2, r3
90021fb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021fb4:	441d      	add	r5, r3
90021fb6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90021fb8:	9225      	str	r2, [sp, #148]	; 0x94
90021fba:	3b01      	subs	r3, #1
90021fbc:	9317      	str	r3, [sp, #92]	; 0x5c
90021fbe:	e699      	b.n	90021cf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021fc0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90021fc2:	9c25      	ldr	r4, [sp, #148]	; 0x94
90021fc4:	441c      	add	r4, r3
90021fc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021fc8:	441d      	add	r5, r3
90021fca:	9b07      	ldr	r3, [sp, #28]
90021fcc:	9425      	str	r4, [sp, #148]	; 0x94
90021fce:	3b01      	subs	r3, #1
90021fd0:	9307      	str	r3, [sp, #28]
90021fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021fd4:	3302      	adds	r3, #2
90021fd6:	930a      	str	r3, [sp, #40]	; 0x28
90021fd8:	e66c      	b.n	90021cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021fda:	d024      	beq.n	90022026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90021fdc:	9b07      	ldr	r3, [sp, #28]
90021fde:	9827      	ldr	r0, [sp, #156]	; 0x9c
90021fe0:	3b01      	subs	r3, #1
90021fe2:	9c25      	ldr	r4, [sp, #148]	; 0x94
90021fe4:	fb00 4003 	mla	r0, r0, r3, r4
90021fe8:	1400      	asrs	r0, r0, #16
90021fea:	f53f ae80 	bmi.w	90021cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021fee:	3901      	subs	r1, #1
90021ff0:	4288      	cmp	r0, r1
90021ff2:	f6bf ae7c 	bge.w	90021cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90021ff6:	9928      	ldr	r1, [sp, #160]	; 0xa0
90021ff8:	fb01 5303 	mla	r3, r1, r3, r5
90021ffc:	141b      	asrs	r3, r3, #16
90021ffe:	f53f ae76 	bmi.w	90021cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022002:	3a01      	subs	r2, #1
90022004:	4293      	cmp	r3, r2
90022006:	f6bf ae72 	bge.w	90021cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002200a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002200e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90022012:	f1bb 0f00 	cmp.w	fp, #0
90022016:	dc71      	bgt.n	900220fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022018:	9b07      	ldr	r3, [sp, #28]
9002201a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002201e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022020:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022024:	930a      	str	r3, [sp, #40]	; 0x28
90022026:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022028:	2b00      	cmp	r3, #0
9002202a:	f340 81af 	ble.w	9002238c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002202e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022032:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022034:	ee30 0a04 	vadd.f32	s0, s0, s8
90022038:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002203c:	eef0 6a62 	vmov.f32	s13, s5
90022040:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022044:	ee31 1a05 	vadd.f32	s2, s2, s10
90022048:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002204c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90022050:	eef0 6a43 	vmov.f32	s13, s6
90022054:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022058:	ee16 5a90 	vmov	r5, s13
9002205c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022060:	ee61 7a27 	vmul.f32	s15, s2, s15
90022064:	ee77 2a62 	vsub.f32	s5, s14, s5
90022068:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002206c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022070:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022074:	ee12 2a90 	vmov	r2, s5
90022078:	eef0 2a47 	vmov.f32	s5, s14
9002207c:	fb92 f3f3 	sdiv	r3, r2, r3
90022080:	ee13 2a10 	vmov	r2, s6
90022084:	9327      	str	r3, [sp, #156]	; 0x9c
90022086:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022088:	eeb0 3a67 	vmov.f32	s6, s15
9002208c:	fb92 f3f3 	sdiv	r3, r2, r3
90022090:	9328      	str	r3, [sp, #160]	; 0xa0
90022092:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022094:	9a18      	ldr	r2, [sp, #96]	; 0x60
90022096:	3b01      	subs	r3, #1
90022098:	9316      	str	r3, [sp, #88]	; 0x58
9002209a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002209c:	bf08      	it	eq
9002209e:	4613      	moveq	r3, r2
900220a0:	9307      	str	r3, [sp, #28]
900220a2:	e5f9      	b.n	90021c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900220a4:	2800      	cmp	r0, #0
900220a6:	f43f ae6b 	beq.w	90021d80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900220aa:	f818 1001 	ldrb.w	r1, [r8, r1]
900220ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900220b2:	9108      	str	r1, [sp, #32]
900220b4:	0e09      	lsrs	r1, r1, #24
900220b6:	9110      	str	r1, [sp, #64]	; 0x40
900220b8:	e662      	b.n	90021d80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900220ba:	f113 0801 	adds.w	r8, r3, #1
900220be:	f53f af74 	bmi.w	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220c2:	4541      	cmp	r1, r8
900220c4:	f6ff af71 	blt.w	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220c8:	f11c 0801 	adds.w	r8, ip, #1
900220cc:	f53f af6d 	bmi.w	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220d0:	45c6      	cmp	lr, r8
900220d2:	f6ff af6a 	blt.w	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220d6:	b209      	sxth	r1, r1
900220d8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900220dc:	fa0f f38e 	sxth.w	r3, lr
900220e0:	9100      	str	r1, [sp, #0]
900220e2:	4639      	mov	r1, r7
900220e4:	9301      	str	r3, [sp, #4]
900220e6:	4633      	mov	r3, r6
900220e8:	e9cd 2004 	strd	r2, r0, [sp, #16]
900220ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900220ee:	9819      	ldr	r0, [sp, #100]	; 0x64
900220f0:	f7ff fc7b 	bl	900219ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900220f4:	e759      	b.n	90021faa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900220f6:	bf00      	nop
900220f8:	fffff800 	.word	0xfffff800
900220fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
900220fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022102:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022104:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022108:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002210a:	1427      	asrs	r7, r4, #16
9002210c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002210e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022112:	142b      	asrs	r3, r5, #16
90022114:	fb01 7303 	mla	r3, r1, r3, r7
90022118:	18e7      	adds	r7, r4, r3
9002211a:	5ce3      	ldrb	r3, [r4, r3]
9002211c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022120:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022124:	2a00      	cmp	r2, #0
90022126:	f000 8127 	beq.w	90022378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
9002212a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002212e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90022132:	940d      	str	r4, [sp, #52]	; 0x34
90022134:	0e24      	lsrs	r4, r4, #24
90022136:	9414      	str	r4, [sp, #80]	; 0x50
90022138:	b170      	cbz	r0, 90022158 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002213a:	eb07 0e01 	add.w	lr, r7, r1
9002213e:	5c79      	ldrb	r1, [r7, r1]
90022140:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022144:	9109      	str	r1, [sp, #36]	; 0x24
90022146:	0e09      	lsrs	r1, r1, #24
90022148:	9111      	str	r1, [sp, #68]	; 0x44
9002214a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002214e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022152:	910e      	str	r1, [sp, #56]	; 0x38
90022154:	0e09      	lsrs	r1, r1, #24
90022156:	9115      	str	r1, [sp, #84]	; 0x54
90022158:	b292      	uxth	r2, r2
9002215a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002215c:	b280      	uxth	r0, r0
9002215e:	fb02 f800 	mul.w	r8, r2, r0
90022162:	0112      	lsls	r2, r2, #4
90022164:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022168:	eba2 0e08 	sub.w	lr, r2, r8
9002216c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90022170:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022172:	b280      	uxth	r0, r0
90022174:	fa1f fe8e 	uxth.w	lr, lr
90022178:	1a09      	subs	r1, r1, r0
9002217a:	fb0e f202 	mul.w	r2, lr, r2
9002217e:	b289      	uxth	r1, r1
90022180:	fb01 220c 	mla	r2, r1, ip, r2
90022184:	fb00 2204 	mla	r2, r0, r4, r2
90022188:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002218a:	fb08 2204 	mla	r2, r8, r4, r2
9002218e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90022192:	2a00      	cmp	r2, #0
90022194:	f000 80e5 	beq.w	90022362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022198:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002219c:	d019      	beq.n	900221d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002219e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900221a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900221a6:	fb0c fa0a 	mul.w	sl, ip, sl
900221aa:	fb0c fc03 	mul.w	ip, ip, r3
900221ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900221b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900221b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900221ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900221be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900221c2:	4453      	add	r3, sl
900221c4:	0a3f      	lsrs	r7, r7, #8
900221c6:	0a1b      	lsrs	r3, r3, #8
900221c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900221cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900221d0:	433b      	orrs	r3, r7
900221d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900221d4:	2cff      	cmp	r4, #255	; 0xff
900221d6:	d020      	beq.n	9002221a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900221d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900221da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900221de:	9c14      	ldr	r4, [sp, #80]	; 0x50
900221e0:	4367      	muls	r7, r4
900221e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900221e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900221e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900221ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
900221ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900221f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900221f6:	fb04 fa0a 	mul.w	sl, r4, sl
900221fa:	44bc      	add	ip, r7
900221fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022204:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022208:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002220c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022210:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022214:	ea4c 040a 	orr.w	r4, ip, sl
90022218:	940d      	str	r4, [sp, #52]	; 0x34
9002221a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002221c:	2cff      	cmp	r4, #255	; 0xff
9002221e:	d020      	beq.n	90022262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90022220:	9c09      	ldr	r4, [sp, #36]	; 0x24
90022222:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022226:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022228:	4367      	muls	r7, r4
9002222a:	9c09      	ldr	r4, [sp, #36]	; 0x24
9002222c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022230:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022234:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022236:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002223a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002223e:	fb04 fa0a 	mul.w	sl, r4, sl
90022242:	44bc      	add	ip, r7
90022244:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022248:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002224c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022250:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022254:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022258:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002225c:	ea4c 040a 	orr.w	r4, ip, sl
90022260:	9409      	str	r4, [sp, #36]	; 0x24
90022262:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022264:	2cff      	cmp	r4, #255	; 0xff
90022266:	d020      	beq.n	900222aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90022268:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002226a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002226e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022270:	4367      	muls	r7, r4
90022272:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022274:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022278:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002227c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002227e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022282:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022286:	fb04 fa0a 	mul.w	sl, r4, sl
9002228a:	44bc      	add	ip, r7
9002228c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022290:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022294:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022298:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002229c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900222a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900222a4:	ea4c 040a 	orr.w	r4, ip, sl
900222a8:	940e      	str	r4, [sp, #56]	; 0x38
900222aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900222ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900222b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900222b4:	43d2      	mvns	r2, r2
900222b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900222ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
900222bc:	b2d2      	uxtb	r2, r2
900222be:	fb0e f707 	mul.w	r7, lr, r7
900222c2:	fb01 770c 	mla	r7, r1, ip, r7
900222c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900222ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900222cc:	fb00 770c 	mla	r7, r0, ip, r7
900222d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900222d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900222d6:	fb08 770c 	mla	r7, r8, ip, r7
900222da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900222de:	fb0e fe0c 	mul.w	lr, lr, ip
900222e2:	0a3f      	lsrs	r7, r7, #8
900222e4:	fb01 e303 	mla	r3, r1, r3, lr
900222e8:	9909      	ldr	r1, [sp, #36]	; 0x24
900222ea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900222ee:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900222f2:	990e      	ldr	r1, [sp, #56]	; 0x38
900222f4:	fb00 330a 	mla	r3, r0, sl, r3
900222f8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900222fc:	fb08 3c0c 	mla	ip, r8, ip, r3
90022300:	f8b9 3000 	ldrh.w	r3, [r9]
90022304:	1218      	asrs	r0, r3, #8
90022306:	10d9      	asrs	r1, r3, #3
90022308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002230c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022310:	00db      	lsls	r3, r3, #3
90022312:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022316:	4350      	muls	r0, r2
90022318:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002231c:	b2db      	uxtb	r3, r3
9002231e:	4351      	muls	r1, r2
90022320:	ea47 070c 	orr.w	r7, r7, ip
90022324:	4353      	muls	r3, r2
90022326:	1c42      	adds	r2, r0, #1
90022328:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002232c:	0c3a      	lsrs	r2, r7, #16
9002232e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022332:	4a18      	ldr	r2, [pc, #96]	; (90022394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90022334:	b2c0      	uxtb	r0, r0
90022336:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002233a:	1c4a      	adds	r2, r1, #1
9002233c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022340:	0a3a      	lsrs	r2, r7, #8
90022342:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022346:	00c9      	lsls	r1, r1, #3
90022348:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002234c:	4301      	orrs	r1, r0
9002234e:	1c58      	adds	r0, r3, #1
90022350:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90022354:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022358:	f3c7 00c4 	ubfx	r0, r7, #3, #5
9002235c:	4308      	orrs	r0, r1
9002235e:	f8a9 0000 	strh.w	r0, [r9]
90022362:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022364:	f109 0902 	add.w	r9, r9, #2
90022368:	9a25      	ldr	r2, [sp, #148]	; 0x94
9002236a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002236e:	441a      	add	r2, r3
90022370:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022372:	9225      	str	r2, [sp, #148]	; 0x94
90022374:	441d      	add	r5, r3
90022376:	e64c      	b.n	90022012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022378:	2800      	cmp	r0, #0
9002237a:	f43f aeed 	beq.w	90022158 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002237e:	5c79      	ldrb	r1, [r7, r1]
90022380:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022384:	9109      	str	r1, [sp, #36]	; 0x24
90022386:	0e09      	lsrs	r1, r1, #24
90022388:	9111      	str	r1, [sp, #68]	; 0x44
9002238a:	e6e5      	b.n	90022158 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002238c:	b01b      	add	sp, #108	; 0x6c
9002238e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022392:	bf00      	nop
90022394:	fffff800 	.word	0xfffff800

90022398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002239c:	b085      	sub	sp, #20
9002239e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900223a2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900223a6:	2800      	cmp	r0, #0
900223a8:	9103      	str	r1, [sp, #12]
900223aa:	fb00 7406 	mla	r4, r0, r6, r7
900223ae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900223b2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900223b6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900223ba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900223be:	eb03 0904 	add.w	r9, r3, r4
900223c2:	9501      	str	r5, [sp, #4]
900223c4:	f2c0 8150 	blt.w	90022668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900223c8:	4583      	cmp	fp, r0
900223ca:	f340 814d 	ble.w	90022668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900223ce:	2f00      	cmp	r7, #0
900223d0:	f2c0 8146 	blt.w	90022660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900223d4:	42be      	cmp	r6, r7
900223d6:	f340 8143 	ble.w	90022660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900223da:	f813 c004 	ldrb.w	ip, [r3, r4]
900223de:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900223e2:	f64f 041f 	movw	r4, #63519	; 0xf81f
900223e6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900223ea:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900223ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900223f2:	4355      	muls	r5, r2
900223f4:	fb0c f203 	mul.w	r2, ip, r3
900223f8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900223fc:	f605 0501 	addw	r5, r5, #2049	; 0x801
90022400:	441d      	add	r5, r3
90022402:	f102 0320 	add.w	r3, r2, #32
90022406:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002240a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002240e:	0a1b      	lsrs	r3, r3, #8
90022410:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022414:	431c      	orrs	r4, r3
90022416:	1c7b      	adds	r3, r7, #1
90022418:	f100 812b 	bmi.w	90022672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002241c:	429e      	cmp	r6, r3
9002241e:	f340 8128 	ble.w	90022672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022422:	2900      	cmp	r1, #0
90022424:	f000 8128 	beq.w	90022678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90022428:	9a01      	ldr	r2, [sp, #4]
9002242a:	f899 3001 	ldrb.w	r3, [r9, #1]
9002242e:	8855      	ldrh	r5, [r2, #2]
90022430:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022434:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90022438:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002243c:	fb08 f802 	mul.w	r8, r8, r2
90022440:	f64f 021f 	movw	r2, #63519	; 0xf81f
90022444:	435d      	muls	r5, r3
90022446:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002244a:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002244e:	44d0      	add	r8, sl
90022450:	f105 0a20 	add.w	sl, r5, #32
90022454:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022458:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002245c:	0a2d      	lsrs	r5, r5, #8
9002245e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022462:	432a      	orrs	r2, r5
90022464:	3001      	adds	r0, #1
90022466:	f100 810d 	bmi.w	90022684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002246a:	4583      	cmp	fp, r0
9002246c:	f340 810a 	ble.w	90022684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022470:	f1be 0f00 	cmp.w	lr, #0
90022474:	f000 810b 	beq.w	9002268e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022478:	2f00      	cmp	r7, #0
9002247a:	f2c0 8100 	blt.w	9002267e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002247e:	42be      	cmp	r6, r7
90022480:	f340 80fd 	ble.w	9002267e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022484:	9801      	ldr	r0, [sp, #4]
90022486:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002248a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002248e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022492:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022496:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002249a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9002249e:	fb0a fa00 	mul.w	sl, sl, r0
900224a2:	fb05 f808 	mul.w	r8, r5, r8
900224a6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900224aa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900224ae:	4482      	add	sl, r0
900224b0:	f108 0020 	add.w	r0, r8, #32
900224b4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900224b8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900224bc:	0a00      	lsrs	r0, r0, #8
900224be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900224c2:	ea4b 0b00 	orr.w	fp, fp, r0
900224c6:	3701      	adds	r7, #1
900224c8:	f100 80e6 	bmi.w	90022698 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900224cc:	42be      	cmp	r6, r7
900224ce:	f340 80e3 	ble.w	90022698 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900224d2:	2900      	cmp	r1, #0
900224d4:	f000 80e3 	beq.w	9002269e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900224d8:	3601      	adds	r6, #1
900224da:	9801      	ldr	r0, [sp, #4]
900224dc:	f819 7006 	ldrb.w	r7, [r9, r6]
900224e0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900224e4:	ea4f 09e7 	mov.w	r9, r7, asr #3
900224e8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900224ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900224f0:	fb09 f906 	mul.w	r9, r9, r6
900224f4:	fb07 f800 	mul.w	r8, r7, r0
900224f8:	f64f 001f 	movw	r0, #63519	; 0xf81f
900224fc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022500:	f609 0901 	addw	r9, r9, #2049	; 0x801
90022504:	44d1      	add	r9, sl
90022506:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002250a:	f108 0020 	add.w	r0, r8, #32
9002250e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022512:	0a00      	lsrs	r0, r0, #8
90022514:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022518:	4330      	orrs	r0, r6
9002251a:	b28e      	uxth	r6, r1
9002251c:	fa1f f98e 	uxth.w	r9, lr
90022520:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90022524:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90022528:	fb06 f809 	mul.w	r8, r6, r9
9002252c:	0136      	lsls	r6, r6, #4
9002252e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022532:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90022536:	9601      	str	r6, [sp, #4]
90022538:	ea4a 0404 	orr.w	r4, sl, r4
9002253c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022540:	fa1f f689 	uxth.w	r6, r9
90022544:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022548:	fb11 f90e 	smulbb	r9, r1, lr
9002254c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022550:	9602      	str	r6, [sp, #8]
90022552:	4626      	mov	r6, r4
90022554:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90022558:	f1ce 0410 	rsb	r4, lr, #16
9002255c:	ea4a 0202 	orr.w	r2, sl, r2
90022560:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022564:	1a64      	subs	r4, r4, r1
90022566:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002256a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002256e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022572:	434a      	muls	r2, r1
90022574:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022578:	ea4a 0000 	orr.w	r0, sl, r0
9002257c:	9903      	ldr	r1, [sp, #12]
9002257e:	fb04 2406 	mla	r4, r4, r6, r2
90022582:	9e02      	ldr	r6, [sp, #8]
90022584:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022588:	fb09 4200 	mla	r2, r9, r0, r4
9002258c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022590:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022594:	8808      	ldrh	r0, [r1, #0]
90022596:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002259a:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
9002259e:	ea44 0b0b 	orr.w	fp, r4, fp
900225a2:	9c01      	ldr	r4, [sp, #4]
900225a4:	b289      	uxth	r1, r1
900225a6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
900225aa:	fb0e 2e0b 	mla	lr, lr, fp, r2
900225ae:	1ba4      	subs	r4, r4, r6
900225b0:	9e01      	ldr	r6, [sp, #4]
900225b2:	ea4f 525e 	mov.w	r2, lr, lsr #21
900225b6:	eba6 0608 	sub.w	r6, r6, r8
900225ba:	b2a4      	uxth	r4, r4
900225bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900225c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900225c4:	b2b6      	uxth	r6, r6
900225c6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900225ca:	4373      	muls	r3, r6
900225cc:	ea42 0e0e 	orr.w	lr, r2, lr
900225d0:	fb0c 3304 	mla	r3, ip, r4, r3
900225d4:	9c02      	ldr	r4, [sp, #8]
900225d6:	fa1f f28e 	uxth.w	r2, lr
900225da:	fb04 3505 	mla	r5, r4, r5, r3
900225de:	10d4      	asrs	r4, r2, #3
900225e0:	fb08 5707 	mla	r7, r8, r7, r5
900225e4:	1215      	asrs	r5, r2, #8
900225e6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900225ea:	00d2      	lsls	r2, r2, #3
900225ec:	f3c7 2707 	ubfx	r7, r7, #8, #8
900225f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900225f4:	b2d2      	uxtb	r2, r2
900225f6:	434f      	muls	r7, r1
900225f8:	1c7b      	adds	r3, r7, #1
900225fa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900225fe:	1203      	asrs	r3, r0, #8
90022600:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90022604:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90022608:	b2ff      	uxtb	r7, r7
9002260a:	fb13 f307 	smulbb	r3, r3, r7
9002260e:	fb05 3501 	mla	r5, r5, r1, r3
90022612:	10c3      	asrs	r3, r0, #3
90022614:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90022618:	b2ad      	uxth	r5, r5
9002261a:	fb13 f307 	smulbb	r3, r3, r7
9002261e:	fb04 3401 	mla	r4, r4, r1, r3
90022622:	00c3      	lsls	r3, r0, #3
90022624:	b2db      	uxtb	r3, r3
90022626:	b2a4      	uxth	r4, r4
90022628:	fb13 f307 	smulbb	r3, r3, r7
9002262c:	fb02 3101 	mla	r1, r2, r1, r3
90022630:	1c6b      	adds	r3, r5, #1
90022632:	1c62      	adds	r2, r4, #1
90022634:	b289      	uxth	r1, r1
90022636:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002263a:	1c4b      	adds	r3, r1, #1
9002263c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90022640:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022644:	9a03      	ldr	r2, [sp, #12]
90022646:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002264a:	0964      	lsrs	r4, r4, #5
9002264c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022650:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90022654:	432b      	orrs	r3, r5
90022656:	4323      	orrs	r3, r4
90022658:	8013      	strh	r3, [r2, #0]
9002265a:	b005      	add	sp, #20
9002265c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022660:	f04f 0c00 	mov.w	ip, #0
90022664:	4664      	mov	r4, ip
90022666:	e6d6      	b.n	90022416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90022668:	2300      	movs	r3, #0
9002266a:	469c      	mov	ip, r3
9002266c:	461a      	mov	r2, r3
9002266e:	461c      	mov	r4, r3
90022670:	e6f8      	b.n	90022464 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022672:	2300      	movs	r3, #0
90022674:	461a      	mov	r2, r3
90022676:	e6f5      	b.n	90022464 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022678:	460b      	mov	r3, r1
9002267a:	460a      	mov	r2, r1
9002267c:	e6f2      	b.n	90022464 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002267e:	2500      	movs	r5, #0
90022680:	46ab      	mov	fp, r5
90022682:	e720      	b.n	900224c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90022684:	2700      	movs	r7, #0
90022686:	463d      	mov	r5, r7
90022688:	4638      	mov	r0, r7
9002268a:	46bb      	mov	fp, r7
9002268c:	e745      	b.n	9002251a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002268e:	4677      	mov	r7, lr
90022690:	4675      	mov	r5, lr
90022692:	4670      	mov	r0, lr
90022694:	46f3      	mov	fp, lr
90022696:	e740      	b.n	9002251a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022698:	2700      	movs	r7, #0
9002269a:	4638      	mov	r0, r7
9002269c:	e73d      	b.n	9002251a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002269e:	460f      	mov	r7, r1
900226a0:	4608      	mov	r0, r1
900226a2:	e73a      	b.n	9002251a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900226a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900226a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900226a8:	b097      	sub	sp, #92	; 0x5c
900226aa:	9214      	str	r2, [sp, #80]	; 0x50
900226ac:	9308      	str	r3, [sp, #32]
900226ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
900226b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900226b4:	9015      	str	r0, [sp, #84]	; 0x54
900226b6:	9312      	str	r3, [sp, #72]	; 0x48
900226b8:	6850      	ldr	r0, [r2, #4]
900226ba:	9111      	str	r1, [sp, #68]	; 0x44
900226bc:	6812      	ldr	r2, [r2, #0]
900226be:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900226c2:	fb00 1303 	mla	r3, r0, r3, r1
900226c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900226ca:	9309      	str	r3, [sp, #36]	; 0x24
900226cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900226ce:	681b      	ldr	r3, [r3, #0]
900226d0:	930b      	str	r3, [sp, #44]	; 0x2c
900226d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900226d4:	685b      	ldr	r3, [r3, #4]
900226d6:	930c      	str	r3, [sp, #48]	; 0x30
900226d8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900226dc:	930a      	str	r3, [sp, #40]	; 0x28
900226de:	9b11      	ldr	r3, [sp, #68]	; 0x44
900226e0:	2b00      	cmp	r3, #0
900226e2:	dc03      	bgt.n	900226ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900226e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
900226e6:	2b00      	cmp	r3, #0
900226e8:	f340 83cd 	ble.w	90022e86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900226ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900226ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900226f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900226f6:	1e48      	subs	r0, r1, #1
900226f8:	1e55      	subs	r5, r2, #1
900226fa:	9b08      	ldr	r3, [sp, #32]
900226fc:	2b00      	cmp	r3, #0
900226fe:	f340 81a5 	ble.w	90022a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90022702:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022704:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022706:	1436      	asrs	r6, r6, #16
90022708:	ea4f 4323 	mov.w	r3, r3, asr #16
9002270c:	d406      	bmi.n	9002271c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002270e:	4286      	cmp	r6, r0
90022710:	da04      	bge.n	9002271c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022712:	2b00      	cmp	r3, #0
90022714:	db02      	blt.n	9002271c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022716:	42ab      	cmp	r3, r5
90022718:	f2c0 8199 	blt.w	90022a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
9002271c:	3601      	adds	r6, #1
9002271e:	f100 8186 	bmi.w	90022a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022722:	42b1      	cmp	r1, r6
90022724:	f2c0 8183 	blt.w	90022a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022728:	3301      	adds	r3, #1
9002272a:	f100 8180 	bmi.w	90022a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002272e:	429a      	cmp	r2, r3
90022730:	f2c0 817d 	blt.w	90022a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022734:	9b08      	ldr	r3, [sp, #32]
90022736:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002273a:	9f09      	ldr	r7, [sp, #36]	; 0x24
9002273c:	9313      	str	r3, [sp, #76]	; 0x4c
9002273e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022740:	2b00      	cmp	r3, #0
90022742:	f340 81a6 	ble.w	90022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90022746:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022748:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002274a:	1418      	asrs	r0, r3, #16
9002274c:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002274e:	142d      	asrs	r5, r5, #16
90022750:	f3c3 3103 	ubfx	r1, r3, #12, #4
90022754:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022756:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002275a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002275c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90022760:	f100 81fa 	bmi.w	90022b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022764:	f102 3eff 	add.w	lr, r2, #4294967295
90022768:	4575      	cmp	r5, lr
9002276a:	f280 81f5 	bge.w	90022b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002276e:	2800      	cmp	r0, #0
90022770:	f2c0 81f2 	blt.w	90022b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022774:	f103 3eff 	add.w	lr, r3, #4294967295
90022778:	4570      	cmp	r0, lr
9002277a:	f280 81ed 	bge.w	90022b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002277e:	b212      	sxth	r2, r2
90022780:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022782:	fa1f fe81 	uxth.w	lr, r1
90022786:	fb00 5002 	mla	r0, r0, r2, r5
9002278a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002278e:	eb03 0a00 	add.w	sl, r3, r0
90022792:	f813 9000 	ldrb.w	r9, [r3, r0]
90022796:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002279a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002279e:	b29b      	uxth	r3, r3
900227a0:	f1bc 0f00 	cmp.w	ip, #0
900227a4:	f000 81bb 	beq.w	90022b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900227a8:	f81a 4002 	ldrb.w	r4, [sl, r2]
900227ac:	eb0a 0b02 	add.w	fp, sl, r2
900227b0:	fa1f fa8c 	uxth.w	sl, ip
900227b4:	940d      	str	r4, [sp, #52]	; 0x34
900227b6:	fb0a fe0e 	mul.w	lr, sl, lr
900227ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
900227be:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900227c2:	eba5 050e 	sub.w	r5, r5, lr
900227c6:	940e      	str	r4, [sp, #56]	; 0x38
900227c8:	fa1f fa8a 	uxth.w	sl, sl
900227cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900227ce:	b2ad      	uxth	r5, r5
900227d0:	eba3 030a 	sub.w	r3, r3, sl
900227d4:	fb08 f505 	mul.w	r5, r8, r5
900227d8:	b29b      	uxth	r3, r3
900227da:	fb09 5303 	mla	r3, r9, r3, r5
900227de:	fb0a 3304 	mla	r3, sl, r4, r3
900227e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900227e4:	fb0e 3304 	mla	r3, lr, r4, r3
900227e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900227ec:	2b00      	cmp	r3, #0
900227ee:	f000 8111 	beq.w	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900227f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900227f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900227f8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900227fc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022800:	f000 8192 	beq.w	90022b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022804:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90022808:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002280c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022810:	fb0a fe0e 	mul.w	lr, sl, lr
90022814:	fb09 f000 	mul.w	r0, r9, r0
90022818:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9002281c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90022820:	f100 0b20 	add.w	fp, r0, #32
90022824:	44ce      	add	lr, r9
90022826:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002282a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002282e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022832:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90022836:	ea4e 0909 	orr.w	r9, lr, r9
9002283a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002283e:	8868      	ldrh	r0, [r5, #2]
90022840:	d019      	beq.n	90022876 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90022842:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90022846:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002284a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002284e:	fb0a fe0e 	mul.w	lr, sl, lr
90022852:	fb08 f800 	mul.w	r8, r8, r0
90022856:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002285a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002285e:	f108 0b20 	add.w	fp, r8, #32
90022862:	4486      	add	lr, r0
90022864:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90022868:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002286c:	0a00      	lsrs	r0, r0, #8
9002286e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022872:	ea4e 0000 	orr.w	r0, lr, r0
90022876:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002287a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002287e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022882:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022886:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002288a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002288e:	ea4e 0909 	orr.w	r9, lr, r9
90022892:	ea4a 0000 	orr.w	r0, sl, r0
90022896:	f1bc 0f00 	cmp.w	ip, #0
9002289a:	f000 8147 	beq.w	90022b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002289e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900228a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900228a4:	3a01      	subs	r2, #1
900228a6:	2cff      	cmp	r4, #255	; 0xff
900228a8:	ea4f 0242 	mov.w	r2, r2, lsl #1
900228ac:	f102 0202 	add.w	r2, r2, #2
900228b0:	eb05 0e02 	add.w	lr, r5, r2
900228b4:	5aaa      	ldrh	r2, [r5, r2]
900228b6:	d018      	beq.n	900228ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900228b8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900228bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900228c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900228c4:	fb04 fa02 	mul.w	sl, r4, r2
900228c8:	fb08 f805 	mul.w	r8, r8, r5
900228cc:	f10a 0520 	add.w	r5, sl, #32
900228d0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900228d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900228d8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900228dc:	4442      	add	r2, r8
900228de:	0a2d      	lsrs	r5, r5, #8
900228e0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900228e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900228e8:	432a      	orrs	r2, r5
900228ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900228ec:	f8be 5002 	ldrh.w	r5, [lr, #2]
900228f0:	2cff      	cmp	r4, #255	; 0xff
900228f2:	d01a      	beq.n	9002292a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900228f4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900228f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900228fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022900:	fb04 fa05 	mul.w	sl, r4, r5
90022904:	fb08 f80e 	mul.w	r8, r8, lr
90022908:	f10a 0e20 	add.w	lr, sl, #32
9002290c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022910:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022914:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022918:	4445      	add	r5, r8
9002291a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002291e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022922:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90022926:	ea45 050e 	orr.w	r5, r5, lr
9002292a:	fb1c fe01 	smulbb	lr, ip, r1
9002292e:	f1cc 0810 	rsb	r8, ip, #16
90022932:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022936:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002293a:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002293e:	eba8 0801 	sub.w	r8, r8, r1
90022942:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022946:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002294a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002294e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90022952:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022956:	ea4a 0202 	orr.w	r2, sl, r2
9002295a:	4341      	muls	r1, r0
9002295c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022960:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022964:	fb09 1108 	mla	r1, r9, r8, r1
90022968:	ea4b 0505 	orr.w	r5, fp, r5
9002296c:	fb0c 1102 	mla	r1, ip, r2, r1
90022970:	fb0e 1e05 	mla	lr, lr, r5, r1
90022974:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022978:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002297c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022980:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022984:	ea42 0e0e 	orr.w	lr, r2, lr
90022988:	fa1f f28e 	uxth.w	r2, lr
9002298c:	2bff      	cmp	r3, #255	; 0xff
9002298e:	d103      	bne.n	90022998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90022990:	9912      	ldr	r1, [sp, #72]	; 0x48
90022992:	29ff      	cmp	r1, #255	; 0xff
90022994:	f000 80de 	beq.w	90022b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90022998:	990a      	ldr	r1, [sp, #40]	; 0x28
9002299a:	1215      	asrs	r5, r2, #8
9002299c:	8838      	ldrh	r0, [r7, #0]
9002299e:	434b      	muls	r3, r1
900229a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900229a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900229a6:	f103 0c01 	add.w	ip, r3, #1
900229aa:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900229ae:	ea6f 2323 	mvn.w	r3, r3, asr #8
900229b2:	fa5f fc83 	uxtb.w	ip, r3
900229b6:	1203      	asrs	r3, r0, #8
900229b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900229bc:	fb13 f30c 	smulbb	r3, r3, ip
900229c0:	fb05 3501 	mla	r5, r5, r1, r3
900229c4:	10c3      	asrs	r3, r0, #3
900229c6:	10d1      	asrs	r1, r2, #3
900229c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900229cc:	00d2      	lsls	r2, r2, #3
900229ce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900229d2:	b2ad      	uxth	r5, r5
900229d4:	fb13 f30c 	smulbb	r3, r3, ip
900229d8:	b2d2      	uxtb	r2, r2
900229da:	fb01 3104 	mla	r1, r1, r4, r3
900229de:	00c3      	lsls	r3, r0, #3
900229e0:	b2db      	uxtb	r3, r3
900229e2:	b289      	uxth	r1, r1
900229e4:	fb13 f30c 	smulbb	r3, r3, ip
900229e8:	fb02 3304 	mla	r3, r2, r4, r3
900229ec:	b29a      	uxth	r2, r3
900229ee:	1c6b      	adds	r3, r5, #1
900229f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900229f4:	1c53      	adds	r3, r2, #1
900229f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900229fa:	1c4a      	adds	r2, r1, #1
900229fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022a00:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022a04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022a08:	0949      	lsrs	r1, r1, #5
90022a0a:	432b      	orrs	r3, r5
90022a0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022a10:	430b      	orrs	r3, r1
90022a12:	803b      	strh	r3, [r7, #0]
90022a14:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022a16:	3702      	adds	r7, #2
90022a18:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90022a1a:	4413      	add	r3, r2
90022a1c:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022a1e:	9321      	str	r3, [sp, #132]	; 0x84
90022a20:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022a22:	441a      	add	r2, r3
90022a24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022a26:	3b01      	subs	r3, #1
90022a28:	9222      	str	r2, [sp, #136]	; 0x88
90022a2a:	9313      	str	r3, [sp, #76]	; 0x4c
90022a2c:	e687      	b.n	9002273e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022a2e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022a30:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90022a32:	9c22      	ldr	r4, [sp, #136]	; 0x88
90022a34:	4433      	add	r3, r6
90022a36:	9321      	str	r3, [sp, #132]	; 0x84
90022a38:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022a3a:	441c      	add	r4, r3
90022a3c:	9b08      	ldr	r3, [sp, #32]
90022a3e:	3b01      	subs	r3, #1
90022a40:	9422      	str	r4, [sp, #136]	; 0x88
90022a42:	9308      	str	r3, [sp, #32]
90022a44:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022a46:	3302      	adds	r3, #2
90022a48:	9309      	str	r3, [sp, #36]	; 0x24
90022a4a:	e656      	b.n	900226fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90022a4c:	d028      	beq.n	90022aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90022a4e:	9b08      	ldr	r3, [sp, #32]
90022a50:	9823      	ldr	r0, [sp, #140]	; 0x8c
90022a52:	3b01      	subs	r3, #1
90022a54:	9d21      	ldr	r5, [sp, #132]	; 0x84
90022a56:	fb00 5003 	mla	r0, r0, r3, r5
90022a5a:	1400      	asrs	r0, r0, #16
90022a5c:	f53f ae6a 	bmi.w	90022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a60:	3901      	subs	r1, #1
90022a62:	4288      	cmp	r0, r1
90022a64:	f6bf ae66 	bge.w	90022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a68:	9924      	ldr	r1, [sp, #144]	; 0x90
90022a6a:	9822      	ldr	r0, [sp, #136]	; 0x88
90022a6c:	fb01 0303 	mla	r3, r1, r3, r0
90022a70:	141b      	asrs	r3, r3, #16
90022a72:	f53f ae5f 	bmi.w	90022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a76:	3a01      	subs	r2, #1
90022a78:	4293      	cmp	r3, r2
90022a7a:	f6bf ae5b 	bge.w	90022734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a7e:	9b08      	ldr	r3, [sp, #32]
90022a80:	f64f 061f 	movw	r6, #63519	; 0xf81f
90022a84:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90022a88:	9313      	str	r3, [sp, #76]	; 0x4c
90022a8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022a8c:	2b00      	cmp	r3, #0
90022a8e:	f300 8082 	bgt.w	90022b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90022a92:	9b08      	ldr	r3, [sp, #32]
90022a94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022a98:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022a9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022a9e:	9309      	str	r3, [sp, #36]	; 0x24
90022aa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022aa2:	2b00      	cmp	r3, #0
90022aa4:	f340 81ef 	ble.w	90022e86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022aa8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022aac:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022aae:	ee30 0a04 	vadd.f32	s0, s0, s8
90022ab2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022ab6:	eef0 6a62 	vmov.f32	s13, s5
90022aba:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022abe:	ee31 1a05 	vadd.f32	s2, s2, s10
90022ac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ac6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
90022aca:	eef0 6a43 	vmov.f32	s13, s6
90022ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ad2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
90022ad6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022ada:	ee61 7a27 	vmul.f32	s15, s2, s15
90022ade:	ee77 2a62 	vsub.f32	s5, s14, s5
90022ae2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022ae6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022aea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022aee:	ee12 2a90 	vmov	r2, s5
90022af2:	eef0 2a47 	vmov.f32	s5, s14
90022af6:	fb92 f3f3 	sdiv	r3, r2, r3
90022afa:	ee13 2a10 	vmov	r2, s6
90022afe:	9323      	str	r3, [sp, #140]	; 0x8c
90022b00:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b02:	eeb0 3a67 	vmov.f32	s6, s15
90022b06:	fb92 f3f3 	sdiv	r3, r2, r3
90022b0a:	9324      	str	r3, [sp, #144]	; 0x90
90022b0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022b0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022b10:	3b01      	subs	r3, #1
90022b12:	9311      	str	r3, [sp, #68]	; 0x44
90022b14:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b16:	bf08      	it	eq
90022b18:	4613      	moveq	r3, r2
90022b1a:	9308      	str	r3, [sp, #32]
90022b1c:	e5df      	b.n	900226de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90022b1e:	fb08 f505 	mul.w	r5, r8, r5
90022b22:	fb09 5303 	mla	r3, r9, r3, r5
90022b26:	e65f      	b.n	900227e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90022b28:	4681      	mov	r9, r0
90022b2a:	e686      	b.n	9002283a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022b2c:	f1c1 0210 	rsb	r2, r1, #16
90022b30:	4341      	muls	r1, r0
90022b32:	fb09 1902 	mla	r9, r9, r2, r1
90022b36:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022b3a:	ea4f 5259 	mov.w	r2, r9, lsr #21
90022b3e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022b42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022b46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022b4a:	ea42 0909 	orr.w	r9, r2, r9
90022b4e:	fa1f f289 	uxth.w	r2, r9
90022b52:	e71b      	b.n	9002298c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90022b54:	803a      	strh	r2, [r7, #0]
90022b56:	e75d      	b.n	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b58:	f115 0e01 	adds.w	lr, r5, #1
90022b5c:	f53f af5a 	bmi.w	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b60:	4572      	cmp	r2, lr
90022b62:	f6ff af57 	blt.w	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b66:	f110 0e01 	adds.w	lr, r0, #1
90022b6a:	f53f af53 	bmi.w	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b6e:	4573      	cmp	r3, lr
90022b70:	f6ff af50 	blt.w	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b74:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022b76:	b21b      	sxth	r3, r3
90022b78:	b212      	sxth	r2, r2
90022b7a:	9502      	str	r5, [sp, #8]
90022b7c:	9301      	str	r3, [sp, #4]
90022b7e:	9200      	str	r2, [sp, #0]
90022b80:	e9cd 0103 	strd	r0, r1, [sp, #12]
90022b84:	e9cd c405 	strd	ip, r4, [sp, #20]
90022b88:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90022b8c:	4639      	mov	r1, r7
90022b8e:	9815      	ldr	r0, [sp, #84]	; 0x54
90022b90:	f7ff fc02 	bl	90022398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90022b94:	e73e      	b.n	90022a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022b96:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022b98:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022b9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022b9e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90022ba2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022ba4:	fa1f fc82 	uxth.w	ip, r2
90022ba8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022bac:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022bae:	ea4f 100c 	mov.w	r0, ip, lsl #4
90022bb2:	141f      	asrs	r7, r3, #16
90022bb4:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022bb6:	141b      	asrs	r3, r3, #16
90022bb8:	fb01 3707 	mla	r7, r1, r7, r3
90022bbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022bbe:	eb03 0a07 	add.w	sl, r3, r7
90022bc2:	f813 9007 	ldrb.w	r9, [r3, r7]
90022bc6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90022bca:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022bce:	b29b      	uxth	r3, r3
90022bd0:	2d00      	cmp	r5, #0
90022bd2:	f000 813d 	beq.w	90022e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90022bd6:	f81a 4001 	ldrb.w	r4, [sl, r1]
90022bda:	eb0a 0b01 	add.w	fp, sl, r1
90022bde:	fa1f fa85 	uxth.w	sl, r5
90022be2:	940f      	str	r4, [sp, #60]	; 0x3c
90022be4:	fb0a fc0c 	mul.w	ip, sl, ip
90022be8:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022bec:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90022bf0:	eba0 000c 	sub.w	r0, r0, ip
90022bf4:	9410      	str	r4, [sp, #64]	; 0x40
90022bf6:	fa1f fa8a 	uxth.w	sl, sl
90022bfa:	b280      	uxth	r0, r0
90022bfc:	eba3 030a 	sub.w	r3, r3, sl
90022c00:	fb08 f000 	mul.w	r0, r8, r0
90022c04:	b29b      	uxth	r3, r3
90022c06:	fb09 0303 	mla	r3, r9, r3, r0
90022c0a:	980f      	ldr	r0, [sp, #60]	; 0x3c
90022c0c:	fb0a 3300 	mla	r3, sl, r0, r3
90022c10:	fb0c 3304 	mla	r3, ip, r4, r3
90022c14:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022c18:	2b00      	cmp	r3, #0
90022c1a:	f000 810b 	beq.w	90022e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90022c1e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90022c20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90022c24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022c26:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022c2a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022c2e:	f000 8114 	beq.w	90022e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90022c32:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90022c36:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022c3a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022c3e:	fb0a fc0c 	mul.w	ip, sl, ip
90022c42:	fb09 f707 	mul.w	r7, r9, r7
90022c46:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90022c4a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022c4e:	f107 0b20 	add.w	fp, r7, #32
90022c52:	44cc      	add	ip, r9
90022c54:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90022c58:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022c5c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022c60:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90022c64:	ea4c 0909 	orr.w	r9, ip, r9
90022c68:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022c6c:	8847      	ldrh	r7, [r0, #2]
90022c6e:	d019      	beq.n	90022ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90022c70:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90022c74:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022c78:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022c7c:	fb0a fc0c 	mul.w	ip, sl, ip
90022c80:	fb08 f807 	mul.w	r8, r8, r7
90022c84:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022c88:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022c8c:	f108 0b20 	add.w	fp, r8, #32
90022c90:	44bc      	add	ip, r7
90022c92:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90022c96:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022c9a:	0a3f      	lsrs	r7, r7, #8
90022c9c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022ca0:	ea4c 0707 	orr.w	r7, ip, r7
90022ca4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022ca8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022cac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022cb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022cb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022cb8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022cbc:	ea4c 0909 	orr.w	r9, ip, r9
90022cc0:	ea4a 0707 	orr.w	r7, sl, r7
90022cc4:	2d00      	cmp	r5, #0
90022cc6:	f000 80ca 	beq.w	90022e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90022cca:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022cce:	3901      	subs	r1, #1
90022cd0:	0049      	lsls	r1, r1, #1
90022cd2:	3102      	adds	r1, #2
90022cd4:	eb00 0c01 	add.w	ip, r0, r1
90022cd8:	5a41      	ldrh	r1, [r0, r1]
90022cda:	980f      	ldr	r0, [sp, #60]	; 0x3c
90022cdc:	28ff      	cmp	r0, #255	; 0xff
90022cde:	d019      	beq.n	90022d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90022ce0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90022ce4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90022ce6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022cea:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022cee:	fb04 fa01 	mul.w	sl, r4, r1
90022cf2:	fb08 f800 	mul.w	r8, r8, r0
90022cf6:	f10a 0020 	add.w	r0, sl, #32
90022cfa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022cfe:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022d02:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90022d06:	4441      	add	r1, r8
90022d08:	0a00      	lsrs	r0, r0, #8
90022d0a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90022d0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022d12:	4301      	orrs	r1, r0
90022d14:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022d16:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022d1a:	2cff      	cmp	r4, #255	; 0xff
90022d1c:	d01a      	beq.n	90022d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90022d1e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90022d22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022d26:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022d2a:	fb04 fa00 	mul.w	sl, r4, r0
90022d2e:	fb08 f80c 	mul.w	r8, r8, ip
90022d32:	f10a 0c20 	add.w	ip, sl, #32
90022d36:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022d3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022d3e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90022d42:	4440      	add	r0, r8
90022d44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d48:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90022d4c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022d50:	ea40 000c 	orr.w	r0, r0, ip
90022d54:	fb15 fc02 	smulbb	ip, r5, r2
90022d58:	f1c5 0810 	rsb	r8, r5, #16
90022d5c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90022d60:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022d64:	ea4f 0cec 	mov.w	ip, ip, asr #3
90022d68:	eba8 0802 	sub.w	r8, r8, r2
90022d6c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022d70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022d74:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90022d78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022d7c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022d80:	ea4a 0101 	orr.w	r1, sl, r1
90022d84:	437a      	muls	r2, r7
90022d86:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90022d8a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022d8e:	fb09 2208 	mla	r2, r9, r8, r2
90022d92:	ea4b 0000 	orr.w	r0, fp, r0
90022d96:	fb05 2201 	mla	r2, r5, r1, r2
90022d9a:	fb0c 2200 	mla	r2, ip, r0, r2
90022d9e:	0d57      	lsrs	r7, r2, #21
90022da0:	0952      	lsrs	r2, r2, #5
90022da2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022da6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022daa:	433a      	orrs	r2, r7
90022dac:	2bff      	cmp	r3, #255	; 0xff
90022dae:	b292      	uxth	r2, r2
90022db0:	d102      	bne.n	90022db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90022db2:	9912      	ldr	r1, [sp, #72]	; 0x48
90022db4:	29ff      	cmp	r1, #255	; 0xff
90022db6:	d063      	beq.n	90022e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90022db8:	980a      	ldr	r0, [sp, #40]	; 0x28
90022dba:	1215      	asrs	r5, r2, #8
90022dbc:	f8be 1000 	ldrh.w	r1, [lr]
90022dc0:	4343      	muls	r3, r0
90022dc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022dc4:	10cf      	asrs	r7, r1, #3
90022dc6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022dca:	1c58      	adds	r0, r3, #1
90022dcc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022dd0:	eb00 2323 	add.w	r3, r0, r3, asr #8
90022dd4:	1208      	asrs	r0, r1, #8
90022dd6:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022dda:	00c9      	lsls	r1, r1, #3
90022ddc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022de0:	b2db      	uxtb	r3, r3
90022de2:	b2c9      	uxtb	r1, r1
90022de4:	fb10 f003 	smulbb	r0, r0, r3
90022de8:	fb11 f103 	smulbb	r1, r1, r3
90022dec:	fb05 0504 	mla	r5, r5, r4, r0
90022df0:	10d0      	asrs	r0, r2, #3
90022df2:	fb17 f703 	smulbb	r7, r7, r3
90022df6:	00d2      	lsls	r2, r2, #3
90022df8:	b2ad      	uxth	r5, r5
90022dfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90022dfe:	b2d2      	uxtb	r2, r2
90022e00:	fb00 7004 	mla	r0, r0, r4, r7
90022e04:	1c6b      	adds	r3, r5, #1
90022e06:	fb02 1204 	mla	r2, r2, r4, r1
90022e0a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022e0e:	b292      	uxth	r2, r2
90022e10:	b280      	uxth	r0, r0
90022e12:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022e16:	1c57      	adds	r7, r2, #1
90022e18:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90022e1c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022e20:	433d      	orrs	r5, r7
90022e22:	1c47      	adds	r7, r0, #1
90022e24:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022e28:	097f      	lsrs	r7, r7, #5
90022e2a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022e2e:	433d      	orrs	r5, r7
90022e30:	f8ae 5000 	strh.w	r5, [lr]
90022e34:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022e36:	f10e 0e02 	add.w	lr, lr, #2
90022e3a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90022e3c:	4413      	add	r3, r2
90022e3e:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022e40:	9321      	str	r3, [sp, #132]	; 0x84
90022e42:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022e44:	441a      	add	r2, r3
90022e46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022e48:	3b01      	subs	r3, #1
90022e4a:	9222      	str	r2, [sp, #136]	; 0x88
90022e4c:	9313      	str	r3, [sp, #76]	; 0x4c
90022e4e:	e61c      	b.n	90022a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90022e50:	fb08 f000 	mul.w	r0, r8, r0
90022e54:	fb09 0303 	mla	r3, r9, r3, r0
90022e58:	e6dc      	b.n	90022c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90022e5a:	46b9      	mov	r9, r7
90022e5c:	e704      	b.n	90022c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90022e5e:	f1c2 0110 	rsb	r1, r2, #16
90022e62:	437a      	muls	r2, r7
90022e64:	fb09 2901 	mla	r9, r9, r1, r2
90022e68:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022e6c:	ea4f 5059 	mov.w	r0, r9, lsr #21
90022e70:	ea4f 1259 	mov.w	r2, r9, lsr #5
90022e74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022e78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022e7c:	4302      	orrs	r2, r0
90022e7e:	e795      	b.n	90022dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90022e80:	f8ae 2000 	strh.w	r2, [lr]
90022e84:	e7d6      	b.n	90022e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90022e86:	b017      	add	sp, #92	; 0x5c
90022e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90022e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022e90:	b085      	sub	sp, #20
90022e92:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90022e96:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90022e9a:	2800      	cmp	r0, #0
90022e9c:	9103      	str	r1, [sp, #12]
90022e9e:	fb00 7406 	mla	r4, r0, r6, r7
90022ea2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90022ea6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90022eaa:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90022eae:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90022eb2:	eb02 0904 	add.w	r9, r2, r4
90022eb6:	9501      	str	r5, [sp, #4]
90022eb8:	f2c0 8141 	blt.w	9002313e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90022ebc:	4583      	cmp	fp, r0
90022ebe:	f340 813e 	ble.w	9002313e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90022ec2:	2f00      	cmp	r7, #0
90022ec4:	f2c0 8137 	blt.w	90023136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90022ec8:	42be      	cmp	r6, r7
90022eca:	f340 8134 	ble.w	90023136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90022ece:	f812 c004 	ldrb.w	ip, [r2, r4]
90022ed2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90022ed6:	f64f 041f 	movw	r4, #63519	; 0xf81f
90022eda:	ea4f 02ec 	mov.w	r2, ip, asr #3
90022ede:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90022ee2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022ee6:	4355      	muls	r5, r2
90022ee8:	fb0c f203 	mul.w	r2, ip, r3
90022eec:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90022ef0:	f605 0501 	addw	r5, r5, #2049	; 0x801
90022ef4:	441d      	add	r5, r3
90022ef6:	f102 0320 	add.w	r3, r2, #32
90022efa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022efe:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90022f02:	0a1b      	lsrs	r3, r3, #8
90022f04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022f08:	431c      	orrs	r4, r3
90022f0a:	1c7b      	adds	r3, r7, #1
90022f0c:	f100 811c 	bmi.w	90023148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90022f10:	429e      	cmp	r6, r3
90022f12:	f340 8119 	ble.w	90023148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90022f16:	2900      	cmp	r1, #0
90022f18:	f000 8119 	beq.w	9002314e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90022f1c:	9a01      	ldr	r2, [sp, #4]
90022f1e:	f899 3001 	ldrb.w	r3, [r9, #1]
90022f22:	8855      	ldrh	r5, [r2, #2]
90022f24:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022f28:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90022f2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022f30:	fb08 f802 	mul.w	r8, r8, r2
90022f34:	f64f 021f 	movw	r2, #63519	; 0xf81f
90022f38:	435d      	muls	r5, r3
90022f3a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022f3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022f42:	44d0      	add	r8, sl
90022f44:	f105 0a20 	add.w	sl, r5, #32
90022f48:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022f4c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022f50:	0a2d      	lsrs	r5, r5, #8
90022f52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022f56:	432a      	orrs	r2, r5
90022f58:	3001      	adds	r0, #1
90022f5a:	f100 80fe 	bmi.w	9002315a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90022f5e:	4583      	cmp	fp, r0
90022f60:	f340 80fb 	ble.w	9002315a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90022f64:	f1be 0f00 	cmp.w	lr, #0
90022f68:	f000 80fc 	beq.w	90023164 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90022f6c:	2f00      	cmp	r7, #0
90022f6e:	f2c0 80f1 	blt.w	90023154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90022f72:	42be      	cmp	r6, r7
90022f74:	f340 80ee 	ble.w	90023154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90022f78:	9801      	ldr	r0, [sp, #4]
90022f7a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90022f7e:	f819 5006 	ldrb.w	r5, [r9, r6]
90022f82:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022f86:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022f8a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90022f8e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90022f92:	fb0a fa00 	mul.w	sl, sl, r0
90022f96:	fb05 f808 	mul.w	r8, r5, r8
90022f9a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022f9e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90022fa2:	4482      	add	sl, r0
90022fa4:	f108 0020 	add.w	r0, r8, #32
90022fa8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022fac:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90022fb0:	0a00      	lsrs	r0, r0, #8
90022fb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022fb6:	ea4b 0b00 	orr.w	fp, fp, r0
90022fba:	3701      	adds	r7, #1
90022fbc:	f100 80d7 	bmi.w	9002316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90022fc0:	42be      	cmp	r6, r7
90022fc2:	f340 80d4 	ble.w	9002316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90022fc6:	2900      	cmp	r1, #0
90022fc8:	f000 80d4 	beq.w	90023174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90022fcc:	3601      	adds	r6, #1
90022fce:	9801      	ldr	r0, [sp, #4]
90022fd0:	f819 7006 	ldrb.w	r7, [r9, r6]
90022fd4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022fd8:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022fdc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90022fe0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022fe4:	fb09 f906 	mul.w	r9, r9, r6
90022fe8:	fb07 f800 	mul.w	r8, r7, r0
90022fec:	f64f 001f 	movw	r0, #63519	; 0xf81f
90022ff0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022ff4:	f609 0901 	addw	r9, r9, #2049	; 0x801
90022ff8:	44d1      	add	r9, sl
90022ffa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90022ffe:	f108 0020 	add.w	r0, r8, #32
90023002:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023006:	0a00      	lsrs	r0, r0, #8
90023008:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002300c:	4330      	orrs	r0, r6
9002300e:	b28e      	uxth	r6, r1
90023010:	fa1f f98e 	uxth.w	r9, lr
90023014:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023018:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002301c:	fb06 f809 	mul.w	r8, r6, r9
90023020:	0136      	lsls	r6, r6, #4
90023022:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023026:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002302a:	9601      	str	r6, [sp, #4]
9002302c:	ea4a 0404 	orr.w	r4, sl, r4
90023030:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023034:	fa1f f689 	uxth.w	r6, r9
90023038:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002303c:	fb11 f90e 	smulbb	r9, r1, lr
90023040:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023044:	9602      	str	r6, [sp, #8]
90023046:	4626      	mov	r6, r4
90023048:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002304c:	f1ce 0410 	rsb	r4, lr, #16
90023050:	ea4a 0202 	orr.w	r2, sl, r2
90023054:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023058:	1a64      	subs	r4, r4, r1
9002305a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002305e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023062:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023066:	434a      	muls	r2, r1
90023068:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002306c:	ea4a 0000 	orr.w	r0, sl, r0
90023070:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023074:	fb04 2406 	mla	r4, r4, r6, r2
90023078:	9903      	ldr	r1, [sp, #12]
9002307a:	fb09 4200 	mla	r2, r9, r0, r4
9002307e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023082:	9801      	ldr	r0, [sp, #4]
90023084:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90023088:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002308c:	8809      	ldrh	r1, [r1, #0]
9002308e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90023092:	ea44 0b0b 	orr.w	fp, r4, fp
90023096:	9c02      	ldr	r4, [sp, #8]
90023098:	1b00      	subs	r0, r0, r4
9002309a:	9c01      	ldr	r4, [sp, #4]
9002309c:	fb0e 2e0b 	mla	lr, lr, fp, r2
900230a0:	eba4 0608 	sub.w	r6, r4, r8
900230a4:	b280      	uxth	r0, r0
900230a6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900230aa:	b2b6      	uxth	r6, r6
900230ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900230b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900230b4:	4373      	muls	r3, r6
900230b6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900230ba:	fb0c 3300 	mla	r3, ip, r0, r3
900230be:	9802      	ldr	r0, [sp, #8]
900230c0:	ea42 0e0e 	orr.w	lr, r2, lr
900230c4:	fb00 3505 	mla	r5, r0, r5, r3
900230c8:	120b      	asrs	r3, r1, #8
900230ca:	10c8      	asrs	r0, r1, #3
900230cc:	fb08 5707 	mla	r7, r8, r7, r5
900230d0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900230d4:	00c9      	lsls	r1, r1, #3
900230d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900230da:	ea6f 2727 	mvn.w	r7, r7, asr #8
900230de:	fa1f f28e 	uxth.w	r2, lr
900230e2:	b2c9      	uxtb	r1, r1
900230e4:	b2ff      	uxtb	r7, r7
900230e6:	437b      	muls	r3, r7
900230e8:	4378      	muls	r0, r7
900230ea:	434f      	muls	r7, r1
900230ec:	1c59      	adds	r1, r3, #1
900230ee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900230f2:	1213      	asrs	r3, r2, #8
900230f4:	f023 0307 	bic.w	r3, r3, #7
900230f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900230fc:	1c41      	adds	r1, r0, #1
900230fe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023102:	10d1      	asrs	r1, r2, #3
90023104:	021b      	lsls	r3, r3, #8
90023106:	f021 0103 	bic.w	r1, r1, #3
9002310a:	00d2      	lsls	r2, r2, #3
9002310c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023110:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90023114:	00c9      	lsls	r1, r1, #3
90023116:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002311a:	430b      	orrs	r3, r1
9002311c:	1c79      	adds	r1, r7, #1
9002311e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90023122:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023126:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002312a:	431a      	orrs	r2, r3
9002312c:	9b03      	ldr	r3, [sp, #12]
9002312e:	801a      	strh	r2, [r3, #0]
90023130:	b005      	add	sp, #20
90023132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023136:	f04f 0c00 	mov.w	ip, #0
9002313a:	4664      	mov	r4, ip
9002313c:	e6e5      	b.n	90022f0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002313e:	2300      	movs	r3, #0
90023140:	469c      	mov	ip, r3
90023142:	461a      	mov	r2, r3
90023144:	461c      	mov	r4, r3
90023146:	e707      	b.n	90022f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023148:	2300      	movs	r3, #0
9002314a:	461a      	mov	r2, r3
9002314c:	e704      	b.n	90022f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002314e:	460b      	mov	r3, r1
90023150:	460a      	mov	r2, r1
90023152:	e701      	b.n	90022f58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023154:	2500      	movs	r5, #0
90023156:	46ab      	mov	fp, r5
90023158:	e72f      	b.n	90022fba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002315a:	2700      	movs	r7, #0
9002315c:	463d      	mov	r5, r7
9002315e:	4638      	mov	r0, r7
90023160:	46bb      	mov	fp, r7
90023162:	e754      	b.n	9002300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023164:	4677      	mov	r7, lr
90023166:	4675      	mov	r5, lr
90023168:	4670      	mov	r0, lr
9002316a:	46f3      	mov	fp, lr
9002316c:	e74f      	b.n	9002300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002316e:	2700      	movs	r7, #0
90023170:	4638      	mov	r0, r7
90023172:	e74c      	b.n	9002300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023174:	460f      	mov	r7, r1
90023176:	4608      	mov	r0, r1
90023178:	e749      	b.n	9002300e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002317c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002317c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023180:	b093      	sub	sp, #76	; 0x4c
90023182:	9210      	str	r2, [sp, #64]	; 0x40
90023184:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023186:	9011      	str	r0, [sp, #68]	; 0x44
90023188:	910e      	str	r1, [sp, #56]	; 0x38
9002318a:	6850      	ldr	r0, [r2, #4]
9002318c:	9306      	str	r3, [sp, #24]
9002318e:	6812      	ldr	r2, [r2, #0]
90023190:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90023194:	fb00 1303 	mla	r3, r0, r3, r1
90023198:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002319c:	9307      	str	r3, [sp, #28]
9002319e:	9b24      	ldr	r3, [sp, #144]	; 0x90
900231a0:	681b      	ldr	r3, [r3, #0]
900231a2:	9308      	str	r3, [sp, #32]
900231a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900231a6:	685b      	ldr	r3, [r3, #4]
900231a8:	9309      	str	r3, [sp, #36]	; 0x24
900231aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900231ac:	2b00      	cmp	r3, #0
900231ae:	dc03      	bgt.n	900231b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900231b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
900231b2:	2b00      	cmp	r3, #0
900231b4:	f340 83b6 	ble.w	90023924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900231b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900231ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900231be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900231c2:	1e48      	subs	r0, r1, #1
900231c4:	1e55      	subs	r5, r2, #1
900231c6:	9b06      	ldr	r3, [sp, #24]
900231c8:	2b00      	cmp	r3, #0
900231ca:	f340 8165 	ble.w	90023498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900231ce:	9e1d      	ldr	r6, [sp, #116]	; 0x74
900231d0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900231d2:	1436      	asrs	r6, r6, #16
900231d4:	ea4f 4323 	mov.w	r3, r3, asr #16
900231d8:	d406      	bmi.n	900231e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231da:	4286      	cmp	r6, r0
900231dc:	da04      	bge.n	900231e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231de:	2b00      	cmp	r3, #0
900231e0:	db02      	blt.n	900231e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231e2:	42ab      	cmp	r3, r5
900231e4:	f2c0 8159 	blt.w	9002349a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900231e8:	3601      	adds	r6, #1
900231ea:	f100 8146 	bmi.w	9002347a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900231ee:	42b1      	cmp	r1, r6
900231f0:	f2c0 8143 	blt.w	9002347a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900231f4:	3301      	adds	r3, #1
900231f6:	f100 8140 	bmi.w	9002347a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900231fa:	429a      	cmp	r2, r3
900231fc:	f2c0 813d 	blt.w	9002347a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023200:	9b06      	ldr	r3, [sp, #24]
90023202:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023206:	9f07      	ldr	r7, [sp, #28]
90023208:	930f      	str	r3, [sp, #60]	; 0x3c
9002320a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002320c:	2b00      	cmp	r3, #0
9002320e:	f340 8166 	ble.w	900234de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023212:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023214:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023216:	1418      	asrs	r0, r3, #16
90023218:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002321a:	142d      	asrs	r5, r5, #16
9002321c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023220:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023222:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90023226:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023228:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002322c:	f100 81f0 	bmi.w	90023610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023230:	f102 3eff 	add.w	lr, r2, #4294967295
90023234:	4575      	cmp	r5, lr
90023236:	f280 81eb 	bge.w	90023610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002323a:	2800      	cmp	r0, #0
9002323c:	f2c0 81e8 	blt.w	90023610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023240:	f103 3eff 	add.w	lr, r3, #4294967295
90023244:	4570      	cmp	r0, lr
90023246:	f280 81e3 	bge.w	90023610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002324a:	b212      	sxth	r2, r2
9002324c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002324e:	fa1f fe81 	uxth.w	lr, r1
90023252:	fb00 5002 	mla	r0, r0, r2, r5
90023256:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002325a:	eb03 0a00 	add.w	sl, r3, r0
9002325e:	f813 9000 	ldrb.w	r9, [r3, r0]
90023262:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90023266:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002326a:	b29b      	uxth	r3, r3
9002326c:	f1bc 0f00 	cmp.w	ip, #0
90023270:	f000 817b 	beq.w	9002356a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023274:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023278:	eb0a 0b02 	add.w	fp, sl, r2
9002327c:	fa1f fa8c 	uxth.w	sl, ip
90023280:	940a      	str	r4, [sp, #40]	; 0x28
90023282:	fb0a fe0e 	mul.w	lr, sl, lr
90023286:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002328a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002328e:	eba5 050e 	sub.w	r5, r5, lr
90023292:	940b      	str	r4, [sp, #44]	; 0x2c
90023294:	fa1f fa8a 	uxth.w	sl, sl
90023298:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002329a:	b2ad      	uxth	r5, r5
9002329c:	eba3 030a 	sub.w	r3, r3, sl
900232a0:	fb08 f505 	mul.w	r5, r8, r5
900232a4:	b29b      	uxth	r3, r3
900232a6:	fb09 5303 	mla	r3, r9, r3, r5
900232aa:	fb0a 3304 	mla	r3, sl, r4, r3
900232ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900232b0:	fb0e 3304 	mla	r3, lr, r4, r3
900232b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900232b8:	2b00      	cmp	r3, #0
900232ba:	f000 80d1 	beq.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900232be:	9c08      	ldr	r4, [sp, #32]
900232c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900232c4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900232c8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900232cc:	f000 8152 	beq.w	90023574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900232d0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900232d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900232d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900232dc:	fb0a fe0e 	mul.w	lr, sl, lr
900232e0:	fb09 f000 	mul.w	r0, r9, r0
900232e4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900232e8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900232ec:	f100 0b20 	add.w	fp, r0, #32
900232f0:	44ce      	add	lr, r9
900232f2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900232f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900232fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
900232fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023302:	ea4e 0909 	orr.w	r9, lr, r9
90023306:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002330a:	8868      	ldrh	r0, [r5, #2]
9002330c:	d019      	beq.n	90023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002330e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90023312:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023316:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002331a:	fb0a fe0e 	mul.w	lr, sl, lr
9002331e:	fb08 f800 	mul.w	r8, r8, r0
90023322:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90023326:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002332a:	f108 0b20 	add.w	fp, r8, #32
9002332e:	4486      	add	lr, r0
90023330:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90023334:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023338:	0a00      	lsrs	r0, r0, #8
9002333a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002333e:	ea4e 0000 	orr.w	r0, lr, r0
90023342:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90023346:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002334a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002334e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023352:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90023356:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002335a:	ea4e 0909 	orr.w	r9, lr, r9
9002335e:	ea4a 0000 	orr.w	r0, sl, r0
90023362:	f1bc 0f00 	cmp.w	ip, #0
90023366:	f000 8107 	beq.w	90023578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002336a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9002336e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023370:	3a01      	subs	r2, #1
90023372:	2cff      	cmp	r4, #255	; 0xff
90023374:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023378:	f102 0202 	add.w	r2, r2, #2
9002337c:	eb05 0e02 	add.w	lr, r5, r2
90023380:	5aaa      	ldrh	r2, [r5, r2]
90023382:	d018      	beq.n	900233b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90023384:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90023388:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002338c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023390:	fb04 fa02 	mul.w	sl, r4, r2
90023394:	fb08 f805 	mul.w	r8, r8, r5
90023398:	f10a 0520 	add.w	r5, sl, #32
9002339c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900233a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
900233a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900233a8:	4442      	add	r2, r8
900233aa:	0a2d      	lsrs	r5, r5, #8
900233ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900233b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900233b4:	432a      	orrs	r2, r5
900233b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900233b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900233bc:	2cff      	cmp	r4, #255	; 0xff
900233be:	d01a      	beq.n	900233f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900233c0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900233c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900233c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900233cc:	fb04 fa05 	mul.w	sl, r4, r5
900233d0:	fb08 f80e 	mul.w	r8, r8, lr
900233d4:	f10a 0e20 	add.w	lr, sl, #32
900233d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900233dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
900233e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900233e4:	4445      	add	r5, r8
900233e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900233ee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900233f2:	ea45 050e 	orr.w	r5, r5, lr
900233f6:	fb1c fe01 	smulbb	lr, ip, r1
900233fa:	f1cc 0810 	rsb	r8, ip, #16
900233fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023402:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023406:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002340a:	eba8 0801 	sub.w	r8, r8, r1
9002340e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023412:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023416:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002341a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002341e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023422:	ea4a 0202 	orr.w	r2, sl, r2
90023426:	4341      	muls	r1, r0
90023428:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002342c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023430:	fb09 1108 	mla	r1, r9, r8, r1
90023434:	ea4b 0505 	orr.w	r5, fp, r5
90023438:	fb0c 1102 	mla	r1, ip, r2, r1
9002343c:	fb0e 1e05 	mla	lr, lr, r5, r1
90023440:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023444:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023448:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002344c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023450:	ea42 0e0e 	orr.w	lr, r2, lr
90023454:	fa1f f28e 	uxth.w	r2, lr
90023458:	2bff      	cmp	r3, #255	; 0xff
9002345a:	f040 80a1 	bne.w	900235a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002345e:	803a      	strh	r2, [r7, #0]
90023460:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023462:	3702      	adds	r7, #2
90023464:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023466:	4413      	add	r3, r2
90023468:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002346a:	931d      	str	r3, [sp, #116]	; 0x74
9002346c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002346e:	441a      	add	r2, r3
90023470:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023472:	3b01      	subs	r3, #1
90023474:	921e      	str	r2, [sp, #120]	; 0x78
90023476:	930f      	str	r3, [sp, #60]	; 0x3c
90023478:	e6c7      	b.n	9002320a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002347a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002347c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9002347e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90023480:	4433      	add	r3, r6
90023482:	931d      	str	r3, [sp, #116]	; 0x74
90023484:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023486:	441c      	add	r4, r3
90023488:	9b06      	ldr	r3, [sp, #24]
9002348a:	3b01      	subs	r3, #1
9002348c:	941e      	str	r4, [sp, #120]	; 0x78
9002348e:	9306      	str	r3, [sp, #24]
90023490:	9b07      	ldr	r3, [sp, #28]
90023492:	3302      	adds	r3, #2
90023494:	9307      	str	r3, [sp, #28]
90023496:	e696      	b.n	900231c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023498:	d028      	beq.n	900234ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002349a:	9b06      	ldr	r3, [sp, #24]
9002349c:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002349e:	3b01      	subs	r3, #1
900234a0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900234a2:	fb00 5003 	mla	r0, r0, r3, r5
900234a6:	1400      	asrs	r0, r0, #16
900234a8:	f53f aeaa 	bmi.w	90023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900234ac:	3901      	subs	r1, #1
900234ae:	4288      	cmp	r0, r1
900234b0:	f6bf aea6 	bge.w	90023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900234b4:	9920      	ldr	r1, [sp, #128]	; 0x80
900234b6:	981e      	ldr	r0, [sp, #120]	; 0x78
900234b8:	fb01 0303 	mla	r3, r1, r3, r0
900234bc:	141b      	asrs	r3, r3, #16
900234be:	f53f ae9f 	bmi.w	90023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900234c2:	3a01      	subs	r2, #1
900234c4:	4293      	cmp	r3, r2
900234c6:	f6bf ae9b 	bge.w	90023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900234ca:	9b06      	ldr	r3, [sp, #24]
900234cc:	f64f 061f 	movw	r6, #63519	; 0xf81f
900234d0:	f8dd e01c 	ldr.w	lr, [sp, #28]
900234d4:	930f      	str	r3, [sp, #60]	; 0x3c
900234d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900234d8:	2b00      	cmp	r3, #0
900234da:	f300 80b6 	bgt.w	9002364a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900234de:	9b06      	ldr	r3, [sp, #24]
900234e0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900234e4:	9b07      	ldr	r3, [sp, #28]
900234e6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900234ea:	9307      	str	r3, [sp, #28]
900234ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900234ee:	2b00      	cmp	r3, #0
900234f0:	f340 8218 	ble.w	90023924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900234f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900234f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900234fa:	ee30 0a04 	vadd.f32	s0, s0, s8
900234fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023502:	eef0 6a62 	vmov.f32	s13, s5
90023506:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002350a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002350e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023512:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
90023516:	eef0 6a43 	vmov.f32	s13, s6
9002351a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002351e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90023522:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023526:	ee61 7a27 	vmul.f32	s15, s2, s15
9002352a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002352e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023532:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023536:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002353a:	ee12 2a90 	vmov	r2, s5
9002353e:	eef0 2a47 	vmov.f32	s5, s14
90023542:	fb92 f3f3 	sdiv	r3, r2, r3
90023546:	ee13 2a10 	vmov	r2, s6
9002354a:	931f      	str	r3, [sp, #124]	; 0x7c
9002354c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002354e:	eeb0 3a67 	vmov.f32	s6, s15
90023552:	fb92 f3f3 	sdiv	r3, r2, r3
90023556:	9320      	str	r3, [sp, #128]	; 0x80
90023558:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002355a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002355c:	3b01      	subs	r3, #1
9002355e:	930e      	str	r3, [sp, #56]	; 0x38
90023560:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023562:	bf08      	it	eq
90023564:	4613      	moveq	r3, r2
90023566:	9306      	str	r3, [sp, #24]
90023568:	e61f      	b.n	900231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9002356a:	fb08 f505 	mul.w	r5, r8, r5
9002356e:	fb09 5303 	mla	r3, r9, r3, r5
90023572:	e69f      	b.n	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90023574:	4681      	mov	r9, r0
90023576:	e6c6      	b.n	90023306 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90023578:	f1c1 0210 	rsb	r2, r1, #16
9002357c:	4341      	muls	r1, r0
9002357e:	fb09 1902 	mla	r9, r9, r2, r1
90023582:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023586:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002358a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002358e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023592:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023596:	ea42 0909 	orr.w	r9, r2, r9
9002359a:	fa1f f289 	uxth.w	r2, r9
9002359e:	e75b      	b.n	90023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900235a0:	f8b7 c000 	ldrh.w	ip, [r7]
900235a4:	43db      	mvns	r3, r3
900235a6:	ea4f 202c 	mov.w	r0, ip, asr #8
900235aa:	fa5f fe83 	uxtb.w	lr, r3
900235ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900235b2:	ea4f 05ec 	mov.w	r5, ip, asr #3
900235b6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900235ba:	fb00 f00e 	mul.w	r0, r0, lr
900235be:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900235c2:	b2db      	uxtb	r3, r3
900235c4:	1c41      	adds	r1, r0, #1
900235c6:	fb05 f50e 	mul.w	r5, r5, lr
900235ca:	fb03 f30e 	mul.w	r3, r3, lr
900235ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900235d2:	1211      	asrs	r1, r2, #8
900235d4:	f021 0107 	bic.w	r1, r1, #7
900235d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900235dc:	48d3      	ldr	r0, [pc, #844]	; (9002392c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900235de:	b2c9      	uxtb	r1, r1
900235e0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900235e4:	1c69      	adds	r1, r5, #1
900235e6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900235ea:	10d1      	asrs	r1, r2, #3
900235ec:	00d2      	lsls	r2, r2, #3
900235ee:	f021 0103 	bic.w	r1, r1, #3
900235f2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900235f6:	00c9      	lsls	r1, r1, #3
900235f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900235fc:	4301      	orrs	r1, r0
900235fe:	1c58      	adds	r0, r3, #1
90023600:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023604:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023608:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002360c:	430a      	orrs	r2, r1
9002360e:	e726      	b.n	9002345e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90023610:	f115 0e01 	adds.w	lr, r5, #1
90023614:	f53f af24 	bmi.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023618:	4572      	cmp	r2, lr
9002361a:	f6ff af21 	blt.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002361e:	f110 0e01 	adds.w	lr, r0, #1
90023622:	f53f af1d 	bmi.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023626:	4573      	cmp	r3, lr
90023628:	f6ff af1a 	blt.w	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002362c:	b21b      	sxth	r3, r3
9002362e:	b212      	sxth	r2, r2
90023630:	9301      	str	r3, [sp, #4]
90023632:	9200      	str	r2, [sp, #0]
90023634:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90023638:	e9cd 5002 	strd	r5, r0, [sp, #8]
9002363c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90023640:	4639      	mov	r1, r7
90023642:	9811      	ldr	r0, [sp, #68]	; 0x44
90023644:	f7ff fc22 	bl	90022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90023648:	e70a      	b.n	90023460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002364a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002364c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023650:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023652:	f3c3 3503 	ubfx	r5, r3, #12, #4
90023656:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023658:	fa1f fc82 	uxth.w	ip, r2
9002365c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023660:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023662:	ea4f 100c 	mov.w	r0, ip, lsl #4
90023666:	141f      	asrs	r7, r3, #16
90023668:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002366a:	141b      	asrs	r3, r3, #16
9002366c:	fb01 3707 	mla	r7, r1, r7, r3
90023670:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023672:	eb03 0a07 	add.w	sl, r3, r7
90023676:	f813 9007 	ldrb.w	r9, [r3, r7]
9002367a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002367e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023682:	b29b      	uxth	r3, r3
90023684:	2d00      	cmp	r5, #0
90023686:	f000 80fe 	beq.w	90023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002368a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002368e:	eb0a 0b01 	add.w	fp, sl, r1
90023692:	fa1f fa85 	uxth.w	sl, r5
90023696:	940c      	str	r4, [sp, #48]	; 0x30
90023698:	fb0a fc0c 	mul.w	ip, sl, ip
9002369c:	f89b 4001 	ldrb.w	r4, [fp, #1]
900236a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900236a4:	eba0 000c 	sub.w	r0, r0, ip
900236a8:	940d      	str	r4, [sp, #52]	; 0x34
900236aa:	fa1f fa8a 	uxth.w	sl, sl
900236ae:	b280      	uxth	r0, r0
900236b0:	eba3 030a 	sub.w	r3, r3, sl
900236b4:	fb08 f000 	mul.w	r0, r8, r0
900236b8:	b29b      	uxth	r3, r3
900236ba:	fb09 0303 	mla	r3, r9, r3, r0
900236be:	980c      	ldr	r0, [sp, #48]	; 0x30
900236c0:	fb0a 3300 	mla	r3, sl, r0, r3
900236c4:	fb0c 3304 	mla	r3, ip, r4, r3
900236c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900236cc:	2b00      	cmp	r3, #0
900236ce:	f000 80cc 	beq.w	9002386a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900236d2:	9808      	ldr	r0, [sp, #32]
900236d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900236d8:	9c08      	ldr	r4, [sp, #32]
900236da:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900236de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900236e2:	f000 80d5 	beq.w	90023890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900236e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900236ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900236ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900236f2:	fb0a fc0c 	mul.w	ip, sl, ip
900236f6:	fb09 f707 	mul.w	r7, r9, r7
900236fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900236fe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023702:	f107 0b20 	add.w	fp, r7, #32
90023706:	44cc      	add	ip, r9
90023708:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002370c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023710:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023714:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023718:	ea4c 0909 	orr.w	r9, ip, r9
9002371c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90023720:	8847      	ldrh	r7, [r0, #2]
90023722:	d019      	beq.n	90023758 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90023724:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023728:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002372c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023730:	fb0a fc0c 	mul.w	ip, sl, ip
90023734:	fb08 f807 	mul.w	r8, r8, r7
90023738:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002373c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023740:	f108 0b20 	add.w	fp, r8, #32
90023744:	44bc      	add	ip, r7
90023746:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002374a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002374e:	0a3f      	lsrs	r7, r7, #8
90023750:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023754:	ea4c 0707 	orr.w	r7, ip, r7
90023758:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9002375c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023760:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90023764:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90023768:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002376c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023770:	ea4c 0909 	orr.w	r9, ip, r9
90023774:	ea4a 0707 	orr.w	r7, sl, r7
90023778:	2d00      	cmp	r5, #0
9002377a:	f000 808b 	beq.w	90023894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002377e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90023782:	3901      	subs	r1, #1
90023784:	0049      	lsls	r1, r1, #1
90023786:	3102      	adds	r1, #2
90023788:	eb00 0c01 	add.w	ip, r0, r1
9002378c:	5a41      	ldrh	r1, [r0, r1]
9002378e:	980c      	ldr	r0, [sp, #48]	; 0x30
90023790:	28ff      	cmp	r0, #255	; 0xff
90023792:	d019      	beq.n	900237c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023794:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90023798:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002379a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002379e:	ea4f 08e4 	mov.w	r8, r4, asr #3
900237a2:	fb04 fa01 	mul.w	sl, r4, r1
900237a6:	fb08 f800 	mul.w	r8, r8, r0
900237aa:	f10a 0020 	add.w	r0, sl, #32
900237ae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900237b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
900237b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900237ba:	4441      	add	r1, r8
900237bc:	0a00      	lsrs	r0, r0, #8
900237be:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900237c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900237c6:	4301      	orrs	r1, r0
900237c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900237ca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900237ce:	2cff      	cmp	r4, #255	; 0xff
900237d0:	d01a      	beq.n	90023808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900237d2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
900237d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900237da:	ea4f 08e4 	mov.w	r8, r4, asr #3
900237de:	fb04 fa00 	mul.w	sl, r4, r0
900237e2:	fb08 f80c 	mul.w	r8, r8, ip
900237e6:	f10a 0c20 	add.w	ip, sl, #32
900237ea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900237ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
900237f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900237f6:	4440      	add	r0, r8
900237f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237fc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023800:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023804:	ea40 000c 	orr.w	r0, r0, ip
90023808:	fb15 fc02 	smulbb	ip, r5, r2
9002380c:	f1c5 0810 	rsb	r8, r5, #16
90023810:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023814:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023818:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002381c:	eba8 0802 	sub.w	r8, r8, r2
90023820:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023824:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023828:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9002382c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023830:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023834:	ea4a 0101 	orr.w	r1, sl, r1
90023838:	437a      	muls	r2, r7
9002383a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002383e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023842:	fb09 2208 	mla	r2, r9, r8, r2
90023846:	ea4b 0000 	orr.w	r0, fp, r0
9002384a:	fb05 2201 	mla	r2, r5, r1, r2
9002384e:	fb0c 2200 	mla	r2, ip, r0, r2
90023852:	0d57      	lsrs	r7, r2, #21
90023854:	0952      	lsrs	r2, r2, #5
90023856:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002385a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002385e:	433a      	orrs	r2, r7
90023860:	2bff      	cmp	r3, #255	; 0xff
90023862:	b292      	uxth	r2, r2
90023864:	d127      	bne.n	900238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90023866:	f8ae 2000 	strh.w	r2, [lr]
9002386a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002386c:	f10e 0e02 	add.w	lr, lr, #2
90023870:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023872:	4413      	add	r3, r2
90023874:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90023876:	931d      	str	r3, [sp, #116]	; 0x74
90023878:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002387a:	441a      	add	r2, r3
9002387c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002387e:	3b01      	subs	r3, #1
90023880:	921e      	str	r2, [sp, #120]	; 0x78
90023882:	930f      	str	r3, [sp, #60]	; 0x3c
90023884:	e627      	b.n	900234d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023886:	fb08 f000 	mul.w	r0, r8, r0
9002388a:	fb09 0303 	mla	r3, r9, r3, r0
9002388e:	e71b      	b.n	900236c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023890:	46b9      	mov	r9, r7
90023892:	e743      	b.n	9002371c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023894:	f1c2 0110 	rsb	r1, r2, #16
90023898:	437a      	muls	r2, r7
9002389a:	fb09 2901 	mla	r9, r9, r1, r2
9002389e:	ea4f 0949 	mov.w	r9, r9, lsl #1
900238a2:	ea4f 5059 	mov.w	r0, r9, lsr #21
900238a6:	ea4f 1259 	mov.w	r2, r9, lsr #5
900238aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900238ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900238b2:	4302      	orrs	r2, r0
900238b4:	e7d4      	b.n	90023860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900238b6:	f8be 7000 	ldrh.w	r7, [lr]
900238ba:	43db      	mvns	r3, r3
900238bc:	4c1b      	ldr	r4, [pc, #108]	; (9002392c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900238be:	1238      	asrs	r0, r7, #8
900238c0:	fa5f fc83 	uxtb.w	ip, r3
900238c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900238c8:	10fd      	asrs	r5, r7, #3
900238ca:	00fb      	lsls	r3, r7, #3
900238cc:	fb00 f00c 	mul.w	r0, r0, ip
900238d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
900238d4:	b2db      	uxtb	r3, r3
900238d6:	fb05 f10c 	mul.w	r1, r5, ip
900238da:	1c45      	adds	r5, r0, #1
900238dc:	fb03 f30c 	mul.w	r3, r3, ip
900238e0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900238e4:	1215      	asrs	r5, r2, #8
900238e6:	f025 0507 	bic.w	r5, r5, #7
900238ea:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900238ee:	1c4d      	adds	r5, r1, #1
900238f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900238f4:	10d1      	asrs	r1, r2, #3
900238f6:	b2c0      	uxtb	r0, r0
900238f8:	f021 0103 	bic.w	r1, r1, #3
900238fc:	00d2      	lsls	r2, r2, #3
900238fe:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023902:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023906:	00c9      	lsls	r1, r1, #3
90023908:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002390c:	4308      	orrs	r0, r1
9002390e:	1c59      	adds	r1, r3, #1
90023910:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023914:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023918:	f3c3 03c4 	ubfx	r3, r3, #3, #5
9002391c:	4318      	orrs	r0, r3
9002391e:	f8ae 0000 	strh.w	r0, [lr]
90023922:	e7a2      	b.n	9002386a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023924:	b013      	add	sp, #76	; 0x4c
90023926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002392a:	bf00      	nop
9002392c:	fffff800 	.word	0xfffff800

90023930 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90023930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023934:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
90023938:	f9bd a020 	ldrsh.w	sl, [sp, #32]
9002393c:	fb05 4c03 	mla	ip, r5, r3, r4
90023940:	2d00      	cmp	r5, #0
90023942:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
90023946:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002394a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9002394e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90023952:	8808      	ldrh	r0, [r1, #0]
90023954:	f2c0 80a7 	blt.w	90023aa6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023958:	45aa      	cmp	sl, r5
9002395a:	f340 80a4 	ble.w	90023aa6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002395e:	2c00      	cmp	r4, #0
90023960:	f2c0 809f 	blt.w	90023aa2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023964:	42a3      	cmp	r3, r4
90023966:	f340 809c 	ble.w	90023aa2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002396a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002396e:	1c62      	adds	r2, r4, #1
90023970:	f100 809c 	bmi.w	90023aac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023974:	4293      	cmp	r3, r2
90023976:	f340 8099 	ble.w	90023aac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002397a:	f1b9 0f00 	cmp.w	r9, #0
9002397e:	f000 8095 	beq.w	90023aac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023982:	f8be c002 	ldrh.w	ip, [lr, #2]
90023986:	3501      	adds	r5, #1
90023988:	f100 8094 	bmi.w	90023ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002398c:	45aa      	cmp	sl, r5
9002398e:	f340 8091 	ble.w	90023ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023992:	2f00      	cmp	r7, #0
90023994:	f000 808e 	beq.w	90023ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023998:	2c00      	cmp	r4, #0
9002399a:	f2c0 8089 	blt.w	90023ab0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002399e:	42a3      	cmp	r3, r4
900239a0:	f340 8086 	ble.w	90023ab0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900239a4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900239a8:	3401      	adds	r4, #1
900239aa:	f100 8086 	bmi.w	90023aba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900239ae:	42a3      	cmp	r3, r4
900239b0:	f340 8083 	ble.w	90023aba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900239b4:	f1b9 0f00 	cmp.w	r9, #0
900239b8:	d07f      	beq.n	90023aba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900239ba:	3301      	adds	r3, #1
900239bc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900239c0:	ea4f 4408 	mov.w	r4, r8, lsl #16
900239c4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900239c8:	fb19 fe07 	smulbb	lr, r9, r7
900239cc:	f1c7 0210 	rsb	r2, r7, #16
900239d0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900239d4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900239d8:	eba2 0209 	sub.w	r2, r2, r9
900239dc:	ea44 0808 	orr.w	r8, r4, r8
900239e0:	ea4f 440c 	mov.w	r4, ip, lsl #16
900239e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900239e8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900239ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900239f0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900239f4:	ea44 0c0c 	orr.w	ip, r4, ip
900239f8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900239fc:	fb04 f40c 	mul.w	r4, r4, ip
90023a00:	fb02 4808 	mla	r8, r2, r8, r4
90023a04:	041a      	lsls	r2, r3, #16
90023a06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023a0a:	b2b4      	uxth	r4, r6
90023a0c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023a10:	43f6      	mvns	r6, r6
90023a12:	4313      	orrs	r3, r2
90023a14:	042a      	lsls	r2, r5, #16
90023a16:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90023a1a:	b2f6      	uxtb	r6, r6
90023a1c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023a20:	fb0e 8303 	mla	r3, lr, r3, r8
90023a24:	432a      	orrs	r2, r5
90023a26:	fb07 3202 	mla	r2, r7, r2, r3
90023a2a:	10c7      	asrs	r7, r0, #3
90023a2c:	0d53      	lsrs	r3, r2, #21
90023a2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90023a32:	0952      	lsrs	r2, r2, #5
90023a34:	fb17 f706 	smulbb	r7, r7, r6
90023a38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023a3c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023a40:	431a      	orrs	r2, r3
90023a42:	b293      	uxth	r3, r2
90023a44:	1202      	asrs	r2, r0, #8
90023a46:	121d      	asrs	r5, r3, #8
90023a48:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023a4c:	00c0      	lsls	r0, r0, #3
90023a4e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023a52:	fb12 f206 	smulbb	r2, r2, r6
90023a56:	b2c0      	uxtb	r0, r0
90023a58:	fb05 2504 	mla	r5, r5, r4, r2
90023a5c:	10da      	asrs	r2, r3, #3
90023a5e:	fb10 f006 	smulbb	r0, r0, r6
90023a62:	00db      	lsls	r3, r3, #3
90023a64:	b2ad      	uxth	r5, r5
90023a66:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023a6a:	b2db      	uxtb	r3, r3
90023a6c:	fb02 7204 	mla	r2, r2, r4, r7
90023a70:	fb03 0004 	mla	r0, r3, r4, r0
90023a74:	1c6b      	adds	r3, r5, #1
90023a76:	b292      	uxth	r2, r2
90023a78:	b280      	uxth	r0, r0
90023a7a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023a7e:	1c43      	adds	r3, r0, #1
90023a80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023a84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023a88:	1c50      	adds	r0, r2, #1
90023a8a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90023a8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023a92:	0952      	lsrs	r2, r2, #5
90023a94:	432b      	orrs	r3, r5
90023a96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023a9a:	4313      	orrs	r3, r2
90023a9c:	800b      	strh	r3, [r1, #0]
90023a9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023aa2:	4680      	mov	r8, r0
90023aa4:	e763      	b.n	9002396e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90023aa6:	4684      	mov	ip, r0
90023aa8:	4680      	mov	r8, r0
90023aaa:	e76c      	b.n	90023986 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023aac:	4684      	mov	ip, r0
90023aae:	e76a      	b.n	90023986 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90023ab0:	4605      	mov	r5, r0
90023ab2:	e779      	b.n	900239a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90023ab4:	4603      	mov	r3, r0
90023ab6:	4605      	mov	r5, r0
90023ab8:	e782      	b.n	900239c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90023aba:	4603      	mov	r3, r0
90023abc:	e780      	b.n	900239c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90023abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023abe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ac2:	b093      	sub	sp, #76	; 0x4c
90023ac4:	461d      	mov	r5, r3
90023ac6:	9210      	str	r2, [sp, #64]	; 0x40
90023ac8:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023aca:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90023ace:	910a      	str	r1, [sp, #40]	; 0x28
90023ad0:	920b      	str	r2, [sp, #44]	; 0x2c
90023ad2:	6859      	ldr	r1, [r3, #4]
90023ad4:	681b      	ldr	r3, [r3, #0]
90023ad6:	9011      	str	r0, [sp, #68]	; 0x44
90023ad8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90023adc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90023ae0:	fb01 2707 	mla	r7, r1, r7, r2
90023ae4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90023ae8:	9307      	str	r3, [sp, #28]
90023aea:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023aec:	681b      	ldr	r3, [r3, #0]
90023aee:	9309      	str	r3, [sp, #36]	; 0x24
90023af0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023af2:	43db      	mvns	r3, r3
90023af4:	b2db      	uxtb	r3, r3
90023af6:	9308      	str	r3, [sp, #32]
90023af8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023afa:	2b00      	cmp	r3, #0
90023afc:	dc03      	bgt.n	90023b06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023afe:	9b10      	ldr	r3, [sp, #64]	; 0x40
90023b00:	2b00      	cmp	r3, #0
90023b02:	f340 8205 	ble.w	90023f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b06:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023b08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023b0c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023b10:	1e48      	subs	r0, r1, #1
90023b12:	f102 3cff 	add.w	ip, r2, #4294967295
90023b16:	2d00      	cmp	r5, #0
90023b18:	f340 80da 	ble.w	90023cd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90023b1c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023b20:	ea4f 4326 	mov.w	r3, r6, asr #16
90023b24:	d406      	bmi.n	90023b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023b26:	4586      	cmp	lr, r0
90023b28:	da04      	bge.n	90023b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023b2a:	2b00      	cmp	r3, #0
90023b2c:	db02      	blt.n	90023b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90023b2e:	4563      	cmp	r3, ip
90023b30:	f2c0 80cf 	blt.w	90023cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023b34:	f11e 0e01 	adds.w	lr, lr, #1
90023b38:	f100 80c1 	bmi.w	90023cbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023b3c:	4571      	cmp	r1, lr
90023b3e:	f2c0 80be 	blt.w	90023cbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023b42:	3301      	adds	r3, #1
90023b44:	f100 80bb 	bmi.w	90023cbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023b48:	429a      	cmp	r2, r3
90023b4a:	f2c0 80b8 	blt.w	90023cbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90023b4e:	46a9      	mov	r9, r5
90023b50:	f8dd 801c 	ldr.w	r8, [sp, #28]
90023b54:	f1b9 0f00 	cmp.w	r9, #0
90023b58:	f340 80d8 	ble.w	90023d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90023b5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023b5e:	1421      	asrs	r1, r4, #16
90023b60:	ea4f 4026 	mov.w	r0, r6, asr #16
90023b64:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023b68:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90023b6c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90023b70:	f100 8112 	bmi.w	90023d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023b74:	f10e 3aff 	add.w	sl, lr, #4294967295
90023b78:	4551      	cmp	r1, sl
90023b7a:	f280 810d 	bge.w	90023d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023b7e:	2800      	cmp	r0, #0
90023b80:	f2c0 810a 	blt.w	90023d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023b84:	f103 3aff 	add.w	sl, r3, #4294967295
90023b88:	4550      	cmp	r0, sl
90023b8a:	f280 8105 	bge.w	90023d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90023b8e:	fa0f f38e 	sxth.w	r3, lr
90023b92:	fb00 1103 	mla	r1, r0, r3, r1
90023b96:	9809      	ldr	r0, [sp, #36]	; 0x24
90023b98:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90023b9c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90023ba0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90023ba4:	f1bc 0f00 	cmp.w	ip, #0
90023ba8:	d007      	beq.n	90023bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90023baa:	005b      	lsls	r3, r3, #1
90023bac:	eb0a 0003 	add.w	r0, sl, r3
90023bb0:	f83a 3003 	ldrh.w	r3, [sl, r3]
90023bb4:	930c      	str	r3, [sp, #48]	; 0x30
90023bb6:	8843      	ldrh	r3, [r0, #2]
90023bb8:	930d      	str	r3, [sp, #52]	; 0x34
90023bba:	ea4f 400e 	mov.w	r0, lr, lsl #16
90023bbe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023bc2:	fb12 f30c 	smulbb	r3, r2, ip
90023bc6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023bca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90023bce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023bd2:	10db      	asrs	r3, r3, #3
90023bd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023bd8:	ea40 000e 	orr.w	r0, r0, lr
90023bdc:	f1cc 0e10 	rsb	lr, ip, #16
90023be0:	ea4a 0101 	orr.w	r1, sl, r1
90023be4:	9f08      	ldr	r7, [sp, #32]
90023be6:	ebae 0e02 	sub.w	lr, lr, r2
90023bea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023bee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90023bf2:	4351      	muls	r1, r2
90023bf4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90023bf6:	fb0e 1e00 	mla	lr, lr, r0, r1
90023bfa:	990c      	ldr	r1, [sp, #48]	; 0x30
90023bfc:	0410      	lsls	r0, r2, #16
90023bfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023c02:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90023c06:	4310      	orrs	r0, r2
90023c08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023c0a:	0412      	lsls	r2, r2, #16
90023c0c:	fb03 e000 	mla	r0, r3, r0, lr
90023c10:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90023c14:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90023c18:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023c1c:	ea42 020e 	orr.w	r2, r2, lr
90023c20:	fb03 0302 	mla	r3, r3, r2, r0
90023c24:	f8b8 0000 	ldrh.w	r0, [r8]
90023c28:	0d5a      	lsrs	r2, r3, #21
90023c2a:	095b      	lsrs	r3, r3, #5
90023c2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023c30:	1201      	asrs	r1, r0, #8
90023c32:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90023c36:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023c3a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023c3e:	00c0      	lsls	r0, r0, #3
90023c40:	4313      	orrs	r3, r2
90023c42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90023c46:	fb11 f107 	smulbb	r1, r1, r7
90023c4a:	b2c0      	uxtb	r0, r0
90023c4c:	b29b      	uxth	r3, r3
90023c4e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90023c52:	fb10 f007 	smulbb	r0, r0, r7
90023c56:	fb1e fe07 	smulbb	lr, lr, r7
90023c5a:	ea4f 2c23 	mov.w	ip, r3, asr #8
90023c5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90023c62:	fb0c 1c02 	mla	ip, ip, r2, r1
90023c66:	10d9      	asrs	r1, r3, #3
90023c68:	00db      	lsls	r3, r3, #3
90023c6a:	fa1f fc8c 	uxth.w	ip, ip
90023c6e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90023c72:	b2db      	uxtb	r3, r3
90023c74:	fb01 e102 	mla	r1, r1, r2, lr
90023c78:	fb03 0302 	mla	r3, r3, r2, r0
90023c7c:	b289      	uxth	r1, r1
90023c7e:	b29a      	uxth	r2, r3
90023c80:	f10c 0301 	add.w	r3, ip, #1
90023c84:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023c88:	1c53      	adds	r3, r2, #1
90023c8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023c8e:	1c4a      	adds	r2, r1, #1
90023c90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90023c94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023c98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023c9c:	0949      	lsrs	r1, r1, #5
90023c9e:	ea43 030c 	orr.w	r3, r3, ip
90023ca2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023ca6:	430b      	orrs	r3, r1
90023ca8:	f8a8 3000 	strh.w	r3, [r8]
90023cac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023cae:	f108 0802 	add.w	r8, r8, #2
90023cb2:	f109 39ff 	add.w	r9, r9, #4294967295
90023cb6:	441c      	add	r4, r3
90023cb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023cba:	441e      	add	r6, r3
90023cbc:	e74a      	b.n	90023b54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90023cbe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023cc0:	3d01      	subs	r5, #1
90023cc2:	441c      	add	r4, r3
90023cc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023cc6:	441e      	add	r6, r3
90023cc8:	9b07      	ldr	r3, [sp, #28]
90023cca:	3302      	adds	r3, #2
90023ccc:	9307      	str	r3, [sp, #28]
90023cce:	e722      	b.n	90023b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023cd0:	d022      	beq.n	90023d18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90023cd2:	1e6b      	subs	r3, r5, #1
90023cd4:	981f      	ldr	r0, [sp, #124]	; 0x7c
90023cd6:	fb00 4003 	mla	r0, r0, r3, r4
90023cda:	1400      	asrs	r0, r0, #16
90023cdc:	f53f af37 	bmi.w	90023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023ce0:	3901      	subs	r1, #1
90023ce2:	4288      	cmp	r0, r1
90023ce4:	f6bf af33 	bge.w	90023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023ce8:	9920      	ldr	r1, [sp, #128]	; 0x80
90023cea:	fb01 6303 	mla	r3, r1, r3, r6
90023cee:	141b      	asrs	r3, r3, #16
90023cf0:	f53f af2d 	bmi.w	90023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023cf4:	3a01      	subs	r2, #1
90023cf6:	4293      	cmp	r3, r2
90023cf8:	f6bf af29 	bge.w	90023b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023cfc:	46a8      	mov	r8, r5
90023cfe:	f8dd 901c 	ldr.w	r9, [sp, #28]
90023d02:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90023d06:	f1b8 0f00 	cmp.w	r8, #0
90023d0a:	dc60      	bgt.n	90023dce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90023d0c:	9b07      	ldr	r3, [sp, #28]
90023d0e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90023d12:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023d16:	9307      	str	r3, [sp, #28]
90023d18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023d1a:	2b00      	cmp	r3, #0
90023d1c:	f340 80f8 	ble.w	90023f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023d20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023d24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023d26:	ee30 0a04 	vadd.f32	s0, s0, s8
90023d2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023d2e:	eef0 6a62 	vmov.f32	s13, s5
90023d32:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023d36:	ee31 1a05 	vadd.f32	s2, s2, s10
90023d3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d3e:	ee16 4a90 	vmov	r4, s13
90023d42:	eef0 6a43 	vmov.f32	s13, s6
90023d46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d4a:	ee16 6a90 	vmov	r6, s13
90023d4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023d52:	ee61 7a27 	vmul.f32	s15, s2, s15
90023d56:	ee77 2a62 	vsub.f32	s5, s14, s5
90023d5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023d5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023d62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023d66:	ee12 2a90 	vmov	r2, s5
90023d6a:	eef0 2a47 	vmov.f32	s5, s14
90023d6e:	fb92 f3f3 	sdiv	r3, r2, r3
90023d72:	ee13 2a10 	vmov	r2, s6
90023d76:	931f      	str	r3, [sp, #124]	; 0x7c
90023d78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023d7a:	eeb0 3a67 	vmov.f32	s6, s15
90023d7e:	fb92 f3f3 	sdiv	r3, r2, r3
90023d82:	9320      	str	r3, [sp, #128]	; 0x80
90023d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023d86:	9a10      	ldr	r2, [sp, #64]	; 0x40
90023d88:	3b01      	subs	r3, #1
90023d8a:	930a      	str	r3, [sp, #40]	; 0x28
90023d8c:	bf08      	it	eq
90023d8e:	4615      	moveq	r5, r2
90023d90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023d92:	bf18      	it	ne
90023d94:	461d      	movne	r5, r3
90023d96:	e6af      	b.n	90023af8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023d98:	f111 0a01 	adds.w	sl, r1, #1
90023d9c:	d486      	bmi.n	90023cac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023d9e:	45d6      	cmp	lr, sl
90023da0:	db84      	blt.n	90023cac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023da2:	f110 0a01 	adds.w	sl, r0, #1
90023da6:	d481      	bmi.n	90023cac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023da8:	4553      	cmp	r3, sl
90023daa:	f6ff af7f 	blt.w	90023cac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023dae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90023db0:	b21b      	sxth	r3, r3
90023db2:	9101      	str	r1, [sp, #4]
90023db4:	4641      	mov	r1, r8
90023db6:	9300      	str	r3, [sp, #0]
90023db8:	fa0f f38e 	sxth.w	r3, lr
90023dbc:	e9cd 0202 	strd	r0, r2, [sp, #8]
90023dc0:	e9cd c704 	strd	ip, r7, [sp, #16]
90023dc4:	9a09      	ldr	r2, [sp, #36]	; 0x24
90023dc6:	9811      	ldr	r0, [sp, #68]	; 0x44
90023dc8:	f7ff fdb2 	bl	90023930 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90023dcc:	e76e      	b.n	90023cac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90023dce:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023dd0:	1430      	asrs	r0, r6, #16
90023dd2:	9f09      	ldr	r7, [sp, #36]	; 0x24
90023dd4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90023dd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023ddc:	1423      	asrs	r3, r4, #16
90023dde:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023de2:	fb01 3000 	mla	r0, r1, r0, r3
90023de6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023de8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90023dec:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90023df0:	8858      	ldrh	r0, [r3, #2]
90023df2:	f1be 0f00 	cmp.w	lr, #0
90023df6:	d00b      	beq.n	90023e10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90023df8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90023dfc:	3901      	subs	r1, #1
90023dfe:	0049      	lsls	r1, r1, #1
90023e00:	3102      	adds	r1, #2
90023e02:	eb03 0b01 	add.w	fp, r3, r1
90023e06:	5a5b      	ldrh	r3, [r3, r1]
90023e08:	930e      	str	r3, [sp, #56]	; 0x38
90023e0a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90023e0e:	930f      	str	r3, [sp, #60]	; 0x3c
90023e10:	ea4f 410c 	mov.w	r1, ip, lsl #16
90023e14:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023e18:	fb12 f30e 	smulbb	r3, r2, lr
90023e1c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023e20:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90023e24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023e28:	10db      	asrs	r3, r3, #3
90023e2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023e2e:	ea41 010c 	orr.w	r1, r1, ip
90023e32:	f1ce 0c10 	rsb	ip, lr, #16
90023e36:	ea4b 0000 	orr.w	r0, fp, r0
90023e3a:	9f08      	ldr	r7, [sp, #32]
90023e3c:	ebac 0c02 	sub.w	ip, ip, r2
90023e40:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90023e44:	f108 38ff 	add.w	r8, r8, #4294967295
90023e48:	4350      	muls	r0, r2
90023e4a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90023e4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023e50:	fb0c 0c01 	mla	ip, ip, r1, r0
90023e54:	980e      	ldr	r0, [sp, #56]	; 0x38
90023e56:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90023e5a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90023e5e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90023e60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023e64:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023e68:	0412      	lsls	r2, r2, #16
90023e6a:	ea4b 0101 	orr.w	r1, fp, r1
90023e6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90023e72:	fb03 c101 	mla	r1, r3, r1, ip
90023e76:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90023e7a:	4302      	orrs	r2, r0
90023e7c:	fb03 1202 	mla	r2, r3, r2, r1
90023e80:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90023e84:	0952      	lsrs	r2, r2, #5
90023e86:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90023e8a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90023e8e:	f8b9 2000 	ldrh.w	r2, [r9]
90023e92:	ea4b 0303 	orr.w	r3, fp, r3
90023e96:	1211      	asrs	r1, r2, #8
90023e98:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90023e9c:	b29b      	uxth	r3, r3
90023e9e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023ea2:	00d2      	lsls	r2, r2, #3
90023ea4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90023ea8:	fb11 f107 	smulbb	r1, r1, r7
90023eac:	1218      	asrs	r0, r3, #8
90023eae:	fb1c fc07 	smulbb	ip, ip, r7
90023eb2:	b2d2      	uxtb	r2, r2
90023eb4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90023eb8:	fb12 f207 	smulbb	r2, r2, r7
90023ebc:	fb00 100a 	mla	r0, r0, sl, r1
90023ec0:	10d9      	asrs	r1, r3, #3
90023ec2:	00db      	lsls	r3, r3, #3
90023ec4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90023ec8:	b280      	uxth	r0, r0
90023eca:	b2db      	uxtb	r3, r3
90023ecc:	fb01 c10a 	mla	r1, r1, sl, ip
90023ed0:	fb03 230a 	mla	r3, r3, sl, r2
90023ed4:	1c42      	adds	r2, r0, #1
90023ed6:	b289      	uxth	r1, r1
90023ed8:	b29b      	uxth	r3, r3
90023eda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023ede:	f101 0c01 	add.w	ip, r1, #1
90023ee2:	1c5a      	adds	r2, r3, #1
90023ee4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023ee8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90023eec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023ef0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90023ef2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90023ef6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023efa:	441c      	add	r4, r3
90023efc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023f00:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023f02:	4310      	orrs	r0, r2
90023f04:	441e      	add	r6, r3
90023f06:	ea40 000c 	orr.w	r0, r0, ip
90023f0a:	f829 0b02 	strh.w	r0, [r9], #2
90023f0e:	e6fa      	b.n	90023d06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90023f10:	b013      	add	sp, #76	; 0x4c
90023f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023f16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90023f16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90023f1a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90023f1e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90023f22:	fb0e 4703 	mla	r7, lr, r3, r4
90023f26:	f1be 0f00 	cmp.w	lr, #0
90023f2a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90023f2e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90023f32:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90023f36:	8808      	ldrh	r0, [r1, #0]
90023f38:	db60      	blt.n	90023ffc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90023f3a:	45f1      	cmp	r9, lr
90023f3c:	dd5e      	ble.n	90023ffc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90023f3e:	2c00      	cmp	r4, #0
90023f40:	db5a      	blt.n	90023ff8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90023f42:	42a3      	cmp	r3, r4
90023f44:	dd58      	ble.n	90023ff8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90023f46:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90023f4a:	1c62      	adds	r2, r4, #1
90023f4c:	d459      	bmi.n	90024002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023f4e:	4293      	cmp	r3, r2
90023f50:	dd57      	ble.n	90024002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023f52:	2d00      	cmp	r5, #0
90023f54:	d055      	beq.n	90024002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90023f56:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90023f5a:	f11e 0e01 	adds.w	lr, lr, #1
90023f5e:	d454      	bmi.n	9002400a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023f60:	45f1      	cmp	r9, lr
90023f62:	dd52      	ble.n	9002400a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023f64:	2e00      	cmp	r6, #0
90023f66:	d050      	beq.n	9002400a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90023f68:	2c00      	cmp	r4, #0
90023f6a:	db4c      	blt.n	90024006 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90023f6c:	42a3      	cmp	r3, r4
90023f6e:	dd4a      	ble.n	90024006 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90023f70:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90023f74:	3401      	adds	r4, #1
90023f76:	d405      	bmi.n	90023f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023f78:	42a3      	cmp	r3, r4
90023f7a:	dd03      	ble.n	90023f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023f7c:	b115      	cbz	r5, 90023f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90023f7e:	3301      	adds	r3, #1
90023f80:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90023f84:	fb15 f406 	smulbb	r4, r5, r6
90023f88:	ea4f 430c 	mov.w	r3, ip, lsl #16
90023f8c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90023f90:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023f94:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90023f98:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90023f9c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90023fa0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90023fa4:	ea43 0c0c 	orr.w	ip, r3, ip
90023fa8:	f1c6 0310 	rsb	r3, r6, #16
90023fac:	ea4e 0707 	orr.w	r7, lr, r7
90023fb0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90023fb4:	1b5b      	subs	r3, r3, r5
90023fb6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90023fba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90023fbe:	437d      	muls	r5, r7
90023fc0:	fb03 5c0c 	mla	ip, r3, ip, r5
90023fc4:	0403      	lsls	r3, r0, #16
90023fc6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023fca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90023fce:	4318      	orrs	r0, r3
90023fd0:	0413      	lsls	r3, r2, #16
90023fd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023fd6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90023fda:	fb04 c000 	mla	r0, r4, r0, ip
90023fde:	4313      	orrs	r3, r2
90023fe0:	fb06 0003 	mla	r0, r6, r3, r0
90023fe4:	0d43      	lsrs	r3, r0, #21
90023fe6:	0940      	lsrs	r0, r0, #5
90023fe8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023fec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023ff0:	4318      	orrs	r0, r3
90023ff2:	8008      	strh	r0, [r1, #0]
90023ff4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90023ff8:	4684      	mov	ip, r0
90023ffa:	e7a6      	b.n	90023f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90023ffc:	4607      	mov	r7, r0
90023ffe:	4684      	mov	ip, r0
90024000:	e7ab      	b.n	90023f5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024002:	4607      	mov	r7, r0
90024004:	e7a9      	b.n	90023f5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024006:	4602      	mov	r2, r0
90024008:	e7b4      	b.n	90023f74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002400a:	4602      	mov	r2, r0
9002400c:	e7ba      	b.n	90023f84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002400e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002400e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024012:	b08f      	sub	sp, #60	; 0x3c
90024014:	461d      	mov	r5, r3
90024016:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024018:	9107      	str	r1, [sp, #28]
9002401a:	920c      	str	r2, [sp, #48]	; 0x30
9002401c:	6859      	ldr	r1, [r3, #4]
9002401e:	681b      	ldr	r3, [r3, #0]
90024020:	900d      	str	r0, [sp, #52]	; 0x34
90024022:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90024026:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
9002402a:	fb01 2707 	mla	r7, r1, r7, r2
9002402e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90024032:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024034:	f8d3 8000 	ldr.w	r8, [r3]
90024038:	9b07      	ldr	r3, [sp, #28]
9002403a:	2b00      	cmp	r3, #0
9002403c:	dc03      	bgt.n	90024046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002403e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024040:	2b00      	cmp	r3, #0
90024042:	f340 8182 	ble.w	9002434a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024046:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024048:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002404c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024050:	1e48      	subs	r0, r1, #1
90024052:	f102 3cff 	add.w	ip, r2, #4294967295
90024056:	2d00      	cmp	r5, #0
90024058:	f340 809b 	ble.w	90024192 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
9002405c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024060:	ea4f 4326 	mov.w	r3, r6, asr #16
90024064:	d406      	bmi.n	90024074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024066:	4586      	cmp	lr, r0
90024068:	da04      	bge.n	90024074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002406a:	2b00      	cmp	r3, #0
9002406c:	db02      	blt.n	90024074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002406e:	4563      	cmp	r3, ip
90024070:	f2c0 8090 	blt.w	90024194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024074:	f11e 0e01 	adds.w	lr, lr, #1
90024078:	f100 8084 	bmi.w	90024184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002407c:	4571      	cmp	r1, lr
9002407e:	f2c0 8081 	blt.w	90024184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024082:	3301      	adds	r3, #1
90024084:	d47e      	bmi.n	90024184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024086:	429a      	cmp	r2, r3
90024088:	db7c      	blt.n	90024184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002408a:	46aa      	mov	sl, r5
9002408c:	46b9      	mov	r9, r7
9002408e:	f1ba 0f00 	cmp.w	sl, #0
90024092:	f340 8099 	ble.w	900241c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90024096:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024098:	1421      	asrs	r1, r4, #16
9002409a:	ea4f 4026 	mov.w	r0, r6, asr #16
9002409e:	f3c4 3203 	ubfx	r2, r4, #12, #4
900240a2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900240a6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900240aa:	f100 80d1 	bmi.w	90024250 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900240ae:	f10e 3bff 	add.w	fp, lr, #4294967295
900240b2:	4559      	cmp	r1, fp
900240b4:	f280 80cc 	bge.w	90024250 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900240b8:	2800      	cmp	r0, #0
900240ba:	f2c0 80c9 	blt.w	90024250 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900240be:	f103 3bff 	add.w	fp, r3, #4294967295
900240c2:	4558      	cmp	r0, fp
900240c4:	f280 80c4 	bge.w	90024250 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900240c8:	fa0f fe8e 	sxth.w	lr, lr
900240cc:	fb00 110e 	mla	r1, r0, lr, r1
900240d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900240d4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900240d8:	8841      	ldrh	r1, [r0, #2]
900240da:	f1bc 0f00 	cmp.w	ip, #0
900240de:	d00b      	beq.n	900240f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900240e0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900240e4:	3b01      	subs	r3, #1
900240e6:	005b      	lsls	r3, r3, #1
900240e8:	3302      	adds	r3, #2
900240ea:	eb00 0e03 	add.w	lr, r0, r3
900240ee:	5ac3      	ldrh	r3, [r0, r3]
900240f0:	9308      	str	r3, [sp, #32]
900240f2:	f8be 3002 	ldrh.w	r3, [lr, #2]
900240f6:	9309      	str	r3, [sp, #36]	; 0x24
900240f8:	ea4f 400b 	mov.w	r0, fp, lsl #16
900240fc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024100:	fb12 f30c 	smulbb	r3, r2, ip
90024104:	f1cc 0e10 	rsb	lr, ip, #16
90024108:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002410c:	10db      	asrs	r3, r3, #3
9002410e:	ebae 0e02 	sub.w	lr, lr, r2
90024112:	ea40 000b 	orr.w	r0, r0, fp
90024116:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002411a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002411e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024122:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024126:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002412a:	ea4b 0101 	orr.w	r1, fp, r1
9002412e:	4351      	muls	r1, r2
90024130:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024132:	fb0e 1e00 	mla	lr, lr, r0, r1
90024136:	0410      	lsls	r0, r2, #16
90024138:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002413c:	9908      	ldr	r1, [sp, #32]
9002413e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024142:	4310      	orrs	r0, r2
90024144:	9a08      	ldr	r2, [sp, #32]
90024146:	0412      	lsls	r2, r2, #16
90024148:	fb03 e000 	mla	r0, r3, r0, lr
9002414c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90024150:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90024154:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024158:	ea42 020e 	orr.w	r2, r2, lr
9002415c:	fb03 0302 	mla	r3, r3, r2, r0
90024160:	0d5a      	lsrs	r2, r3, #21
90024162:	095b      	lsrs	r3, r3, #5
90024164:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024168:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002416c:	4313      	orrs	r3, r2
9002416e:	f8a9 3000 	strh.w	r3, [r9]
90024172:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024174:	f109 0902 	add.w	r9, r9, #2
90024178:	f10a 3aff 	add.w	sl, sl, #4294967295
9002417c:	441c      	add	r4, r3
9002417e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024180:	441e      	add	r6, r3
90024182:	e784      	b.n	9002408e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90024184:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024186:	3d01      	subs	r5, #1
90024188:	3702      	adds	r7, #2
9002418a:	441c      	add	r4, r3
9002418c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002418e:	441e      	add	r6, r3
90024190:	e761      	b.n	90024056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024192:	d01d      	beq.n	900241d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024194:	1e6b      	subs	r3, r5, #1
90024196:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024198:	fb00 4003 	mla	r0, r0, r3, r4
9002419c:	1400      	asrs	r0, r0, #16
9002419e:	f53f af74 	bmi.w	9002408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900241a2:	3901      	subs	r1, #1
900241a4:	4288      	cmp	r0, r1
900241a6:	f6bf af70 	bge.w	9002408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900241aa:	991c      	ldr	r1, [sp, #112]	; 0x70
900241ac:	fb01 6303 	mla	r3, r1, r3, r6
900241b0:	141b      	asrs	r3, r3, #16
900241b2:	f53f af6a 	bmi.w	9002408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900241b6:	3a01      	subs	r2, #1
900241b8:	4293      	cmp	r3, r2
900241ba:	f6bf af66 	bge.w	9002408a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900241be:	46a9      	mov	r9, r5
900241c0:	46ba      	mov	sl, r7
900241c2:	f1b9 0f00 	cmp.w	r9, #0
900241c6:	dc5b      	bgt.n	90024280 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900241c8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900241cc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900241d0:	9b07      	ldr	r3, [sp, #28]
900241d2:	2b00      	cmp	r3, #0
900241d4:	f340 80b9 	ble.w	9002434a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900241d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900241dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
900241de:	ee30 0a04 	vadd.f32	s0, s0, s8
900241e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900241e6:	eef0 6a62 	vmov.f32	s13, s5
900241ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
900241ee:	ee31 1a05 	vadd.f32	s2, s2, s10
900241f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900241f6:	ee16 4a90 	vmov	r4, s13
900241fa:	eef0 6a43 	vmov.f32	s13, s6
900241fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024202:	ee16 6a90 	vmov	r6, s13
90024206:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002420a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002420e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024212:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024216:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002421a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002421e:	ee12 2a90 	vmov	r2, s5
90024222:	eef0 2a47 	vmov.f32	s5, s14
90024226:	fb92 f3f3 	sdiv	r3, r2, r3
9002422a:	ee13 2a10 	vmov	r2, s6
9002422e:	931b      	str	r3, [sp, #108]	; 0x6c
90024230:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024232:	eeb0 3a67 	vmov.f32	s6, s15
90024236:	fb92 f3f3 	sdiv	r3, r2, r3
9002423a:	931c      	str	r3, [sp, #112]	; 0x70
9002423c:	9b07      	ldr	r3, [sp, #28]
9002423e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024240:	3b01      	subs	r3, #1
90024242:	9307      	str	r3, [sp, #28]
90024244:	bf08      	it	eq
90024246:	4615      	moveq	r5, r2
90024248:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002424a:	bf18      	it	ne
9002424c:	461d      	movne	r5, r3
9002424e:	e6f3      	b.n	90024038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90024250:	f111 0b01 	adds.w	fp, r1, #1
90024254:	d48d      	bmi.n	90024172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024256:	45de      	cmp	lr, fp
90024258:	db8b      	blt.n	90024172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002425a:	f110 0b01 	adds.w	fp, r0, #1
9002425e:	d488      	bmi.n	90024172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024260:	455b      	cmp	r3, fp
90024262:	db86      	blt.n	90024172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024264:	b21b      	sxth	r3, r3
90024266:	e9cd 1001 	strd	r1, r0, [sp, #4]
9002426a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002426e:	9300      	str	r3, [sp, #0]
90024270:	4642      	mov	r2, r8
90024272:	fa0f f38e 	sxth.w	r3, lr
90024276:	4649      	mov	r1, r9
90024278:	980d      	ldr	r0, [sp, #52]	; 0x34
9002427a:	f7ff fe4c 	bl	90023f16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002427e:	e778      	b.n	90024172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024280:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024282:	1420      	asrs	r0, r4, #16
90024284:	1431      	asrs	r1, r6, #16
90024286:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002428a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002428e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024292:	fb03 0101 	mla	r1, r3, r1, r0
90024296:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002429a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002429e:	8841      	ldrh	r1, [r0, #2]
900242a0:	f1be 0f00 	cmp.w	lr, #0
900242a4:	d00b      	beq.n	900242be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900242a6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900242aa:	3b01      	subs	r3, #1
900242ac:	005b      	lsls	r3, r3, #1
900242ae:	3302      	adds	r3, #2
900242b0:	eb00 0b03 	add.w	fp, r0, r3
900242b4:	5ac3      	ldrh	r3, [r0, r3]
900242b6:	930a      	str	r3, [sp, #40]	; 0x28
900242b8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900242bc:	930b      	str	r3, [sp, #44]	; 0x2c
900242be:	ea4f 400c 	mov.w	r0, ip, lsl #16
900242c2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900242c6:	fb12 f30e 	smulbb	r3, r2, lr
900242ca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900242ce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900242d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900242d6:	10db      	asrs	r3, r3, #3
900242d8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900242dc:	ea40 000c 	orr.w	r0, r0, ip
900242e0:	f1ce 0c10 	rsb	ip, lr, #16
900242e4:	ea4b 0101 	orr.w	r1, fp, r1
900242e8:	f109 39ff 	add.w	r9, r9, #4294967295
900242ec:	ebac 0c02 	sub.w	ip, ip, r2
900242f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900242f4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900242f8:	4351      	muls	r1, r2
900242fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900242fc:	fb0c 1c00 	mla	ip, ip, r0, r1
90024300:	990a      	ldr	r1, [sp, #40]	; 0x28
90024302:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024306:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002430a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002430c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024310:	0412      	lsls	r2, r2, #16
90024312:	ea4b 0000 	orr.w	r0, fp, r0
90024316:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9002431a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002431e:	fb03 c000 	mla	r0, r3, r0, ip
90024322:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90024326:	ea42 0b0b 	orr.w	fp, r2, fp
9002432a:	fb03 000b 	mla	r0, r3, fp, r0
9002432e:	0d43      	lsrs	r3, r0, #21
90024330:	0940      	lsrs	r0, r0, #5
90024332:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024336:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002433a:	4318      	orrs	r0, r3
9002433c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002433e:	441c      	add	r4, r3
90024340:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024342:	f82a 0b02 	strh.w	r0, [sl], #2
90024346:	441e      	add	r6, r3
90024348:	e73b      	b.n	900241c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002434a:	b00f      	add	sp, #60	; 0x3c
9002434c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90024350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024354:	b085      	sub	sp, #20
90024356:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002435a:	9102      	str	r1, [sp, #8]
9002435c:	2c00      	cmp	r4, #0
9002435e:	fb04 7103 	mla	r1, r4, r3, r7
90024362:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90024366:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9002436a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002436e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024372:	f2c0 811b 	blt.w	900245ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024376:	45a6      	cmp	lr, r4
90024378:	f340 8118 	ble.w	900245ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002437c:	2f00      	cmp	r7, #0
9002437e:	f2c0 8113 	blt.w	900245a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024382:	42bb      	cmp	r3, r7
90024384:	f340 8110 	ble.w	900245a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024388:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002438c:	1c7a      	adds	r2, r7, #1
9002438e:	f100 8110 	bmi.w	900245b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024392:	4293      	cmp	r3, r2
90024394:	f340 810d 	ble.w	900245b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024398:	2e00      	cmp	r6, #0
9002439a:	f000 810c 	beq.w	900245b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002439e:	f8dc 1004 	ldr.w	r1, [ip, #4]
900243a2:	3401      	adds	r4, #1
900243a4:	f100 810b 	bmi.w	900245be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900243a8:	45a6      	cmp	lr, r4
900243aa:	f340 8108 	ble.w	900245be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900243ae:	2800      	cmp	r0, #0
900243b0:	f000 8108 	beq.w	900245c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900243b4:	2f00      	cmp	r7, #0
900243b6:	f2c0 8100 	blt.w	900245ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900243ba:	42bb      	cmp	r3, r7
900243bc:	f340 80fd 	ble.w	900245ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900243c0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900243c4:	3701      	adds	r7, #1
900243c6:	f100 8100 	bmi.w	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900243ca:	42bb      	cmp	r3, r7
900243cc:	f340 80fd 	ble.w	900245ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900243d0:	2e00      	cmp	r6, #0
900243d2:	f000 80fc 	beq.w	900245ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900243d6:	3301      	adds	r3, #1
900243d8:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900243dc:	b2b6      	uxth	r6, r6
900243de:	b280      	uxth	r0, r0
900243e0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900243e4:	fb00 fe06 	mul.w	lr, r0, r6
900243e8:	0136      	lsls	r6, r6, #4
900243ea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900243ee:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900243f2:	eba6 070e 	sub.w	r7, r6, lr
900243f6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900243fa:	ea4f 6914 	mov.w	r9, r4, lsr #24
900243fe:	b280      	uxth	r0, r0
90024400:	b2bf      	uxth	r7, r7
90024402:	1a1b      	subs	r3, r3, r0
90024404:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024408:	fb0a f607 	mul.w	r6, sl, r7
9002440c:	b29b      	uxth	r3, r3
9002440e:	fb0b 6603 	mla	r6, fp, r3, r6
90024412:	fb00 6609 	mla	r6, r0, r9, r6
90024416:	fb0e 6608 	mla	r6, lr, r8, r6
9002441a:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002441e:	9600      	str	r6, [sp, #0]
90024420:	2e00      	cmp	r6, #0
90024422:	f000 80be 	beq.w	900245a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90024426:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002442a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9002442e:	9e02      	ldr	r6, [sp, #8]
90024430:	fb0b fc0c 	mul.w	ip, fp, ip
90024434:	fb0b f505 	mul.w	r5, fp, r5
90024438:	8836      	ldrh	r6, [r6, #0]
9002443a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002443e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024442:	9501      	str	r5, [sp, #4]
90024444:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90024448:	44dc      	add	ip, fp
9002444a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002444e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90024452:	9503      	str	r5, [sp, #12]
90024454:	9d01      	ldr	r5, [sp, #4]
90024456:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9002445a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002445e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90024462:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024466:	fb0a fc0c 	mul.w	ip, sl, ip
9002446a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002446e:	fb0a fa01 	mul.w	sl, sl, r1
90024472:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024476:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002447a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002447e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024482:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024486:	4465      	add	r5, ip
90024488:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002448c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024490:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024494:	fb09 fc0c 	mul.w	ip, r9, ip
90024498:	0a2d      	lsrs	r5, r5, #8
9002449a:	fb09 f904 	mul.w	r9, r9, r4
9002449e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900244a2:	ea4f 211c 	mov.w	r1, ip, lsr #8
900244a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900244aa:	f509 7480 	add.w	r4, r9, #256	; 0x100
900244ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900244b2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900244b6:	437d      	muls	r5, r7
900244b8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900244bc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
900244c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900244c4:	4461      	add	r1, ip
900244c6:	fb08 f404 	mul.w	r4, r8, r4
900244ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
900244ce:	fb08 f802 	mul.w	r8, r8, r2
900244d2:	0a09      	lsrs	r1, r1, #8
900244d4:	0a22      	lsrs	r2, r4, #8
900244d6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900244da:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900244de:	fb07 f70a 	mul.w	r7, r7, sl
900244e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900244e6:	4414      	add	r4, r2
900244e8:	f508 7280 	add.w	r2, r8, #256	; 0x100
900244ec:	0a24      	lsrs	r4, r4, #8
900244ee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900244f2:	9a03      	ldr	r2, [sp, #12]
900244f4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900244f8:	fb02 5503 	mla	r5, r2, r3, r5
900244fc:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024500:	9a00      	ldr	r2, [sp, #0]
90024502:	fb04 540e 	mla	r4, r4, lr, r5
90024506:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002450a:	1235      	asrs	r5, r6, #8
9002450c:	fb01 4100 	mla	r1, r1, r0, r4
90024510:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024514:	0a09      	lsrs	r1, r1, #8
90024516:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002451a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9002451e:	fb03 7101 	mla	r1, r3, r1, r7
90024522:	fb0e 1e08 	mla	lr, lr, r8, r1
90024526:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002452a:	fb00 e101 	mla	r1, r0, r1, lr
9002452e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90024532:	b287      	uxth	r7, r0
90024534:	0a09      	lsrs	r1, r1, #8
90024536:	437a      	muls	r2, r7
90024538:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002453c:	1c53      	adds	r3, r2, #1
9002453e:	4321      	orrs	r1, r4
90024540:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024544:	0c0a      	lsrs	r2, r1, #16
90024546:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002454a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002454e:	b2c8      	uxtb	r0, r1
90024550:	fb12 f207 	smulbb	r2, r2, r7
90024554:	fb14 f407 	smulbb	r4, r4, r7
90024558:	b2db      	uxtb	r3, r3
9002455a:	fb10 f007 	smulbb	r0, r0, r7
9002455e:	fb05 2503 	mla	r5, r5, r3, r2
90024562:	10f2      	asrs	r2, r6, #3
90024564:	00f6      	lsls	r6, r6, #3
90024566:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002456a:	b2ad      	uxth	r5, r5
9002456c:	b2f6      	uxtb	r6, r6
9002456e:	fb02 4203 	mla	r2, r2, r3, r4
90024572:	fb06 0303 	mla	r3, r6, r3, r0
90024576:	b294      	uxth	r4, r2
90024578:	b299      	uxth	r1, r3
9002457a:	1c6b      	adds	r3, r5, #1
9002457c:	1c62      	adds	r2, r4, #1
9002457e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024582:	1c4b      	adds	r3, r1, #1
90024584:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024588:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002458c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024590:	0952      	lsrs	r2, r2, #5
90024592:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024596:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002459a:	432b      	orrs	r3, r5
9002459c:	4313      	orrs	r3, r2
9002459e:	9a02      	ldr	r2, [sp, #8]
900245a0:	8013      	strh	r3, [r2, #0]
900245a2:	b005      	add	sp, #20
900245a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900245a8:	2500      	movs	r5, #0
900245aa:	e6ef      	b.n	9002438c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900245ac:	2100      	movs	r1, #0
900245ae:	460d      	mov	r5, r1
900245b0:	e6f7      	b.n	900243a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900245b2:	2100      	movs	r1, #0
900245b4:	e6f5      	b.n	900243a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900245b6:	4631      	mov	r1, r6
900245b8:	e6f3      	b.n	900243a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900245ba:	2400      	movs	r4, #0
900245bc:	e702      	b.n	900243c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900245be:	2200      	movs	r2, #0
900245c0:	4614      	mov	r4, r2
900245c2:	e70b      	b.n	900243dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900245c4:	4602      	mov	r2, r0
900245c6:	4604      	mov	r4, r0
900245c8:	e708      	b.n	900243dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900245ca:	2200      	movs	r2, #0
900245cc:	e706      	b.n	900243dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900245ce:	4632      	mov	r2, r6
900245d0:	e704      	b.n	900243dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

900245d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900245d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900245d6:	b09d      	sub	sp, #116	; 0x74
900245d8:	9219      	str	r2, [sp, #100]	; 0x64
900245da:	9307      	str	r3, [sp, #28]
900245dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
900245de:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
900245e2:	901b      	str	r0, [sp, #108]	; 0x6c
900245e4:	931a      	str	r3, [sp, #104]	; 0x68
900245e6:	6850      	ldr	r0, [r2, #4]
900245e8:	9117      	str	r1, [sp, #92]	; 0x5c
900245ea:	6812      	ldr	r2, [r2, #0]
900245ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
900245f0:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
900245f4:	fb00 1303 	mla	r3, r0, r3, r1
900245f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900245fc:	930a      	str	r3, [sp, #40]	; 0x28
900245fe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024600:	681b      	ldr	r3, [r3, #0]
90024602:	9310      	str	r3, [sp, #64]	; 0x40
90024604:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
90024608:	930b      	str	r3, [sp, #44]	; 0x2c
9002460a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002460c:	2b00      	cmp	r3, #0
9002460e:	dc03      	bgt.n	90024618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90024610:	9b19      	ldr	r3, [sp, #100]	; 0x64
90024612:	2b00      	cmp	r3, #0
90024614:	f340 8375 	ble.w	90024d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024618:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002461a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002461e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024622:	1e48      	subs	r0, r1, #1
90024624:	1e57      	subs	r7, r2, #1
90024626:	9b07      	ldr	r3, [sp, #28]
90024628:	2b00      	cmp	r3, #0
9002462a:	f340 818e 	ble.w	9002494a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002462e:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024632:	ea4f 4326 	mov.w	r3, r6, asr #16
90024636:	d406      	bmi.n	90024646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024638:	4584      	cmp	ip, r0
9002463a:	da04      	bge.n	90024646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002463c:	2b00      	cmp	r3, #0
9002463e:	db02      	blt.n	90024646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024640:	42bb      	cmp	r3, r7
90024642:	f2c0 8183 	blt.w	9002494c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90024646:	f11c 0c01 	adds.w	ip, ip, #1
9002464a:	f100 8173 	bmi.w	90024934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002464e:	4561      	cmp	r1, ip
90024650:	f2c0 8170 	blt.w	90024934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024654:	3301      	adds	r3, #1
90024656:	f100 816d 	bmi.w	90024934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002465a:	429a      	cmp	r2, r3
9002465c:	f2c0 816a 	blt.w	90024934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024660:	9b07      	ldr	r3, [sp, #28]
90024662:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90024664:	9318      	str	r3, [sp, #96]	; 0x60
90024666:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024668:	2b00      	cmp	r3, #0
9002466a:	f340 818c 	ble.w	90024986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
9002466e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90024670:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024674:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024676:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002467a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002467e:	1422      	asrs	r2, r4, #16
90024680:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024684:	689b      	ldr	r3, [r3, #8]
90024686:	f100 81cd 	bmi.w	90024a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002468a:	f103 38ff 	add.w	r8, r3, #4294967295
9002468e:	4542      	cmp	r2, r8
90024690:	f280 81c8 	bge.w	90024a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024694:	f1bc 0f00 	cmp.w	ip, #0
90024698:	f2c0 81c4 	blt.w	90024a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002469c:	f10e 38ff 	add.w	r8, lr, #4294967295
900246a0:	45c4      	cmp	ip, r8
900246a2:	f280 81bf 	bge.w	90024a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900246a6:	b21b      	sxth	r3, r3
900246a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
900246aa:	fb0c 2203 	mla	r2, ip, r3, r2
900246ae:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900246b2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900246b6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900246ba:	2800      	cmp	r0, #0
900246bc:	f000 81a9 	beq.w	90024a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900246c0:	f8d8 5004 	ldr.w	r5, [r8, #4]
900246c4:	950c      	str	r5, [sp, #48]	; 0x30
900246c6:	0e2d      	lsrs	r5, r5, #24
900246c8:	9513      	str	r5, [sp, #76]	; 0x4c
900246ca:	b181      	cbz	r1, 900246ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900246cc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
900246d0:	3b01      	subs	r3, #1
900246d2:	009b      	lsls	r3, r3, #2
900246d4:	3304      	adds	r3, #4
900246d6:	eb08 0c03 	add.w	ip, r8, r3
900246da:	f858 3003 	ldr.w	r3, [r8, r3]
900246de:	9308      	str	r3, [sp, #32]
900246e0:	0e1b      	lsrs	r3, r3, #24
900246e2:	9311      	str	r3, [sp, #68]	; 0x44
900246e4:	f8dc 3004 	ldr.w	r3, [ip, #4]
900246e8:	930d      	str	r3, [sp, #52]	; 0x34
900246ea:	0e1b      	lsrs	r3, r3, #24
900246ec:	9314      	str	r3, [sp, #80]	; 0x50
900246ee:	b280      	uxth	r0, r0
900246f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
900246f2:	b289      	uxth	r1, r1
900246f4:	fb00 f901 	mul.w	r9, r0, r1
900246f8:	0100      	lsls	r0, r0, #4
900246fa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900246fe:	eba0 0809 	sub.w	r8, r0, r9
90024702:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024706:	9813      	ldr	r0, [sp, #76]	; 0x4c
90024708:	b289      	uxth	r1, r1
9002470a:	fa1f f888 	uxth.w	r8, r8
9002470e:	1a5b      	subs	r3, r3, r1
90024710:	fb08 f000 	mul.w	r0, r8, r0
90024714:	b29b      	uxth	r3, r3
90024716:	fb03 000e 	mla	r0, r3, lr, r0
9002471a:	fb01 0005 	mla	r0, r1, r5, r0
9002471e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024720:	fb09 0005 	mla	r0, r9, r5, r0
90024724:	f3c0 2007 	ubfx	r0, r0, #8, #8
90024728:	2800      	cmp	r0, #0
9002472a:	f000 80fa 	beq.w	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002472e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90024732:	d01b      	beq.n	9002476c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90024734:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90024738:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002473c:	fb0e fa0a 	mul.w	sl, lr, sl
90024740:	fb0e fe02 	mul.w	lr, lr, r2
90024744:	ea4f 221a 	mov.w	r2, sl, lsr #8
90024748:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002474c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90024750:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024754:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024758:	4452      	add	r2, sl
9002475a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002475e:	0a12      	lsrs	r2, r2, #8
90024760:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024764:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024768:	ea42 020c 	orr.w	r2, r2, ip
9002476c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002476e:	2dff      	cmp	r5, #255	; 0xff
90024770:	d021      	beq.n	900247b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90024772:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024774:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024778:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002477a:	fb05 fb0b 	mul.w	fp, r5, fp
9002477e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024780:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024784:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90024786:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002478a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002478e:	fb05 fa0a 	mul.w	sl, r5, sl
90024792:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024796:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002479a:	44de      	add	lr, fp
9002479c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900247a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900247a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900247a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900247ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900247b0:	ea4e 050a 	orr.w	r5, lr, sl
900247b4:	950c      	str	r5, [sp, #48]	; 0x30
900247b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900247b8:	2dff      	cmp	r5, #255	; 0xff
900247ba:	d021      	beq.n	90024800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900247bc:	9d08      	ldr	r5, [sp, #32]
900247be:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900247c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900247c4:	fb05 fb0b 	mul.w	fp, r5, fp
900247c8:	9d08      	ldr	r5, [sp, #32]
900247ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900247ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
900247d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900247d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900247d8:	fb05 fa0a 	mul.w	sl, r5, sl
900247dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900247e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900247e4:	44de      	add	lr, fp
900247e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900247ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900247ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900247f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900247f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900247fa:	ea4e 050a 	orr.w	r5, lr, sl
900247fe:	9508      	str	r5, [sp, #32]
90024800:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024802:	2dff      	cmp	r5, #255	; 0xff
90024804:	d021      	beq.n	9002484a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024806:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024808:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002480c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002480e:	fb05 fb0b 	mul.w	fp, r5, fp
90024812:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024814:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024818:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002481a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002481e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024822:	fb05 fa0a 	mul.w	sl, r5, sl
90024826:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002482a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002482e:	44de      	add	lr, fp
90024830:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024834:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024838:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002483c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024840:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024844:	ea4e 050a 	orr.w	r5, lr, sl
90024848:	950d      	str	r5, [sp, #52]	; 0x34
9002484a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002484c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90024850:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024854:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024858:	9d08      	ldr	r5, [sp, #32]
9002485a:	fb08 fc0c 	mul.w	ip, r8, ip
9002485e:	fb03 cc0e 	mla	ip, r3, lr, ip
90024862:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90024866:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024868:	fb01 cc0e 	mla	ip, r1, lr, ip
9002486c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90024870:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024872:	fb09 cc0e 	mla	ip, r9, lr, ip
90024876:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002487a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002487c:	fb08 f80e 	mul.w	r8, r8, lr
90024880:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024884:	fb03 8202 	mla	r2, r3, r2, r8
90024888:	9b08      	ldr	r3, [sp, #32]
9002488a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002488e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90024892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024894:	fb01 220a 	mla	r2, r1, sl, r2
90024898:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
9002489c:	883b      	ldrh	r3, [r7, #0]
9002489e:	fb09 2901 	mla	r9, r9, r1, r2
900248a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900248a4:	1219      	asrs	r1, r3, #8
900248a6:	4342      	muls	r2, r0
900248a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900248ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900248b0:	1c50      	adds	r0, r2, #1
900248b2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900248b6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900248ba:	ea4c 0c09 	orr.w	ip, ip, r9
900248be:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900248c2:	ea4f 421c 	mov.w	r2, ip, lsr #16
900248c6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900248ca:	fa5f fc8c 	uxtb.w	ip, ip
900248ce:	fb12 f205 	smulbb	r2, r2, r5
900248d2:	b2c0      	uxtb	r0, r0
900248d4:	fb1c fc05 	smulbb	ip, ip, r5
900248d8:	fb01 2100 	mla	r1, r1, r0, r2
900248dc:	10da      	asrs	r2, r3, #3
900248de:	fb1e fe05 	smulbb	lr, lr, r5
900248e2:	00db      	lsls	r3, r3, #3
900248e4:	b289      	uxth	r1, r1
900248e6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900248ea:	b2db      	uxtb	r3, r3
900248ec:	fb02 e200 	mla	r2, r2, r0, lr
900248f0:	fb03 c300 	mla	r3, r3, r0, ip
900248f4:	b292      	uxth	r2, r2
900248f6:	fa1f fc83 	uxth.w	ip, r3
900248fa:	1c4b      	adds	r3, r1, #1
900248fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024900:	f10c 0301 	add.w	r3, ip, #1
90024904:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024908:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002490c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024910:	430b      	orrs	r3, r1
90024912:	1c51      	adds	r1, r2, #1
90024914:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024918:	0952      	lsrs	r2, r2, #5
9002491a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002491e:	4313      	orrs	r3, r2
90024920:	803b      	strh	r3, [r7, #0]
90024922:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024924:	3702      	adds	r7, #2
90024926:	441c      	add	r4, r3
90024928:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002492a:	441e      	add	r6, r3
9002492c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002492e:	3b01      	subs	r3, #1
90024930:	9318      	str	r3, [sp, #96]	; 0x60
90024932:	e698      	b.n	90024666 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024934:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024936:	441c      	add	r4, r3
90024938:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002493a:	441e      	add	r6, r3
9002493c:	9b07      	ldr	r3, [sp, #28]
9002493e:	3b01      	subs	r3, #1
90024940:	9307      	str	r3, [sp, #28]
90024942:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024944:	3302      	adds	r3, #2
90024946:	930a      	str	r3, [sp, #40]	; 0x28
90024948:	e66d      	b.n	90024626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002494a:	d023      	beq.n	90024994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
9002494c:	9b07      	ldr	r3, [sp, #28]
9002494e:	9829      	ldr	r0, [sp, #164]	; 0xa4
90024950:	3b01      	subs	r3, #1
90024952:	fb00 4003 	mla	r0, r0, r3, r4
90024956:	1400      	asrs	r0, r0, #16
90024958:	f53f ae82 	bmi.w	90024660 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002495c:	3901      	subs	r1, #1
9002495e:	4288      	cmp	r0, r1
90024960:	f6bf ae7e 	bge.w	90024660 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024964:	992a      	ldr	r1, [sp, #168]	; 0xa8
90024966:	fb01 6303 	mla	r3, r1, r3, r6
9002496a:	141b      	asrs	r3, r3, #16
9002496c:	f53f ae78 	bmi.w	90024660 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024970:	3a01      	subs	r2, #1
90024972:	4293      	cmp	r3, r2
90024974:	f6bf ae74 	bge.w	90024660 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024978:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002497c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90024980:	f1bb 0f00 	cmp.w	fp, #0
90024984:	dc6c      	bgt.n	90024a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024986:	9b07      	ldr	r3, [sp, #28]
90024988:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002498c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002498e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024992:	930a      	str	r3, [sp, #40]	; 0x28
90024994:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024996:	2b00      	cmp	r3, #0
90024998:	f340 81b3 	ble.w	90024d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002499c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900249a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900249a2:	ee30 0a04 	vadd.f32	s0, s0, s8
900249a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900249aa:	eef0 6a62 	vmov.f32	s13, s5
900249ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
900249b2:	ee31 1a05 	vadd.f32	s2, s2, s10
900249b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900249ba:	ee16 4a90 	vmov	r4, s13
900249be:	eef0 6a43 	vmov.f32	s13, s6
900249c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900249c6:	ee16 6a90 	vmov	r6, s13
900249ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
900249ce:	ee61 7a27 	vmul.f32	s15, s2, s15
900249d2:	ee77 2a62 	vsub.f32	s5, s14, s5
900249d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900249da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900249de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900249e2:	ee12 2a90 	vmov	r2, s5
900249e6:	eef0 2a47 	vmov.f32	s5, s14
900249ea:	fb92 f3f3 	sdiv	r3, r2, r3
900249ee:	ee13 2a10 	vmov	r2, s6
900249f2:	9329      	str	r3, [sp, #164]	; 0xa4
900249f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900249f6:	eeb0 3a67 	vmov.f32	s6, s15
900249fa:	fb92 f3f3 	sdiv	r3, r2, r3
900249fe:	932a      	str	r3, [sp, #168]	; 0xa8
90024a00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024a02:	9a19      	ldr	r2, [sp, #100]	; 0x64
90024a04:	3b01      	subs	r3, #1
90024a06:	9317      	str	r3, [sp, #92]	; 0x5c
90024a08:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024a0a:	bf08      	it	eq
90024a0c:	4613      	moveq	r3, r2
90024a0e:	9307      	str	r3, [sp, #28]
90024a10:	e5fb      	b.n	9002460a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90024a12:	2900      	cmp	r1, #0
90024a14:	f43f ae6b 	beq.w	900246ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024a18:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90024a1c:	9308      	str	r3, [sp, #32]
90024a1e:	0e1b      	lsrs	r3, r3, #24
90024a20:	9311      	str	r3, [sp, #68]	; 0x44
90024a22:	e664      	b.n	900246ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024a24:	f112 0801 	adds.w	r8, r2, #1
90024a28:	f53f af7b 	bmi.w	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a2c:	4543      	cmp	r3, r8
90024a2e:	f6ff af78 	blt.w	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a32:	f11c 0801 	adds.w	r8, ip, #1
90024a36:	f53f af74 	bmi.w	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a3a:	45c6      	cmp	lr, r8
90024a3c:	f6ff af71 	blt.w	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a40:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90024a42:	b21b      	sxth	r3, r3
90024a44:	9201      	str	r2, [sp, #4]
90024a46:	fa0f f28e 	sxth.w	r2, lr
90024a4a:	e9cd 1504 	strd	r1, r5, [sp, #16]
90024a4e:	e9cd c002 	strd	ip, r0, [sp, #8]
90024a52:	9200      	str	r2, [sp, #0]
90024a54:	4639      	mov	r1, r7
90024a56:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024a58:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024a5a:	f7ff fc79 	bl	90024350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90024a5e:	e760      	b.n	90024922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024a60:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024a62:	1427      	asrs	r7, r4, #16
90024a64:	9d10      	ldr	r5, [sp, #64]	; 0x40
90024a66:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024a6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024a6e:	1433      	asrs	r3, r6, #16
90024a70:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024a74:	fb01 7303 	mla	r3, r1, r3, r7
90024a78:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90024a7c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024a80:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024a84:	2a00      	cmp	r2, #0
90024a86:	f000 8133 	beq.w	90024cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90024a8a:	687d      	ldr	r5, [r7, #4]
90024a8c:	950e      	str	r5, [sp, #56]	; 0x38
90024a8e:	0e2d      	lsrs	r5, r5, #24
90024a90:	9515      	str	r5, [sp, #84]	; 0x54
90024a92:	b178      	cbz	r0, 90024ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024a94:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
90024a98:	3901      	subs	r1, #1
90024a9a:	0089      	lsls	r1, r1, #2
90024a9c:	3104      	adds	r1, #4
90024a9e:	eb07 0e01 	add.w	lr, r7, r1
90024aa2:	5879      	ldr	r1, [r7, r1]
90024aa4:	9109      	str	r1, [sp, #36]	; 0x24
90024aa6:	0e09      	lsrs	r1, r1, #24
90024aa8:	9112      	str	r1, [sp, #72]	; 0x48
90024aaa:	f8de 1004 	ldr.w	r1, [lr, #4]
90024aae:	910f      	str	r1, [sp, #60]	; 0x3c
90024ab0:	0e09      	lsrs	r1, r1, #24
90024ab2:	9116      	str	r1, [sp, #88]	; 0x58
90024ab4:	b292      	uxth	r2, r2
90024ab6:	9915      	ldr	r1, [sp, #84]	; 0x54
90024ab8:	b280      	uxth	r0, r0
90024aba:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024abc:	fb02 f800 	mul.w	r8, r2, r0
90024ac0:	0112      	lsls	r2, r2, #4
90024ac2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90024ac6:	eba2 0e08 	sub.w	lr, r2, r8
90024aca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90024ace:	b280      	uxth	r0, r0
90024ad0:	fa1f fe8e 	uxth.w	lr, lr
90024ad4:	1a12      	subs	r2, r2, r0
90024ad6:	fb0e f101 	mul.w	r1, lr, r1
90024ada:	b292      	uxth	r2, r2
90024adc:	fb02 110c 	mla	r1, r2, ip, r1
90024ae0:	fb00 1105 	mla	r1, r0, r5, r1
90024ae4:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024ae6:	fb08 1105 	mla	r1, r8, r5, r1
90024aea:	f3c1 2107 	ubfx	r1, r1, #8, #8
90024aee:	2900      	cmp	r1, #0
90024af0:	f000 80f5 	beq.w	90024cde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90024af4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90024af8:	d019      	beq.n	90024b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90024afa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90024afe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024b02:	fb0c fa0a 	mul.w	sl, ip, sl
90024b06:	fb0c fc03 	mul.w	ip, ip, r3
90024b0a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024b0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024b12:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90024b16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024b1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024b1e:	4453      	add	r3, sl
90024b20:	0a3f      	lsrs	r7, r7, #8
90024b22:	0a1b      	lsrs	r3, r3, #8
90024b24:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024b28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024b2c:	433b      	orrs	r3, r7
90024b2e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024b30:	2dff      	cmp	r5, #255	; 0xff
90024b32:	d020      	beq.n	90024b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90024b34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024b36:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024b3a:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024b3c:	436f      	muls	r7, r5
90024b3e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024b40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024b44:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024b48:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024b4a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024b4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024b52:	fb05 fa0a 	mul.w	sl, r5, sl
90024b56:	44bc      	add	ip, r7
90024b58:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024b5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024b60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024b64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024b68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024b6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024b70:	ea4c 050a 	orr.w	r5, ip, sl
90024b74:	950e      	str	r5, [sp, #56]	; 0x38
90024b76:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024b78:	2dff      	cmp	r5, #255	; 0xff
90024b7a:	d020      	beq.n	90024bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90024b7c:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024b7e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024b82:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024b84:	436f      	muls	r7, r5
90024b86:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024b88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024b8c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024b90:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024b92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024b96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024b9a:	fb05 fa0a 	mul.w	sl, r5, sl
90024b9e:	44bc      	add	ip, r7
90024ba0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024ba4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ba8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024bac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024bb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024bb8:	ea4c 050a 	orr.w	r5, ip, sl
90024bbc:	9509      	str	r5, [sp, #36]	; 0x24
90024bbe:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024bc0:	2dff      	cmp	r5, #255	; 0xff
90024bc2:	d020      	beq.n	90024c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90024bc4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024bc6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024bca:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024bcc:	436f      	muls	r7, r5
90024bce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024bd0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024bd4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024bd8:	9d16      	ldr	r5, [sp, #88]	; 0x58
90024bda:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024bde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024be2:	fb05 fa0a 	mul.w	sl, r5, sl
90024be6:	44bc      	add	ip, r7
90024be8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024bec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024bf0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024bf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024bf8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024bfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024c00:	ea4c 050a 	orr.w	r5, ip, sl
90024c04:	950f      	str	r5, [sp, #60]	; 0x3c
90024c06:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024c08:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90024c0c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024c10:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024c14:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024c16:	fb0e f707 	mul.w	r7, lr, r7
90024c1a:	fb02 770c 	mla	r7, r2, ip, r7
90024c1e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024c22:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024c24:	fb00 770c 	mla	r7, r0, ip, r7
90024c28:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024c2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024c2e:	fb08 770c 	mla	r7, r8, ip, r7
90024c32:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90024c36:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90024c38:	fb0e fe0c 	mul.w	lr, lr, ip
90024c3c:	0a3f      	lsrs	r7, r7, #8
90024c3e:	fb02 e303 	mla	r3, r2, r3, lr
90024c42:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024c44:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90024c48:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90024c4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024c4e:	fb00 330a 	mla	r3, r0, sl, r3
90024c52:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90024c56:	f8b9 0000 	ldrh.w	r0, [r9]
90024c5a:	fb08 3c0c 	mla	ip, r8, ip, r3
90024c5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90024c60:	1202      	asrs	r2, r0, #8
90024c62:	4359      	muls	r1, r3
90024c64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024c68:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90024c6c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024c70:	1c4b      	adds	r3, r1, #1
90024c72:	ea47 070c 	orr.w	r7, r7, ip
90024c76:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024c7a:	0c3b      	lsrs	r3, r7, #16
90024c7c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90024c80:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90024c84:	b2ff      	uxtb	r7, r7
90024c86:	fb13 f305 	smulbb	r3, r3, r5
90024c8a:	b2c9      	uxtb	r1, r1
90024c8c:	fb17 f705 	smulbb	r7, r7, r5
90024c90:	fb02 3201 	mla	r2, r2, r1, r3
90024c94:	10c3      	asrs	r3, r0, #3
90024c96:	fb1c fc05 	smulbb	ip, ip, r5
90024c9a:	00c0      	lsls	r0, r0, #3
90024c9c:	b292      	uxth	r2, r2
90024c9e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024ca2:	b2c0      	uxtb	r0, r0
90024ca4:	fb03 c301 	mla	r3, r3, r1, ip
90024ca8:	fb00 7001 	mla	r0, r0, r1, r7
90024cac:	1c51      	adds	r1, r2, #1
90024cae:	b29b      	uxth	r3, r3
90024cb0:	b280      	uxth	r0, r0
90024cb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024cb6:	f100 0c01 	add.w	ip, r0, #1
90024cba:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90024cbe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90024cc2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024cc6:	ea4c 0202 	orr.w	r2, ip, r2
90024cca:	f103 0c01 	add.w	ip, r3, #1
90024cce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90024cd2:	095b      	lsrs	r3, r3, #5
90024cd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024cd8:	431a      	orrs	r2, r3
90024cda:	f8a9 2000 	strh.w	r2, [r9]
90024cde:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024ce0:	f109 0902 	add.w	r9, r9, #2
90024ce4:	f10b 3bff 	add.w	fp, fp, #4294967295
90024ce8:	441c      	add	r4, r3
90024cea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024cec:	441e      	add	r6, r3
90024cee:	e647      	b.n	90024980 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90024cf0:	2800      	cmp	r0, #0
90024cf2:	f43f aedf 	beq.w	90024ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024cf6:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90024cfa:	9109      	str	r1, [sp, #36]	; 0x24
90024cfc:	0e09      	lsrs	r1, r1, #24
90024cfe:	9112      	str	r1, [sp, #72]	; 0x48
90024d00:	e6d8      	b.n	90024ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90024d02:	b01d      	add	sp, #116	; 0x74
90024d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90024d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024d0c:	b085      	sub	sp, #20
90024d0e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90024d12:	9102      	str	r1, [sp, #8]
90024d14:	2c00      	cmp	r4, #0
90024d16:	fb04 7103 	mla	r1, r4, r3, r7
90024d1a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90024d1e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90024d22:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90024d26:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024d2a:	f2c0 810c 	blt.w	90024f46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90024d2e:	45a6      	cmp	lr, r4
90024d30:	f340 8109 	ble.w	90024f46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90024d34:	2f00      	cmp	r7, #0
90024d36:	f2c0 8104 	blt.w	90024f42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90024d3a:	42bb      	cmp	r3, r7
90024d3c:	f340 8101 	ble.w	90024f42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90024d40:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90024d44:	1c7a      	adds	r2, r7, #1
90024d46:	f100 8101 	bmi.w	90024f4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90024d4a:	4293      	cmp	r3, r2
90024d4c:	f340 80fe 	ble.w	90024f4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90024d50:	2e00      	cmp	r6, #0
90024d52:	f000 80fd 	beq.w	90024f50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90024d56:	f8dc 1004 	ldr.w	r1, [ip, #4]
90024d5a:	3401      	adds	r4, #1
90024d5c:	f100 80fc 	bmi.w	90024f58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90024d60:	45a6      	cmp	lr, r4
90024d62:	f340 80f9 	ble.w	90024f58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90024d66:	2800      	cmp	r0, #0
90024d68:	f000 80f9 	beq.w	90024f5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90024d6c:	2f00      	cmp	r7, #0
90024d6e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90024d72:	f2c0 80ef 	blt.w	90024f54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90024d76:	42bb      	cmp	r3, r7
90024d78:	f340 80ec 	ble.w	90024f54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90024d7c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90024d80:	3701      	adds	r7, #1
90024d82:	f100 80ef 	bmi.w	90024f64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90024d86:	42bb      	cmp	r3, r7
90024d88:	f340 80ec 	ble.w	90024f64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90024d8c:	2e00      	cmp	r6, #0
90024d8e:	f000 80eb 	beq.w	90024f68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90024d92:	6852      	ldr	r2, [r2, #4]
90024d94:	b2b6      	uxth	r6, r6
90024d96:	b280      	uxth	r0, r0
90024d98:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024d9c:	fb00 fe06 	mul.w	lr, r0, r6
90024da0:	0136      	lsls	r6, r6, #4
90024da2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024da6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024daa:	eba6 070e 	sub.w	r7, r6, lr
90024dae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90024db2:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024db6:	b280      	uxth	r0, r0
90024db8:	b2bf      	uxth	r7, r7
90024dba:	1a1b      	subs	r3, r3, r0
90024dbc:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024dc0:	fb07 f60a 	mul.w	r6, r7, sl
90024dc4:	b29b      	uxth	r3, r3
90024dc6:	fb0b 6603 	mla	r6, fp, r3, r6
90024dca:	fb00 6609 	mla	r6, r0, r9, r6
90024dce:	fb0e 6608 	mla	r6, lr, r8, r6
90024dd2:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024dd6:	9600      	str	r6, [sp, #0]
90024dd8:	2e00      	cmp	r6, #0
90024dda:	f000 80af 	beq.w	90024f3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90024dde:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024de2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90024de6:	9e02      	ldr	r6, [sp, #8]
90024de8:	fb0b fc0c 	mul.w	ip, fp, ip
90024dec:	fb0b f505 	mul.w	r5, fp, r5
90024df0:	8836      	ldrh	r6, [r6, #0]
90024df2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024df6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024dfa:	9501      	str	r5, [sp, #4]
90024dfc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90024e00:	44dc      	add	ip, fp
90024e02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e06:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90024e0a:	9503      	str	r5, [sp, #12]
90024e0c:	9d01      	ldr	r5, [sp, #4]
90024e0e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90024e12:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024e16:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90024e1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024e1e:	fb0a fc0c 	mul.w	ip, sl, ip
90024e22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024e26:	fb0a fa01 	mul.w	sl, sl, r1
90024e2a:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024e2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024e32:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90024e36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024e3a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024e3e:	4465      	add	r5, ip
90024e40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024e44:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024e48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e4c:	fb09 fc0c 	mul.w	ip, r9, ip
90024e50:	0a2d      	lsrs	r5, r5, #8
90024e52:	fb09 f904 	mul.w	r9, r9, r4
90024e56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024e5a:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024e5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024e62:	f509 7480 	add.w	r4, r9, #256	; 0x100
90024e66:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024e6a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024e6e:	437d      	muls	r5, r7
90024e70:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024e74:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90024e78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024e7c:	4461      	add	r1, ip
90024e7e:	fb08 f404 	mul.w	r4, r8, r4
90024e82:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024e86:	fb08 f802 	mul.w	r8, r8, r2
90024e8a:	0a09      	lsrs	r1, r1, #8
90024e8c:	0a22      	lsrs	r2, r4, #8
90024e8e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90024e92:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024e96:	fb07 f70a 	mul.w	r7, r7, sl
90024e9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024e9e:	4414      	add	r4, r2
90024ea0:	f508 7280 	add.w	r2, r8, #256	; 0x100
90024ea4:	0a24      	lsrs	r4, r4, #8
90024ea6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024eaa:	9a03      	ldr	r2, [sp, #12]
90024eac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90024eb0:	fb02 5503 	mla	r5, r2, r3, r5
90024eb4:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024eb8:	fb04 540e 	mla	r4, r4, lr, r5
90024ebc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90024ec0:	fb01 4100 	mla	r1, r1, r0, r4
90024ec4:	0a09      	lsrs	r1, r1, #8
90024ec6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90024eca:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90024ece:	fb03 7101 	mla	r1, r3, r1, r7
90024ed2:	9b00      	ldr	r3, [sp, #0]
90024ed4:	fb0e 1e08 	mla	lr, lr, r8, r1
90024ed8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90024edc:	43da      	mvns	r2, r3
90024ede:	1233      	asrs	r3, r6, #8
90024ee0:	fb00 e101 	mla	r1, r0, r1, lr
90024ee4:	10f0      	asrs	r0, r6, #3
90024ee6:	b2d2      	uxtb	r2, r2
90024ee8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024eec:	0a09      	lsrs	r1, r1, #8
90024eee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024ef2:	00f6      	lsls	r6, r6, #3
90024ef4:	4353      	muls	r3, r2
90024ef6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024efa:	4350      	muls	r0, r2
90024efc:	b2f6      	uxtb	r6, r6
90024efe:	4321      	orrs	r1, r4
90024f00:	4356      	muls	r6, r2
90024f02:	1c5a      	adds	r2, r3, #1
90024f04:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024f08:	0c0b      	lsrs	r3, r1, #16
90024f0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024f0e:	1c42      	adds	r2, r0, #1
90024f10:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024f14:	0a0a      	lsrs	r2, r1, #8
90024f16:	021b      	lsls	r3, r3, #8
90024f18:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024f1c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90024f20:	00d2      	lsls	r2, r2, #3
90024f22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024f26:	4313      	orrs	r3, r2
90024f28:	1c72      	adds	r2, r6, #1
90024f2a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90024f2e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90024f32:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90024f36:	4319      	orrs	r1, r3
90024f38:	9b02      	ldr	r3, [sp, #8]
90024f3a:	8019      	strh	r1, [r3, #0]
90024f3c:	b005      	add	sp, #20
90024f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024f42:	2500      	movs	r5, #0
90024f44:	e6fe      	b.n	90024d44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90024f46:	2100      	movs	r1, #0
90024f48:	460d      	mov	r5, r1
90024f4a:	e706      	b.n	90024d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024f4c:	2100      	movs	r1, #0
90024f4e:	e704      	b.n	90024d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024f50:	4631      	mov	r1, r6
90024f52:	e702      	b.n	90024d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90024f54:	2400      	movs	r4, #0
90024f56:	e713      	b.n	90024d80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90024f58:	2200      	movs	r2, #0
90024f5a:	4614      	mov	r4, r2
90024f5c:	e71a      	b.n	90024d94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024f5e:	4602      	mov	r2, r0
90024f60:	4604      	mov	r4, r0
90024f62:	e717      	b.n	90024d94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024f64:	2200      	movs	r2, #0
90024f66:	e715      	b.n	90024d94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90024f68:	4632      	mov	r2, r6
90024f6a:	e713      	b.n	90024d94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90024f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f70:	b09b      	sub	sp, #108	; 0x6c
90024f72:	9218      	str	r2, [sp, #96]	; 0x60
90024f74:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90024f76:	9019      	str	r0, [sp, #100]	; 0x64
90024f78:	9116      	str	r1, [sp, #88]	; 0x58
90024f7a:	6850      	ldr	r0, [r2, #4]
90024f7c:	9307      	str	r3, [sp, #28]
90024f7e:	6812      	ldr	r2, [r2, #0]
90024f80:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90024f84:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90024f88:	fb00 1303 	mla	r3, r0, r3, r1
90024f8c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024f90:	930a      	str	r3, [sp, #40]	; 0x28
90024f92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024f94:	681b      	ldr	r3, [r3, #0]
90024f96:	930f      	str	r3, [sp, #60]	; 0x3c
90024f98:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024f9a:	2b00      	cmp	r3, #0
90024f9c:	dc03      	bgt.n	90024fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024f9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024fa0:	2b00      	cmp	r3, #0
90024fa2:	f340 8387 	ble.w	900256b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90024fa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024fa8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024fac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024fb0:	1e48      	subs	r0, r1, #1
90024fb2:	1e57      	subs	r7, r2, #1
90024fb4:	9b07      	ldr	r3, [sp, #28]
90024fb6:	2b00      	cmp	r3, #0
90024fb8:	f340 8166 	ble.w	90025288 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90024fbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024fc0:	ea4f 4326 	mov.w	r3, r6, asr #16
90024fc4:	d406      	bmi.n	90024fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024fc6:	4584      	cmp	ip, r0
90024fc8:	da04      	bge.n	90024fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024fca:	2b00      	cmp	r3, #0
90024fcc:	db02      	blt.n	90024fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90024fce:	42bb      	cmp	r3, r7
90024fd0:	f2c0 815b 	blt.w	9002528a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90024fd4:	f11c 0c01 	adds.w	ip, ip, #1
90024fd8:	f100 814b 	bmi.w	90025272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024fdc:	4561      	cmp	r1, ip
90024fde:	f2c0 8148 	blt.w	90025272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024fe2:	3301      	adds	r3, #1
90024fe4:	f100 8145 	bmi.w	90025272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024fe8:	429a      	cmp	r2, r3
90024fea:	f2c0 8142 	blt.w	90025272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90024fee:	9b07      	ldr	r3, [sp, #28]
90024ff0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90024ff2:	9317      	str	r3, [sp, #92]	; 0x5c
90024ff4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024ff6:	2b00      	cmp	r3, #0
90024ff8:	f340 8165 	ble.w	900252c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90024ffc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90024ffe:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025002:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025004:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025008:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002500c:	1422      	asrs	r2, r4, #16
9002500e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025012:	689b      	ldr	r3, [r3, #8]
90025014:	f100 81d5 	bmi.w	900253c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025018:	f103 38ff 	add.w	r8, r3, #4294967295
9002501c:	4542      	cmp	r2, r8
9002501e:	f280 81d0 	bge.w	900253c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025022:	f1bc 0f00 	cmp.w	ip, #0
90025026:	f2c0 81cc 	blt.w	900253c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002502a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002502e:	45c4      	cmp	ip, r8
90025030:	f280 81c7 	bge.w	900253c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025034:	b21b      	sxth	r3, r3
90025036:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025038:	fb0c 2203 	mla	r2, ip, r3, r2
9002503c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025040:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90025044:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025048:	2900      	cmp	r1, #0
9002504a:	f000 8182 	beq.w	90025352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002504e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90025052:	950b      	str	r5, [sp, #44]	; 0x2c
90025054:	0e2d      	lsrs	r5, r5, #24
90025056:	9512      	str	r5, [sp, #72]	; 0x48
90025058:	b180      	cbz	r0, 9002507c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002505a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
9002505e:	3b01      	subs	r3, #1
90025060:	009b      	lsls	r3, r3, #2
90025062:	3304      	adds	r3, #4
90025064:	eb08 0c03 	add.w	ip, r8, r3
90025068:	f858 3003 	ldr.w	r3, [r8, r3]
9002506c:	9308      	str	r3, [sp, #32]
9002506e:	0e1b      	lsrs	r3, r3, #24
90025070:	9310      	str	r3, [sp, #64]	; 0x40
90025072:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025076:	930c      	str	r3, [sp, #48]	; 0x30
90025078:	0e1b      	lsrs	r3, r3, #24
9002507a:	9313      	str	r3, [sp, #76]	; 0x4c
9002507c:	b289      	uxth	r1, r1
9002507e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025080:	b280      	uxth	r0, r0
90025082:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025084:	fb01 f900 	mul.w	r9, r1, r0
90025088:	0109      	lsls	r1, r1, #4
9002508a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002508e:	eba1 0809 	sub.w	r8, r1, r9
90025092:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90025096:	b280      	uxth	r0, r0
90025098:	fa1f f888 	uxth.w	r8, r8
9002509c:	1a09      	subs	r1, r1, r0
9002509e:	fb08 f303 	mul.w	r3, r8, r3
900250a2:	b289      	uxth	r1, r1
900250a4:	fb01 330e 	mla	r3, r1, lr, r3
900250a8:	fb00 3305 	mla	r3, r0, r5, r3
900250ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900250ae:	fb09 3305 	mla	r3, r9, r5, r3
900250b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900250b6:	2b00      	cmp	r3, #0
900250b8:	f000 80d2 	beq.w	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900250bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900250c0:	d01b      	beq.n	900250fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900250c2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900250c6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900250ca:	fb0e fa0a 	mul.w	sl, lr, sl
900250ce:	fb0e fe02 	mul.w	lr, lr, r2
900250d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
900250d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900250da:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900250de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900250e2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900250e6:	4452      	add	r2, sl
900250e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900250ec:	0a12      	lsrs	r2, r2, #8
900250ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900250f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900250f6:	ea42 020c 	orr.w	r2, r2, ip
900250fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
900250fc:	2dff      	cmp	r5, #255	; 0xff
900250fe:	d021      	beq.n	90025144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90025100:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025102:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025106:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025108:	fb05 fb0b 	mul.w	fp, r5, fp
9002510c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002510e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025112:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025114:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025118:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002511c:	fb05 fa0a 	mul.w	sl, r5, sl
90025120:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025124:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025128:	44de      	add	lr, fp
9002512a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002512e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025132:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025136:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002513a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002513e:	ea4e 050a 	orr.w	r5, lr, sl
90025142:	950b      	str	r5, [sp, #44]	; 0x2c
90025144:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025146:	2dff      	cmp	r5, #255	; 0xff
90025148:	d021      	beq.n	9002518e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002514a:	9d08      	ldr	r5, [sp, #32]
9002514c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025150:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025152:	fb05 fb0b 	mul.w	fp, r5, fp
90025156:	9d08      	ldr	r5, [sp, #32]
90025158:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002515c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002515e:	fb05 fa0e 	mul.w	sl, r5, lr
90025162:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025166:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002516a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002516e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025172:	44de      	add	lr, fp
90025174:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025178:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002517c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025180:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025184:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025188:	ea4e 050a 	orr.w	r5, lr, sl
9002518c:	9508      	str	r5, [sp, #32]
9002518e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025190:	2dff      	cmp	r5, #255	; 0xff
90025192:	d021      	beq.n	900251d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90025194:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025196:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002519a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002519c:	fb05 fb0b 	mul.w	fp, r5, fp
900251a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900251a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900251a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900251a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900251ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900251b0:	fb05 fa0a 	mul.w	sl, r5, sl
900251b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900251b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900251bc:	44de      	add	lr, fp
900251be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900251c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900251c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900251ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900251d2:	ea4e 050a 	orr.w	r5, lr, sl
900251d6:	950c      	str	r5, [sp, #48]	; 0x30
900251d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900251da:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900251de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900251e2:	2bff      	cmp	r3, #255	; 0xff
900251e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900251e8:	9d08      	ldr	r5, [sp, #32]
900251ea:	fb08 fc0c 	mul.w	ip, r8, ip
900251ee:	fb01 cc0e 	mla	ip, r1, lr, ip
900251f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900251f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900251f8:	fb00 cc0e 	mla	ip, r0, lr, ip
900251fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025200:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025202:	fb09 cc0e 	mla	ip, r9, lr, ip
90025206:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002520a:	fb08 f80e 	mul.w	r8, r8, lr
9002520e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025212:	fb01 8202 	mla	r2, r1, r2, r8
90025216:	9908      	ldr	r1, [sp, #32]
90025218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002521c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90025220:	990c      	ldr	r1, [sp, #48]	; 0x30
90025222:	fb00 220a 	mla	r2, r0, sl, r2
90025226:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9002522a:	fb09 2900 	mla	r9, r9, r0, r2
9002522e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025232:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90025236:	ea4c 0c09 	orr.w	ip, ip, r9
9002523a:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002523e:	f040 8091 	bne.w	90025364 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025242:	ea4f 135c 	mov.w	r3, ip, lsr #5
90025246:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002524a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002524e:	f022 0207 	bic.w	r2, r2, #7
90025252:	431a      	orrs	r2, r3
90025254:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025258:	ea4c 0c02 	orr.w	ip, ip, r2
9002525c:	f8a7 c000 	strh.w	ip, [r7]
90025260:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025262:	3702      	adds	r7, #2
90025264:	441c      	add	r4, r3
90025266:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025268:	441e      	add	r6, r3
9002526a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002526c:	3b01      	subs	r3, #1
9002526e:	9317      	str	r3, [sp, #92]	; 0x5c
90025270:	e6c0      	b.n	90024ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90025272:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025274:	441c      	add	r4, r3
90025276:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025278:	441e      	add	r6, r3
9002527a:	9b07      	ldr	r3, [sp, #28]
9002527c:	3b01      	subs	r3, #1
9002527e:	9307      	str	r3, [sp, #28]
90025280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025282:	3302      	adds	r3, #2
90025284:	930a      	str	r3, [sp, #40]	; 0x28
90025286:	e695      	b.n	90024fb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025288:	d024      	beq.n	900252d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002528a:	9b07      	ldr	r3, [sp, #28]
9002528c:	9827      	ldr	r0, [sp, #156]	; 0x9c
9002528e:	3b01      	subs	r3, #1
90025290:	fb00 4003 	mla	r0, r0, r3, r4
90025294:	1400      	asrs	r0, r0, #16
90025296:	f53f aeaa 	bmi.w	90024fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002529a:	3901      	subs	r1, #1
9002529c:	4288      	cmp	r0, r1
9002529e:	f6bf aea6 	bge.w	90024fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900252a2:	9928      	ldr	r1, [sp, #160]	; 0xa0
900252a4:	fb01 6303 	mla	r3, r1, r3, r6
900252a8:	141b      	asrs	r3, r3, #16
900252aa:	f53f aea0 	bmi.w	90024fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900252ae:	3a01      	subs	r2, #1
900252b0:	4293      	cmp	r3, r2
900252b2:	f6bf ae9c 	bge.w	90024fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900252b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900252ba:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
900252be:	f1bb 0f00 	cmp.w	fp, #0
900252c2:	f300 809a 	bgt.w	900253fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900252c6:	9b07      	ldr	r3, [sp, #28]
900252c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900252cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900252ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900252d2:	930a      	str	r3, [sp, #40]	; 0x28
900252d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
900252d6:	2b00      	cmp	r3, #0
900252d8:	f340 81ec 	ble.w	900256b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900252dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900252e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900252e2:	ee30 0a04 	vadd.f32	s0, s0, s8
900252e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900252ea:	eef0 6a62 	vmov.f32	s13, s5
900252ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
900252f2:	ee31 1a05 	vadd.f32	s2, s2, s10
900252f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900252fa:	ee16 4a90 	vmov	r4, s13
900252fe:	eef0 6a43 	vmov.f32	s13, s6
90025302:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025306:	ee16 6a90 	vmov	r6, s13
9002530a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002530e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025312:	ee77 2a62 	vsub.f32	s5, s14, s5
90025316:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002531a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002531e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025322:	ee12 2a90 	vmov	r2, s5
90025326:	eef0 2a47 	vmov.f32	s5, s14
9002532a:	fb92 f3f3 	sdiv	r3, r2, r3
9002532e:	ee13 2a10 	vmov	r2, s6
90025332:	9327      	str	r3, [sp, #156]	; 0x9c
90025334:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025336:	eeb0 3a67 	vmov.f32	s6, s15
9002533a:	fb92 f3f3 	sdiv	r3, r2, r3
9002533e:	9328      	str	r3, [sp, #160]	; 0xa0
90025340:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025342:	9a18      	ldr	r2, [sp, #96]	; 0x60
90025344:	3b01      	subs	r3, #1
90025346:	9316      	str	r3, [sp, #88]	; 0x58
90025348:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002534a:	bf08      	it	eq
9002534c:	4613      	moveq	r3, r2
9002534e:	9307      	str	r3, [sp, #28]
90025350:	e622      	b.n	90024f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90025352:	2800      	cmp	r0, #0
90025354:	f43f ae92 	beq.w	9002507c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025358:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002535c:	9308      	str	r3, [sp, #32]
9002535e:	0e1b      	lsrs	r3, r3, #24
90025360:	9310      	str	r3, [sp, #64]	; 0x40
90025362:	e68b      	b.n	9002507c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025364:	8839      	ldrh	r1, [r7, #0]
90025366:	43db      	mvns	r3, r3
90025368:	4dd4      	ldr	r5, [pc, #848]	; (900256bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002536a:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002536e:	fa5f f883 	uxtb.w	r8, r3
90025372:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90025376:	10c8      	asrs	r0, r1, #3
90025378:	00cb      	lsls	r3, r1, #3
9002537a:	fb0e fe08 	mul.w	lr, lr, r8
9002537e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025382:	b2db      	uxtb	r3, r3
90025384:	f10e 0101 	add.w	r1, lr, #1
90025388:	fb00 f008 	mul.w	r0, r0, r8
9002538c:	fb03 f308 	mul.w	r3, r3, r8
90025390:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90025394:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025398:	eb01 211e 	add.w	r1, r1, lr, lsr #8
9002539c:	f100 0e01 	add.w	lr, r0, #1
900253a0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900253a4:	b2c9      	uxtb	r1, r1
900253a6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900253aa:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900253ae:	00d2      	lsls	r2, r2, #3
900253b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900253b4:	430a      	orrs	r2, r1
900253b6:	1c59      	adds	r1, r3, #1
900253b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900253bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900253c0:	e748      	b.n	90025254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900253c2:	f112 0801 	adds.w	r8, r2, #1
900253c6:	f53f af4b 	bmi.w	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253ca:	4543      	cmp	r3, r8
900253cc:	f6ff af48 	blt.w	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253d0:	f11c 0801 	adds.w	r8, ip, #1
900253d4:	f53f af44 	bmi.w	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253d8:	45c6      	cmp	lr, r8
900253da:	f6ff af41 	blt.w	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253de:	b21b      	sxth	r3, r3
900253e0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900253e4:	fa0f f28e 	sxth.w	r2, lr
900253e8:	e9cd 1003 	strd	r1, r0, [sp, #12]
900253ec:	9200      	str	r2, [sp, #0]
900253ee:	4639      	mov	r1, r7
900253f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900253f2:	9819      	ldr	r0, [sp, #100]	; 0x64
900253f4:	f7ff fc88 	bl	90024d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900253f8:	e732      	b.n	90025260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900253fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900253fc:	1421      	asrs	r1, r4, #16
900253fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025400:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025404:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90025408:	1433      	asrs	r3, r6, #16
9002540a:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002540e:	fb07 1303 	mla	r3, r7, r3, r1
90025412:	990f      	ldr	r1, [sp, #60]	; 0x3c
90025414:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90025418:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002541c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025420:	2a00      	cmp	r2, #0
90025422:	f000 8108 	beq.w	90025636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90025426:	684d      	ldr	r5, [r1, #4]
90025428:	950d      	str	r5, [sp, #52]	; 0x34
9002542a:	0e2d      	lsrs	r5, r5, #24
9002542c:	9514      	str	r5, [sp, #80]	; 0x50
9002542e:	b178      	cbz	r0, 90025450 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025430:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90025434:	3f01      	subs	r7, #1
90025436:	00bf      	lsls	r7, r7, #2
90025438:	3704      	adds	r7, #4
9002543a:	eb01 0e07 	add.w	lr, r1, r7
9002543e:	59c9      	ldr	r1, [r1, r7]
90025440:	9109      	str	r1, [sp, #36]	; 0x24
90025442:	0e09      	lsrs	r1, r1, #24
90025444:	9111      	str	r1, [sp, #68]	; 0x44
90025446:	f8de 1004 	ldr.w	r1, [lr, #4]
9002544a:	910e      	str	r1, [sp, #56]	; 0x38
9002544c:	0e09      	lsrs	r1, r1, #24
9002544e:	9115      	str	r1, [sp, #84]	; 0x54
90025450:	b292      	uxth	r2, r2
90025452:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025454:	b280      	uxth	r0, r0
90025456:	fb02 f900 	mul.w	r9, r2, r0
9002545a:	0112      	lsls	r2, r2, #4
9002545c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025460:	eba2 0e09 	sub.w	lr, r2, r9
90025464:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90025468:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002546a:	b280      	uxth	r0, r0
9002546c:	fa1f fe8e 	uxth.w	lr, lr
90025470:	1a09      	subs	r1, r1, r0
90025472:	fb0e f202 	mul.w	r2, lr, r2
90025476:	b289      	uxth	r1, r1
90025478:	fb01 220c 	mla	r2, r1, ip, r2
9002547c:	fb00 2205 	mla	r2, r0, r5, r2
90025480:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025482:	fb09 2205 	mla	r2, r9, r5, r2
90025486:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002548a:	2a00      	cmp	r2, #0
9002548c:	f000 80ca 	beq.w	90025624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025490:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90025494:	d019      	beq.n	900254ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025496:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002549a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002549e:	fb0c fa0a 	mul.w	sl, ip, sl
900254a2:	fb0c fc03 	mul.w	ip, ip, r3
900254a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900254aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900254ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900254b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900254b6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900254ba:	4453      	add	r3, sl
900254bc:	0a3f      	lsrs	r7, r7, #8
900254be:	0a1b      	lsrs	r3, r3, #8
900254c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900254c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900254c8:	433b      	orrs	r3, r7
900254ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
900254cc:	2dff      	cmp	r5, #255	; 0xff
900254ce:	d020      	beq.n	90025512 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900254d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900254d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900254d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
900254d8:	436f      	muls	r7, r5
900254da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900254dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900254e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900254e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
900254e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900254ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900254ee:	fb05 fa0a 	mul.w	sl, r5, sl
900254f2:	44bc      	add	ip, r7
900254f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900254f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900254fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025504:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002550c:	ea4c 050a 	orr.w	r5, ip, sl
90025510:	950d      	str	r5, [sp, #52]	; 0x34
90025512:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025514:	2dff      	cmp	r5, #255	; 0xff
90025516:	d020      	beq.n	9002555a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90025518:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002551a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002551e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025520:	436f      	muls	r7, r5
90025522:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025524:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90025528:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002552a:	fb05 fa0c 	mul.w	sl, r5, ip
9002552e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025532:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025536:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002553a:	44bc      	add	ip, r7
9002553c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025540:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025548:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002554c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025550:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025554:	ea4c 050a 	orr.w	r5, ip, sl
90025558:	9509      	str	r5, [sp, #36]	; 0x24
9002555a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002555c:	2dff      	cmp	r5, #255	; 0xff
9002555e:	d020      	beq.n	900255a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90025560:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025562:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025566:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025568:	436f      	muls	r7, r5
9002556a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002556c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025570:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025574:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025576:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002557a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002557e:	fb05 fa0a 	mul.w	sl, r5, sl
90025582:	44bc      	add	ip, r7
90025584:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002558c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025594:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002559c:	ea4c 050a 	orr.w	r5, ip, sl
900255a0:	950e      	str	r5, [sp, #56]	; 0x38
900255a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900255a4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900255a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900255ac:	2aff      	cmp	r2, #255	; 0xff
900255ae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900255b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
900255b4:	fb0e f707 	mul.w	r7, lr, r7
900255b8:	fb01 770c 	mla	r7, r1, ip, r7
900255bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900255c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900255c2:	fb00 770c 	mla	r7, r0, ip, r7
900255c6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900255ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900255cc:	fb09 770c 	mla	r7, r9, ip, r7
900255d0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900255d4:	fb0e fe0c 	mul.w	lr, lr, ip
900255d8:	ea4f 2717 	mov.w	r7, r7, lsr #8
900255dc:	fb01 e303 	mla	r3, r1, r3, lr
900255e0:	9909      	ldr	r1, [sp, #36]	; 0x24
900255e2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900255e6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900255ea:	990e      	ldr	r1, [sp, #56]	; 0x38
900255ec:	fb00 330a 	mla	r3, r0, sl, r3
900255f0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900255f4:	fb09 3c0c 	mla	ip, r9, ip, r3
900255f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900255fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025600:	ea47 070c 	orr.w	r7, r7, ip
90025604:	ea4f 2317 	mov.w	r3, r7, lsr #8
90025608:	d11e      	bne.n	90025648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002560a:	097a      	lsrs	r2, r7, #5
9002560c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90025610:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025614:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025618:	f023 0307 	bic.w	r3, r3, #7
9002561c:	4313      	orrs	r3, r2
9002561e:	431f      	orrs	r7, r3
90025620:	f8a8 7000 	strh.w	r7, [r8]
90025624:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025626:	f108 0802 	add.w	r8, r8, #2
9002562a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002562e:	441c      	add	r4, r3
90025630:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025632:	441e      	add	r6, r3
90025634:	e643      	b.n	900252be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025636:	2800      	cmp	r0, #0
90025638:	f43f af0a 	beq.w	90025450 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002563c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90025640:	9109      	str	r1, [sp, #36]	; 0x24
90025642:	0e09      	lsrs	r1, r1, #24
90025644:	9111      	str	r1, [sp, #68]	; 0x44
90025646:	e703      	b.n	90025450 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025648:	f8b8 1000 	ldrh.w	r1, [r8]
9002564c:	43d2      	mvns	r2, r2
9002564e:	ea4f 2c21 	mov.w	ip, r1, asr #8
90025652:	fa5f fe82 	uxtb.w	lr, r2
90025656:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002565a:	10c8      	asrs	r0, r1, #3
9002565c:	00ca      	lsls	r2, r1, #3
9002565e:	fb0c fc0e 	mul.w	ip, ip, lr
90025662:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025666:	b2d2      	uxtb	r2, r2
90025668:	f10c 0101 	add.w	r1, ip, #1
9002566c:	fb00 f00e 	mul.w	r0, r0, lr
90025670:	fb02 f20e 	mul.w	r2, r2, lr
90025674:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025678:	0c39      	lsrs	r1, r7, #16
9002567a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002567e:	490f      	ldr	r1, [pc, #60]	; (900256bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025680:	fa5f fc8c 	uxtb.w	ip, ip
90025684:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025688:	1c41      	adds	r1, r0, #1
9002568a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002568e:	1c51      	adds	r1, r2, #1
90025690:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025694:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025698:	00c0      	lsls	r0, r0, #3
9002569a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002569e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900256a2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900256a6:	ea4c 0c00 	orr.w	ip, ip, r0
900256aa:	ea47 0c0c 	orr.w	ip, r7, ip
900256ae:	f8a8 c000 	strh.w	ip, [r8]
900256b2:	e7b7      	b.n	90025624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900256b4:	b01b      	add	sp, #108	; 0x6c
900256b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900256ba:	bf00      	nop
900256bc:	fffff800 	.word	0xfffff800

900256c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900256c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900256c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
900256c8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900256cc:	2d00      	cmp	r5, #0
900256ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
900256d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
900256d6:	fb05 0e03 	mla	lr, r5, r3, r0
900256da:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900256de:	f2c0 808c 	blt.w	900257fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900256e2:	45a9      	cmp	r9, r5
900256e4:	f340 8089 	ble.w	900257fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900256e8:	2800      	cmp	r0, #0
900256ea:	f2c0 8084 	blt.w	900257f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900256ee:	4580      	cmp	r8, r0
900256f0:	f340 8081 	ble.w	900257f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900256f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
900256f8:	f01e 0f01 	tst.w	lr, #1
900256fc:	5d16      	ldrb	r6, [r2, r4]
900256fe:	bf0c      	ite	eq
90025700:	f006 060f 	andeq.w	r6, r6, #15
90025704:	1136      	asrne	r6, r6, #4
90025706:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002570a:	b2f6      	uxtb	r6, r6
9002570c:	1c44      	adds	r4, r0, #1
9002570e:	d477      	bmi.n	90025800 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025710:	45a0      	cmp	r8, r4
90025712:	dd75      	ble.n	90025800 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025714:	2f00      	cmp	r7, #0
90025716:	d075      	beq.n	90025804 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90025718:	f10e 0a01 	add.w	sl, lr, #1
9002571c:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025720:	f01a 0f01 	tst.w	sl, #1
90025724:	5d14      	ldrb	r4, [r2, r4]
90025726:	bf0c      	ite	eq
90025728:	f004 040f 	andeq.w	r4, r4, #15
9002572c:	1124      	asrne	r4, r4, #4
9002572e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025732:	b2e4      	uxtb	r4, r4
90025734:	3501      	adds	r5, #1
90025736:	d469      	bmi.n	9002580c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025738:	45a9      	cmp	r9, r5
9002573a:	dd67      	ble.n	9002580c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002573c:	f1bc 0f00 	cmp.w	ip, #0
90025740:	d067      	beq.n	90025812 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90025742:	2800      	cmp	r0, #0
90025744:	db60      	blt.n	90025808 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025746:	4580      	cmp	r8, r0
90025748:	dd5e      	ble.n	90025808 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002574a:	eb03 090e 	add.w	r9, r3, lr
9002574e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025752:	f019 0f01 	tst.w	r9, #1
90025756:	5d55      	ldrb	r5, [r2, r5]
90025758:	bf0c      	ite	eq
9002575a:	f005 050f 	andeq.w	r5, r5, #15
9002575e:	112d      	asrne	r5, r5, #4
90025760:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025764:	b2ed      	uxtb	r5, r5
90025766:	3001      	adds	r0, #1
90025768:	d456      	bmi.n	90025818 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002576a:	4580      	cmp	r8, r0
9002576c:	dd54      	ble.n	90025818 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002576e:	2f00      	cmp	r7, #0
90025770:	d054      	beq.n	9002581c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90025772:	3301      	adds	r3, #1
90025774:	449e      	add	lr, r3
90025776:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002577a:	f01e 0f01 	tst.w	lr, #1
9002577e:	5cd0      	ldrb	r0, [r2, r3]
90025780:	bf0c      	ite	eq
90025782:	f000 000f 	andeq.w	r0, r0, #15
90025786:	1100      	asrne	r0, r0, #4
90025788:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002578c:	b2c3      	uxtb	r3, r0
9002578e:	b2ba      	uxth	r2, r7
90025790:	fa1f fc8c 	uxth.w	ip, ip
90025794:	fb02 f00c 	mul.w	r0, r2, ip
90025798:	0112      	lsls	r2, r2, #4
9002579a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002579e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900257a2:	1a12      	subs	r2, r2, r0
900257a4:	fa1f fc8c 	uxth.w	ip, ip
900257a8:	b292      	uxth	r2, r2
900257aa:	eba7 070c 	sub.w	r7, r7, ip
900257ae:	4362      	muls	r2, r4
900257b0:	b2bf      	uxth	r7, r7
900257b2:	fb06 2207 	mla	r2, r6, r7, r2
900257b6:	fb0c 2505 	mla	r5, ip, r5, r2
900257ba:	fb00 5303 	mla	r3, r0, r3, r5
900257be:	f3c3 2307 	ubfx	r3, r3, #8, #8
900257c2:	b1b3      	cbz	r3, 900257f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900257c4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
900257c8:	435a      	muls	r2, r3
900257ca:	1c53      	adds	r3, r2, #1
900257cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900257d0:	4a2d      	ldr	r2, [pc, #180]	; (90025888 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900257d2:	121b      	asrs	r3, r3, #8
900257d4:	6812      	ldr	r2, [r2, #0]
900257d6:	2bff      	cmp	r3, #255	; 0xff
900257d8:	ea4f 2612 	mov.w	r6, r2, lsr #8
900257dc:	d120      	bne.n	90025820 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900257de:	0950      	lsrs	r0, r2, #5
900257e0:	4b2a      	ldr	r3, [pc, #168]	; (9002588c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900257e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900257e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900257ea:	4033      	ands	r3, r6
900257ec:	4318      	orrs	r0, r3
900257ee:	4302      	orrs	r2, r0
900257f0:	800a      	strh	r2, [r1, #0]
900257f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900257f6:	2600      	movs	r6, #0
900257f8:	e788      	b.n	9002570c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900257fa:	2400      	movs	r4, #0
900257fc:	4626      	mov	r6, r4
900257fe:	e799      	b.n	90025734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025800:	2400      	movs	r4, #0
90025802:	e797      	b.n	90025734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025804:	463c      	mov	r4, r7
90025806:	e795      	b.n	90025734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025808:	2500      	movs	r5, #0
9002580a:	e7ac      	b.n	90025766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
9002580c:	2300      	movs	r3, #0
9002580e:	461d      	mov	r5, r3
90025810:	e7bd      	b.n	9002578e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025812:	4663      	mov	r3, ip
90025814:	4665      	mov	r5, ip
90025816:	e7ba      	b.n	9002578e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025818:	2300      	movs	r3, #0
9002581a:	e7b8      	b.n	9002578e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002581c:	463b      	mov	r3, r7
9002581e:	e7b6      	b.n	9002578e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025820:	880d      	ldrh	r5, [r1, #0]
90025822:	b29f      	uxth	r7, r3
90025824:	f3c2 4007 	ubfx	r0, r2, #16, #8
90025828:	43db      	mvns	r3, r3
9002582a:	122c      	asrs	r4, r5, #8
9002582c:	fb10 f007 	smulbb	r0, r0, r7
90025830:	b2db      	uxtb	r3, r3
90025832:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025836:	b2f6      	uxtb	r6, r6
90025838:	b2d2      	uxtb	r2, r2
9002583a:	fb04 0403 	mla	r4, r4, r3, r0
9002583e:	10e8      	asrs	r0, r5, #3
90025840:	fb12 f207 	smulbb	r2, r2, r7
90025844:	00ed      	lsls	r5, r5, #3
90025846:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002584a:	b2a4      	uxth	r4, r4
9002584c:	fb16 f607 	smulbb	r6, r6, r7
90025850:	b2ed      	uxtb	r5, r5
90025852:	fb00 6603 	mla	r6, r0, r3, r6
90025856:	fb05 2303 	mla	r3, r5, r3, r2
9002585a:	b2b0      	uxth	r0, r6
9002585c:	b29a      	uxth	r2, r3
9002585e:	1c63      	adds	r3, r4, #1
90025860:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025864:	1c53      	adds	r3, r2, #1
90025866:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002586a:	1c42      	adds	r2, r0, #1
9002586c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025870:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025874:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025878:	0940      	lsrs	r0, r0, #5
9002587a:	4323      	orrs	r3, r4
9002587c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025880:	4303      	orrs	r3, r0
90025882:	800b      	strh	r3, [r1, #0]
90025884:	e7b5      	b.n	900257f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025886:	bf00      	nop
90025888:	24039714 	.word	0x24039714
9002588c:	00fff800 	.word	0x00fff800

90025890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025894:	b097      	sub	sp, #92	; 0x5c
90025896:	9214      	str	r2, [sp, #80]	; 0x50
90025898:	9309      	str	r3, [sp, #36]	; 0x24
9002589a:	9a25      	ldr	r2, [sp, #148]	; 0x94
9002589c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900258a0:	9015      	str	r0, [sp, #84]	; 0x54
900258a2:	910d      	str	r1, [sp, #52]	; 0x34
900258a4:	6850      	ldr	r0, [r2, #4]
900258a6:	930f      	str	r3, [sp, #60]	; 0x3c
900258a8:	6812      	ldr	r2, [r2, #0]
900258aa:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900258ae:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
900258b2:	fb00 1303 	mla	r3, r0, r3, r1
900258b6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900258ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900258bc:	689b      	ldr	r3, [r3, #8]
900258be:	3301      	adds	r3, #1
900258c0:	f023 0301 	bic.w	r3, r3, #1
900258c4:	930a      	str	r3, [sp, #40]	; 0x28
900258c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900258c8:	681f      	ldr	r7, [r3, #0]
900258ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900258cc:	2b00      	cmp	r3, #0
900258ce:	dc03      	bgt.n	900258d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900258d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
900258d2:	2b00      	cmp	r3, #0
900258d4:	f340 8289 	ble.w	90025dea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900258d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900258da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900258de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900258e2:	1e48      	subs	r0, r1, #1
900258e4:	f102 3cff 	add.w	ip, r2, #4294967295
900258e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900258ea:	2b00      	cmp	r3, #0
900258ec:	f340 80c5 	ble.w	90025a7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900258f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900258f4:	ea4f 4326 	mov.w	r3, r6, asr #16
900258f8:	d406      	bmi.n	90025908 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900258fa:	4586      	cmp	lr, r0
900258fc:	da04      	bge.n	90025908 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900258fe:	2b00      	cmp	r3, #0
90025900:	db02      	blt.n	90025908 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025902:	4563      	cmp	r3, ip
90025904:	f2c0 80ba 	blt.w	90025a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025908:	f11e 0e01 	adds.w	lr, lr, #1
9002590c:	f100 80ab 	bmi.w	90025a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025910:	4571      	cmp	r1, lr
90025912:	f2c0 80a8 	blt.w	90025a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025916:	3301      	adds	r3, #1
90025918:	f100 80a5 	bmi.w	90025a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002591c:	429a      	cmp	r2, r3
9002591e:	f2c0 80a2 	blt.w	90025a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025922:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025924:	46c8      	mov	r8, r9
90025926:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002592a:	930e      	str	r3, [sp, #56]	; 0x38
9002592c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002592e:	2b00      	cmp	r3, #0
90025930:	f340 80c4 	ble.w	90025abc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90025934:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025936:	1430      	asrs	r0, r6, #16
90025938:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002593c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025940:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025944:	1423      	asrs	r3, r4, #16
90025946:	f100 814f 	bmi.w	90025be8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002594a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002594e:	455b      	cmp	r3, fp
90025950:	f280 814a 	bge.w	90025be8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025954:	2800      	cmp	r0, #0
90025956:	f2c0 8147 	blt.w	90025be8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002595a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002595e:	4558      	cmp	r0, fp
90025960:	f280 8142 	bge.w	90025be8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025964:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90025966:	fb00 3305 	mla	r3, r0, r5, r3
9002596a:	0858      	lsrs	r0, r3, #1
9002596c:	07dd      	lsls	r5, r3, #31
9002596e:	f817 c000 	ldrb.w	ip, [r7, r0]
90025972:	bf54      	ite	pl
90025974:	f00c 0c0f 	andpl.w	ip, ip, #15
90025978:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002597c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025980:	fa5f fc8c 	uxtb.w	ip, ip
90025984:	2a00      	cmp	r2, #0
90025986:	f000 80dd 	beq.w	90025b44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002598a:	1c58      	adds	r0, r3, #1
9002598c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025990:	07c0      	lsls	r0, r0, #31
90025992:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025996:	bf54      	ite	pl
90025998:	f00e 0e0f 	andpl.w	lr, lr, #15
9002599c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900259a0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900259a4:	fa5f f08e 	uxtb.w	r0, lr
900259a8:	9010      	str	r0, [sp, #64]	; 0x40
900259aa:	b1d9      	cbz	r1, 900259e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900259ac:	4453      	add	r3, sl
900259ae:	0858      	lsrs	r0, r3, #1
900259b0:	07dd      	lsls	r5, r3, #31
900259b2:	f103 0301 	add.w	r3, r3, #1
900259b6:	5c38      	ldrb	r0, [r7, r0]
900259b8:	bf54      	ite	pl
900259ba:	f000 000f 	andpl.w	r0, r0, #15
900259be:	1100      	asrmi	r0, r0, #4
900259c0:	07dd      	lsls	r5, r3, #31
900259c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900259c6:	b2c0      	uxtb	r0, r0
900259c8:	900b      	str	r0, [sp, #44]	; 0x2c
900259ca:	ea4f 0053 	mov.w	r0, r3, lsr #1
900259ce:	f817 e000 	ldrb.w	lr, [r7, r0]
900259d2:	bf54      	ite	pl
900259d4:	f00e 030f 	andpl.w	r3, lr, #15
900259d8:	ea4f 132e 	movmi.w	r3, lr, asr #4
900259dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900259e0:	b2db      	uxtb	r3, r3
900259e2:	9311      	str	r3, [sp, #68]	; 0x44
900259e4:	b292      	uxth	r2, r2
900259e6:	9d10      	ldr	r5, [sp, #64]	; 0x40
900259e8:	b289      	uxth	r1, r1
900259ea:	fb02 f301 	mul.w	r3, r2, r1
900259ee:	0112      	lsls	r2, r2, #4
900259f0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900259f4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900259f8:	1ad2      	subs	r2, r2, r3
900259fa:	b289      	uxth	r1, r1
900259fc:	b292      	uxth	r2, r2
900259fe:	1a40      	subs	r0, r0, r1
90025a00:	436a      	muls	r2, r5
90025a02:	b280      	uxth	r0, r0
90025a04:	fb0c 2c00 	mla	ip, ip, r0, r2
90025a08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90025a0a:	fb01 c102 	mla	r1, r1, r2, ip
90025a0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90025a10:	fb03 1302 	mla	r3, r3, r2, r1
90025a14:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025a18:	b1db      	cbz	r3, 90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025a1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025a1c:	4353      	muls	r3, r2
90025a1e:	1c5a      	adds	r2, r3, #1
90025a20:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025a24:	4ac6      	ldr	r2, [pc, #792]	; (90025d40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025a26:	121b      	asrs	r3, r3, #8
90025a28:	6812      	ldr	r2, [r2, #0]
90025a2a:	2bff      	cmp	r3, #255	; 0xff
90025a2c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025a30:	f040 8099 	bne.w	90025b66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90025a34:	0953      	lsrs	r3, r2, #5
90025a36:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90025a3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025a3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025a42:	f02c 0c07 	bic.w	ip, ip, #7
90025a46:	ea43 0c0c 	orr.w	ip, r3, ip
90025a4a:	ea4c 0202 	orr.w	r2, ip, r2
90025a4e:	f8a8 2000 	strh.w	r2, [r8]
90025a52:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025a54:	f108 0802 	add.w	r8, r8, #2
90025a58:	441c      	add	r4, r3
90025a5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025a5c:	441e      	add	r6, r3
90025a5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025a60:	3b01      	subs	r3, #1
90025a62:	930e      	str	r3, [sp, #56]	; 0x38
90025a64:	e762      	b.n	9002592c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90025a66:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025a68:	f109 0902 	add.w	r9, r9, #2
90025a6c:	441c      	add	r4, r3
90025a6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025a70:	441e      	add	r6, r3
90025a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a74:	3b01      	subs	r3, #1
90025a76:	9309      	str	r3, [sp, #36]	; 0x24
90025a78:	e736      	b.n	900258e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025a7a:	d024      	beq.n	90025ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90025a7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a7e:	9823      	ldr	r0, [sp, #140]	; 0x8c
90025a80:	3b01      	subs	r3, #1
90025a82:	fb00 4003 	mla	r0, r0, r3, r4
90025a86:	1400      	asrs	r0, r0, #16
90025a88:	f53f af4b 	bmi.w	90025922 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025a8c:	3901      	subs	r1, #1
90025a8e:	4288      	cmp	r0, r1
90025a90:	f6bf af47 	bge.w	90025922 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025a94:	9924      	ldr	r1, [sp, #144]	; 0x90
90025a96:	fb01 6303 	mla	r3, r1, r3, r6
90025a9a:	141b      	asrs	r3, r3, #16
90025a9c:	f53f af41 	bmi.w	90025922 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025aa0:	3a01      	subs	r2, #1
90025aa2:	4293      	cmp	r3, r2
90025aa4:	f6bf af3d 	bge.w	90025922 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025aa8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90025aac:	46c8      	mov	r8, r9
90025aae:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90025ab2:	930e      	str	r3, [sp, #56]	; 0x38
90025ab4:	f1bb 0f00 	cmp.w	fp, #0
90025ab8:	f300 80b7 	bgt.w	90025c2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90025abc:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025abe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025ac2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90025ac6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025ac8:	2b00      	cmp	r3, #0
90025aca:	f340 818e 	ble.w	90025dea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025ace:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025ad2:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025ad4:	ee30 0a04 	vadd.f32	s0, s0, s8
90025ad8:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025adc:	eef0 6a62 	vmov.f32	s13, s5
90025ae0:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025ae4:	ee31 1a05 	vadd.f32	s2, s2, s10
90025ae8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025aec:	ee16 4a90 	vmov	r4, s13
90025af0:	eef0 6a43 	vmov.f32	s13, s6
90025af4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025af8:	ee16 6a90 	vmov	r6, s13
90025afc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025b00:	ee61 7a27 	vmul.f32	s15, s2, s15
90025b04:	ee77 2a62 	vsub.f32	s5, s14, s5
90025b08:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025b0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025b10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025b14:	ee12 2a90 	vmov	r2, s5
90025b18:	eef0 2a47 	vmov.f32	s5, s14
90025b1c:	fb92 f3f3 	sdiv	r3, r2, r3
90025b20:	ee13 2a10 	vmov	r2, s6
90025b24:	9323      	str	r3, [sp, #140]	; 0x8c
90025b26:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025b28:	eeb0 3a67 	vmov.f32	s6, s15
90025b2c:	fb92 f3f3 	sdiv	r3, r2, r3
90025b30:	9324      	str	r3, [sp, #144]	; 0x90
90025b32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025b34:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025b36:	3b01      	subs	r3, #1
90025b38:	930d      	str	r3, [sp, #52]	; 0x34
90025b3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025b3c:	bf08      	it	eq
90025b3e:	4613      	moveq	r3, r2
90025b40:	9309      	str	r3, [sp, #36]	; 0x24
90025b42:	e6c2      	b.n	900258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025b44:	2900      	cmp	r1, #0
90025b46:	f43f af4d 	beq.w	900259e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025b4a:	eb0a 0003 	add.w	r0, sl, r3
90025b4e:	0843      	lsrs	r3, r0, #1
90025b50:	07c0      	lsls	r0, r0, #31
90025b52:	5cfb      	ldrb	r3, [r7, r3]
90025b54:	bf54      	ite	pl
90025b56:	f003 030f 	andpl.w	r3, r3, #15
90025b5a:	111b      	asrmi	r3, r3, #4
90025b5c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025b60:	b2db      	uxtb	r3, r3
90025b62:	930b      	str	r3, [sp, #44]	; 0x2c
90025b64:	e73e      	b.n	900259e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025b66:	f8b8 e000 	ldrh.w	lr, [r8]
90025b6a:	fa1f fb83 	uxth.w	fp, r3
90025b6e:	f3c2 4107 	ubfx	r1, r2, #16, #8
90025b72:	43db      	mvns	r3, r3
90025b74:	ea4f 202e 	mov.w	r0, lr, asr #8
90025b78:	fb11 f10b 	smulbb	r1, r1, fp
90025b7c:	b2db      	uxtb	r3, r3
90025b7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025b82:	fa5f fc8c 	uxtb.w	ip, ip
90025b86:	b2d2      	uxtb	r2, r2
90025b88:	fb00 1003 	mla	r0, r0, r3, r1
90025b8c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025b90:	fb1c fc0b 	smulbb	ip, ip, fp
90025b94:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025b98:	b280      	uxth	r0, r0
90025b9a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025b9e:	fb12 fb0b 	smulbb	fp, r2, fp
90025ba2:	fa5f fe8e 	uxtb.w	lr, lr
90025ba6:	fb01 cc03 	mla	ip, r1, r3, ip
90025baa:	fb0e bb03 	mla	fp, lr, r3, fp
90025bae:	1c43      	adds	r3, r0, #1
90025bb0:	fa1f fc8c 	uxth.w	ip, ip
90025bb4:	fa1f fb8b 	uxth.w	fp, fp
90025bb8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025bbc:	f10c 0101 	add.w	r1, ip, #1
90025bc0:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90025bc4:	f10b 0001 	add.w	r0, fp, #1
90025bc8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025bcc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90025bd0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025bd4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90025bd8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025bdc:	4318      	orrs	r0, r3
90025bde:	ea40 000c 	orr.w	r0, r0, ip
90025be2:	f8a8 0000 	strh.w	r0, [r8]
90025be6:	e734      	b.n	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025be8:	f113 0b01 	adds.w	fp, r3, #1
90025bec:	f53f af31 	bmi.w	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025bf0:	45dc      	cmp	ip, fp
90025bf2:	f6ff af2e 	blt.w	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025bf6:	f110 0b01 	adds.w	fp, r0, #1
90025bfa:	f53f af2a 	bmi.w	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025bfe:	45de      	cmp	lr, fp
90025c00:	f6ff af27 	blt.w	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025c04:	9302      	str	r3, [sp, #8]
90025c06:	fa0f f38e 	sxth.w	r3, lr
90025c0a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025c0c:	9301      	str	r3, [sp, #4]
90025c0e:	fa0f f38c 	sxth.w	r3, ip
90025c12:	e9cd 0203 	strd	r0, r2, [sp, #12]
90025c16:	e9cd 1505 	strd	r1, r5, [sp, #20]
90025c1a:	9300      	str	r3, [sp, #0]
90025c1c:	463a      	mov	r2, r7
90025c1e:	4653      	mov	r3, sl
90025c20:	4641      	mov	r1, r8
90025c22:	9815      	ldr	r0, [sp, #84]	; 0x54
90025c24:	f7ff fd4c 	bl	900256c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90025c28:	e713      	b.n	90025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025c2a:	1422      	asrs	r2, r4, #16
90025c2c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90025c2e:	1433      	asrs	r3, r6, #16
90025c30:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025c34:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025c38:	fb05 2303 	mla	r3, r5, r3, r2
90025c3c:	085a      	lsrs	r2, r3, #1
90025c3e:	07dd      	lsls	r5, r3, #31
90025c40:	5cba      	ldrb	r2, [r7, r2]
90025c42:	bf54      	ite	pl
90025c44:	f002 020f 	andpl.w	r2, r2, #15
90025c48:	1112      	asrmi	r2, r2, #4
90025c4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90025c4e:	b2d2      	uxtb	r2, r2
90025c50:	2900      	cmp	r1, #0
90025c52:	d077      	beq.n	90025d44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90025c54:	f103 0e01 	add.w	lr, r3, #1
90025c58:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90025c5c:	f01e 0f01 	tst.w	lr, #1
90025c60:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025c64:	bf0c      	ite	eq
90025c66:	f00c 0c0f 	andeq.w	ip, ip, #15
90025c6a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90025c6e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025c72:	fa5f f58c 	uxtb.w	r5, ip
90025c76:	9512      	str	r5, [sp, #72]	; 0x48
90025c78:	b308      	cbz	r0, 90025cbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025c7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025c7c:	442b      	add	r3, r5
90025c7e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025c82:	07dd      	lsls	r5, r3, #31
90025c84:	f103 0301 	add.w	r3, r3, #1
90025c88:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025c8c:	bf54      	ite	pl
90025c8e:	f00c 0c0f 	andpl.w	ip, ip, #15
90025c92:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025c96:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025c9a:	fa5f f58c 	uxtb.w	r5, ip
90025c9e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025ca2:	950c      	str	r5, [sp, #48]	; 0x30
90025ca4:	07dd      	lsls	r5, r3, #31
90025ca6:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025caa:	bf54      	ite	pl
90025cac:	f00c 0c0f 	andpl.w	ip, ip, #15
90025cb0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025cb4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025cb8:	fa5f f38c 	uxtb.w	r3, ip
90025cbc:	9313      	str	r3, [sp, #76]	; 0x4c
90025cbe:	b289      	uxth	r1, r1
90025cc0:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025cc2:	b280      	uxth	r0, r0
90025cc4:	fb01 f300 	mul.w	r3, r1, r0
90025cc8:	0109      	lsls	r1, r1, #4
90025cca:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90025cce:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90025cd2:	1ac9      	subs	r1, r1, r3
90025cd4:	b280      	uxth	r0, r0
90025cd6:	b289      	uxth	r1, r1
90025cd8:	ebac 0c00 	sub.w	ip, ip, r0
90025cdc:	4369      	muls	r1, r5
90025cde:	fa1f fc8c 	uxth.w	ip, ip
90025ce2:	fb02 120c 	mla	r2, r2, ip, r1
90025ce6:	990c      	ldr	r1, [sp, #48]	; 0x30
90025ce8:	fb00 2001 	mla	r0, r0, r1, r2
90025cec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90025cee:	fb03 0302 	mla	r3, r3, r2, r0
90025cf2:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025cf6:	b1d3      	cbz	r3, 90025d2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025cf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025cfa:	4353      	muls	r3, r2
90025cfc:	1c5a      	adds	r2, r3, #1
90025cfe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90025d02:	4a0f      	ldr	r2, [pc, #60]	; (90025d40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90025d04:	121b      	asrs	r3, r3, #8
90025d06:	6812      	ldr	r2, [r2, #0]
90025d08:	2bff      	cmp	r3, #255	; 0xff
90025d0a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90025d0e:	d12d      	bne.n	90025d6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90025d10:	0953      	lsrs	r3, r2, #5
90025d12:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90025d16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025d1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025d1e:	f02c 0c07 	bic.w	ip, ip, #7
90025d22:	ea43 0c0c 	orr.w	ip, r3, ip
90025d26:	ea4c 0202 	orr.w	r2, ip, r2
90025d2a:	f8a8 2000 	strh.w	r2, [r8]
90025d2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90025d30:	f108 0802 	add.w	r8, r8, #2
90025d34:	f10b 3bff 	add.w	fp, fp, #4294967295
90025d38:	441c      	add	r4, r3
90025d3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025d3c:	441e      	add	r6, r3
90025d3e:	e6b9      	b.n	90025ab4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90025d40:	24039714 	.word	0x24039714
90025d44:	2800      	cmp	r0, #0
90025d46:	d0ba      	beq.n	90025cbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025d48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025d4a:	442b      	add	r3, r5
90025d4c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90025d50:	07db      	lsls	r3, r3, #31
90025d52:	f817 c00c 	ldrb.w	ip, [r7, ip]
90025d56:	bf54      	ite	pl
90025d58:	f00c 0c0f 	andpl.w	ip, ip, #15
90025d5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025d60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025d64:	fa5f f38c 	uxtb.w	r3, ip
90025d68:	930c      	str	r3, [sp, #48]	; 0x30
90025d6a:	e7a8      	b.n	90025cbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90025d6c:	f8b8 e000 	ldrh.w	lr, [r8]
90025d70:	fa1f fa83 	uxth.w	sl, r3
90025d74:	f3c2 4107 	ubfx	r1, r2, #16, #8
90025d78:	43db      	mvns	r3, r3
90025d7a:	ea4f 202e 	mov.w	r0, lr, asr #8
90025d7e:	fb11 f10a 	smulbb	r1, r1, sl
90025d82:	b2db      	uxtb	r3, r3
90025d84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025d88:	b2d2      	uxtb	r2, r2
90025d8a:	fa5f fc8c 	uxtb.w	ip, ip
90025d8e:	fb00 1003 	mla	r0, r0, r3, r1
90025d92:	ea4f 01ee 	mov.w	r1, lr, asr #3
90025d96:	fb12 f20a 	smulbb	r2, r2, sl
90025d9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025d9e:	b280      	uxth	r0, r0
90025da0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025da4:	fb1c fc0a 	smulbb	ip, ip, sl
90025da8:	fa5f fe8e 	uxtb.w	lr, lr
90025dac:	fb0e 2203 	mla	r2, lr, r3, r2
90025db0:	fb01 cc03 	mla	ip, r1, r3, ip
90025db4:	1c43      	adds	r3, r0, #1
90025db6:	b292      	uxth	r2, r2
90025db8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025dbc:	1c51      	adds	r1, r2, #1
90025dbe:	fa1f fc8c 	uxth.w	ip, ip
90025dc2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90025dc6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90025dca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90025dce:	4308      	orrs	r0, r1
90025dd0:	f10c 0101 	add.w	r1, ip, #1
90025dd4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025dd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025ddc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025de0:	ea40 000c 	orr.w	r0, r0, ip
90025de4:	f8a8 0000 	strh.w	r0, [r8]
90025de8:	e7a1      	b.n	90025d2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90025dea:	b017      	add	sp, #92	; 0x5c
90025dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025df0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90025df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025df4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90025df8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90025dfc:	2d00      	cmp	r5, #0
90025dfe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90025e02:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025e06:	fb05 0e03 	mla	lr, r5, r3, r0
90025e0a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90025e0e:	f2c0 80b0 	blt.w	90025f72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025e12:	45a9      	cmp	r9, r5
90025e14:	f340 80ad 	ble.w	90025f72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90025e18:	2800      	cmp	r0, #0
90025e1a:	f2c0 80a8 	blt.w	90025f6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90025e1e:	4580      	cmp	r8, r0
90025e20:	f340 80a5 	ble.w	90025f6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90025e24:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025e28:	f01e 0f01 	tst.w	lr, #1
90025e2c:	5d16      	ldrb	r6, [r2, r4]
90025e2e:	bf0c      	ite	eq
90025e30:	f006 060f 	andeq.w	r6, r6, #15
90025e34:	1136      	asrne	r6, r6, #4
90025e36:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90025e3a:	b2f6      	uxtb	r6, r6
90025e3c:	1c44      	adds	r4, r0, #1
90025e3e:	f100 809b 	bmi.w	90025f78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90025e42:	45a0      	cmp	r8, r4
90025e44:	f340 8098 	ble.w	90025f78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90025e48:	2f00      	cmp	r7, #0
90025e4a:	f000 8097 	beq.w	90025f7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90025e4e:	f10e 0a01 	add.w	sl, lr, #1
90025e52:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025e56:	f01a 0f01 	tst.w	sl, #1
90025e5a:	5d14      	ldrb	r4, [r2, r4]
90025e5c:	bf0c      	ite	eq
90025e5e:	f004 040f 	andeq.w	r4, r4, #15
90025e62:	1124      	asrne	r4, r4, #4
90025e64:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025e68:	b2e4      	uxtb	r4, r4
90025e6a:	3501      	adds	r5, #1
90025e6c:	f100 808a 	bmi.w	90025f84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90025e70:	45a9      	cmp	r9, r5
90025e72:	f340 8087 	ble.w	90025f84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90025e76:	f1bc 0f00 	cmp.w	ip, #0
90025e7a:	f000 8086 	beq.w	90025f8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90025e7e:	2800      	cmp	r0, #0
90025e80:	db7e      	blt.n	90025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90025e82:	4580      	cmp	r8, r0
90025e84:	dd7c      	ble.n	90025f80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90025e86:	eb03 090e 	add.w	r9, r3, lr
90025e8a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025e8e:	f019 0f01 	tst.w	r9, #1
90025e92:	5d55      	ldrb	r5, [r2, r5]
90025e94:	bf0c      	ite	eq
90025e96:	f005 050f 	andeq.w	r5, r5, #15
90025e9a:	112d      	asrne	r5, r5, #4
90025e9c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025ea0:	b2ed      	uxtb	r5, r5
90025ea2:	3001      	adds	r0, #1
90025ea4:	d474      	bmi.n	90025f90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90025ea6:	4580      	cmp	r8, r0
90025ea8:	dd72      	ble.n	90025f90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90025eaa:	2f00      	cmp	r7, #0
90025eac:	d072      	beq.n	90025f94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90025eae:	3301      	adds	r3, #1
90025eb0:	449e      	add	lr, r3
90025eb2:	ea4f 035e 	mov.w	r3, lr, lsr #1
90025eb6:	f01e 0f01 	tst.w	lr, #1
90025eba:	5cd0      	ldrb	r0, [r2, r3]
90025ebc:	bf0c      	ite	eq
90025ebe:	f000 000f 	andeq.w	r0, r0, #15
90025ec2:	1100      	asrne	r0, r0, #4
90025ec4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025ec8:	b2c3      	uxtb	r3, r0
90025eca:	b2ba      	uxth	r2, r7
90025ecc:	fa1f fc8c 	uxth.w	ip, ip
90025ed0:	fb02 f00c 	mul.w	r0, r2, ip
90025ed4:	0112      	lsls	r2, r2, #4
90025ed6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90025eda:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90025ede:	1a12      	subs	r2, r2, r0
90025ee0:	fa1f fc8c 	uxth.w	ip, ip
90025ee4:	b292      	uxth	r2, r2
90025ee6:	eba7 070c 	sub.w	r7, r7, ip
90025eea:	4362      	muls	r2, r4
90025eec:	b2bf      	uxth	r7, r7
90025eee:	fb06 2207 	mla	r2, r6, r7, r2
90025ef2:	fb0c 2505 	mla	r5, ip, r5, r2
90025ef6:	fb00 5303 	mla	r3, r0, r3, r5
90025efa:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025efe:	b3a3      	cbz	r3, 90025f6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90025f00:	4a25      	ldr	r2, [pc, #148]	; (90025f98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90025f02:	880e      	ldrh	r6, [r1, #0]
90025f04:	6815      	ldr	r5, [r2, #0]
90025f06:	b29a      	uxth	r2, r3
90025f08:	1234      	asrs	r4, r6, #8
90025f0a:	43db      	mvns	r3, r3
90025f0c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90025f10:	f3c5 2707 	ubfx	r7, r5, #8, #8
90025f14:	b2db      	uxtb	r3, r3
90025f16:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025f1a:	fb10 f002 	smulbb	r0, r0, r2
90025f1e:	b2ed      	uxtb	r5, r5
90025f20:	fb17 f702 	smulbb	r7, r7, r2
90025f24:	fb04 0403 	mla	r4, r4, r3, r0
90025f28:	10f0      	asrs	r0, r6, #3
90025f2a:	fb15 f202 	smulbb	r2, r5, r2
90025f2e:	00f6      	lsls	r6, r6, #3
90025f30:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025f34:	b2a4      	uxth	r4, r4
90025f36:	b2f6      	uxtb	r6, r6
90025f38:	fb00 7003 	mla	r0, r0, r3, r7
90025f3c:	fb06 2303 	mla	r3, r6, r3, r2
90025f40:	b280      	uxth	r0, r0
90025f42:	b29a      	uxth	r2, r3
90025f44:	1c63      	adds	r3, r4, #1
90025f46:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025f4a:	1c53      	adds	r3, r2, #1
90025f4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025f50:	1c42      	adds	r2, r0, #1
90025f52:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025f56:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025f5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025f5e:	0940      	lsrs	r0, r0, #5
90025f60:	4323      	orrs	r3, r4
90025f62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025f66:	4303      	orrs	r3, r0
90025f68:	800b      	strh	r3, [r1, #0]
90025f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025f6e:	2600      	movs	r6, #0
90025f70:	e764      	b.n	90025e3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90025f72:	2400      	movs	r4, #0
90025f74:	4626      	mov	r6, r4
90025f76:	e778      	b.n	90025e6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025f78:	2400      	movs	r4, #0
90025f7a:	e776      	b.n	90025e6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025f7c:	463c      	mov	r4, r7
90025f7e:	e774      	b.n	90025e6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90025f80:	2500      	movs	r5, #0
90025f82:	e78e      	b.n	90025ea2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90025f84:	2300      	movs	r3, #0
90025f86:	461d      	mov	r5, r3
90025f88:	e79f      	b.n	90025eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025f8a:	4663      	mov	r3, ip
90025f8c:	4665      	mov	r5, ip
90025f8e:	e79c      	b.n	90025eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025f90:	2300      	movs	r3, #0
90025f92:	e79a      	b.n	90025eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025f94:	463b      	mov	r3, r7
90025f96:	e798      	b.n	90025eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90025f98:	24039714 	.word	0x24039714

90025f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025fa0:	b093      	sub	sp, #76	; 0x4c
90025fa2:	461d      	mov	r5, r3
90025fa4:	920c      	str	r2, [sp, #48]	; 0x30
90025fa6:	9a21      	ldr	r2, [sp, #132]	; 0x84
90025fa8:	9011      	str	r0, [sp, #68]	; 0x44
90025faa:	9107      	str	r1, [sp, #28]
90025fac:	6850      	ldr	r0, [r2, #4]
90025fae:	6812      	ldr	r2, [r2, #0]
90025fb0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90025fb4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90025fb8:	fb00 1303 	mla	r3, r0, r3, r1
90025fbc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025fc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025fc2:	689b      	ldr	r3, [r3, #8]
90025fc4:	3301      	adds	r3, #1
90025fc6:	f023 0301 	bic.w	r3, r3, #1
90025fca:	9306      	str	r3, [sp, #24]
90025fcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025fce:	681f      	ldr	r7, [r3, #0]
90025fd0:	9b07      	ldr	r3, [sp, #28]
90025fd2:	2b00      	cmp	r3, #0
90025fd4:	dc03      	bgt.n	90025fde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90025fd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90025fd8:	2b00      	cmp	r3, #0
90025fda:	f340 8267 	ble.w	900264ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90025fde:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025fe0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025fe4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025fe8:	1e48      	subs	r0, r1, #1
90025fea:	f102 3cff 	add.w	ip, r2, #4294967295
90025fee:	2d00      	cmp	r5, #0
90025ff0:	f340 80b7 	ble.w	90026162 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90025ff4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025ff8:	ea4f 4326 	mov.w	r3, r6, asr #16
90025ffc:	d406      	bmi.n	9002600c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90025ffe:	4586      	cmp	lr, r0
90026000:	da04      	bge.n	9002600c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026002:	2b00      	cmp	r3, #0
90026004:	db02      	blt.n	9002600c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026006:	4563      	cmp	r3, ip
90026008:	f2c0 80ac 	blt.w	90026164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002600c:	f11e 0e01 	adds.w	lr, lr, #1
90026010:	f100 809f 	bmi.w	90026152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026014:	4571      	cmp	r1, lr
90026016:	f2c0 809c 	blt.w	90026152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002601a:	3301      	adds	r3, #1
9002601c:	f100 8099 	bmi.w	90026152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026020:	429a      	cmp	r2, r3
90026022:	f2c0 8096 	blt.w	90026152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026026:	46c8      	mov	r8, r9
90026028:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9002602c:	9509      	str	r5, [sp, #36]	; 0x24
9002602e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026030:	2b00      	cmp	r3, #0
90026032:	f340 80b5 	ble.w	900261a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90026036:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002603a:	1430      	asrs	r0, r6, #16
9002603c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026040:	9308      	str	r3, [sp, #32]
90026042:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026044:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026048:	1423      	asrs	r3, r4, #16
9002604a:	f100 813f 	bmi.w	900262cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002604e:	f10c 3bff 	add.w	fp, ip, #4294967295
90026052:	455b      	cmp	r3, fp
90026054:	f280 813a 	bge.w	900262cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026058:	2800      	cmp	r0, #0
9002605a:	f2c0 8137 	blt.w	900262cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002605e:	f10e 3bff 	add.w	fp, lr, #4294967295
90026062:	4558      	cmp	r0, fp
90026064:	f280 8132 	bge.w	900262cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026068:	9a06      	ldr	r2, [sp, #24]
9002606a:	fb00 3302 	mla	r3, r0, r2, r3
9002606e:	0858      	lsrs	r0, r3, #1
90026070:	07da      	lsls	r2, r3, #31
90026072:	9a08      	ldr	r2, [sp, #32]
90026074:	f817 c000 	ldrb.w	ip, [r7, r0]
90026078:	bf54      	ite	pl
9002607a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002607e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026082:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026086:	fa5f fc8c 	uxtb.w	ip, ip
9002608a:	2a00      	cmp	r2, #0
9002608c:	f000 80cc 	beq.w	90026228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026090:	1c58      	adds	r0, r3, #1
90026092:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026096:	07c0      	lsls	r0, r0, #31
90026098:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002609c:	bf54      	ite	pl
9002609e:	f00e 0e0f 	andpl.w	lr, lr, #15
900260a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900260a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900260aa:	fa5f fe8e 	uxtb.w	lr, lr
900260ae:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
900260b2:	b1b9      	cbz	r1, 900260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900260b4:	4453      	add	r3, sl
900260b6:	0858      	lsrs	r0, r3, #1
900260b8:	07da      	lsls	r2, r3, #31
900260ba:	5c38      	ldrb	r0, [r7, r0]
900260bc:	bf54      	ite	pl
900260be:	f000 000f 	andpl.w	r0, r0, #15
900260c2:	1100      	asrmi	r0, r0, #4
900260c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900260c8:	b2c0      	uxtb	r0, r0
900260ca:	900a      	str	r0, [sp, #40]	; 0x28
900260cc:	1c58      	adds	r0, r3, #1
900260ce:	0843      	lsrs	r3, r0, #1
900260d0:	07c2      	lsls	r2, r0, #31
900260d2:	5cfb      	ldrb	r3, [r7, r3]
900260d4:	bf54      	ite	pl
900260d6:	f003 030f 	andpl.w	r3, r3, #15
900260da:	111b      	asrmi	r3, r3, #4
900260dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900260e0:	b2db      	uxtb	r3, r3
900260e2:	930e      	str	r3, [sp, #56]	; 0x38
900260e4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900260e8:	b289      	uxth	r1, r1
900260ea:	fb02 f301 	mul.w	r3, r2, r1
900260ee:	0112      	lsls	r2, r2, #4
900260f0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900260f4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900260f8:	1ad2      	subs	r2, r2, r3
900260fa:	b289      	uxth	r1, r1
900260fc:	b292      	uxth	r2, r2
900260fe:	1a40      	subs	r0, r0, r1
90026100:	fa1f fe80 	uxth.w	lr, r0
90026104:	980d      	ldr	r0, [sp, #52]	; 0x34
90026106:	4342      	muls	r2, r0
90026108:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002610c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002610e:	fb01 c102 	mla	r1, r1, r2, ip
90026112:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90026114:	fb03 1302 	mla	r3, r3, r2, r1
90026118:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002611c:	2bff      	cmp	r3, #255	; 0xff
9002611e:	f040 8094 	bne.w	9002624a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90026122:	4bbf      	ldr	r3, [pc, #764]	; (90026420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026124:	681a      	ldr	r2, [r3, #0]
90026126:	4bbf      	ldr	r3, [pc, #764]	; (90026424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026128:	0951      	lsrs	r1, r2, #5
9002612a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002612e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026132:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026136:	430b      	orrs	r3, r1
90026138:	4313      	orrs	r3, r2
9002613a:	f8a8 3000 	strh.w	r3, [r8]
9002613e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026140:	f108 0802 	add.w	r8, r8, #2
90026144:	441c      	add	r4, r3
90026146:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026148:	441e      	add	r6, r3
9002614a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002614c:	3b01      	subs	r3, #1
9002614e:	9309      	str	r3, [sp, #36]	; 0x24
90026150:	e76d      	b.n	9002602e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026152:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026154:	3d01      	subs	r5, #1
90026156:	f109 0902 	add.w	r9, r9, #2
9002615a:	441c      	add	r4, r3
9002615c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002615e:	441e      	add	r6, r3
90026160:	e745      	b.n	90025fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90026162:	d021      	beq.n	900261a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90026164:	1e6b      	subs	r3, r5, #1
90026166:	981f      	ldr	r0, [sp, #124]	; 0x7c
90026168:	fb00 4003 	mla	r0, r0, r3, r4
9002616c:	1400      	asrs	r0, r0, #16
9002616e:	f53f af5a 	bmi.w	90026026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026172:	3901      	subs	r1, #1
90026174:	4288      	cmp	r0, r1
90026176:	f6bf af56 	bge.w	90026026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002617a:	9920      	ldr	r1, [sp, #128]	; 0x80
9002617c:	fb01 6303 	mla	r3, r1, r3, r6
90026180:	141b      	asrs	r3, r3, #16
90026182:	f53f af50 	bmi.w	90026026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026186:	3a01      	subs	r2, #1
90026188:	4293      	cmp	r3, r2
9002618a:	f6bf af4c 	bge.w	90026026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002618e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90026192:	46a8      	mov	r8, r5
90026194:	46ce      	mov	lr, r9
90026196:	9308      	str	r3, [sp, #32]
90026198:	f1b8 0f00 	cmp.w	r8, #0
9002619c:	f300 80b6 	bgt.w	9002630c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900261a0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900261a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900261a8:	9b07      	ldr	r3, [sp, #28]
900261aa:	2b00      	cmp	r3, #0
900261ac:	f340 817e 	ble.w	900264ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900261b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900261b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900261b6:	ee30 0a04 	vadd.f32	s0, s0, s8
900261ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
900261be:	eef0 6a62 	vmov.f32	s13, s5
900261c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900261c6:	ee31 1a05 	vadd.f32	s2, s2, s10
900261ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900261ce:	ee16 4a90 	vmov	r4, s13
900261d2:	eef0 6a43 	vmov.f32	s13, s6
900261d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900261da:	ee16 6a90 	vmov	r6, s13
900261de:	ee20 7aa7 	vmul.f32	s14, s1, s15
900261e2:	ee61 7a27 	vmul.f32	s15, s2, s15
900261e6:	ee77 2a62 	vsub.f32	s5, s14, s5
900261ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
900261ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900261f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900261f6:	ee12 2a90 	vmov	r2, s5
900261fa:	eef0 2a47 	vmov.f32	s5, s14
900261fe:	fb92 f3f3 	sdiv	r3, r2, r3
90026202:	ee13 2a10 	vmov	r2, s6
90026206:	931f      	str	r3, [sp, #124]	; 0x7c
90026208:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002620a:	eeb0 3a67 	vmov.f32	s6, s15
9002620e:	fb92 f3f3 	sdiv	r3, r2, r3
90026212:	9320      	str	r3, [sp, #128]	; 0x80
90026214:	9b07      	ldr	r3, [sp, #28]
90026216:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026218:	3b01      	subs	r3, #1
9002621a:	9307      	str	r3, [sp, #28]
9002621c:	bf08      	it	eq
9002621e:	4615      	moveq	r5, r2
90026220:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026222:	bf18      	it	ne
90026224:	461d      	movne	r5, r3
90026226:	e6d3      	b.n	90025fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90026228:	2900      	cmp	r1, #0
9002622a:	f43f af5b 	beq.w	900260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002622e:	eb0a 0003 	add.w	r0, sl, r3
90026232:	0843      	lsrs	r3, r0, #1
90026234:	07c0      	lsls	r0, r0, #31
90026236:	5cfb      	ldrb	r3, [r7, r3]
90026238:	bf54      	ite	pl
9002623a:	f003 030f 	andpl.w	r3, r3, #15
9002623e:	111b      	asrmi	r3, r3, #4
90026240:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026244:	b2db      	uxtb	r3, r3
90026246:	930a      	str	r3, [sp, #40]	; 0x28
90026248:	e74c      	b.n	900260e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002624a:	2b00      	cmp	r3, #0
9002624c:	f43f af77 	beq.w	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026250:	4a73      	ldr	r2, [pc, #460]	; (90026420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026252:	fa1f fe83 	uxth.w	lr, r3
90026256:	f8b8 c000 	ldrh.w	ip, [r8]
9002625a:	43db      	mvns	r3, r3
9002625c:	6810      	ldr	r0, [r2, #0]
9002625e:	ea4f 212c 	mov.w	r1, ip, asr #8
90026262:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026266:	b2db      	uxtb	r3, r3
90026268:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002626c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026270:	fb12 f20e 	smulbb	r2, r2, lr
90026274:	b2c0      	uxtb	r0, r0
90026276:	fb1b fb0e 	smulbb	fp, fp, lr
9002627a:	fb01 2103 	mla	r1, r1, r3, r2
9002627e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026282:	fb10 fe0e 	smulbb	lr, r0, lr
90026286:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002628a:	b289      	uxth	r1, r1
9002628c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026290:	fa5f fc8c 	uxtb.w	ip, ip
90026294:	fb02 b203 	mla	r2, r2, r3, fp
90026298:	1c48      	adds	r0, r1, #1
9002629a:	fb0c e303 	mla	r3, ip, r3, lr
9002629e:	b292      	uxth	r2, r2
900262a0:	b29b      	uxth	r3, r3
900262a2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900262a6:	f102 0b01 	add.w	fp, r2, #1
900262aa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
900262ae:	1c59      	adds	r1, r3, #1
900262b0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900262b4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900262b8:	0952      	lsrs	r2, r2, #5
900262ba:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900262be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900262c2:	4301      	orrs	r1, r0
900262c4:	4311      	orrs	r1, r2
900262c6:	f8a8 1000 	strh.w	r1, [r8]
900262ca:	e738      	b.n	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900262cc:	f113 0b01 	adds.w	fp, r3, #1
900262d0:	f53f af35 	bmi.w	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900262d4:	45dc      	cmp	ip, fp
900262d6:	f6ff af32 	blt.w	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900262da:	f110 0b01 	adds.w	fp, r0, #1
900262de:	f53f af2e 	bmi.w	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900262e2:	45de      	cmp	lr, fp
900262e4:	f6ff af2b 	blt.w	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900262e8:	9302      	str	r3, [sp, #8]
900262ea:	fa0f f38e 	sxth.w	r3, lr
900262ee:	9a08      	ldr	r2, [sp, #32]
900262f0:	9301      	str	r3, [sp, #4]
900262f2:	fa0f f38c 	sxth.w	r3, ip
900262f6:	9105      	str	r1, [sp, #20]
900262f8:	4641      	mov	r1, r8
900262fa:	9300      	str	r3, [sp, #0]
900262fc:	4653      	mov	r3, sl
900262fe:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026302:	463a      	mov	r2, r7
90026304:	9811      	ldr	r0, [sp, #68]	; 0x44
90026306:	f7ff fd73 	bl	90025df0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002630a:	e718      	b.n	9002613e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002630c:	1422      	asrs	r2, r4, #16
9002630e:	9906      	ldr	r1, [sp, #24]
90026310:	1433      	asrs	r3, r6, #16
90026312:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026316:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002631a:	fb01 2303 	mla	r3, r1, r3, r2
9002631e:	085a      	lsrs	r2, r3, #1
90026320:	07d9      	lsls	r1, r3, #31
90026322:	5cba      	ldrb	r2, [r7, r2]
90026324:	bf54      	ite	pl
90026326:	f002 020f 	andpl.w	r2, r2, #15
9002632a:	1112      	asrmi	r2, r2, #4
9002632c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90026330:	b2d2      	uxtb	r2, r2
90026332:	2800      	cmp	r0, #0
90026334:	d063      	beq.n	900263fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90026336:	f103 0a01 	add.w	sl, r3, #1
9002633a:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002633e:	f01a 0f01 	tst.w	sl, #1
90026342:	5c79      	ldrb	r1, [r7, r1]
90026344:	bf0c      	ite	eq
90026346:	f001 010f 	andeq.w	r1, r1, #15
9002634a:	1109      	asrne	r1, r1, #4
9002634c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026350:	b2c9      	uxtb	r1, r1
90026352:	910f      	str	r1, [sp, #60]	; 0x3c
90026354:	f1bc 0f00 	cmp.w	ip, #0
90026358:	d01a      	beq.n	90026390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002635a:	9908      	ldr	r1, [sp, #32]
9002635c:	440b      	add	r3, r1
9002635e:	0859      	lsrs	r1, r3, #1
90026360:	f013 0f01 	tst.w	r3, #1
90026364:	f103 0301 	add.w	r3, r3, #1
90026368:	5c79      	ldrb	r1, [r7, r1]
9002636a:	bf0c      	ite	eq
9002636c:	f001 010f 	andeq.w	r1, r1, #15
90026370:	1109      	asrne	r1, r1, #4
90026372:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026376:	b2c9      	uxtb	r1, r1
90026378:	910b      	str	r1, [sp, #44]	; 0x2c
9002637a:	0859      	lsrs	r1, r3, #1
9002637c:	07db      	lsls	r3, r3, #31
9002637e:	5c79      	ldrb	r1, [r7, r1]
90026380:	bf54      	ite	pl
90026382:	f001 010f 	andpl.w	r1, r1, #15
90026386:	1109      	asrmi	r1, r1, #4
90026388:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002638c:	b2c9      	uxtb	r1, r1
9002638e:	9110      	str	r1, [sp, #64]	; 0x40
90026390:	b280      	uxth	r0, r0
90026392:	fa1f fc8c 	uxth.w	ip, ip
90026396:	fb00 f30c 	mul.w	r3, r0, ip
9002639a:	0100      	lsls	r0, r0, #4
9002639c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900263a0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
900263a4:	1ac0      	subs	r0, r0, r3
900263a6:	fa1f fc8c 	uxth.w	ip, ip
900263aa:	b280      	uxth	r0, r0
900263ac:	eba1 010c 	sub.w	r1, r1, ip
900263b0:	fa1f fa81 	uxth.w	sl, r1
900263b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
900263b6:	4348      	muls	r0, r1
900263b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
900263ba:	fb02 020a 	mla	r2, r2, sl, r0
900263be:	fb0c 2c01 	mla	ip, ip, r1, r2
900263c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900263c4:	fb03 c302 	mla	r3, r3, r2, ip
900263c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900263cc:	2bff      	cmp	r3, #255	; 0xff
900263ce:	d12b      	bne.n	90026428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900263d0:	4b13      	ldr	r3, [pc, #76]	; (90026420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900263d2:	681a      	ldr	r2, [r3, #0]
900263d4:	4b13      	ldr	r3, [pc, #76]	; (90026424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900263d6:	0951      	lsrs	r1, r2, #5
900263d8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900263dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900263e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900263e4:	430b      	orrs	r3, r1
900263e6:	4313      	orrs	r3, r2
900263e8:	f8ae 3000 	strh.w	r3, [lr]
900263ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900263ee:	f10e 0e02 	add.w	lr, lr, #2
900263f2:	f108 38ff 	add.w	r8, r8, #4294967295
900263f6:	441c      	add	r4, r3
900263f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900263fa:	441e      	add	r6, r3
900263fc:	e6cc      	b.n	90026198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900263fe:	f1bc 0f00 	cmp.w	ip, #0
90026402:	d0c5      	beq.n	90026390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026404:	9908      	ldr	r1, [sp, #32]
90026406:	440b      	add	r3, r1
90026408:	0859      	lsrs	r1, r3, #1
9002640a:	07db      	lsls	r3, r3, #31
9002640c:	5c79      	ldrb	r1, [r7, r1]
9002640e:	bf54      	ite	pl
90026410:	f001 010f 	andpl.w	r1, r1, #15
90026414:	1109      	asrmi	r1, r1, #4
90026416:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002641a:	b2c9      	uxtb	r1, r1
9002641c:	910b      	str	r1, [sp, #44]	; 0x2c
9002641e:	e7b7      	b.n	90026390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026420:	24039714 	.word	0x24039714
90026424:	fffff800 	.word	0xfffff800
90026428:	2b00      	cmp	r3, #0
9002642a:	d0df      	beq.n	900263ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002642c:	4a21      	ldr	r2, [pc, #132]	; (900264b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002642e:	fa1f fa83 	uxth.w	sl, r3
90026432:	f8be c000 	ldrh.w	ip, [lr]
90026436:	43db      	mvns	r3, r3
90026438:	6810      	ldr	r0, [r2, #0]
9002643a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002643e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026442:	b2db      	uxtb	r3, r3
90026444:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026448:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002644c:	fb12 f20a 	smulbb	r2, r2, sl
90026450:	b2c0      	uxtb	r0, r0
90026452:	fb1b fb0a 	smulbb	fp, fp, sl
90026456:	fb01 2103 	mla	r1, r1, r3, r2
9002645a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002645e:	fb10 f00a 	smulbb	r0, r0, sl
90026462:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026466:	b289      	uxth	r1, r1
90026468:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002646c:	fa5f fc8c 	uxtb.w	ip, ip
90026470:	fb02 b203 	mla	r2, r2, r3, fp
90026474:	fb0c 0003 	mla	r0, ip, r3, r0
90026478:	1c4b      	adds	r3, r1, #1
9002647a:	b292      	uxth	r2, r2
9002647c:	b280      	uxth	r0, r0
9002647e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026482:	f100 0b01 	add.w	fp, r0, #1
90026486:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002648a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002648e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026492:	ea4b 0101 	orr.w	r1, fp, r1
90026496:	f102 0b01 	add.w	fp, r2, #1
9002649a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002649e:	0952      	lsrs	r2, r2, #5
900264a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900264a4:	4311      	orrs	r1, r2
900264a6:	f8ae 1000 	strh.w	r1, [lr]
900264aa:	e79f      	b.n	900263ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900264ac:	b013      	add	sp, #76	; 0x4c
900264ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900264b2:	bf00      	nop
900264b4:	24039714 	.word	0x24039714

900264b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900264b8:	b570      	push	{r4, r5, r6, lr}
900264ba:	1208      	asrs	r0, r1, #8
900264bc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
900264c0:	b29e      	uxth	r6, r3
900264c2:	1213      	asrs	r3, r2, #8
900264c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900264c8:	10cc      	asrs	r4, r1, #3
900264ca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900264ce:	00c9      	lsls	r1, r1, #3
900264d0:	fb10 f006 	smulbb	r0, r0, r6
900264d4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
900264d8:	fb13 f305 	smulbb	r3, r3, r5
900264dc:	fb14 f406 	smulbb	r4, r4, r6
900264e0:	4418      	add	r0, r3
900264e2:	10d3      	asrs	r3, r2, #3
900264e4:	00d2      	lsls	r2, r2, #3
900264e6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900264ea:	b280      	uxth	r0, r0
900264ec:	b2d2      	uxtb	r2, r2
900264ee:	fb13 f305 	smulbb	r3, r3, r5
900264f2:	fb12 f205 	smulbb	r2, r2, r5
900264f6:	441c      	add	r4, r3
900264f8:	b2cb      	uxtb	r3, r1
900264fa:	fb13 f306 	smulbb	r3, r3, r6
900264fe:	b2a4      	uxth	r4, r4
90026500:	4413      	add	r3, r2
90026502:	1c42      	adds	r2, r0, #1
90026504:	b29b      	uxth	r3, r3
90026506:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002650a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
9002650e:	1c58      	adds	r0, r3, #1
90026510:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026514:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026518:	4310      	orrs	r0, r2
9002651a:	1c62      	adds	r2, r4, #1
9002651c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026520:	0964      	lsrs	r4, r4, #5
90026522:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026526:	4320      	orrs	r0, r4
90026528:	bd70      	pop	{r4, r5, r6, pc}
	...

9002652c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9002652c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026530:	b08f      	sub	sp, #60	; 0x3c
90026532:	461c      	mov	r4, r3
90026534:	460d      	mov	r5, r1
90026536:	4616      	mov	r6, r2
90026538:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
9002653c:	9004      	str	r0, [sp, #16]
9002653e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026540:	2f00      	cmp	r7, #0
90026542:	f000 80f6 	beq.w	90026732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90026546:	6820      	ldr	r0, [r4, #0]
90026548:	aa0a      	add	r2, sp, #40	; 0x28
9002654a:	6861      	ldr	r1, [r4, #4]
9002654c:	f04f 0802 	mov.w	r8, #2
90026550:	3604      	adds	r6, #4
90026552:	c203      	stmia	r2!, {r0, r1}
90026554:	6818      	ldr	r0, [r3, #0]
90026556:	aa0c      	add	r2, sp, #48	; 0x30
90026558:	6859      	ldr	r1, [r3, #4]
9002655a:	c203      	stmia	r2!, {r0, r1}
9002655c:	a80a      	add	r0, sp, #40	; 0x28
9002655e:	f7ef fceb 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026562:	4621      	mov	r1, r4
90026564:	a80c      	add	r0, sp, #48	; 0x30
90026566:	f7ef fd2b 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002656a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9002656e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90026572:	f002 0301 	and.w	r3, r2, #1
90026576:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9002657a:	9306      	str	r3, [sp, #24]
9002657c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026580:	f003 0101 	and.w	r1, r3, #1
90026584:	9105      	str	r1, [sp, #20]
90026586:	9805      	ldr	r0, [sp, #20]
90026588:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9002658c:	4403      	add	r3, r0
9002658e:	fb01 2303 	mla	r3, r1, r3, r2
90026592:	fb93 f3f8 	sdiv	r3, r3, r8
90026596:	441d      	add	r5, r3
90026598:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9002659c:	441a      	add	r2, r3
9002659e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900265a2:	4419      	add	r1, r3
900265a4:	4b64      	ldr	r3, [pc, #400]	; (90026738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900265a6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900265aa:	6818      	ldr	r0, [r3, #0]
900265ac:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900265b0:	6803      	ldr	r3, [r0, #0]
900265b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900265b4:	4798      	blx	r3
900265b6:	4a61      	ldr	r2, [pc, #388]	; (9002673c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900265b8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
900265bc:	2fff      	cmp	r7, #255	; 0xff
900265be:	8813      	ldrh	r3, [r2, #0]
900265c0:	4611      	mov	r1, r2
900265c2:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
900265c6:	fb03 fb0b 	mul.w	fp, r3, fp
900265ca:	fb03 a404 	mla	r4, r3, r4, sl
900265ce:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900265d2:	d06b      	beq.n	900266ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
900265d4:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
900265d8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900265dc:	9303      	str	r3, [sp, #12]
900265de:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900265e2:	e9cd 3207 	strd	r3, r2, [sp, #28]
900265e6:	9b07      	ldr	r3, [sp, #28]
900265e8:	42a3      	cmp	r3, r4
900265ea:	f240 809d 	bls.w	90026728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900265ee:	9b06      	ldr	r3, [sp, #24]
900265f0:	2b00      	cmp	r3, #0
900265f2:	d039      	beq.n	90026668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
900265f4:	782b      	ldrb	r3, [r5, #0]
900265f6:	f105 0801 	add.w	r8, r5, #1
900265fa:	f109 3bff 	add.w	fp, r9, #4294967295
900265fe:	8822      	ldrh	r2, [r4, #0]
90026600:	f003 030f 	and.w	r3, r3, #15
90026604:	9804      	ldr	r0, [sp, #16]
90026606:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002660a:	9b03      	ldr	r3, [sp, #12]
9002660c:	9300      	str	r3, [sp, #0]
9002660e:	463b      	mov	r3, r7
90026610:	f7ff ff52 	bl	900264b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026614:	f824 0b02 	strh.w	r0, [r4], #2
90026618:	f1bb 0f01 	cmp.w	fp, #1
9002661c:	46a2      	mov	sl, r4
9002661e:	f104 0404 	add.w	r4, r4, #4
90026622:	dd24      	ble.n	9002666e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90026624:	f898 3000 	ldrb.w	r3, [r8]
90026628:	f1ab 0b02 	sub.w	fp, fp, #2
9002662c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026630:	091b      	lsrs	r3, r3, #4
90026632:	9804      	ldr	r0, [sp, #16]
90026634:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026638:	9b03      	ldr	r3, [sp, #12]
9002663a:	9300      	str	r3, [sp, #0]
9002663c:	463b      	mov	r3, r7
9002663e:	f7ff ff3b 	bl	900264b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026642:	f824 0c04 	strh.w	r0, [r4, #-4]
90026646:	f818 3b01 	ldrb.w	r3, [r8], #1
9002664a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002664e:	f003 030f 	and.w	r3, r3, #15
90026652:	9804      	ldr	r0, [sp, #16]
90026654:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026658:	9b03      	ldr	r3, [sp, #12]
9002665a:	9300      	str	r3, [sp, #0]
9002665c:	463b      	mov	r3, r7
9002665e:	f7ff ff2b 	bl	900264b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026662:	f824 0c02 	strh.w	r0, [r4, #-2]
90026666:	e7d7      	b.n	90026618 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026668:	46a8      	mov	r8, r5
9002666a:	46cb      	mov	fp, r9
9002666c:	e7d4      	b.n	90026618 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002666e:	d10e      	bne.n	9002668e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90026670:	f898 3000 	ldrb.w	r3, [r8]
90026674:	f8ba 2000 	ldrh.w	r2, [sl]
90026678:	091b      	lsrs	r3, r3, #4
9002667a:	9804      	ldr	r0, [sp, #16]
9002667c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026680:	9b03      	ldr	r3, [sp, #12]
90026682:	9300      	str	r3, [sp, #0]
90026684:	463b      	mov	r3, r7
90026686:	f7ff ff17 	bl	900264b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002668a:	f82a 0b02 	strh.w	r0, [sl], #2
9002668e:	9b08      	ldr	r3, [sp, #32]
90026690:	9a05      	ldr	r2, [sp, #20]
90026692:	881c      	ldrh	r4, [r3, #0]
90026694:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026698:	eba4 0409 	sub.w	r4, r4, r9
9002669c:	4413      	add	r3, r2
9002669e:	9a09      	ldr	r2, [sp, #36]	; 0x24
900266a0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900266a4:	fb93 f3f2 	sdiv	r3, r3, r2
900266a8:	441d      	add	r5, r3
900266aa:	e79c      	b.n	900265e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900266ac:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900266b0:	45a3      	cmp	fp, r4
900266b2:	d939      	bls.n	90026728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900266b4:	9b06      	ldr	r3, [sp, #24]
900266b6:	b1fb      	cbz	r3, 900266f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900266b8:	782b      	ldrb	r3, [r5, #0]
900266ba:	1c6a      	adds	r2, r5, #1
900266bc:	f109 30ff 	add.w	r0, r9, #4294967295
900266c0:	3402      	adds	r4, #2
900266c2:	f003 030f 	and.w	r3, r3, #15
900266c6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900266ca:	f824 3c02 	strh.w	r3, [r4, #-2]
900266ce:	2801      	cmp	r0, #1
900266d0:	4623      	mov	r3, r4
900266d2:	f104 0404 	add.w	r4, r4, #4
900266d6:	dd12      	ble.n	900266fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
900266d8:	7813      	ldrb	r3, [r2, #0]
900266da:	3802      	subs	r0, #2
900266dc:	091b      	lsrs	r3, r3, #4
900266de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900266e2:	f824 3c04 	strh.w	r3, [r4, #-4]
900266e6:	f812 3b01 	ldrb.w	r3, [r2], #1
900266ea:	f003 030f 	and.w	r3, r3, #15
900266ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900266f2:	f824 3c02 	strh.w	r3, [r4, #-2]
900266f6:	e7ea      	b.n	900266ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900266f8:	462a      	mov	r2, r5
900266fa:	4648      	mov	r0, r9
900266fc:	e7e7      	b.n	900266ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900266fe:	d106      	bne.n	9002670e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90026700:	7812      	ldrb	r2, [r2, #0]
90026702:	3302      	adds	r3, #2
90026704:	0912      	lsrs	r2, r2, #4
90026706:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002670a:	f823 2c02 	strh.w	r2, [r3, #-2]
9002670e:	880c      	ldrh	r4, [r1, #0]
90026710:	9a05      	ldr	r2, [sp, #20]
90026712:	eba4 0409 	sub.w	r4, r4, r9
90026716:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002671a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
9002671e:	4413      	add	r3, r2
90026720:	fb93 f3f8 	sdiv	r3, r3, r8
90026724:	441d      	add	r5, r3
90026726:	e7c3      	b.n	900266b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90026728:	4b03      	ldr	r3, [pc, #12]	; (90026738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002672a:	6818      	ldr	r0, [r3, #0]
9002672c:	6803      	ldr	r3, [r0, #0]
9002672e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026730:	4798      	blx	r3
90026732:	b00f      	add	sp, #60	; 0x3c
90026734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026738:	24039704 	.word	0x24039704
9002673c:	240396fe 	.word	0x240396fe

90026740 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90026740:	b5f0      	push	{r4, r5, r6, r7, lr}
90026742:	f89d 5014 	ldrb.w	r5, [sp, #20]
90026746:	0a0f      	lsrs	r7, r1, #8
90026748:	2dff      	cmp	r5, #255	; 0xff
9002674a:	d10c      	bne.n	90026766 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002674c:	2bff      	cmp	r3, #255	; 0xff
9002674e:	d10a      	bne.n	90026766 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026750:	0948      	lsrs	r0, r1, #5
90026752:	4b25      	ldr	r3, [pc, #148]	; (900267e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90026754:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026758:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002675c:	403b      	ands	r3, r7
9002675e:	4318      	orrs	r0, r3
90026760:	4308      	orrs	r0, r1
90026762:	b280      	uxth	r0, r0
90026764:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026766:	fb15 f503 	smulbb	r5, r5, r3
9002676a:	1214      	asrs	r4, r2, #8
9002676c:	10d6      	asrs	r6, r2, #3
9002676e:	b2ab      	uxth	r3, r5
90026770:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026774:	00d0      	lsls	r0, r2, #3
90026776:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002677a:	1c5d      	adds	r5, r3, #1
9002677c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026780:	b2c0      	uxtb	r0, r0
90026782:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90026786:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002678a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002678e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026792:	fa1f fc85 	uxth.w	ip, r5
90026796:	43ed      	mvns	r5, r5
90026798:	fb12 f20c 	smulbb	r2, r2, ip
9002679c:	b2eb      	uxtb	r3, r5
9002679e:	b2fd      	uxtb	r5, r7
900267a0:	fb04 2403 	mla	r4, r4, r3, r2
900267a4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900267a8:	fb15 f50c 	smulbb	r5, r5, ip
900267ac:	b2c8      	uxtb	r0, r1
900267ae:	b2a4      	uxth	r4, r4
900267b0:	fb10 f00c 	smulbb	r0, r0, ip
900267b4:	fb06 5503 	mla	r5, r6, r3, r5
900267b8:	fb02 0003 	mla	r0, r2, r3, r0
900267bc:	b2ad      	uxth	r5, r5
900267be:	b283      	uxth	r3, r0
900267c0:	1c60      	adds	r0, r4, #1
900267c2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
900267c6:	1c58      	adds	r0, r3, #1
900267c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900267cc:	1c6b      	adds	r3, r5, #1
900267ce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900267d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900267d6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900267da:	096d      	lsrs	r5, r5, #5
900267dc:	4320      	orrs	r0, r4
900267de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900267e2:	4328      	orrs	r0, r5
900267e4:	e7be      	b.n	90026764 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
900267e6:	bf00      	nop
900267e8:	00fff800 	.word	0x00fff800

900267ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
900267ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900267f0:	461c      	mov	r4, r3
900267f2:	b08d      	sub	sp, #52	; 0x34
900267f4:	460d      	mov	r5, r1
900267f6:	4616      	mov	r6, r2
900267f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
900267fa:	4680      	mov	r8, r0
900267fc:	6861      	ldr	r1, [r4, #4]
900267fe:	aa08      	add	r2, sp, #32
90026800:	6820      	ldr	r0, [r4, #0]
90026802:	f04f 0a02 	mov.w	sl, #2
90026806:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002680a:	3604      	adds	r6, #4
9002680c:	c203      	stmia	r2!, {r0, r1}
9002680e:	6818      	ldr	r0, [r3, #0]
90026810:	aa0a      	add	r2, sp, #40	; 0x28
90026812:	6859      	ldr	r1, [r3, #4]
90026814:	c203      	stmia	r2!, {r0, r1}
90026816:	a808      	add	r0, sp, #32
90026818:	f7ef fb8e 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002681c:	4621      	mov	r1, r4
9002681e:	a80a      	add	r0, sp, #40	; 0x28
90026820:	f7ef fbce 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026824:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
90026828:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
9002682c:	f002 0301 	and.w	r3, r2, #1
90026830:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90026834:	9303      	str	r3, [sp, #12]
90026836:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002683a:	f003 0101 	and.w	r1, r3, #1
9002683e:	9102      	str	r1, [sp, #8]
90026840:	9802      	ldr	r0, [sp, #8]
90026842:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90026846:	4403      	add	r3, r0
90026848:	fb01 2303 	mla	r3, r1, r3, r2
9002684c:	fb93 f3fa 	sdiv	r3, r3, sl
90026850:	441d      	add	r5, r3
90026852:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90026856:	441a      	add	r2, r3
90026858:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9002685c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90026860:	4419      	add	r1, r3
90026862:	4a3e      	ldr	r2, [pc, #248]	; (9002695c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90026864:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
90026868:	6810      	ldr	r0, [r2, #0]
9002686a:	9205      	str	r2, [sp, #20]
9002686c:	6803      	ldr	r3, [r0, #0]
9002686e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026870:	4798      	blx	r3
90026872:	4b3b      	ldr	r3, [pc, #236]	; (90026960 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90026874:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
90026878:	8819      	ldrh	r1, [r3, #0]
9002687a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
9002687e:	434f      	muls	r7, r1
90026880:	fb01 c404 	mla	r4, r1, r4, ip
90026884:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026888:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002688c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026890:	9204      	str	r2, [sp, #16]
90026892:	9b04      	ldr	r3, [sp, #16]
90026894:	429c      	cmp	r4, r3
90026896:	d258      	bcs.n	9002694a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026898:	9b03      	ldr	r3, [sp, #12]
9002689a:	2b00      	cmp	r3, #0
9002689c:	d034      	beq.n	90026908 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002689e:	782b      	ldrb	r3, [r5, #0]
900268a0:	1c6f      	adds	r7, r5, #1
900268a2:	f003 030f 	and.w	r3, r3, #15
900268a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900268aa:	0e0b      	lsrs	r3, r1, #24
900268ac:	d006      	beq.n	900268bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
900268ae:	8822      	ldrh	r2, [r4, #0]
900268b0:	4640      	mov	r0, r8
900268b2:	9300      	str	r3, [sp, #0]
900268b4:	464b      	mov	r3, r9
900268b6:	f7ff ff43 	bl	90026740 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900268ba:	8020      	strh	r0, [r4, #0]
900268bc:	3402      	adds	r4, #2
900268be:	f10b 3aff 	add.w	sl, fp, #4294967295
900268c2:	f1ba 0f01 	cmp.w	sl, #1
900268c6:	dd22      	ble.n	9002690e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
900268c8:	783b      	ldrb	r3, [r7, #0]
900268ca:	091b      	lsrs	r3, r3, #4
900268cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900268d0:	0e0b      	lsrs	r3, r1, #24
900268d2:	d006      	beq.n	900268e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
900268d4:	8822      	ldrh	r2, [r4, #0]
900268d6:	4640      	mov	r0, r8
900268d8:	9300      	str	r3, [sp, #0]
900268da:	464b      	mov	r3, r9
900268dc:	f7ff ff30 	bl	90026740 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900268e0:	8020      	strh	r0, [r4, #0]
900268e2:	f817 3b01 	ldrb.w	r3, [r7], #1
900268e6:	f003 030f 	and.w	r3, r3, #15
900268ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900268ee:	0e0b      	lsrs	r3, r1, #24
900268f0:	d006      	beq.n	90026900 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
900268f2:	8862      	ldrh	r2, [r4, #2]
900268f4:	4640      	mov	r0, r8
900268f6:	9300      	str	r3, [sp, #0]
900268f8:	464b      	mov	r3, r9
900268fa:	f7ff ff21 	bl	90026740 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900268fe:	8060      	strh	r0, [r4, #2]
90026900:	3404      	adds	r4, #4
90026902:	f1aa 0a02 	sub.w	sl, sl, #2
90026906:	e7dc      	b.n	900268c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026908:	462f      	mov	r7, r5
9002690a:	46da      	mov	sl, fp
9002690c:	e7d9      	b.n	900268c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002690e:	d10d      	bne.n	9002692c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026910:	783b      	ldrb	r3, [r7, #0]
90026912:	091b      	lsrs	r3, r3, #4
90026914:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026918:	0e0b      	lsrs	r3, r1, #24
9002691a:	d006      	beq.n	9002692a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
9002691c:	8822      	ldrh	r2, [r4, #0]
9002691e:	4640      	mov	r0, r8
90026920:	9300      	str	r3, [sp, #0]
90026922:	464b      	mov	r3, r9
90026924:	f7ff ff0c 	bl	90026740 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026928:	8020      	strh	r0, [r4, #0]
9002692a:	3402      	adds	r4, #2
9002692c:	9b06      	ldr	r3, [sp, #24]
9002692e:	9a02      	ldr	r2, [sp, #8]
90026930:	881b      	ldrh	r3, [r3, #0]
90026932:	eba3 030b 	sub.w	r3, r3, fp
90026936:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002693a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002693e:	4413      	add	r3, r2
90026940:	9a07      	ldr	r2, [sp, #28]
90026942:	fb93 f3f2 	sdiv	r3, r3, r2
90026946:	441d      	add	r5, r3
90026948:	e7a3      	b.n	90026892 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002694a:	9b05      	ldr	r3, [sp, #20]
9002694c:	6818      	ldr	r0, [r3, #0]
9002694e:	6803      	ldr	r3, [r0, #0]
90026950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026952:	4798      	blx	r3
90026954:	b00d      	add	sp, #52	; 0x34
90026956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002695a:	bf00      	nop
9002695c:	24039704 	.word	0x24039704
90026960:	240396fe 	.word	0x240396fe

90026964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90026964:	b570      	push	{r4, r5, r6, lr}
90026966:	1214      	asrs	r4, r2, #8
90026968:	788d      	ldrb	r5, [r1, #2]
9002696a:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002696e:	10d0      	asrs	r0, r2, #3
90026970:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026974:	00d2      	lsls	r2, r2, #3
90026976:	fb15 f503 	smulbb	r5, r5, r3
9002697a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002697e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026982:	b2d2      	uxtb	r2, r2
90026984:	fb04 5506 	mla	r5, r4, r6, r5
90026988:	784c      	ldrb	r4, [r1, #1]
9002698a:	7809      	ldrb	r1, [r1, #0]
9002698c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90026990:	fb14 f403 	smulbb	r4, r4, r3
90026994:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90026998:	fb11 f303 	smulbb	r3, r1, r3
9002699c:	b2ad      	uxth	r5, r5
9002699e:	fb00 4406 	mla	r4, r0, r6, r4
900269a2:	fb02 3306 	mla	r3, r2, r6, r3
900269a6:	1c68      	adds	r0, r5, #1
900269a8:	b2a4      	uxth	r4, r4
900269aa:	b29b      	uxth	r3, r3
900269ac:	eb00 2515 	add.w	r5, r0, r5, lsr #8
900269b0:	1c62      	adds	r2, r4, #1
900269b2:	1c58      	adds	r0, r3, #1
900269b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900269b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900269bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900269c0:	0964      	lsrs	r4, r4, #5
900269c2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900269c6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900269ca:	4328      	orrs	r0, r5
900269cc:	4320      	orrs	r0, r4
900269ce:	bd70      	pop	{r4, r5, r6, pc}

900269d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
900269d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900269d4:	b08f      	sub	sp, #60	; 0x3c
900269d6:	461c      	mov	r4, r3
900269d8:	4682      	mov	sl, r0
900269da:	460e      	mov	r6, r1
900269dc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
900269e0:	4615      	mov	r5, r2
900269e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900269e4:	2f00      	cmp	r7, #0
900269e6:	f000 8141 	beq.w	90026c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
900269ea:	6820      	ldr	r0, [r4, #0]
900269ec:	aa0a      	add	r2, sp, #40	; 0x28
900269ee:	6861      	ldr	r1, [r4, #4]
900269f0:	f04f 0802 	mov.w	r8, #2
900269f4:	3504      	adds	r5, #4
900269f6:	c203      	stmia	r2!, {r0, r1}
900269f8:	6818      	ldr	r0, [r3, #0]
900269fa:	aa0c      	add	r2, sp, #48	; 0x30
900269fc:	6859      	ldr	r1, [r3, #4]
900269fe:	c203      	stmia	r2!, {r0, r1}
90026a00:	a80a      	add	r0, sp, #40	; 0x28
90026a02:	f7ef fa99 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026a06:	4621      	mov	r1, r4
90026a08:	a80c      	add	r0, sp, #48	; 0x30
90026a0a:	f7ef fad9 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026a0e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90026a12:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90026a16:	f002 0301 	and.w	r3, r2, #1
90026a1a:	9306      	str	r3, [sp, #24]
90026a1c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026a20:	f003 0101 	and.w	r1, r3, #1
90026a24:	9105      	str	r1, [sp, #20]
90026a26:	9805      	ldr	r0, [sp, #20]
90026a28:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90026a2c:	4403      	add	r3, r0
90026a2e:	fb01 2303 	mla	r3, r1, r3, r2
90026a32:	fb93 f3f8 	sdiv	r3, r3, r8
90026a36:	441e      	add	r6, r3
90026a38:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90026a3c:	441a      	add	r2, r3
90026a3e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90026a42:	4419      	add	r1, r3
90026a44:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90026a48:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90026a4c:	9303      	str	r3, [sp, #12]
90026a4e:	4b89      	ldr	r3, [pc, #548]	; (90026c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026a50:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90026a54:	6818      	ldr	r0, [r3, #0]
90026a56:	6803      	ldr	r3, [r0, #0]
90026a58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026a5a:	4798      	blx	r3
90026a5c:	4a86      	ldr	r2, [pc, #536]	; (90026c78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90026a5e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90026a62:	2fff      	cmp	r7, #255	; 0xff
90026a64:	8813      	ldrh	r3, [r2, #0]
90026a66:	4694      	mov	ip, r2
90026a68:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90026a6c:	fb03 9404 	mla	r4, r3, r4, r9
90026a70:	fb03 f30b 	mul.w	r3, r3, fp
90026a74:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026a78:	d071      	beq.n	90026b5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90026a7a:	43f9      	mvns	r1, r7
90026a7c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026a80:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90026a84:	b2c9      	uxtb	r1, r1
90026a86:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026a8a:	9104      	str	r1, [sp, #16]
90026a8c:	9b07      	ldr	r3, [sp, #28]
90026a8e:	42a3      	cmp	r3, r4
90026a90:	f240 80e7 	bls.w	90026c62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026a94:	9b06      	ldr	r3, [sp, #24]
90026a96:	2b00      	cmp	r3, #0
90026a98:	d03d      	beq.n	90026b16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90026a9a:	7831      	ldrb	r1, [r6, #0]
90026a9c:	4650      	mov	r0, sl
90026a9e:	9b04      	ldr	r3, [sp, #16]
90026aa0:	f106 0801 	add.w	r8, r6, #1
90026aa4:	f001 010f 	and.w	r1, r1, #15
90026aa8:	8822      	ldrh	r2, [r4, #0]
90026aaa:	9300      	str	r3, [sp, #0]
90026aac:	463b      	mov	r3, r7
90026aae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026ab2:	4429      	add	r1, r5
90026ab4:	f7ff ff56 	bl	90026964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026ab8:	9b03      	ldr	r3, [sp, #12]
90026aba:	f824 0b02 	strh.w	r0, [r4], #2
90026abe:	f103 3bff 	add.w	fp, r3, #4294967295
90026ac2:	f1bb 0f01 	cmp.w	fp, #1
90026ac6:	46a1      	mov	r9, r4
90026ac8:	f104 0404 	add.w	r4, r4, #4
90026acc:	dd27      	ble.n	90026b1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90026ace:	f898 1000 	ldrb.w	r1, [r8]
90026ad2:	4650      	mov	r0, sl
90026ad4:	9b04      	ldr	r3, [sp, #16]
90026ad6:	f1ab 0b02 	sub.w	fp, fp, #2
90026ada:	0909      	lsrs	r1, r1, #4
90026adc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026ae0:	9300      	str	r3, [sp, #0]
90026ae2:	463b      	mov	r3, r7
90026ae4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026ae8:	4429      	add	r1, r5
90026aea:	f7ff ff3b 	bl	90026964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026aee:	f824 0c04 	strh.w	r0, [r4, #-4]
90026af2:	f818 1b01 	ldrb.w	r1, [r8], #1
90026af6:	4650      	mov	r0, sl
90026af8:	9b04      	ldr	r3, [sp, #16]
90026afa:	f001 010f 	and.w	r1, r1, #15
90026afe:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026b02:	9300      	str	r3, [sp, #0]
90026b04:	463b      	mov	r3, r7
90026b06:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026b0a:	4429      	add	r1, r5
90026b0c:	f7ff ff2a 	bl	90026964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026b10:	f824 0c02 	strh.w	r0, [r4, #-2]
90026b14:	e7d5      	b.n	90026ac2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026b16:	46b0      	mov	r8, r6
90026b18:	f8dd b00c 	ldr.w	fp, [sp, #12]
90026b1c:	e7d1      	b.n	90026ac2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90026b1e:	d10f      	bne.n	90026b40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90026b20:	f898 1000 	ldrb.w	r1, [r8]
90026b24:	4650      	mov	r0, sl
90026b26:	9b04      	ldr	r3, [sp, #16]
90026b28:	0909      	lsrs	r1, r1, #4
90026b2a:	f8b9 2000 	ldrh.w	r2, [r9]
90026b2e:	9300      	str	r3, [sp, #0]
90026b30:	463b      	mov	r3, r7
90026b32:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026b36:	4429      	add	r1, r5
90026b38:	f7ff ff14 	bl	90026964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90026b3c:	f829 0b02 	strh.w	r0, [r9], #2
90026b40:	9b08      	ldr	r3, [sp, #32]
90026b42:	9a05      	ldr	r2, [sp, #20]
90026b44:	881c      	ldrh	r4, [r3, #0]
90026b46:	9b03      	ldr	r3, [sp, #12]
90026b48:	1ae4      	subs	r4, r4, r3
90026b4a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026b4e:	4413      	add	r3, r2
90026b50:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026b52:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026b56:	fb93 f3f2 	sdiv	r3, r3, r2
90026b5a:	441e      	add	r6, r3
90026b5c:	e796      	b.n	90026a8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90026b5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90026b62:	4f46      	ldr	r7, [pc, #280]	; (90026c7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90026b64:	42a3      	cmp	r3, r4
90026b66:	d97c      	bls.n	90026c62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90026b68:	9a06      	ldr	r2, [sp, #24]
90026b6a:	2a00      	cmp	r2, #0
90026b6c:	d054      	beq.n	90026c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90026b6e:	7830      	ldrb	r0, [r6, #0]
90026b70:	1c71      	adds	r1, r6, #1
90026b72:	f000 000f 	and.w	r0, r0, #15
90026b76:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026b7a:	eb05 0e00 	add.w	lr, r5, r0
90026b7e:	5c28      	ldrb	r0, [r5, r0]
90026b80:	f89e 2002 	ldrb.w	r2, [lr, #2]
90026b84:	f89e e001 	ldrb.w	lr, [lr, #1]
90026b88:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026b8c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026b90:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90026b94:	ea42 020e 	orr.w	r2, r2, lr
90026b98:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90026b9c:	f824 2b02 	strh.w	r2, [r4], #2
90026ba0:	9a03      	ldr	r2, [sp, #12]
90026ba2:	f102 3eff 	add.w	lr, r2, #4294967295
90026ba6:	f1be 0f01 	cmp.w	lr, #1
90026baa:	4620      	mov	r0, r4
90026bac:	f104 0404 	add.w	r4, r4, #4
90026bb0:	dd36      	ble.n	90026c20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90026bb2:	7808      	ldrb	r0, [r1, #0]
90026bb4:	f1ae 0e02 	sub.w	lr, lr, #2
90026bb8:	0900      	lsrs	r0, r0, #4
90026bba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026bbe:	eb05 0a00 	add.w	sl, r5, r0
90026bc2:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026bc6:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026bca:	00d2      	lsls	r2, r2, #3
90026bcc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026bd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026bd4:	ea49 0202 	orr.w	r2, r9, r2
90026bd8:	f815 9000 	ldrb.w	r9, [r5, r0]
90026bdc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026be0:	f824 2c04 	strh.w	r2, [r4, #-4]
90026be4:	f811 0b01 	ldrb.w	r0, [r1], #1
90026be8:	f000 000f 	and.w	r0, r0, #15
90026bec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90026bf0:	eb05 0a00 	add.w	sl, r5, r0
90026bf4:	f89a 2001 	ldrb.w	r2, [sl, #1]
90026bf8:	f89a 9002 	ldrb.w	r9, [sl, #2]
90026bfc:	00d2      	lsls	r2, r2, #3
90026bfe:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90026c02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026c06:	ea49 0202 	orr.w	r2, r9, r2
90026c0a:	f815 9000 	ldrb.w	r9, [r5, r0]
90026c0e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90026c12:	f824 2c02 	strh.w	r2, [r4, #-2]
90026c16:	e7c6      	b.n	90026ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026c18:	4631      	mov	r1, r6
90026c1a:	f8dd e00c 	ldr.w	lr, [sp, #12]
90026c1e:	e7c2      	b.n	90026ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90026c20:	d111      	bne.n	90026c46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90026c22:	7809      	ldrb	r1, [r1, #0]
90026c24:	0909      	lsrs	r1, r1, #4
90026c26:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90026c2a:	186c      	adds	r4, r5, r1
90026c2c:	5c69      	ldrb	r1, [r5, r1]
90026c2e:	78a2      	ldrb	r2, [r4, #2]
90026c30:	7864      	ldrb	r4, [r4, #1]
90026c32:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90026c36:	00e4      	lsls	r4, r4, #3
90026c38:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026c3c:	4322      	orrs	r2, r4
90026c3e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90026c42:	f820 2b02 	strh.w	r2, [r0], #2
90026c46:	9a03      	ldr	r2, [sp, #12]
90026c48:	f8bc 4000 	ldrh.w	r4, [ip]
90026c4c:	9905      	ldr	r1, [sp, #20]
90026c4e:	1aa4      	subs	r4, r4, r2
90026c50:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90026c54:	440a      	add	r2, r1
90026c56:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026c5a:	fb92 f2f8 	sdiv	r2, r2, r8
90026c5e:	4416      	add	r6, r2
90026c60:	e780      	b.n	90026b64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90026c62:	4b04      	ldr	r3, [pc, #16]	; (90026c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90026c64:	6818      	ldr	r0, [r3, #0]
90026c66:	6803      	ldr	r3, [r0, #0]
90026c68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026c6a:	4798      	blx	r3
90026c6c:	b00f      	add	sp, #60	; 0x3c
90026c6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026c72:	bf00      	nop
90026c74:	24039704 	.word	0x24039704
90026c78:	240396fe 	.word	0x240396fe
90026c7c:	fffff800 	.word	0xfffff800

90026c80 <CRC_Lock>:
90026c80:	4a20      	ldr	r2, [pc, #128]	; (90026d04 <CRC_Lock+0x84>)
90026c82:	b530      	push	{r4, r5, lr}
90026c84:	6813      	ldr	r3, [r2, #0]
90026c86:	f64f 74f0 	movw	r4, #65520	; 0xfff0
90026c8a:	f24c 2540 	movw	r5, #49728	; 0xc240
90026c8e:	f023 0301 	bic.w	r3, r3, #1
90026c92:	6013      	str	r3, [r2, #0]
90026c94:	4b1c      	ldr	r3, [pc, #112]	; (90026d08 <CRC_Lock+0x88>)
90026c96:	681a      	ldr	r2, [r3, #0]
90026c98:	4022      	ands	r2, r4
90026c9a:	42aa      	cmp	r2, r5
90026c9c:	d005      	beq.n	90026caa <CRC_Lock+0x2a>
90026c9e:	681b      	ldr	r3, [r3, #0]
90026ca0:	f24c 2270 	movw	r2, #49776	; 0xc270
90026ca4:	4023      	ands	r3, r4
90026ca6:	4293      	cmp	r3, r2
90026ca8:	d124      	bne.n	90026cf4 <CRC_Lock+0x74>
90026caa:	4b18      	ldr	r3, [pc, #96]	; (90026d0c <CRC_Lock+0x8c>)
90026cac:	681b      	ldr	r3, [r3, #0]
90026cae:	bb0b      	cbnz	r3, 90026cf4 <CRC_Lock+0x74>
90026cb0:	4b17      	ldr	r3, [pc, #92]	; (90026d10 <CRC_Lock+0x90>)
90026cb2:	681a      	ldr	r2, [r3, #0]
90026cb4:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026cb8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90026cbc:	d00d      	beq.n	90026cda <CRC_Lock+0x5a>
90026cbe:	681a      	ldr	r2, [r3, #0]
90026cc0:	f240 4483 	movw	r4, #1155	; 0x483
90026cc4:	f3c2 020b 	ubfx	r2, r2, #0, #12
90026cc8:	42a2      	cmp	r2, r4
90026cca:	d006      	beq.n	90026cda <CRC_Lock+0x5a>
90026ccc:	681b      	ldr	r3, [r3, #0]
90026cce:	f240 4285 	movw	r2, #1157	; 0x485
90026cd2:	f3c3 030b 	ubfx	r3, r3, #0, #12
90026cd6:	4293      	cmp	r3, r2
90026cd8:	d10c      	bne.n	90026cf4 <CRC_Lock+0x74>
90026cda:	4b0e      	ldr	r3, [pc, #56]	; (90026d14 <CRC_Lock+0x94>)
90026cdc:	2201      	movs	r2, #1
90026cde:	601a      	str	r2, [r3, #0]
90026ce0:	681a      	ldr	r2, [r3, #0]
90026ce2:	2a00      	cmp	r2, #0
90026ce4:	d1fc      	bne.n	90026ce0 <CRC_Lock+0x60>
90026ce6:	4b0c      	ldr	r3, [pc, #48]	; (90026d18 <CRC_Lock+0x98>)
90026ce8:	6018      	str	r0, [r3, #0]
90026cea:	6818      	ldr	r0, [r3, #0]
90026cec:	1a43      	subs	r3, r0, r1
90026cee:	4258      	negs	r0, r3
90026cf0:	4158      	adcs	r0, r3
90026cf2:	bd30      	pop	{r4, r5, pc}
90026cf4:	4b09      	ldr	r3, [pc, #36]	; (90026d1c <CRC_Lock+0x9c>)
90026cf6:	2201      	movs	r2, #1
90026cf8:	601a      	str	r2, [r3, #0]
90026cfa:	681a      	ldr	r2, [r3, #0]
90026cfc:	2a00      	cmp	r2, #0
90026cfe:	d1fc      	bne.n	90026cfa <CRC_Lock+0x7a>
90026d00:	4b07      	ldr	r3, [pc, #28]	; (90026d20 <CRC_Lock+0xa0>)
90026d02:	e7f1      	b.n	90026ce8 <CRC_Lock+0x68>
90026d04:	e0002000 	.word	0xe0002000
90026d08:	e000ed00 	.word	0xe000ed00
90026d0c:	e0042000 	.word	0xe0042000
90026d10:	5c001000 	.word	0x5c001000
90026d14:	58024c08 	.word	0x58024c08
90026d18:	58024c00 	.word	0x58024c00
90026d1c:	40023008 	.word	0x40023008
90026d20:	40023000 	.word	0x40023000

90026d24 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90026d24:	6101      	str	r1, [r0, #16]
90026d26:	4770      	bx	lr

90026d28 <_ZN8touchgfx8Gestures4tickEv>:
90026d28:	7b83      	ldrb	r3, [r0, #14]
90026d2a:	b14b      	cbz	r3, 90026d40 <_ZN8touchgfx8Gestures4tickEv+0x18>
90026d2c:	8903      	ldrh	r3, [r0, #8]
90026d2e:	3301      	adds	r3, #1
90026d30:	b29b      	uxth	r3, r3
90026d32:	2b07      	cmp	r3, #7
90026d34:	8103      	strh	r3, [r0, #8]
90026d36:	bf81      	itttt	hi
90026d38:	2300      	movhi	r3, #0
90026d3a:	8143      	strhhi	r3, [r0, #10]
90026d3c:	8183      	strhhi	r3, [r0, #12]
90026d3e:	7383      	strbhi	r3, [r0, #14]
90026d40:	4770      	bx	lr
	...

90026d44 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90026d44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90026d48:	4698      	mov	r8, r3
90026d4a:	8883      	ldrh	r3, [r0, #4]
90026d4c:	4604      	mov	r4, r0
90026d4e:	4617      	mov	r7, r2
90026d50:	f8ad 3006 	strh.w	r3, [sp, #6]
90026d54:	eba8 0303 	sub.w	r3, r8, r3
90026d58:	4a19      	ldr	r2, [pc, #100]	; (90026dc0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90026d5a:	460e      	mov	r6, r1
90026d5c:	b21b      	sxth	r3, r3
90026d5e:	88c1      	ldrh	r1, [r0, #6]
90026d60:	9200      	str	r2, [sp, #0]
90026d62:	2000      	movs	r0, #0
90026d64:	2b00      	cmp	r3, #0
90026d66:	8aa2      	ldrh	r2, [r4, #20]
90026d68:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90026d6c:	bfb8      	it	lt
90026d6e:	425b      	neglt	r3, r3
90026d70:	f88d 0004 	strb.w	r0, [sp, #4]
90026d74:	f8ad 1008 	strh.w	r1, [sp, #8]
90026d78:	b21b      	sxth	r3, r3
90026d7a:	f8ad 800a 	strh.w	r8, [sp, #10]
90026d7e:	f8ad 500c 	strh.w	r5, [sp, #12]
90026d82:	4293      	cmp	r3, r2
90026d84:	dc07      	bgt.n	90026d96 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90026d86:	1a69      	subs	r1, r5, r1
90026d88:	b209      	sxth	r1, r1
90026d8a:	2900      	cmp	r1, #0
90026d8c:	bfb8      	it	lt
90026d8e:	4249      	neglt	r1, r1
90026d90:	b209      	sxth	r1, r1
90026d92:	428a      	cmp	r2, r1
90026d94:	da10      	bge.n	90026db8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90026d96:	6920      	ldr	r0, [r4, #16]
90026d98:	4669      	mov	r1, sp
90026d9a:	eba8 0606 	sub.w	r6, r8, r6
90026d9e:	1bef      	subs	r7, r5, r7
90026da0:	6803      	ldr	r3, [r0, #0]
90026da2:	685b      	ldr	r3, [r3, #4]
90026da4:	4798      	blx	r3
90026da6:	2300      	movs	r3, #0
90026da8:	2001      	movs	r0, #1
90026daa:	8166      	strh	r6, [r4, #10]
90026dac:	8123      	strh	r3, [r4, #8]
90026dae:	81a7      	strh	r7, [r4, #12]
90026db0:	f8a4 8004 	strh.w	r8, [r4, #4]
90026db4:	80e5      	strh	r5, [r4, #6]
90026db6:	73a0      	strb	r0, [r4, #14]
90026db8:	b004      	add	sp, #16
90026dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026dbe:	bf00      	nop
90026dc0:	9002b9d8 	.word	0x9002b9d8

90026dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90026dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
90026dc6:	461e      	mov	r6, r3
90026dc8:	1e4b      	subs	r3, r1, #1
90026dca:	b085      	sub	sp, #20
90026dcc:	4604      	mov	r4, r0
90026dce:	2b01      	cmp	r3, #1
90026dd0:	460d      	mov	r5, r1
90026dd2:	4617      	mov	r7, r2
90026dd4:	d84b      	bhi.n	90026e6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90026dd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90026dda:	1cd3      	adds	r3, r2, #3
90026ddc:	b29b      	uxth	r3, r3
90026dde:	2b06      	cmp	r3, #6
90026de0:	d916      	bls.n	90026e10 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90026de2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90026e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90026de6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90026dea:	f8cd c004 	str.w	ip, [sp, #4]
90026dee:	f04f 0c00 	mov.w	ip, #0
90026df2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90026df6:	6900      	ldr	r0, [r0, #16]
90026df8:	f8ad 100c 	strh.w	r1, [sp, #12]
90026dfc:	a901      	add	r1, sp, #4
90026dfe:	f88d c008 	strb.w	ip, [sp, #8]
90026e02:	f8ad 200a 	strh.w	r2, [sp, #10]
90026e06:	f8ad 300e 	strh.w	r3, [sp, #14]
90026e0a:	6803      	ldr	r3, [r0, #0]
90026e0c:	689b      	ldr	r3, [r3, #8]
90026e0e:	4798      	blx	r3
90026e10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026e14:	1cd3      	adds	r3, r2, #3
90026e16:	b29b      	uxth	r3, r3
90026e18:	2b06      	cmp	r3, #6
90026e1a:	d916      	bls.n	90026e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026e1c:	f8df c064 	ldr.w	ip, [pc, #100]	; 90026e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90026e20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90026e24:	f8cd c004 	str.w	ip, [sp, #4]
90026e28:	f04f 0c01 	mov.w	ip, #1
90026e2c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90026e30:	6920      	ldr	r0, [r4, #16]
90026e32:	f8ad 100c 	strh.w	r1, [sp, #12]
90026e36:	a901      	add	r1, sp, #4
90026e38:	f88d c008 	strb.w	ip, [sp, #8]
90026e3c:	f8ad 200a 	strh.w	r2, [sp, #10]
90026e40:	f8ad 300e 	strh.w	r3, [sp, #14]
90026e44:	6803      	ldr	r3, [r0, #0]
90026e46:	689b      	ldr	r3, [r3, #8]
90026e48:	4798      	blx	r3
90026e4a:	4b0d      	ldr	r3, [pc, #52]	; (90026e80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90026e4c:	a901      	add	r1, sp, #4
90026e4e:	6920      	ldr	r0, [r4, #16]
90026e50:	9301      	str	r3, [sp, #4]
90026e52:	2300      	movs	r3, #0
90026e54:	f88d 5008 	strb.w	r5, [sp, #8]
90026e58:	f8ad 700a 	strh.w	r7, [sp, #10]
90026e5c:	f8ad 600c 	strh.w	r6, [sp, #12]
90026e60:	f8ad 300e 	strh.w	r3, [sp, #14]
90026e64:	6803      	ldr	r3, [r0, #0]
90026e66:	681b      	ldr	r3, [r3, #0]
90026e68:	4798      	blx	r3
90026e6a:	b005      	add	sp, #20
90026e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026e6e:	2900      	cmp	r1, #0
90026e70:	d1eb      	bne.n	90026e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026e72:	80a2      	strh	r2, [r4, #4]
90026e74:	80c6      	strh	r6, [r0, #6]
90026e76:	60a1      	str	r1, [r4, #8]
90026e78:	81a1      	strh	r1, [r4, #12]
90026e7a:	73a1      	strb	r1, [r4, #14]
90026e7c:	e7e5      	b.n	90026e4a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90026e7e:	bf00      	nop
90026e80:	9002b9c4 	.word	0x9002b9c4
90026e84:	9002b9ec 	.word	0x9002b9ec

90026e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90026e88:	10c9      	asrs	r1, r1, #3
90026e8a:	2900      	cmp	r1, #0
90026e8c:	bfb8      	it	lt
90026e8e:	4249      	neglt	r1, r1
90026e90:	2801      	cmp	r0, #1
90026e92:	d108      	bne.n	90026ea6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90026e94:	f3c1 0008 	ubfx	r0, r1, #0, #9
90026e98:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90026e9c:	4601      	mov	r1, r0
90026e9e:	dd02      	ble.n	90026ea6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90026ea0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90026ea4:	4770      	bx	lr
90026ea6:	29ff      	cmp	r1, #255	; 0xff
90026ea8:	bfa8      	it	ge
90026eaa:	21ff      	movge	r1, #255	; 0xff
90026eac:	4608      	mov	r0, r1
90026eae:	4770      	bx	lr

90026eb0 <_ZN8touchgfx10Rasterizer6lineToEii>:
90026eb0:	b410      	push	{r4}
90026eb2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90026eb6:	429c      	cmp	r4, r3
90026eb8:	d803      	bhi.n	90026ec2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90026eba:	f85d 4b04 	ldr.w	r4, [sp], #4
90026ebe:	f7ed bb45 	b.w	9001454c <_ZN8touchgfx7Outline6lineToEii>
90026ec2:	f85d 4b04 	ldr.w	r4, [sp], #4
90026ec6:	4770      	bx	lr

90026ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90026ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026ecc:	b08b      	sub	sp, #44	; 0x2c
90026ece:	4606      	mov	r6, r0
90026ed0:	468a      	mov	sl, r1
90026ed2:	e9cd 2306 	strd	r2, r3, [sp, #24]
90026ed6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90026eda:	9308      	str	r3, [sp, #32]
90026edc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90026ee0:	9309      	str	r3, [sp, #36]	; 0x24
90026ee2:	f7ed fc9e 	bl	90014822 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90026ee6:	68b5      	ldr	r5, [r6, #8]
90026ee8:	4604      	mov	r4, r0
90026eea:	2d00      	cmp	r5, #0
90026eec:	d044      	beq.n	90026f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90026eee:	6873      	ldr	r3, [r6, #4]
90026ef0:	42ab      	cmp	r3, r5
90026ef2:	d33d      	bcc.n	90026f70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90026ef4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90026ef8:	f04f 0800 	mov.w	r8, #0
90026efc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90026f00:	eb02 0b03 	add.w	fp, r2, r3
90026f04:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90026f08:	fb02 1203 	mla	r2, r2, r3, r1
90026f0c:	9205      	str	r2, [sp, #20]
90026f0e:	1e6a      	subs	r2, r5, #1
90026f10:	9204      	str	r2, [sp, #16]
90026f12:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90026f16:	f9b4 7000 	ldrsh.w	r7, [r4]
90026f1a:	454b      	cmp	r3, r9
90026f1c:	463a      	mov	r2, r7
90026f1e:	d008      	beq.n	90026f32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90026f20:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90026f24:	eb03 0b09 	add.w	fp, r3, r9
90026f28:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90026f2c:	fb03 1309 	mla	r3, r3, r9, r1
90026f30:	9305      	str	r3, [sp, #20]
90026f32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90026f36:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90026f3a:	4498      	add	r8, r3
90026f3c:	9b04      	ldr	r3, [sp, #16]
90026f3e:	3b01      	subs	r3, #1
90026f40:	9304      	str	r3, [sp, #16]
90026f42:	9b04      	ldr	r3, [sp, #16]
90026f44:	3301      	adds	r3, #1
90026f46:	d015      	beq.n	90026f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90026f48:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90026f4c:	42bb      	cmp	r3, r7
90026f4e:	d117      	bne.n	90026f80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90026f50:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90026f54:	9b04      	ldr	r3, [sp, #16]
90026f56:	4548      	cmp	r0, r9
90026f58:	f103 33ff 	add.w	r3, r3, #4294967295
90026f5c:	d17d      	bne.n	9002705a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90026f5e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90026f62:	4401      	add	r1, r0
90026f64:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90026f68:	4480      	add	r8, r0
90026f6a:	e7e9      	b.n	90026f40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90026f6c:	461f      	mov	r7, r3
90026f6e:	e042      	b.n	90026ff6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90026f70:	2000      	movs	r0, #0
90026f72:	e002      	b.n	90026f7a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90026f74:	2900      	cmp	r1, #0
90026f76:	d16d      	bne.n	90027054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90026f78:	2001      	movs	r0, #1
90026f7a:	b00b      	add	sp, #44	; 0x2c
90026f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026f80:	b379      	cbz	r1, 90026fe2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90026f82:	2f00      	cmp	r7, #0
90026f84:	db29      	blt.n	90026fda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026f86:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90026f8a:	42bb      	cmp	r3, r7
90026f8c:	dd25      	ble.n	90026fda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026f8e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90026f92:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90026f96:	f7ff ff77 	bl	90026e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90026f9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026f9c:	fb10 f003 	smulbb	r0, r0, r3
90026fa0:	b280      	uxth	r0, r0
90026fa2:	1c41      	adds	r1, r0, #1
90026fa4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90026fa8:	1209      	asrs	r1, r1, #8
90026faa:	f011 0fff 	tst.w	r1, #255	; 0xff
90026fae:	d014      	beq.n	90026fda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90026fb0:	b2c9      	uxtb	r1, r1
90026fb2:	9808      	ldr	r0, [sp, #32]
90026fb4:	b2ba      	uxth	r2, r7
90026fb6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90026fb8:	9102      	str	r1, [sp, #8]
90026fba:	2101      	movs	r1, #1
90026fbc:	4413      	add	r3, r2
90026fbe:	4402      	add	r2, r0
90026fc0:	9101      	str	r1, [sp, #4]
90026fc2:	fa0f f18b 	sxth.w	r1, fp
90026fc6:	f8da 0000 	ldr.w	r0, [sl]
90026fca:	b21b      	sxth	r3, r3
90026fcc:	9100      	str	r1, [sp, #0]
90026fce:	b212      	sxth	r2, r2
90026fd0:	6941      	ldr	r1, [r0, #20]
90026fd2:	4650      	mov	r0, sl
90026fd4:	460d      	mov	r5, r1
90026fd6:	9905      	ldr	r1, [sp, #20]
90026fd8:	47a8      	blx	r5
90026fda:	9b04      	ldr	r3, [sp, #16]
90026fdc:	1c7a      	adds	r2, r7, #1
90026fde:	3301      	adds	r3, #1
90026fe0:	d0ca      	beq.n	90026f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90026fe2:	f9b4 7000 	ldrsh.w	r7, [r4]
90026fe6:	1abb      	subs	r3, r7, r2
90026fe8:	2b00      	cmp	r3, #0
90026fea:	dd31      	ble.n	90027050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026fec:	2a00      	cmp	r2, #0
90026fee:	dabd      	bge.n	90026f6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90026ff0:	2f00      	cmp	r7, #0
90026ff2:	dd2d      	ble.n	90027050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90026ff4:	2200      	movs	r2, #0
90026ff6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90026ffa:	19d1      	adds	r1, r2, r7
90026ffc:	4299      	cmp	r1, r3
90026ffe:	db02      	blt.n	90027006 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90027000:	1a9f      	subs	r7, r3, r2
90027002:	2f00      	cmp	r7, #0
90027004:	dd24      	ble.n	90027050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027006:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002700a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002700e:	f7ff ff3b 	bl	90026e88 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90027012:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027014:	fb10 f003 	smulbb	r0, r0, r3
90027018:	b280      	uxth	r0, r0
9002701a:	1c41      	adds	r1, r0, #1
9002701c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027020:	1209      	asrs	r1, r1, #8
90027022:	f011 0fff 	tst.w	r1, #255	; 0xff
90027026:	d013      	beq.n	90027050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027028:	b292      	uxth	r2, r2
9002702a:	9808      	ldr	r0, [sp, #32]
9002702c:	b2c9      	uxtb	r1, r1
9002702e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90027030:	b23f      	sxth	r7, r7
90027032:	4413      	add	r3, r2
90027034:	9102      	str	r1, [sp, #8]
90027036:	4402      	add	r2, r0
90027038:	fa0f f18b 	sxth.w	r1, fp
9002703c:	f8da 0000 	ldr.w	r0, [sl]
90027040:	b21b      	sxth	r3, r3
90027042:	9100      	str	r1, [sp, #0]
90027044:	b212      	sxth	r2, r2
90027046:	9701      	str	r7, [sp, #4]
90027048:	9905      	ldr	r1, [sp, #20]
9002704a:	6947      	ldr	r7, [r0, #20]
9002704c:	4650      	mov	r0, sl
9002704e:	47b8      	blx	r7
90027050:	464b      	mov	r3, r9
90027052:	e75e      	b.n	90026f12 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90027054:	2f00      	cmp	r7, #0
90027056:	da96      	bge.n	90026f86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90027058:	e78e      	b.n	90026f78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002705a:	2900      	cmp	r1, #0
9002705c:	d0f8      	beq.n	90027050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002705e:	e790      	b.n	90026f82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90027060 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90027060:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90027064:	4b4a      	ldr	r3, [pc, #296]	; (90027190 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90027066:	2500      	movs	r5, #0
90027068:	f100 0620 	add.w	r6, r0, #32
9002706c:	4604      	mov	r4, r0
9002706e:	4690      	mov	r8, r2
90027070:	f100 0718 	add.w	r7, r0, #24
90027074:	e9c0 3100 	strd	r3, r1, [r0]
90027078:	e9c0 5502 	strd	r5, r5, [r0, #8]
9002707c:	e9c0 5504 	strd	r5, r5, [r0, #16]
90027080:	e9c0 5506 	strd	r5, r5, [r0, #24]
90027084:	4630      	mov	r0, r6
90027086:	f7ec fda7 	bl	90013bd8 <_ZN8touchgfx7OutlineC1Ev>
9002708a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
9002708e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90027092:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90027096:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
9002709a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
9002709e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
900270a2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
900270a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
900270aa:	9500      	str	r5, [sp, #0]
900270ac:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
900270b0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
900270b4:	f9b8 2000 	ldrsh.w	r2, [r8]
900270b8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
900270bc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
900270c0:	4410      	add	r0, r2
900270c2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
900270c6:	b280      	uxth	r0, r0
900270c8:	fa0f fa80 	sxth.w	sl, r0
900270cc:	45aa      	cmp	sl, r5
900270ce:	dd5c      	ble.n	9002718a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900270d0:	4591      	cmp	r9, r2
900270d2:	dd5a      	ble.n	9002718a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900270d4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
900270d8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900270dc:	440b      	add	r3, r1
900270de:	b29b      	uxth	r3, r3
900270e0:	b21d      	sxth	r5, r3
900270e2:	2d00      	cmp	r5, #0
900270e4:	dd51      	ble.n	9002718a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900270e6:	458e      	cmp	lr, r1
900270e8:	dd4f      	ble.n	9002718a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900270ea:	45d1      	cmp	r9, sl
900270ec:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
900270f0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
900270f4:	bfb8      	it	lt
900270f6:	fa1f f089 	uxthlt.w	r0, r9
900270fa:	45ae      	cmp	lr, r5
900270fc:	f8ad 2000 	strh.w	r2, [sp]
90027100:	bfb8      	it	lt
90027102:	fa1f f38e 	uxthlt.w	r3, lr
90027106:	1a80      	subs	r0, r0, r2
90027108:	f8ad 1002 	strh.w	r1, [sp, #2]
9002710c:	1a5b      	subs	r3, r3, r1
9002710e:	f8ad 0004 	strh.w	r0, [sp, #4]
90027112:	f8ad 3006 	strh.w	r3, [sp, #6]
90027116:	466d      	mov	r5, sp
90027118:	e895 0003 	ldmia.w	r5, {r0, r1}
9002711c:	e887 0003 	stmia.w	r7, {r0, r1}
90027120:	f8dc 3000 	ldr.w	r3, [ip]
90027124:	4660      	mov	r0, ip
90027126:	4639      	mov	r1, r7
90027128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002712a:	4798      	blx	r3
9002712c:	6861      	ldr	r1, [r4, #4]
9002712e:	4628      	mov	r0, r5
90027130:	3104      	adds	r1, #4
90027132:	f7ee ff45 	bl	90015fc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027136:	4638      	mov	r0, r7
90027138:	f7ee fefe 	bl	90015f38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002713c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027140:	f8bd 2000 	ldrh.w	r2, [sp]
90027144:	4630      	mov	r0, r6
90027146:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
9002714a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
9002714e:	f7ec fd27 	bl	90013ba0 <_ZN8touchgfx7Outline5resetEv>
90027152:	f9bd 3000 	ldrsh.w	r3, [sp]
90027156:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002715a:	4620      	mov	r0, r4
9002715c:	015b      	lsls	r3, r3, #5
9002715e:	60a3      	str	r3, [r4, #8]
90027160:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027164:	015b      	lsls	r3, r3, #5
90027166:	60e3      	str	r3, [r4, #12]
90027168:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002716c:	015b      	lsls	r3, r3, #5
9002716e:	6123      	str	r3, [r4, #16]
90027170:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90027174:	015b      	lsls	r3, r3, #5
90027176:	6163      	str	r3, [r4, #20]
90027178:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9002717c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90027180:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90027184:	b002      	add	sp, #8
90027186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002718a:	2300      	movs	r3, #0
9002718c:	9301      	str	r3, [sp, #4]
9002718e:	e7c2      	b.n	90027116 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90027190:	9002bd10 	.word	0x9002bd10

90027194 <_ZN8touchgfx6Canvas5closeEv>:
90027194:	b538      	push	{r3, r4, r5, lr}
90027196:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002719a:	4604      	mov	r4, r0
9002719c:	b193      	cbz	r3, 900271c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002719e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
900271a2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
900271a6:	4213      	tst	r3, r2
900271a8:	d10c      	bne.n	900271c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
900271aa:	f100 0520 	add.w	r5, r0, #32
900271ae:	b123      	cbz	r3, 900271ba <_ZN8touchgfx6Canvas5closeEv+0x26>
900271b0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
900271b4:	4628      	mov	r0, r5
900271b6:	f7ff fe7b 	bl	90026eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
900271ba:	4628      	mov	r0, r5
900271bc:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
900271c0:	f7ff fe76 	bl	90026eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
900271c4:	2300      	movs	r3, #0
900271c6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900271ca:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
900271ce:	4298      	cmp	r0, r3
900271d0:	bf34      	ite	cc
900271d2:	2000      	movcc	r0, #0
900271d4:	2001      	movcs	r0, #1
900271d6:	bd38      	pop	{r3, r4, r5, pc}

900271d8 <_ZN8touchgfx6Canvas6renderEh>:
900271d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900271dc:	4604      	mov	r4, r0
900271de:	6840      	ldr	r0, [r0, #4]
900271e0:	460d      	mov	r5, r1
900271e2:	6803      	ldr	r3, [r0, #0]
900271e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900271e6:	4798      	blx	r3
900271e8:	fb10 f105 	smulbb	r1, r0, r5
900271ec:	b289      	uxth	r1, r1
900271ee:	1c4d      	adds	r5, r1, #1
900271f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900271f4:	122d      	asrs	r5, r5, #8
900271f6:	f000 809c 	beq.w	90027332 <_ZN8touchgfx6Canvas6renderEh+0x15a>
900271fa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
900271fe:	2b00      	cmp	r3, #0
90027200:	f000 8097 	beq.w	90027332 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90027204:	4620      	mov	r0, r4
90027206:	f7ff ffc5 	bl	90027194 <_ZN8touchgfx6Canvas5closeEv>
9002720a:	4607      	mov	r7, r0
9002720c:	2800      	cmp	r0, #0
9002720e:	d048      	beq.n	900272a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027210:	6863      	ldr	r3, [r4, #4]
90027212:	4e49      	ldr	r6, [pc, #292]	; (90027338 <_ZN8touchgfx6Canvas6renderEh+0x160>)
90027214:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027216:	6837      	ldr	r7, [r6, #0]
90027218:	6803      	ldr	r3, [r0, #0]
9002721a:	689b      	ldr	r3, [r3, #8]
9002721c:	4798      	blx	r3
9002721e:	4601      	mov	r1, r0
90027220:	4638      	mov	r0, r7
90027222:	f7ea fd35 	bl	90011c90 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90027226:	4607      	mov	r7, r0
90027228:	f7ea f8f6 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
9002722c:	6803      	ldr	r3, [r0, #0]
9002722e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90027230:	4798      	blx	r3
90027232:	4680      	mov	r8, r0
90027234:	f7ea f8f0 	bl	90011418 <_ZN8touchgfx3HAL3lcdEv>
90027238:	6803      	ldr	r3, [r0, #0]
9002723a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002723c:	4798      	blx	r3
9002723e:	280b      	cmp	r0, #11
90027240:	d85c      	bhi.n	900272fc <_ZN8touchgfx6Canvas6renderEh+0x124>
90027242:	e8df f000 	tbb	[pc, r0]
90027246:	5d52      	.short	0x5d52
90027248:	325b066d 	.word	0x325b066d
9002724c:	66666642 	.word	0x66666642
90027250:	6666      	.short	0x6666
90027252:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90027256:	2208      	movs	r2, #8
90027258:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002725c:	fb91 f2f2 	sdiv	r2, r1, r2
90027260:	fb08 2303 	mla	r3, r8, r3, r2
90027264:	441f      	add	r7, r3
90027266:	424b      	negs	r3, r1
90027268:	f001 0107 	and.w	r1, r1, #7
9002726c:	f003 0307 	and.w	r3, r3, #7
90027270:	bf58      	it	pl
90027272:	4259      	negpl	r1, r3
90027274:	b2c9      	uxtb	r1, r1
90027276:	6860      	ldr	r0, [r4, #4]
90027278:	b2ed      	uxtb	r5, r5
9002727a:	463a      	mov	r2, r7
9002727c:	fa0f f388 	sxth.w	r3, r8
90027280:	e9cd 1500 	strd	r1, r5, [sp]
90027284:	6a81      	ldr	r1, [r0, #40]	; 0x28
90027286:	f104 0020 	add.w	r0, r4, #32
9002728a:	f7ff fe1d 	bl	90026ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002728e:	6863      	ldr	r3, [r4, #4]
90027290:	4607      	mov	r7, r0
90027292:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027294:	6803      	ldr	r3, [r0, #0]
90027296:	691b      	ldr	r3, [r3, #16]
90027298:	4798      	blx	r3
9002729a:	6830      	ldr	r0, [r6, #0]
9002729c:	6803      	ldr	r3, [r0, #0]
9002729e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900272a0:	4798      	blx	r3
900272a2:	4638      	mov	r0, r7
900272a4:	b002      	add	sp, #8
900272a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900272aa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900272ae:	2204      	movs	r2, #4
900272b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900272b4:	fb91 f2f2 	sdiv	r2, r1, r2
900272b8:	fb08 2303 	mla	r3, r8, r3, r2
900272bc:	441f      	add	r7, r3
900272be:	424b      	negs	r3, r1
900272c0:	f001 0103 	and.w	r1, r1, #3
900272c4:	f003 0303 	and.w	r3, r3, #3
900272c8:	e7d2      	b.n	90027270 <_ZN8touchgfx6Canvas6renderEh+0x98>
900272ca:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900272ce:	2202      	movs	r2, #2
900272d0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900272d4:	2900      	cmp	r1, #0
900272d6:	fb91 f2f2 	sdiv	r2, r1, r2
900272da:	f001 0101 	and.w	r1, r1, #1
900272de:	fb08 2303 	mla	r3, r8, r3, r2
900272e2:	bfb8      	it	lt
900272e4:	4249      	neglt	r1, r1
900272e6:	441f      	add	r7, r3
900272e8:	e7c4      	b.n	90027274 <_ZN8touchgfx6Canvas6renderEh+0x9c>
900272ea:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900272ee:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900272f2:	fb08 f303 	mul.w	r3, r8, r3
900272f6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900272fa:	441f      	add	r7, r3
900272fc:	2100      	movs	r1, #0
900272fe:	e7ba      	b.n	90027276 <_ZN8touchgfx6Canvas6renderEh+0x9e>
90027300:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027304:	2103      	movs	r1, #3
90027306:	fb08 f203 	mul.w	r2, r8, r3
9002730a:	8b23      	ldrh	r3, [r4, #24]
9002730c:	fb13 2301 	smlabb	r3, r3, r1, r2
90027310:	e7f3      	b.n	900272fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027312:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027316:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002731a:	fb08 2303 	mla	r3, r8, r3, r2
9002731e:	e7ec      	b.n	900272fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027320:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027324:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027328:	fb08 f303 	mul.w	r3, r8, r3
9002732c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90027330:	e7e3      	b.n	900272fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027332:	2701      	movs	r7, #1
90027334:	e7b5      	b.n	900272a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027336:	bf00      	nop
90027338:	24039704 	.word	0x24039704

9002733c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002733c:	4b07      	ldr	r3, [pc, #28]	; (9002735c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
9002733e:	b510      	push	{r4, lr}
90027340:	781b      	ldrb	r3, [r3, #0]
90027342:	2b01      	cmp	r3, #1
90027344:	d108      	bne.n	90027358 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
90027346:	6843      	ldr	r3, [r0, #4]
90027348:	6814      	ldr	r4, [r2, #0]
9002734a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9002734e:	680b      	ldr	r3, [r1, #0]
90027350:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90027354:	6013      	str	r3, [r2, #0]
90027356:	600c      	str	r4, [r1, #0]
90027358:	bd10      	pop	{r4, pc}
9002735a:	bf00      	nop
9002735c:	240396fc 	.word	0x240396fc

90027360 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90027360:	b513      	push	{r0, r1, r4, lr}
90027362:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90027366:	4604      	mov	r4, r0
90027368:	e9cd 2100 	strd	r2, r1, [sp]
9002736c:	b9a3      	cbnz	r3, 90027398 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002736e:	466a      	mov	r2, sp
90027370:	a901      	add	r1, sp, #4
90027372:	4620      	mov	r0, r4
90027374:	f7ff ffe2 	bl	9002733c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027378:	68a3      	ldr	r3, [r4, #8]
9002737a:	9901      	ldr	r1, [sp, #4]
9002737c:	9a00      	ldr	r2, [sp, #0]
9002737e:	1ac9      	subs	r1, r1, r3
90027380:	68e3      	ldr	r3, [r4, #12]
90027382:	1ad2      	subs	r2, r2, r3
90027384:	9101      	str	r1, [sp, #4]
90027386:	2a00      	cmp	r2, #0
90027388:	9200      	str	r2, [sp, #0]
9002738a:	da0b      	bge.n	900273a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002738c:	2301      	movs	r3, #1
9002738e:	2900      	cmp	r1, #0
90027390:	da0e      	bge.n	900273b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90027392:	f043 0304 	orr.w	r3, r3, #4
90027396:	e013      	b.n	900273c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027398:	f7ff fefc 	bl	90027194 <_ZN8touchgfx6Canvas5closeEv>
9002739c:	2800      	cmp	r0, #0
9002739e:	d1e6      	bne.n	9002736e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900273a0:	b002      	add	sp, #8
900273a2:	bd10      	pop	{r4, pc}
900273a4:	6963      	ldr	r3, [r4, #20]
900273a6:	429a      	cmp	r2, r3
900273a8:	bfac      	ite	ge
900273aa:	2302      	movge	r3, #2
900273ac:	2300      	movlt	r3, #0
900273ae:	e7ee      	b.n	9002738e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900273b0:	6920      	ldr	r0, [r4, #16]
900273b2:	4281      	cmp	r1, r0
900273b4:	bfac      	ite	ge
900273b6:	2008      	movge	r0, #8
900273b8:	2000      	movlt	r0, #0
900273ba:	4318      	orrs	r0, r3
900273bc:	b2c3      	uxtb	r3, r0
900273be:	b158      	cbz	r0, 900273d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
900273c0:	2200      	movs	r2, #0
900273c2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
900273c6:	9901      	ldr	r1, [sp, #4]
900273c8:	9a00      	ldr	r2, [sp, #0]
900273ca:	66a1      	str	r1, [r4, #104]	; 0x68
900273cc:	66e2      	str	r2, [r4, #108]	; 0x6c
900273ce:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
900273d2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
900273d6:	e7e3      	b.n	900273a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
900273d8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
900273dc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
900273e0:	4298      	cmp	r0, r3
900273e2:	d803      	bhi.n	900273ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
900273e4:	f104 0020 	add.w	r0, r4, #32
900273e8:	f7ed f8ca 	bl	90014580 <_ZN8touchgfx7Outline6moveToEii>
900273ec:	2301      	movs	r3, #1
900273ee:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900273f2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900273f6:	2300      	movs	r3, #0
900273f8:	e7e5      	b.n	900273c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900273fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900273fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
900273fc:	ab02      	add	r3, sp, #8
900273fe:	4604      	mov	r4, r0
90027400:	9101      	str	r1, [sp, #4]
90027402:	a901      	add	r1, sp, #4
90027404:	f843 2d08 	str.w	r2, [r3, #-8]!
90027408:	461a      	mov	r2, r3
9002740a:	f7ff ff97 	bl	9002733c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002740e:	68a3      	ldr	r3, [r4, #8]
90027410:	9901      	ldr	r1, [sp, #4]
90027412:	9a00      	ldr	r2, [sp, #0]
90027414:	1ac9      	subs	r1, r1, r3
90027416:	68e3      	ldr	r3, [r4, #12]
90027418:	1ad2      	subs	r2, r2, r3
9002741a:	9101      	str	r1, [sp, #4]
9002741c:	2a00      	cmp	r2, #0
9002741e:	9200      	str	r2, [sp, #0]
90027420:	db1c      	blt.n	9002745c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90027422:	6963      	ldr	r3, [r4, #20]
90027424:	429a      	cmp	r2, r3
90027426:	bfac      	ite	ge
90027428:	2002      	movge	r0, #2
9002742a:	2000      	movlt	r0, #0
9002742c:	2900      	cmp	r1, #0
9002742e:	db17      	blt.n	90027460 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90027430:	6923      	ldr	r3, [r4, #16]
90027432:	4299      	cmp	r1, r3
90027434:	bfac      	ite	ge
90027436:	2308      	movge	r3, #8
90027438:	2300      	movlt	r3, #0
9002743a:	4303      	orrs	r3, r0
9002743c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90027440:	b2dd      	uxtb	r5, r3
90027442:	b978      	cbnz	r0, 90027464 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90027444:	f104 0020 	add.w	r0, r4, #32
90027448:	f7ff fd32 	bl	90026eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
9002744c:	9b01      	ldr	r3, [sp, #4]
9002744e:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90027452:	65e3      	str	r3, [r4, #92]	; 0x5c
90027454:	9b00      	ldr	r3, [sp, #0]
90027456:	6623      	str	r3, [r4, #96]	; 0x60
90027458:	b002      	add	sp, #8
9002745a:	bd70      	pop	{r4, r5, r6, pc}
9002745c:	2001      	movs	r0, #1
9002745e:	e7e5      	b.n	9002742c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90027460:	2304      	movs	r3, #4
90027462:	e7ea      	b.n	9002743a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90027464:	b113      	cbz	r3, 9002746c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90027466:	ea10 0305 	ands.w	r3, r0, r5
9002746a:	d11c      	bne.n	900274a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002746c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90027470:	f104 0620 	add.w	r6, r4, #32
90027474:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
90027478:	b98b      	cbnz	r3, 9002749e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002747a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
9002747e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027482:	4298      	cmp	r0, r3
90027484:	d802      	bhi.n	9002748c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027486:	4630      	mov	r0, r6
90027488:	f7ed f87a 	bl	90014580 <_ZN8touchgfx7Outline6moveToEii>
9002748c:	2301      	movs	r3, #1
9002748e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027492:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027496:	4630      	mov	r0, r6
90027498:	e9dd 2100 	ldrd	r2, r1, [sp]
9002749c:	e7d4      	b.n	90027448 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002749e:	4630      	mov	r0, r6
900274a0:	f7ff fd06 	bl	90026eb0 <_ZN8touchgfx10Rasterizer6lineToEii>
900274a4:	e7f7      	b.n	90027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
900274a6:	461d      	mov	r5, r3
900274a8:	e7d0      	b.n	9002744c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

900274ac <_ZN8touchgfx6CanvasD1Ev>:
900274ac:	4b04      	ldr	r3, [pc, #16]	; (900274c0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
900274ae:	b510      	push	{r4, lr}
900274b0:	4604      	mov	r4, r0
900274b2:	f840 3b20 	str.w	r3, [r0], #32
900274b6:	f7ec fb6b 	bl	90013b90 <_ZN8touchgfx7OutlineD1Ev>
900274ba:	4620      	mov	r0, r4
900274bc:	bd10      	pop	{r4, pc}
900274be:	bf00      	nop
900274c0:	9002bd10 	.word	0x9002bd10

900274c4 <_ZN8touchgfx6CanvasD0Ev>:
900274c4:	b510      	push	{r4, lr}
900274c6:	4604      	mov	r4, r0
900274c8:	f7ff fff0 	bl	900274ac <_ZN8touchgfx6CanvasD1Ev>
900274cc:	2170      	movs	r1, #112	; 0x70
900274ce:	4620      	mov	r0, r4
900274d0:	f000 f826 	bl	90027520 <_ZdlPvj>
900274d4:	4620      	mov	r0, r4
900274d6:	bd10      	pop	{r4, pc}

900274d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
900274d8:	790b      	ldrb	r3, [r1, #4]
900274da:	2b00      	cmp	r3, #0
900274dc:	bf0c      	ite	eq
900274de:	2301      	moveq	r3, #1
900274e0:	2300      	movne	r3, #0
900274e2:	b570      	push	{r4, r5, r6, lr}
900274e4:	4604      	mov	r4, r0
900274e6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
900274ea:	460e      	mov	r6, r1
900274ec:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
900274f0:	d109      	bne.n	90027506 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
900274f2:	b14d      	cbz	r5, 90027508 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
900274f4:	7933      	ldrb	r3, [r6, #4]
900274f6:	2b01      	cmp	r3, #1
900274f8:	d10c      	bne.n	90027514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900274fa:	6823      	ldr	r3, [r4, #0]
900274fc:	4620      	mov	r0, r4
900274fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90027500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027504:	4718      	bx	r3
90027506:	b12d      	cbz	r5, 90027514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027508:	6823      	ldr	r3, [r4, #0]
9002750a:	4620      	mov	r0, r4
9002750c:	695b      	ldr	r3, [r3, #20]
9002750e:	4798      	blx	r3
90027510:	2d00      	cmp	r5, #0
90027512:	d1ef      	bne.n	900274f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90027514:	bd70      	pop	{r4, r5, r6, pc}

90027516 <__aeabi_atexit>:
90027516:	460b      	mov	r3, r1
90027518:	4601      	mov	r1, r0
9002751a:	4618      	mov	r0, r3
9002751c:	f000 b90e 	b.w	9002773c <__cxa_atexit>

90027520 <_ZdlPvj>:
90027520:	f000 b812 	b.w	90027548 <_ZdlPv>

90027524 <__cxa_guard_acquire>:
90027524:	6803      	ldr	r3, [r0, #0]
90027526:	07db      	lsls	r3, r3, #31
90027528:	d406      	bmi.n	90027538 <__cxa_guard_acquire+0x14>
9002752a:	7843      	ldrb	r3, [r0, #1]
9002752c:	b103      	cbz	r3, 90027530 <__cxa_guard_acquire+0xc>
9002752e:	deff      	udf	#255	; 0xff
90027530:	2301      	movs	r3, #1
90027532:	7043      	strb	r3, [r0, #1]
90027534:	4618      	mov	r0, r3
90027536:	4770      	bx	lr
90027538:	2000      	movs	r0, #0
9002753a:	4770      	bx	lr

9002753c <__cxa_guard_release>:
9002753c:	2301      	movs	r3, #1
9002753e:	6003      	str	r3, [r0, #0]
90027540:	4770      	bx	lr

90027542 <__cxa_pure_virtual>:
90027542:	b508      	push	{r3, lr}
90027544:	f000 f80e 	bl	90027564 <_ZSt9terminatev>

90027548 <_ZdlPv>:
90027548:	f000 b844 	b.w	900275d4 <free>

9002754c <_ZN10__cxxabiv111__terminateEPFvvE>:
9002754c:	b508      	push	{r3, lr}
9002754e:	4780      	blx	r0
90027550:	f000 f80d 	bl	9002756e <abort>

90027554 <_ZSt13get_terminatev>:
90027554:	4b02      	ldr	r3, [pc, #8]	; (90027560 <_ZSt13get_terminatev+0xc>)
90027556:	6818      	ldr	r0, [r3, #0]
90027558:	f3bf 8f5b 	dmb	ish
9002755c:	4770      	bx	lr
9002755e:	bf00      	nop
90027560:	240000fc 	.word	0x240000fc

90027564 <_ZSt9terminatev>:
90027564:	b508      	push	{r3, lr}
90027566:	f7ff fff5 	bl	90027554 <_ZSt13get_terminatev>
9002756a:	f7ff ffef 	bl	9002754c <_ZN10__cxxabiv111__terminateEPFvvE>

9002756e <abort>:
9002756e:	b508      	push	{r3, lr}
90027570:	2006      	movs	r0, #6
90027572:	f000 facd 	bl	90027b10 <raise>
90027576:	2001      	movs	r0, #1
90027578:	f7db ffbc 	bl	900034f4 <_exit>

9002757c <__assert_func>:
9002757c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002757e:	4614      	mov	r4, r2
90027580:	461a      	mov	r2, r3
90027582:	4b09      	ldr	r3, [pc, #36]	; (900275a8 <__assert_func+0x2c>)
90027584:	681b      	ldr	r3, [r3, #0]
90027586:	4605      	mov	r5, r0
90027588:	68d8      	ldr	r0, [r3, #12]
9002758a:	b14c      	cbz	r4, 900275a0 <__assert_func+0x24>
9002758c:	4b07      	ldr	r3, [pc, #28]	; (900275ac <__assert_func+0x30>)
9002758e:	9100      	str	r1, [sp, #0]
90027590:	e9cd 3401 	strd	r3, r4, [sp, #4]
90027594:	4906      	ldr	r1, [pc, #24]	; (900275b0 <__assert_func+0x34>)
90027596:	462b      	mov	r3, r5
90027598:	f000 f970 	bl	9002787c <fiprintf>
9002759c:	f7ff ffe7 	bl	9002756e <abort>
900275a0:	4b04      	ldr	r3, [pc, #16]	; (900275b4 <__assert_func+0x38>)
900275a2:	461c      	mov	r4, r3
900275a4:	e7f3      	b.n	9002758e <__assert_func+0x12>
900275a6:	bf00      	nop
900275a8:	24000158 	.word	0x24000158
900275ac:	9002bd1c 	.word	0x9002bd1c
900275b0:	9002bd29 	.word	0x9002bd29
900275b4:	9002bd57 	.word	0x9002bd57

900275b8 <atexit>:
900275b8:	2300      	movs	r3, #0
900275ba:	4601      	mov	r1, r0
900275bc:	461a      	mov	r2, r3
900275be:	4618      	mov	r0, r3
900275c0:	f000 bb52 	b.w	90027c68 <__register_exitproc>

900275c4 <malloc>:
900275c4:	4b02      	ldr	r3, [pc, #8]	; (900275d0 <malloc+0xc>)
900275c6:	4601      	mov	r1, r0
900275c8:	6818      	ldr	r0, [r3, #0]
900275ca:	f000 b82b 	b.w	90027624 <_malloc_r>
900275ce:	bf00      	nop
900275d0:	24000158 	.word	0x24000158

900275d4 <free>:
900275d4:	4b02      	ldr	r3, [pc, #8]	; (900275e0 <free+0xc>)
900275d6:	4601      	mov	r1, r0
900275d8:	6818      	ldr	r0, [r3, #0]
900275da:	f000 bba3 	b.w	90027d24 <_free_r>
900275de:	bf00      	nop
900275e0:	24000158 	.word	0x24000158

900275e4 <sbrk_aligned>:
900275e4:	b570      	push	{r4, r5, r6, lr}
900275e6:	4e0e      	ldr	r6, [pc, #56]	; (90027620 <sbrk_aligned+0x3c>)
900275e8:	460c      	mov	r4, r1
900275ea:	6831      	ldr	r1, [r6, #0]
900275ec:	4605      	mov	r5, r0
900275ee:	b911      	cbnz	r1, 900275f6 <sbrk_aligned+0x12>
900275f0:	f000 fade 	bl	90027bb0 <_sbrk_r>
900275f4:	6030      	str	r0, [r6, #0]
900275f6:	4621      	mov	r1, r4
900275f8:	4628      	mov	r0, r5
900275fa:	f000 fad9 	bl	90027bb0 <_sbrk_r>
900275fe:	1c43      	adds	r3, r0, #1
90027600:	d00a      	beq.n	90027618 <sbrk_aligned+0x34>
90027602:	1cc4      	adds	r4, r0, #3
90027604:	f024 0403 	bic.w	r4, r4, #3
90027608:	42a0      	cmp	r0, r4
9002760a:	d007      	beq.n	9002761c <sbrk_aligned+0x38>
9002760c:	1a21      	subs	r1, r4, r0
9002760e:	4628      	mov	r0, r5
90027610:	f000 face 	bl	90027bb0 <_sbrk_r>
90027614:	3001      	adds	r0, #1
90027616:	d101      	bne.n	9002761c <sbrk_aligned+0x38>
90027618:	f04f 34ff 	mov.w	r4, #4294967295
9002761c:	4620      	mov	r0, r4
9002761e:	bd70      	pop	{r4, r5, r6, pc}
90027620:	2403a05c 	.word	0x2403a05c

90027624 <_malloc_r>:
90027624:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027628:	1ccd      	adds	r5, r1, #3
9002762a:	f025 0503 	bic.w	r5, r5, #3
9002762e:	3508      	adds	r5, #8
90027630:	2d0c      	cmp	r5, #12
90027632:	bf38      	it	cc
90027634:	250c      	movcc	r5, #12
90027636:	2d00      	cmp	r5, #0
90027638:	4607      	mov	r7, r0
9002763a:	db01      	blt.n	90027640 <_malloc_r+0x1c>
9002763c:	42a9      	cmp	r1, r5
9002763e:	d905      	bls.n	9002764c <_malloc_r+0x28>
90027640:	230c      	movs	r3, #12
90027642:	603b      	str	r3, [r7, #0]
90027644:	2600      	movs	r6, #0
90027646:	4630      	mov	r0, r6
90027648:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002764c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90027720 <_malloc_r+0xfc>
90027650:	f000 f868 	bl	90027724 <__malloc_lock>
90027654:	f8d8 3000 	ldr.w	r3, [r8]
90027658:	461c      	mov	r4, r3
9002765a:	bb5c      	cbnz	r4, 900276b4 <_malloc_r+0x90>
9002765c:	4629      	mov	r1, r5
9002765e:	4638      	mov	r0, r7
90027660:	f7ff ffc0 	bl	900275e4 <sbrk_aligned>
90027664:	1c43      	adds	r3, r0, #1
90027666:	4604      	mov	r4, r0
90027668:	d155      	bne.n	90027716 <_malloc_r+0xf2>
9002766a:	f8d8 4000 	ldr.w	r4, [r8]
9002766e:	4626      	mov	r6, r4
90027670:	2e00      	cmp	r6, #0
90027672:	d145      	bne.n	90027700 <_malloc_r+0xdc>
90027674:	2c00      	cmp	r4, #0
90027676:	d048      	beq.n	9002770a <_malloc_r+0xe6>
90027678:	6823      	ldr	r3, [r4, #0]
9002767a:	4631      	mov	r1, r6
9002767c:	4638      	mov	r0, r7
9002767e:	eb04 0903 	add.w	r9, r4, r3
90027682:	f000 fa95 	bl	90027bb0 <_sbrk_r>
90027686:	4581      	cmp	r9, r0
90027688:	d13f      	bne.n	9002770a <_malloc_r+0xe6>
9002768a:	6821      	ldr	r1, [r4, #0]
9002768c:	1a6d      	subs	r5, r5, r1
9002768e:	4629      	mov	r1, r5
90027690:	4638      	mov	r0, r7
90027692:	f7ff ffa7 	bl	900275e4 <sbrk_aligned>
90027696:	3001      	adds	r0, #1
90027698:	d037      	beq.n	9002770a <_malloc_r+0xe6>
9002769a:	6823      	ldr	r3, [r4, #0]
9002769c:	442b      	add	r3, r5
9002769e:	6023      	str	r3, [r4, #0]
900276a0:	f8d8 3000 	ldr.w	r3, [r8]
900276a4:	2b00      	cmp	r3, #0
900276a6:	d038      	beq.n	9002771a <_malloc_r+0xf6>
900276a8:	685a      	ldr	r2, [r3, #4]
900276aa:	42a2      	cmp	r2, r4
900276ac:	d12b      	bne.n	90027706 <_malloc_r+0xe2>
900276ae:	2200      	movs	r2, #0
900276b0:	605a      	str	r2, [r3, #4]
900276b2:	e00f      	b.n	900276d4 <_malloc_r+0xb0>
900276b4:	6822      	ldr	r2, [r4, #0]
900276b6:	1b52      	subs	r2, r2, r5
900276b8:	d41f      	bmi.n	900276fa <_malloc_r+0xd6>
900276ba:	2a0b      	cmp	r2, #11
900276bc:	d917      	bls.n	900276ee <_malloc_r+0xca>
900276be:	1961      	adds	r1, r4, r5
900276c0:	42a3      	cmp	r3, r4
900276c2:	6025      	str	r5, [r4, #0]
900276c4:	bf18      	it	ne
900276c6:	6059      	strne	r1, [r3, #4]
900276c8:	6863      	ldr	r3, [r4, #4]
900276ca:	bf08      	it	eq
900276cc:	f8c8 1000 	streq.w	r1, [r8]
900276d0:	5162      	str	r2, [r4, r5]
900276d2:	604b      	str	r3, [r1, #4]
900276d4:	4638      	mov	r0, r7
900276d6:	f104 060b 	add.w	r6, r4, #11
900276da:	f000 f829 	bl	90027730 <__malloc_unlock>
900276de:	f026 0607 	bic.w	r6, r6, #7
900276e2:	1d23      	adds	r3, r4, #4
900276e4:	1af2      	subs	r2, r6, r3
900276e6:	d0ae      	beq.n	90027646 <_malloc_r+0x22>
900276e8:	1b9b      	subs	r3, r3, r6
900276ea:	50a3      	str	r3, [r4, r2]
900276ec:	e7ab      	b.n	90027646 <_malloc_r+0x22>
900276ee:	42a3      	cmp	r3, r4
900276f0:	6862      	ldr	r2, [r4, #4]
900276f2:	d1dd      	bne.n	900276b0 <_malloc_r+0x8c>
900276f4:	f8c8 2000 	str.w	r2, [r8]
900276f8:	e7ec      	b.n	900276d4 <_malloc_r+0xb0>
900276fa:	4623      	mov	r3, r4
900276fc:	6864      	ldr	r4, [r4, #4]
900276fe:	e7ac      	b.n	9002765a <_malloc_r+0x36>
90027700:	4634      	mov	r4, r6
90027702:	6876      	ldr	r6, [r6, #4]
90027704:	e7b4      	b.n	90027670 <_malloc_r+0x4c>
90027706:	4613      	mov	r3, r2
90027708:	e7cc      	b.n	900276a4 <_malloc_r+0x80>
9002770a:	230c      	movs	r3, #12
9002770c:	603b      	str	r3, [r7, #0]
9002770e:	4638      	mov	r0, r7
90027710:	f000 f80e 	bl	90027730 <__malloc_unlock>
90027714:	e797      	b.n	90027646 <_malloc_r+0x22>
90027716:	6025      	str	r5, [r4, #0]
90027718:	e7dc      	b.n	900276d4 <_malloc_r+0xb0>
9002771a:	605b      	str	r3, [r3, #4]
9002771c:	deff      	udf	#255	; 0xff
9002771e:	bf00      	nop
90027720:	2403a058 	.word	0x2403a058

90027724 <__malloc_lock>:
90027724:	4801      	ldr	r0, [pc, #4]	; (9002772c <__malloc_lock+0x8>)
90027726:	f000 ba8f 	b.w	90027c48 <__retarget_lock_acquire_recursive>
9002772a:	bf00      	nop
9002772c:	2403a1a1 	.word	0x2403a1a1

90027730 <__malloc_unlock>:
90027730:	4801      	ldr	r0, [pc, #4]	; (90027738 <__malloc_unlock+0x8>)
90027732:	f000 ba8a 	b.w	90027c4a <__retarget_lock_release_recursive>
90027736:	bf00      	nop
90027738:	2403a1a1 	.word	0x2403a1a1

9002773c <__cxa_atexit>:
9002773c:	b510      	push	{r4, lr}
9002773e:	4c05      	ldr	r4, [pc, #20]	; (90027754 <__cxa_atexit+0x18>)
90027740:	4613      	mov	r3, r2
90027742:	b12c      	cbz	r4, 90027750 <__cxa_atexit+0x14>
90027744:	460a      	mov	r2, r1
90027746:	4601      	mov	r1, r0
90027748:	2002      	movs	r0, #2
9002774a:	f000 fa8d 	bl	90027c68 <__register_exitproc>
9002774e:	bd10      	pop	{r4, pc}
90027750:	4620      	mov	r0, r4
90027752:	e7fc      	b.n	9002774e <__cxa_atexit+0x12>
90027754:	90027c69 	.word	0x90027c69

90027758 <std>:
90027758:	2300      	movs	r3, #0
9002775a:	b510      	push	{r4, lr}
9002775c:	4604      	mov	r4, r0
9002775e:	e9c0 3300 	strd	r3, r3, [r0]
90027762:	e9c0 3304 	strd	r3, r3, [r0, #16]
90027766:	6083      	str	r3, [r0, #8]
90027768:	8181      	strh	r1, [r0, #12]
9002776a:	6643      	str	r3, [r0, #100]	; 0x64
9002776c:	81c2      	strh	r2, [r0, #14]
9002776e:	6183      	str	r3, [r0, #24]
90027770:	4619      	mov	r1, r3
90027772:	2208      	movs	r2, #8
90027774:	305c      	adds	r0, #92	; 0x5c
90027776:	f000 f989 	bl	90027a8c <memset>
9002777a:	4b05      	ldr	r3, [pc, #20]	; (90027790 <std+0x38>)
9002777c:	6263      	str	r3, [r4, #36]	; 0x24
9002777e:	4b05      	ldr	r3, [pc, #20]	; (90027794 <std+0x3c>)
90027780:	62a3      	str	r3, [r4, #40]	; 0x28
90027782:	4b05      	ldr	r3, [pc, #20]	; (90027798 <std+0x40>)
90027784:	62e3      	str	r3, [r4, #44]	; 0x2c
90027786:	4b05      	ldr	r3, [pc, #20]	; (9002779c <std+0x44>)
90027788:	6224      	str	r4, [r4, #32]
9002778a:	6323      	str	r3, [r4, #48]	; 0x30
9002778c:	bd10      	pop	{r4, pc}
9002778e:	bf00      	nop
90027790:	900278dd 	.word	0x900278dd
90027794:	900278ff 	.word	0x900278ff
90027798:	90027937 	.word	0x90027937
9002779c:	9002795b 	.word	0x9002795b

900277a0 <stdio_exit_handler>:
900277a0:	4a02      	ldr	r2, [pc, #8]	; (900277ac <stdio_exit_handler+0xc>)
900277a2:	4903      	ldr	r1, [pc, #12]	; (900277b0 <stdio_exit_handler+0x10>)
900277a4:	4803      	ldr	r0, [pc, #12]	; (900277b4 <stdio_exit_handler+0x14>)
900277a6:	f000 b87b 	b.w	900278a0 <_fwalk_sglue>
900277aa:	bf00      	nop
900277ac:	24000100 	.word	0x24000100
900277b0:	90028471 	.word	0x90028471
900277b4:	2400010c 	.word	0x2400010c

900277b8 <cleanup_stdio>:
900277b8:	6841      	ldr	r1, [r0, #4]
900277ba:	4b0c      	ldr	r3, [pc, #48]	; (900277ec <cleanup_stdio+0x34>)
900277bc:	4299      	cmp	r1, r3
900277be:	b510      	push	{r4, lr}
900277c0:	4604      	mov	r4, r0
900277c2:	d001      	beq.n	900277c8 <cleanup_stdio+0x10>
900277c4:	f000 fe54 	bl	90028470 <_fflush_r>
900277c8:	68a1      	ldr	r1, [r4, #8]
900277ca:	4b09      	ldr	r3, [pc, #36]	; (900277f0 <cleanup_stdio+0x38>)
900277cc:	4299      	cmp	r1, r3
900277ce:	d002      	beq.n	900277d6 <cleanup_stdio+0x1e>
900277d0:	4620      	mov	r0, r4
900277d2:	f000 fe4d 	bl	90028470 <_fflush_r>
900277d6:	68e1      	ldr	r1, [r4, #12]
900277d8:	4b06      	ldr	r3, [pc, #24]	; (900277f4 <cleanup_stdio+0x3c>)
900277da:	4299      	cmp	r1, r3
900277dc:	d004      	beq.n	900277e8 <cleanup_stdio+0x30>
900277de:	4620      	mov	r0, r4
900277e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900277e4:	f000 be44 	b.w	90028470 <_fflush_r>
900277e8:	bd10      	pop	{r4, pc}
900277ea:	bf00      	nop
900277ec:	2403a060 	.word	0x2403a060
900277f0:	2403a0c8 	.word	0x2403a0c8
900277f4:	2403a130 	.word	0x2403a130

900277f8 <global_stdio_init.part.0>:
900277f8:	b510      	push	{r4, lr}
900277fa:	4b0b      	ldr	r3, [pc, #44]	; (90027828 <global_stdio_init.part.0+0x30>)
900277fc:	4c0b      	ldr	r4, [pc, #44]	; (9002782c <global_stdio_init.part.0+0x34>)
900277fe:	4a0c      	ldr	r2, [pc, #48]	; (90027830 <global_stdio_init.part.0+0x38>)
90027800:	601a      	str	r2, [r3, #0]
90027802:	4620      	mov	r0, r4
90027804:	2200      	movs	r2, #0
90027806:	2104      	movs	r1, #4
90027808:	f7ff ffa6 	bl	90027758 <std>
9002780c:	f104 0068 	add.w	r0, r4, #104	; 0x68
90027810:	2201      	movs	r2, #1
90027812:	2109      	movs	r1, #9
90027814:	f7ff ffa0 	bl	90027758 <std>
90027818:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
9002781c:	2202      	movs	r2, #2
9002781e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027822:	2112      	movs	r1, #18
90027824:	f7ff bf98 	b.w	90027758 <std>
90027828:	2403a198 	.word	0x2403a198
9002782c:	2403a060 	.word	0x2403a060
90027830:	900277a1 	.word	0x900277a1

90027834 <__sfp_lock_acquire>:
90027834:	4801      	ldr	r0, [pc, #4]	; (9002783c <__sfp_lock_acquire+0x8>)
90027836:	f000 ba07 	b.w	90027c48 <__retarget_lock_acquire_recursive>
9002783a:	bf00      	nop
9002783c:	2403a1a2 	.word	0x2403a1a2

90027840 <__sfp_lock_release>:
90027840:	4801      	ldr	r0, [pc, #4]	; (90027848 <__sfp_lock_release+0x8>)
90027842:	f000 ba02 	b.w	90027c4a <__retarget_lock_release_recursive>
90027846:	bf00      	nop
90027848:	2403a1a2 	.word	0x2403a1a2

9002784c <__sinit>:
9002784c:	b510      	push	{r4, lr}
9002784e:	4604      	mov	r4, r0
90027850:	f7ff fff0 	bl	90027834 <__sfp_lock_acquire>
90027854:	6a23      	ldr	r3, [r4, #32]
90027856:	b11b      	cbz	r3, 90027860 <__sinit+0x14>
90027858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002785c:	f7ff bff0 	b.w	90027840 <__sfp_lock_release>
90027860:	4b04      	ldr	r3, [pc, #16]	; (90027874 <__sinit+0x28>)
90027862:	6223      	str	r3, [r4, #32]
90027864:	4b04      	ldr	r3, [pc, #16]	; (90027878 <__sinit+0x2c>)
90027866:	681b      	ldr	r3, [r3, #0]
90027868:	2b00      	cmp	r3, #0
9002786a:	d1f5      	bne.n	90027858 <__sinit+0xc>
9002786c:	f7ff ffc4 	bl	900277f8 <global_stdio_init.part.0>
90027870:	e7f2      	b.n	90027858 <__sinit+0xc>
90027872:	bf00      	nop
90027874:	900277b9 	.word	0x900277b9
90027878:	2403a198 	.word	0x2403a198

9002787c <fiprintf>:
9002787c:	b40e      	push	{r1, r2, r3}
9002787e:	b503      	push	{r0, r1, lr}
90027880:	4601      	mov	r1, r0
90027882:	ab03      	add	r3, sp, #12
90027884:	4805      	ldr	r0, [pc, #20]	; (9002789c <fiprintf+0x20>)
90027886:	f853 2b04 	ldr.w	r2, [r3], #4
9002788a:	6800      	ldr	r0, [r0, #0]
9002788c:	9301      	str	r3, [sp, #4]
9002788e:	f000 fabf 	bl	90027e10 <_vfiprintf_r>
90027892:	b002      	add	sp, #8
90027894:	f85d eb04 	ldr.w	lr, [sp], #4
90027898:	b003      	add	sp, #12
9002789a:	4770      	bx	lr
9002789c:	24000158 	.word	0x24000158

900278a0 <_fwalk_sglue>:
900278a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900278a4:	4607      	mov	r7, r0
900278a6:	4688      	mov	r8, r1
900278a8:	4614      	mov	r4, r2
900278aa:	2600      	movs	r6, #0
900278ac:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900278b0:	f1b9 0901 	subs.w	r9, r9, #1
900278b4:	d505      	bpl.n	900278c2 <_fwalk_sglue+0x22>
900278b6:	6824      	ldr	r4, [r4, #0]
900278b8:	2c00      	cmp	r4, #0
900278ba:	d1f7      	bne.n	900278ac <_fwalk_sglue+0xc>
900278bc:	4630      	mov	r0, r6
900278be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900278c2:	89ab      	ldrh	r3, [r5, #12]
900278c4:	2b01      	cmp	r3, #1
900278c6:	d907      	bls.n	900278d8 <_fwalk_sglue+0x38>
900278c8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900278cc:	3301      	adds	r3, #1
900278ce:	d003      	beq.n	900278d8 <_fwalk_sglue+0x38>
900278d0:	4629      	mov	r1, r5
900278d2:	4638      	mov	r0, r7
900278d4:	47c0      	blx	r8
900278d6:	4306      	orrs	r6, r0
900278d8:	3568      	adds	r5, #104	; 0x68
900278da:	e7e9      	b.n	900278b0 <_fwalk_sglue+0x10>

900278dc <__sread>:
900278dc:	b510      	push	{r4, lr}
900278de:	460c      	mov	r4, r1
900278e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900278e4:	f000 f93e 	bl	90027b64 <_read_r>
900278e8:	2800      	cmp	r0, #0
900278ea:	bfab      	itete	ge
900278ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
900278ee:	89a3      	ldrhlt	r3, [r4, #12]
900278f0:	181b      	addge	r3, r3, r0
900278f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
900278f6:	bfac      	ite	ge
900278f8:	6563      	strge	r3, [r4, #84]	; 0x54
900278fa:	81a3      	strhlt	r3, [r4, #12]
900278fc:	bd10      	pop	{r4, pc}

900278fe <__swrite>:
900278fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90027902:	461f      	mov	r7, r3
90027904:	898b      	ldrh	r3, [r1, #12]
90027906:	05db      	lsls	r3, r3, #23
90027908:	4605      	mov	r5, r0
9002790a:	460c      	mov	r4, r1
9002790c:	4616      	mov	r6, r2
9002790e:	d505      	bpl.n	9002791c <__swrite+0x1e>
90027910:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027914:	2302      	movs	r3, #2
90027916:	2200      	movs	r2, #0
90027918:	f000 f912 	bl	90027b40 <_lseek_r>
9002791c:	89a3      	ldrh	r3, [r4, #12]
9002791e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027922:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90027926:	81a3      	strh	r3, [r4, #12]
90027928:	4632      	mov	r2, r6
9002792a:	463b      	mov	r3, r7
9002792c:	4628      	mov	r0, r5
9002792e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90027932:	f000 b94d 	b.w	90027bd0 <_write_r>

90027936 <__sseek>:
90027936:	b510      	push	{r4, lr}
90027938:	460c      	mov	r4, r1
9002793a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002793e:	f000 f8ff 	bl	90027b40 <_lseek_r>
90027942:	1c43      	adds	r3, r0, #1
90027944:	89a3      	ldrh	r3, [r4, #12]
90027946:	bf15      	itete	ne
90027948:	6560      	strne	r0, [r4, #84]	; 0x54
9002794a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
9002794e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90027952:	81a3      	strheq	r3, [r4, #12]
90027954:	bf18      	it	ne
90027956:	81a3      	strhne	r3, [r4, #12]
90027958:	bd10      	pop	{r4, pc}

9002795a <__sclose>:
9002795a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002795e:	f000 b8df 	b.w	90027b20 <_close_r>

90027962 <__swbuf_r>:
90027962:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027964:	460e      	mov	r6, r1
90027966:	4614      	mov	r4, r2
90027968:	4605      	mov	r5, r0
9002796a:	b118      	cbz	r0, 90027974 <__swbuf_r+0x12>
9002796c:	6a03      	ldr	r3, [r0, #32]
9002796e:	b90b      	cbnz	r3, 90027974 <__swbuf_r+0x12>
90027970:	f7ff ff6c 	bl	9002784c <__sinit>
90027974:	69a3      	ldr	r3, [r4, #24]
90027976:	60a3      	str	r3, [r4, #8]
90027978:	89a3      	ldrh	r3, [r4, #12]
9002797a:	071a      	lsls	r2, r3, #28
9002797c:	d525      	bpl.n	900279ca <__swbuf_r+0x68>
9002797e:	6923      	ldr	r3, [r4, #16]
90027980:	b31b      	cbz	r3, 900279ca <__swbuf_r+0x68>
90027982:	6823      	ldr	r3, [r4, #0]
90027984:	6922      	ldr	r2, [r4, #16]
90027986:	1a98      	subs	r0, r3, r2
90027988:	6963      	ldr	r3, [r4, #20]
9002798a:	b2f6      	uxtb	r6, r6
9002798c:	4283      	cmp	r3, r0
9002798e:	4637      	mov	r7, r6
90027990:	dc04      	bgt.n	9002799c <__swbuf_r+0x3a>
90027992:	4621      	mov	r1, r4
90027994:	4628      	mov	r0, r5
90027996:	f000 fd6b 	bl	90028470 <_fflush_r>
9002799a:	b9e0      	cbnz	r0, 900279d6 <__swbuf_r+0x74>
9002799c:	68a3      	ldr	r3, [r4, #8]
9002799e:	3b01      	subs	r3, #1
900279a0:	60a3      	str	r3, [r4, #8]
900279a2:	6823      	ldr	r3, [r4, #0]
900279a4:	1c5a      	adds	r2, r3, #1
900279a6:	6022      	str	r2, [r4, #0]
900279a8:	701e      	strb	r6, [r3, #0]
900279aa:	6962      	ldr	r2, [r4, #20]
900279ac:	1c43      	adds	r3, r0, #1
900279ae:	429a      	cmp	r2, r3
900279b0:	d004      	beq.n	900279bc <__swbuf_r+0x5a>
900279b2:	89a3      	ldrh	r3, [r4, #12]
900279b4:	07db      	lsls	r3, r3, #31
900279b6:	d506      	bpl.n	900279c6 <__swbuf_r+0x64>
900279b8:	2e0a      	cmp	r6, #10
900279ba:	d104      	bne.n	900279c6 <__swbuf_r+0x64>
900279bc:	4621      	mov	r1, r4
900279be:	4628      	mov	r0, r5
900279c0:	f000 fd56 	bl	90028470 <_fflush_r>
900279c4:	b938      	cbnz	r0, 900279d6 <__swbuf_r+0x74>
900279c6:	4638      	mov	r0, r7
900279c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900279ca:	4621      	mov	r1, r4
900279cc:	4628      	mov	r0, r5
900279ce:	f000 f805 	bl	900279dc <__swsetup_r>
900279d2:	2800      	cmp	r0, #0
900279d4:	d0d5      	beq.n	90027982 <__swbuf_r+0x20>
900279d6:	f04f 37ff 	mov.w	r7, #4294967295
900279da:	e7f4      	b.n	900279c6 <__swbuf_r+0x64>

900279dc <__swsetup_r>:
900279dc:	b538      	push	{r3, r4, r5, lr}
900279de:	4b2a      	ldr	r3, [pc, #168]	; (90027a88 <__swsetup_r+0xac>)
900279e0:	4605      	mov	r5, r0
900279e2:	6818      	ldr	r0, [r3, #0]
900279e4:	460c      	mov	r4, r1
900279e6:	b118      	cbz	r0, 900279f0 <__swsetup_r+0x14>
900279e8:	6a03      	ldr	r3, [r0, #32]
900279ea:	b90b      	cbnz	r3, 900279f0 <__swsetup_r+0x14>
900279ec:	f7ff ff2e 	bl	9002784c <__sinit>
900279f0:	89a3      	ldrh	r3, [r4, #12]
900279f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900279f6:	0718      	lsls	r0, r3, #28
900279f8:	d422      	bmi.n	90027a40 <__swsetup_r+0x64>
900279fa:	06d9      	lsls	r1, r3, #27
900279fc:	d407      	bmi.n	90027a0e <__swsetup_r+0x32>
900279fe:	2309      	movs	r3, #9
90027a00:	602b      	str	r3, [r5, #0]
90027a02:	f042 0340 	orr.w	r3, r2, #64	; 0x40
90027a06:	81a3      	strh	r3, [r4, #12]
90027a08:	f04f 30ff 	mov.w	r0, #4294967295
90027a0c:	e034      	b.n	90027a78 <__swsetup_r+0x9c>
90027a0e:	0758      	lsls	r0, r3, #29
90027a10:	d512      	bpl.n	90027a38 <__swsetup_r+0x5c>
90027a12:	6b61      	ldr	r1, [r4, #52]	; 0x34
90027a14:	b141      	cbz	r1, 90027a28 <__swsetup_r+0x4c>
90027a16:	f104 0344 	add.w	r3, r4, #68	; 0x44
90027a1a:	4299      	cmp	r1, r3
90027a1c:	d002      	beq.n	90027a24 <__swsetup_r+0x48>
90027a1e:	4628      	mov	r0, r5
90027a20:	f000 f980 	bl	90027d24 <_free_r>
90027a24:	2300      	movs	r3, #0
90027a26:	6363      	str	r3, [r4, #52]	; 0x34
90027a28:	89a3      	ldrh	r3, [r4, #12]
90027a2a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90027a2e:	81a3      	strh	r3, [r4, #12]
90027a30:	2300      	movs	r3, #0
90027a32:	6063      	str	r3, [r4, #4]
90027a34:	6923      	ldr	r3, [r4, #16]
90027a36:	6023      	str	r3, [r4, #0]
90027a38:	89a3      	ldrh	r3, [r4, #12]
90027a3a:	f043 0308 	orr.w	r3, r3, #8
90027a3e:	81a3      	strh	r3, [r4, #12]
90027a40:	6923      	ldr	r3, [r4, #16]
90027a42:	b94b      	cbnz	r3, 90027a58 <__swsetup_r+0x7c>
90027a44:	89a3      	ldrh	r3, [r4, #12]
90027a46:	f403 7320 	and.w	r3, r3, #640	; 0x280
90027a4a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90027a4e:	d003      	beq.n	90027a58 <__swsetup_r+0x7c>
90027a50:	4621      	mov	r1, r4
90027a52:	4628      	mov	r0, r5
90027a54:	f000 fd5a 	bl	9002850c <__smakebuf_r>
90027a58:	89a0      	ldrh	r0, [r4, #12]
90027a5a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027a5e:	f010 0301 	ands.w	r3, r0, #1
90027a62:	d00a      	beq.n	90027a7a <__swsetup_r+0x9e>
90027a64:	2300      	movs	r3, #0
90027a66:	60a3      	str	r3, [r4, #8]
90027a68:	6963      	ldr	r3, [r4, #20]
90027a6a:	425b      	negs	r3, r3
90027a6c:	61a3      	str	r3, [r4, #24]
90027a6e:	6923      	ldr	r3, [r4, #16]
90027a70:	b943      	cbnz	r3, 90027a84 <__swsetup_r+0xa8>
90027a72:	f010 0080 	ands.w	r0, r0, #128	; 0x80
90027a76:	d1c4      	bne.n	90027a02 <__swsetup_r+0x26>
90027a78:	bd38      	pop	{r3, r4, r5, pc}
90027a7a:	0781      	lsls	r1, r0, #30
90027a7c:	bf58      	it	pl
90027a7e:	6963      	ldrpl	r3, [r4, #20]
90027a80:	60a3      	str	r3, [r4, #8]
90027a82:	e7f4      	b.n	90027a6e <__swsetup_r+0x92>
90027a84:	2000      	movs	r0, #0
90027a86:	e7f7      	b.n	90027a78 <__swsetup_r+0x9c>
90027a88:	24000158 	.word	0x24000158

90027a8c <memset>:
90027a8c:	4402      	add	r2, r0
90027a8e:	4603      	mov	r3, r0
90027a90:	4293      	cmp	r3, r2
90027a92:	d100      	bne.n	90027a96 <memset+0xa>
90027a94:	4770      	bx	lr
90027a96:	f803 1b01 	strb.w	r1, [r3], #1
90027a9a:	e7f9      	b.n	90027a90 <memset+0x4>

90027a9c <strncmp>:
90027a9c:	b510      	push	{r4, lr}
90027a9e:	b16a      	cbz	r2, 90027abc <strncmp+0x20>
90027aa0:	3901      	subs	r1, #1
90027aa2:	1884      	adds	r4, r0, r2
90027aa4:	f810 2b01 	ldrb.w	r2, [r0], #1
90027aa8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90027aac:	429a      	cmp	r2, r3
90027aae:	d103      	bne.n	90027ab8 <strncmp+0x1c>
90027ab0:	42a0      	cmp	r0, r4
90027ab2:	d001      	beq.n	90027ab8 <strncmp+0x1c>
90027ab4:	2a00      	cmp	r2, #0
90027ab6:	d1f5      	bne.n	90027aa4 <strncmp+0x8>
90027ab8:	1ad0      	subs	r0, r2, r3
90027aba:	bd10      	pop	{r4, pc}
90027abc:	4610      	mov	r0, r2
90027abe:	e7fc      	b.n	90027aba <strncmp+0x1e>

90027ac0 <_raise_r>:
90027ac0:	291f      	cmp	r1, #31
90027ac2:	b538      	push	{r3, r4, r5, lr}
90027ac4:	4604      	mov	r4, r0
90027ac6:	460d      	mov	r5, r1
90027ac8:	d904      	bls.n	90027ad4 <_raise_r+0x14>
90027aca:	2316      	movs	r3, #22
90027acc:	6003      	str	r3, [r0, #0]
90027ace:	f04f 30ff 	mov.w	r0, #4294967295
90027ad2:	bd38      	pop	{r3, r4, r5, pc}
90027ad4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
90027ad6:	b112      	cbz	r2, 90027ade <_raise_r+0x1e>
90027ad8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90027adc:	b94b      	cbnz	r3, 90027af2 <_raise_r+0x32>
90027ade:	4620      	mov	r0, r4
90027ae0:	f000 f864 	bl	90027bac <_getpid_r>
90027ae4:	462a      	mov	r2, r5
90027ae6:	4601      	mov	r1, r0
90027ae8:	4620      	mov	r0, r4
90027aea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90027aee:	f000 b84b 	b.w	90027b88 <_kill_r>
90027af2:	2b01      	cmp	r3, #1
90027af4:	d00a      	beq.n	90027b0c <_raise_r+0x4c>
90027af6:	1c59      	adds	r1, r3, #1
90027af8:	d103      	bne.n	90027b02 <_raise_r+0x42>
90027afa:	2316      	movs	r3, #22
90027afc:	6003      	str	r3, [r0, #0]
90027afe:	2001      	movs	r0, #1
90027b00:	e7e7      	b.n	90027ad2 <_raise_r+0x12>
90027b02:	2400      	movs	r4, #0
90027b04:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
90027b08:	4628      	mov	r0, r5
90027b0a:	4798      	blx	r3
90027b0c:	2000      	movs	r0, #0
90027b0e:	e7e0      	b.n	90027ad2 <_raise_r+0x12>

90027b10 <raise>:
90027b10:	4b02      	ldr	r3, [pc, #8]	; (90027b1c <raise+0xc>)
90027b12:	4601      	mov	r1, r0
90027b14:	6818      	ldr	r0, [r3, #0]
90027b16:	f7ff bfd3 	b.w	90027ac0 <_raise_r>
90027b1a:	bf00      	nop
90027b1c:	24000158 	.word	0x24000158

90027b20 <_close_r>:
90027b20:	b538      	push	{r3, r4, r5, lr}
90027b22:	4d06      	ldr	r5, [pc, #24]	; (90027b3c <_close_r+0x1c>)
90027b24:	2300      	movs	r3, #0
90027b26:	4604      	mov	r4, r0
90027b28:	4608      	mov	r0, r1
90027b2a:	602b      	str	r3, [r5, #0]
90027b2c:	f7db fd04 	bl	90003538 <_close>
90027b30:	1c43      	adds	r3, r0, #1
90027b32:	d102      	bne.n	90027b3a <_close_r+0x1a>
90027b34:	682b      	ldr	r3, [r5, #0]
90027b36:	b103      	cbz	r3, 90027b3a <_close_r+0x1a>
90027b38:	6023      	str	r3, [r4, #0]
90027b3a:	bd38      	pop	{r3, r4, r5, pc}
90027b3c:	2403a19c 	.word	0x2403a19c

90027b40 <_lseek_r>:
90027b40:	b538      	push	{r3, r4, r5, lr}
90027b42:	4d07      	ldr	r5, [pc, #28]	; (90027b60 <_lseek_r+0x20>)
90027b44:	4604      	mov	r4, r0
90027b46:	4608      	mov	r0, r1
90027b48:	4611      	mov	r1, r2
90027b4a:	2200      	movs	r2, #0
90027b4c:	602a      	str	r2, [r5, #0]
90027b4e:	461a      	mov	r2, r3
90027b50:	f7db fcfe 	bl	90003550 <_lseek>
90027b54:	1c43      	adds	r3, r0, #1
90027b56:	d102      	bne.n	90027b5e <_lseek_r+0x1e>
90027b58:	682b      	ldr	r3, [r5, #0]
90027b5a:	b103      	cbz	r3, 90027b5e <_lseek_r+0x1e>
90027b5c:	6023      	str	r3, [r4, #0]
90027b5e:	bd38      	pop	{r3, r4, r5, pc}
90027b60:	2403a19c 	.word	0x2403a19c

90027b64 <_read_r>:
90027b64:	b538      	push	{r3, r4, r5, lr}
90027b66:	4d07      	ldr	r5, [pc, #28]	; (90027b84 <_read_r+0x20>)
90027b68:	4604      	mov	r4, r0
90027b6a:	4608      	mov	r0, r1
90027b6c:	4611      	mov	r1, r2
90027b6e:	2200      	movs	r2, #0
90027b70:	602a      	str	r2, [r5, #0]
90027b72:	461a      	mov	r2, r3
90027b74:	f7db fcc4 	bl	90003500 <_read>
90027b78:	1c43      	adds	r3, r0, #1
90027b7a:	d102      	bne.n	90027b82 <_read_r+0x1e>
90027b7c:	682b      	ldr	r3, [r5, #0]
90027b7e:	b103      	cbz	r3, 90027b82 <_read_r+0x1e>
90027b80:	6023      	str	r3, [r4, #0]
90027b82:	bd38      	pop	{r3, r4, r5, pc}
90027b84:	2403a19c 	.word	0x2403a19c

90027b88 <_kill_r>:
90027b88:	b538      	push	{r3, r4, r5, lr}
90027b8a:	4d07      	ldr	r5, [pc, #28]	; (90027ba8 <_kill_r+0x20>)
90027b8c:	2300      	movs	r3, #0
90027b8e:	4604      	mov	r4, r0
90027b90:	4608      	mov	r0, r1
90027b92:	4611      	mov	r1, r2
90027b94:	602b      	str	r3, [r5, #0]
90027b96:	f7db fca3 	bl	900034e0 <_kill>
90027b9a:	1c43      	adds	r3, r0, #1
90027b9c:	d102      	bne.n	90027ba4 <_kill_r+0x1c>
90027b9e:	682b      	ldr	r3, [r5, #0]
90027ba0:	b103      	cbz	r3, 90027ba4 <_kill_r+0x1c>
90027ba2:	6023      	str	r3, [r4, #0]
90027ba4:	bd38      	pop	{r3, r4, r5, pc}
90027ba6:	bf00      	nop
90027ba8:	2403a19c 	.word	0x2403a19c

90027bac <_getpid_r>:
90027bac:	f7db bc96 	b.w	900034dc <_getpid>

90027bb0 <_sbrk_r>:
90027bb0:	b538      	push	{r3, r4, r5, lr}
90027bb2:	4d06      	ldr	r5, [pc, #24]	; (90027bcc <_sbrk_r+0x1c>)
90027bb4:	2300      	movs	r3, #0
90027bb6:	4604      	mov	r4, r0
90027bb8:	4608      	mov	r0, r1
90027bba:	602b      	str	r3, [r5, #0]
90027bbc:	f000 fd04 	bl	900285c8 <_sbrk>
90027bc0:	1c43      	adds	r3, r0, #1
90027bc2:	d102      	bne.n	90027bca <_sbrk_r+0x1a>
90027bc4:	682b      	ldr	r3, [r5, #0]
90027bc6:	b103      	cbz	r3, 90027bca <_sbrk_r+0x1a>
90027bc8:	6023      	str	r3, [r4, #0]
90027bca:	bd38      	pop	{r3, r4, r5, pc}
90027bcc:	2403a19c 	.word	0x2403a19c

90027bd0 <_write_r>:
90027bd0:	b538      	push	{r3, r4, r5, lr}
90027bd2:	4d07      	ldr	r5, [pc, #28]	; (90027bf0 <_write_r+0x20>)
90027bd4:	4604      	mov	r4, r0
90027bd6:	4608      	mov	r0, r1
90027bd8:	4611      	mov	r1, r2
90027bda:	2200      	movs	r2, #0
90027bdc:	602a      	str	r2, [r5, #0]
90027bde:	461a      	mov	r2, r3
90027be0:	f7db fc9c 	bl	9000351c <_write>
90027be4:	1c43      	adds	r3, r0, #1
90027be6:	d102      	bne.n	90027bee <_write_r+0x1e>
90027be8:	682b      	ldr	r3, [r5, #0]
90027bea:	b103      	cbz	r3, 90027bee <_write_r+0x1e>
90027bec:	6023      	str	r3, [r4, #0]
90027bee:	bd38      	pop	{r3, r4, r5, pc}
90027bf0:	2403a19c 	.word	0x2403a19c

90027bf4 <__errno>:
90027bf4:	4b01      	ldr	r3, [pc, #4]	; (90027bfc <__errno+0x8>)
90027bf6:	6818      	ldr	r0, [r3, #0]
90027bf8:	4770      	bx	lr
90027bfa:	bf00      	nop
90027bfc:	24000158 	.word	0x24000158

90027c00 <__libc_init_array>:
90027c00:	b570      	push	{r4, r5, r6, lr}
90027c02:	4d0d      	ldr	r5, [pc, #52]	; (90027c38 <__libc_init_array+0x38>)
90027c04:	4c0d      	ldr	r4, [pc, #52]	; (90027c3c <__libc_init_array+0x3c>)
90027c06:	1b64      	subs	r4, r4, r5
90027c08:	10a4      	asrs	r4, r4, #2
90027c0a:	2600      	movs	r6, #0
90027c0c:	42a6      	cmp	r6, r4
90027c0e:	d109      	bne.n	90027c24 <__libc_init_array+0x24>
90027c10:	4d0b      	ldr	r5, [pc, #44]	; (90027c40 <__libc_init_array+0x40>)
90027c12:	4c0c      	ldr	r4, [pc, #48]	; (90027c44 <__libc_init_array+0x44>)
90027c14:	f000 fce6 	bl	900285e4 <_init>
90027c18:	1b64      	subs	r4, r4, r5
90027c1a:	10a4      	asrs	r4, r4, #2
90027c1c:	2600      	movs	r6, #0
90027c1e:	42a6      	cmp	r6, r4
90027c20:	d105      	bne.n	90027c2e <__libc_init_array+0x2e>
90027c22:	bd70      	pop	{r4, r5, r6, pc}
90027c24:	f855 3b04 	ldr.w	r3, [r5], #4
90027c28:	4798      	blx	r3
90027c2a:	3601      	adds	r6, #1
90027c2c:	e7ee      	b.n	90027c0c <__libc_init_array+0xc>
90027c2e:	f855 3b04 	ldr.w	r3, [r5], #4
90027c32:	4798      	blx	r3
90027c34:	3601      	adds	r6, #1
90027c36:	e7f2      	b.n	90027c1e <__libc_init_array+0x1e>
90027c38:	9002be98 	.word	0x9002be98
90027c3c:	9002be98 	.word	0x9002be98
90027c40:	9002be98 	.word	0x9002be98
90027c44:	9002beb4 	.word	0x9002beb4

90027c48 <__retarget_lock_acquire_recursive>:
90027c48:	4770      	bx	lr

90027c4a <__retarget_lock_release_recursive>:
90027c4a:	4770      	bx	lr

90027c4c <memcpy>:
90027c4c:	440a      	add	r2, r1
90027c4e:	4291      	cmp	r1, r2
90027c50:	f100 33ff 	add.w	r3, r0, #4294967295
90027c54:	d100      	bne.n	90027c58 <memcpy+0xc>
90027c56:	4770      	bx	lr
90027c58:	b510      	push	{r4, lr}
90027c5a:	f811 4b01 	ldrb.w	r4, [r1], #1
90027c5e:	f803 4f01 	strb.w	r4, [r3, #1]!
90027c62:	4291      	cmp	r1, r2
90027c64:	d1f9      	bne.n	90027c5a <memcpy+0xe>
90027c66:	bd10      	pop	{r4, pc}

90027c68 <__register_exitproc>:
90027c68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027c6c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90027d20 <__register_exitproc+0xb8>
90027c70:	4606      	mov	r6, r0
90027c72:	f8d8 0000 	ldr.w	r0, [r8]
90027c76:	461f      	mov	r7, r3
90027c78:	460d      	mov	r5, r1
90027c7a:	4691      	mov	r9, r2
90027c7c:	f7ff ffe4 	bl	90027c48 <__retarget_lock_acquire_recursive>
90027c80:	4b23      	ldr	r3, [pc, #140]	; (90027d10 <__register_exitproc+0xa8>)
90027c82:	681c      	ldr	r4, [r3, #0]
90027c84:	b934      	cbnz	r4, 90027c94 <__register_exitproc+0x2c>
90027c86:	4c23      	ldr	r4, [pc, #140]	; (90027d14 <__register_exitproc+0xac>)
90027c88:	601c      	str	r4, [r3, #0]
90027c8a:	4b23      	ldr	r3, [pc, #140]	; (90027d18 <__register_exitproc+0xb0>)
90027c8c:	b113      	cbz	r3, 90027c94 <__register_exitproc+0x2c>
90027c8e:	681b      	ldr	r3, [r3, #0]
90027c90:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90027c94:	6863      	ldr	r3, [r4, #4]
90027c96:	2b1f      	cmp	r3, #31
90027c98:	dd07      	ble.n	90027caa <__register_exitproc+0x42>
90027c9a:	f8d8 0000 	ldr.w	r0, [r8]
90027c9e:	f7ff ffd4 	bl	90027c4a <__retarget_lock_release_recursive>
90027ca2:	f04f 30ff 	mov.w	r0, #4294967295
90027ca6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027caa:	b32e      	cbz	r6, 90027cf8 <__register_exitproc+0x90>
90027cac:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90027cb0:	b968      	cbnz	r0, 90027cce <__register_exitproc+0x66>
90027cb2:	4b1a      	ldr	r3, [pc, #104]	; (90027d1c <__register_exitproc+0xb4>)
90027cb4:	2b00      	cmp	r3, #0
90027cb6:	d0f0      	beq.n	90027c9a <__register_exitproc+0x32>
90027cb8:	f44f 7084 	mov.w	r0, #264	; 0x108
90027cbc:	f7ff fc82 	bl	900275c4 <malloc>
90027cc0:	2800      	cmp	r0, #0
90027cc2:	d0ea      	beq.n	90027c9a <__register_exitproc+0x32>
90027cc4:	2300      	movs	r3, #0
90027cc6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90027cca:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90027cce:	6863      	ldr	r3, [r4, #4]
90027cd0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90027cd4:	2201      	movs	r2, #1
90027cd6:	409a      	lsls	r2, r3
90027cd8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90027cdc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90027ce0:	4313      	orrs	r3, r2
90027ce2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90027ce6:	2e02      	cmp	r6, #2
90027ce8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90027cec:	bf02      	ittt	eq
90027cee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90027cf2:	4313      	orreq	r3, r2
90027cf4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90027cf8:	6863      	ldr	r3, [r4, #4]
90027cfa:	f8d8 0000 	ldr.w	r0, [r8]
90027cfe:	1c5a      	adds	r2, r3, #1
90027d00:	3302      	adds	r3, #2
90027d02:	6062      	str	r2, [r4, #4]
90027d04:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90027d08:	f7ff ff9f 	bl	90027c4a <__retarget_lock_release_recursive>
90027d0c:	2000      	movs	r0, #0
90027d0e:	e7ca      	b.n	90027ca6 <__register_exitproc+0x3e>
90027d10:	2403a230 	.word	0x2403a230
90027d14:	2403a1a4 	.word	0x2403a1a4
90027d18:	9002bd58 	.word	0x9002bd58
90027d1c:	900275c5 	.word	0x900275c5
90027d20:	2400015c 	.word	0x2400015c

90027d24 <_free_r>:
90027d24:	b537      	push	{r0, r1, r2, r4, r5, lr}
90027d26:	2900      	cmp	r1, #0
90027d28:	d044      	beq.n	90027db4 <_free_r+0x90>
90027d2a:	f851 3c04 	ldr.w	r3, [r1, #-4]
90027d2e:	9001      	str	r0, [sp, #4]
90027d30:	2b00      	cmp	r3, #0
90027d32:	f1a1 0404 	sub.w	r4, r1, #4
90027d36:	bfb8      	it	lt
90027d38:	18e4      	addlt	r4, r4, r3
90027d3a:	f7ff fcf3 	bl	90027724 <__malloc_lock>
90027d3e:	4a1e      	ldr	r2, [pc, #120]	; (90027db8 <_free_r+0x94>)
90027d40:	9801      	ldr	r0, [sp, #4]
90027d42:	6813      	ldr	r3, [r2, #0]
90027d44:	b933      	cbnz	r3, 90027d54 <_free_r+0x30>
90027d46:	6063      	str	r3, [r4, #4]
90027d48:	6014      	str	r4, [r2, #0]
90027d4a:	b003      	add	sp, #12
90027d4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90027d50:	f7ff bcee 	b.w	90027730 <__malloc_unlock>
90027d54:	42a3      	cmp	r3, r4
90027d56:	d908      	bls.n	90027d6a <_free_r+0x46>
90027d58:	6825      	ldr	r5, [r4, #0]
90027d5a:	1961      	adds	r1, r4, r5
90027d5c:	428b      	cmp	r3, r1
90027d5e:	bf01      	itttt	eq
90027d60:	6819      	ldreq	r1, [r3, #0]
90027d62:	685b      	ldreq	r3, [r3, #4]
90027d64:	1949      	addeq	r1, r1, r5
90027d66:	6021      	streq	r1, [r4, #0]
90027d68:	e7ed      	b.n	90027d46 <_free_r+0x22>
90027d6a:	461a      	mov	r2, r3
90027d6c:	685b      	ldr	r3, [r3, #4]
90027d6e:	b10b      	cbz	r3, 90027d74 <_free_r+0x50>
90027d70:	42a3      	cmp	r3, r4
90027d72:	d9fa      	bls.n	90027d6a <_free_r+0x46>
90027d74:	6811      	ldr	r1, [r2, #0]
90027d76:	1855      	adds	r5, r2, r1
90027d78:	42a5      	cmp	r5, r4
90027d7a:	d10b      	bne.n	90027d94 <_free_r+0x70>
90027d7c:	6824      	ldr	r4, [r4, #0]
90027d7e:	4421      	add	r1, r4
90027d80:	1854      	adds	r4, r2, r1
90027d82:	42a3      	cmp	r3, r4
90027d84:	6011      	str	r1, [r2, #0]
90027d86:	d1e0      	bne.n	90027d4a <_free_r+0x26>
90027d88:	681c      	ldr	r4, [r3, #0]
90027d8a:	685b      	ldr	r3, [r3, #4]
90027d8c:	6053      	str	r3, [r2, #4]
90027d8e:	440c      	add	r4, r1
90027d90:	6014      	str	r4, [r2, #0]
90027d92:	e7da      	b.n	90027d4a <_free_r+0x26>
90027d94:	d902      	bls.n	90027d9c <_free_r+0x78>
90027d96:	230c      	movs	r3, #12
90027d98:	6003      	str	r3, [r0, #0]
90027d9a:	e7d6      	b.n	90027d4a <_free_r+0x26>
90027d9c:	6825      	ldr	r5, [r4, #0]
90027d9e:	1961      	adds	r1, r4, r5
90027da0:	428b      	cmp	r3, r1
90027da2:	bf04      	itt	eq
90027da4:	6819      	ldreq	r1, [r3, #0]
90027da6:	685b      	ldreq	r3, [r3, #4]
90027da8:	6063      	str	r3, [r4, #4]
90027daa:	bf04      	itt	eq
90027dac:	1949      	addeq	r1, r1, r5
90027dae:	6021      	streq	r1, [r4, #0]
90027db0:	6054      	str	r4, [r2, #4]
90027db2:	e7ca      	b.n	90027d4a <_free_r+0x26>
90027db4:	b003      	add	sp, #12
90027db6:	bd30      	pop	{r4, r5, pc}
90027db8:	2403a058 	.word	0x2403a058

90027dbc <__sfputc_r>:
90027dbc:	6893      	ldr	r3, [r2, #8]
90027dbe:	3b01      	subs	r3, #1
90027dc0:	2b00      	cmp	r3, #0
90027dc2:	b410      	push	{r4}
90027dc4:	6093      	str	r3, [r2, #8]
90027dc6:	da08      	bge.n	90027dda <__sfputc_r+0x1e>
90027dc8:	6994      	ldr	r4, [r2, #24]
90027dca:	42a3      	cmp	r3, r4
90027dcc:	db01      	blt.n	90027dd2 <__sfputc_r+0x16>
90027dce:	290a      	cmp	r1, #10
90027dd0:	d103      	bne.n	90027dda <__sfputc_r+0x1e>
90027dd2:	f85d 4b04 	ldr.w	r4, [sp], #4
90027dd6:	f7ff bdc4 	b.w	90027962 <__swbuf_r>
90027dda:	6813      	ldr	r3, [r2, #0]
90027ddc:	1c58      	adds	r0, r3, #1
90027dde:	6010      	str	r0, [r2, #0]
90027de0:	7019      	strb	r1, [r3, #0]
90027de2:	4608      	mov	r0, r1
90027de4:	f85d 4b04 	ldr.w	r4, [sp], #4
90027de8:	4770      	bx	lr

90027dea <__sfputs_r>:
90027dea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027dec:	4606      	mov	r6, r0
90027dee:	460f      	mov	r7, r1
90027df0:	4614      	mov	r4, r2
90027df2:	18d5      	adds	r5, r2, r3
90027df4:	42ac      	cmp	r4, r5
90027df6:	d101      	bne.n	90027dfc <__sfputs_r+0x12>
90027df8:	2000      	movs	r0, #0
90027dfa:	e007      	b.n	90027e0c <__sfputs_r+0x22>
90027dfc:	f814 1b01 	ldrb.w	r1, [r4], #1
90027e00:	463a      	mov	r2, r7
90027e02:	4630      	mov	r0, r6
90027e04:	f7ff ffda 	bl	90027dbc <__sfputc_r>
90027e08:	1c43      	adds	r3, r0, #1
90027e0a:	d1f3      	bne.n	90027df4 <__sfputs_r+0xa>
90027e0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90027e10 <_vfiprintf_r>:
90027e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027e14:	460d      	mov	r5, r1
90027e16:	b09d      	sub	sp, #116	; 0x74
90027e18:	4614      	mov	r4, r2
90027e1a:	4698      	mov	r8, r3
90027e1c:	4606      	mov	r6, r0
90027e1e:	b118      	cbz	r0, 90027e28 <_vfiprintf_r+0x18>
90027e20:	6a03      	ldr	r3, [r0, #32]
90027e22:	b90b      	cbnz	r3, 90027e28 <_vfiprintf_r+0x18>
90027e24:	f7ff fd12 	bl	9002784c <__sinit>
90027e28:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90027e2a:	07d9      	lsls	r1, r3, #31
90027e2c:	d405      	bmi.n	90027e3a <_vfiprintf_r+0x2a>
90027e2e:	89ab      	ldrh	r3, [r5, #12]
90027e30:	059a      	lsls	r2, r3, #22
90027e32:	d402      	bmi.n	90027e3a <_vfiprintf_r+0x2a>
90027e34:	6da8      	ldr	r0, [r5, #88]	; 0x58
90027e36:	f7ff ff07 	bl	90027c48 <__retarget_lock_acquire_recursive>
90027e3a:	89ab      	ldrh	r3, [r5, #12]
90027e3c:	071b      	lsls	r3, r3, #28
90027e3e:	d501      	bpl.n	90027e44 <_vfiprintf_r+0x34>
90027e40:	692b      	ldr	r3, [r5, #16]
90027e42:	b99b      	cbnz	r3, 90027e6c <_vfiprintf_r+0x5c>
90027e44:	4629      	mov	r1, r5
90027e46:	4630      	mov	r0, r6
90027e48:	f7ff fdc8 	bl	900279dc <__swsetup_r>
90027e4c:	b170      	cbz	r0, 90027e6c <_vfiprintf_r+0x5c>
90027e4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90027e50:	07dc      	lsls	r4, r3, #31
90027e52:	d504      	bpl.n	90027e5e <_vfiprintf_r+0x4e>
90027e54:	f04f 30ff 	mov.w	r0, #4294967295
90027e58:	b01d      	add	sp, #116	; 0x74
90027e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027e5e:	89ab      	ldrh	r3, [r5, #12]
90027e60:	0598      	lsls	r0, r3, #22
90027e62:	d4f7      	bmi.n	90027e54 <_vfiprintf_r+0x44>
90027e64:	6da8      	ldr	r0, [r5, #88]	; 0x58
90027e66:	f7ff fef0 	bl	90027c4a <__retarget_lock_release_recursive>
90027e6a:	e7f3      	b.n	90027e54 <_vfiprintf_r+0x44>
90027e6c:	2300      	movs	r3, #0
90027e6e:	9309      	str	r3, [sp, #36]	; 0x24
90027e70:	2320      	movs	r3, #32
90027e72:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90027e76:	f8cd 800c 	str.w	r8, [sp, #12]
90027e7a:	2330      	movs	r3, #48	; 0x30
90027e7c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90028030 <_vfiprintf_r+0x220>
90027e80:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90027e84:	f04f 0901 	mov.w	r9, #1
90027e88:	4623      	mov	r3, r4
90027e8a:	469a      	mov	sl, r3
90027e8c:	f813 2b01 	ldrb.w	r2, [r3], #1
90027e90:	b10a      	cbz	r2, 90027e96 <_vfiprintf_r+0x86>
90027e92:	2a25      	cmp	r2, #37	; 0x25
90027e94:	d1f9      	bne.n	90027e8a <_vfiprintf_r+0x7a>
90027e96:	ebba 0b04 	subs.w	fp, sl, r4
90027e9a:	d00b      	beq.n	90027eb4 <_vfiprintf_r+0xa4>
90027e9c:	465b      	mov	r3, fp
90027e9e:	4622      	mov	r2, r4
90027ea0:	4629      	mov	r1, r5
90027ea2:	4630      	mov	r0, r6
90027ea4:	f7ff ffa1 	bl	90027dea <__sfputs_r>
90027ea8:	3001      	adds	r0, #1
90027eaa:	f000 80a9 	beq.w	90028000 <_vfiprintf_r+0x1f0>
90027eae:	9a09      	ldr	r2, [sp, #36]	; 0x24
90027eb0:	445a      	add	r2, fp
90027eb2:	9209      	str	r2, [sp, #36]	; 0x24
90027eb4:	f89a 3000 	ldrb.w	r3, [sl]
90027eb8:	2b00      	cmp	r3, #0
90027eba:	f000 80a1 	beq.w	90028000 <_vfiprintf_r+0x1f0>
90027ebe:	2300      	movs	r3, #0
90027ec0:	f04f 32ff 	mov.w	r2, #4294967295
90027ec4:	e9cd 2305 	strd	r2, r3, [sp, #20]
90027ec8:	f10a 0a01 	add.w	sl, sl, #1
90027ecc:	9304      	str	r3, [sp, #16]
90027ece:	9307      	str	r3, [sp, #28]
90027ed0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90027ed4:	931a      	str	r3, [sp, #104]	; 0x68
90027ed6:	4654      	mov	r4, sl
90027ed8:	2205      	movs	r2, #5
90027eda:	f814 1b01 	ldrb.w	r1, [r4], #1
90027ede:	4854      	ldr	r0, [pc, #336]	; (90028030 <_vfiprintf_r+0x220>)
90027ee0:	f7d8 f9fe 	bl	900002e0 <memchr>
90027ee4:	9a04      	ldr	r2, [sp, #16]
90027ee6:	b9d8      	cbnz	r0, 90027f20 <_vfiprintf_r+0x110>
90027ee8:	06d1      	lsls	r1, r2, #27
90027eea:	bf44      	itt	mi
90027eec:	2320      	movmi	r3, #32
90027eee:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90027ef2:	0713      	lsls	r3, r2, #28
90027ef4:	bf44      	itt	mi
90027ef6:	232b      	movmi	r3, #43	; 0x2b
90027ef8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90027efc:	f89a 3000 	ldrb.w	r3, [sl]
90027f00:	2b2a      	cmp	r3, #42	; 0x2a
90027f02:	d015      	beq.n	90027f30 <_vfiprintf_r+0x120>
90027f04:	9a07      	ldr	r2, [sp, #28]
90027f06:	4654      	mov	r4, sl
90027f08:	2000      	movs	r0, #0
90027f0a:	f04f 0c0a 	mov.w	ip, #10
90027f0e:	4621      	mov	r1, r4
90027f10:	f811 3b01 	ldrb.w	r3, [r1], #1
90027f14:	3b30      	subs	r3, #48	; 0x30
90027f16:	2b09      	cmp	r3, #9
90027f18:	d94d      	bls.n	90027fb6 <_vfiprintf_r+0x1a6>
90027f1a:	b1b0      	cbz	r0, 90027f4a <_vfiprintf_r+0x13a>
90027f1c:	9207      	str	r2, [sp, #28]
90027f1e:	e014      	b.n	90027f4a <_vfiprintf_r+0x13a>
90027f20:	eba0 0308 	sub.w	r3, r0, r8
90027f24:	fa09 f303 	lsl.w	r3, r9, r3
90027f28:	4313      	orrs	r3, r2
90027f2a:	9304      	str	r3, [sp, #16]
90027f2c:	46a2      	mov	sl, r4
90027f2e:	e7d2      	b.n	90027ed6 <_vfiprintf_r+0xc6>
90027f30:	9b03      	ldr	r3, [sp, #12]
90027f32:	1d19      	adds	r1, r3, #4
90027f34:	681b      	ldr	r3, [r3, #0]
90027f36:	9103      	str	r1, [sp, #12]
90027f38:	2b00      	cmp	r3, #0
90027f3a:	bfbb      	ittet	lt
90027f3c:	425b      	neglt	r3, r3
90027f3e:	f042 0202 	orrlt.w	r2, r2, #2
90027f42:	9307      	strge	r3, [sp, #28]
90027f44:	9307      	strlt	r3, [sp, #28]
90027f46:	bfb8      	it	lt
90027f48:	9204      	strlt	r2, [sp, #16]
90027f4a:	7823      	ldrb	r3, [r4, #0]
90027f4c:	2b2e      	cmp	r3, #46	; 0x2e
90027f4e:	d10c      	bne.n	90027f6a <_vfiprintf_r+0x15a>
90027f50:	7863      	ldrb	r3, [r4, #1]
90027f52:	2b2a      	cmp	r3, #42	; 0x2a
90027f54:	d134      	bne.n	90027fc0 <_vfiprintf_r+0x1b0>
90027f56:	9b03      	ldr	r3, [sp, #12]
90027f58:	1d1a      	adds	r2, r3, #4
90027f5a:	681b      	ldr	r3, [r3, #0]
90027f5c:	9203      	str	r2, [sp, #12]
90027f5e:	2b00      	cmp	r3, #0
90027f60:	bfb8      	it	lt
90027f62:	f04f 33ff 	movlt.w	r3, #4294967295
90027f66:	3402      	adds	r4, #2
90027f68:	9305      	str	r3, [sp, #20]
90027f6a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90028040 <_vfiprintf_r+0x230>
90027f6e:	7821      	ldrb	r1, [r4, #0]
90027f70:	2203      	movs	r2, #3
90027f72:	4650      	mov	r0, sl
90027f74:	f7d8 f9b4 	bl	900002e0 <memchr>
90027f78:	b138      	cbz	r0, 90027f8a <_vfiprintf_r+0x17a>
90027f7a:	9b04      	ldr	r3, [sp, #16]
90027f7c:	eba0 000a 	sub.w	r0, r0, sl
90027f80:	2240      	movs	r2, #64	; 0x40
90027f82:	4082      	lsls	r2, r0
90027f84:	4313      	orrs	r3, r2
90027f86:	3401      	adds	r4, #1
90027f88:	9304      	str	r3, [sp, #16]
90027f8a:	f814 1b01 	ldrb.w	r1, [r4], #1
90027f8e:	4829      	ldr	r0, [pc, #164]	; (90028034 <_vfiprintf_r+0x224>)
90027f90:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90027f94:	2206      	movs	r2, #6
90027f96:	f7d8 f9a3 	bl	900002e0 <memchr>
90027f9a:	2800      	cmp	r0, #0
90027f9c:	d03f      	beq.n	9002801e <_vfiprintf_r+0x20e>
90027f9e:	4b26      	ldr	r3, [pc, #152]	; (90028038 <_vfiprintf_r+0x228>)
90027fa0:	bb1b      	cbnz	r3, 90027fea <_vfiprintf_r+0x1da>
90027fa2:	9b03      	ldr	r3, [sp, #12]
90027fa4:	3307      	adds	r3, #7
90027fa6:	f023 0307 	bic.w	r3, r3, #7
90027faa:	3308      	adds	r3, #8
90027fac:	9303      	str	r3, [sp, #12]
90027fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027fb0:	443b      	add	r3, r7
90027fb2:	9309      	str	r3, [sp, #36]	; 0x24
90027fb4:	e768      	b.n	90027e88 <_vfiprintf_r+0x78>
90027fb6:	fb0c 3202 	mla	r2, ip, r2, r3
90027fba:	460c      	mov	r4, r1
90027fbc:	2001      	movs	r0, #1
90027fbe:	e7a6      	b.n	90027f0e <_vfiprintf_r+0xfe>
90027fc0:	2300      	movs	r3, #0
90027fc2:	3401      	adds	r4, #1
90027fc4:	9305      	str	r3, [sp, #20]
90027fc6:	4619      	mov	r1, r3
90027fc8:	f04f 0c0a 	mov.w	ip, #10
90027fcc:	4620      	mov	r0, r4
90027fce:	f810 2b01 	ldrb.w	r2, [r0], #1
90027fd2:	3a30      	subs	r2, #48	; 0x30
90027fd4:	2a09      	cmp	r2, #9
90027fd6:	d903      	bls.n	90027fe0 <_vfiprintf_r+0x1d0>
90027fd8:	2b00      	cmp	r3, #0
90027fda:	d0c6      	beq.n	90027f6a <_vfiprintf_r+0x15a>
90027fdc:	9105      	str	r1, [sp, #20]
90027fde:	e7c4      	b.n	90027f6a <_vfiprintf_r+0x15a>
90027fe0:	fb0c 2101 	mla	r1, ip, r1, r2
90027fe4:	4604      	mov	r4, r0
90027fe6:	2301      	movs	r3, #1
90027fe8:	e7f0      	b.n	90027fcc <_vfiprintf_r+0x1bc>
90027fea:	ab03      	add	r3, sp, #12
90027fec:	9300      	str	r3, [sp, #0]
90027fee:	462a      	mov	r2, r5
90027ff0:	4b12      	ldr	r3, [pc, #72]	; (9002803c <_vfiprintf_r+0x22c>)
90027ff2:	a904      	add	r1, sp, #16
90027ff4:	4630      	mov	r0, r6
90027ff6:	f3af 8000 	nop.w
90027ffa:	4607      	mov	r7, r0
90027ffc:	1c78      	adds	r0, r7, #1
90027ffe:	d1d6      	bne.n	90027fae <_vfiprintf_r+0x19e>
90028000:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028002:	07d9      	lsls	r1, r3, #31
90028004:	d405      	bmi.n	90028012 <_vfiprintf_r+0x202>
90028006:	89ab      	ldrh	r3, [r5, #12]
90028008:	059a      	lsls	r2, r3, #22
9002800a:	d402      	bmi.n	90028012 <_vfiprintf_r+0x202>
9002800c:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002800e:	f7ff fe1c 	bl	90027c4a <__retarget_lock_release_recursive>
90028012:	89ab      	ldrh	r3, [r5, #12]
90028014:	065b      	lsls	r3, r3, #25
90028016:	f53f af1d 	bmi.w	90027e54 <_vfiprintf_r+0x44>
9002801a:	9809      	ldr	r0, [sp, #36]	; 0x24
9002801c:	e71c      	b.n	90027e58 <_vfiprintf_r+0x48>
9002801e:	ab03      	add	r3, sp, #12
90028020:	9300      	str	r3, [sp, #0]
90028022:	462a      	mov	r2, r5
90028024:	4b05      	ldr	r3, [pc, #20]	; (9002803c <_vfiprintf_r+0x22c>)
90028026:	a904      	add	r1, sp, #16
90028028:	4630      	mov	r0, r6
9002802a:	f000 f879 	bl	90028120 <_printf_i>
9002802e:	e7e4      	b.n	90027ffa <_vfiprintf_r+0x1ea>
90028030:	9002bd5c 	.word	0x9002bd5c
90028034:	9002bd66 	.word	0x9002bd66
90028038:	00000000 	.word	0x00000000
9002803c:	90027deb 	.word	0x90027deb
90028040:	9002bd62 	.word	0x9002bd62

90028044 <_printf_common>:
90028044:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028048:	4616      	mov	r6, r2
9002804a:	4699      	mov	r9, r3
9002804c:	688a      	ldr	r2, [r1, #8]
9002804e:	690b      	ldr	r3, [r1, #16]
90028050:	f8dd 8020 	ldr.w	r8, [sp, #32]
90028054:	4293      	cmp	r3, r2
90028056:	bfb8      	it	lt
90028058:	4613      	movlt	r3, r2
9002805a:	6033      	str	r3, [r6, #0]
9002805c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90028060:	4607      	mov	r7, r0
90028062:	460c      	mov	r4, r1
90028064:	b10a      	cbz	r2, 9002806a <_printf_common+0x26>
90028066:	3301      	adds	r3, #1
90028068:	6033      	str	r3, [r6, #0]
9002806a:	6823      	ldr	r3, [r4, #0]
9002806c:	0699      	lsls	r1, r3, #26
9002806e:	bf42      	ittt	mi
90028070:	6833      	ldrmi	r3, [r6, #0]
90028072:	3302      	addmi	r3, #2
90028074:	6033      	strmi	r3, [r6, #0]
90028076:	6825      	ldr	r5, [r4, #0]
90028078:	f015 0506 	ands.w	r5, r5, #6
9002807c:	d106      	bne.n	9002808c <_printf_common+0x48>
9002807e:	f104 0a19 	add.w	sl, r4, #25
90028082:	68e3      	ldr	r3, [r4, #12]
90028084:	6832      	ldr	r2, [r6, #0]
90028086:	1a9b      	subs	r3, r3, r2
90028088:	42ab      	cmp	r3, r5
9002808a:	dc26      	bgt.n	900280da <_printf_common+0x96>
9002808c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90028090:	1e13      	subs	r3, r2, #0
90028092:	6822      	ldr	r2, [r4, #0]
90028094:	bf18      	it	ne
90028096:	2301      	movne	r3, #1
90028098:	0692      	lsls	r2, r2, #26
9002809a:	d42b      	bmi.n	900280f4 <_printf_common+0xb0>
9002809c:	f104 0243 	add.w	r2, r4, #67	; 0x43
900280a0:	4649      	mov	r1, r9
900280a2:	4638      	mov	r0, r7
900280a4:	47c0      	blx	r8
900280a6:	3001      	adds	r0, #1
900280a8:	d01e      	beq.n	900280e8 <_printf_common+0xa4>
900280aa:	6823      	ldr	r3, [r4, #0]
900280ac:	6922      	ldr	r2, [r4, #16]
900280ae:	f003 0306 	and.w	r3, r3, #6
900280b2:	2b04      	cmp	r3, #4
900280b4:	bf02      	ittt	eq
900280b6:	68e5      	ldreq	r5, [r4, #12]
900280b8:	6833      	ldreq	r3, [r6, #0]
900280ba:	1aed      	subeq	r5, r5, r3
900280bc:	68a3      	ldr	r3, [r4, #8]
900280be:	bf0c      	ite	eq
900280c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
900280c4:	2500      	movne	r5, #0
900280c6:	4293      	cmp	r3, r2
900280c8:	bfc4      	itt	gt
900280ca:	1a9b      	subgt	r3, r3, r2
900280cc:	18ed      	addgt	r5, r5, r3
900280ce:	2600      	movs	r6, #0
900280d0:	341a      	adds	r4, #26
900280d2:	42b5      	cmp	r5, r6
900280d4:	d11a      	bne.n	9002810c <_printf_common+0xc8>
900280d6:	2000      	movs	r0, #0
900280d8:	e008      	b.n	900280ec <_printf_common+0xa8>
900280da:	2301      	movs	r3, #1
900280dc:	4652      	mov	r2, sl
900280de:	4649      	mov	r1, r9
900280e0:	4638      	mov	r0, r7
900280e2:	47c0      	blx	r8
900280e4:	3001      	adds	r0, #1
900280e6:	d103      	bne.n	900280f0 <_printf_common+0xac>
900280e8:	f04f 30ff 	mov.w	r0, #4294967295
900280ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900280f0:	3501      	adds	r5, #1
900280f2:	e7c6      	b.n	90028082 <_printf_common+0x3e>
900280f4:	18e1      	adds	r1, r4, r3
900280f6:	1c5a      	adds	r2, r3, #1
900280f8:	2030      	movs	r0, #48	; 0x30
900280fa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
900280fe:	4422      	add	r2, r4
90028100:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90028104:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90028108:	3302      	adds	r3, #2
9002810a:	e7c7      	b.n	9002809c <_printf_common+0x58>
9002810c:	2301      	movs	r3, #1
9002810e:	4622      	mov	r2, r4
90028110:	4649      	mov	r1, r9
90028112:	4638      	mov	r0, r7
90028114:	47c0      	blx	r8
90028116:	3001      	adds	r0, #1
90028118:	d0e6      	beq.n	900280e8 <_printf_common+0xa4>
9002811a:	3601      	adds	r6, #1
9002811c:	e7d9      	b.n	900280d2 <_printf_common+0x8e>
	...

90028120 <_printf_i>:
90028120:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90028124:	7e0f      	ldrb	r7, [r1, #24]
90028126:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90028128:	2f78      	cmp	r7, #120	; 0x78
9002812a:	4691      	mov	r9, r2
9002812c:	4680      	mov	r8, r0
9002812e:	460c      	mov	r4, r1
90028130:	469a      	mov	sl, r3
90028132:	f101 0243 	add.w	r2, r1, #67	; 0x43
90028136:	d807      	bhi.n	90028148 <_printf_i+0x28>
90028138:	2f62      	cmp	r7, #98	; 0x62
9002813a:	d80a      	bhi.n	90028152 <_printf_i+0x32>
9002813c:	2f00      	cmp	r7, #0
9002813e:	f000 80d4 	beq.w	900282ea <_printf_i+0x1ca>
90028142:	2f58      	cmp	r7, #88	; 0x58
90028144:	f000 80c0 	beq.w	900282c8 <_printf_i+0x1a8>
90028148:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002814c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90028150:	e03a      	b.n	900281c8 <_printf_i+0xa8>
90028152:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90028156:	2b15      	cmp	r3, #21
90028158:	d8f6      	bhi.n	90028148 <_printf_i+0x28>
9002815a:	a101      	add	r1, pc, #4	; (adr r1, 90028160 <_printf_i+0x40>)
9002815c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90028160:	900281b9 	.word	0x900281b9
90028164:	900281cd 	.word	0x900281cd
90028168:	90028149 	.word	0x90028149
9002816c:	90028149 	.word	0x90028149
90028170:	90028149 	.word	0x90028149
90028174:	90028149 	.word	0x90028149
90028178:	900281cd 	.word	0x900281cd
9002817c:	90028149 	.word	0x90028149
90028180:	90028149 	.word	0x90028149
90028184:	90028149 	.word	0x90028149
90028188:	90028149 	.word	0x90028149
9002818c:	900282d1 	.word	0x900282d1
90028190:	900281f9 	.word	0x900281f9
90028194:	9002828b 	.word	0x9002828b
90028198:	90028149 	.word	0x90028149
9002819c:	90028149 	.word	0x90028149
900281a0:	900282f3 	.word	0x900282f3
900281a4:	90028149 	.word	0x90028149
900281a8:	900281f9 	.word	0x900281f9
900281ac:	90028149 	.word	0x90028149
900281b0:	90028149 	.word	0x90028149
900281b4:	90028293 	.word	0x90028293
900281b8:	682b      	ldr	r3, [r5, #0]
900281ba:	1d1a      	adds	r2, r3, #4
900281bc:	681b      	ldr	r3, [r3, #0]
900281be:	602a      	str	r2, [r5, #0]
900281c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
900281c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
900281c8:	2301      	movs	r3, #1
900281ca:	e09f      	b.n	9002830c <_printf_i+0x1ec>
900281cc:	6820      	ldr	r0, [r4, #0]
900281ce:	682b      	ldr	r3, [r5, #0]
900281d0:	0607      	lsls	r7, r0, #24
900281d2:	f103 0104 	add.w	r1, r3, #4
900281d6:	6029      	str	r1, [r5, #0]
900281d8:	d501      	bpl.n	900281de <_printf_i+0xbe>
900281da:	681e      	ldr	r6, [r3, #0]
900281dc:	e003      	b.n	900281e6 <_printf_i+0xc6>
900281de:	0646      	lsls	r6, r0, #25
900281e0:	d5fb      	bpl.n	900281da <_printf_i+0xba>
900281e2:	f9b3 6000 	ldrsh.w	r6, [r3]
900281e6:	2e00      	cmp	r6, #0
900281e8:	da03      	bge.n	900281f2 <_printf_i+0xd2>
900281ea:	232d      	movs	r3, #45	; 0x2d
900281ec:	4276      	negs	r6, r6
900281ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
900281f2:	485a      	ldr	r0, [pc, #360]	; (9002835c <_printf_i+0x23c>)
900281f4:	230a      	movs	r3, #10
900281f6:	e012      	b.n	9002821e <_printf_i+0xfe>
900281f8:	682b      	ldr	r3, [r5, #0]
900281fa:	6820      	ldr	r0, [r4, #0]
900281fc:	1d19      	adds	r1, r3, #4
900281fe:	6029      	str	r1, [r5, #0]
90028200:	0605      	lsls	r5, r0, #24
90028202:	d501      	bpl.n	90028208 <_printf_i+0xe8>
90028204:	681e      	ldr	r6, [r3, #0]
90028206:	e002      	b.n	9002820e <_printf_i+0xee>
90028208:	0641      	lsls	r1, r0, #25
9002820a:	d5fb      	bpl.n	90028204 <_printf_i+0xe4>
9002820c:	881e      	ldrh	r6, [r3, #0]
9002820e:	4853      	ldr	r0, [pc, #332]	; (9002835c <_printf_i+0x23c>)
90028210:	2f6f      	cmp	r7, #111	; 0x6f
90028212:	bf0c      	ite	eq
90028214:	2308      	moveq	r3, #8
90028216:	230a      	movne	r3, #10
90028218:	2100      	movs	r1, #0
9002821a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002821e:	6865      	ldr	r5, [r4, #4]
90028220:	60a5      	str	r5, [r4, #8]
90028222:	2d00      	cmp	r5, #0
90028224:	bfa2      	ittt	ge
90028226:	6821      	ldrge	r1, [r4, #0]
90028228:	f021 0104 	bicge.w	r1, r1, #4
9002822c:	6021      	strge	r1, [r4, #0]
9002822e:	b90e      	cbnz	r6, 90028234 <_printf_i+0x114>
90028230:	2d00      	cmp	r5, #0
90028232:	d04b      	beq.n	900282cc <_printf_i+0x1ac>
90028234:	4615      	mov	r5, r2
90028236:	fbb6 f1f3 	udiv	r1, r6, r3
9002823a:	fb03 6711 	mls	r7, r3, r1, r6
9002823e:	5dc7      	ldrb	r7, [r0, r7]
90028240:	f805 7d01 	strb.w	r7, [r5, #-1]!
90028244:	4637      	mov	r7, r6
90028246:	42bb      	cmp	r3, r7
90028248:	460e      	mov	r6, r1
9002824a:	d9f4      	bls.n	90028236 <_printf_i+0x116>
9002824c:	2b08      	cmp	r3, #8
9002824e:	d10b      	bne.n	90028268 <_printf_i+0x148>
90028250:	6823      	ldr	r3, [r4, #0]
90028252:	07de      	lsls	r6, r3, #31
90028254:	d508      	bpl.n	90028268 <_printf_i+0x148>
90028256:	6923      	ldr	r3, [r4, #16]
90028258:	6861      	ldr	r1, [r4, #4]
9002825a:	4299      	cmp	r1, r3
9002825c:	bfde      	ittt	le
9002825e:	2330      	movle	r3, #48	; 0x30
90028260:	f805 3c01 	strble.w	r3, [r5, #-1]
90028264:	f105 35ff 	addle.w	r5, r5, #4294967295
90028268:	1b52      	subs	r2, r2, r5
9002826a:	6122      	str	r2, [r4, #16]
9002826c:	f8cd a000 	str.w	sl, [sp]
90028270:	464b      	mov	r3, r9
90028272:	aa03      	add	r2, sp, #12
90028274:	4621      	mov	r1, r4
90028276:	4640      	mov	r0, r8
90028278:	f7ff fee4 	bl	90028044 <_printf_common>
9002827c:	3001      	adds	r0, #1
9002827e:	d14a      	bne.n	90028316 <_printf_i+0x1f6>
90028280:	f04f 30ff 	mov.w	r0, #4294967295
90028284:	b004      	add	sp, #16
90028286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002828a:	6823      	ldr	r3, [r4, #0]
9002828c:	f043 0320 	orr.w	r3, r3, #32
90028290:	6023      	str	r3, [r4, #0]
90028292:	4833      	ldr	r0, [pc, #204]	; (90028360 <_printf_i+0x240>)
90028294:	2778      	movs	r7, #120	; 0x78
90028296:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002829a:	6823      	ldr	r3, [r4, #0]
9002829c:	6829      	ldr	r1, [r5, #0]
9002829e:	061f      	lsls	r7, r3, #24
900282a0:	f851 6b04 	ldr.w	r6, [r1], #4
900282a4:	d402      	bmi.n	900282ac <_printf_i+0x18c>
900282a6:	065f      	lsls	r7, r3, #25
900282a8:	bf48      	it	mi
900282aa:	b2b6      	uxthmi	r6, r6
900282ac:	07df      	lsls	r7, r3, #31
900282ae:	bf48      	it	mi
900282b0:	f043 0320 	orrmi.w	r3, r3, #32
900282b4:	6029      	str	r1, [r5, #0]
900282b6:	bf48      	it	mi
900282b8:	6023      	strmi	r3, [r4, #0]
900282ba:	b91e      	cbnz	r6, 900282c4 <_printf_i+0x1a4>
900282bc:	6823      	ldr	r3, [r4, #0]
900282be:	f023 0320 	bic.w	r3, r3, #32
900282c2:	6023      	str	r3, [r4, #0]
900282c4:	2310      	movs	r3, #16
900282c6:	e7a7      	b.n	90028218 <_printf_i+0xf8>
900282c8:	4824      	ldr	r0, [pc, #144]	; (9002835c <_printf_i+0x23c>)
900282ca:	e7e4      	b.n	90028296 <_printf_i+0x176>
900282cc:	4615      	mov	r5, r2
900282ce:	e7bd      	b.n	9002824c <_printf_i+0x12c>
900282d0:	682b      	ldr	r3, [r5, #0]
900282d2:	6826      	ldr	r6, [r4, #0]
900282d4:	6961      	ldr	r1, [r4, #20]
900282d6:	1d18      	adds	r0, r3, #4
900282d8:	6028      	str	r0, [r5, #0]
900282da:	0635      	lsls	r5, r6, #24
900282dc:	681b      	ldr	r3, [r3, #0]
900282de:	d501      	bpl.n	900282e4 <_printf_i+0x1c4>
900282e0:	6019      	str	r1, [r3, #0]
900282e2:	e002      	b.n	900282ea <_printf_i+0x1ca>
900282e4:	0670      	lsls	r0, r6, #25
900282e6:	d5fb      	bpl.n	900282e0 <_printf_i+0x1c0>
900282e8:	8019      	strh	r1, [r3, #0]
900282ea:	2300      	movs	r3, #0
900282ec:	6123      	str	r3, [r4, #16]
900282ee:	4615      	mov	r5, r2
900282f0:	e7bc      	b.n	9002826c <_printf_i+0x14c>
900282f2:	682b      	ldr	r3, [r5, #0]
900282f4:	1d1a      	adds	r2, r3, #4
900282f6:	602a      	str	r2, [r5, #0]
900282f8:	681d      	ldr	r5, [r3, #0]
900282fa:	6862      	ldr	r2, [r4, #4]
900282fc:	2100      	movs	r1, #0
900282fe:	4628      	mov	r0, r5
90028300:	f7d7 ffee 	bl	900002e0 <memchr>
90028304:	b108      	cbz	r0, 9002830a <_printf_i+0x1ea>
90028306:	1b40      	subs	r0, r0, r5
90028308:	6060      	str	r0, [r4, #4]
9002830a:	6863      	ldr	r3, [r4, #4]
9002830c:	6123      	str	r3, [r4, #16]
9002830e:	2300      	movs	r3, #0
90028310:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90028314:	e7aa      	b.n	9002826c <_printf_i+0x14c>
90028316:	6923      	ldr	r3, [r4, #16]
90028318:	462a      	mov	r2, r5
9002831a:	4649      	mov	r1, r9
9002831c:	4640      	mov	r0, r8
9002831e:	47d0      	blx	sl
90028320:	3001      	adds	r0, #1
90028322:	d0ad      	beq.n	90028280 <_printf_i+0x160>
90028324:	6823      	ldr	r3, [r4, #0]
90028326:	079b      	lsls	r3, r3, #30
90028328:	d413      	bmi.n	90028352 <_printf_i+0x232>
9002832a:	68e0      	ldr	r0, [r4, #12]
9002832c:	9b03      	ldr	r3, [sp, #12]
9002832e:	4298      	cmp	r0, r3
90028330:	bfb8      	it	lt
90028332:	4618      	movlt	r0, r3
90028334:	e7a6      	b.n	90028284 <_printf_i+0x164>
90028336:	2301      	movs	r3, #1
90028338:	4632      	mov	r2, r6
9002833a:	4649      	mov	r1, r9
9002833c:	4640      	mov	r0, r8
9002833e:	47d0      	blx	sl
90028340:	3001      	adds	r0, #1
90028342:	d09d      	beq.n	90028280 <_printf_i+0x160>
90028344:	3501      	adds	r5, #1
90028346:	68e3      	ldr	r3, [r4, #12]
90028348:	9903      	ldr	r1, [sp, #12]
9002834a:	1a5b      	subs	r3, r3, r1
9002834c:	42ab      	cmp	r3, r5
9002834e:	dcf2      	bgt.n	90028336 <_printf_i+0x216>
90028350:	e7eb      	b.n	9002832a <_printf_i+0x20a>
90028352:	2500      	movs	r5, #0
90028354:	f104 0619 	add.w	r6, r4, #25
90028358:	e7f5      	b.n	90028346 <_printf_i+0x226>
9002835a:	bf00      	nop
9002835c:	9002bd6d 	.word	0x9002bd6d
90028360:	9002bd7e 	.word	0x9002bd7e

90028364 <__sflush_r>:
90028364:	898a      	ldrh	r2, [r1, #12]
90028366:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002836a:	4605      	mov	r5, r0
9002836c:	0710      	lsls	r0, r2, #28
9002836e:	460c      	mov	r4, r1
90028370:	d458      	bmi.n	90028424 <__sflush_r+0xc0>
90028372:	684b      	ldr	r3, [r1, #4]
90028374:	2b00      	cmp	r3, #0
90028376:	dc05      	bgt.n	90028384 <__sflush_r+0x20>
90028378:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002837a:	2b00      	cmp	r3, #0
9002837c:	dc02      	bgt.n	90028384 <__sflush_r+0x20>
9002837e:	2000      	movs	r0, #0
90028380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028384:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028386:	2e00      	cmp	r6, #0
90028388:	d0f9      	beq.n	9002837e <__sflush_r+0x1a>
9002838a:	2300      	movs	r3, #0
9002838c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90028390:	682f      	ldr	r7, [r5, #0]
90028392:	6a21      	ldr	r1, [r4, #32]
90028394:	602b      	str	r3, [r5, #0]
90028396:	d032      	beq.n	900283fe <__sflush_r+0x9a>
90028398:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002839a:	89a3      	ldrh	r3, [r4, #12]
9002839c:	075a      	lsls	r2, r3, #29
9002839e:	d505      	bpl.n	900283ac <__sflush_r+0x48>
900283a0:	6863      	ldr	r3, [r4, #4]
900283a2:	1ac0      	subs	r0, r0, r3
900283a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
900283a6:	b10b      	cbz	r3, 900283ac <__sflush_r+0x48>
900283a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
900283aa:	1ac0      	subs	r0, r0, r3
900283ac:	2300      	movs	r3, #0
900283ae:	4602      	mov	r2, r0
900283b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
900283b2:	6a21      	ldr	r1, [r4, #32]
900283b4:	4628      	mov	r0, r5
900283b6:	47b0      	blx	r6
900283b8:	1c43      	adds	r3, r0, #1
900283ba:	89a3      	ldrh	r3, [r4, #12]
900283bc:	d106      	bne.n	900283cc <__sflush_r+0x68>
900283be:	6829      	ldr	r1, [r5, #0]
900283c0:	291d      	cmp	r1, #29
900283c2:	d82b      	bhi.n	9002841c <__sflush_r+0xb8>
900283c4:	4a29      	ldr	r2, [pc, #164]	; (9002846c <__sflush_r+0x108>)
900283c6:	410a      	asrs	r2, r1
900283c8:	07d6      	lsls	r6, r2, #31
900283ca:	d427      	bmi.n	9002841c <__sflush_r+0xb8>
900283cc:	2200      	movs	r2, #0
900283ce:	6062      	str	r2, [r4, #4]
900283d0:	04d9      	lsls	r1, r3, #19
900283d2:	6922      	ldr	r2, [r4, #16]
900283d4:	6022      	str	r2, [r4, #0]
900283d6:	d504      	bpl.n	900283e2 <__sflush_r+0x7e>
900283d8:	1c42      	adds	r2, r0, #1
900283da:	d101      	bne.n	900283e0 <__sflush_r+0x7c>
900283dc:	682b      	ldr	r3, [r5, #0]
900283de:	b903      	cbnz	r3, 900283e2 <__sflush_r+0x7e>
900283e0:	6560      	str	r0, [r4, #84]	; 0x54
900283e2:	6b61      	ldr	r1, [r4, #52]	; 0x34
900283e4:	602f      	str	r7, [r5, #0]
900283e6:	2900      	cmp	r1, #0
900283e8:	d0c9      	beq.n	9002837e <__sflush_r+0x1a>
900283ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
900283ee:	4299      	cmp	r1, r3
900283f0:	d002      	beq.n	900283f8 <__sflush_r+0x94>
900283f2:	4628      	mov	r0, r5
900283f4:	f7ff fc96 	bl	90027d24 <_free_r>
900283f8:	2000      	movs	r0, #0
900283fa:	6360      	str	r0, [r4, #52]	; 0x34
900283fc:	e7c0      	b.n	90028380 <__sflush_r+0x1c>
900283fe:	2301      	movs	r3, #1
90028400:	4628      	mov	r0, r5
90028402:	47b0      	blx	r6
90028404:	1c41      	adds	r1, r0, #1
90028406:	d1c8      	bne.n	9002839a <__sflush_r+0x36>
90028408:	682b      	ldr	r3, [r5, #0]
9002840a:	2b00      	cmp	r3, #0
9002840c:	d0c5      	beq.n	9002839a <__sflush_r+0x36>
9002840e:	2b1d      	cmp	r3, #29
90028410:	d001      	beq.n	90028416 <__sflush_r+0xb2>
90028412:	2b16      	cmp	r3, #22
90028414:	d101      	bne.n	9002841a <__sflush_r+0xb6>
90028416:	602f      	str	r7, [r5, #0]
90028418:	e7b1      	b.n	9002837e <__sflush_r+0x1a>
9002841a:	89a3      	ldrh	r3, [r4, #12]
9002841c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90028420:	81a3      	strh	r3, [r4, #12]
90028422:	e7ad      	b.n	90028380 <__sflush_r+0x1c>
90028424:	690f      	ldr	r7, [r1, #16]
90028426:	2f00      	cmp	r7, #0
90028428:	d0a9      	beq.n	9002837e <__sflush_r+0x1a>
9002842a:	0793      	lsls	r3, r2, #30
9002842c:	680e      	ldr	r6, [r1, #0]
9002842e:	bf08      	it	eq
90028430:	694b      	ldreq	r3, [r1, #20]
90028432:	600f      	str	r7, [r1, #0]
90028434:	bf18      	it	ne
90028436:	2300      	movne	r3, #0
90028438:	eba6 0807 	sub.w	r8, r6, r7
9002843c:	608b      	str	r3, [r1, #8]
9002843e:	f1b8 0f00 	cmp.w	r8, #0
90028442:	dd9c      	ble.n	9002837e <__sflush_r+0x1a>
90028444:	6a21      	ldr	r1, [r4, #32]
90028446:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90028448:	4643      	mov	r3, r8
9002844a:	463a      	mov	r2, r7
9002844c:	4628      	mov	r0, r5
9002844e:	47b0      	blx	r6
90028450:	2800      	cmp	r0, #0
90028452:	dc06      	bgt.n	90028462 <__sflush_r+0xfe>
90028454:	89a3      	ldrh	r3, [r4, #12]
90028456:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002845a:	81a3      	strh	r3, [r4, #12]
9002845c:	f04f 30ff 	mov.w	r0, #4294967295
90028460:	e78e      	b.n	90028380 <__sflush_r+0x1c>
90028462:	4407      	add	r7, r0
90028464:	eba8 0800 	sub.w	r8, r8, r0
90028468:	e7e9      	b.n	9002843e <__sflush_r+0xda>
9002846a:	bf00      	nop
9002846c:	dfbffffe 	.word	0xdfbffffe

90028470 <_fflush_r>:
90028470:	b538      	push	{r3, r4, r5, lr}
90028472:	690b      	ldr	r3, [r1, #16]
90028474:	4605      	mov	r5, r0
90028476:	460c      	mov	r4, r1
90028478:	b913      	cbnz	r3, 90028480 <_fflush_r+0x10>
9002847a:	2500      	movs	r5, #0
9002847c:	4628      	mov	r0, r5
9002847e:	bd38      	pop	{r3, r4, r5, pc}
90028480:	b118      	cbz	r0, 9002848a <_fflush_r+0x1a>
90028482:	6a03      	ldr	r3, [r0, #32]
90028484:	b90b      	cbnz	r3, 9002848a <_fflush_r+0x1a>
90028486:	f7ff f9e1 	bl	9002784c <__sinit>
9002848a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002848e:	2b00      	cmp	r3, #0
90028490:	d0f3      	beq.n	9002847a <_fflush_r+0xa>
90028492:	6e62      	ldr	r2, [r4, #100]	; 0x64
90028494:	07d0      	lsls	r0, r2, #31
90028496:	d404      	bmi.n	900284a2 <_fflush_r+0x32>
90028498:	0599      	lsls	r1, r3, #22
9002849a:	d402      	bmi.n	900284a2 <_fflush_r+0x32>
9002849c:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002849e:	f7ff fbd3 	bl	90027c48 <__retarget_lock_acquire_recursive>
900284a2:	4628      	mov	r0, r5
900284a4:	4621      	mov	r1, r4
900284a6:	f7ff ff5d 	bl	90028364 <__sflush_r>
900284aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
900284ac:	07da      	lsls	r2, r3, #31
900284ae:	4605      	mov	r5, r0
900284b0:	d4e4      	bmi.n	9002847c <_fflush_r+0xc>
900284b2:	89a3      	ldrh	r3, [r4, #12]
900284b4:	059b      	lsls	r3, r3, #22
900284b6:	d4e1      	bmi.n	9002847c <_fflush_r+0xc>
900284b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
900284ba:	f7ff fbc6 	bl	90027c4a <__retarget_lock_release_recursive>
900284be:	e7dd      	b.n	9002847c <_fflush_r+0xc>

900284c0 <__swhatbuf_r>:
900284c0:	b570      	push	{r4, r5, r6, lr}
900284c2:	460c      	mov	r4, r1
900284c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900284c8:	2900      	cmp	r1, #0
900284ca:	b096      	sub	sp, #88	; 0x58
900284cc:	4615      	mov	r5, r2
900284ce:	461e      	mov	r6, r3
900284d0:	da0d      	bge.n	900284ee <__swhatbuf_r+0x2e>
900284d2:	89a3      	ldrh	r3, [r4, #12]
900284d4:	f013 0f80 	tst.w	r3, #128	; 0x80
900284d8:	f04f 0100 	mov.w	r1, #0
900284dc:	bf0c      	ite	eq
900284de:	f44f 6380 	moveq.w	r3, #1024	; 0x400
900284e2:	2340      	movne	r3, #64	; 0x40
900284e4:	2000      	movs	r0, #0
900284e6:	6031      	str	r1, [r6, #0]
900284e8:	602b      	str	r3, [r5, #0]
900284ea:	b016      	add	sp, #88	; 0x58
900284ec:	bd70      	pop	{r4, r5, r6, pc}
900284ee:	466a      	mov	r2, sp
900284f0:	f000 f848 	bl	90028584 <_fstat_r>
900284f4:	2800      	cmp	r0, #0
900284f6:	dbec      	blt.n	900284d2 <__swhatbuf_r+0x12>
900284f8:	9901      	ldr	r1, [sp, #4]
900284fa:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
900284fe:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
90028502:	4259      	negs	r1, r3
90028504:	4159      	adcs	r1, r3
90028506:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002850a:	e7eb      	b.n	900284e4 <__swhatbuf_r+0x24>

9002850c <__smakebuf_r>:
9002850c:	898b      	ldrh	r3, [r1, #12]
9002850e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90028510:	079d      	lsls	r5, r3, #30
90028512:	4606      	mov	r6, r0
90028514:	460c      	mov	r4, r1
90028516:	d507      	bpl.n	90028528 <__smakebuf_r+0x1c>
90028518:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002851c:	6023      	str	r3, [r4, #0]
9002851e:	6123      	str	r3, [r4, #16]
90028520:	2301      	movs	r3, #1
90028522:	6163      	str	r3, [r4, #20]
90028524:	b002      	add	sp, #8
90028526:	bd70      	pop	{r4, r5, r6, pc}
90028528:	ab01      	add	r3, sp, #4
9002852a:	466a      	mov	r2, sp
9002852c:	f7ff ffc8 	bl	900284c0 <__swhatbuf_r>
90028530:	9900      	ldr	r1, [sp, #0]
90028532:	4605      	mov	r5, r0
90028534:	4630      	mov	r0, r6
90028536:	f7ff f875 	bl	90027624 <_malloc_r>
9002853a:	b948      	cbnz	r0, 90028550 <__smakebuf_r+0x44>
9002853c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028540:	059a      	lsls	r2, r3, #22
90028542:	d4ef      	bmi.n	90028524 <__smakebuf_r+0x18>
90028544:	f023 0303 	bic.w	r3, r3, #3
90028548:	f043 0302 	orr.w	r3, r3, #2
9002854c:	81a3      	strh	r3, [r4, #12]
9002854e:	e7e3      	b.n	90028518 <__smakebuf_r+0xc>
90028550:	89a3      	ldrh	r3, [r4, #12]
90028552:	6020      	str	r0, [r4, #0]
90028554:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90028558:	81a3      	strh	r3, [r4, #12]
9002855a:	9b00      	ldr	r3, [sp, #0]
9002855c:	6163      	str	r3, [r4, #20]
9002855e:	9b01      	ldr	r3, [sp, #4]
90028560:	6120      	str	r0, [r4, #16]
90028562:	b15b      	cbz	r3, 9002857c <__smakebuf_r+0x70>
90028564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028568:	4630      	mov	r0, r6
9002856a:	f000 f81d 	bl	900285a8 <_isatty_r>
9002856e:	b128      	cbz	r0, 9002857c <__smakebuf_r+0x70>
90028570:	89a3      	ldrh	r3, [r4, #12]
90028572:	f023 0303 	bic.w	r3, r3, #3
90028576:	f043 0301 	orr.w	r3, r3, #1
9002857a:	81a3      	strh	r3, [r4, #12]
9002857c:	89a3      	ldrh	r3, [r4, #12]
9002857e:	431d      	orrs	r5, r3
90028580:	81a5      	strh	r5, [r4, #12]
90028582:	e7cf      	b.n	90028524 <__smakebuf_r+0x18>

90028584 <_fstat_r>:
90028584:	b538      	push	{r3, r4, r5, lr}
90028586:	4d07      	ldr	r5, [pc, #28]	; (900285a4 <_fstat_r+0x20>)
90028588:	2300      	movs	r3, #0
9002858a:	4604      	mov	r4, r0
9002858c:	4608      	mov	r0, r1
9002858e:	4611      	mov	r1, r2
90028590:	602b      	str	r3, [r5, #0]
90028592:	f7da ffd5 	bl	90003540 <_fstat>
90028596:	1c43      	adds	r3, r0, #1
90028598:	d102      	bne.n	900285a0 <_fstat_r+0x1c>
9002859a:	682b      	ldr	r3, [r5, #0]
9002859c:	b103      	cbz	r3, 900285a0 <_fstat_r+0x1c>
9002859e:	6023      	str	r3, [r4, #0]
900285a0:	bd38      	pop	{r3, r4, r5, pc}
900285a2:	bf00      	nop
900285a4:	2403a19c 	.word	0x2403a19c

900285a8 <_isatty_r>:
900285a8:	b538      	push	{r3, r4, r5, lr}
900285aa:	4d06      	ldr	r5, [pc, #24]	; (900285c4 <_isatty_r+0x1c>)
900285ac:	2300      	movs	r3, #0
900285ae:	4604      	mov	r4, r0
900285b0:	4608      	mov	r0, r1
900285b2:	602b      	str	r3, [r5, #0]
900285b4:	f7da ffca 	bl	9000354c <_isatty>
900285b8:	1c43      	adds	r3, r0, #1
900285ba:	d102      	bne.n	900285c2 <_isatty_r+0x1a>
900285bc:	682b      	ldr	r3, [r5, #0]
900285be:	b103      	cbz	r3, 900285c2 <_isatty_r+0x1a>
900285c0:	6023      	str	r3, [r4, #0]
900285c2:	bd38      	pop	{r3, r4, r5, pc}
900285c4:	2403a19c 	.word	0x2403a19c

900285c8 <_sbrk>:
900285c8:	4a04      	ldr	r2, [pc, #16]	; (900285dc <_sbrk+0x14>)
900285ca:	6811      	ldr	r1, [r2, #0]
900285cc:	4603      	mov	r3, r0
900285ce:	b909      	cbnz	r1, 900285d4 <_sbrk+0xc>
900285d0:	4903      	ldr	r1, [pc, #12]	; (900285e0 <_sbrk+0x18>)
900285d2:	6011      	str	r1, [r2, #0]
900285d4:	6810      	ldr	r0, [r2, #0]
900285d6:	4403      	add	r3, r0
900285d8:	6013      	str	r3, [r2, #0]
900285da:	4770      	bx	lr
900285dc:	2403a33c 	.word	0x2403a33c
900285e0:	2403a340 	.word	0x2403a340

900285e4 <_init>:
900285e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900285e6:	bf00      	nop
900285e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
900285ea:	bc08      	pop	{r3}
900285ec:	469e      	mov	lr, r3
900285ee:	4770      	bx	lr

900285f0 <_fini>:
900285f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900285f2:	bf00      	nop
900285f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
900285f6:	bc08      	pop	{r3}
900285f8:	469e      	mov	lr, r3
900285fa:	4770      	bx	lr
